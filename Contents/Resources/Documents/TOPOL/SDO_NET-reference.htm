<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-106841"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/SDO_NET%20Package%20Subprograms"></a><title>SDO_NET Package Subprograms</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="ADD_CHILD_FEATURE procedure, SDO_NET package, ADD_CHILD_FEATURE, ADD_CHILD_FEATURES procedure, ADD_CHILD_FEATURES, ADD_FEATURE procedure, ADD_FEATURE, ADD_FEATURE_ELEMENT procedure, ADD_FEATURE_ELEMENT, ADD_FEATURE_ELEMENTS procedure, ADD_FEATURE_ELEMENTS, ADD_FEATURE_LAYER procedure, ADD_FEATURE_LAYER, COMPUTE_PATH_GEOMETRY procedure, COMPUTE_PATH_GEOMETRY, geometry, computing for a path, paths, computing the geometry, COPY_NETWORK procedure, COPY_NETWORK, CREATE_LINK_TABLE procedure, CREATE_LINK_TABLE, CREATE_LOGICAL_NETWORK procedure, CREATE_LOGICAL_NETWORK, CREATE_LRS_NETWORK procedure, CREATE_LRS_NETWORK, CREATE_LRS_TABLE procedure, CREATE_LRS_TABLE, CREATE_NODE_TABLE procedure, CREATE_NODE_TABLE, CREATE_PARTITION_TABLE procedure, CREATE_PARTITION_TABLE, CREATE_PATH_LINK_TABLE procedure, CREATE_PATH_LINK_TABLE, CREATE_PATH_TABLE procedure, CREATE_PATH_TABLE, CREATE_SDO_NETWORK procedure, CREATE_SDO_NETWORK, CREATE_SUBPATH_TABLE procedure, CREATE_SUBPATH_TABLE, subpaths, CREATE_SUBPATH_TABLE procedure, CREATE_TOPO_NETWORK procedure, CREATE_TOPO_NETWORK, DELETE_CHILD_FEATURES procedure, DELETE_CHILD_FEATURES, DELETE_CHILD_FEATURES_AT procedure, DELETE_CHILD_FEATURES_AT, DELETE_DANGLING_FEATURES procedure, DELETE_DANGLING_FEATURES, dangling features, deleting, DELETE_DANGLING_LINKS procedure, DELETE_DANGLING_LINKS, dangling links, DELETE_DANGLING_NODES procedure, DELETE_DANGLING_NODES, dangling nodes, DELETE_FEATURE_ELEMENTS procedure, DELETE_FEATURE_ELEMENTS, DELETE_FEATURE_ELEMENTS_AT procedure, DELETE_FEATURE_ELEMENTS_AT, DELETE_FEATURES procedure, DELETE_FEATURES, DELETE_LINK procedure, DELETE_LINK, links, DELETE_NODE procedure, DELETE_NODE, nodes, DELETE_PATH procedure, DELETE_PATH, DELETE_PHANTOM_FEATURES procedure, DELETE_PHANTOM_FEATURES, phantom features, DELETE_SUBPATH procedure, DELETE_SUBPATH, DEREGISTER_CONSTRAINT procedure, DEREGISTER_CONSTRAINT, network constraints, deregistering, FEATURE_LAYER procedure, FEATURE_LAYER, DROP_NETWORK procedure, DROP_NETWORK, FIND_CONNECTED_COMPONENTS procedure, FIND_CONNECTED_COMPONENTS, connected components, finding, GENERATE_NODE_LEVELS procedure, GENERATE_NODE_LEVELS, generating node levels for multilevel network, GENERATE_PARTITION_BLOB procedure, GENERATE_PARTITION_BLOB, partition BLOB, generating, GENERATE_PARTITION_BLOBS procedure, GENERATE_PARTITION_BLOBS, partition BLOBs, GET_CHILD_FEATURE_IDS function, GET_CHILD_FEATURE_IDS, GET_CHILD_LINKS function, GET_CHILD_LINKS, GET_CHILD_NODES function, GET_CHILD_NODES, GET_DANGLING_FEATURES function, SDO_NET package, GET_DANGLING_FEATURES, getting, GET_DANGLING_LINKS function, GET_DANGLING_LINKS, GET_DANGLING_NODES function, GET_DANGLING_NODES, GET_FEATURE_ELEMENTS function, GET_FEATURE_ELEMENTS, GET_FEATURE_LAYER_ID function, GET_FEATURE_LAYER_ID, GET_FEATURES_ON_LINKS function, GET_FEATURES_ON_LINKS, GET_FEATURES_ON_NODES function, GET_FEATURES_ON_NODES, GET_GEOMETRY_TYPE function, GET_GEOMETRY_TYPE, GET_IN_LINKS function, GET_IN_LINKS, inbound links, getting link ID numbers, GET_INVALID_LINKS function, GET_INVALID_LINKS, invalid links, invalid, GET_INVALID_NODES function, GET_INVALID_NODES, invalid nodes, GET_INVALID_PATHS function, GET_INVALID_PATHS, invalid paths, GET_ISOLATED_NODES function, GET_ISOLATED_NODES, isolated nodes (network), isolated (network), GET_LINK_COST_COLUMN function, GET_LINK_COST_COLUMN, GET_LINK_DIRECTION function, GET_LINK_DIRECTION, link direction, determining if directed, GET_LINK_GEOM_COLUMN function, GET_LINK_GEOM_COLUMN, GET_LINK_GEOMETRY function, GET_LINK_GEOMETRY, link geometry, getting geometry for, GET_LINK_TABLE_NAME function, GET_LINK_TABLE_NAME, GET_LINKS_IN_PATH function, GET_LINKS_IN_PATH, GET_LRS_GEOM_COLUMN function, GET_LRS_GEOM_COLUMN, GET_LRS_LINK_GEOMETRY function, GET_LRS_LINK_GEOMETRY, GET_LRS_NODE_GEOMETRY function, GET_LRS_NODE_GEOMETRY, GET_LRS_TABLE_NAME function, GET_LRS_TABLE_NAME, GET_NETWORK_TYPE function, GET_NETWORK_TYPE, GET_NO_OF_HIERARCHY_LEVELS function, GET_NO_OF_HIERARCHY_LEVELS, GET_NO_OF_LINKS function, GET_NO_OF_LINKS, GET_NO_OF_NODES function, GET_NO_OF_NODES, getting number of, GET_NODE_DEGREE function, GET_NODE_DEGREE, GET_NODE_GEOM_COLUMN function, GET_NODE_GEOM_COLUMN, GET_NODE_GEOMETRY function, GET_NODE_GEOMETRY, node geometry, getting geometry, GET_NODE_IN_DEGREE function, GET_NODE_IN_DEGREE, getting number of for node, GET_NODE_OUT_DEGREE function, GET_NODE_OUT_DEGREE, outbound links, GET_NODE_TABLE_NAME function, GET_NODE_TABLE_NAME, GET_OUT_LINKS function, GET_OUT_LINKS, GET_PARENT_FEATURE_IDS function, GET_PARENT_FEATURE_IDS, GET_PARTITION_SIZE function, GET_PARTITION_SIZE, partition size, GET_PATH_GEOM_COLUMN function, GET_PATH_GEOM_COLUMN, GET_PATH_TABLE_NAME function, GET_PATH_TABLE_NAME, GET_PERCENTAGE function, GET_PERCENTAGE, getting percentage of point on link, GET_PHANTOM_FEATURES function, GET_PHANTOM_FEATURES, GET_PT function, GET_PT, points, getting point at percentage on link, IS_HIERARCHICAL function, IS_HIERARCHICAL, IS_LINK_IN_PATH function, IS_LINK_IN_PATH, IS_LOGICAL function, IS_LOGICAL, IS_NODE_IN_PATH function, IS_NODE_IN_PATH, IS_SPATIAL function, IS_SPATIAL, LOAD_CONFIG procedure, LOAD_CONFIG, partition cache, loading configuration, LOGICAL_PARTITION procedure, LOGICAL_PARTITION, partitions, partitioning a network, LOGICAL_POWERLAW_PARTITION procedure, LOGICAL_POWERLAW_PARTITION, power law networks, scale-free (power law) networks, LRS_GEOMETRY_NETWORK function, LRS_GEOMETRY_NETWORK, NETWORK_EXISTS function, NETWORK_EXISTS, POST_XML function, POST_XML, REGISTER_CONSTRAINT procedure, REGISTER_CONSTRAINT, registering, SDO_GEOMETRY_NETWORK function, SDO_GEOMETRY_NETWORK, SET_LOGGING_LEVEL procedure, SET_LOGGING_LEVEL, logging level, setting for network operations, SET_MAX_JAVA_HEAP_SIZE procedure, SET_MAX_JAVA_HEAP_SIZE, Java heap size, setting maximum, heap size (Java), SPATIAL_PARTITION procedure, SPATIAL_PARTITION, TOPO_GEOMETRY_NETWORK function, TOPO_GEOMETRY_NETWORK, UPDATE_FEATURE procedure, UPDATE_FEATURE, UPDATE_FEATURE_ELEMENT procedure, UPDATE_FEATURE_ELEMENT, VALIDATE_LINK_SCHEMA function, VALIDATE_LINK_SCHEMA, VALIDATE_LRS_SCHEMA function, VALIDATE_LRS_SCHEMA, VALIDATE_NETWORK function, VALIDATE_NETWORK, VALIDATE_NODE_SCHEMA function, VALIDATE_NODE_SCHEMA, VALIDATE_PARTITION_SCHEMA function, VALIDATE_PARTITION_SCHEMA, VALIDATE_PATH_SCHEMA function, VALIDATE_PATH_SCHEMA, VALIDATE_SUBPATH_SCHEMA function, VALIDATE_SUBPATH_SCHEMA"/>
<meta name="dcterms.created" content="2017-03-12T16:47:56Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Spatial and Graph Topology Data Model and Network Data Model Graph Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E53120-04"/>
<meta name="dcterms.isVersionOf" content="TOPOL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="network-data-model-graph-overview.htm" title="Previous" type="text/html"/>
<link rel="Next" href="index.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53120-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-1AE39EF8-CE36-4EC4-99D8-8678818E6E5E"></a> <span id="PAGE" style="display:none;">14/15</span> <!-- End Header -->
<a id="TOPOL400"></a>
<h1 id="TOPOL-GUID-1AE39EF8-CE36-4EC4-99D8-8678818E6E5E" class="sect1"><span class="enumeration_chapter">6</span> SDO_NET Package Subprograms</h1>
<div>
<p><a id="d39323e21" class="indexterm-anchor"></a><a id="d39323e25" class="indexterm-anchor"></a>The MDSYS.SDO_NET package contains subprograms (functions and procedures) for managing networks. To use the subprograms in this chapter, you must understand the conceptual information in <a href="network-data-model-graph-overview.htm#GUID-D34F1A0C-4D9B-4185-B965-43B218D3F382">Network Data Model Graph Overview</a>.</p>
<p>For a listing of the subprograms grouped in logical categories, see <a href="network-data-model-graph-overview.htm#GUID-981BD798-73F0-43D3-842B-0D5B2983B0DC">Network Data Model Graph PL/SQL Interface</a>. The rest of this chapter provides reference information about the subprograms, listed in alphabetical order.</p>
</div>
<a id="TOPOL1088"></a>
<div class="props_rev_3"><a id="GUID-ADDC9E38-112E-4136-A547-9AE696B4E4E6"></a>
<h2 id="TOPOL-GUID-ADDC9E38-112E-4136-A547-9AE696B4E4E6" class="sect2">SDO_NET.ADD_CHILD_FEATURE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.ADD_CHILD_FEATURE(
     parent_layer_id   IN UMBER,
     parent_feature_id IN NUMBER,
     child_layer_id    IN NUMBER,
     child_feature_id  IN SDO_NET_LAYER_FEAT,
     sequence_number   IN NUMBER DEFAULT NULL,
     check_integrity   IN BOOLEAN DEFAULT TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Associates a feature as a child feature of a specified parent feature.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106842"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ADDC9E38-112E-4136-A547-9AE696B4E4E6__GUID-997CC9BE-D871-4838-8C1A-9566DB754C7E"><!-- --></a>parent_layer_id</dt>
<dd>
<p>ID of the parent feature layer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106843"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ADDC9E38-112E-4136-A547-9AE696B4E4E6__GUID-9041E46E-F554-4159-AE4B-1A0FF90EC64A"><!-- --></a>parent_feature_id</dt>
<dd>
<p>ID of the feature that is to become the parent feature of the specified child feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106844"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ADDC9E38-112E-4136-A547-9AE696B4E4E6__GUID-B639566D-A209-40C3-B884-5CBFB13D5753"><!-- --></a>child_layer_id</dt>
<dd>
<p>ID of the child feature layer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106845"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ADDC9E38-112E-4136-A547-9AE696B4E4E6__GUID-68DA3642-376B-49B5-993F-5C0FFDFFF613"><!-- --></a>child_feature_id</dt>
<dd>
<p>ID of the feature to be associated as a child feature of the specified parent feature. (The SDO_NET_LAYER_FEAT type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106846"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ADDC9E38-112E-4136-A547-9AE696B4E4E6__GUID-43B17186-364C-4A37-B527-5D51CF9A87C1"><!-- --></a>sequence_number</dt>
<dd>
<p>Sequence number of the <code class="codeph">child_feature_id</code> feature in the child feature layer. If this parameter is null, a sequence number after the last current number is assigned.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106847"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ADDC9E38-112E-4136-A547-9AE696B4E4E6__GUID-01D579FB-FB6D-4CA9-A95E-CF765BEB1574"><!-- --></a>check_integrity</dt>
<dd>
<p><code class="codeph">TRUE</code> (the default) checks if the child feature exists; and if it does not exist, an error is generated. <code class="codeph">FALSE</code> does not check if the child feature exists.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The specified child feature must already exist.</p>
<p>To associate multiple features as child features, use the <a href="SDO_NET-reference.htm#GUID-51B0954C-1AB3-41AC-98CB-5EC4DF58C638">SDO_NET.ADD_CHILD_FEATURES</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example adds a child feature at sequence number 2.</p>
<pre dir="ltr">DECLARE
  parent_layer_id NUMBER;
  parent_feature_id NUMBER := 1;
  child_layer_id NUMBER;
  child_feature_id NUMBER := 3;
BEGIN
  parent_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;PARENT_LAYER&#39;);
  child_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  sdo_net.add_child_feature(parent_layer_id, parent_feature_id, child_layer_id, child_feature_id, 2, true);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1089"></a>
<div class="props_rev_3"><a id="GUID-51B0954C-1AB3-41AC-98CB-5EC4DF58C638"></a>
<h2 id="TOPOL-GUID-51B0954C-1AB3-41AC-98CB-5EC4DF58C638" class="sect2">SDO_NET.ADD_CHILD_FEATURES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.ADD_CHILD_FEATURES(
     parent_layer_id   IN NUMBER,
     parent_feature_id IN NUMBER,
     child_feature_ids IN SDO_NET_LAYER_FEAT_ARRAY,
     check_integrity   IN BOOLEAN DEFAULT TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Associates multiple features as child features of a specified parent feature.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106848"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-51B0954C-1AB3-41AC-98CB-5EC4DF58C638__GUID-D6CD9823-EC9E-4B8B-ACAC-1A5C6B735B77"><!-- --></a>parent_layer_id</dt>
<dd>
<p>ID of the parent feature layer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106849"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-51B0954C-1AB3-41AC-98CB-5EC4DF58C638__GUID-B9664618-F26C-42EA-9539-903BC0290BB0"><!-- --></a>parent_feature_id</dt>
<dd>
<p>ID of the feature that is to become the parent feature of the specified child features.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106850"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-51B0954C-1AB3-41AC-98CB-5EC4DF58C638__GUID-2F4FDC35-2F88-4C31-86E9-283BE0C01DDD"><!-- --></a>child_feature_ids</dt>
<dd>
<p>IDs of features to be associated as child features of the specified parent feature. (The SDO_NET_LAYER_FEAT_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106851"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-51B0954C-1AB3-41AC-98CB-5EC4DF58C638__GUID-BB456E73-E3B3-4E96-AFB2-6E0EB76CCBE7"><!-- --></a>check_integrity</dt>
<dd>
<p><code class="codeph">TRUE</code> (the default) checks if the child features exist; and if any do not exist, an error is generated. <code class="codeph">FALSE</code> does not check if the child features exist.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The specified child features must already exist.</p>
<p>To associate a single feature as a child feature, use the <a href="SDO_NET-reference.htm#GUID-ADDC9E38-112E-4136-A547-9AE696B4E4E6">SDO_NET.ADD_CHILD_FEATURE</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example adds two child features at the end of the parent feature.</p>
<pre dir="ltr">DECLARE
  parent_layer_id NUMBER;
  parent_feature_id NUMBER := 1;
  child_layer_id NUMBER;
  child_feature_ids SDO_NET_LAYER_FEAT_ARRAY := SDO_NET_LAYER_FEAT_ARRAY();
BEGIN
  parent_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;PARENT_LAYER&#39;);
  child_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  child_feature_ids.extend;
  child_feature_ids(1) := SDO_NET_LAYER_FEAT(child_layer_id, 4);
  child_feature_ids.extend;
  child_feature_ids(2) := SDO_NET_LAYER_FEAT(child_layer_id, 10);
  sdo_net.add_child_features(parent_layer_id, parent_feature_id, child_feature_ids, true);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1090"></a>
<div class="props_rev_3"><a id="GUID-B12C424E-1FDC-4E4C-BD0F-3D267F9C1F91"></a>
<h2 id="TOPOL-GUID-B12C424E-1FDC-4E4C-BD0F-3D267F9C1F91" class="sect2">SDO_NET.ADD_FEATURE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.ADD_FEATURE(
     feature_layer_id  IN NUMBER,
     feature_id        IN NUMBER,
     feature_elements  IN SDO_NET_FEAT_ELEM_ARRAY DEFAULT NULL,
     child_feature_ids IN SDO_NET_LAYER_FEAT_ARRAY DEFAULT NULL,
     check_integrity   IN BOOLEAN DEFAULT TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Adds a feature to a feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106852"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B12C424E-1FDC-4E4C-BD0F-3D267F9C1F91__GUID-F580717E-5742-48C0-80FD-AFE9C3334E09"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer to which to add the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106853"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B12C424E-1FDC-4E4C-BD0F-3D267F9C1F91__GUID-7204255E-1AD8-4982-BCF5-A6D5291732CF"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature to be added to the feature layer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106854"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B12C424E-1FDC-4E4C-BD0F-3D267F9C1F91__GUID-02D3D689-E338-4A8F-87EE-860079479F23"><!-- --></a>feature_elements</dt>
<dd>
<p>Feature elements of the feature to be added. If this parameter is null, no feature elements are defined for this feature. (The SDO_NET_FEAT_ELEM_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106855"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B12C424E-1FDC-4E4C-BD0F-3D267F9C1F91__GUID-71DC972A-E7EA-4E27-B1C6-1258626467E8"><!-- --></a>child_feature_ids</dt>
<dd>
<p>IDs of the child features of the feature that are to be added along with the feature. If this parameter is null, no child features are to be added. (The SDO_NET_LAYER_FEAT_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106856"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B12C424E-1FDC-4E4C-BD0F-3D267F9C1F91__GUID-C675B88A-0BA8-4430-918D-D78EFD249CE0"><!-- --></a>check_integrity</dt>
<dd>
<p><code class="codeph">TRUE</code> (the default) checks if the input network elements exist; and if any do not exist, an error is generated. <code class="codeph">FALSE</code> does not check if the input network elements exist.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To update a feature in a feature layer, use the <a href="SDO_NET-reference.htm#GUID-574EF300-A520-4396-ABF5-6FBF1ACA8996">SDO_NET.UPDATE_FEATURE</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example adds a feature associated with a point at 20% on link 1314.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  elements SDO_NET_FEAT_ELEM_ARRAY := SDO_NET_FEAT_ELEM_ARRAY();
  link_id NUMBER := 1314;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  elements.extend;
  elements(1) := SDO_NET_FEAT_ELEM(SDO_NET.FEAT_ELEM_TYPE_POL, link_id, 0.2, null);
  sdo_net.add_feature(feature_layer_id, feature_id, elements, null);  
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1091"></a>
<div class="props_rev_3"><a id="GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7"></a>
<h2 id="TOPOL-GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7" class="sect2">SDO_NET.ADD_FEATURE_ELEMENT</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.ADD_FEATURE_ELEMENT(
     feature_layer_id IN NUMBER,
     feature_id       IN NUMBER,
     feature_element  IN SDO_NET_FEAT_ELEM,
     sequence_number  IN NUMBER DEFAULT NULL,
     check_integrity  IN BOOLEAN DEFAULT TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Adds a feature element to a feature.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106857"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7__GUID-259C6C60-BA67-422B-91B1-66FA43799683"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer for the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106858"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7__GUID-CC7E86DE-3D4F-4FD6-9CA1-68199CF5659A"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106859"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7__GUID-55AC3B9D-C7EA-48EA-9BD3-A29422D70E44"><!-- --></a>feature_element</dt>
<dd>
<p>Feature element to be added to the feature. This feature element is automatically appended to the end of any existing feature elements in the feature. (The SDO_NET_FEAT_ELEM type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106860"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7__GUID-E3A9C0FA-A334-4D28-9EF7-0C61F05313F5"><!-- --></a>sequence_number</dt>
<dd>
<p>Sequence number of the added feature element in the feature. If this parameter is null, a sequence number after the last current number is assigned.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106861"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7__GUID-D911C2E3-1073-4663-AEFC-B86B0FCB16F5"><!-- --></a>check_integrity</dt>
<dd>
<p><code class="codeph">TRUE</code> (the default) checks if the input network elements exist; and if any do not exist, an error is generated. <code class="codeph">FALSE</code> does not check if the input network elements exist.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To add multiple feature elements to a feature in a single operation, use the <a href="SDO_NET-reference.htm#GUID-CAC2CA26-4D82-41AF-A06F-7E255BF49FE7">SDO_NET.ADD_FEATURE_ELEMENTS</a> procedure.</p>
<p>To update a feature element, use the <a href="SDO_NET-reference.htm#GUID-0AE5753B-F6D4-48C6-ADD6-7CABB772D682">SDO_NET.UPDATE_FEATURE_ELEMENT</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example adds a point feature for node ID 13 at sequence number 2.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  feature_element SDO_NET_FEAT_ELEM;
  node_id NUMBER := 13;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  feature_element := SDO_NET_FEAT_ELEM(SDO_NET.FEAT_ELEM_TYPE_PON, node_id, null, null);
  sdo_net.add_feature_element(feature_layer_id, feature_id, feature_element, 2);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1092"></a>
<div class="props_rev_3"><a id="GUID-CAC2CA26-4D82-41AF-A06F-7E255BF49FE7"></a>
<h2 id="TOPOL-GUID-CAC2CA26-4D82-41AF-A06F-7E255BF49FE7" class="sect2">SDO_NET.ADD_FEATURE_ELEMENTS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.ADD_FEATURE_ELEMENTS(
     feature_layer_id IN NUMBER,
     feature_id       IN NUMBER,
     feature_elements IN SDO_NET_FEAT_ELEM,_ARRAY,
     check_integrity  IN BOOLEAN DEFAULT TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Adds an array of feature elements to a feature.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106862"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CAC2CA26-4D82-41AF-A06F-7E255BF49FE7__GUID-4807D4C4-05E6-47EB-A6FA-97E0E688FCAC"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer for the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106863"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CAC2CA26-4D82-41AF-A06F-7E255BF49FE7__GUID-FFD734F5-8547-422A-A8BE-219BB538CC31"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106864"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CAC2CA26-4D82-41AF-A06F-7E255BF49FE7__GUID-8968E708-0694-4F94-A7F0-95FCB38DE419"><!-- --></a>feature_elements</dt>
<dd>
<p>Feature elements to be added to the feature. These feature elements are automatically appended to the end of any existing feature elements in the feature. (The SDO_NET_FEAT_ELEM_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106865"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CAC2CA26-4D82-41AF-A06F-7E255BF49FE7__GUID-1FC9018A-C766-458C-9FE6-38F22CE6E2A5"><!-- --></a>check_integrity</dt>
<dd>
<p><code class="codeph">TRUE</code> (the default) checks if the input network elements exist; and if any do not exist, an error is generated. <code class="codeph">FALSE</code> does not check if the input network elements exist.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To add a single feature element to a feature, use the <a href="SDO_NET-reference.htm#GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7">SDO_NET.ADD_FEATURE_ELEMENT</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example adds two point feature elements at the end of the feature elements associated with feature ID 1.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  elements SDO_NET_FEAT_ELEM_ARRAY := SDO_NET_FEAT_ELEM_ARRAY();
  link_id NUMBER := 1314;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  elements.extend;
  elements(1) := SDO_NET_FEAT_ELEM(SDO_NET.FEAT_ELEM_TYPE_POL, link_id, 0.7, null);
  elements.extend;
  elements(2) := SDO_NET_FEAT_ELEM(SDO_NET.FEAT_ELEM_TYPE_POL, link_id, 0.8, null);
  sdo_net.add_feature_elements(feature_layer_id, feature_id, elements);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1093"></a>
<div class="props_rev_3"><a id="GUID-68CD4964-0DDB-45B8-8FA1-94608B8E4BE7"></a>
<h2 id="TOPOL-GUID-68CD4964-0DDB-45B8-8FA1-94608B8E4BE7" class="sect2">SDO_NET.ADD_FEATURE_LAYER</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.ADD_FEATURE_LAYER(
     network_name IN VARCHAR2,
     feature_layer_name IN VARCHAR2,
     feature_layer_type IN VARCHAR2,
     feature_table      IN VARCHAR2,
     relation_table     IN VARCHAR2,
     hierarchy_table    IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Adds a feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106866"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-68CD4964-0DDB-45B8-8FA1-94608B8E4BE7__GUID-AE675A71-DD43-4F3F-B408-B8963C23268C"><!-- --></a>network_name</dt>
<dd>
<p>Name of the network.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106867"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-68CD4964-0DDB-45B8-8FA1-94608B8E4BE7__GUID-1D26B8CC-55CE-4336-8C02-63AEE9E1378F"><!-- --></a>feature_layer_name</dt>
<dd>
<p>Name of the feature layer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106868"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-68CD4964-0DDB-45B8-8FA1-94608B8E4BE7__GUID-C14AD2FE-0924-4550-A0D2-EDD1B41AE76A"><!-- --></a>feature_layer_type</dt>
<dd>
<p>Type of features in the layer (from <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B__CIHFJFII" title="Feature types: numbers, names, and explanations">Table 5-1</a>).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106869"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-68CD4964-0DDB-45B8-8FA1-94608B8E4BE7__GUID-95648D21-729D-43C2-A658-E953C0B4679C"><!-- --></a>feature_table</dt>
<dd>
<p>Name of the feature table (see <a href="network-data-model-graph-overview.htm#GUID-4ACCA853-2ADB-4D5E-B788-119031842B3A">Feature Table</a>).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106870"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-68CD4964-0DDB-45B8-8FA1-94608B8E4BE7__GUID-0219E67F-AEA8-403F-A8C0-C2B5E8376FE1"><!-- --></a>relation_table</dt>
<dd>
<p>Name of the feature element relationships table (see <a href="network-data-model-graph-overview.htm#GUID-1057580C-AD10-4FFB-91B8-9B6E2DE08E22">Feature Element Relationships Table</a>).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106871"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-68CD4964-0DDB-45B8-8FA1-94608B8E4BE7__GUID-51E08A18-847C-4077-84EB-B268AA224D8E"><!-- --></a>hierarchy_table</dt>
<dd>
<p>Name of the feature hierarchy table (see <a href="network-data-model-graph-overview.htm#GUID-7F12FED5-612B-473B-94A6-FCFD80A0DC0C">Feature Hierarchy Table</a>).</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>A feature layer ID is automatically generated for the feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a feature layer named <code class="codeph">POI</code> (points of interest) of multipoints (<code class="codeph">SDO_NET.FEAT_TYPE_MPOINT</code>).</p>
<pre dir="ltr">BEGIN
  sdo_net.add_feature_layer(
    &#39;GRID&#39;,
    &#39;POI&#39;,
    SDO_NET.FEAT_TYPE_MPOINT,
    &#39;POI_FEAT$&#39;,
    &#39;POI_REL$&#39;,
    NULL
  );
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL972"></a>
<div class="props_rev_3"><a id="GUID-469216E8-F00F-424D-A2EE-1AAB74878A49"></a>
<h2 id="TOPOL-GUID-469216E8-F00F-424D-A2EE-1AAB74878A49" class="sect2">SDO_NET.COMPUTE_PATH_GEOMETRY</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.COMPUTE_PATH_GEOMETRY(
     network   IN VARCHAR2,
     path_id   IN NUMBER,
     tolerance IN NUMBER
) RETURN SDO_GEOMETRY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the spatial geometry for a path.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106872"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-469216E8-F00F-424D-A2EE-1AAB74878A49__GUID-FDDB79AB-9574-4943-9271-17FC334AF64D"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106873"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-469216E8-F00F-424D-A2EE-1AAB74878A49__GUID-14252F4B-DA9C-4B81-B112-5C6E1A86B770"><!-- --></a>path_id</dt>
<dd>
<p>Path ID number.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106874"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-469216E8-F00F-424D-A2EE-1AAB74878A49__GUID-35774E23-C6CD-491B-8A42-3AA1ADA8F5F9"><!-- --></a>tolerance</dt>
<dd>
<p>Tolerance value associated with geometries in the network. (Tolerance is explained in Chapter 1 of <a class="olink SPATL450" target="_blank" href="../SPATL/data-model.htm#SPATL450"><span class="italic">Oracle Spatial and Graph Developer&#39;s Guide</span></a>.) This value should be consistent with the tolerance values of the geometries in the link table and node table for the network.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function computes and returns the SDO_GEOMETRY object for the specified path.</p>
<p>This function and the SDO_NET_MEM.PATH.COMPUTE_GEOMETRY procedure (documented in <a href="SDO_NET-reference.htm#GUID-1AE39EF8-CE36-4EC4-99D8-8678818E6E5E">SDO_NET Package Subprograms</a>) both compute a path geometry, but they have the following differences:</p>
<ul style="list-style-type: disc;">
<li>
<p>The SDO_NET.COMPUTE_PATH_GEOMETRY function computes the path from the links in the database, and does not use a network memory object. It returns the path geometry.</p>
</li>
<li>
<p>The SDO_NET_MEM.PATH.COMPUTE_GEOMETRY procedure computes the path using a network memory object that has been loaded. It does not return the path geometry; you must use the SDO_NET_MEM.PATH.GET_GEOMETRY function to get the geometry.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example computes and returns the spatial geometry of the path with path ID 1 in the network named <code class="codeph">SDO_NET1</code>, using a tolerance value of 0.005. The returned path geometry is a straight line from (1,1) to (15,1) because this path consists of a single link.</p>
<pre dir="ltr">SELECT SDO_NET.COMPUTE_PATH_GEOMETRY(&#39;SDO_NET1&#39;, 1, 0.005) FROM DUAL;
 
SDO_NET.COMPUTE_PATH_GEOMETRY(&#39;SDO_NET1&#39;,1,0.005)(SDO_GTYPE, SDO_SRID, SDO_POINT
--------------------------------------------------------------------------------
SDO_GEOMETRY(2002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
1, 1, 15, 1))
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL973"></a>
<div class="props_rev_3"><a id="GUID-2CA5EFF3-299F-465C-BBA4-4E6B20729561"></a>
<h2 id="TOPOL-GUID-2CA5EFF3-299F-465C-BBA4-4E6B20729561" class="sect2">SDO_NET.COPY_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.COPY_NETWORK(
     source_network     IN VARCHAR2,
     target_network     IN VARCHAR2,
     storage_parameters IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a copy of a network, including its metadata tables.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106875"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2CA5EFF3-299F-465C-BBA4-4E6B20729561__GUID-4F77D7DF-4571-4BFF-B199-C1AB4634CA0C"><!-- --></a>source_network</dt>
<dd>
<p>Name of the network to be copied.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106876"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2CA5EFF3-299F-465C-BBA4-4E6B20729561__GUID-46EFDF51-F0F2-40F9-97A3-CAE3AB0A88A2"><!-- --></a>target_network</dt>
<dd>
<p>Name of the network to be created as a copy of <code class="codeph">source_network</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106877"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2CA5EFF3-299F-465C-BBA4-4E6B20729561__GUID-2134C9E8-B2F8-4BF7-84C7-53DA9A68DFE6"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure creates an entry in the xxx_SDO_NETWORK_METADATA views (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>) for <code class="codeph">target_network</code> that has the same information as for <code class="codeph">source_network</code>, except for the new network name.</p>
<p>This procedure also creates a new node table, link table, and path table (if a path table exists for <code class="codeph">source_network</code>) for <code class="codeph">target_network</code> based on the metadata and data in these tables for <code class="codeph">source_network</code>. These tables have names in the form <span class="italic">&lt;target-network&gt;</span>_NODE$, <span class="italic">&lt;target-network&gt;</span>_LINK$, and <span class="italic">&lt;target-network&gt;</span>_PATH$. For example, if <code class="codeph">target_network</code> has the value <code class="codeph">ROADS_NETWORK2</code> and if <code class="codeph">source_network</code> has a path table, the names of the created metadata tables are <span>ROADS_NETWORK2_NODE$</span>, ROADS_NETWORK2_LINK$, and ROADS_NETWORK2_PATH$.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a new network named <code class="codeph">ROADS_NETWORK2</code> that is a copy of the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.COPY_NETWORK(&#39;ROADS_NETWORK&#39;, &#39;ROADS_NETWORK2&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL974"></a>
<div class="props_rev_3"><a id="GUID-297C93AF-B817-4B50-A734-08F9B45D2373"></a>
<h2 id="TOPOL-GUID-297C93AF-B817-4B50-A734-08F9B45D2373" class="sect2">SDO_NET.CREATE_LINK_TABLE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_LINK_TABLE(
     table_name             IN VARCHAR2,
     geom_type              IN VARCHAR2,
     geom_column            IN VARCHAR2,
     cost_column            IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     add_bidirected_column  IN BOOLEAN DEFALT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a link table for a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106878"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-297C93AF-B817-4B50-A734-08F9B45D2373__GUID-EE3A16AE-62CE-48EB-BCEC-64A1D3A48689"><!-- --></a>table_name</dt>
<dd>
<p>Name of the link table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106879"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-297C93AF-B817-4B50-A734-08F9B45D2373__GUID-578CDD12-24B1-440F-A491-507336A37702"><!-- --></a>geom_type</dt>
<dd>
<p>For a spatial network, specify a value indicating the geometry type of links: <code class="codeph">SDO_GEOMETRY</code> for non-LRS SDO_GEOMETRY objects, <code class="codeph">LRS_GEOMETRY</code> for LRS SDO_GEOMETRY objects, or <code class="codeph">TOPO_GEOMETRY</code> for SDO_TOPO_GEOMETRY objects.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106880"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-297C93AF-B817-4B50-A734-08F9B45D2373__GUID-6B96E918-32E8-4703-9415-E08C38749336"><!-- --></a>geom_column</dt>
<dd>
<p>For a spatial network, the name of the column containing the geometry objects associated with the links. (If the <code class="codeph">geom_type</code> value is not spelled correctly, the <code class="codeph">geom_column</code> column is <span class="italic">not</span> included in the table.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106881"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-297C93AF-B817-4B50-A734-08F9B45D2373__GUID-2E1E510A-F9FC-4404-B269-9B7A1062CA05"><!-- --></a>cost_column</dt>
<dd>
<p>Name of the column containing the cost values to be associated with the links.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106882"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-297C93AF-B817-4B50-A734-08F9B45D2373__GUID-544F24CB-0B83-489B-AE37-3B1D141152EF"><!-- --></a>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106883"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-297C93AF-B817-4B50-A734-08F9B45D2373__GUID-04339C61-AC77-477E-B9A5-DDAFD90AB944"><!-- --></a>add_bidirected_column</dt>
<dd>
<p><code class="codeph">TRUE</code> adds a column named BIDIRECTED to the link table; <code class="codeph">FALSE</code> (the default) does not add a column named BIDIRECTED to the link table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106884"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-297C93AF-B817-4B50-A734-08F9B45D2373__GUID-258967D6-1EE9-41E7-8254-C8B8647B6D40"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the link table. Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The link table is described in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a link table named ROADS_LINKS, with a geometry column named LINK_GEOMETRY that will contain LRS geometries, a cost column named COST, and a single hierarchy level.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_LINK_TABLE(&#39;ROADS_LINKS&#39;, &#39;LRS_GEOMETRY&#39;, &#39;LINK_GEOMETRY&#39;, &#39;COST&#39;, 1);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL975"></a>
<div class="props_rev_3"><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E"></a>
<h2 id="TOPOL-GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E" class="sect2">SDO_NET.CREATE_LOGICAL_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_LOGICAL_NETWORK(
     network                IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_directed            IN BOOLEAN,
     node_with_cost         IN BOOLEAN DEFAULT FALSE,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);

or

SDO_NET.CREATE_LOGICAL_NETWORK(
     network IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_directed IN BOOLEAN,
     node_table_name IN VARCHAR2,
     node_cost_column IN VARCHAR2,
     link_table_name IN VARCHAR2,
     link_cost_column IN VARCHAR2,
     path_table_name IN VARCHAR2,
     path_link_table_name IN VARCHAR2,
     subpath_table_name IN VARCHAR2,
     is_complex IN BOOLEAN DEFAULT FALSE,
     storage_parameters IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a logical network, creates all necessary tables, and updates the network metadata.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106885"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-887A16E4-0392-4ADB-9E88-DD792EB6B9FF"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106886"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-3690C98C-8688-45DC-B77B-82B24E19C5B1"><!-- --></a>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106887"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-8BAD1DF3-BEF3-46C9-A1A3-5A7467856E91"><!-- --></a>is_directed</dt>
<dd>
<p>A Boolean value. <code class="codeph">TRUE</code> indicates that the links are directed; <code class="codeph">FALSE</code> indicates that the links are undirected (not directed).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106888"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-F736EAB4-9CA6-4D1E-8DB9-9D63FB699005"><!-- --></a>node_with_cost</dt>
<dd>
<p>A Boolean value. <code class="codeph">TRUE</code> causes a column named COST to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table; <code class="codeph">FALSE</code> (the default) causes a column named COST not to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106889"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-4F3098F3-43D6-4CA3-B27F-3CFDC63C4C30"><!-- --></a>node_table_name</dt>
<dd>
<p>Name of the node table to be created. (The node table is explained in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.) If you use the format that does not specify this parameter, a node table named <span class="italic">&lt;network-name&gt;</span>_NODE$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106890"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-F88EA11B-14F9-4A08-A802-CE25C68792EF"><!-- --></a>node_cost_column</dt>
<dd>
<p>Name of the cost column in the node table. (The node table is explained in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106891"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-D72BAFD3-8F4C-45BC-84CC-85E8B9F403A8"><!-- --></a>link_table_name</dt>
<dd>
<p>Name of the link table to be created. (The link table is explained in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.) If you use the format that does not specify this parameter, a link table named <span class="italic">&lt;network-name&gt;</span>_LINK$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106892"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-850A6663-622F-48CF-92F0-20F1A4D7EFBF"><!-- --></a>link_cost_column</dt>
<dd>
<p>Name of the cost column in the link table. (The link table is explained in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106893"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-FC2F0B1C-48BE-4ACD-A2A8-924513413803"><!-- --></a>path_table_name</dt>
<dd>
<p>Name of the path table to be created. (The path table is explained in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>.) If you use the format that does not specify this parameter, a path table named <span class="italic">&lt;network-name&gt;</span>_PATH$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106894"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-BA21B97C-3A29-4D7F-95C3-51EE85DFDCF5"><!-- --></a>path_link_table_name</dt>
<dd>
<p>Name of the path-link table to be created. (The path-link table is explained in <a href="network-data-model-graph-overview.htm#GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8">Path-Link Table</a>.) If you use the format that does not specify this parameter, a path-link table named <span class="italic">&lt;network-name&gt;</span>_PLINK$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106895"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-5B47B500-9E44-42C0-8BEC-67D903FA8A61"><!-- --></a>subpath_table_name</dt>
<dd>
<p>Name of the subpath table to be created. (The subpath table is explained in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106896"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-64A2AFC9-A0CC-4F33-9194-CA0FD8E56A9C"><!-- --></a>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106897"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E__GUID-FB4BBDC6-6473-486A-911A-FADD77428CC3"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure provides a convenient way to create a logical network when the node, link, and optional related tables do not already exist. The procedure creates the network; creates the node, link, path, and path-link tables for the network; and inserts the appropriate information in the xxx_SDO_NETWORK_METADATA views (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
<p>An exception is generated if any of the tables to be created already exists.</p>
<p>The procedure has two formats. The simpler format creates the tables using default values for the table name and the cost column name. The other format lets you specify names for the tables and the cost column.</p>
<p>As an alternative to using this procedure, you can create the network as follows: create the tables using the <a href="SDO_NET-reference.htm#GUID-3A7D9D56-788A-45E2-95E9-955001874C15">SDO_NET.CREATE_NODE_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-297C93AF-B817-4B50-A734-08F9B45D2373">SDO_NET.CREATE_LINK_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82">SDO_NET.CREATE_PATH_TABLE</a>, and <a href="SDO_NET-reference.htm#GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedures; and insert the appropriate row in the USER_SDO_NETWORK_METADATA view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a directed logical network named <code class="codeph">LOG_NET1</code>. The example creates the LOG_NET1_NODE$, LOG_NET1_LINK$,LOG_NET1_PATH$, and LOG_NET1_PLINK$ tables, and updates the xxx_SDO_NETWORK_METADATA views. Both the node and link tables contain a cost column named COST.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_LOGICAL_NETWORK(&#39;LOG_NET1&#39;, 1, TRUE, TRUE);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL976"></a>
<div class="props_rev_3"><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883"></a>
<h2 id="TOPOL-GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883" class="sect2">SDO_NET.CREATE_LRS_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_LRS_NETWORK(
     network IN VARCHAR2,
     lrs_table_name         IN VARCHAR2,
     lrs_geom_column        IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_directed            IN BOOLEAN,
     node_with_cost         IN BOOLEAN DEFAULT FALSE,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);

or

SDO_NET.CREATE_LRS_NETWORK(
     network                IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_directed            IN BOOLEAN,
     node_table_name        IN VARCHAR2,
     node_cost_column       IN VARCHAR2,
     link_table_name        IN VARCHAR2,
     link_cost_column       IN VARCHAR2,
     lrs_table_name         IN VARCHAR2,
     lrs_geom_column        IN VARCHAR2,
     path_table_name        IN VARCHAR2,
     path_geom_column       IN VARCHAR2,
     path_link_table_name   IN VARCHAR2,
     subpath_table_name     IN VARCHAR2,
     subpath_geom_column    IN VARCHAR2,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a spatial network containing LRS SDO_GEOMETRY objects, creates all necessary tables, and updates the network metadata.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106898"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-858B51E8-0E55-431D-A9F7-AF2E63C87422"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106899"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-924EA57F-BED7-463B-A8A5-783B64946531"><!-- --></a>lrs_table_name</dt>
<dd>
<p>Name of the table containing the LRS geometry column.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106900"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-5F895348-9FB4-4CE3-9125-DDF59D397C03"><!-- --></a>lrs_geom_column</dt>
<dd>
<p>Name of the column in <code class="codeph">lrs_table_name</code> that contains LRS geometries (that is, SDO_GEOMETRY objects that include measure information for linear referencing).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106901"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-C9B3A818-3AD2-4A1C-B69E-0171429CC07B"><!-- --></a>is_directed</dt>
<dd>
<p>A Boolean value. <code class="codeph">TRUE</code> indicates that the links are directed; <code class="codeph">FALSE</code> indicates that the links are undirected (not directed).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106902"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-CA27722A-043B-49D5-ABCB-BEE2DCE02A26"><!-- --></a>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106903"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-EACE85C7-ECC5-4A0A-873B-C255D5E64E22"><!-- --></a>node_with_cost</dt>
<dd>
<p>A Boolean value. <code class="codeph">TRUE</code> causes a column named COST to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table; <code class="codeph">FALSE</code> (the default) causes a column named COST not to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106904"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-077CC584-36A7-44E1-8B7D-7A6FD6AFAE30"><!-- --></a>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106905"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-51625A3D-CF79-4C26-8BAA-FA4755F56EFB"><!-- --></a>node_table_name</dt>
<dd>
<p>Name of the node table to be created. (The node table is explained in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.) If you use the format that does not specify this parameter, a node table named <span class="italic">&lt;network-name&gt;</span>_NODE$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106906"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-F37ABB34-DE55-4226-9925-D7B90D7BC4ED"><!-- --></a>node_cost_column</dt>
<dd>
<p>Name of the cost column in the node table. (The node table is explained in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106907"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-8575C752-89C4-490A-A100-85BE09E29BAB"><!-- --></a>link_table_name</dt>
<dd>
<p>Name of the link table to be created. (The link table is explained in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.) If you use the format that does not specify this parameter, a link table named <span class="italic">&lt;network-name&gt;</span>_LINK$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106908"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-AEC3EF44-E0A7-4F8F-B227-3CAC5DE78759"><!-- --></a>link_cost_column</dt>
<dd>
<p>Name of the cost column in the link table. (The link table is explained in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106909"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-5041271E-8397-4CBA-BA57-4D7746F71280"><!-- --></a>path_table_name</dt>
<dd>
<p>Name of the path table to be created. (The path table is explained in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>.) If you use the format that does not specify this parameter, a path table named <span class="italic">&lt;network-name&gt;</span>_PATH$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106910"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-1D98B2E3-C784-4FE9-B617-C21322F69622"><!-- --></a>path_geom_column</dt>
<dd>
<p>Name of the geometry column in the path table. (The path table is explained in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106911"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-8C477B29-0A12-4CC3-95CE-75C5CD1B1C2D"><!-- --></a>path_link_table_name</dt>
<dd>
<p>Name of the path-link table to be created. (The path-link table is explained in <a href="network-data-model-graph-overview.htm#GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8">Path-Link Table</a>.) If you use the format that does not specify this parameter, a path-link table named <span class="italic">&lt;network-name&gt;</span>_PLINK$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106912"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-18ACCEB1-8B5F-41BF-82D5-8972B1A685E9"><!-- --></a>subpath_table_name</dt>
<dd>
<p>Name of the subpath table to be created. (The subpath table is explained in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106913"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-D713E082-859A-438C-B776-575E7063146F"><!-- --></a>subpath_geom_column</dt>
<dd>
<p>Name of the geometry column in the subpath table. (The subpath table is explained in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106914"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883__GUID-2DB654A2-5F0D-4D32-8F77-BDA36C43C6EC"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure provides a convenient way to create a spatial network of LRS geometries when the node, link, and optional related tables do not already exist. The procedure creates the network; creates the node, link, path, and path-link tables for the network; and inserts the appropriate information in the xxx_SDO_NETWORK_METADATA views (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
<p>An exception is generated if any of the tables to be created already exists.</p>
<p>The procedure has two formats. The simpler format creates the tables using default values for the table name and the geometry and cost column names. The other format lets you specify names for the tables and the geometry and cost columns.</p>
<p>As an alternative to using this procedure, you can create the network as follows: create the tables using the <a href="SDO_NET-reference.htm#GUID-3A7D9D56-788A-45E2-95E9-955001874C15">SDO_NET.CREATE_NODE_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-297C93AF-B817-4B50-A734-08F9B45D2373">SDO_NET.CREATE_LINK_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82">SDO_NET.CREATE_PATH_TABLE</a>, and <a href="SDO_NET-reference.htm#GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedures; and insert the appropriate row in the USER_SDO_NETWORK_METADATA view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a directed spatial network named <code class="codeph">LRS_NET1</code>. The LRS geometries are in the column named LRS_GEOM in the table named LRS_TAB. The example creates the LRS_NET1_NODE$, LRS_NET1_LINK$, LRS_NET1_PATH$, and LRS_NET1_PLINK$ tables, and updates the xxx_SDO_NETWORK_METADATA views. All geometry columns are named GEOMETRY. Both the node and link tables contain a cost column named COST.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_LRS_NETWORK(&#39;LRS_NET1&#39;, &#39;LRS_TAB&#39;, &#39;LRS_GEOM&#39;, 1, TRUE, TRUE);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL977"></a>
<div class="props_rev_3"><a id="GUID-A7F99E37-9154-4BF3-853D-D0130539918F"></a>
<h2 id="TOPOL-GUID-A7F99E37-9154-4BF3-853D-D0130539918F" class="sect2">SDO_NET.CREATE_LRS_TABLE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_LRS_TABLE(
     table_name         IN VARCHAR2,
     geom_column        IN VARCHAR2,
     storage_parameters IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a table for storing Oracle Spatial and Graph linear referencing system (LRS) geometries.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106915"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A7F99E37-9154-4BF3-853D-D0130539918F__GUID-F7ED53C6-E425-4083-8722-65109127F0AB"><!-- --></a>table_name</dt>
<dd>
<p>Name of the table containing the geometry column specified in <code class="codeph">geom_column</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106916"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A7F99E37-9154-4BF3-853D-D0130539918F__GUID-C6204911-469B-4BDD-85A9-D98ABC43216B"><!-- --></a>geom_column</dt>
<dd>
<p>Name of the column (of type SDO_GEOMETRY) to contain geometry objects.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106917"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A7F99E37-9154-4BF3-853D-D0130539918F__GUID-F8413C6B-3E4B-47B3-AACB-F52D389287DB"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the LRS table. Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure creates a table named <code class="codeph">table_name</code> with two columns: GEOM_ID of type NUMBER and <code class="codeph">geom_column</code> of type SDO_GEOMETRY.</p>
<p>Although the created table does not need to be used to store LRS geometries, the procedure is intended as a convenient method for creating a table to store such geometries. You will probably want to modify the table to add other columns before you store data in the table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a table named HIGHWAYS with a geometry column named GEOM.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_LRS_TABLE(&#39;HIGHWAYS&#39;, &#39;GEOM&#39;);
 
PL/SQL procedure successfully completed.
 
DESCRIBE highways
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 GEOM_ID                                   NOT NULL NUMBER
 GEOM                                               MDSYS.SDO_GEOMETRY
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL978"></a>
<div class="props_rev_3"><a id="GUID-3A7D9D56-788A-45E2-95E9-955001874C15"></a>
<h2 id="TOPOL-GUID-3A7D9D56-788A-45E2-95E9-955001874C15" class="sect2">SDO_NET.CREATE_NODE_TABLE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_NODE_TABLE(
     table_name             IN VARCHAR2,
     geom_type              IN VARCHAR2,
     geom_column            IN VARCHAR2,
     cost_column            IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);

or

SDO_NET.CREATE_NODE_TABLE(
     table_name             IN VARCHAR2,
     geom_type              IN VARCHAR2,
     geom_column            IN VARCHAR2,
     cost_column            IN VARCHAR2,
     partition_column       IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a node table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106918"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3A7D9D56-788A-45E2-95E9-955001874C15__GUID-7C36BB2E-D528-4A5B-BE24-60097E0E7FC0"><!-- --></a>table_name</dt>
<dd>
<p>Name of the node table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106919"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3A7D9D56-788A-45E2-95E9-955001874C15__GUID-2181967C-C74F-4529-B6FE-92DA801797D8"><!-- --></a>geom_type</dt>
<dd>
<p>For a spatial network, specify a value indicating the geometry type of nodes: <code class="codeph">SDO_GEOMETRY</code> for non-LRS SDO_GEOMETRY objects, <code class="codeph">LRS_GEOMETRY</code> for LRS SDO_GEOMETRY objects, or <code class="codeph">TOPO_GEOMETRY</code> for SDO_TOPO_GEOMETRY objects. (If the <code class="codeph">geom_type</code> value is not spelled correctly, the <code class="codeph">geom_column</code> column is <span class="italic">not</span> included in the table.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106920"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3A7D9D56-788A-45E2-95E9-955001874C15__GUID-AC1319D3-12AF-427D-8C3C-8B850DD333BC"><!-- --></a>geom_column</dt>
<dd>
<p>For a spatial network, the name of the column containing the geometry objects associated with the nodes.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106921"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3A7D9D56-788A-45E2-95E9-955001874C15__GUID-B760A356-38B9-425D-9448-161029645E42"><!-- --></a>cost_column</dt>
<dd>
<p>Name of the column containing the cost values to be associated with the nodes.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106922"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3A7D9D56-788A-45E2-95E9-955001874C15__GUID-8B20F543-92D3-48D3-AF17-BE2369A93C7A"><!-- --></a>partition_column</dt>
<dd>
<p>Name of the column containing the partition ID values to be associated with the nodes.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106923"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3A7D9D56-788A-45E2-95E9-955001874C15__GUID-61EBCB71-F3F1-4C2D-A52F-3584EFB6F267"><!-- --></a>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for nodes in the network. (For an explanation of network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106924"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3A7D9D56-788A-45E2-95E9-955001874C15__GUID-9AFCA81A-0723-4726-8529-765C4B3D9699"><!-- --></a>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106925"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3A7D9D56-788A-45E2-95E9-955001874C15__GUID-01C11612-974F-4A05-9240-1F8E9CDDA74F"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the &lt;network-name&gt;_NODE$ table (described in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>). Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure has two formats, one without the <code class="codeph">partition_column</code> parameter and one with the <code class="codeph">partition_column</code> parameter.</p>
<p>The node table is described in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a node table named ROADS_NODES with a geometry column named NODE_GEOMETRY that will contain LRS geometries, no cost column, and a single hierarchy level.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_NODE_TABLE(&#39;ROADS_NODES&#39;, &#39;LRS_GEOMETRY&#39;, &#39;NODE_GEOMETRY&#39;, NULL, 1);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL979"></a>
<div class="props_rev_3"><a id="GUID-1E8EACA0-9DE6-46B3-AFB8-D4B2574A57C1"></a>
<h2 id="TOPOL-GUID-1E8EACA0-9DE6-46B3-AFB8-D4B2574A57C1" class="sect2">SDO_NET.CREATE_PARTITION_TABLE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_PARTITION_TABLE(
     table_name IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a partition table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106926"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-1E8EACA0-9DE6-46B3-AFB8-D4B2574A57C1__GUID-3F20D857-07AF-4C79-8532-E6F3CBDCB3B7"><!-- --></a>table_name</dt>
<dd>
<p>Name of the partition table.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The partition table is described in <a href="network-data-model-graph-overview.htm#GUID-5F93389F-642E-41E2-A722-7074EB052131">Partition Table</a>.</p>
<p>For information about using partitioned networks to perform analysis using the load on demand approach, see <a href="network-data-model-graph-overview.htm#GUID-718EB9E1-3ED8-4CA0-B098-1ED8EC6D07B6">Network Analysis Using Load on Demand</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a partition table named MY_PART_TAB.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_PARTITION_TABLE(&#39;MY_PART_TAB&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL980"></a>
<div class="props_rev_3"><a id="GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1"></a>
<h2 id="TOPOL-GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1" class="sect2">SDO_NET.CREATE_PATH_LINK_TABLE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_PATH_LINK_TABLE(
     table_name         IN VARCHAR2,
     storage_parameters IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a path-link table, that is, a table with a row for each link in each path in the path table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106927"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1__GUID-66B43765-055F-4A54-B51D-216B426F6BE0"><!-- --></a>table_name</dt>
<dd>
<p>Name of the path-link table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106928"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1__GUID-C2144649-A3ED-4A96-B405-FF879914D4D4"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the path-link table. Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The path-link table is described in <a href="network-data-model-graph-overview.htm#GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8">Path-Link Table</a>.</p>
<p>To use paths with a network, you must populate the path-link table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a path-link table named ROADS_PATHS_LINKS.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_PATH_LINK_TABLE(&#39;ROADS_PATHS_LINKS&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL981"></a>
<div class="props_rev_3"><a id="GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82"></a>
<h2 id="TOPOL-GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82" class="sect2">SDO_NET.CREATE_PATH_TABLE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_PATH_TABLE(
     table_name         IN VARCHAR2,
     geom_column        IN VARCHAR2,
     storage_parameters IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a path table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106929"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82__GUID-BF0F1310-FF31-4B31-B665-FC30595E6014"><!-- --></a>table_name</dt>
<dd>
<p>Name of the path table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106930"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82__GUID-E174878E-23B5-4CE8-AA95-83001B6141A8"><!-- --></a>geom_column</dt>
<dd>
<p>For a spatial network, name of the column containing the geometry objects associated with the paths.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106931"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82__GUID-D7A3647A-53C3-47B5-ACAA-960D4ECD51D9"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the path table. Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The path table is described in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>.</p>
<p>To use paths with a network, after you create the path table, you must create the path-link table using the <a href="SDO_NET-reference.htm#GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedure, and populate the path-link table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a path table named ROADS_PATHS that contains a geometry column named PATH_GEOMETRY.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_PATH_TABLE(&#39;ROADS_PATHS&#39;, &#39;PATH_GEOMETRY&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL982"></a>
<div class="props_rev_3"><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0"></a>
<h2 id="TOPOL-GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0" class="sect2">SDO_NET.CREATE_SDO_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_SDO_NETWORK(
     network                IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_directed            IN BOOLEAN,
     node_with_cost         IN BOOLEAN DEFAULT FALSE,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);

or

SDO_NET.CREATE_SDO_NETWORK(
     network                IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_directed            IN BOOLEAN,
     node_table_name        IN VARCHAR2,
     node_geom_column       IN VARCHAR2,
     node_cost_column       IN VARCHAR2,
     link_table_name        IN VARCHAR2,
     link_geom_column       IN VARCHAR2,
     link_cost_column       IN VARCHAR2,
     path_table_name        IN VARCHAR2,
     path_geom_column       IN VARCHAR2,
     path_link_table_name   IN VARCHAR2,
     subpath_table_name     IN VARCHAR2,
     subpath_geom_column    IN VARCHAR2,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a spatial network containing non-LRS SDO_GEOMETRY objects, creates all necessary tables, and updates the network metadata.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106932"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-13176A52-3DC2-4517-960F-8720F266DF54"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106933"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-00AF3108-8592-4B83-B958-C13EE0AF0D00"><!-- --></a>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106934"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-2652F0B0-8322-4F05-A23C-C83D09ED18C9"><!-- --></a>is_directed</dt>
<dd>
<p>A Boolean value. <code class="codeph">TRUE</code> indicates that the links are directed; <code class="codeph">FALSE</code> indicates that the links are undirected (not directed).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106935"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-A8228189-6506-4DBE-B366-630A8F53156F"><!-- --></a>node_with_cost</dt>
<dd>
<p>A Boolean value. <code class="codeph">TRUE</code> causes a column named COST to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table; <code class="codeph">FALSE</code> (the default) causes a column named COST not to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106936"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-292ED9C3-E7E0-4FBB-BAD3-3467E1E3EEAF"><!-- --></a>node_table_name</dt>
<dd>
<p>Name of the node table to be created. (The node table is explained in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.) If you use the format that does not specify this parameter, a node table named <span class="italic">&lt;network-name&gt;</span>_NODE$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106937"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-9B1839B2-734A-4C90-B053-9C3474599351"><!-- --></a>node_geom_column</dt>
<dd>
<p>Name of the geometry column in the node table. (The node table is explained in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106938"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-5690D095-92CE-4E78-9C17-35CEC0DF54C5"><!-- --></a>node_cost_column</dt>
<dd>
<p>Name of the cost column in the node table. (The node table is explained in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106939"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-E96B06B5-75D9-4D26-89EE-F68CC0C76BD4"><!-- --></a>link_table_name</dt>
<dd>
<p>Name of the link table to be created. (The link table is explained in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.) If you use the format that does not specify this parameter, a link table named <span class="italic">&lt;network-name&gt;</span>_LINK$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106940"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-06BA06A2-B3EC-4F30-B593-B4E7F7D3201B"><!-- --></a>link_geom_column</dt>
<dd>
<p>Name of the geometry column in the link table. (The link table is explained in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106941"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-7C882EE5-4F1A-4CDE-BBFA-3D197CAD4533"><!-- --></a>link_cost_column</dt>
<dd>
<p>Name of the cost column in the link table. (The link table is explained in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106942"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-7D10A55E-9C6B-4A52-B5C9-0E00BEC4537A"><!-- --></a>path_table_name</dt>
<dd>
<p>Name of the path table to be created. (The path table is explained in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>.) If you use the format that does not specify this parameter, a path table named <span class="italic">&lt;network-name&gt;</span>_PATH$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106943"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-53700A96-6740-4FE1-A62F-13A5A8BC6F6F"><!-- --></a>path_geom_column</dt>
<dd>
<p>Name of the geometry column in the path table. (The path table is explained in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106944"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-2E0B4D86-B45B-48A4-A69F-D3689D76A3CF"><!-- --></a>path_link_table_name</dt>
<dd>
<p>Name of the path-link table to be created. (The path-link table is explained in <a href="network-data-model-graph-overview.htm#GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8">Path-Link Table</a>.) If you use the format that does not specify this parameter, a path-link table named <span class="italic">&lt;network-name&gt;</span>_PLINK$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106945"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-ED776643-A197-459D-8E00-8AA66B61A53E"><!-- --></a>subpath_table_name</dt>
<dd>
<p>Name of the subpath table to be created. (The subpath table is explained in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106946"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-EEAB9741-D046-453D-BBF4-EE7EB1EF143D"><!-- --></a>subpath_geom_column</dt>
<dd>
<p>Name of the geometry column in the subpath table. (The subpath table is explained in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106947"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-79707E0F-9689-4BD3-A978-86EC735D412B"><!-- --></a>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106948"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0__GUID-FD215D99-5449-4792-AD1C-CAC55FC9DDDC"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure provides a convenient way to create a spatial network when the node, link, and optional related tables do not already exist. The procedure creates the network; creates the node, link, path, and path-link tables for the network; and inserts the appropriate information in the xxx_SDO_NETWORK_METADATA views (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
<p>An exception is generated if any of the tables to be created already exists.</p>
<p>The procedure has two formats. The simpler format creates the tables using default values for the table name and the geometry and cost column names. The other format lets you specify names for the tables and the geometry and cost columns.</p>
<p>As an alternative to using this procedure, you can create the network as follows: create the tables using the <a href="SDO_NET-reference.htm#GUID-3A7D9D56-788A-45E2-95E9-955001874C15">SDO_NET.CREATE_NODE_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-297C93AF-B817-4B50-A734-08F9B45D2373">SDO_NET.CREATE_LINK_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82">SDO_NET.CREATE_PATH_TABLE</a>, and <a href="SDO_NET-reference.htm#GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedures; and insert the appropriate row in the USER_SDO_NETWORK_METADATA view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a directed spatial network named <code class="codeph">SDO_NET1</code>. The example creates the SDO_NET1_NODE$, SDO_NET1_LINK$, SDO_NET1_PATH$, and SDO_NET1_PLINK$ tables, and updates the xxx_SDO_NETWORK_METADATA views. All geometry columns are named GEOMETRY. Both the node and link tables contain a cost column named COST.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_SDO_NETWORK(&#39;SDO_NET1&#39;, 1, TRUE, TRUE);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL983"></a>
<div class="props_rev_3"><a id="GUID-03A58B2C-8B3F-4BD5-9A3D-7448B30DBC7D"></a>
<h2 id="TOPOL-GUID-03A58B2C-8B3F-4BD5-9A3D-7448B30DBC7D" class="sect2">SDO_NET.CREATE_SUBPATH_TABLE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_SUBPATH_TABLE(
     table_name         IN VARCHAR2,
     geom_column        IN VARCHAR2,
     storage_parameters IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a subpath table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106949"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-03A58B2C-8B3F-4BD5-9A3D-7448B30DBC7D__GUID-9210BF21-7146-4897-86A9-A6CE57CB4E87"><!-- --></a>table_name</dt>
<dd>
<p>Name of the subpath table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106950"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-03A58B2C-8B3F-4BD5-9A3D-7448B30DBC7D__GUID-E5650E4F-7F14-4D36-B5E4-3242E34D165A"><!-- --></a>geom_column</dt>
<dd>
<p>For a spatial network, name of the column containing the geometry objects associated with the subpaths.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106951"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-03A58B2C-8B3F-4BD5-9A3D-7448B30DBC7D__GUID-9046A354-28B6-461C-8B6B-54B8D3597FD4"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the subpath table (described in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>). Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The subpath table is described in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.</p>
<p>To use subpaths with a network, you must create one or more path tables and their associated path-link tables.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a subpath table named ROADS_SUBPATHS that contains a geometry column named SUBPATH_GEOMETRY.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_SUBPATH_TABLE(&#39;ROADS_SUBPATHS&#39;, &#39;SUBPATH_GEOMETRY&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL984"></a>
<div class="props_rev_3"><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9"></a>
<h2 id="TOPOL-GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9" class="sect2">SDO_NET.CREATE_TOPO_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.CREATE_TOPO_NETWORK(
     network                IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_directed            IN BOOLEAN,
     node_with_cost         IN BOOLEAN DEFAULT FALSE,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);

or

SDO_NET.CREATE_TOPO_NETWORK(
     network                IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_directed            IN BOOLEAN,
     node_table_name        IN VARCHAR2,
     node_cost_column       IN VARCHAR2,
     link_table_name        IN VARCHAR2,
     link_cost_column       IN VARCHAR2,
     path_table_name        IN VARCHAR2,
     path_geom_column       IN VARCHAR2,
     path_link_table_name   IN VARCHAR2,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);

or

SDO_NET.CREATE_TOPO_NETWORK(
     network                IN VARCHAR2,
     no_of_hierarchy_levels IN NUMBER,
     is_directed            IN BOOLEAN,
     node_table_name        IN VARCHAR2,
     node_geom_column       IN VARCHAR2,
     node_cost_column       IN VARCHAR2,
     link_table_name        IN VARCHAR2,
     link_cost_column       IN VARCHAR2,
     path_table_name        IN VARCHAR2,
     path_geom_column       IN VARCHAR2,
     path_link_table_name   IN VARCHAR2,
     subpath_table_name     IN VARCHAR2,
     subpath_geom_column    IN VARCHAR2,
     is_complex             IN BOOLEAN DEFAULT FALSE,
     storage_parameters     IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Creates a spatial topology network containing SDO_TOPO_GEOMETRY objects, creates all necessary tables, and updates the network metadata.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106952"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-EEA862F5-17C0-40D3-B1B6-BC04177D7CD0"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106953"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-0B2FAB4E-A3FA-4D81-8F62-AAF5BED445DF"><!-- --></a>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106954"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-E586935E-7B70-4AE8-9C0F-EE677C6A22C6"><!-- --></a>is_directed</dt>
<dd>
<p>A Boolean value. <code class="codeph">TRUE</code> indicates that the links are directed; <code class="codeph">FALSE</code> indicates that the links are undirected (not directed).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106955"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-BA269A34-6295-44D7-A3FA-B8B6E1F545E2"><!-- --></a>node_with_cost</dt>
<dd>
<p>A Boolean value. <code class="codeph">TRUE</code> causes a column named COST to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table; <code class="codeph">FALSE</code> (the default) causes a column named COST not to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106956"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-7ED53764-09FB-4001-B080-8FB819D18A8B"><!-- --></a>node_table_name</dt>
<dd>
<p>Name of the node table to be created. (The node table is explained in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.) If you use the format that does not specify this parameter, a node table named <span class="italic">&lt;network-name&gt;</span>_NODE$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106957"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-50FF5F34-6BA1-4557-B47E-466B08391A3F"><!-- --></a>node_cost_column</dt>
<dd>
<p>Name of the cost column in the node table. (The node table is explained in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106958"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-7803AEB5-F285-4C01-ADA9-12D6D848540B"><!-- --></a>link_table_name</dt>
<dd>
<p>Name of the link table to be created. (The link table is explained in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.) If you use the format that does not specify this parameter, a link table named <span class="italic">&lt;network-name&gt;</span>_LINK$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106959"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-ADD045CD-26A2-4FAA-B1E4-77E092B23BE2"><!-- --></a>link_cost_column</dt>
<dd>
<p>Name of the cost column in the link table. (The link table is explained in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106960"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-607DE57F-E133-4BB6-A080-7941A13E8E56"><!-- --></a>path_table_name</dt>
<dd>
<p>Name of the path table to be created. (The path table is explained in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>.) If you use the format that does not specify this parameter, a path table named <span class="italic">&lt;network-name&gt;</span>_PATH$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106961"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-BFC4EB63-5C81-45D9-8BCC-B299E594F320"><!-- --></a>path_geom_column</dt>
<dd>
<p>Name of the geometry column in the path table. (The path table is explained in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106962"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-E660415C-058C-4C78-91C7-15442E4DAE41"><!-- --></a>path_link_table_name</dt>
<dd>
<p>Name of the path-link table to be created. (The path-link table is explained in <a href="network-data-model-graph-overview.htm#GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8">Path-Link Table</a>.) If you use the format that does not specify this parameter, a path-link table named <span class="italic">&lt;network-name&gt;</span>_PLINK$ is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106963"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-4A14EFEA-C9D4-4B72-B436-F311786B4070"><!-- --></a>subpath_table_name</dt>
<dd>
<p>Name of the subpath table to be created. (The subpath table is explained in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106964"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-07496F3C-CE12-4B33-A9D5-01755A628A5E"><!-- --></a>subpath_geom_column</dt>
<dd>
<p>Name of the geometry column in the subpath table. (The subpath table is explained in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106965"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-2DC59CF5-1863-4256-98B1-EB6411D16E94"><!-- --></a>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106966"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9__GUID-957A1BDC-F39C-437E-BFE2-D01A1BCF428C"><!-- --></a>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code class="codeph">TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure provides a convenient way to create a spatial network when the node, link, and optional related tables do not already exist. The procedure creates the network; creates the node, link, path, and path-link tables for the network; and inserts the appropriate information in the xxx_SDO_NETWORK_METADATA views (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>). The node and link tables contain a topology geometry column named TOPO_GEOMETRY of type SDO_TOPO_GEOMETRY.</p>
<p>An exception is generated if any of the tables to be created already exists.</p>
<p>The procedure has two formats. The simpler format creates the tables using default values for the table name and the geometry and cost column names. The other format lets you specify names for the tables and the geometry and cost columns.</p>
<p>As an alternative to using this procedure, you can create the network as follows: create the tables using the <a href="SDO_NET-reference.htm#GUID-3A7D9D56-788A-45E2-95E9-955001874C15">SDO_NET.CREATE_NODE_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-297C93AF-B817-4B50-A734-08F9B45D2373">SDO_NET.CREATE_LINK_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82">SDO_NET.CREATE_PATH_TABLE</a>, and <a href="SDO_NET-reference.htm#GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedures; and insert the appropriate row in the USER_SDO_NETWORK_METADATA view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates a directed spatial topology geometry network named <code class="codeph">TOPO_NET1</code>. The example creates the TOPO_NET1_NODE$, TOPO_NET1_LINK$, TOPO_NET1_PATH$, and TOPO_NET1_PLINK$ tables, and updates the xxx_SDO_NETWORK_METADATA views. The topology geometry columns are named TOPO_GEOMETRY. Both the node and link tables contain a cost column named COST.</p>
<pre dir="ltr">EXECUTE SDO_NET.CREATE_TOPO_NETWORK(&#39;TOPO_NET1&#39;, 1, TRUE, TRUE);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1135"></a>
<div class="props_rev_3"><a id="GUID-695F2516-B3F1-4C48-AB89-8101EE1DD843"></a>
<h2 id="TOPOL-GUID-695F2516-B3F1-4C48-AB89-8101EE1DD843" class="sect2">SDO_NET.DELETE_CHILD_FEATURES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_CHILD_FEATURES(
     parent_layer_id   IN NUMBER,
     parent_feature_id IN NUMBER,
     child_feature_ids IN SDO_NET_LAYER_FEAT_ARRAY);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Removes the parent-child relationship for the input child features.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106967"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-695F2516-B3F1-4C48-AB89-8101EE1DD843__GUID-E1914AC8-2EAC-49E1-B734-A34B18EF5291"><!-- --></a>parent_layer_id</dt>
<dd>
<p>ID of the parent feature layer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106968"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-695F2516-B3F1-4C48-AB89-8101EE1DD843__GUID-6E551836-61BE-4A08-A84B-93609DA7F875"><!-- --></a>parent_feature_id</dt>
<dd>
<p>ID of the parent feature of the specified child features.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106969"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-695F2516-B3F1-4C48-AB89-8101EE1DD843__GUID-16BA7642-C437-4601-B6DD-300DD0A5F023"><!-- --></a>child_feature_ids</dt>
<dd>
<p>IDs of the child features. (The SDO_NET_LAYER_FEAT_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The specified parent and child features must exist.</p>
<p>To delete the child features at specified sequence points, use the <a href="SDO_NET-reference.htm#GUID-F1A51320-5BE4-4632-8611-0E54AA93C8F6">SDO_NET.DELETE_CHILD_FEATURES_AT</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes a child feature with feature ID 1 in the <code class="codeph">POI</code> feature layer.</p>
<pre dir="ltr">DECLARE
  parent_layer_id NUMBER;
  parent_feature_id NUMBER := 1;
  child_layer_id NUMBER;
  child_feature_ids SDO_NET_LAYER_FEAT_ARRAY := SDO_NET_LAYER_FEAT_ARRAY();
BEGIN
  parent_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;PARENT_LAYER&#39;);
  child_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  child_feature_ids.extend;
  child_feature_ids(1) := SDO_NET_LAYER_FEAT(child_layer_id, 1);
  sdo_net.delete_child_features(parent_layer_id, parent_feature_id, child_feature_ids);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1136"></a>
<div class="props_rev_3"><a id="GUID-F1A51320-5BE4-4632-8611-0E54AA93C8F6"></a>
<h2 id="TOPOL-GUID-F1A51320-5BE4-4632-8611-0E54AA93C8F6" class="sect2">SDO_NET.DELETE_CHILD_FEATURES_AT</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_CHILD_FEATURES_AT(
     parent_layer_id   IN NUMBER,
     parent_feature_id IN NUMBER,
     sequence_numbers  IN SDO_NUMBER_ARRAY);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Removes the parent-child relationship for the child features at the specified sequence numbers.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106970"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F1A51320-5BE4-4632-8611-0E54AA93C8F6__GUID-B58FD8E4-2034-4577-BE00-47420470501D"><!-- --></a>parent_layer_id</dt>
<dd>
<p>ID of the parent feature layer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106971"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F1A51320-5BE4-4632-8611-0E54AA93C8F6__GUID-72A50424-F2B9-4C2F-A3F4-3E4B453F037D"><!-- --></a>parent_feature_id</dt>
<dd>
<p>ID of the parent feature of the specified child features.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106972"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F1A51320-5BE4-4632-8611-0E54AA93C8F6__GUID-C4A0B539-1F3A-4B80-8952-354CF738AC5D"><!-- --></a>child_feature_ids</dt>
<dd>
<p>IDs of the child features. (The SDO_NET_LAYER_FEAT_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The specified parent and child features must exist.</p>
<p>To delete child features specified by their ID values, use the <a href="SDO_NET-reference.htm#GUID-695F2516-B3F1-4C48-AB89-8101EE1DD843">SDO_NET.DELETE_CHILD_FEATURES</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes a child feature at sequence number 1.</p>
<pre dir="ltr">DECLARE
  parent_layer_id NUMBER;
  parent_feature_id NUMBER := 1;
  sequence_numbers SDO_NUMBER_ARRAY := SDO_NUMBER_ARRAY(1);
BEGIN
  parent_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;PARENT_LAYER&#39;);
  sdo_net.delete_child_features_at(parent_layer_id, parent_feature_id, sequence_numbers);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1094"></a>
<div class="props_rev_3"><a id="GUID-CF6F39F9-A078-4D07-81B5-BA35E9C12E0C"></a>
<h2 id="TOPOL-GUID-CF6F39F9-A078-4D07-81B5-BA35E9C12E0C" class="sect2">SDO_NET.DELETE_DANGLING_FEATURES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_DANGLING_FEATURES(
     feature_layer_id IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes dangling features in a feature layer. A dangling feature is a feature that is not associated with any network elements (nodes or links).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106973"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CF6F39F9-A078-4D07-81B5-BA35E9C12E0C__GUID-985AA4DF-EA46-4195-ACFD-D948E6C6D719"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer containing the features.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To find the dangling features in a feature layer, use the <a href="SDO_NET-reference.htm#GUID-DCA8B6C3-67BA-4087-90A3-E335869B7745">SDO_NET.GET_DANGLING_FEATURES</a> function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes any dangling features in the <code class="codeph">POI</code> feature layer in the <code class="codeph">GRID</code> network.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  sdo_net.delete_dangling_features(feature_layer_id);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1096"></a>
<div class="props_rev_3"><a id="GUID-9E9910B6-D2B4-4EEC-80AB-C0D84AE52F4E"></a>
<h2 id="TOPOL-GUID-9E9910B6-D2B4-4EEC-80AB-C0D84AE52F4E" class="sect2">SDO_NET.DELETE_DANGLING_LINKS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_DANGLING_LINKS(
     network IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes links that are not referenced by any feature in any feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106974"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9E9910B6-D2B4-4EEC-80AB-C0D84AE52F4E__GUID-61F1C1DB-28B7-4C34-A1D5-8A185EE074C2"><!-- --></a>network</dt>
<dd>
<p>Name of the network.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To find the dangling links in a network, use the <a href="SDO_NET-reference.htm#GUID-26F55C3A-8E26-4581-82D9-5C470AA236B8">SDO_NET.GET_DANGLING_LINKS</a> function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes any dangling links in the <code class="codeph">GRID</code> network.</p>
<pre dir="ltr">EXECUTE sdo_net.delete_dangling_links(&#39;GRID&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1098"></a>
<div class="props_rev_3"><a id="GUID-E23E020D-F7EB-4A60-A4C1-E7D452F8DBAD"></a>
<h2 id="TOPOL-GUID-E23E020D-F7EB-4A60-A4C1-E7D452F8DBAD" class="sect2">SDO_NET.DELETE_DANGLING_NODES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_DANGLING_NODES(
     network IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes nodes that are not referenced by any feature in any feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106975"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E23E020D-F7EB-4A60-A4C1-E7D452F8DBAD__GUID-EAB829DA-7AA5-4A2D-98BB-642DD5B0B71D"><!-- --></a>network</dt>
<dd>
<p>Name of the network.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To find the dangling nodes in a network, use the <a href="SDO_NET-reference.htm#GUID-7F116719-2211-4D05-BAA2-017CD3795C28">SDO_NET.GET_DANGLING_NODES</a> function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes any dangling nodes in the <code class="codeph">GRID</code> network.</p>
<pre dir="ltr">EXECUTE sdo_net.delete_dangling_nodes(&#39;GRID&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1100"></a>
<div class="props_rev_3"><a id="GUID-65E7E4FD-6339-4AB8-BED2-51DC6BABD959"></a>
<h2 id="TOPOL-GUID-65E7E4FD-6339-4AB8-BED2-51DC6BABD959" class="sect2">SDO_NET.DELETE_FEATURE_ELEMENTS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_FEATURE_ELEMENTS(
     feature_layer_id IN NUMBER,
     feature_id       IN NUMBER,
     feature_elements IN SDO_NET_FEAT_ELEM_ARRAY,
     delete_net_elems IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes feature elements from a feature.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106976"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-65E7E4FD-6339-4AB8-BED2-51DC6BABD959__GUID-4A746C0C-B654-4194-B0C8-ED85B5ED1909"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer containing the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106977"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-65E7E4FD-6339-4AB8-BED2-51DC6BABD959__GUID-0C6642FE-592C-46D5-A172-4BA3CCF26E12"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature from which to delete the feature elements.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106978"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-65E7E4FD-6339-4AB8-BED2-51DC6BABD959__GUID-4BD2D8D1-0274-4EEA-A623-6747ED272C5B"><!-- --></a>feature_elements</dt>
<dd>
<p>Feature elements to be deleted. (The SDO_NET_FEAT_ELEM_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106979"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-65E7E4FD-6339-4AB8-BED2-51DC6BABD959__GUID-84C2C278-BA51-4EB0-BEC1-8EB08B8D8786"><!-- --></a>delete_net_elems</dt>
<dd>
<p>Controls whether all network elements that are referenced only by the specified features are also deleted: <code class="codeph">TRUE</code> also deletes such elements; <code class="codeph">FALSE</code> (the default) does not also delete such elements.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>Contrast this procedure with <a href="SDO_NET-reference.htm#GUID-94417626-197A-48AB-8C41-61AE665FA733">SDO_NET.DELETE_FEATURE_ELEMENTS_AT</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example two point feature elements from a specified feature layer.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  elements SDO_NET_FEAT_ELEM_ARRAY := SDO_NET_FEAT_ELEM_ARRAY();
  link_id NUMBER := 1314;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  elements.extend;
  elements(1) := SDO_NET_FEAT_ELEM(SDO_NET.FEAT_ELEM_TYPE_POL, link_id, 0.2, null);
  elements.extend;
  elements(2) := SDO_NET_FEAT_ELEM(SDO_NET.FEAT_ELEM_TYPE_POL, link_id, 0.7, null);
  sdo_net.delete_feature_elements(feature_layer_id, feature_id, elements);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1101"></a>
<div class="props_rev_3"><a id="GUID-94417626-197A-48AB-8C41-61AE665FA733"></a>
<h2 id="TOPOL-GUID-94417626-197A-48AB-8C41-61AE665FA733" class="sect2">SDO_NET.DELETE_FEATURE_ELEMENTS_AT</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_FEATURE_ELEMENTS_AT(
     feature_layer_id IN NUMBER,
     feature_id       IN NUMBER,
     sequence_numbers IN SDO_NUMBER_ARRAY,
     delete_net_elems IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes the feature elements with specified sequence numbers from a feature.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106980"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-94417626-197A-48AB-8C41-61AE665FA733__GUID-D84F17B9-5A6B-495E-B993-38170E5C4E33"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer containing the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106981"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-94417626-197A-48AB-8C41-61AE665FA733__GUID-BB1921CA-D44D-449C-ADA1-3C7493D336FD"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature from which to delete the feature elements.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106982"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-94417626-197A-48AB-8C41-61AE665FA733__GUID-B56E07C8-45C6-4087-A4AF-0FDF918932E7"><!-- --></a>sequence_numbers</dt>
<dd>
<p>Array of sequence numbers for the feature elements to be deleted.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106983"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-94417626-197A-48AB-8C41-61AE665FA733__GUID-B2C3DC14-0141-4236-980E-FA80FB103BF3"><!-- --></a>delete_net_elems</dt>
<dd>
<p>Controls whether all network elements that are referenced only by the specified features are also deleted: <code class="codeph">TRUE</code> also deletes such elements; <code class="codeph">FALSE</code> (the default) does not also delete such elements.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>Contrast this procedure with <a href="SDO_NET-reference.htm#GUID-65E7E4FD-6339-4AB8-BED2-51DC6BABD959">SDO_NET.DELETE_FEATURE_ELEMENTS</a></p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes the feature element at sequence number 1.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  sequence_numbers SDO_NUMBER_ARRAY := SDO_NUMBER_ARRAY();
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  sequence_numbers.extend;
  sequence_numbers(1) := 1;
  sdo_net.delete_feature_elements_at(feature_layer_id, feature_id, sequence_numbers);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1102"></a>
<div class="props_rev_3"><a id="GUID-2ADE4F7D-6499-4331-BF37-0CBAA5445D75"></a>
<h2 id="TOPOL-GUID-2ADE4F7D-6499-4331-BF37-0CBAA5445D75" class="sect2">SDO_NET.DELETE_FEATURES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_FEATURES(
     feature_layer_id IN NUMBER,
     feature_ids      IN SDO_NUMBER_ARRAY,
     delete_net_elems IN BOOLEAN DEFAULT FALSE,
     delete_children  IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes features.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106984"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2ADE4F7D-6499-4331-BF37-0CBAA5445D75__GUID-E0CF6C5A-0CE0-4049-ACC1-C120B5AEF3F3"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer containing the features</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106985"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2ADE4F7D-6499-4331-BF37-0CBAA5445D75__GUID-F4EEF5FF-1540-43F2-B8AE-46EE45599B97"><!-- --></a>feature_ids</dt>
<dd>
<p>IDs of the features to be deleted.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106986"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2ADE4F7D-6499-4331-BF37-0CBAA5445D75__GUID-31CB71F0-F1A7-4EDC-A040-0A486C57957B"><!-- --></a>delete_net_elems</dt>
<dd>
<p>Controls whether all network elements that are referenced only by the specified features are also deleted: <code class="codeph">TRUE</code> also deletes such elements; <code class="codeph">FALSE</code> (the default) does not also delete such elements.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106987"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2ADE4F7D-6499-4331-BF37-0CBAA5445D75__GUID-F536D88B-4559-4805-896A-A3D28D75C430"><!-- --></a>delete_children</dt>
<dd>
<p>Controls whether all child features that are referenced only by the specified features are also deleted: <code class="codeph">TRUE</code> also deletes such features; <code class="codeph">FALSE</code> (the default) does not also delete such features.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>(None.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes the feature with feature ID 1 from the <code class="codeph">POI</code> feature layer in the <code class="codeph">GRID</code> network.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_ids SDO_NUMBER_ARRAY := SDO_NUMBER_ARRAY(1);
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  sdo_net.delete_features(feature_layer_id, feature_ids, false, false);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL985"></a>
<div class="props_rev_3"><a id="GUID-7B3B50BA-20E1-477F-968A-218C540DEA6E"></a>
<h2 id="TOPOL-GUID-7B3B50BA-20E1-477F-968A-218C540DEA6E" class="sect2">SDO_NET.DELETE_LINK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_LINK(
     network IN VARCHAR2,
     link_id IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes a link, along with all dependent network elements and all references to the link from features.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106988"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7B3B50BA-20E1-477F-968A-218C540DEA6E__GUID-4C9D2A52-5EEC-4334-BC73-1B966B6E1B31"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106989"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7B3B50BA-20E1-477F-968A-218C540DEA6E__GUID-0713E0DA-931C-4E7E-94EA-187698BF0E53"><!-- --></a>link_id</dt>
<dd>
<p>ID of the link to delete.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure deletes the specified link from the link table (described in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>), and it deletes any other network elements that depend on this link. For example, if the specified link is included in any paths and subpaths, those paths and subpaths are deleted also.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes the link in the SDO_NET2 network whose link ID is 1.</p>
<pre dir="ltr">SELECT SDO_NET.DELETE_LINK(&#39;SDO_NET2&#39;, 1);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL986"></a>
<div class="props_rev_3"><a id="GUID-44197195-13F2-4D0A-9C76-69C4FFDA8A00"></a>
<h2 id="TOPOL-GUID-44197195-13F2-4D0A-9C76-69C4FFDA8A00" class="sect2">SDO_NET.DELETE_NODE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_NODE(
     network IN VARCHAR2,
     node_id IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes a node, along with all dependent network elements and all references to the node from features.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106990"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-44197195-13F2-4D0A-9C76-69C4FFDA8A00__GUID-124592AC-9CE3-46AE-BD7F-17619A33DF5A"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106991"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-44197195-13F2-4D0A-9C76-69C4FFDA8A00__GUID-DD92B12E-0B58-4CE3-B7EB-32212A2BEB2D"><!-- --></a>node_id</dt>
<dd>
<p>ID of the node to delete.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure deletes the specified node from the node table (described in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>), and it deletes any other network elements that depend on this node. For example, if the specified node is included in any link definitions, those links are deleted; and if any of the deleted links are included in any paths and subpaths, those paths and subpaths are deleted also.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes the node in the SDO_NET2 network whose node ID is 1.</p>
<pre dir="ltr">SELECT SDO_NET.DELETE_NODE(&#39;SDO_NET2&#39;, 1);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL987"></a>
<div class="props_rev_3"><a id="GUID-988540E6-3A51-4AFE-8A5D-F7B6E8372491"></a>
<h2 id="TOPOL-GUID-988540E6-3A51-4AFE-8A5D-F7B6E8372491" class="sect2">SDO_NET.DELETE_PATH</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_PATH(
     network IN VARCHAR2,
     path_id IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes a path and all dependent network elements.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106992"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-988540E6-3A51-4AFE-8A5D-F7B6E8372491__GUID-6850ED85-42A7-4846-9ECD-DFF3898C9113"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106993"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-988540E6-3A51-4AFE-8A5D-F7B6E8372491__GUID-6FAB0D6A-6289-4EC5-A713-D54E8A08992B"><!-- --></a>path_id</dt>
<dd>
<p>ID of the path to delete.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure deletes the specified path from the path table (described in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>), and it deletes any other network elements that depend on this path. For example, if the specified path has any subpaths, those subpaths are deleted also.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes the path in the SDO_NET2 network whose path ID is 1.</p>
<pre dir="ltr">SELECT SDO_NET.DELETE_PATH(&#39;SDO_NET2&#39;, 1);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1103"></a>
<div class="props_rev_3"><a id="GUID-22A88A8E-B974-47C7-B34E-3C29DEEB8808"></a>
<h2 id="TOPOL-GUID-22A88A8E-B974-47C7-B34E-3C29DEEB8808" class="sect2">SDO_NET.DELETE_PHANTOM_FEATURES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_PHANTOM_FEATURES(
     feature_layer_id IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes phantom features in a feature layer. A phantom feature is a feature that references nonexistent network elements (nodes or links).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106994"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-22A88A8E-B974-47C7-B34E-3C29DEEB8808__GUID-C2B2B916-2A0F-456A-B391-B81F789C50DE"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer containing the features.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To find the phantom features in a feature layer, use the <a href="SDO_NET-reference.htm#GUID-AC1C2D01-88A9-43F4-94B3-83BF8CF54D99">SDO_NET.GET_PHANTOM_FEATURES</a> function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes any phantom features in the <code class="codeph">POI</code> feature layer in the <code class="codeph">GRID</code> network.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  sdo_net.delete_phantom_features(feature_layer_id);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL988"></a>
<div class="props_rev_3"><a id="GUID-12D3E15C-4EAC-4B97-87E8-AD1370EC0A33"></a>
<h2 id="TOPOL-GUID-12D3E15C-4EAC-4B97-87E8-AD1370EC0A33" class="sect2">SDO_NET.DELETE_SUBPATH</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DELETE_SUBPATH(
     network    IN VARCHAR2,
     subpath_id IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Deletes a subpath.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106995"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-12D3E15C-4EAC-4B97-87E8-AD1370EC0A33__GUID-67B68137-FAD6-4203-9281-619925B4D390"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106996"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-12D3E15C-4EAC-4B97-87E8-AD1370EC0A33__GUID-48F65947-4EBB-4C58-9919-3AE2CD809A1D"><!-- --></a>subpath_id</dt>
<dd>
<p>ID of the subpath to delete.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure deletes the specified subpath from the path table (described in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>). It does not delete any other network elements, because no other elements depend on a subpath definition.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deletes the subpath in the SDO_NET2 network whose subpath ID is 17.</p>
<pre dir="ltr">SELECT SDO_NET.DELETE_SUBPATH(&#39;SDO_NET2&#39;, 17);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL989"></a>
<div class="props_rev_3"><a id="GUID-EF58A78E-E396-4ECE-87C7-85FF82C8BE2A"></a>
<h2 id="TOPOL-GUID-EF58A78E-E396-4ECE-87C7-85FF82C8BE2A" class="sect2">SDO_NET.DEREGISTER_CONSTRAINT</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DEREGISTER_CONSTRAINT(
     constraint_name IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Unloads (removes) the class for the specified network constraint from the Java repository in the database, and deletes the row for that constraint from the USER_SDO_NETWORK_CONSTRAINTS view (described in <a href="network-data-model-graph-overview.htm#GUID-D5D47648-FCF7-46A9-9047-F6E70F616C89">xxx_SDO_NETWORK_CONSTRAINTS Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106997"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EF58A78E-E396-4ECE-87C7-85FF82C8BE2A__GUID-44010FFD-EE2E-445F-8D62-1083A7B8D0D5"><!-- --></a>constraint_name</dt>
<dd>
<p>Name of the network constraint. Must match a value in the CONSTRAINT column of the USER_SDO_NETWORK_CONSTRAINTS view.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>Use this procedure if you want to disable a network constraint that you had previously enabled, such as by using the <a href="SDO_NET-reference.htm#GUID-47B852BA-EAFC-453F-85F1-20A7DCF541D9">SDO_NET.REGISTER_CONSTRAINT</a>procedure. For more information about network constraints, see <a href="network-data-model-graph-overview.htm#GUID-2A71EBFE-F28F-4A87-9F49-4E7674A08C08">Network Constraints</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example deregisters (disables) a network constraint named <code class="codeph">GivenProhibitedTurn</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.DEREGISTER_CONSTRAINT(&#39;GivenProhibitedTurn&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1105"></a>
<div class="props_rev_3"><a id="GUID-D9F64842-CDEB-4A96-8DF9-5902DE9BF6E8"></a>
<h2 id="TOPOL-GUID-D9F64842-CDEB-4A96-8DF9-5902DE9BF6E8" class="sect2">SDO_NET.DROP_FEATURE_LAYER</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DROP_FEATURE_LAYER(
     network_name       IN VARCHAR2,
     feature_layer_name IN VARCHAR2,
     drop_tables        IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Drops (deletes) a feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106998"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D9F64842-CDEB-4A96-8DF9-5902DE9BF6E8__GUID-B43F9544-5E0E-4BC2-9D12-5FD9C93078E3"><!-- --></a>network_name</dt>
<dd>
<p>Name of the network containing the feature layer to be dropped.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-106999"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D9F64842-CDEB-4A96-8DF9-5902DE9BF6E8__GUID-961EE36F-8E07-4F5A-B211-A17E1CB65272"><!-- --></a>feature_layer_name</dt>
<dd>
<p>Name of the feature layer to be dropped.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107000"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D9F64842-CDEB-4A96-8DF9-5902DE9BF6E8__GUID-DEAF2E44-F6CD-4797-A17A-2D8C535616E7"><!-- --></a>drop_tables</dt>
<dd>
<p>Controls whether all relevant tables are deleted along with the feature layer metadata: <code class="codeph">TRUE</code> drops the feature table, feature element relationships table, and feature hierarchy table, and deletes the feature layer metadata; <code class="codeph">FALSE</code> (the default) deletes the feature layer metadata but does not drop the feature table, feature element relationships table, and feature hierarchy table.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>(None.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example drops the <code class="codeph">POI</code> feature layer in the <code class="codeph">GRID</code> network, and (because <code class="codeph">drop_tables</code> is <code class="codeph">true</code>) drops the feature table, feature element relationships table, and feature hierarchy table, and deletes the feature layer metadata</p>
<pre dir="ltr">EXECUTE sdo_net.drop_feature_layer(&#39;GRID&#39;, &#39;POI&#39;, true);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL990"></a>
<div class="props_rev_3"><a id="GUID-44F7A137-CD75-4F58-91DA-5234BB94258E"></a>
<h2 id="TOPOL-GUID-44F7A137-CD75-4F58-91DA-5234BB94258E" class="sect2">SDO_NET.DROP_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.DROP_NETWORK(
     network IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Drops (deletes) a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107001"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-44F7A137-CD75-4F58-91DA-5234BB94258E__GUID-15D01BBF-943C-48BB-9505-578E77986686"><!-- --></a>network</dt>
<dd>
<p>Name of the network to be dropped.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure also deletes the node, link, and path tables associated with the network, and the network metadata for the network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example drops the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.DROP_NETWORK(&#39;ROADS_NETWORK&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL991"></a>
<div class="props_rev_3"><a id="GUID-182C0834-3676-481C-94D4-B6242DE39311"></a>
<h2 id="TOPOL-GUID-182C0834-3676-481C-94D4-B6242DE39311" class="sect2">SDO_NET.FIND_CONNECTED_COMPONENTS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.FIND_CONNECTED_COMPONENTS(
     network IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Finds all connected components for a specified link level in a network, and stores the information in the connected component table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107002"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-182C0834-3676-481C-94D4-B6242DE39311__GUID-963D821E-C237-470C-B2CA-4944C1A70C97"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107003"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-182C0834-3676-481C-94D4-B6242DE39311__GUID-13CB7658-3EBE-4ABF-A494-98256A939F5F"><!-- --></a>link_level</dt>
<dd>
<p>Link level for which to find connected components (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107004"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-182C0834-3676-481C-94D4-B6242DE39311__GUID-9B2A0720-0F16-438E-AFEF-5EA2DCB54146"><!-- --></a>component_table_name</dt>
<dd>
<p>Name of the connected component table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with information for the specified link level.) The connected component table is described in <a href="network-data-model-graph-overview.htm#GUID-1953FCFA-F074-42F9-9522-9AE93A16E0E8">Connected Component Table</a>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107005"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-182C0834-3676-481C-94D4-B6242DE39311__GUID-E64042F4-8D0A-47EF-AF61-EEC852723932"><!-- --></a>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107006"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-182C0834-3676-481C-94D4-B6242DE39311__GUID-FAF7E1E4-4FF7-4B83-ACA1-D1E327FC909A"><!-- --></a>log_file</dt>
<dd>
<p>Log file containing information about spatial network operations, including any possible errors or problems.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107007"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-182C0834-3676-481C-94D4-B6242DE39311__GUID-40A26570-C5A4-4629-A672-C931AA3865AE"><!-- --></a>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code class="codeph">W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code class="codeph">A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code class="codeph">A</code> and the log file does not exist, a new log file is created.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure finds, for each node in the specified network, information about all other nodes that are reachable from that node, and it stores the information in the specified connected component table. Having this information in the table enables better performance for many network analysis operations.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example finds the connected components for link level 1 in the SDO_PARTITIONED network, and creates or updates the SDO_PARTITIONED_CONN_COMP_TAB table. Information about the operation is added (<code class="codeph">open_mode =&gt; &#39;a&#39;</code>) to the <code class="codeph">sdo_partitioned.log</code> file, located in the location associated with the directory object named <code class="codeph">LOG_DIR</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.FIND_CONNECTED_COMPONENTS(-
  network =&gt; &#39;SDO_PARTITIONED&#39;, -
  link_level =&gt; 1,-
  component_table_name =&gt; &#39;sdo_partitioned_conn_comp_tab&#39;,-
  log_loc =&gt; &#39;LOG_DIR&#39;, log_file=&gt; &#39;sdo_partitioned.log&#39;,-
  open_mode =&gt; &#39;a&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1106"></a>
<div class="props_rev_3"><a id="GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706"></a>
<h2 id="TOPOL-GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706" class="sect2">SDO_NET.GENERATE_NODE_LEVELS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GENERATE_NODE_LEVELS(
     network               IN VARCHAR2,
     node_level_table_name IN VARCHAR2,
     overwrite             IN BOOLEAN DEFAULT FALSE,
     log_loc               IN VARCHAR2,
     log_file              IN VARCHAR2,
     open_mode             IN VARCHAR2 DEFAULT &#39;A&#39;);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Generates node levels for a specified multilevel network, and stores the information in a table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107008"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706__GUID-15B245B0-0A77-49AA-9C51-0612F575DD6D"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107009"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706__GUID-7A4C209E-9763-452E-BD7E-10592E043276"><!-- --></a>node_level_table_name</dt>
<dd>
<p>Table in which to store node level information. This table must have the following definition: <code class="codeph">(node_id NUMBER PRIMARY KEY, link_level NUMBER)</code></p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107010"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706__GUID-CB26EBE6-6309-4393-BCE8-941621D738C4"><!-- --></a>overwrite</dt>
<dd>
<p>Controls the behavior if the table specified in <code class="codeph">node_level_table_name</code> already exists: <code class="codeph">TRUE</code> replaces the contents of that table with new data; <code class="codeph">FALSE</code> (the default) generates an error. (This parameter has no effect if the table specified in <code class="codeph">node_level_table_name</code> does not exist.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107011"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706__GUID-80CCF219-D190-4393-AD90-C2A7DCFA18C3"><!-- --></a>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107012"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706__GUID-F5251CBC-676E-41E2-8D81-328F5D44C780"><!-- --></a>log_file</dt>
<dd>
<p>Log file containing information about spatial network operations, including any possible errors or problems.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107013"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706__GUID-0291E760-44BF-4F7A-99B7-F3727EEF4238"><!-- --></a>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code class="codeph">W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code class="codeph">A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code class="codeph">A</code> and the log file does not exist, a new log file is created.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>If <code class="codeph">network</code> is not a multilevel network (one with multiple link levels), this procedure does not perform any operation.</p>
<p>This procedure is used internally by the <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure. Therefore, if you have executed <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a>, you do not need to execute this procedure. However, you do need to execute this procedure explicitly in these cases:</p>
<ul style="list-style-type: disc;">
<li>
<p>When a Java application has been configured to read partitions from the node or link tables instead of from BLOBs, and partition BLOBs have never been generated on the network.</p>
</li>
<li>
<p>When a higher-level node has been added or deleted in the network and the node-partition relationship has been updated. Before you execute <a href="SDO_NET-reference.htm#GUID-4FA24762-D067-4A7F-9130-E054B6486CF9">SDO_NET.GENERATE_PARTITION_BLOB</a> to regenerate the containing partition BLOB or BLOBs, you must manually either update the node level table or execute this procedure (SDO_NET.GENERATE_NODE_LEVELS).</p>
</li>
</ul>
<p>The node level table name is stored in the NODE_LEVEL_TABLE_NAME column of the USER_SDO_NETWORK_METADATA view, which is described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example generates the node level information for the MY_MULTILEVEL_NET network, and stores the information in the MY_NET_NODE_LEVELS table. Information about the operation is added (<code class="codeph">open_mode =&gt; &#39;a&#39;</code>) to the <code class="codeph">my_multilevel_net.log</code> file, located in the location associated with the directory object named <code class="codeph">LOG_DIR</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.GENERATE_NODE_LEVELS(-
  network =&gt; &#39;MY_MULTILEVEL_NET&#39;, -
  node_level_table_name =&gt; &#39;MY_NET_NODE_LEVELS&#39;,-
  overwrite =&gt; FALSE,-
  log_loc =&gt; &#39;LOG_DIR&#39;, log_file=&gt; &#39;my_multilevel_net.log&#39;,-
  open_mode =&gt; &#39;a&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL992"></a>
<div class="props_rev_3"><a id="GUID-4FA24762-D067-4A7F-9130-E054B6486CF9"></a>
<h2 id="TOPOL-GUID-4FA24762-D067-4A7F-9130-E054B6486CF9" class="sect2">SDO_NET.GENERATE_PARTITION_BLOB</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GENERATE_PARTITION_BLOB(
     network              IN VARCHAR2,
     link_level           IN NUMBER DEFAULT 1,
     partition_id         N VARCHAR2,
     include_user_data    IN BOOLEAN,
     log_loc              IN VARCHAR2,
     log_file             IN VARCHAR2,
     open_mode            IN VARCHAR2 DEFAULT &#39;A&#39;,
     preform_delta_update IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Generates a single binary large object (BLOB) representation for a specified partition associated with a specified link level in the network, and stores the information in the existing partition BLOB table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107014"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4FA24762-D067-4A7F-9130-E054B6486CF9__GUID-79E9ACC4-6ECE-4356-8F35-E40FDE00122F"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107015"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4FA24762-D067-4A7F-9130-E054B6486CF9__GUID-AD93566C-A0A9-4EFF-A90E-8B7927C4403A"><!-- --></a>link_level</dt>
<dd>
<p>Link level for links to be included in the BLOB (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107016"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4FA24762-D067-4A7F-9130-E054B6486CF9__GUID-4E11AB2E-6DB3-41A5-AA2D-EFD4D7A8DD71"><!-- --></a>partition_id</dt>
<dd>
<p>Partition ID number. Network elements associated with the specified combination of link level and partition ID are included in the generated BLOB.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107017"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4FA24762-D067-4A7F-9130-E054B6486CF9__GUID-9AFBD8D0-C58F-4BD1-9B44-D874F1EC1967"><!-- --></a>include_user_data</dt>
<dd>
<p><code class="codeph">TRUE</code> if the BLOB should include any user data of category 0 (zero) associated with the network elements represented in each BLOB, or <code class="codeph">FALSE</code> if the BLOB should not include any user data.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107018"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4FA24762-D067-4A7F-9130-E054B6486CF9__GUID-C490A869-E931-4947-87C7-E0DB0703EF7E"><!-- --></a>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107019"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4FA24762-D067-4A7F-9130-E054B6486CF9__GUID-2564265E-E83F-45C7-ACCC-05B76ABDF83E"><!-- --></a>log_file</dt>
<dd>
<p>Log file containing information about spatial network operations, including any possible errors or problems.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107020"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4FA24762-D067-4A7F-9130-E054B6486CF9__GUID-246E4443-2534-4076-B6DB-205C219A1E67"><!-- --></a>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code class="codeph">W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code class="codeph">A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code class="codeph">A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107021"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4FA24762-D067-4A7F-9130-E054B6486CF9__GUID-DFF2E65B-6F69-43F7-9DF0-E2B7FE561C3A"><!-- --></a>perform_delta_update</dt>
<dd>
<p>(Reserved for future use. The only permitted value is <code class="codeph">FALSE</code>, the default.)</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This procedure adds a single new BLOB or replaces a single existing BLOB in the partition BLOB table, which must have been previously created using the <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure.</p>
<p>One use for this procedure is to perform a relatively quick update of the BLOB for a desired partition in a network that contains multiple large partitions, as opposed to than updating the BLOBs for all partitions using the <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example generates the partition BLOB for the partition associated with partition ID 1 and link level 1 in the SDO_PARTITIONED network, and adds or replaces the appropriate BLOB in the SDO_PARTITIONED_PART_BLOB_TAB table. Any user data of category 0 (zero) associated with the network elements is also included. Information about the operation is added (<code class="codeph">open_mode =&gt; &#39;a&#39;</code>) to the <code class="codeph">sdo_partitioned.log</code> file, located in the location associated with the directory object named <code class="codeph">LOG_DIR</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.GENERATE_PARTITION_BLOB(-
  network =&gt; &#39;SDO_PARTITIONED&#39;, -
  link_level =&gt; 1,-
  partition_id =&gt; 1,-
  include_user_data =&gt; true,-
  log_loc =&gt; &#39;LOG_DIR&#39;, log_file=&gt; &#39;sdo_partitioned.log&#39;,-
  open_mode =&gt; &#39;a&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL993"></a>
<div class="props_rev_3"><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA"></a>
<h2 id="TOPOL-GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA" class="sect2">SDO_NET.GENERATE_PARTITION_BLOBS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GENERATE_PARTITION_BLOBS(
     network                   IN VARCHAR2,
     link_level                IN NUMBER DEFAULT 1,
     partition_blob_table_name IN VARCHAR2,
     include_user_data         IN BOOLEAN,
     commit_for_each_blob      IN BOOLEAN DEFAULT TRUE,
     log_loc                   IN VARCHAR2,
     log_file                  IN VARCHAR2,
     open_mode                 IN VARCHAR2 DEFAULT &#39;A&#39;,
     perform_delta_update      IN BOOLEAN DEFAULT FALSE,
     regenerate_node_levels    IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Generates a binary large object (BLOB) representation for partitions associated with a specified link level in the network, and stores the information in the partition BLOB table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107022"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-00CED6BA-0BEA-49BA-9D24-21DBF77A0B55"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107023"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-45520678-AE74-45F9-BE17-C6D7828C5A90"><!-- --></a>link_level</dt>
<dd>
<p>Link level for links to be included in each BLOB (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107024"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-669F9AAE-B432-48A0-9A9E-87F41F7E1BA0"><!-- --></a>partition_blob_table_name</dt>
<dd>
<p>Name of the partition BLOB table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with information for the specified link level.) The partition BLOB table is described in <a href="network-data-model-graph-overview.htm#GUID-A2D0F3B6-2B2F-41B2-97F3-ED849E6DD2CE">Partition BLOB Table</a>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107025"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-18FD6A46-DB31-48FA-BDFA-522646E0CFE3"><!-- --></a>include_user_data</dt>
<dd>
<p><code class="codeph">TRUE</code> if each BLOB should include any user data of category 0 (zero) associated with the network elements represented in each BLOB, or <code class="codeph">FALSE</code> if each BLOB should not include any user data.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107026"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-E5AB6C34-C761-48F6-B9E8-46949F7E5207"><!-- --></a>commit_for_each_blob</dt>
<dd>
<p><code class="codeph">TRUE</code> (the default) if each partition BLOB should be committed to the database after it is generated, or <code class="codeph">FALSE</code> if each BLOB should not be committed (in which case you must perform one or more explicit commit operations).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107027"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-44CE41AE-BDBC-4E49-957A-7CC7B95B7517"><!-- --></a>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107028"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-BECD8099-7B84-44A8-875B-212E8F1A1D72"><!-- --></a>log_file</dt>
<dd>
<p>Log file containing information about spatial network operations, including any possible errors or problems.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107029"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-FD412E4D-F38B-4420-9743-B563DBEFB26C"><!-- --></a>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code class="codeph">W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code class="codeph">A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code class="codeph">A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107030"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-1C2212FE-F5F3-43FD-8B96-E7CBACCBC6DF"><!-- --></a>perform_delta_update</dt>
<dd>
<p>(Reserved for future use. The only permitted value is <code class="codeph">FALSE</code>, the default.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107031"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA__GUID-3566536A-487F-4AF3-A2AF-F4866032B7B0"><!-- --></a>regenerate_node_levels</dt>
<dd>
<p><code class="codeph">TRUE</code> to regenerate the node level table for multilevel networks, or <code class="codeph">FALSE</code> (the default) not to regenerate the node level table for multilevel networks. You should set this parameter to <code class="codeph">TRUE</code> if higher-level (second level or above) nodes are added or deleted from the network, or if the level of a node is changed. The level of a node is defined as the maximum link level coming into or out of the node.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>Generating partition BLOBs enables better performance for many network analysis operations, especially with large networks.</p>
<p>If the network is not partitioned, this procedure generates a single BLOB representing the entire network.</p>
<p>When this procedure is first executed on a multilevel network, it internally calls <a href="SDO_NET-reference.htm#GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706">SDO_NET.GENERATE_NODE_LEVELS</a> to create and populate the node level table (described in <a href="network-data-model-graph-overview.htm#GUID-040531CD-DE4F-4323-B6A7-89D257AD367D">Node Level Table (Optional)</a>). When this procedure is called subsequently on a multilevel network, you can use the <code class="codeph">regenerate_node_levels</code> parameter to specify whether to overwrite the existing node level table.</p>
<p>Do not confuse this procedure with <a href="SDO_NET-reference.htm#GUID-4FA24762-D067-4A7F-9130-E054B6486CF9">SDO_NET.GENERATE_PARTITION_BLOB</a>, which regenerates a single BLOB for a specified combination of link level and partition ID, and adds that information to the existing partition BLOB table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example generates partition BLOBs for link level 1 in the SDO_PARTITIONED network, and creates or updates the SDO_PARTITIONED_PART_BLOB_TAB table. Any user data of category 0 (zero) associated with the network elements is also included. Information about the operation is added (<code class="codeph">open_mode =&gt; &#39;a&#39;</code>) to the <code class="codeph">sdo_partitioned.log</code> file, located in the location associated with the directory object named <code class="codeph">LOG_DIR</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.GENERATE_PARTITION_BLOBS(-
  network =&gt; &#39;SDO_PARTITIONED&#39;, -
  link_level =&gt; 1,-
  partition_blob_table_name =&gt; &#39;sdo_partitioned_part_blob_tab&#39;,-
  include_user_data =&gt; true,-
  log_loc =&gt; &#39;LOG_DIR&#39;, log_file=&gt; &#39;sdo_partitioned.log&#39;,-
  open_mode =&gt; &#39;a&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1137"></a>
<div class="props_rev_3"><a id="GUID-BA76AC2A-7DA3-4AF0-9F4E-02B071EC965F"></a>
<h2 id="TOPOL-GUID-BA76AC2A-7DA3-4AF0-9F4E-02B071EC965F" class="sect2">SDO_NET.GET_CHILD_FEATURE_IDS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_CHILD_FEATURE_IDS(
     feature_layer_id IN NUMBER,
     feature_id       IN NUMBER
) RETURN SDO_NET_LAYER_FEAT_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the feature layer ID and child feature IDs for the specified feature. (The SDO_NET_LAYER_FEAT_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107032"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BA76AC2A-7DA3-4AF0-9F4E-02B071EC965F__GUID-CACAFF8B-DFAA-4154-B866-AA80F60003E0"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer for the feature (that is, the parent feature).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107033"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BA76AC2A-7DA3-4AF0-9F4E-02B071EC965F__GUID-66D91EB6-556A-47A5-A20D-FD3FB1544BC3"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To get the feature layer ID and feature ID of the parent features for a specified feature, use the <a href="SDO_NET-reference.htm#GUID-C720F0A4-2B0F-44A0-81EF-7851DA464DC0">SDO_NET.GET_PARENT_FEATURE_IDS</a> function.</p>
<p>For information about features, including parent and child features, see <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B">Features and Feature Layers</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns and displays the child feature IDs for feature 1 in the <code class="codeph">PARENT_LAYER</code> feature layer.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  feature_ids SDO_NET_LAYER_FEAT_ARRAY;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;PARENT_LAYER&#39;);
  feature_ids := sdo_net.get_child_feature_ids(feature_layer_id, feature_id);
  FOR i in 1..feature_ids.count
  LOOP
    --dbms_output.put_line(&#39;[&#39;||i||&#39;]&#39;||&#39; FEATURE_LAYER_ID   = &#39;||feature_ids(i).feature_layer_id);
    dbms_output.put_line(&#39;[&#39;||i||&#39;]&#39;||&#39; FEATURE_ID         = &#39;||feature_ids(i).feature_id);
    dbms_output.put_line(&#39;---&#39;);
  END LOOP;
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL994"></a>
<div class="props_rev_3"><a id="GUID-2C3E2AE5-0665-4794-A638-190FFD4C491F"></a>
<h2 id="TOPOL-GUID-2C3E2AE5-0665-4794-A638-190FFD4C491F" class="sect2">SDO_NET.GET_CHILD_LINKS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_CHILD_LINKS(
     network IN VARCHAR2,
     link_id IN NUMBER
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the child links of a link.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107034"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2C3E2AE5-0665-4794-A638-190FFD4C491F__GUID-BDC14764-B14C-49D2-B99E-0E4FC3ADA5C6"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107035"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2C3E2AE5-0665-4794-A638-190FFD4C491F__GUID-28BC71FF-A377-4BEB-8E2E-FB6CBDDBE532"><!-- --></a>link_id</dt>
<dd>
<p>ID of the link for which to return the child links.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For information about parent and child nodes and links in a network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the child links of the link in the <code class="codeph">XYZ_NETWORK</code> network whose link ID is 1001.</p>
<pre dir="ltr">SELECT SDO_NET.GET_CHILD_LINKS(&#39;XYZ_NETWORK&#39;, 1001) FROM DUAL;
 
SDO_NET.GET_CHILD_LINKS(&#39;XYZ_NETWORK&#39;,1001)                                     
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(1108, 1109) 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL995"></a>
<div class="props_rev_3"><a id="GUID-4DB5CE11-58D0-4EFC-AB0F-EBD216A95179"></a>
<h2 id="TOPOL-GUID-4DB5CE11-58D0-4EFC-AB0F-EBD216A95179" class="sect2">SDO_NET.GET_CHILD_NODES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_CHILD_NODES(
     network IN VARCHAR2,
     node_id IN NUMBER
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the child nodes of a node.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107036"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4DB5CE11-58D0-4EFC-AB0F-EBD216A95179__GUID-24374301-88F2-47BD-B27A-8A27650FFD4E"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107037"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4DB5CE11-58D0-4EFC-AB0F-EBD216A95179__GUID-60EB19B2-7E66-48D4-8EE8-E7DFE26D4952"><!-- --></a>node_id</dt>
<dd>
<p>ID of the node for which to return the child nodes.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For information about parent and child nodes and links in a network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the child nodes of the node in the <code class="codeph">XYZ_NETWORK</code> network whose node ID is 1.</p>
<pre dir="ltr">SELECT SDO_NET.GET_CHILD_NODES(&#39;XYZ_NETWORK&#39;, 1) FROM DUAL;
 
SDO_NET.GET_CHILD_NODES(&#39;XYZ_NETWORK&#39;,1)                                        
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(101, 102, 103, 104, 105, 106)
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1095"></a>
<div class="props_rev_3"><a id="GUID-DCA8B6C3-67BA-4087-90A3-E335869B7745"></a>
<h2 id="TOPOL-GUID-DCA8B6C3-67BA-4087-90A3-E335869B7745" class="sect2">SDO_NET.GET_DANGLING_FEATURES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_DANGLING_FEATURES(
     feature_layer_id IN NUMBER
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the IDs of dangling features in a feature layer. A dangling feature is a feature that is not associated with any network elements (nodes or links).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107038"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DCA8B6C3-67BA-4087-90A3-E335869B7745__GUID-B8C98A7B-DEA3-4F66-985A-717DE05FA179"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer containing the features.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To delete the dangling features in a feature layer, use the <a href="SDO_NET-reference.htm#GUID-CF6F39F9-A078-4D07-81B5-BA35E9C12E0C">SDO_NET.DELETE_DANGLING_FEATURES</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example gets the dangling features in the <code class="codeph">POI</code> feature layer of the <code class="codeph">GRID</code> network and then displays their feature IDs.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_ids SDO_NUMBER_ARRAY;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  feature_ids := sdo_net.get_dangling_features(feature_layer_id);
  dbms_output.put_line(&#39;Dangling Features:&#39;);
  for i in 1..feature_ids.count loop
    dbms_output.put_line(&#39;[&#39;||i||&#39;] &#39;||feature_ids(i));
  end loop;
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1097"></a>
<div class="props_rev_3"><a id="GUID-26F55C3A-8E26-4581-82D9-5C470AA236B8"></a>
<h2 id="TOPOL-GUID-26F55C3A-8E26-4581-82D9-5C470AA236B8" class="sect2">SDO_NET.GET_DANGLING_LINKS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_DANGLING_LINKS(
     network IN VARCHAR2
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns links that are not referenced by any feature in any feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107039"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-26F55C3A-8E26-4581-82D9-5C470AA236B8__GUID-1EC60D5E-A2B1-4C8F-922F-E0A2EE19E528"><!-- --></a>network</dt>
<dd>
<p>Name of the network.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To delete the dangling links in a network, use the <a href="SDO_NET-reference.htm#GUID-9E9910B6-D2B4-4EEC-80AB-C0D84AE52F4E">SDO_NET.DELETE_DANGLING_LINKS</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example gets the dangling links in the <code class="codeph">GRID</code> network and then displays the number (count) of dangling links found.</p>
<pre dir="ltr">DECLARE
  link_ids SDO_NUMBER_ARRAY;
BEGIN
  link_ids := sdo_net.get_dangling_links(&#39;GRID&#39;);
  dbms_output.put_line(&#39;Number of dangling Links: &#39;||link_ids.count);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1099"></a>
<div class="props_rev_3"><a id="GUID-7F116719-2211-4D05-BAA2-017CD3795C28"></a>
<h2 id="TOPOL-GUID-7F116719-2211-4D05-BAA2-017CD3795C28" class="sect2">SDO_NET.GET_DANGLING_NODES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_DANGLING_NODES(
     network IN VARCHAR2
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns nodes that are not referenced by any feature in any feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107040"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7F116719-2211-4D05-BAA2-017CD3795C28__GUID-B298553C-60E0-488A-9CE0-B8AD32425E8C"><!-- --></a>network</dt>
<dd>
<p>Name of the network.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To delete the dangling nodes in a network, use the <a href="SDO_NET-reference.htm#GUID-E23E020D-F7EB-4A60-A4C1-E7D452F8DBAD">SDO_NET.DELETE_DANGLING_NODES</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example gets the dangling nodes in the <code class="codeph">GRID</code> network and then displays the number (count) of dangling nodes found.</p>
<pre dir="ltr">DECLARE
  node_ids SDO_NUMBER_ARRAY;
BEGIN
  node_ids := sdo_net.get_dangling_nodes(&#39;GRID&#39;);
  dbms_output.put_line(&#39;Number of dangling Nodes: &#39;||node_ids.count);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1107"></a>
<div class="props_rev_3"><a id="GUID-543AF4F5-3758-497A-B068-AFCDA130A3F6"></a>
<h2 id="TOPOL-GUID-543AF4F5-3758-497A-B068-AFCDA130A3F6" class="sect2">SDO_NET.GET_FEATURE_ELEMENTS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_FEATURE_ELEMENTS(
     feature_layer_id IN NUMBER,
     feature_id       IN NUMBER
) RETURN SDO_NET_FEAT_ELEM_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the feature elements in a feature layer. (The SDO_NET_FEAT_ELEM_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107041"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-543AF4F5-3758-497A-B068-AFCDA130A3F6__GUID-91CF3F8B-3F48-4E6C-B15F-F005F3A308CB"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer for the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107042"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-543AF4F5-3758-497A-B068-AFCDA130A3F6__GUID-274D508F-E2B6-437E-9F30-074E39A71133"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To add a feature element to a feature, use the <a href="SDO_NET-reference.htm#GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7">SDO_NET.ADD_FEATURE_ELEMENT</a> procedure; to add multiple feature elements in a single operation, use the <a href="SDO_NET-reference.htm#GUID-CAC2CA26-4D82-41AF-A06F-7E255BF49FE7">SDO_NET.ADD_FEATURE_ELEMENTS</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example gets the feature layer ID for a specified feature layer, then gets and displays information about the feature elements for feature 1 in this feature layer.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  elements SDO_NET_FEAT_ELEM_ARRAY;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  elements := sdo_net.get_feature_elements(feature_layer_id, feature_id);
  FOR i in 1..elements.count
  LOOP
    dbms_output.put_line(&#39;[&#39;||i||&#39;]&#39;||&#39; FEAT_ELEM_TYPE   = &#39;||elements(i).feat_elem_type);
    dbms_output.put_line(&#39;[&#39;||i||&#39;]&#39;||&#39; NET_ELEM_ID      = &#39;||elements(i).net_elem_id);
    dbms_output.put_line(&#39;[&#39;||i||&#39;]&#39;||&#39; START_PERCENTAGE = &#39;||elements(i).start_percentage);
    dbms_output.put_line(&#39;[&#39;||i||&#39;]&#39;||&#39; END_PERCENTAGE   = &#39;||elements(i).end_percentage);
    dbms_output.put_line(&#39;---&#39;);
  END LOOP;
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1108"></a>
<div class="props_rev_3"><a id="GUID-D71A5861-9F9E-47F6-B314-53ED21899185"></a>
<h2 id="TOPOL-GUID-D71A5861-9F9E-47F6-B314-53ED21899185" class="sect2">SDO_NET.GET_FEATURE_LAYER_ID</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_FEATURE_LAYER_ID(
     network_name       IN VARCHAR2
     feature_layer_name IN VARCHAR2
) RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the feature layer ID for a specified feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107043"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D71A5861-9F9E-47F6-B314-53ED21899185__GUID-0887CC22-6324-41E7-AC57-E1FA0B7252D8"><!-- --></a>network_name</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107044"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D71A5861-9F9E-47F6-B314-53ED21899185__GUID-B4CA4F4F-01E7-4384-B251-EE924F3BC5E4"><!-- --></a>feature_layer_name</dt>
<dd>
<p>Feature layer name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the FEATURE_LAYER_ID column for the network and feature layer combination in the USER_SDO_NETWORK_FEATURE view (see <a href="network-data-model-graph-overview.htm#GUID-DE5380CC-9141-4FEB-B34A-C8AF45F8E069__CIHCJGCI" title="Columns in the xxx_SDO_NETWORK_FEATURE Views">Table 5-19</a> in <a href="network-data-model-graph-overview.htm#GUID-DE5380CC-9141-4FEB-B34A-C8AF45F8E069">xxx_SDO_NETWORK_FEATURE Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example gets and displays the feature layer ID for a specified feature layer.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  dbms_output.put_line(&#39;Feature layer ID for the POI feature layer is &#39;||feature_layer_id);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1109"></a>
<div class="props_rev_3"><a id="GUID-B34B519B-B714-4437-B2D4-7EDD923BBE0A"></a>
<h2 id="TOPOL-GUID-B34B519B-B714-4437-B2D4-7EDD923BBE0A" class="sect2">SDO_NET.GET_FEATURES_ON_LINKS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_FEATURES_ON_LINKS
     feature_layer_id IN NUMBER,
     link_ids         IN SDO_NUMBER_ARRAY
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the IDs of features in a feature layer that reference specified links.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107045"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B34B519B-B714-4437-B2D4-7EDD923BBE0A__GUID-22F7A4E5-B2C7-4E59-A0B4-219630B4B6E5"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer containing the features.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107046"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B34B519B-B714-4437-B2D4-7EDD923BBE0A__GUID-A5815573-C836-448F-BA71-009ADE8BBCC0"><!-- --></a>link_ids</dt>
<dd>
<p>IDs of the links to check for features.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To find the IDs of features in a feature layer that reference specified nodes, use the <a href="SDO_NET-reference.htm#GUID-EE2810F4-AE66-4CA7-8DC3-9D5FBE1D7635">SDO_NET.GET_FEATURES_ON_NODES</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example gets and displays the feature IDs of features on a specified link.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  link_ids SDO_NUMBER_ARRAY := SDO_NUMBER_ARRAY(1314);
  feature_ids SDO_NUMBER_ARRAY; 
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  feature_ids := sdo_net.get_features_on_links(feature_layer_id, link_ids);
  dbms_output.put_line(&#39;Features On Link &#39;||link_ids(1)||&#39;:&#39;);
  for i in 1..feature_ids.count loop
    dbms_output.put_line(&#39;[&#39;||i||&#39;] &#39;||feature_ids(i));
  end loop;
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1110"></a>
<div class="props_rev_3"><a id="GUID-EE2810F4-AE66-4CA7-8DC3-9D5FBE1D7635"></a>
<h2 id="TOPOL-GUID-EE2810F4-AE66-4CA7-8DC3-9D5FBE1D7635" class="sect2">SDO_NET.GET_FEATURES_ON_NODES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_FEATURES_ON_NODES
     feature_layer_id IN NUMBER,
     node_ids         IN SDO_NUMBER_ARRAY
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the IDs of features in a feature layer that reference specified nodes.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107047"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EE2810F4-AE66-4CA7-8DC3-9D5FBE1D7635__GUID-6F539D47-6D1E-40ED-9D12-E13DCA1216CA"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer containing the features.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107048"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EE2810F4-AE66-4CA7-8DC3-9D5FBE1D7635__GUID-0AC6A853-2D36-4F78-9920-207749953E2E"><!-- --></a>node_ids</dt>
<dd>
<p>IDs of the nodes to check for features.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To find the IDs of features in a feature layer that reference specified links, use the <a href="SDO_NET-reference.htm#GUID-B34B519B-B714-4437-B2D4-7EDD923BBE0A">SDO_NET.GET_FEATURES_ON_LINKS</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example gets and displays the feature IDs of features on a specified node.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  node_ids SDO_NUMBER_ARRAY := SDO_NUMBER_ARRAY(13);
  feature_ids SDO_NUMBER_ARRAY;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  feature_ids := sdo_net.get_features_on_nodes(feature_layer_id, node_ids);
  dbms_output.put_line(&#39;Features On Node &#39;||node_ids(1)||&#39;:&#39;);
  for i in 1..feature_ids.count loop
    dbms_output.put_line(&#39;[&#39;||i||&#39;] &#39;||feature_ids(i));
  end loop;
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL996"></a>
<div class="props_rev_3"><a id="GUID-F026934C-BBAD-4DD0-AA9B-CB75F62824A7"></a>
<h2 id="TOPOL-GUID-F026934C-BBAD-4DD0-AA9B-CB75F62824A7" class="sect2">SDO_NET.GET_GEOMETRY_TYPE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_GEOMETRY_TYPE(
     network IN VARCHAR2
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the geometry type for a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107049"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F026934C-BBAD-4DD0-AA9B-CB75F62824A7__GUID-626AC934-B950-4B9A-A850-90453F57C1CE"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the GEOMETRY_TYPE column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the geometry type for the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_GEOMETRY_TYPE(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_GEOMETRY_TYPE(&#39;ROADS_NETWORK&#39;)                                      
--------------------------------------------------------------------------------
LRS_GEOMETRY 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL997"></a>
<div class="props_rev_3"><a id="GUID-11C3B54A-FECE-4CD1-9CBF-CF58A3C58B81"></a>
<h2 id="TOPOL-GUID-11C3B54A-FECE-4CD1-9CBF-CF58A3C58B81" class="sect2">SDO_NET.GET_IN_LINKS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_IN_LINKS(
     network IN VARCHAR2,
     node_id IN NUMBER
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns an array of link ID numbers of the inbound links to a node.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107050"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-11C3B54A-FECE-4CD1-9CBF-CF58A3C58B81__GUID-FE62FB0D-F113-4984-992E-B0495B8D0434"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107051"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-11C3B54A-FECE-4CD1-9CBF-CF58A3C58B81__GUID-D88E6675-1B3C-4DBE-B614-89CF6647266F"><!-- --></a>node_id</dt>
<dd>
<p>ID of the node for which to return the array of inbound links.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For information about inbound links and related Network Data Model Graph concepts, see <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns an array of link ID numbers of the inbound links into the node whose node ID is 3 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_IN_LINKS(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
 
SDO_NET.GET_IN_LINKS(&#39;ROADS_NETWORK&#39;,3)                                         
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(102)
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL998"></a>
<div class="props_rev_3"><a id="GUID-3CD10724-F204-427E-BE74-2A7518D2EA12"></a>
<h2 id="TOPOL-GUID-3CD10724-F204-427E-BE74-2A7518D2EA12" class="sect2">SDO_NET.GET_INVALID_LINKS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_INVALID_LINKS(
     network IN VARCHAR2
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the invalid links in a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107052"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3CD10724-F204-427E-BE74-2A7518D2EA12__GUID-AF643E5D-44D2-4A3C-85C0-C421DFBDCCEA"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns an SDO_NUMBER_ARRAY object with a comma-delimited list of node ID numbers of invalid links in the specified network. If there are no invalid links, this function returns a null value.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the invalid links in the SDO_PARTITIONED network.</p>
<pre dir="ltr">SELECT SDO_NET.GET_INVALID_LINKS(&#39;SDO_PARTITIONED&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL999"></a>
<div class="props_rev_3"><a id="GUID-7964A1C7-D12F-478A-BF0C-FDD1B3E077FF"></a>
<h2 id="TOPOL-GUID-7964A1C7-D12F-478A-BF0C-FDD1B3E077FF" class="sect2">SDO_NET.GET_INVALID_NODES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_INVALID_NODES(
     network IN VARCHAR2
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the invalid nodes in a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107053"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7964A1C7-D12F-478A-BF0C-FDD1B3E077FF__GUID-2212D88F-1450-43DC-857F-8DB274FFC05B"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns an SDO_NUMBER_ARRAY object with a comma-delimited list of node ID numbers of invalid nodes in the specified network. If there are no invalid nodes, this function returns a null value.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the invalid nodes in the SDO_PARTITIONED network.</p>
<pre dir="ltr">SELECT SDO_NET.GET_INVALID_NODES(&#39;SDO_PARTITIONED&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1000"></a>
<div class="props_rev_3"><a id="GUID-B91E5921-48FC-417B-86D1-57239EDFCD2B"></a>
<h2 id="TOPOL-GUID-B91E5921-48FC-417B-86D1-57239EDFCD2B" class="sect2">SDO_NET.GET_INVALID_PATHS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_INVALID_PATHS(
     network IN VARCHAR2
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the invalid paths in a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107054"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B91E5921-48FC-417B-86D1-57239EDFCD2B__GUID-F8F0399B-14E7-4F32-8D27-7B93AB5368C7"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns an SDO_NUMBER_ARRAY object with a comma-delimited list of node ID numbers of invalid paths in the specified network. If there are no invalid paths, this function returns a null value.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the invalid paths in the SDO_PARTITIONED network.</p>
<pre dir="ltr">SELECT SDO_NET.GET_INVALID_PATHS(&#39;SDO_PARTITIONED&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1001"></a>
<div class="props_rev_3"><a id="GUID-38274F34-5A18-45C5-9552-23E794D4D42D"></a>
<h2 id="TOPOL-GUID-38274F34-5A18-45C5-9552-23E794D4D42D" class="sect2">SDO_NET.GET_ISOLATED_NODES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_ISOLATED_NODES( 
     network  IN VARCHAR2      
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the isolated nodes in a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107055"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-38274F34-5A18-45C5-9552-23E794D4D42D__GUID-B0495283-A463-42D1-8985-331CE2326600"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns an SDO_NUMBER_ARRAY object with a comma-delimited list of node ID numbers of isolated nodes in the specified network. If there are no isolated nodes, this function returns a null value.</p>
<p>For a brief explanation of isolated nodes in a network, see <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the isolated nodes in the SDO_PARTITIONED network.</p>
<pre dir="ltr">SELECT SDO_NET.GET_ISOLATED_NODES(&#39;SDO_PARTITIONED&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1002"></a>
<div class="props_rev_3"><a id="GUID-BA9DBB12-870A-49DC-A453-C4A3CC23A47A"></a>
<h2 id="TOPOL-GUID-BA9DBB12-870A-49DC-A453-C4A3CC23A47A" class="sect2">SDO_NET.GET_LINK_COST_COLUMN</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LINK_COST_COLUMN(      
     network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the name of the link cost column for a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107056"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BA9DBB12-870A-49DC-A453-C4A3CC23A47A__GUID-A209154D-1BF5-4C75-B87C-B648924A1E2A"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the LINK_COST_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the name of the link cost column for the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LINK_COST_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_LINK_COST_COLUMN(&#39;ROADS_NETWORK&#39;)                                   
--------------------------------------------------------------------------------
COST
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1003"></a>
<div class="props_rev_3"><a id="GUID-B02ABFAE-6E41-40DD-96C3-1430431A3628"></a>
<h2 id="TOPOL-GUID-B02ABFAE-6E41-40DD-96C3-1430431A3628" class="sect2">SDO_NET.GET_LINK_DIRECTION</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LINK_DIRECTION(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the link direction for a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107057"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B02ABFAE-6E41-40DD-96C3-1430431A3628__GUID-D32D85FF-94D3-42C9-814F-393F6D6572E3"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the LINK_DIRECTION column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the link direction for the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LINK_DIRECTION(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_LINK_DIRECTION(&#39;ROADS_NETWORK&#39;)                                     
--------------------------------------------------------------------------------
DIRECTED 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1004"></a>
<div class="props_rev_3"><a id="GUID-8A62B7E8-B4DC-44A1-87C9-F104B14F0EB0"></a>
<h2 id="TOPOL-GUID-8A62B7E8-B4DC-44A1-87C9-F104B14F0EB0" class="sect2">SDO_NET.GET_LINK_GEOM_COLUMN</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LINK_GEOM_COLUMN(    
  network  IN VARCHAR2     
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the name of the link geometry column for a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107058"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-8A62B7E8-B4DC-44A1-87C9-F104B14F0EB0__GUID-A6E6FA71-3E82-4115-9109-F2C880D55F6D"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the LINK_GEOM_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the name of the link geometry column for the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LINK_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_LINK_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;)                                   
--------------------------------------------------------------------------------
LINK_GEOMETRY
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1005"></a>
<div class="props_rev_3"><a id="GUID-C03A2CB3-608E-457E-AE27-C1B0FC831334"></a>
<h2 id="TOPOL-GUID-C03A2CB3-608E-457E-AE27-C1B0FC831334" class="sect2">SDO_NET.GET_LINK_GEOMETRY</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LINK_GEOMETRY(      
  network          IN VARCHAR2,      
  link_id          IN NUMBER,      
  start_percentage IN NUMBER DEFAULT 0,      
  end_percentage   IN NUMBER DEFAULT 1.0      
) RETURN SDO_GEOMETRY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the entire geometry or a portion of the geometry associated with a link in a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107059"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C03A2CB3-608E-457E-AE27-C1B0FC831334__GUID-D99DCD9B-78D2-4C68-BE76-50B16260C542"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107060"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C03A2CB3-608E-457E-AE27-C1B0FC831334__GUID-DA236B91-F523-4229-A600-01A4EC47E9CA"><!-- --></a>link_id</dt>
<dd>
<p>ID number of the link for which to return the geometry.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107061"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C03A2CB3-608E-457E-AE27-C1B0FC831334__GUID-9307BF85-6887-47DF-960E-57796698E224"><!-- --></a>start_percentage</dt>
<dd>
<p>Percentage of the distance along the link to be used for the start point of the returned geometry. Expressed as a number between 0 and 1.0; for example, 0.5 is 50 percent. The default value is 0; that is, the start of the returned geometry is associated with the start point of the link.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107062"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C03A2CB3-608E-457E-AE27-C1B0FC831334__GUID-99BD5ADA-20EF-422B-A819-1B65E08E2534"><!-- --></a>end_percentage</dt>
<dd>
<p>Percentage of the distance along the link to be used for the end point of the returned geometry. Expressed as a number between 0 and 1.0; for example, 0.5 is 50 percent. The default value is 1.0; that is, the end of returned geometry is associated with the end point of the link.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>None.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the geometry associated with the link whose link ID is 103 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LINK_GEOMETRY(&#39;ROADS_NETWORK&#39;, 103) FROM DUAL;
 
SDO_NET.GET_LINK_GEOMETRY(&#39;ROADS_NETWORK&#39;,103)(SDO_GTYPE, SDO_SRID, SDO_POINT(X,
--------------------------------------------------------------------------------
SDO_GEOMETRY(2002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
8, 4, 12, 4)) 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1006"></a>
<div class="props_rev_3"><a id="GUID-90BB51B2-785F-4686-88DC-A1A870C2C6A1"></a>
<h2 id="TOPOL-GUID-90BB51B2-785F-4686-88DC-A1A870C2C6A1" class="sect2">SDO_NET.GET_LINK_TABLE_NAME</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LINK_TABLE_NAME(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the name of the link table for a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107063"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-90BB51B2-785F-4686-88DC-A1A870C2C6A1__GUID-4CEFA218-1A80-4E72-A12D-180047870B0F"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the LINK_TABLE_NAME column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the name of the link table for the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LINK_TABLE_NAME(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_LINK_TABLE_NAME(&#39;ROADS_NETWORK&#39;)                                    
--------------------------------------------------------------------------------
ROADS_LINKS  
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1007"></a>
<div class="props_rev_3"><a id="GUID-CA3CB698-7CDD-472E-AECF-993389D0043D"></a>
<h2 id="TOPOL-GUID-CA3CB698-7CDD-472E-AECF-993389D0043D" class="sect2">SDO_NET.GET_LINKS_IN_PATH</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LINKS_IN_PATH(      
  network  IN VARCHAR2,     
   path_id IN NUMBER      
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the links in a path.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107064"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CA3CB698-7CDD-472E-AECF-993389D0043D__GUID-26065439-99C3-4344-B524-D72DCDA760CD"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107065"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CA3CB698-7CDD-472E-AECF-993389D0043D__GUID-C6703928-0658-46E8-B554-269A70703985"><!-- --></a>path_id</dt>
<dd>
<p>ID of the path for which to return the links.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For an explanation of links and paths, see <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the link ID values of links in the path in the <code class="codeph">XYZ_NETWORK</code> network whose path ID is 1.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LINKS_IN_PATH(&#39;XYZ_NETWORK&#39;, 1) FROM DUAL;
 
SDO_NET.GET_LINKS_IN_PATH(&#39;XYZ_NETWORK&#39;,1)
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(1102, 1104, 1105)
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1008"></a>
<div class="props_rev_3"><a id="GUID-025726A9-D218-4CC9-9CC6-3A9F362276C1"></a>
<h2 id="TOPOL-GUID-025726A9-D218-4CC9-9CC6-3A9F362276C1" class="sect2">SDO_NET.GET_LRS_GEOM_COLUMN</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LRS_GEOM_COLUMN(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the name of the LRS geometry column for a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107066"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-025726A9-D218-4CC9-9CC6-3A9F362276C1__GUID-4A4D4B87-9AB6-4F55-B0E4-D4EA5002B203"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the LRS_GEOM_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the name of the LRS geometry column for the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LRS_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_LRS_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;)                                    
--------------------------------------------------------------------------------
ROAD_GEOM 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1009"></a>
<div class="props_rev_3"><a id="GUID-161F62AA-71C9-46C6-AA42-3308A066088D"></a>
<h2 id="TOPOL-GUID-161F62AA-71C9-46C6-AA42-3308A066088D" class="sect2">SDO_NET.GET_LRS_LINK_GEOMETRY</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LRS_LINK_GEOMETRY( 
  network  IN VARCHAR2,      
  link_id  IN NUMBER      
) RETURN SDO_GEOMETRY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the LRS geometry associated with a link in a spatial LRS network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107067"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-161F62AA-71C9-46C6-AA42-3308A066088D__GUID-1576F453-79EA-4AC4-ADBA-FF7448FD45BC"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107068"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-161F62AA-71C9-46C6-AA42-3308A066088D__GUID-6CD2AD27-C0F8-4E57-B4CC-5E9967EDA47A"><!-- --></a>link_id</dt>
<dd>
<p>ID number of the link for which to return the geometry.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>None.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the LRS geometry associated with the link whose link ID is 103 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LRS_LINK_GEOMETRY(&#39;ROADS_NETWORK&#39;, 103) FROM DUAL;
 
SDO_NET.GET_LRS_LINK_GEOMETRY(&#39;ROADS_NETWORK&#39;,103)(SDO_GTYPE, SDO_SRID, SDO_POIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(2002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
8, 4, 12, 4))
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1010"></a>
<div class="props_rev_3"><a id="GUID-C7C27026-B4E3-49AB-9E21-5C106A754581"></a>
<h2 id="TOPOL-GUID-C7C27026-B4E3-49AB-9E21-5C106A754581" class="sect2">SDO_NET.GET_LRS_NODE_GEOMETRY</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LRS_NODE_GEOMETRY(     
   network IN VARCHAR2,      
  node_id IN NUMBER      
) RETURN SDO_GEOMETRY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the LRS geometry associated with a node in a spatial LRS network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107069"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C7C27026-B4E3-49AB-9E21-5C106A754581__GUID-277EC394-273A-4F95-BCA8-C89A776A8138"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107070"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C7C27026-B4E3-49AB-9E21-5C106A754581__GUID-B265BFBD-EC74-4021-B81F-ACE3CE06FE92"><!-- --></a>node_id</dt>
<dd>
<p>ID number of the node for which to return the geometry.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>None.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the LRS geometry associated with the node whose node ID is 3 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LRS_NODE_GEOMETRY(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
 
SDO_NET.GET_LRS_NODE_GEOMETRY(&#39;ROADS_NETWORK&#39;,3)(SDO_GTYPE, SDO_SRID, SDO_POINT(
--------------------------------------------------------------------------------
SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(8, 4, NULL), NULL, NULL)
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1011"></a>
<div class="props_rev_3"><a id="GUID-40AF9128-C73C-4E86-AE56-EFDB2C1CB902"></a>
<h2 id="TOPOL-GUID-40AF9128-C73C-4E86-AE56-EFDB2C1CB902" class="sect2">SDO_NET.GET_LRS_TABLE_NAME</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_LRS_TABLE_NAME(      
  network  IN VARCHAR2     
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the name of the table containing LRS geometries in a spatial LRS network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107071"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-40AF9128-C73C-4E86-AE56-EFDB2C1CB902__GUID-54D431AF-6434-4688-9A41-AE53F800216A"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the LRS_TABLE_NAME column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the name of the table that contains LRS geometries for the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_LRS_TABLE_NAME(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_LRS_TABLE_NAME(&#39;ROADS_NETWORK&#39;)                                     
--------------------------------------------------------------------------------
ROADS 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1012"></a>
<div class="props_rev_3"><a id="GUID-AD966353-D72B-4654-AA2B-F6B8F0A71AF2"></a>
<h2 id="TOPOL-GUID-AD966353-D72B-4654-AA2B-F6B8F0A71AF2" class="sect2">SDO_NET.GET_NETWORK_TYPE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NETWORK_TYPE(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the network type.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107072"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AD966353-D72B-4654-AA2B-F6B8F0A71AF2__GUID-79126DCE-F995-4369-B5A9-62D955055025"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the NETWORK_TYPE column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the network type for the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NETWORK_TYPE(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_NETWORK_TYPE(&#39;ROADS_NETWORK&#39;)                                       
--------------------------------------------------------------------------------
Roadways
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1013"></a>
<div class="props_rev_3"><a id="GUID-6DC960EA-F33E-4BEC-8B78-728B2AA721E7"></a>
<h2 id="TOPOL-GUID-6DC960EA-F33E-4BEC-8B78-728B2AA721E7" class="sect2">SDO_NET.GET_NO_OF_HIERARCHY_LEVELS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NO_OF_HIERARCHY_LEVELS(      
  network  IN VARCHAR2      
) RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the number of hierarchy levels for a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107073"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6DC960EA-F33E-4BEC-8B78-728B2AA721E7__GUID-9EB6CC2E-90F9-4A91-B24D-52F472762FC1"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the NO_OF_HIERARCHY_LEVELS column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
<p>For an explanation of network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the number of hierarchy levels for the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NO_OF_HIERARCHY_LEVELS(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_NO_OF_HIERARCHY_LEVELS(&#39;ROADS_NETWORK&#39;)                             
---------------------------------------------------                             
                                                  1
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1014"></a>
<div class="props_rev_3"><a id="GUID-90A3BD3E-2BCB-46DA-97DC-2229B6B4B433"></a>
<h2 id="TOPOL-GUID-90A3BD3E-2BCB-46DA-97DC-2229B6B4B433" class="sect2">SDO_NET.GET_NO_OF_LINKS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NO_OF_LINKS(      
  network  IN VARCHAR2      
) RETURN NUMBER;
</pre>
<p>or</p>
<pre dir="ltr">SDO_NET.GET_NO_OF_LINKS(      
  network       IN VARCHAR2,      
  hierarchy_id  IN NUMBER      
) RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the number of links for a network or a hierarchy level in a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107074"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-90A3BD3E-2BCB-46DA-97DC-2229B6B4B433__GUID-018FB94E-D1F5-4048-839E-6C49619D8E22"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107075"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-90A3BD3E-2BCB-46DA-97DC-2229B6B4B433__GUID-06DE8B2D-6F45-485C-95E6-0A59EF19EDAC"><!-- --></a>hierarchy_id</dt>
<dd>
<p>Hierarchy level number for which to return the number of links.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>None.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the number of links in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NO_OF_LINKS(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_NO_OF_LINKS(&#39;ROADS_NETWORK&#39;)                                        
----------------------------------------                                        
                                      10 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1015"></a>
<div class="props_rev_3"><a id="GUID-9CDF4F97-CC62-4E4F-8021-89C32FC7A044"></a>
<h2 id="TOPOL-GUID-9CDF4F97-CC62-4E4F-8021-89C32FC7A044" class="sect2">SDO_NET.GET_NO_OF_NODES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NO_OF_NODES(      
  network  IN VARCHAR2      
) RETURN NUMBER;
</pre>
<p>or</p>
<pre dir="ltr">SDO_NET.GET_NO_OF_NODES(      
  network       IN VARCHAR2,      
  hierarchy_id  IN NUMBER      
) RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the number of nodes for a network or a hierarchy level in a network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107076"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9CDF4F97-CC62-4E4F-8021-89C32FC7A044__GUID-516A9A9B-5C87-4732-A7D7-79607283E48F"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107077"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9CDF4F97-CC62-4E4F-8021-89C32FC7A044__GUID-A42AE8A7-1591-4D75-8175-66712C453B71"><!-- --></a>hierarchy_id</dt>
<dd>
<p>Hierarchy level number for which to return the number of nodes.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For information about nodes and related concepts, see <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the number of nodes in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NO_OF_NODES(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_NO_OF_NODES(&#39;ROADS_NETWORK&#39;)                                        
----------------------------------------                                        
                                       8
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1016"></a>
<div class="props_rev_3"><a id="GUID-FAC36387-5349-402D-93E4-237482C6715F"></a>
<h2 id="TOPOL-GUID-FAC36387-5349-402D-93E4-237482C6715F" class="sect2">SDO_NET.GET_NODE_DEGREE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NODE_DEGREE(      
  network  IN VARCHAR2,      
  node_id  IN NUMBER      
) RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the number of links to a node.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107078"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FAC36387-5349-402D-93E4-237482C6715F__GUID-8424E0AC-C3DD-4C10-92FA-14DAA4BF2752"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107079"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FAC36387-5349-402D-93E4-237482C6715F__GUID-D3297E13-1D8E-4D11-A7CA-0E38F8112685"><!-- --></a>node_id</dt>
<dd>
<p>Node ID of the node for which to return the number of links.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For information about node degree and related Network Data Model Graph concepts, see <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the number of links to the node whose node ID is 3 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NODE_DEGREE(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
 
SDO_NET.GET_NODE_DEGREE(&#39;ROADS_NETWORK&#39;,3)                                      
------------------------------------------                                      
                                         3
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1017"></a>
<div class="props_rev_3"><a id="GUID-A8A4471C-451B-4B33-B897-40DB36A15807"></a>
<h2 id="TOPOL-GUID-A8A4471C-451B-4B33-B897-40DB36A15807" class="sect2">SDO_NET.GET_NODE_GEOM_COLUMN</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NODE_GEOM_COLUMN(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the name of the geometry column for nodes in a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107080"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A8A4471C-451B-4B33-B897-40DB36A15807__GUID-7836171F-6E77-4A83-B6B3-67AB59363698"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the NODE_GEOM_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the name of the geometry column for nodes in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NODE_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_NODE_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;)                                   
--------------------------------------------------------------------------------
NODE_GEOMETRY
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1018"></a>
<div class="props_rev_3"><a id="GUID-27E651E9-9AE2-47DB-9E4E-B5F58BAA3370"></a>
<h2 id="TOPOL-GUID-27E651E9-9AE2-47DB-9E4E-B5F58BAA3370" class="sect2">SDO_NET.GET_NODE_GEOMETRY</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NODE_GEOMETRY(      
  network  IN VARCHAR2,      
  node_id  IN NUMBER      
) RETURN SDO_GEOMETRY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the LRS geometry associated with a node in a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107081"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-27E651E9-9AE2-47DB-9E4E-B5F58BAA3370__GUID-5FD60441-D314-408C-8DBD-39F3C4F392DA"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107082"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-27E651E9-9AE2-47DB-9E4E-B5F58BAA3370__GUID-9B677FA0-1E9E-4DAA-8F33-0385D3C218A5"><!-- --></a>node_id</dt>
<dd>
<p>ID number of the node for which to return the geometry.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>None.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the geometry associated with the node whose node ID is 3 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NODE_GEOMETRY(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
 
SDO_NET.GET_NODE_GEOMETRY(&#39;ROADS_NETWORK&#39;,3)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y
--------------------------------------------------------------------------------
SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(8, 4, NULL), NULL, NULL) 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1019"></a>
<div class="props_rev_3"><a id="GUID-9D7D843A-1B4D-47C4-B6E3-A661D1CC4A80"></a>
<h2 id="TOPOL-GUID-9D7D843A-1B4D-47C4-B6E3-A661D1CC4A80" class="sect2">SDO_NET.GET_NODE_IN_DEGREE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NODE_IN_DEGREE(      
  network  IN VARCHAR2,      
  node_id  IN NUMBER      
) RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the number of inbound links to a node.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107083"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9D7D843A-1B4D-47C4-B6E3-A661D1CC4A80__GUID-19BAF342-D263-4966-85B6-697B8A2CF3BD"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107084"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9D7D843A-1B4D-47C4-B6E3-A661D1CC4A80__GUID-919D9AC9-3E63-45FC-9D0F-D3918A4DF9C1"><!-- --></a>node_id</dt>
<dd>
<p>Node ID of the node for which to return the number of inbound links.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For information about node degree and related Network Data Model Graph concepts, see <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the number of inbound links to the node whose node ID is 3 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NODE_IN_DEGREE(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
 
SDO_NET.GET_NODE_IN_DEGREE(&#39;ROADS_NETWORK&#39;,3)                                   
---------------------------------------------                                   
                                            1
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1020"></a>
<div class="props_rev_3"><a id="GUID-D01DE109-3132-461F-B149-D758B5C27533"></a>
<h2 id="TOPOL-GUID-D01DE109-3132-461F-B149-D758B5C27533" class="sect2">SDO_NET.GET_NODE_OUT_DEGREE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NODE_OUT_DEGREE(      
  network  IN VARCHAR2,      
  node_id  IN NUMBER      
) RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the number of outbound links from a node.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107085"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D01DE109-3132-461F-B149-D758B5C27533__GUID-E61D926D-677E-46D0-A22B-E787D1864F9F"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107086"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D01DE109-3132-461F-B149-D758B5C27533__GUID-FB84B6A5-341A-40EC-BCB9-85064DC5201F"><!-- --></a>node_id</dt>
<dd>
<p>Node ID of the node for which to return the number of outbound links.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For information about node degree and related Network Data Model Graph concepts, see <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the number of outbound links from the node whose node ID is 3 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NODE_OUT_DEGREE(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
 
SDO_NET.GET_NODE_OUT_DEGREE(&#39;ROADS_NETWORK&#39;,3)                                  
----------------------------------------------                                  
                                             2
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1021"></a>
<div class="props_rev_3"><a id="GUID-1BCFC341-E6D5-4B46-866B-C4EADF2D2A07"></a>
<h2 id="TOPOL-GUID-1BCFC341-E6D5-4B46-866B-C4EADF2D2A07" class="sect2">SDO_NET.GET_NODE_TABLE_NAME</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_NODE_TABLE_NAME(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the name of the table that contains the nodes in a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107087"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-1BCFC341-E6D5-4B46-866B-C4EADF2D2A07__GUID-481D1AA7-B215-4E83-8719-E1BCFC41EF4C"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the NODE_TABLE_NAME column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the name of the table that contains the nodes in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_NODE_TABLE_NAME(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_NODE_TABLE_NAME(&#39;ROADS_NETWORK&#39;)                                    
--------------------------------------------------------------------------------
ROADS_NODES
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1022"></a>
<div class="props_rev_3"><a id="GUID-29C8D8C1-FC89-4588-8BFC-3B05A9E67424"></a>
<h2 id="TOPOL-GUID-29C8D8C1-FC89-4588-8BFC-3B05A9E67424" class="sect2">SDO_NET.GET_OUT_LINKS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_OUT_LINKS(      
  network  IN VARCHAR2,      
  node_id  IN NUMBER      
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns an array of link ID numbers of the outbound links from a node.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107088"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-29C8D8C1-FC89-4588-8BFC-3B05A9E67424__GUID-BF700C2C-0345-4DF2-8332-07507DB0F841"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107089"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-29C8D8C1-FC89-4588-8BFC-3B05A9E67424__GUID-1CB140BE-D838-4047-8AD6-3CE0E5D6635C"><!-- --></a>node_id</dt>
<dd>
<p>ID of the node for which to return the array of outbound links.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For information about outbound links and related Network Data Model Graph concepts, see <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns an array of link ID numbers of the outbound links from the node whose node ID is 3 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_OUT_LINKS(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
 
SDO_NET.GET_OUT_LINKS(&#39;ROADS_NETWORK&#39;,3)                                        
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(103, 201)
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1138"></a>
<div class="props_rev_3"><a id="GUID-C720F0A4-2B0F-44A0-81EF-7851DA464DC0"></a>
<h2 id="TOPOL-GUID-C720F0A4-2B0F-44A0-81EF-7851DA464DC0" class="sect2">SDO_NET.GET_PARENT_FEATURE_IDS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_PARENT_FEATURE_IDS(      
  feature_layer_id  IN NUMBER,      
  feature_id        IN NUMBER      
) RETURN SDO_NET_LAYER_FEAT_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the feature layer ID and parent feature IDs for the specified feature. (The SDO_NET_LAYER_FEAT_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107090"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C720F0A4-2B0F-44A0-81EF-7851DA464DC0__GUID-2819CF68-D633-42DE-8B3D-E6031C1CDE9D"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer for the feature (that is, the child feature).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107091"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C720F0A4-2B0F-44A0-81EF-7851DA464DC0__GUID-89CFA184-CDD0-4000-B3D9-0D9B8F16C04A"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To get the feature layer ID and feature ID of the child features for a specified feature, use the <a href="SDO_NET-reference.htm#GUID-BA76AC2A-7DA3-4AF0-9F4E-02B071EC965F">SDO_NET.GET_CHILD_FEATURE_IDS</a> function.</p>
<p>For information about features, including parent and child features, see <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B">Features and Feature Layers</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns and displays the parent feature IDs for feature 1 in the <code class="codeph">POI</code> feature layer.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  feature_ids SDO_NET_LAYER_FEAT_ARRAY;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  feature_ids := sdo_net.get_parent_feature_ids(feature_layer_id, feature_id);
  FOR i in 1..feature_ids.count
  LOOP
    --dbms_output.put_line(&#39;[&#39;||i||&#39;]&#39;||&#39; FEATURE_LAYER_ID   = &#39;||feature_ids(i).feature_layer_id);
    dbms_output.put_line(&#39;[&#39;||i||&#39;]&#39;||&#39; FEATURE_ID         = &#39;||feature_ids(i).feature_id);
    dbms_output.put_line(&#39;---&#39;);
  END LOOP;
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1023"></a>
<div class="props_rev_3"><a id="GUID-16516112-16A3-436F-98AB-5FFE6915242B"></a>
<h2 id="TOPOL-GUID-16516112-16A3-436F-98AB-5FFE6915242B" class="sect2">SDO_NET.GET_PARTITION_SIZE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_PARTITION_SIZE(      
  network              IN VARCHAR2,      
  partition_id         IN VARCHAR2,      
  link_level           IN NUMBER DEFAULT 1,      
  include_user_data    IN VARCHAR2 DEFAULT &#39;FALSE&#39;,      
  include_spatial_data IN VARCHAR2 DEFAULT &#39;FALSE&#39;
) RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Gets the estimated size (in bytes) for a specified combination of partition ID and link level.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107092"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-16516112-16A3-436F-98AB-5FFE6915242B__GUID-623BFEB2-93EC-44C2-A4DC-679144C54245"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107093"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-16516112-16A3-436F-98AB-5FFE6915242B__GUID-3CD49290-C248-4D8F-A08B-0906DD99E4D4"><!-- --></a>partition_id</dt>
<dd>
<p>Partition ID number.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107094"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-16516112-16A3-436F-98AB-5FFE6915242B__GUID-BB653B6C-C22E-4AF3-85E3-6790A0B820AB"><!-- --></a>link_level</dt>
<dd>
<p>Link level (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107095"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-16516112-16A3-436F-98AB-5FFE6915242B__GUID-EE85BC92-3C88-44C7-82DC-F205C54A260A"><!-- --></a>include_user_data</dt>
<dd>
<p><code class="codeph">TRUE</code> if the size should include any user data associated with the network elements represented in each BLOB, or <code class="codeph">FALSE</code> (the default) if the size should not include any user data.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107096"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-16516112-16A3-436F-98AB-5FFE6915242B__GUID-6C789B9F-273B-421E-A55B-6E0F870DD032"><!-- --></a>include_spatial_data</dt>
<dd>
<p><code class="codeph">TRUE</code> if the size should include spatial geometry definitions associated with the network elements represented in each BLOB, or <code class="codeph">FALSE</code> (the default) if the size should not include spatial geometry definitions.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The returned size of a network partition is a rough estimate and might vary depending on the Java Virtual Machine and garbage collection.</p>
<p>For information about using partitioned networks to perform analysis using the load on demand approach, see <a href="network-data-model-graph-overview.htm#GUID-718EB9E1-3ED8-4CA0-B098-1ED8EC6D07B6">Network Analysis Using Load on Demand</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the number of bytes for the partition associated with partition ID 1 and link level 1 in the SDO_PARTITIONED network, not including any user data or spatial data.</p>
<pre dir="ltr">SELECT SDO_NET.GET_PARTITION_SIZE(&#39;SDO_PARTITIONED&#39;, 1, 1, &#39;N&#39;, &#39;N&#39;) FROM DUAL;
 
SDO_NET.GET_PARTITION_SIZE(&#39;SDO_PARTITIONED&#39;,1,1,&#39;FALSE&#39;,&#39;FALSE&#39;)
---------------------------------------------------------
                                                     5192
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1024"></a>
<div class="props_rev_3"><a id="GUID-2170120A-8CC8-4CA1-B5DD-4247F353756E"></a>
<h2 id="TOPOL-GUID-2170120A-8CC8-4CA1-B5DD-4247F353756E" class="sect2">SDO_NET.GET_PATH_GEOM_COLUMN</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_PATH_GEOM_COLUMN(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the name of the geometry column for paths in a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107097"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2170120A-8CC8-4CA1-B5DD-4247F353756E__GUID-36FAD120-C4A3-4242-BC12-7B9AB9CCF390"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the PATH_GEOM_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the name of the geometry column for paths in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_PATH_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_PATH_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;)                                   
--------------------------------------------------------------------------------
PATH_GEOMETRY
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1025"></a>
<div class="props_rev_3"><a id="GUID-A23EE992-4911-4B59-9133-68DA4BAD6B01"></a>
<h2 id="TOPOL-GUID-A23EE992-4911-4B59-9133-68DA4BAD6B01" class="sect2">SDO_NET.GET_PATH_TABLE_NAME</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_PATH_TABLE_NAME(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the name of the table that contains the paths in a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107098"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A23EE992-4911-4B59-9133-68DA4BAD6B01__GUID-892405D9-D4CD-4A00-9663-CEE4DE5D3C9A"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns the value of the PATH_TABLE_NAME column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a> in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the name of the table that contains the paths in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_PATH_TABLE_NAME(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.GET_PATH_TABLE_NAME(&#39;ROADS_NETWORK&#39;)                                    
--------------------------------------------------------------------------------
ROADS_PATHS 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1111"></a>
<div class="props_rev_3"><a id="GUID-9D86885D-6EA5-4BFF-BD42-3C44F4931C57"></a>
<h2 id="TOPOL-GUID-9D86885D-6EA5-4BFF-BD42-3C44F4931C57" class="sect2">SDO_NET.GET_PERCENTAGE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_PERCENTAGE(      
  network  IN VARCHAR2,      
  link_id  IN NUMBER,      
  pt_geom  IN SDO_GEOMETRY      
) RETURN SDO_GEOMETRY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the percentage of the distance along a link&#39;s line string geometry of a point geometry.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107099"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9D86885D-6EA5-4BFF-BD42-3C44F4931C57__GUID-E93B821C-75C1-4312-8F42-498374BD1F36"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107100"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9D86885D-6EA5-4BFF-BD42-3C44F4931C57__GUID-373B104A-980C-4B75-BA72-37CA0AD568AB"><!-- --></a>link_id</dt>
<dd>
<p>ID number of the link.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107101"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9D86885D-6EA5-4BFF-BD42-3C44F4931C57__GUID-7C750C63-5C21-453D-A947-F757CF9D4A53"><!-- --></a>pt_geom</dt>
<dd>
<p>Point geometry.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function returns a value between 0 and 1. For example, if the point is 25 percent (one-fourth) of the distance between the start node and end node for the link, the function returns .25.</p>
<p>If <code class="codeph">pt_geom</code> is not on the link geometry, the nearest point on the link geometry to <code class="codeph">pt_geom</code> is used.</p>
<p>To find the point geometry that is a specified percentage of the distance along a link&#39;s line string geometry, use the <a href="SDO_NET-reference.htm#GUID-D2CA1357-246D-4589-9AF5-C0256F31A2B9">SDO_NET.GET_PT</a> function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the percentage (as a decimal fraction) of the distance of a specified point along the geometry associated with the link whose link ID is 101 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SQL&gt; SELECT SDO_NET.GET_PERCENTAGE(&#39;ROADS_NETWORK&#39;, 101,
  SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(2, 2.5, NULL), NULL, NULL))
  FROM DUAL;  2    3
 
SDO_NET.GET_PERCENTAGE(&#39;ROADS_NETWORK&#39;,101,SDO_GEOMETRY(2001,NULL,SDO_POINT_TYPE
--------------------------------------------------------------------------------
                                                                             .25
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1104"></a>
<div class="props_rev_3"><a id="GUID-AC1C2D01-88A9-43F4-94B3-83BF8CF54D99"></a>
<h2 id="TOPOL-GUID-AC1C2D01-88A9-43F4-94B3-83BF8CF54D99" class="sect2">SDO_NET.GET_PHANTOM_FEATURES</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_PHANTOM_FEATURES(      
  feature_layer_id  IN NUMBER      
) RETURN SDO_NUMBER_ARRAY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the IDs of phantom features in a feature layer. A phantom feature is a feature that references nonexistent network elements (nodes or links).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107102"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AC1C2D01-88A9-43F4-94B3-83BF8CF54D99__GUID-BAD8B8A3-9686-4C65-95F8-0839DE450295"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer containing the features.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To delete the phantom features in a feature layer, use the <a href="SDO_NET-reference.htm#GUID-22A88A8E-B974-47C7-B34E-3C29DEEB8808">SDO_NET.DELETE_PHANTOM_FEATURES</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example gets and displays the feature IDs of phantom features in a specified feature layer.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_ids SDO_NUMBER_ARRAY;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  feature_ids := sdo_net.get_phantom_features(feature_layer_id);
  dbms_output.put_line(&#39;Phantom Features:&#39;);
  for i in 1..feature_ids.count loop
    dbms_output.put_line(&#39;[&#39;||i||&#39;] &#39;||feature_ids(i));
  end loop;
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1112"></a>
<div class="props_rev_3"><a id="GUID-D2CA1357-246D-4589-9AF5-C0256F31A2B9"></a>
<h2 id="TOPOL-GUID-D2CA1357-246D-4589-9AF5-C0256F31A2B9" class="sect2">SDO_NET.GET_PT</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.GET_PT(      
  network     IN VARCHAR2,      
  link_id     IN NUMBER,      
  percentage  IN NUMBER      
) RETURN SDO_GEOMETRY;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the point geometry that is a specified percentage of the distance along a link&#39;s line string geometry.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107103"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D2CA1357-246D-4589-9AF5-C0256F31A2B9__GUID-B8AC55F8-1496-41C0-890A-3BB18971FA77"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107104"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D2CA1357-246D-4589-9AF5-C0256F31A2B9__GUID-1459ACE2-9C3D-44CB-B9EF-F75F75C95FC6"><!-- --></a>link_id</dt>
<dd>
<p>ID number of the link for which to return the point geometry at the specified <code class="codeph">percentage</code> distance.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107105"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D2CA1357-246D-4589-9AF5-C0256F31A2B9__GUID-321B5656-8121-419A-9241-202855205B13"><!-- --></a>percentage</dt>
<dd>
<p>Percentage value as a decimal fraction between 0 and 1. For example, 0.25 is 25 percent.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To find the percentage along a link geometry for a specified point, use the <a href="SDO_NET-reference.htm#GUID-9D86885D-6EA5-4BFF-BD42-3C44F4931C57">SDO_NET.GET_PERCENTAGE</a> function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example returns the point geometry that is 25 percent of the distance from the start node along the geometry associated with the link whose link ID is 101 in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.GET_PT(&#39;ROADS_NETWORK&#39;, 101, 0.25) FROM DUAL;
 
SDO_NET.GET_PT(&#39;ROADS_NETWORK&#39;,101,0.25)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z)
--------------------------------------------------------------------------------
SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(2, 2.5, NULL), NULL, NULL)
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1026"></a>
<div class="props_rev_3"><a id="GUID-66B9C387-6C85-4FA2-AD76-6D70C4638E8E"></a>
<h2 id="TOPOL-GUID-66B9C387-6C85-4FA2-AD76-6D70C4638E8E" class="sect2">SDO_NET.IS_HIERARCHICAL</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.IS_HIERARCHICAL(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the network has more than one level of hierarchy; returns the string <code class="codeph">FALSE</code> if the network does not have more than one level of hierarchy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107106"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-66B9C387-6C85-4FA2-AD76-6D70C4638E8E__GUID-AEDDAA29-3687-4B95-805B-22AB72504075"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For an explanation of network hierarchy, see <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks if the network named <code class="codeph">ROADS_NETWORK</code> has more than one level of hierarchy.</p>
<pre dir="ltr">SELECT SDO_NET.IS_HIERARCHICAL(&#39;ROADS_NETWORK&#39;) FROM DUAL;

SDO_NET.IS_HIERARCHICAL(&#39;ROADS_NETWORK&#39;)                                        
--------------------------------------------------------------------------------
TRUE   
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1027"></a>
<div class="props_rev_3"><a id="GUID-0FD8DC34-3C6B-4586-9037-E0791970762B"></a>
<h2 id="TOPOL-GUID-0FD8DC34-3C6B-4586-9037-E0791970762B" class="sect2">SDO_NET.IS_LINK_IN_PATH</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.IS_LINK_IN_PATH(      
  network  IN VARCHAR2,      
  path_id  IN NUMBER,      
  link_id  IN NUMBER,      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the specified link is in the specified path; returns the string <code class="codeph">FALSE</code> if the specified link is not in the specified path.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107107"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0FD8DC34-3C6B-4586-9037-E0791970762B__GUID-21569C4F-B4EE-42D6-8F84-C285280E23D1"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107108"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0FD8DC34-3C6B-4586-9037-E0791970762B__GUID-CBE7FBB4-8748-4E4F-B27D-AB22EC9416A8"><!-- --></a>path_id</dt>
<dd>
<p>ID number of the path.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107109"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0FD8DC34-3C6B-4586-9037-E0791970762B__GUID-5B19CA99-B1A7-46D1-9902-A59ADF370C17"><!-- --></a>link_id</dt>
<dd>
<p>ID number of the link.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>You can use this function to check if a specific link is included in a specific path.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks if the link with link ID 1 is in the path with path ID 1 in the network named <code class="codeph">SDO_NET1</code>.</p>
<pre dir="ltr">SELECT SDO_NET.IS_LINK_IN_PATH(&#39;SDO_NET1&#39;, 1, 1) FROM DUAL;
 
SDO_NET.IS_LINK_IN_PATH(&#39;SDO_NET1&#39;,1,1)                                        
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1028"></a>
<div class="props_rev_3"><a id="GUID-433364BB-483C-4E58-AB8D-650D586E7CD5"></a>
<h2 id="TOPOL-GUID-433364BB-483C-4E58-AB8D-650D586E7CD5" class="sect2">SDO_NET.IS_LOGICAL</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.IS_LOGICAL(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the network is a logical network; returns the string <code class="codeph">FALSE</code> if the network is not a logical network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107110"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-433364BB-483C-4E58-AB8D-650D586E7CD5__GUID-FDA36511-EB1A-4F86-B13E-7FF1D5AD28F0"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>A network can be a spatial network or a logical network, as explained in <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks if the network named <code class="codeph">ROADS_NETWORK</code> is a logical network.</p>
<pre dir="ltr">SELECT SDO_NET.IS_LOGICAL(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.IS_LOGICAL(&#39;ROADS_NETWORK&#39;)                                             
--------------------------------------------------------------------------------
FALSE 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1029"></a>
<div class="props_rev_3"><a id="GUID-954B50DA-DE1C-4DD1-8E82-7E812FC78859"></a>
<h2 id="TOPOL-GUID-954B50DA-DE1C-4DD1-8E82-7E812FC78859" class="sect2">SDO_NET.IS_NODE_IN_PATH</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.IS_NODE_IN_PATH(      
  network  IN VARCHAR2,      
  path_id  IN NUMBER,      
  node_id  IN NUMBER,      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the specified node is in the specified path; returns the string <code class="codeph">FALSE</code> if the specified node is not in the specified path.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107111"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-954B50DA-DE1C-4DD1-8E82-7E812FC78859__GUID-80F59498-1992-4F9C-94F9-13FDBF33BE42"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107112"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-954B50DA-DE1C-4DD1-8E82-7E812FC78859__GUID-C5721B94-C6F2-458F-BED6-618F4A3C3F9B"><!-- --></a>path_id</dt>
<dd>
<p>ID number of the path.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107113"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-954B50DA-DE1C-4DD1-8E82-7E812FC78859__GUID-32685FF8-A3E9-4E7D-B1E6-545C28091DDF"><!-- --></a>node_id</dt>
<dd>
<p>ID number of the node.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>You can use this function to check if a specific node is included in a specific path.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks if the node with node ID 1 is in the path with path ID 1 in the network named <code class="codeph">SDO_NET1</code>.</p>
<pre dir="ltr">SELECT SDO_NET.IS_NODE_IN_PATH(&#39;SDO_NET1&#39;, 1, 1) FROM DUAL;
 
SDO_NET.IS_NODE_IN_PATH(&#39;SDO_NET1&#39;,1,1)                                        
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1030"></a>
<div class="props_rev_3"><a id="GUID-3CCB0128-38C2-4A3E-A9A5-68FB7692D2B3"></a>
<h2 id="TOPOL-GUID-3CCB0128-38C2-4A3E-A9A5-68FB7692D2B3" class="sect2">SDO_NET.IS_SPATIAL</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.IS_SPATIAL(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the network is a spatial network; returns the string <code class="codeph">FALSE</code> if the network is not a spatial network.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107114"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3CCB0128-38C2-4A3E-A9A5-68FB7692D2B3__GUID-15868712-DFF1-4D42-BF17-4AE06E4EF38A"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>A network can be a spatial network or a logical network, as explained in <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>.</p>
<p>You can further check for the geometry type of a spatial network by using the following functions: <a href="SDO_NET-reference.htm#GUID-D9D699B0-85D2-4FBA-8692-004E9BE7CAAD">SDO_NET.LRS_GEOMETRY_NETWORK</a>, <a href="SDO_NET-reference.htm#GUID-0AA23C2F-9C0D-4A29-B252-6045A76FA8DB">SDO_NET.SDO_GEOMETRY_NETWORK</a>, and <a href="SDO_NET-reference.htm#GUID-F4D25C0D-8CC0-4683-92FA-8568A1CC98B3">SDO_NET.TOPO_GEOMETRY_NETWORK</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks if the network named <code class="codeph">ROADS_NETWORK</code> is a spatial network.</p>
<pre dir="ltr">SELECT SDO_NET.IS_SPATIAL(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.IS_SPATIAL(&#39;ROADS_NETWORK&#39;)                                             
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1031"></a>
<div class="props_rev_3"><a id="GUID-5A8092C8-64C1-4D18-BDAD-0851B55D0D0E"></a>
<h2 id="TOPOL-GUID-5A8092C8-64C1-4D18-BDAD-0851B55D0D0E" class="sect2">SDO_NET.LOAD_CONFIG</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.LOAD_CONFIG(     
  file_directory  IN VARCHAR2,     
  file_name       IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Loads (or reloads) the configuration for load on demand Java stored procedures from the specified XML file. The load on demand configuration is mainly for partition BLOB translation and partition cache configuration. (The Java stored procedures are classes in the package <code class="codeph">oracle.spatial.network.lod</code>.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107115"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5A8092C8-64C1-4D18-BDAD-0851B55D0D0E__GUID-872DB547-FA40-4B06-8CB7-85886B604F9D"><!-- --></a>file_directory</dt>
<dd>
<p>Directory object that identifies the path for the XML file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107116"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5A8092C8-64C1-4D18-BDAD-0851B55D0D0E__GUID-A2CA5D9E-EDD5-480E-A315-597B26644DB4"><!-- --></a>file_name</dt>
<dd>
<p>Name of the XML file containing the information to be loaded.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>A default configuration is provided for load on demand. You can use this procedure if you need to change the default configuration.</p>
<p>For information about configuring the load on demand environment, including the partition cache, see <a href="network-data-model-graph-overview.htm#GUID-9B22A6DF-E326-462E-AD23-F6D0A1F62B9C">Configuring the Partition Cache</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example loads the load on demand configuration from a specified XML file.</p>
<pre dir="ltr">EXECUTE SDO_NET.LOAD_CONFIG(&#39;WORK_DIR&#39;, &#39;netlodcfg.xml&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1113"></a>
<div class="props_rev_3"><a id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99"></a>
<h2 id="TOPOL-GUID-417CD093-B92C-49B2-82A0-F04C9C135B99" class="sect2">SDO_NET.LOGICAL_PARTITION</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.LOGICAL_PARTITION(      
  network              IN VARCHAR2,      
  partition_table_name IN VARCHAR2,      
  max_num_nodes        IN NUMBER,      
  log_loc              IN VARCHAR2,      
  log_file             IN VARCHAR2,      
  open_mode            IN VARCHAR2 DEFAULT &#39;A&#39;,      
  link_level           IN NUMBER DEFAULT 1);
</pre>
<p>or</p>
<pre dir="ltr">SDO_NET.LOGICAL_PARTITION(      
  network              IN VARCHAR2,      
  partition_table_name IN VARCHAR2,      
  max_num_nodes        IN NUMBER,      
  log_loc              IN VARCHAR2,      
  log_file             IN VARCHAR2,      
  open_mode            IN VARCHAR2 DEFAULT &#39;A&#39;,      
  link_level           IN NUMBER DEFAULT 1,      
  part_size_tolerance  IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Partitions a logical network, and stores the information in the partition table.</p>
<div class="infobox-note" id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99__GUID-CCC389EE-7B6D-4212-AE7E-BFEE7E13A89F">
<p class="notep1">Note:</p>
<p>If the logical network is a power law (scale-free) network, do not use this procedure to partition it, but instead use the <a href="SDO_NET-reference.htm#GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501">SDO_NET.LOGICAL_POWERLAW_PARTITION</a> procedure.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107117"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99__GUID-2C35DCD5-4AEB-420C-8EA5-FD222912A3F8"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107118"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99__GUID-F693EF70-A0D2-4A39-B115-F92DF26E5850"><!-- --></a>partition_table_name</dt>
<dd>
<p>Name of the partition table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with partition information for the specified link level.) The partition table is described in <a href="network-data-model-graph-overview.htm#GUID-5F93389F-642E-41E2-A722-7074EB052131">Partition Table</a>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107119"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99__GUID-796127D3-2BDC-4A01-9726-8026B581F4AB"><!-- --></a>max_num_nodes</dt>
<dd>
<p>Maximum number of nodes to include in each partition. For example, if you specify 5000 and if the network contains 50,000 nodes, each partition will have 5000 or fewer nodes, and the total number of partitions will be 10 or higher.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107120"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99__GUID-35AC8BED-E501-49B2-8223-B80C3E23D427"><!-- --></a>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107121"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99__GUID-6D017250-995D-40DB-B469-48AA5C20F0B9"><!-- --></a>log_file</dt>
<dd>
<p>Log file containing information about operations on the logical network, including any possible errors or problems.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107122"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99__GUID-583C7F0A-54EE-4422-92C4-520589F0E240"><!-- --></a>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code class="codeph">W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code class="codeph">A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code class="codeph">A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107123"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99__GUID-9BAA5208-5BCB-4C6E-912E-523210B12D34"><!-- --></a>link_level</dt>
<dd>
<p>Network link level on which to perform the partitioning (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107124"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-417CD093-B92C-49B2-82A0-F04C9C135B99__GUID-76CDE2B4-D54E-40B5-BC38-0FE5BD06E95C"><!-- --></a>part_size_tolerance</dt>
<dd>
<p>Allowed tolerance in partition size expressed as a decimal fraction of <code class="codeph">max_num_nodes</code>. Must be from 0 to 1. This parameter allows the partitioning procedure to create partitions with sizes larger than the one specified by <code class="codeph">max_num_nodes</code>, thereby providing the flexibility to generate partitions with reduced inter-connectivity. For example, if <code class="codeph">max_num_nodes</code> is 5000 and <code class="codeph">part_size_tolerance</code> is 0.1, a partition can include up to 5500 (5000+500 because 500 is 0.1*5000) nodes.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>The format with the <code class="codeph">part_size_tolerance</code> parameter enables you to partition logical networks with a primary focus on reducing the inter-connectivity among partitions while keeping the edge-cut small.</p>
<p>After you use this procedure to create the partitions, consider using the <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure, to enable better performance for many network analysis operations, especially with large networks.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates partitions for link level 1 in the <code class="codeph">MY_LOGICAL_NET</code> network, and creates the MY_LOGICAL_PART_TAB table. The maximum number of nodes to be placed in any partition is 5000. Information about the operation is added (<code class="codeph">open_mode =&gt; &#39;a&#39;</code>) to the <code class="codeph">my_logical_part.log</code> file located in the location associated with the directory object named <code class="codeph">LOG_DIR</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.LOGICAL_PARTITION(network =&gt; &#39;MY_LOGICAL_NET&#39;, -
  partition_table_name =&gt; &#39;my_logical_part_tab&#39;,-
  max_num_nodes =&gt; 5000,-
  log_loc =&gt; &#39;LOG_DIR&#39;, log_file=&gt; &#39;my_logical_part.log&#39;,-
  link_level =&gt; 1, open_mode =&gt; &#39;a&#39;);
</pre>
<p>The following example creates partitions for link level 1 in the <code class="codeph">MY_LOGICAL_NET</code> network, and creates the MY_LOGICAL_PART_TAB table. The maximum number of nodes to be placed in any partition is 5500 because of the combination of the <code class="codeph">max_num_nodes</code> and <code class="codeph">part_size_tolerance</code> values (5000 + 0.1*5000 = 5500). Information about the operation is written (<code class="codeph">open_mode =&gt; &#39;w&#39;</code>) to the <code class="codeph">my_logical_part.log</code> file located in the location associated with the directory object named <code class="codeph">LOG_DIR</code>, replacing any existing file with that name in that location.</p>
<pre dir="ltr">EXECUTE SDO_NET.LOGICAL_PARTITION(network =&gt; &#39;MY_LOGICAL_NET&#39;, -
  partition_table_name =&gt; &#39;my_logical_part_tab&#39;,-
  max_num_nodes =&gt; 5000,-
  log_loc =&gt; &#39;LOG_DIR&#39;, log_file=&gt; &#39;my_logical_part.log&#39;,-
  link_level =&gt; 1, open_mode =&gt; &#39;w&#39;,
  part_size_tolerance =&gt; 0.1);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1114"></a>
<div class="props_rev_3"><a id="GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501"></a>
<h2 id="TOPOL-GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501" class="sect2">SDO_NET.LOGICAL_POWERLAW_PARTITION</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.LOGICAL_POWERLAW_PARTITION(      
  network              IN VARCHAR2,      
  partition_table_name IN VARCHAR2,      
  max_num_nodes        IN NUMBER,      
  log_loc              IN VARCHAR2,      
  log_file             IN VARCHAR2,      
  open_mode            IN VARCHAR2 DEFAULT &#39;A&#39;,      
  link_level           IN NUMBER DEFAULT 1,      
  part_size_tolerance  IN NUMBER DEFAULT 0);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Partitions a logical power law (also called scale-free) network, and stores the information in the partition table. (In a power law network, the node degree values contain the power law information.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107125"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501__GUID-FE61320B-7248-4F62-9605-56B9BE0E0CD4"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107126"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501__GUID-AFE4B815-9C8D-44D3-9279-AA85B5544A7A"><!-- --></a>partition_table_name</dt>
<dd>
<p>Name of the partition table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with partition information for the specified link level.) The partition table is described in <a href="network-data-model-graph-overview.htm#GUID-5F93389F-642E-41E2-A722-7074EB052131">Partition Table</a>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107127"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501__GUID-9E250A87-4B8E-4A91-9152-F858A1CFCEA9"><!-- --></a>max_num_nodes</dt>
<dd>
<p>Maximum number of nodes to include in each partition. For example, if you specify 5000 and if the network contains 50,000 nodes, each partition will have 5000 or fewer nodes, and the total number of partitions will be 10 or higher.</p>
<p>If the <code class="codeph">part_size_tolerance</code> value is greater than 0, the maximum number of nodes to include in each partition is increased, as explained in the description of that parameter.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107128"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501__GUID-C9FEC63C-D12B-4DBB-8EA2-AFBF0686A736"><!-- --></a>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107129"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501__GUID-D56A0E78-940E-4D80-9D4F-AA5AE196CB70"><!-- --></a>log_file</dt>
<dd>
<p>Log file containing information about operations on the logical power law network, including any possible errors or problems.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107130"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501__GUID-12637D20-8E05-491F-8B00-C791A9692EFF"><!-- --></a>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code class="codeph">W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code class="codeph">A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code class="codeph">A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107131"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501__GUID-C6970551-306A-4FD2-9AAD-322E4CD21CD6"><!-- --></a>link_level</dt>
<dd>
<p>Network link level on which to perform the partitioning (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107132"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6C2DE873-7AD1-45B9-8B4B-2A2C2AAB1501__GUID-ADE95D60-07A1-4488-9231-C6AF16BFE299"><!-- --></a>part_size_tolerance</dt>
<dd>
<p>Allowed tolerance in partition size expressed as a percentage of <code class="codeph">max_num_nodes</code>. Must be from 0 (the default) to 100.</p>
<p>A <code class="codeph">part_size_tolerance</code> value greater than 0 effectively raises the <code class="codeph">max_num_nodes</code> value. For example, if <code class="codeph">max_num_nodes</code> is 5000 and you specify <code class="codeph">part_size_tolerance</code> as 10, then the actual maximum number of nodes to include in each partition is 5500 (5000 + 500, because 500 is 10 percent of 5000). In deciding whether to use <code class="codeph">part_size_tolerance</code> and what value to specify, consider the cache size and the probability of related nodes being placed in different partitions.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>After you use this procedure to create the partitions, consider using the <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure, to enable better performance for many network analysis operations, especially with large networks.</p>
<p>If the logical network is not a power law network, do not use this procedure, but instead use the <a href="SDO_NET-reference.htm#GUID-417CD093-B92C-49B2-82A0-F04C9C135B99">SDO_NET.LOGICAL_PARTITION</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates partitions for link level 1 in the <code class="codeph">MY_LOGICAL_PLAW_NET</code> network, and creates the MY_LOGICAL_PLAW_PART_TAB table. The maximum number of nodes to be placed in any partition is 5000. Information about the operation is added (<code class="codeph">open_mode =&gt; &#39;a&#39;</code>) to the <code class="codeph">my_logical_plaw_part.log</code> file, located in the location associated with the directory object named <code class="codeph">LOG_DIR</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.LOGICAL_POWERLAW_PARTITION(network =&gt; &#39;MY_LOGICAL_PLAW_NET&#39;, -
  partition_table_name =&gt; &#39;my_logical_plaw_part_tab&#39;,-
  max_num_nodes =&gt; 5000,-
  log_loc =&gt; &#39;LOG_DIR&#39;, log_file=&gt; &#39;my_logical_plaw_part.log&#39;,-
  link_level =&gt; 1, open_mode =&gt; &#39;a&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1032"></a>
<div class="props_rev_3"><a id="GUID-D9D699B0-85D2-4FBA-8692-004E9BE7CAAD"></a>
<h2 id="TOPOL-GUID-D9D699B0-85D2-4FBA-8692-004E9BE7CAAD" class="sect2">SDO_NET.LRS_GEOMETRY_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.LRS_GEOMETRY_NETWORK(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the network is a spatial network containing LRS geometries; returns the string <code class="codeph">FALSE</code> if the network is not a spatial network containing LRS geometries.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107133"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D9D699B0-85D2-4FBA-8692-004E9BE7CAAD__GUID-8C9B8686-C435-45D3-8008-3C8C4723851E"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>A network contains LRS geometries if the GEOMETRY_TYPE column in its entry in the USER_SDO_NETWORK_METADATA view contains the value <code class="codeph">LRS_GEOMETRY</code>. (The USER_SDO_NETWORK_METADATA view is explained in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks if the network named <code class="codeph">ROADS_NETWORK</code> is a spatial network containing LRS geometries.</p>
<pre dir="ltr">SELECT SDO_NET.LRS_GEOMETRY_NETWORK(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.LRS_GEOMETRY_NETWORK(&#39;ROADS_NETWORK&#39;)                                   
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1033"></a>
<div class="props_rev_3"><a id="GUID-0B4B2626-D76D-4F2E-9AF7-CC7C191285AF"></a>
<h2 id="TOPOL-GUID-0B4B2626-D76D-4F2E-9AF7-CC7C191285AF" class="sect2">SDO_NET.NETWORK_EXISTS</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.NETWORK_EXISTS(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the network exists; returns the string <code class="codeph">FALSE</code> if the network does not exist.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107134"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0B4B2626-D76D-4F2E-9AF7-CC7C191285AF__GUID-4F085582-56C6-4E13-9FFE-C83348EAFAA0"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>If you drop a network (using the <a href="SDO_NET-reference.htm#GUID-44F7A137-CD75-4F58-91DA-5234BB94258E">SDO_NET.DROP_NETWORK</a> procedure), the network no longer exists.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks if the network named <code class="codeph">ROADS_NETWORK</code> exists.</p>
<pre dir="ltr">SELECT SDO_NET.NETWORK_EXISTS(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.NETWORK_EXISTS(&#39;ROADS_NETWORK&#39;)                                         
--------------------------------------------------------------------------------
TRUE 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1115"></a>
<div class="props_rev_3"><a id="GUID-C56A6A64-9AE0-400F-BC7E-2EB8FA2EF965"></a>
<h2 id="TOPOL-GUID-C56A6A64-9AE0-400F-BC7E-2EB8FA2EF965" class="sect2">SDO_NET.POST_XML</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.POST_XML(      
  url      IN VARCHAR2,      
  request  IN XMLTYPE      
) RETURN XMLTYPE;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Sends an XML request to a URL, and returns the XML response.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107135"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C56A6A64-9AE0-400F-BC7E-2EB8FA2EF965__GUID-C2319338-0CDF-4170-905C-B103FFF16D87"><!-- --></a>url</dt>
<dd>
<p>Uniform resource locator (URL) to receive the request.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107136"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C56A6A64-9AE0-400F-BC7E-2EB8FA2EF965__GUID-F2D44332-165E-486B-9042-3B58241A0022"><!-- --></a>request</dt>
<dd>
<p>Request in XML form.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>For information about the XML API to the Network Data Model Graph, see <a href="network-data-model-graph-overview.htm#GUID-5FC8CA0D-AEA9-4540-B5C5-211DBEC2CA55">Network Data Model Graph XML Interface</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example specifies an XML request, and sends it to a URL and returns the XML response, which it then displays.</p>
<pre dir="ltr">DECLARE
  xml_request varchar2(4000); 
  ndmws_url varchar2(4000);
  xml_response xmltype;
BEGIN
  xml_request :=
&#39;&lt;?xml version=&#34;1.0&#34; ?&gt;
&lt;networkAnalysisRequest
   xmlns=&#34;http://xmlns.oracle.com/spatial/network&#34;
   xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;
   xmlns:gml=&#34;http://www.opengis.net/gml&#34;&gt;
  &lt;networkName&gt;HILLSBOROUGH_NETWORK2&lt;/networkName&gt;
  &lt;shortestPath&gt;
    &lt;startPoint&gt;
      &lt;nodeID&gt;1533&lt;/nodeID&gt;
    &lt;/startPoint&gt;
    &lt;endPoint&gt;
      &lt;nodeID&gt;10043&lt;/nodeID&gt;
    &lt;/endPoint&gt;
    &lt;subPathRequestParameter&gt;
      &lt;cost&gt; true &lt;/cost&gt;
      &lt;isFullPath&gt; true &lt;/isFullPath&gt;
      &lt;startLinkIndex&gt; true &lt;/startLinkIndex&gt;
      &lt;startPercentage&gt; true &lt;/startPercentage&gt;
      &lt;endLinkIndex&gt; true &lt;/endLinkIndex&gt;
      &lt;endPercentage&gt; true &lt;/endPercentage&gt;
    &lt;pathRequestParameter&gt;
      &lt;cost&gt; true &lt;/cost&gt;
      &lt;isSimple&gt; true &lt;/isSimple&gt;
      &lt;startNodeID&gt;true&lt;/startNodeID&gt;
      &lt;endNodeID&gt;true&lt;/endNodeID&gt;
      &lt;noOfLinks&gt;true&lt;/noOfLinks&gt;
      &lt;linksRequestParameter&gt;
        &lt;onlyLinkID&gt;true&lt;/onlyLinkID&gt;
      &lt;/linksRequestParameter&gt;
      &lt;nodesRequestParameter&gt;
        &lt;onlyNodeID&gt;true&lt;/onlyNodeID&gt;
      &lt;/nodesRequestParameter&gt;
    &lt;/pathRequestParameter&gt;
    &lt;/subPathRequestParameter&gt;
  &lt;/shortestPath&gt;
&lt;/networkAnalysisRequest&gt;&#39;;
  ndmws_url := &#39;http://localhost:7001/SpatialWS-SpatialWS-context-root/SpatialWSXmlServlet&#39;;
  xml_response := sdo_net.POST_XML(ndmws_url, XMLTYPE(xml_request));
  dbms_output.put_line(xml_response.getStringVal());
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1034"></a>
<div class="props_rev_3"><a id="GUID-47B852BA-EAFC-453F-85F1-20A7DCF541D9"></a>
<h2 id="TOPOL-GUID-47B852BA-EAFC-453F-85F1-20A7DCF541D9" class="sect2">SDO_NET.REGISTER_CONSTRAINT</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.REGISTER_CONSTRAINT(      
  constraint_name IN VARCHAR2,      
  class_name      IN VARCHAR2,      
  directory_name  IN VARCHAR2,      
  description     IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Loads the compiled Java code for the specified network constraint into the Java class repository in the database, and loads the class name into the CLASS column of the USER_SDO_NETWORK_CONSTRAINTS view (described in <a href="network-data-model-graph-overview.htm#GUID-D5D47648-FCF7-46A9-9047-F6E70F616C89">xxx_SDO_NETWORK_CONSTRAINTS Views</a>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107137"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47B852BA-EAFC-453F-85F1-20A7DCF541D9__GUID-BE67772A-F5FF-4480-9731-734F970B015D"><!-- --></a>constraint_name</dt>
<dd>
<p>Name of the network constraint.</p>
</dd>
</dl>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107138"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47B852BA-EAFC-453F-85F1-20A7DCF541D9__GUID-6F5C9082-CF9A-495C-B79C-31A3356B2372"><!-- --></a>class_name</dt>
<dd>
<p>Fully qualified name (including the name of the package) of the class that implements the network constraint.</p>
</dd>
</dl>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107139"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47B852BA-EAFC-453F-85F1-20A7DCF541D9__GUID-A91DFD17-D674-4152-958C-E221AEFD53FE"><!-- --></a>directory_name</dt>
<dd>
<p>Name of the directory object (created using the SQL statement CREATE DIRECTORY) that identifies the location of the class file created when you compiled the network constraint.</p>
</dd>
</dl>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107140"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47B852BA-EAFC-453F-85F1-20A7DCF541D9__GUID-424D46C8-B0CC-41D5-9935-E37D086A2CEE"><!-- --></a>description</dt>
<dd>
<p>Description of the network constraint.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>Before you call this procedure, you must insert a row into the USER_SDO_NETWORK_CONSTRAINTS view, compile the code for the Java class that implements the network constraint, and use the CREATE DIRECTORY statement to create a directory object identifying the location of the compiled class. For more information about network constraints, see <a href="network-data-model-graph-overview.htm#GUID-2A71EBFE-F28F-4A87-9F49-4E7674A08C08">Network Constraints</a>.</p>
<p>To delete the row for the constraint from the USER_SDO_NETWORK_CONSTRAINTS view and thus disable the constraint, use the <a href="SDO_NET-reference.htm#GUID-EF58A78E-E396-4ECE-87C7-85FF82C8BE2A">SDO_NET.DEREGISTER_CONSTRAINT</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example registers a network constraint named <code class="codeph">GivenProhibitedTurn</code>.</p>
<pre dir="ltr">-- Set up the network constraint.
REM
REM Create the geor_dir on the file system first.
REM
-- Connect as SYSTEM.
DECLARE 
  -- This is the directory that contains the CLASS file generated when you
  -- compiled the network constraint.
  geor_dir varchar2(1000) := &#39;C:\my_data\files81\PROTOTYPES\NETWORK_CONSTRAINT\PLSQL_EXAMPLE&#39;;
BEGIN 
  EXECUTE IMMEDIATE &#39;CREATE OR REPLACE DIRECTORY work_dir AS&#39;&#39;&#39; || geor_dir || &#39;&#39;&#39;&#39;; 
END;
/
GRANT read,write on directory work_dir to net_con;
 
-- Connect as the user that will register the constraint. 
 
REM
REM Compile GivenProhibitedTurn before you register the constraint.
REM
BEGIN
  SDO_NET.REGISTER_CONSTRAINT(&#39;GivenProhibitedTurn&#39;, 
     &#39;com/network/constraints/ProhibitedTurn&#39;,
     &#39;WORK_DIR&#39;, &#39;This is a network constraint that &#39;||
     &#39;prohibits certain turns&#39;);
 
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1035"></a>
<div class="props_rev_3"><a id="GUID-0AA23C2F-9C0D-4A29-B252-6045A76FA8DB"></a>
<h2 id="TOPOL-GUID-0AA23C2F-9C0D-4A29-B252-6045A76FA8DB" class="sect2">SDO_NET.SDO_GEOMETRY_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.SDO_GEOMETRY_NETWORK(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the network is a spatial network containing SDO geometries (spatial geometries without measure information); returns the string <code class="codeph">FALSE</code> if the network is not a spatial network containing SDO geometries.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107141"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0AA23C2F-9C0D-4A29-B252-6045A76FA8DB__GUID-CEC8A1E9-EF61-4109-8708-C1488B7BF5C9"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>A network contains SDO geometries if the GEOMETRY_TYPE column in its entry in the USER_SDO_NETWORK_METADATA view contains the value <code class="codeph">SDO_GEOMETRY</code>. (The USER_SDO_NETWORK_METADATA view is explained in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks if the network named <code class="codeph">ROADS_NETWORK</code> is a spatial network containing SDO geometries.</p>
<pre dir="ltr">SELECT SDO_NET.SDO_GEOMETRY_NETWORK(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.SDO_GEOMETRY_NETWORK(&#39;ROADS_NETWORK&#39;)                                   
--------------------------------------------------------------------------------
FALSE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1036"></a>
<div class="props_rev_3"><a id="GUID-71CEA80C-D90E-4F38-87ED-A8A6EC8DBA37"></a>
<h2 id="TOPOL-GUID-71CEA80C-D90E-4F38-87ED-A8A6EC8DBA37" class="sect2">SDO_NET.SET_LOGGING_LEVEL</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.SET_LOGGING_LEVEL(      
  level  IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Sets the minimum level of severity for messages to be displayed for network operations.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107142"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-71CEA80C-D90E-4F38-87ED-A8A6EC8DBA37__GUID-8305BFC2-3858-480E-9DE5-FB61668A05FB"><!-- --></a>level</dt>
<dd>
<p>Minimum severity level for messages to be displayed for network operations. Must be one of the numeric constants specified in the Usage Notes.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>All messages at the specified logging level and higher levels will be written. The logging levels, from highest to lowest, are:</p>
<pre dir="ltr">SDO_NET.LOGGING_LEVEL_FATAL
SDO_NET.LOGGING_LEVEL_ERROR
SDO_NET.LOGGING_LEVEL_WARN
SDO_NET.LOGGING_LEVEL_INFO
SDO_NET.LOGGING_LEVEL_DEBUG
SDO_NET.LOGGING_LEVEL_FINEST
</pre>
<p>The logging level is the Java logging level from the underlying implementation of this function; therefore, to see the Java logging output on the console, execute the following statements beforehand:</p>
<pre dir="ltr">SET SERVEROUTPUT ON;
EXECUTE DBMS_JAVA.SET_OUTPUT(10000);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example sets the logging level at <code class="codeph">SDO_NET.</code><code class="codeph">LOGGING_LEVEL_ERROR</code>, which means that only messages with a severity of <code class="codeph">SDO_NET.LOGGING_LEVEL_ERROR</code> or <code class="codeph">SDO_NET.LOGGING_LEVEL_FATAL</code> will be displayed.</p>
<pre dir="ltr">EXECUTE SDO_NET.SET_LOGGING_LEVEL(SDO_NET.LOGGING_LEVEL_ERROR);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1037"></a>
<div class="props_rev_3"><a id="GUID-B019B186-23A9-4DDB-B0F8-370463DCCB4D"></a>
<h2 id="TOPOL-GUID-B019B186-23A9-4DDB-B0F8-370463DCCB4D" class="sect2">SDO_NET.SET_MAX_JAVA_HEAP_SIZE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.SET_MAX_JAVA_HEAP_SIZE(      
  bytes  IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Sets the Java maximum heap size for an application to run in an Oracle Java virtual machine.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107143"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B019B186-23A9-4DDB-B0F8-370463DCCB4D__GUID-9429A4A8-CC9E-4F75-A9A5-92E24076C6F2"><!-- --></a>bytes</dt>
<dd>
<p>Number of bytes for the Java maximum heap size.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>If you encounter the <code class="codeph">java.lang.OutOfMemoryError</code> exception, you can use this procedure to increase the maximum heap size.</p>
<p>If you specify a value greater than the system limit, the system limit is used.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example sets the Java maximum heap size to 536870912 (512 MB).</p>
<pre dir="ltr">EXECUTE SDO_NET.SET_MAX_JAVA_HEAP_SIZE(536870912);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1038"></a>
<div class="props_rev_3"><a id="GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0"></a>
<h2 id="TOPOL-GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0" class="sect2">SDO_NET.SPATIAL_PARTITION</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.SPATIAL_PARTITION(      
  network              IN VARCHAR2,      
  partition_table_name IN VARCHAR2,      
  max_num_nodes        IN NUMBER,      
  log_loc              IN VARCHAR2,      
  log_file             IN VARCHAR2,      
  open_mode            IN VARCHAR2 DEFAULT &#39;A&#39;,      
  link_level           IN NUMBER DEFAULT 1);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Partitions a spatial network, and stores the information in the partition table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107144"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0__GUID-9D1C0BDB-4674-4C63-9B49-C08B238FEC29"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107145"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0__GUID-DD57CC24-95E9-465E-A7A2-3DE081B43F7D"><!-- --></a>partition_table_name</dt>
<dd>
<p>Name of the partition table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with partition information for the specified link level.) The partition table is described in <a href="network-data-model-graph-overview.htm#GUID-5F93389F-642E-41E2-A722-7074EB052131">Partition Table</a>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107146"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0__GUID-A8C2C719-D7B1-4029-B5D0-48779965B20A"><!-- --></a>max_num_nodes</dt>
<dd>
<p>Maximum number of nodes to include in each partition. For example, if you specify 5000 and if the network contains 50,000 nodes, each partition will have 5000 or fewer nodes, and the total number of partitions will be 10 or higher.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107147"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0__GUID-FAE825A9-BC39-41FC-8BE4-D3B5F2714B9F"><!-- --></a>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107148"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0__GUID-66E5907A-5F34-4B4C-A4B5-7F539392B182"><!-- --></a>log_file</dt>
<dd>
<p>Log file containing information about spatial network operations, including any possible errors or problems.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107149"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0__GUID-BE92DAD5-5D90-4508-B0DF-3BDB09B90E43"><!-- --></a>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code class="codeph">W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code class="codeph">A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code class="codeph">A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107150"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0__GUID-2E3E75FE-0977-4D68-804F-F73C1E2BF741"><!-- --></a>link_level</dt>
<dd>
<p>Network link level on which to perform the partitioning (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in network computations.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>After you use this procedure to create the partitions, consider using the <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure, to enable better performance for many network analysis operations, especially with large networks.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example creates partitions for link level 1 in the <code class="codeph">MY_PARTITIONED_NET</code> network, and creates the MY_PARTITIONED_NET_TAB table. The maximum number of nodes to be placed in any partition is 5000. Information about the operation is added (<code class="codeph">open_mode =&gt; &#39;a&#39;</code>) to the <code class="codeph">my_partitioned_net.log</code> file, located in the location associated with the directory object named <code class="codeph">LOG_DIR</code>.</p>
<pre dir="ltr">EXECUTE SDO_NET.SPATIAL_PARTITION(network =&gt; &#39;MY_PARTITIONED_NET&#39;, -
  partition_table_name =&gt; &#39;my_partitioned_net_tab&#39;,-
  max_num_nodes =&gt; 5000,-
  log_loc =&gt; &#39;LOG_DIR&#39;, log_file=&gt; &#39;my_partitioned_net.log&#39;,-
  link_level =&gt; 1, open_mode =&gt; &#39;a&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1039"></a>
<div class="props_rev_3"><a id="GUID-F4D25C0D-8CC0-4683-92FA-8568A1CC98B3"></a>
<h2 id="TOPOL-GUID-F4D25C0D-8CC0-4683-92FA-8568A1CC98B3" class="sect2">SDO_NET.TOPO_GEOMETRY_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.TOPO_GEOMETRY_NETWORK(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the network is a spatial network containing SDO_TOPO_GEOMETRY (topology geometry) objects; returns the string <code class="codeph">FALSE</code> if the network is not a spatial network containing SDO_TOPO_GEOMETRY objects.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107151"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F4D25C0D-8CC0-4683-92FA-8568A1CC98B3__GUID-F8B23E8E-2635-406E-B53C-1AB9BB1D7CC7"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>A network contains SDO_TOPO_GEOMETRY objects if the GEOMETRY_TYPE column in its entry in the USER_SDO_NETWORK_METADATA view contains the value <code class="codeph">TOPO_GEOMETRY</code>. (The USER_SDO_NETWORK_METADATA view is explained in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks if the network named <code class="codeph">ROADS_NETWORK</code> is a spatial network containing SDO_TOPO_GEOMETRY objects.</p>
<pre dir="ltr">SELECT SDO_NET.TOPO_GEOMETRY_NETWORK(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.TOPO_GEOMETRY_NETWORK(&#39;ROADS_NETWORK&#39;)                                  
--------------------------------------------------------------------------------
FALSE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1116"></a>
<div class="props_rev_3"><a id="GUID-574EF300-A520-4396-ABF5-6FBF1ACA8996"></a>
<h2 id="TOPOL-GUID-574EF300-A520-4396-ABF5-6FBF1ACA8996" class="sect2">SDO_NET.UPDATE_FEATURE</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.UPDATE_FEATURE(      
  feature_layer_id   IN NUMBER,      
  feature_id         IN NUMBER,      
  feature_elements   IN SDO_NET_FEAT_ELEM_ARRAY DEFAULT NULL,      
  child_feature_ids  IN SDO_NET_LAYER_FEAT_ARRAY DEFAULT NULL,      
  check_integrity    IN BOOLEAN DEFAULT TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Updates a feature in a feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107152"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-574EF300-A520-4396-ABF5-6FBF1ACA8996__GUID-7E09F349-5169-4E60-9E1C-30391AD2BF0B"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer to which to update the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107153"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-574EF300-A520-4396-ABF5-6FBF1ACA8996__GUID-66D89ECB-94AF-472C-A84A-8112717E7DEC"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature to be updated.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107154"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-574EF300-A520-4396-ABF5-6FBF1ACA8996__GUID-F3E9FEED-32F3-4F92-80B3-6366EA192E00"><!-- --></a>feature_elements</dt>
<dd>
<p>Feature elements of the feature to add to any existing feature elements. If this parameter is null, the existing feature elements are not changed. If this parameter in <span class="italic">empty</span>, any existing feature elements are removed. (The SDO_NET_FEAT_ELEM_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107155"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-574EF300-A520-4396-ABF5-6FBF1ACA8996__GUID-421A4D80-AEDE-4E74-AAF6-7836055DCDA6"><!-- --></a>child_feature_ids</dt>
<dd>
<p>Child features of the feature that are to add to any existing child features. If this parameter is null, the existing child features are not changed. If this parameter in <span class="italic">empty</span>, any existing parent relationships for this feature with child features are removed. (The SDO_NET_LAYER_FEAT_ARRAY type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107156"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-574EF300-A520-4396-ABF5-6FBF1ACA8996__GUID-03ED4D88-575A-4FE5-8B73-EE0F76DE892E"><!-- --></a>check_integrity</dt>
<dd>
<p><code class="codeph">TRUE</code> (the default) checks if the input network elements exist; and if any do not exist, an error is generated. <code class="codeph">FALSE</code> does not check if the input network elements exist.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To add a feature to a feature layer, use the <a href="SDO_NET-reference.htm#GUID-B12C424E-1FDC-4E4C-BD0F-3D267F9C1F91">SDO_NET.ADD_FEATURE</a> procedure.</p>
<p>A feature layer ID is automatically generated for the feature layer.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example updates a specified feature by defining two feature elements and adding them.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  elements SDO_NET_FEAT_ELEM_ARRAY := SDO_NET_FEAT_ELEM_ARRAY();
  link_id NUMBER := 1314;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  elements.extend;
  elements(1) := SDO_NET_FEAT_ELEM(SDO_NET.FEAT_ELEM_TYPE_POL, link_id, 0.7, null);
  elements.extend;
  elements(2) := SDO_NET_FEAT_ELEM(SDO_NET.FEAT_ELEM_TYPE_POL, link_id, 0.8, null);
  sdo_net.update_feature(feature_layer_id, feature_id, elements, null);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1117"></a>
<div class="props_rev_3"><a id="GUID-0AE5753B-F6D4-48C6-ADD6-7CABB772D682"></a>
<h2 id="TOPOL-GUID-0AE5753B-F6D4-48C6-ADD6-7CABB772D682" class="sect2">SDO_NET.UPDATE_FEATURE_ELEMENT</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.UPDATE_FEATURE_ELEMENT(      
  feature_layer_id IN NUMBER,      
  feature_id       IN NUMBER,      
  sequence_number  IN NUMBER,      
  feature_element  IN SDO_NET_FEAT_ELEM,      
  check_integrity  IN BOOLEAN DEFAULT TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Updates a feature element.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107157"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0AE5753B-F6D4-48C6-ADD6-7CABB772D682__GUID-3741DB44-3DF2-4C2D-A96C-29186CC53C05"><!-- --></a>feature_layer_id</dt>
<dd>
<p>ID of the feature layer for the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107158"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0AE5753B-F6D4-48C6-ADD6-7CABB772D682__GUID-A6E18B7A-3FC2-4ADD-8743-253E6FF5BC26"><!-- --></a>feature_id</dt>
<dd>
<p>ID of the feature.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107159"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0AE5753B-F6D4-48C6-ADD6-7CABB772D682__GUID-C360BDCE-B424-4D5F-B3E6-37E0A4F78A08"><!-- --></a>sequence_number</dt>
<dd>
<p>Sequence number of the feature element to be updated.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107160"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0AE5753B-F6D4-48C6-ADD6-7CABB772D682__GUID-336A9391-CE3F-4249-B3C0-EECDFA54151A"><!-- --></a>feature_element</dt>
<dd>
<p>Feature element definition to replace the specified feature element. (The SDO_NET_FEAT_ELEM type is described in <a href="network-data-model-graph-overview.htm#GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9">Data Types Used for Feature Modeling</a>.)</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107161"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0AE5753B-F6D4-48C6-ADD6-7CABB772D682__GUID-E9C3EDD8-7852-44DD-9C24-1DC1B8684FE0"><!-- --></a>check_integrity</dt>
<dd>
<p><code class="codeph">TRUE</code> (the default) checks if the input network elements exist; and if any do not exist, an error is generated. <code class="codeph">FALSE</code> does not check if the input network elements exist.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>To add a feature element, use the <a href="SDO_NET-reference.htm#GUID-C65FDB7D-7E8A-477D-9AED-2193CC021FD7">SDO_NET.ADD_FEATURE_ELEMENT</a> procedure; to add multiple feature elements in a single operation, use the <a href="SDO_NET-reference.htm#GUID-CAC2CA26-4D82-41AF-A06F-7E255BF49FE7">SDO_NET.ADD_FEATURE_ELEMENTS</a> procedure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example updates the feature element at sequence number 2 on link ID 1314 of feature ID 1.</p>
<pre dir="ltr">DECLARE
  feature_layer_id NUMBER;
  feature_id NUMBER := 1;
  element SDO_NET_FEAT_ELEM;
  link_id NUMBER := 1314;
BEGIN
  feature_layer_id := sdo_net.get_feature_layer_id(&#39;GRID&#39;, &#39;POI&#39;);
  element := SDO_NET_FEAT_ELEM(SDO_NET.FEAT_ELEM_TYPE_POL, link_id, 0.2, null);
  sdo_net.update_feature_element(feature_layer_id, feature_id, 1, element);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1040"></a>
<div class="props_rev_3"><a id="GUID-942F2D79-2AAE-4D9F-B261-6352552C6494"></a>
<h2 id="TOPOL-GUID-942F2D79-2AAE-4D9F-B261-6352552C6494" class="sect2">SDO_NET.VALIDATE_LINK_SCHEMA</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.VALIDATE_LINK_SCHEMA(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the metadata relating to links in a network is valid; returns the string <code class="codeph">FALSE</code> if the metadata relating to links in a network is not valid.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107162"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-942F2D79-2AAE-4D9F-B261-6352552C6494__GUID-5A91B18D-FFDE-4A68-BAAB-059737614D64"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function checks the following for validity: table name, geometry column, and cost column for spatial networks; measure-related information for LRS networks; topology-related information for topology networks; and hierarchy-related information for hierarchical networks.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks the validity of the metadata related to links in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.VALIDATE_LINK_SCHEMA(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.VALIDATE_LINK_SCHEMA(&#39;ROADS_NETWORK&#39;)                                   
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1041"></a>
<div class="props_rev_3"><a id="GUID-42A925E7-D0A9-4A06-8902-C47641B43B6F"></a>
<h2 id="TOPOL-GUID-42A925E7-D0A9-4A06-8902-C47641B43B6F" class="sect2">SDO_NET.VALIDATE_LRS_SCHEMA</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.VALIDATE_LRS_SCHEMA(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the metadata relating to LRS information in a network is valid; returns the string <code class="codeph">FALSE</code> if the metadata relating to LRS information in a network is not valid.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107163"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-42A925E7-D0A9-4A06-8902-C47641B43B6F__GUID-C8407288-74D5-4896-A0A9-E60049639082"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>None.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks the validity of the metadata related to LRS information in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.VALIDATE_LRS_SCHEMA(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.VALIDATE_LRS_SCHEMA(&#39;ROADS_NETWORK&#39;)                                    
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1042"></a>
<div class="props_rev_3"><a id="GUID-51950D89-3315-4F81-B0AC-6E20C9F35760"></a>
<h2 id="TOPOL-GUID-51950D89-3315-4F81-B0AC-6E20C9F35760" class="sect2">SDO_NET.VALIDATE_NETWORK</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.VALIDATE_NETWORK(      
  network     IN VARCHAR2,      
  check_data  IN VARCHAR2 DEFAULT &#39;FALSE&#39;       
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the network is valid; returns the string <code class="codeph">FALSE</code> if the network is not valid.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107164"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-51950D89-3315-4F81-B0AC-6E20C9F35760__GUID-06D82BD9-8E6F-4344-8FB6-9640A4307719"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107165"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-51950D89-3315-4F81-B0AC-6E20C9F35760__GUID-77B534A8-E81C-45D7-99F6-296E8CE6DC73"><!-- --></a>check_data</dt>
<dd>
<p><code class="codeph">TRUE</code> performs additional checks on the referential integrity of network data; <code class="codeph">FALSE</code> (the default) performs basic checks, but not additional checks, on the referential integrity of network data.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function checks the metadata for the network and any applicable network schema structures (link, node, path, subpath, LRS). It performs basic referential integrity checks on the network data, and it optionally performs additional checks. If any errors are found, the function returns the string <code class="codeph">FALSE</code>.</p>
<p>The checks performed by this function include the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>The network exists.</p>
</li>
<li>
<p>The node and link tables for the network exist, and they contain the required columns.</p>
</li>
<li>
<p>The start and end nodes of each link exist in the node table.</p>
</li>
<li>
<p>For an LRS geometry network, the LRS table exists and contains the required columns.</p>
</li>
<li>
<p>For a spatial network, columns for the node and path geometries exist and have spatial indexes defined on them.</p>
</li>
<li>
<p>If <code class="codeph">check_data</code> is <code class="codeph">TRUE</code>, additional referential integrity checking on the network data is performed. This will take longer, especially if the network is large.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example validates the network named <code class="codeph">LOG_NET1</code>.</p>
<pre dir="ltr">SELECT SDO_NET.VALIDATE_NETWORK(&#39;LOG_NET1&#39;) FROM DUAL;
 
SDO_NET.VALIDATE_NETWORK(&#39;LOG_NET1&#39;)
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1043"></a>
<div class="props_rev_3"><a id="GUID-E9EB102A-3D4A-4EB4-874F-435C0A11EA25"></a>
<h2 id="TOPOL-GUID-E9EB102A-3D4A-4EB4-874F-435C0A11EA25" class="sect2">SDO_NET.VALIDATE_NODE_SCHEMA</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.VALIDATE_NODE_SCHEMA(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the metadata relating to nodes in a network is valid; returns the string <code class="codeph">FALSE</code> if the metadata relating to nodes in a network is not valid.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107166"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E9EB102A-3D4A-4EB4-874F-435C0A11EA25__GUID-4F414415-CE24-432B-A733-9ED0D5C756D6"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function checks the following for validity: table name, geometry column, and cost column for spatial networks; measure-related information for LRS networks; topology-related information for topology networks; and hierarchy-related information for hierarchical networks.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks the validity of the metadata related to nodes in the network named <code class="codeph">LOG_NET1</code>.</p>
<pre dir="ltr">SELECT SDO_NET.VALIDATE_NODE_SCHEMA(&#39;LOG_NET1&#39;) FROM DUAL;
 
SDO_NET.VALIDATE_NODE_SCHEMA(&#39;LOG_NET1&#39;)
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1044"></a>
<div class="props_rev_3"><a id="GUID-412F16FA-C0B0-400B-8324-A230DC93D85E"></a>
<h2 id="TOPOL-GUID-412F16FA-C0B0-400B-8324-A230DC93D85E" class="sect2">SDO_NET.VALIDATE_PARTITION_SCHEMA</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.VALIDATE_PARTITION_SCHEMA(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the metadata relating to partitions in a network is valid; returns the string <code class="codeph">FALSE</code> if the metadata relating to partitions in a network is not valid.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107167"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-412F16FA-C0B0-400B-8324-A230DC93D85E__GUID-EF186456-522C-4527-B7D2-784F1616FB9C"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function checks the validity of information in the partition table, which is described in <a href="network-data-model-graph-overview.htm#GUID-5F93389F-642E-41E2-A722-7074EB052131">Partition Table</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks the validity of the metadata related to partitions in the network named <code class="codeph">SDO_PARTITIONED</code>.</p>
<pre dir="ltr">SELECT SDO_NET.VALIDATE_PARTITION_SCHEMA(&#39;SDO_PARTITIONED&#39;) FROM DUAL;
 
SDO_NET.VALIDATE_PARTITION_SCHEMA(&#39;SDO_PARTITIONED&#39;)
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1045"></a>
<div class="props_rev_3"><a id="GUID-00421EF7-A0DF-4DEC-B5B8-F6E708D37BD0"></a>
<h2 id="TOPOL-GUID-00421EF7-A0DF-4DEC-B5B8-F6E708D37BD0" class="sect2">SDO_NET.VALIDATE_PATH_SCHEMA</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.VALIDATE_PATH_SCHEMA(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the metadata relating to paths in a network is valid; returns the string <code class="codeph">FALSE</code> if the metadata relating to paths in a network is not valid.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107168"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-00421EF7-A0DF-4DEC-B5B8-F6E708D37BD0__GUID-E8832321-F6F2-4AFF-A5A3-3C7EBF2ECC59"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function checks the following for validity: table name, geometry column, and cost column for spatial networks; measure-related information for LRS networks; topology-related information for topology networks; and hierarchy-related information for hierarchical networks.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks the validity of the metadata related to paths in the network named <code class="codeph">ROADS_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.VALIDATE_PATH_SCHEMA(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
SDO_NET.VALIDATE_PATH_SCHEMA(&#39;ROADS_NETWORK&#39;)                                   
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
<a id="TOPOL1046"></a>
<div class="props_rev_3"><a id="GUID-005DA852-6197-4D86-AA99-B75CF9220E20"></a>
<h2 id="TOPOL-GUID-005DA852-6197-4D86-AA99-B75CF9220E20" class="sect2">SDO_NET.VALIDATE_SUBPATH_SCHEMA</h2>
<div>
<div class="section">
<p class="subhead2">Format</p>
<pre dir="ltr">SDO_NET.VALIDATE_SUBPATH_SCHEMA(      
  network  IN VARCHAR2      
) RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Description</p>
<p>Returns the string <code class="codeph">TRUE</code> if the metadata relating to subpaths in a network is valid; returns the string <code class="codeph">FALSE</code> if the metadata relating to subpaths in a network is not valid.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-107169"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-005DA852-6197-4D86-AA99-B75CF9220E20__GUID-CF5B217B-E851-4ADC-A63D-955611D1922A"><!-- --></a>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Usage Notes</p>
<p>This function checks the validity of information in the subpath table, which is described in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples</p>
<p>The following example checks the validity of the metadata related to subpaths in the network named <code class="codeph">MY_NETWORK</code>.</p>
<pre dir="ltr">SELECT SDO_NET.VALIDATE_SUBPATH_SCHEMA(&#39;MY_NETWORK&#39;) FROM DUAL;
 
SDO_NET.VALIDATE_SUBPATH_SCHEMA(&#39;MY_NETWORK&#39;)
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment106">
<tr>
<td class="cellalignment121">
<table class="cellalignment111">
<tr>
<td class="cellalignment110"><a href="network-data-model-graph-overview.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment110"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment123">
<table class="cellalignment109">
<tr>
<td class="cellalignment110"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment110"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment110"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment110"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment110"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment110"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>