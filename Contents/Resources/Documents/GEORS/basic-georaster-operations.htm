<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-45759"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Basic%20GeoRaster%20Operations"></a><title>Basic GeoRaster Operations</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="DML trigger, creating, triggers, creating GeoRaster DML trigger, GeoRaster tables, raster data table (RDT), GeoRaster objects, loading, loading, GeoRaster data, validating, validating, GeoRaster objects, georeferencing, georeferencing, methods for performing, spatial extent, generating and setting, spatialExtent attribute of SDO_GEORASTER, indexing, indexing spatial extent geometry, querying and searching, physical storage, changing, changing physical storage, optimizing, optimizing physical storage, copying, querying and updating metadata, querying and updating cell data, cell data, querying and updating, interpolating cell values, interpolating cell values, processing, reprojecting GeoRaster objects, compressing, decompressing, compression, of GeoRaster objects, decompression, deleting, dropping, viewing, viewer tool, GeoRaster, exporting, exporting, updating before committing, updating, before committing GeoRaster objects, templates, developing GeoRaster applications, transferring between databases, transferring, GeoRaster data between databases, transportable tablespaces, using with GeoRaster data"/>
<meta name="dcterms.created" content="2017-03-13T13:19:47Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Spatial and Graph GeoRaster Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49118-05"/>
<meta name="dcterms.isVersionOf" content="GEORS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="geor_operations.htm" title="Previous" type="text/html"/>
<link rel="Next" href="geor_raster_algebra.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49118-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-92D80CF0-F503-40BE-B1E6-D06A1DF033B6"></a> <span id="PAGE" style="display:none;">9/18</span> <!-- End Header -->
<a id="GEORS300"></a>
<h1 id="GEORS-GUID-92D80CF0-F503-40BE-B1E6-D06A1DF033B6" class="sect1"><span class="enumeration_chapter">3</span> Basic GeoRaster Operations</h1>
<div>
<p>This chapter describes how to perform the main kinds of basic GeoRaster operations. A typical workflow to build and manage a GeoRaster database consists of most or all of the following steps:</p>
<ol>
<li>
<p>Create the GeoRaster table and raster data table (see <a href="basic-georaster-operations.htm#GUID-796CD9B4-27C6-49F5-B374-CB4316ABBE13">Creating the GeoRaster Table and Raster Data Tables</a>).</p>
</li>
<li>
<p>Initialize or create GeoRaster objects (see <a href="basic-georaster-operations.htm#GUID-A6E26D1A-490F-4D47-B86C-3E4AD707457D">Creating New GeoRaster Objects</a>).</p>
</li>
<li>
<p>Adding temporary tablespaces for GeoRaster users (see <a href="basic-georaster-operations.htm#GUID-2162EF15-706C-43D2-B2BF-AAD219D8CB88">Adding Temporary Tablespaces for GeoRaster Users</a>).</p>
</li>
<li>
<p>Load raster imagery or grids (see <a href="basic-georaster-operations.htm#GUID-FC1E8154-B852-4D5D-A348-45E69785BF81">Loading Raster Data</a>).</p>
</li>
<li>
<p>Validate GeoRaster objects, if they have not already been validated (see <a href="basic-georaster-operations.htm#GUID-B79DA887-66D0-4961-A2EA-2052144F2B17">Validating GeoRaster Objects</a>).</p>
</li>
<li>
<p>Georeference the GeoRaster objects, if necessary (see <a href="basic-georaster-operations.htm#GUID-5E9E62CA-A4CB-4298-9345-0351F60DECC0">Georeferencing GeoRaster Objects</a>).</p>
</li>
<li>
<p>Set the spatial extents of the GeoRaster objects (see <a href="basic-georaster-operations.htm#GUID-004D9CB3-916E-46C3-830B-FA2C88625B88">Generating and Setting Spatial Extents</a>).</p>
</li>
<li>
<p>Create spatial indexes or other indexes, or both (see <a href="basic-georaster-operations.htm#GUID-F31E1BAD-DE81-462E-8103-7A67CF7A8D0E">Indexing GeoRaster Objects</a>).</p>
</li>
<li>
<p>Query and search GeoRaster objects (see <a href="basic-georaster-operations.htm#GUID-13578486-979A-410B-94BB-863DBB4AA7E2">Querying and Searching GeoRaster Objects</a>).</p>
</li>
<li>
<p>Change and optimize the GeoRaster storage format, if necessary (see <a href="basic-georaster-operations.htm#GUID-C27E5446-4222-447C-9661-19A5AA8CE9FC">Changing and Optimizing Raster Storage</a>).</p>
</li>
<li>
<p>Copy GeoRaster objects (see <a href="basic-georaster-operations.htm#GUID-5D4085E6-5A61-4AC1-B386-C7E1ABA63174">Copying GeoRaster Objects</a>).</p>
</li>
<li>
<p>Query and update the GeoRaster metadata (see <a href="basic-georaster-operations.htm#GUID-DB762BC3-88BA-4716-9F0C-A4DC4AEC624F">Querying and Updating GeoRaster Metadata</a>).</p>
</li>
<li>
<p>Query and update cell data (see <a href="basic-georaster-operations.htm#GUID-D78B30EA-E592-4D34-94AC-AB2B1435D60E">Querying and Updating GeoRaster Cell Data</a>).</p>
</li>
<li>
<p>Interpolate cell values (see <a href="basic-georaster-operations.htm#GUID-8C2E91C6-54EF-4285-9B6F-83002E347B3E">Interpolating Cell Values</a>).</p>
</li>
<li>
<p>Process and analyze GeoRaster objects (see <a href="basic-georaster-operations.htm#GUID-D5389E0F-A151-4476-8EA6-DCA329FEFB31">Processing and Analyzing GeoRaster Objects</a>).</p>
</li>
<li>
<p>Monitor and Report GeoRaster operation progress (see <a href="basic-georaster-operations.htm#GUID-AA00D7EE-B6ED-4A42-9475-F353CB5989AC">Monitoring and Reporting GeoRaster Operation Progress</a>).</p>
</li>
<li>
<p>Compress GeoRaster objects, if appropriate (see <a href="basic-georaster-operations.htm#GUID-900D8B54-15B7-4044-AF7F-7BC6854535FE">Compressing and Decompressing GeoRaster Objects</a>).</p>
</li>
<li>
<p>Delete GeoRaster objects, and drop GeoRaster tables and RDTs (see <a href="basic-georaster-operations.htm#GUID-3FE51533-061E-4A2F-BB3E-49A723FE3553">Deleting GeoRaster Objects_ and Dropping GeoRaster Tables and RDTs</a>).</p>
</li>
<li>
<p>View GeoRaster objects (see <a href="basic-georaster-operations.htm#GUID-C65D9E81-48AA-4569-B8E3-2A52263B2435">Viewing GeoRaster Objects</a>).</p>
</li>
<li>
<p>Export GeoRaster objects (see <a href="basic-georaster-operations.htm#GUID-D45DBC81-B4E5-4D06-B1F2-82339C6F52E2">Exporting GeoRaster Objects</a>).</p>
</li>
<li>
<p>Update GeoRaster objects before committing the transaction (see <a href="basic-georaster-operations.htm#GUID-7AB60C10-E48E-4281-A03A-DA38FFA9F121">Updating GeoRaster Objects Before Committing</a>).</p>
</li>
<li>
<p>Use template-related subprograms to develop GeoRaster applications (see <a href="basic-georaster-operations.htm#GUID-A77AAC5B-B0EE-4F8A-9569-79A14D88658B">Using Template-Related Subprograms to Develop GeoRaster Applications</a>).</p>
</li>
<li>
<p>Use GeoRaster with Workspace Manager and Label Security (see <a href="basic-georaster-operations.htm#GUID-BBE8942E-96B3-4EBE-ADB9-AA3FC8FFF3DD">Using GeoRaster with Workspace Manager and Label Security</a>).</p>
</li>
<li>
<p>Maintain efficient tablespace use by GeoRaster objects (see <a href="basic-georaster-operations.htm#GUID-CE77309C-2712-4EC0-B92B-B3A0A028EB32">Maintaining Efficient Tablespace Use by GeoRaster Objects</a>).</p>
</li>
<li>
<p>Maintain GeoRaster objects and system data in the database (see <a href="basic-georaster-operations.htm#GUID-14CEA0C1-837D-4DD4-A255-80ECCC28615E">Maintaining GeoRaster Objects and System Data in the Database</a>).</p>
</li>
<li>
<p>Transfer GeoRaster data between databases (see <a href="basic-georaster-operations.htm#GUID-0F77203F-486F-4160-A03C-8E7EA2594DB1">Transferring GeoRaster Data Between Databases</a>).</p>
</li>
<li>
<p>Use the Oracle Database transportable tablespaces feature with GeoRaster data (see <a href="basic-georaster-operations.htm#GUID-51C68427-CA7F-4E85-90AD-780D770DF81F">Using Transportable Tablespaces with GeoRaster Data</a>).</p>
</li>
</ol>
<p>After you create the GeoRaster objects, load the data, and validate the GeoRaster objects, you can perform the remaining operations in any order, depending on your application needs. You may also be able to skip certain operations.</p>
<p>Some operations can be performed using SQL, and some operations must be performed using PL/SQL blocks. You must update the GeoRaster object after you insert, update, reformat, compress, decompress, or delete the metadata or cell data of the GeoRaster object and before you commit the changes (see <a href="basic-georaster-operations.htm#GUID-7AB60C10-E48E-4281-A03A-DA38FFA9F121">Updating GeoRaster Objects Before Committing</a>). For some examples of these operations, see the demo files described in <a href="geor_intro.htm#GUID-0B5D0180-E897-4F30-9E65-65D827024A95">GeoRaster PL/SQL and Java Demo Files</a> and the examples in <a href="geor_ref.htm#GUID-587A19B6-40FF-4F1C-AC13-556891070C30">SDO_GEOR Package Reference</a>.</p>
<p>Subsequent chapters in this book cover advanced topics (<a href="geor_raster_algebra.htm#GUID-C75744C9-FA04-4391-96F2-59EF2EA212FF">Raster Algebra and Analytics</a> and <a href="geor_image_proc.htm#GUID-EB60166B-6A52-4974-AF16-139CD6480EBC">Image Processing and Virtual Mosaic</a>), and provide detailed reference information about GeoRaster PL/SQL packages ( <a href="geor_ref.htm#GUID-587A19B6-40FF-4F1C-AC13-556891070C30">SDO_GEOR Package Reference</a>, <a href="geor_admin_ref.htm#GUID-6F9B00F3-56C1-4AF9-82A6-DFBAB1BB489E">SDO_GEOR_ADMIN Package Reference</a>, <a href="geor_aggr_ref.htm#GUID-92406947-E079-487D-B0D0-3342ECC23E34">SDO_GEOR_AGGR Package Reference</a>, <a href="geor_ra_ref.htm#GUID-7E8EC42B-D663-49EF-B6D8-158A0EC10333">SDO_GEOR_RA Package Reference</a>, and <a href="geor_util_ref.htm#GUID-080B4F44-F59D-4E2A-AA97-FF209C69C4D2">SDO_GEOR_UTL Package Reference</a>).</p>
</div>
<a id="GEORS986"></a>
<div class="props_rev_3"><a id="GUID-796CD9B4-27C6-49F5-B374-CB4316ABBE13"></a>
<h2 id="GEORS-GUID-796CD9B4-27C6-49F5-B374-CB4316ABBE13" class="sect2"><span class="enumeration_section">3.1</span> Creating the GeoRaster Table and Raster Data Tables</h2>
<div>
<p>Before you can work with GeoRaster objects, you must create a GeoRaster table and one or more raster data tables, if they do not already exist.</p>
</div>
<a id="GEORS988"></a><a id="GEORS987"></a>
<div class="props_rev_3"><a id="GUID-2524D3F1-8E8B-476B-839C-E8D518AEF7B8"></a>
<h3 id="GEORS-GUID-2524D3F1-8E8B-476B-839C-E8D518AEF7B8" class="sect3"><span class="enumeration_section">3.1.1</span> Creating a GeoRaster Table</h3>
<div>
<p>A GeoRaster table is any table that includes at least one column of type SDO_GEORASTER. The column can be an attribute column of another user-defined object type. <a href="basic-georaster-operations.htm#GUID-2524D3F1-8E8B-476B-839C-E8D518AEF7B8__CHDEJAIF">Example 3-1</a> creates a GeoRaster table named CITY_IMAGES, which contains a column named IMAGE for storing GeoRaster objects.</p>
<div class="example" id="GUID-2524D3F1-8E8B-476B-839C-E8D518AEF7B8__CHDEJAIF">
<p class="titleinexample">Example 3-1 Creating a GeoRaster Table for City Images</p>
<pre dir="ltr">CREATE TABLE city_images (image_id NUMBER PRIMARY KEY, image_description VARCHAR2(50), image SDO_GEORASTER);
</pre>
<p>For more information about GeoRaster tables, see <a href="geor_intro.htm#GUID-DB21CC32-06DC-4E18-A4FB-B15C389C1F72">GeoRaster Physical Storage</a>.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="GEORS991"></a><a id="GEORS1214"></a><a id="GEORS989"></a>
<div class="props_rev_3"><a id="GUID-9A353A7D-CD42-4692-AFD2-554353919431"></a>
<h3 id="GEORS-GUID-9A353A7D-CD42-4692-AFD2-554353919431" class="sect3"><span class="enumeration_section">3.1.2</span> Creating Raster Data Tables</h3>
<div>
<p><a id="d14700e366" class="indexterm-anchor"></a><a id="d14700e370" class="indexterm-anchor"></a>After creating a GeoRaster table, you should create one or more raster data tables (RDTs) to be used with the objects in the GeoRaster table. You can create a raster data table as an object table or as a relational table. You should use the LOB storage format SecureFiles LOBs (SecureFiles) when creating RDTs. Using SecureFiles significantly improves the performance of GeoRaster operations, compared to using the original LOB storage paradigm BasicFiles LOBS (BasicFiles).</p>
<p><a href="basic-georaster-operations.htm#GUID-9A353A7D-CD42-4692-AFD2-554353919431__CHDEEBGE">Example 3-2</a> creates a raster data table using SecureFiles. The RDT will be used to store all raster blocks of one or many GeoRaster objects in the CITY_IMAGES table or other GeoRaster tables. (The association between a GeoRaster object and a raster data table is not made until you create a GeoRaster object, as explained in <a href="basic-georaster-operations.htm#GUID-A6E26D1A-490F-4D47-B86C-3E4AD707457D">Creating New GeoRaster Objects</a>.)</p>
<div class="example" id="GUID-9A353A7D-CD42-4692-AFD2-554353919431__CHDEEBGE">
<p class="titleinexample">Example 3-2 Creating a Raster Data Table Using SecureFiles</p>
<pre dir="ltr">CREATE TABLE city_images_rdt OF SDO_RASTER
  (PRIMARY KEY (rasterID, pyramidLevel, bandBlockNumber,
    rowBlockNumber, columnBlockNumber))
  TABLESPACE im_tbs_2
  LOB(rasterBlock) STORE AS SECUREFILE
    (CACHE);
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-9A353A7D-CD42-4692-AFD2-554353919431__CHDCEIAC">
<p class="titleinexample">Example 3-3 Creating a Raster Data Table (Relational) Using SecureFiles</p>
<p><a href="basic-georaster-operations.htm#GUID-9A353A7D-CD42-4692-AFD2-554353919431__CHDCEIAC">Example 3-3</a> creates a raster data table with the same name as in <a href="basic-georaster-operations.htm#GUID-9A353A7D-CD42-4692-AFD2-554353919431__CHDEEBGE">Example 3-2</a>, also using SecureFiles, but creating it as a relational table instead of an object table.</p>
<pre dir="ltr">CREATE TABLE city_images_rdt
  (rasterID NUMBER,
  pyramidLevel NUMBER,
  bandBlockNumber NUMBER,
  rowBlockNumber NUMBER,
  columnBlockNumber NUMBER,
  blockMBR SDO_GEOMETRY,
  rasterBlock BLOB,
  CONSTRAINT pkey PRIMARY KEY (rasterId, pyramidLevel, bandBlockNumber,
    rowBlockNumber, columnBlockNumber))
  LOB (rasterblock) STORE AS SECUREFILE(cache);
</pre>
<p>The CREATE TABLE statement for a raster data table must include the following clause (which is included in the preceding examples):</p>
<pre dir="ltr">  (PRIMARY KEY (rasterID, pyramidLevel, bandBlockNumber,
    rowBlockNumber, columnBlockNumber))
</pre>
<p>This PRIMARY KEY clause creates a B-tree index on the raster data table, and this index is essential for optimal query performance.</p>
<p>When you use BasicFiles, you can specify a larger CHUNK size (16 or 32 KB) for the LOB storage to improve performance. With SecureFiles, there is no need to specify the CHUNK size parameter, and there are few other storage parameters to consider. Raster data tables using SecureFiles LOBs must be created in a tablespace with the automatic segment space management option. For information about using Oracle SecureFiles and performance considerations for BasicFiles LOBs, see <a class="olink ADLOB" target="_blank" href="../ADLOB/toc.htm"><span class="italic">Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</span></a>.</p>
<p>For reference information about creating tables, including specifying LOB storage, see the section about the CREATE TABLE statement in <a class="olink SQLRF" target="_blank" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
<p>For more information about the keywords and options when creating a raster data table, see <a href="geor_intro.htm#GUID-2F832FEF-9937-4BF9-BB32-FBD056FCF017">Raster Data Table</a>.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="GEORS992"></a>
<div class="props_rev_3"><a id="GUID-41CD2847-8823-479A-AC0F-A991B2F083A9"></a>
<h3 id="GEORS-GUID-41CD2847-8823-479A-AC0F-A991B2F083A9" class="sect3"><span class="enumeration_section">3.1.3</span> GeoRaster DML Trigger</h3>
<div>
<p>To ensure the consistency and integrity of internal GeoRaster tables and data structures, GeoRaster automatically creates a unique DML trigger for each GeoRaster column whenever a user creates a GeoRaster table (that is, a table with at least one GeoRaster column), with the following exception: if you use the ALTER TABLE statement to add one or more GeoRaster columns, you must call the <a href="geor_util_ref.htm#GUID-CCA772B5-AA1E-4A53-B64C-67D8F6052CF2">SDO_GEOR_UTL.createDMLTrigger</a> procedure to create the DML trigger on each added GeoRaster column. In some scenarios, such as a database upgrade or a data migration, you can call the <a href="geor_util_ref.htm#GUID-AD56A631-0111-44A2-8A94-4F326FCABA3B">SDO_GEOR_UTL.recreateDMLTriggers</a> procedure to re-create the DML triggers on all GeoRaster columns.</p>
<p>The trigger is fired after each of the following data manipulation language (DML) operations affecting a GeoRaster object: insertion of a row, update of a GeoRaster object, and deletion of a row.</p>
<p>GeoRaster automatically performs the following actions when the trigger is fired:</p>
<ul style="list-style-type: disc;">
<li>
<p>After an insert operation, the trigger inserts a row with the GeoRaster table name, GeoRaster column name, raster data table name, and <code class="codeph">rasterID</code> value into the USER_SDO_GEOR_SYSDATA view (described in <a href="geor_operations.htm#GUID-657BA65F-E8FF-41D7-94B6-BA412993EC52">GeoRaster System Data Views (xxx_SDO_GEOR_SYSDATA)</a>). If an identical entry already exists, an exception is raised.</p>
</li>
<li>
<p>After an update operation, if the new GeoRaster object is null or empty, the trigger deletes the old GeoRaster object. If there is no entry in the USER_SDO_GEOR_SYSDATA view for the old GeoRaster object (that is, if the old GeoRaster object is null), the trigger inserts a row into that view for the new GeoRaster object. If there is an entry in the USER_SDO_GEOR_SYSDATA view for the old GeoRaster object, the trigger updates the information to reflect the new GeoRaster object.</p>
</li>
<li>
<p>After a delete operation, the trigger deletes raster data blocks for the GeoRaster object in its raster data table, and it deletes the row in the USER_SDO_GEOR_SYSDATA view for the GeoRaster object.</p>
</li>
</ul>
</div>
</div>
</div>
<a id="GEORS993"></a>
<div class="props_rev_3"><a id="GUID-A6E26D1A-490F-4D47-B86C-3E4AD707457D"></a>
<h2 id="GEORS-GUID-A6E26D1A-490F-4D47-B86C-3E4AD707457D" class="sect2"><span class="enumeration_section">3.2</span> Creating New GeoRaster Objects</h2>
<div>
<p>Before you can store a GeoRaster image in a GeoRaster table, you must create the GeoRaster object and insert it into a GeoRaster table before you start working on it. To create a new GeoRaster object, you have the following options:</p>
<ul style="list-style-type: disc;">
<li>
<p>Initialize an empty GeoRaster object, using the <a href="geor_ref.htm#GUID-524A6FD9-24D3-4CCA-A9D1-0B23819E4CA6">SDO_GEOR.init</a> function.</p>
</li>
<li>
<p>Create a blank GeoRaster object, using the <a href="geor_ref.htm#GUID-7D203CE7-A6F0-4545-92B4-5E8ED3E007FE">SDO_GEOR.createBlank</a> function.</p>
</li>
</ul>
<p>You cannot perform any GeoRaster operations if the object has not been properly created (that is, if the object is an atomic null). The <a href="geor_ref.htm#GUID-524A6FD9-24D3-4CCA-A9D1-0B23819E4CA6">SDO_GEOR.init</a> and <a href="geor_ref.htm#GUID-7D203CE7-A6F0-4545-92B4-5E8ED3E007FE">SDO_GEOR.createBlank</a> functions initialize GeoRaster objects with their raster data table and raster ID values if these are not already specified, and the GeoRaster DML trigger ensures that the raster data table name and raster ID value pair is unique for the current user.</p>
<p>If the new GeoRaster object will hold raster cell data (resulting from another GeoRaster procedure, such as <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a>, <a href="geor_ref.htm#GUID-827C49FA-3759-4EC3-8ED5-A9A4E623EEEB">SDO_GEOR.subset</a>, or <a href="geor_ref.htm#GUID-72D93D49-BF98-4AB9-8FEA-C386A1BE1071">SDO_GEOR.copy</a>), and if the raster data table for this new GeoRaster object does not exist, you must first create the raster data table. For information about creating a raster data table, including examples, see <a href="basic-georaster-operations.htm#GUID-9A353A7D-CD42-4692-AFD2-554353919431">Creating Raster Data Tables</a>.</p>
<p><a id="d14700e561" class="indexterm-anchor"></a><a id="d14700e563" class="indexterm-anchor"></a>To avoid potential GeoRaster data problems (some of which are described in <a href="basic-georaster-operations.htm#GUID-14CEA0C1-837D-4DD4-A255-80ECCC28615E">Maintaining GeoRaster Objects and System Data in the Database</a>), an initialized GeoRaster object must be <span class="bold">registered</span> in the GeoRaster system views, which is done automatically when you insert the GeoRaster object into a GeoRaster table. This should be done before you perform any other operations on the GeoRaster object. Any GeoRaster operations that need to manipulate the raster data table raise an exception if the source or target GeoRaster object is not registered.</p>
</div>
</div>
<a id="GEORS1375"></a>
<div class="props_rev_3"><a id="GUID-2162EF15-706C-43D2-B2BF-AAD219D8CB88"></a>
<h2 id="GEORS-GUID-2162EF15-706C-43D2-B2BF-AAD219D8CB88" class="sect2"><span class="enumeration_section">3.3</span> Adding Temporary Tablespaces for GeoRaster Users</h2>
<div>
<p>A GeoRaster database is typically very large and may use a temporary tablespace for some operations. When compression is involved in GeoRaster operations, particularly for large scale mosaicking operations, some temporary spaces are needed to store intermediate compressed or uncompressed data. If the GeoRaster user does not have a temporary tablespace, the database system temporary tablespace is used. This is not efficient and may slow down the mosaicking and other operations. Therefore, you should always create temporary tablespaces for GeoRaster users. For example:</p>
<pre dir="ltr">CONNECT system/<span class="italic">&lt;password&gt;</span>; 
CREATE TEMPORARY TABLESPACE geor_temp TEMPFILE &#39;geor_temp_1.f&#39; SIZE 1G AUTOEXTEND ON; 
ALTER USER <span class="italic">&lt;georaster_user&gt;</span> TEMPORARY TABLESPACE geor_temp;
</pre>
<p>In general, the amount of temporary space needed is limited. However, for large scale mosaicking, if the result is to be compressed, the temporary space needed is equal to the uncompressed image size of the result. Therefore, specify <code class="codeph">AUTOEXTEND ON</code> when you create temporary tablespaces for GeoRaster users.</p>
</div>
</div>
<a id="GEORS994"></a>
<div class="props_rev_3"><a id="GUID-FC1E8154-B852-4D5D-A348-45E69785BF81"></a>
<h2 id="GEORS-GUID-FC1E8154-B852-4D5D-A348-45E69785BF81" class="sect2"><span class="enumeration_section">3.4</span> Loading Raster Data</h2>
<div>
<p>To load and export imagery or raster data, always consider third-party ETL tools (see the note in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>)</p>
<p>If you use features in GeoRaster to load raster data, you have the following options:</p>
<ul style="list-style-type: disc;">
<li>
<p>Call the <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> procedure to load images into GeoRaster objects.</p>
</li>
<li>
<p>Use the GeoRaster JAI-based loader tool or viewer tool, which are described in <a href="geor_intro.htm#GUID-8FE18098-EE55-490D-81C9-7DE1DCFDDB34">JAI-Based Viewer_ Loader_ and Exporter</a>.</p>
</li>
<li>
<p>Use the GDAL based ETL tool for concurrent batch loading and exporting. This tool is described in <a href="geor_intro.htm#GUID-6E9B9872-7222-45AD-8FE1-CAFF596D3955">GDAL-Based ETL Wizard for Concurrent Batch Loading and Exporting</a>.</p>
</li>
</ul>
<p>With the first two options (<a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> and JAI-based tool), you can do the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Compress raster data and store the data in JPEG-compressed or DEFLATE-compressed GeoRaster objects.</p>
</li>
<li>
<p>Load an ESRI world file or a Digital Globe RPC text file (.rpb) into an existing GeoRaster object, and georeference the raster data without reloading it. You can also specify an SRID with the world file and generate the spatial extent of the data.</p>
</li>
<li>
<p>Load a GeoTIFF format file with georeferencing, with or without raster data. To load and export the georeferencing information of GeoTIFF images, the GeoTIFF libraries are required. See <a href="basic-georaster-operations.htm#GUID-5E9E62CA-A4CB-4298-9345-0351F60DECC0">Georeferencing GeoRaster Objects</a> for instructions.</p>
</li>
</ul>
<p>When you load an image or raster file into GeoRaster object, always consider and apply appropriate blocking of the data, because file formats might have very different blocking schemes. In general, blocking sizes should be 256x256 or larger. There is no absolute rule for the blocking sizes, but the larger the raster, the larger the blocking sizes you might use. For regular rasters, 512x512 to 2048x2048 is appropriate. For very small images (less than 1024x1024x3), no blocking may be a good choice. Avoid blocking sizes that are either too small (such as 64x64 and 128x128) or too large, and avoid extreme blocking sizes such as 0.5 (one-half), 1, or 8 rows of pixels per block. Generally, the rectangular shape of blocks should be a square or close to a square. For different applications, you might tune the blocking to balance efficient storage with optimal performance.</p>
<p>After loading raster data into a GeoRaster object, you must ensure that the object is valid by calling the <a href="geor_ref.htm#GUID-72D06328-134D-473E-8279-F0C3B6ADEE34">SDO_GEOR.validateGeoRaster</a> function, as explained in <a href="basic-georaster-operations.htm#GUID-B79DA887-66D0-4961-A2EA-2052144F2B17">Validating GeoRaster Objects</a>.</p>
<p>Because an ESRI world file or .<code class="codeph">rpb</code> file does not contain coordinate system information, you can specify the SRID value of a coordinate reference system for the load operation. However, if you do not specify an SRID, the model SRID of the GeoRaster objects is set to 0 (zero) by the loader, which means that the GeoRaster object is invalid, and therefore you must use the <a href="geor_ref.htm#GUID-8CE5E5B6-F109-444F-9CE2-91580CD085D3">SDO_GEOR.setModelSRID</a> procedure to specify a valid model space for this object. If you do not yet know the coordinate system of the model space, <a id="d14700e716" class="indexterm-anchor"></a><a id="d14700e718" class="indexterm-anchor"></a>you can specify the SRID value as 999999, which means that the coordinate reference system is unknown. (Specifically, SRID 999999 is associated with a coordinate reference system named <code class="codeph">unknown CRS</code>.) Later, when you know the actual coordinate reference system of the model space, you can set the SRID value accordingly.</p>
<p>For more information about the <code class="codeph">unknown CRS</code> (SRID 999999) coordinate reference system, see <a class="olink SPATL" target="_blank" href="../SPATL/toc.htm"><span class="italic">Oracle Spatial and Graph Developer&#39;s Guide</span></a>.</p>
</div>
<a id="GEORS995"></a>
<div class="props_rev_3"><a id="GUID-7FBC6EB0-D4B8-43F8-A6F5-11C4319632AB"></a>
<h3 id="GEORS-GUID-7FBC6EB0-D4B8-43F8-A6F5-11C4319632AB" class="sect3"><span class="enumeration_section">3.4.1</span> Reformatting the Source Raster Before Loading</h3>
<div>
<p>The GeoRaster JAI-based loader does not support source raster files in BSQ interleaving, and it might raise an &#34;insufficient memory&#34; error if the files are too big, and it might have other restrictions. To avoid such problems, you can reformat and reblock the source files so that they can be properly loaded.</p>
<p>As an example, one way to do this is to use GDAL, an Open Source raster transformation library available from <a href="http://www.gdal.org" target="_blank"><code class="codeph">http://www.gdal.org</code></a>, to reformat or reblock the image or raster file so that JAI (Java Advanced Imaging) can handle it. GDAL supports GeoRaster natively and can import and export GeoRaster objects directly, and can also process GeoRaster objects; for more information, see <a href="http://www.oracle.com/technetwork/database/enterprise-edition/getting-started-with-gdal-133874.pdf" target="_blank"><code class="codeph">http://www.oracle.com/technetwork/database/enterprise-edition/getting-started-with-gdal-133874.pdf</code></a>. You can also use GDAL to generate TFW files. For example, execute commands such as the following two (each command on a single line) using the GDAL command line or (for batch conversion) shell:</p>
<pre dir="ltr">gdal_translate -of GTiff -co &#34;TFW=YES&#34; -co &#34;INTERLEAVE=PIXEL&#34; -co &#34;TILED=YES&#34; D:\my_image.tif D:\my_new_image.tif
 
gdal_translate -of GTiff -co &#34;TILED=YES&#34; -co &#34;TFW=YES&#34; D:\my_image.ecw D:\my_new_image.tif
</pre>
<p>In the preceding example, the first command generates a TFW file, changes the interleaving to BIP (which is supported by JAI), and reblocks the image to 256x256. The second command converts ECW to TIFF, generates TFW, and reblocks the image.</p>
<p>Then use the GeoRaster loader tool (described in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>) , specifying reblocking so that the image can be loaded successfully and later retrieved from the database efficiently, as in the following example (a single command):</p>
<pre dir="ltr">java -Xmx1024m oracle.spatial.georaster.tools.GeoRasterLoader mymachine db11 6521 georaster georaster thin 32 T globe image &#34;blocking=true, blocksize=(512,512,3)&#34; &#34;D:my_image.tif,2,RDT_15, D:\my_image.tfw,82213&#34;
</pre>
<p>If you receive an &#34;insufficient memory&#34; error when calling <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> to load a very large image, try loading the image with a different blocking size parameter or reblock the image into smaller internal tile sizes using GDAL before loading. For extremely large images, you can also use GDAL to tile the image into multiple smaller image files with sizes that JAI can handle, or you use GDAL to load and export the images directly.</p>
</div>
</div>
</div>
<a id="GEORS996"></a>
<div class="props_rev_3"><a id="GUID-B79DA887-66D0-4961-A2EA-2052144F2B17"></a>
<h2 id="GEORS-GUID-B79DA887-66D0-4961-A2EA-2052144F2B17" class="sect2"><span class="enumeration_section">3.5</span> Validating GeoRaster Objects</h2>
<div>
<p>Before you use a GeoRaster object or after you manually edit the raster data and metadata of a GeoRaster object, you should ensure that the object is valid. Validation for a GeoRaster object includes checking the registration of the GeoRaster object, checking the metadata and the raster cell data, and making sure that the metadata and data are consistent. For example, validation checks the raster type, dimension information, and the actual sizes of cell blocks, and it performs other checks.</p>
<p>If you used the GeoRaster loader tool described in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>, the GeoRaster objects were validated during the load operation.</p>
<p>GeoRaster provides the following validation subprograms:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="geor_ref.htm#GUID-72D06328-134D-473E-8279-F0C3B6ADEE34">SDO_GEOR.validateGeoRaster</a> validates the GeoRaster object, including cell data and metadata. It returns <code class="codeph">TRUE</code> if the object is valid; otherwise, it returns one of the following: an Oracle error code indicating why the GeoRaster object is invalid, <code class="codeph">FALSE</code> if validation fails for an unknown reason, or <code class="codeph">NULL</code> if the GeoRaster object is null. You should always use this function after you create a GeoRaster object.</p>
</li>
<li>
<p><a href="geor_ref.htm#GUID-64122DD0-D412-49A9-A73B-7D550CCCA78E">SDO_GEOR.schemaValidate</a> validates the metadata against the GeoRaster XML schema. You can use this function to locate errors if the <a href="geor_ref.htm#GUID-72D06328-134D-473E-8279-F0C3B6ADEE34">SDO_GEOR.validateGeoRaster</a> function returned the error code 13454. The <a href="geor_ref.htm#GUID-64122DD0-D412-49A9-A73B-7D550CCCA78E">SDO_GEOR.schemaValidate</a> and <a href="geor_ref.htm#GUID-72D06328-134D-473E-8279-F0C3B6ADEE34">SDO_GEOR.validateGeoRaster</a> functions do not validate the spatial extent geometry.</p>
</li>
<li>
<p><a href="geor_ref.htm#GUID-1AC1C8C0-9D2D-45F5-9D09-EE802DEDDD76">SDO_GEOR.validateBlockMBR</a> validates the <code class="codeph">blockMBR</code> geometry associated with each raster block stored in the raster data table. If there are any invalid <code class="codeph">blockMBR</code> geometries, call the <a href="geor_ref.htm#GUID-3D259BE8-962A-457D-96AB-70282BD75B2C">SDO_GEOR.generateBlockMBR</a> procedure to regenerate them.</p>
</li>
</ul>
</div>
</div>
<a id="GEORS997"></a>
<div class="props_rev_3"><a id="GUID-5E9E62CA-A4CB-4298-9345-0351F60DECC0"></a>
<h2 id="GEORS-GUID-5E9E62CA-A4CB-4298-9345-0351F60DECC0" class="sect2"><span class="enumeration_section">3.6</span> Georeferencing GeoRaster Objects</h2>
<div>
<p>Georeferencing, as explained in <a href="geor_intro.htm#GUID-E32BF03B-DB83-422E-B7D0-C0F3073890F9">Georeferencing</a>, establishes the relationship between cell coordinates of GeoRaster data and real-world ground coordinates (or some local coordinates). If you need to georeference GeoRaster objects, the following approaches are available:</p>
<ul style="list-style-type: disc;">
<li>
<p>If the original image is already georeferenced and if the georeferencing information is stored in an ESRI world file or .<code class="codeph">rpb</code> file containing RPC coefficients you can use the <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> procedure to load an ESRI world file or .<code class="codeph">rpb</code> file from a file or from a CLOB object, along with the image data itself (in either FILE or BLOB format). You can also use the GeoRaster client-side loader tool (described in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>) to load an ESRI world file or .<code class="codeph">rpb</code> file from a file, along with the image file itself.</p>
<p>Because an ESRI world file or .<code class="codeph">rpb</code> file does not specify the model coordinate system, you can set the model space of the georeferenced GeoRaster object using an Oracle SRID in either of the following ways: specify the SRID along with the world file as a parameter to the <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> procedure or the GeoRaster client-side loader (described in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>); or, after loading the world file, call the <a href="geor_ref.htm#GUID-8CE5E5B6-F109-444F-9CE2-91580CD085D3">SDO_GEOR.setModelSRID</a> procedure. You can also call the <a href="geor_ref.htm#GUID-8CE5E5B6-F109-444F-9CE2-91580CD085D3">SDO_GEOR.setModelSRID</a> procedure to change the model space of a georeferenced GeoRaster object.</p>
</li>
<li>
<p>If the original image is a georeferenced GeoTIFF image, you can use the <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> procedure to load the image with georeferencing, by specifying <code class="codeph">GEOTIFF</code> as the input format. To load only the georeferencing information from a GeoTIFF image, without the raster image data, into an existing GeoRaster object, add the <code class="codeph">raster=false</code> storage parameter. You can specify a backup SRID with the <code class="codeph">srid</code> storage parameter, in case the GeoTIFF configuration values do not match any SRID recognized by Oracle Spatial and Graph.</p>
<p>The GeoTIFF <code class="codeph">PixelIsArea</code> raster space is equivalent to the GeoRaster upperleft-based cell coordinate system. An export to GeoTiff is always in <code class="codeph">PixelIsArea</code> raster space, with a half-pixel adjustment of the affine transformation if the GeoRaster object is in center-based cell coordinate system. An import from GeoTIFF is always to the GeoRaster center-based cell coordinate system, with a half-pixel adjustment of the affine transformation if the GeoTIFF file is specified in <code class="codeph">PixelIsArea</code> raster space.</p>
<p>You can also use the GeoRaster client-side loader tool (described in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>) to load GeoTIFF images with georeferencing, using the storage parameter <code class="codeph">geotiff=true</code>. If you omit this parameter or specify <code class="codeph">geotiff=false</code>, the image is loaded as a simple TIFF image without georeferencing. The <code class="codeph">raster</code> and <code class="codeph">srid</code> storage parameters also apply to the client-side loader tool.</p>
<p>To load or export GeoTIFF images with the GeoRaster client-side tools, add the following GeoTIFF libraries to your CLASSPATH definition:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">xtiff-jai.jar</code> (available from the SourceForge Extensible-TIFF-JAI group)</p>
</li>
<li>
<p><code class="codeph">geotiff-jai.jar</code> (available from the SourceForge GeoTIFF-JAI group)</p>
</li>
</ul>
<p><a id="d14700e1020" class="indexterm-anchor"></a><a id="d14700e1022" class="indexterm-anchor"></a>To load or export GeoTIFF images with the <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> or <a href="geor_ref.htm#GUID-6261233E-5E90-479C-97FD-8125C28EC838">SDO_GEOR.exportTo</a> procedure, load these libraries into the MDSYS schema by connecting to the database as the SYSTEM user, editing <span class="italic"><code class="codeph">$ORACLE_HOME</code></span><code class="codeph">/md/admin/sdoldgtf.sql</code> as needed to reflect the paths to the <code class="codeph">xtiff-jai.jar</code> and <code class="codeph">geotiff-jai.jar</code> files, and running the <code class="codeph">sdoldgtf.sql</code> SQL*Plus script. As an alternative to using the <code class="codeph">sdoldgtf.sql</code> script, you can enter the following commands:</p>
<pre dir="ltr">loadjava -user system/<span class="italic">password@database</span> -resolve -force -synonym -schema MDSYS -grant PUBLIC xtiff-jai.jar

loadjava -user system/<span class="italic">password@database</span> -resolve -force -synonym -schema MDSYS -grant PUBLIC geotiff-jai.jar
</pre>
<p>If the database is downgraded to a release before Oracle Database 11<span class="italic">g</span>, these libraries should be uninstalled according to the script in <span class="italic"><code class="codeph">$ORACLE_HOME</code></span><code class="codeph">/md/admin/sdormgtf.sql</code>, editing it as needed to reflect the paths to the <code class="codeph">xtiff-jai.jar</code> and <code class="codeph">geotiff-jai.jar</code> files, and either running the <code class="codeph">sdormgtf.sql</code> script or entering the following commands:</p>
<pre dir="ltr">dropjava -user system/<span class="italic">password@database</span> -resolve -force -synonym -schema MDSYS -grant PUBLIC xtiff-jai.jar

dropjava -user system/<span class="italic">password@database</span> -resolve -force -synonym -schema MDSYS -grant PUBLIC geotiff-jai.jar
</pre></li>
<li>
<p>You can use the <a href="geor_ref.htm#GUID-0406AB05-BA9B-4331-8613-B480A9F12C09">SDO_GEOR.setSRS</a> procedure to add, modify, and delete georeferencing information by directly accessing the GeoRaster SRS metadata. For example, you can create an SDO_GEOR_SRS object and assign the coefficients and related georeferencing information, and then call the <a href="geor_ref.htm#GUID-0406AB05-BA9B-4331-8613-B480A9F12C09">SDO_GEOR.setSRS</a> procedure to add or update the spatial reference information of any GeoRaster object. You can use the <a href="geor_ref.htm#GUID-0406AB05-BA9B-4331-8613-B480A9F12C09">SDO_GEOR.setSRS</a> procedure to set up the spatial reference information for all supported functional fitting georeferencing models. Examples of setting up the SRS information from an existing DLT model and from an existing RPC model are included in reference section for the <a href="geor_ref.htm#GUID-0406AB05-BA9B-4331-8613-B480A9F12C09">SDO_GEOR.setSRS</a> procedure.</p>
<p>If you know that one GeoRaster object has the same SRS information as another GeoRaster object, you can call the <a href="geor_ref.htm#GUID-FBC8D0DC-4C02-484B-8D99-F34A4C157EA7">SDO_GEOR.getSRS</a> function to retrieve an SDO_GEOR_SRS object from this GeoRaster object, and then call the <a href="geor_ref.htm#GUID-0406AB05-BA9B-4331-8613-B480A9F12C09">SDO_GEOR.setSRS</a> procedure to georeference the first GeoRaster object.</p>
</li>
<li>
<p>If the GeoRaster object can be georeferenced using an affine transformation, you can call the <a href="geor_ref.htm#GUID-BFA20035-A3A9-41C6-A7B0-DFB014C73F34">SDO_GEOR.georeference</a> procedure to georeference a GeoRaster object directly. As described in the reference information for the <a href="geor_ref.htm#GUID-BFA20035-A3A9-41C6-A7B0-DFB014C73F34">SDO_GEOR.georeference</a>, this procedure takes the coefficients <code class="codeph">A</code>, <code class="codeph">B</code>, <code class="codeph">C</code>, <code class="codeph">D</code>, <code class="codeph">E</code>, <code class="codeph">F</code> and other information, converts them into the coefficients <code class="codeph">a</code>, <code class="codeph">b</code>, <code class="codeph">c</code>, <code class="codeph">d</code>, <code class="codeph">e</code>, <code class="codeph">f</code>, and stores them in the spatial reference information of a GeoRaster object. If the original raster data is rectified and if the model coordinate of its origin (upper-left corner) is (x0, y0) and its spatial resolution or scale is <code class="codeph">s</code>, then the following are true: A = s, B = 0, C = x0, D = 0, E = -s, F = y0.</p>
</li>
<li>
<p>If you have ground control points (GCPs) or want to collect GCPs yourself, you can call the <a href="geor_ref.htm#GUID-BFA20035-A3A9-41C6-A7B0-DFB014C73F34">SDO_GEOR.georeference</a> procedure to georeference the GeoRaster object. For more information, see <a href="geor_image_proc.htm#GUID-AA625889-BB88-4633-BECD-E76FAE05EE01">Advanced Georeferencing</a>.</p>
</li>
</ul>
<p><a id="d14700e1183" class="indexterm-anchor"></a><a id="d14700e1187" class="indexterm-anchor"></a>Based on the SRS information of a georeferenced GeoRaster object, transforming GeoRaster coordinate information means finding the model (ground) coordinate associated with a specific cell (raster) coordinate, and the reverse. That is, you can do the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Given a specific cell coordinate, you can find the associated model space coordinate using the <a href="geor_ref.htm#GUID-9BA7B6F8-B6AE-4D4B-A264-F4977FB998C8">SDO_GEOR.getModelCoordinate</a> function. For example, if you identify a point in an image, you can find the longitude and latitude coordinates associated with that point.</p>
</li>
<li>
<p>Given a model space coordinate, you can find the associated cell coordinate using the <a href="geor_ref.htm#GUID-65B7D251-A852-44AE-904A-36787748A6E6">SDO_GEOR.getCellCoordinate</a> function. For example, if you identify longitude and latitude coordinates, you can find the cell in an image associated with those coordinates.</p>
</li>
</ul>
</div>
</div>
<a id="GEORS998"></a>
<div class="props_rev_3"><a id="GUID-004D9CB3-916E-46C3-830B-FA2C88625B88"></a>
<h2 id="GEORS-GUID-004D9CB3-916E-46C3-830B-FA2C88625B88" class="sect2"><span class="enumeration_section">3.7</span> Generating and Setting Spatial Extents</h2>
<div>
<p>When a GeoRaster object is created, its spatial extent (<code class="codeph">spatialExtent</code> attribute, described in <a href="geor_operations.htm#GUID-E392DB15-C7C3-40E8-815C-527D2CD1F45F">spatialExtent Attribute</a>) is not necessarily the enclosing geometry in its model space coordinate system. The spatial extent (footprint) geometry might initially be null, or it might reflect the cell space coordinate system or some other coordinate system. The ability to generate and set spatial extents is useful for building large GeoRaster databases of a global or large regional scope, in which the spatial extents are in one global geodetic coordinate system while the GeoRaster objects (imagery, DEMs, and so on) are in different projected coordinate systems. In such a case, you can create a spatial (R-tree) index on the spatial extents, which requires that all spatial extent geometries have the same SRID value.</p>
<p>To ensure that the spatial extent geometry of each GeoRaster object in a table is correct for its model space coordinate system (or for any other coordinate system that you may want to use), you must set the spatial extent. Moreover, to use a spatial index on the spatial extent geometries (described in <a href="basic-georaster-operations.htm#GUID-F31E1BAD-DE81-462E-8103-7A67CF7A8D0E">Indexing GeoRaster Objects</a>), all indexed geometries must be based on the same coordinate system (that is, have the same SRID value).</p>
<p>You can set the spatial extent in either of the following ways: specify <code class="codeph">spatialExtent=TRUE</code> as a storage parameter to the <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> procedure or the GeoRaster client-side loader (described in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>), or use the SQL UPDATE statement. If you use the <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> procedure or the loader, the SRID cannot be null or 0 (zero), and if there is an R-tree index on the GeoRaster spatial extent, the SRID of the spatial extent must match the SRID of the existing spatial index; otherwise, the spatial extent is set to a null value.</p>
<p>In addition, if you do not already have the spatial extent geometry, you can generate it using the <a href="geor_ref.htm#GUID-45E80146-A186-418F-9396-260BCC7A3BE8">SDO_GEOR.generateSpatialExtent</a> function, and use that geometry to update the GeoRaster object. The following example updates the spatial extent geometry of a specified GeoRaster object in the CITY_IMAGES table (created in <a href="basic-georaster-operations.htm#GUID-2524D3F1-8E8B-476B-839C-E8D518AEF7B8__CHDEJAIF">Example 3-1</a> in <a href="basic-georaster-operations.htm#GUID-2524D3F1-8E8B-476B-839C-E8D518AEF7B8">Creating a GeoRaster Table</a>) to the generated spatial extent (reflecting the model coordinate system) of that object:</p>
<pre dir="ltr">UPDATE city_images c
  SET c.image.spatialExtent = sdo_geor.generateSpatialExtent(image)
    WHERE c.image_id = 100;
COMMIT;
</pre>
<p>If you already know the spatial extent geometry for a GeoRaster object, or if you want the spatial extent geometry to be based on a coordinate system other than the one for the model space, construct the SDO_GEOMETRY object or select it from a table, and then update the GeoRaster object to set its spatial extent attribute to that geometry, as shown in the following example:</p>
<pre dir="ltr">DECLARE
 geom sdo_geometry;
BEGIN
-- Set geom to an SDO_GEOMETRY object that covers the spatial extent
-- of the desired GeoRaster object. If necessary, perform coordinate
-- system transformation before setting geom.
-- geom := sdo_geometry(...);
  UPDATE city_images c
    SET c.image.spatialExtent = geom WHERE c.image_id = 100;
  COMMIT;
END;
</pre></div>
<a id="GEORS1194"></a>
<div class="props_rev_3"><a id="GUID-2512A66C-3558-4374-95AB-5A090D99EA78"></a>
<h3 id="GEORS-GUID-2512A66C-3558-4374-95AB-5A090D99EA78" class="sect3"><span class="enumeration_section">3.7.1</span> Special Considerations if the GeoRaster Table Has a Spatial Index</h3>
<div>
<p>If you create a spatial R-tree index on the GeoRaster spatial extents (as described in <a href="basic-georaster-operations.htm#GUID-F31E1BAD-DE81-462E-8103-7A67CF7A8D0E">Indexing GeoRaster Objects</a>), all spatial extent geometries must have the same SRID value. However, the GeoRaster objects may have different model SRIDs, and most GeoRaster operations automatically generate a spatial extent for the output GeoRaster objects based on the model SRID of the source GeoRaster object or objects. This can cause problems when the resulting GeoRaster object with a spatial extent is updated into a GeoRaster table, which might already have a spatial index built on its <code class="codeph">spatialExtent</code> attribute but using a different SRID.</p>
<p>In such cases, you must transform the spatial extent to the same SRID as that of the spatial index before the insert or update operation. The following example performs a mosaic operation, but then transforms the spatial extent of the resulting GeoRaster object to SRID 8307 before updating the GeoRaster table with that object.</p>
<pre dir="ltr">DECLARE
  gr sdo_georaster;
BEGIN
  SELECT georaster INTO gr FROM mosaic_test WHERE georid=1 FOR UPDATE;
  sdo_geor.mosaic(&#39;mosaic_data&#39;, &#39;georaster&#39;, gr, &#39;blocksize=(512,512)&#39;);
  -- Transform the spatial extent geometry, if ncessary.
  -- In this example example, the modelSRID of the mosaic is 27302,
  -- but the SRID of the spatial index on mosaic_test is 8307.
  <span class="bold">gr.spatialExtent := sdo_cs.transform(gr.spatialExtent, 8307);</span>
  UPDATE mosaic_test SET georaster=gr WHERE georid=1;
END;
/
</pre>
<p>If a spatial R-tree index exists, a commit operation after an insert or update operation causes the index to be updated if the inserted or updated GeoRaster object has a spatial extent geometry. This could slow some operations if you perform a commit after each operation, particularly for batch jobs such as batch image loading. It is usually more efficient to balance the performance of index updates with GeoRaster operations, and to commit only in batches after the operations.</p>
<p>For example, image data loading (the <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a> procedure and the GeoRaster loader) is followed by an internal commit operation, so it would be inefficient to load while generating spatial extents by specifying <code class="codeph">spatialExtent=TRUE</code>. Instead, you should probably specify <code class="codeph">spatialExtent=FALSE</code>, and then update the <code class="codeph">spatialExtent</code> attribute afterward, to speed the loading process.</p>
</div>
</div>
</div>
<a id="GEORS999"></a>
<div class="props_rev_3"><a id="GUID-F31E1BAD-DE81-462E-8103-7A67CF7A8D0E"></a>
<h2 id="GEORS-GUID-F31E1BAD-DE81-462E-8103-7A67CF7A8D0E" class="sect2"><span class="enumeration_section">3.8</span> Indexing GeoRaster Objects</h2>
<div>
<div class="section">
<p>GeoRaster data can be indexed in various ways. The most important index you can create on a GeoRaster object is a spatial (R-tree) index on the spatial extent (footprint) geometry of the GeoRaster object (<code class="codeph">spatialExtent</code> attribute, described in <a href="geor_operations.htm#GUID-E392DB15-C7C3-40E8-815C-527D2CD1F45F">spatialExtent Attribute</a>). For large-scale geospatial image and raster databases, you should always create spatial indexes on the GeoRaster columns. The following are the basic steps to create a spatial index on GeoRaster column. (The examples assume that the GeoRaster table name is CITY_IMAGES and its GeoRaster column name is IMAGE.)</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Insert a row into the USER_SDO_GEOM_METADATA view with the georaster table name (CITY_IMAGES in this example) and the spatial extent of the GeoRaster column name (IMAGE.SPATIALEXTENT). Be sure that the correct SRID value (3371 in this example) is registered.</span>
<div>
<pre dir="ltr">INSERT INTO user_sdo_geom_metadata
    (TABLE_NAME,
     COLUMN_NAME,
     DIMINFO,
     SRID)
VALUES (
     &#39;city_images&#39;,
     &#39;image.spatialextent&#39;,
     SDO_DIM_ARRAY(
        SDO_DIM_ELEMENT(&#39;X&#39;, -1000000000, 1000000000, 0.005),
        SDO_DIM_ELEMENT(&#39;Y&#39;, -1000000000, 1000000000, 0.005)),
     3371
);
</pre></div>
</li>
<li class="stepexpand"><span>Create a spatial index on the GeoRaster column, as in the following example which creates a spatial index named CITY_IMAGES_IDX on the spatial extents of the images using default values for all parameters.</span>
<div>
<pre dir="ltr">CREATE INDEX city_images_idx 
      ON city_images (image.spatialextent)
      INDEXTYPE IS MDSYS.SPATIAL_INDEX;
</pre>
<p>The preceding statement may fail if there are some invalid spatial extents or if the SRID values in the GeoRaster table do not match the SRID registered in the preceding step. If the statement fails, ensure that all GeoRaster objects have a valid <code class="codeph">spatialExtent</code> geometry attribute and that all <code class="codeph">spatialExtent</code> geometries have the same SRID. (Null for the <code class="codeph">spatialExtent</code> values is acceptable.) Then re-create the spatial index.</p>
</div>
</li>
</ol>
<div class="section">
<p>See also <a href="basic-georaster-operations.htm#GUID-2512A66C-3558-4374-95AB-5A090D99EA78">Special Considerations if the GeoRaster Table Has a Spatial Index</a> for special considerations if the GeoRaster table already has a spatial index. For more information about creating spatial indexes and about advanced capabilities, see <a class="olink SPATL" target="_blank" href="../SPATL/toc.htm"><span class="italic">Oracle Spatial and Graph Developer&#39;s Guide</span></a>.</p>
<p>You can also create one or more other indexes, such as:</p>
<ul style="list-style-type: disc;">
<li>
<p>Function-based indexes on metadata objects using the Oracle XMLType or Oracle Text document indexing functionality</p>
</li>
<li>
<p>Standard indexes on other user-defined columns of the GeoRaster table, such as cloud coverage, water coverage, or vegetation</p>
</li>
</ul>
<p>You should also create a single B-tree index on the <code class="codeph">rasterId</code>, <code class="codeph">pyramidLevel</code>, <code class="codeph">bandBlockNumber</code>, <code class="codeph">rowBlockNumber</code>, and <code class="codeph">columnBlockNumber</code> columns of each raster data table. This should be done using <code class="codeph">PRIMARY KEY (rasterID, pyramidLevel, bandBlockNumber,rowBlockNumber, columnBlockNumber)</code>, as shown in <a href="basic-georaster-operations.htm#GUID-9A353A7D-CD42-4692-AFD2-554353919431__CHDEEBGE">Example 3-2</a> and <a href="basic-georaster-operations.htm#GUID-9A353A7D-CD42-4692-AFD2-554353919431__CHDCEIAC">Example 3-3</a>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="GEORS1243"></a>
<div class="props_rev_3"><a id="GUID-13578486-979A-410B-94BB-863DBB4AA7E2"></a>
<h2 id="GEORS-GUID-13578486-979A-410B-94BB-863DBB4AA7E2" class="sect2"><span class="enumeration_section">3.9</span> Querying and Searching GeoRaster Objects</h2>
<div>
<p>GeoRaster tables are regular relational tables that can have various columns, such as an ID number, a name, a timestamp, and a unique description in the form of a string. These columns can be indexed, and GeoRaster objects can be queried using the standard database indexing and query statements, as shown in many examples in this manual.</p>
<p>After the GeoRaster tables are spatially indexed (see <a href="basic-georaster-operations.htm#GUID-F31E1BAD-DE81-462E-8103-7A67CF7A8D0E">Indexing GeoRaster Objects</a>), you can quickly query or search GeoRaster objects using a geometry as well. For example, you may want to find all images (maybe hundreds or more) inside a specific region and then generate full pyramids for each image, as in the following example:.</p>
<pre dir="ltr">DECLARE
  type curtype is ref cursor;
  my_cursor curtype;
  stmt varchar2(1000);
  id     number;
  gr    sdo_georaster;
  gm  sdo_geometry;
BEGIN
  -- 1. Define the query area in WGS84 coordinate system
  gm := sdo_geometry(2003, 8307, null,
              sdo_elem_info_array(1,1003,3),
              sdo_ordinate_array(5,6,30,30));
 
  -- 2. Define the query statement on the GeoRaster table (city_images) and column (image)
  stmt := &#39;select id, t.image from city_images t &#39; ||
    &#39;where sdo_inside(t.image.spatialextent, :1)=&#39;&#39;TRUE&#39;&#39;&#39;;
 
  -- 3. Spatially query all images INSIDE the query area 
  --    and generate full pyramids for each of the images
  open my_cursor for stmt using gm;
  loop
    fetch my_cursor into id, gr;
    exit when my_cursor%NOTFOUND;
    sdo_geor.generatePyramid(gr, &#39;resampling=bilinear&#39;);
    execute immediate &#39;update city_images set image=:1
       where id=:2&#39; using gr, id;
    commit;
  end loop;
  close my_cursor;
END;
</pre>
<p>You can also wrap up such blocks into a PL/SQL procedure and store it in the database, then call the stored procedure directly. These features enable you to organize complex processes and automate database administration tasks.</p>
</div>
</div>
<a id="GEORS1000"></a>
<div class="props_rev_3"><a id="GUID-C27E5446-4222-447C-9661-19A5AA8CE9FC"></a>
<h2 id="GEORS-GUID-C27E5446-4222-447C-9661-19A5AA8CE9FC" class="sect2"><span class="enumeration_section">3.10</span> Changing and Optimizing Raster Storage</h2>
<div>
<p>You can change or specify some aspects of the way raster image data is or will be stored: the raster blocking size, cell depth, interleaving type, and other aspects. To make such changes on an existing GeoRaster object, use the <a href="geor_ref.htm#GUID-9C8E8AE6-4C33-4813-B94A-A69C6206E8C4">SDO_GEOR.changeFormatCopy</a> procedure, and specify the desired storage parameter values with the <code class="codeph">storageParam</code> parameter. You can specify storage parameters with most subprograms that load and process a GeoRaster object to create another GeoRaster object. That is, you can specify the output format when you call functions or procedures such as <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a>, <a href="geor_ref.htm#GUID-827C49FA-3759-4EC3-8ED5-A9A4E623EEEB">SDO_GEOR.subset</a>, <a href="geor_ref.htm#GUID-17F61F94-A06C-41F4-A064-9243C8904F31">SDO_GEOR.mosaic</a>, <a href="geor_ref.htm#GUID-9B3FA7F4-E6CA-4FDB-9DF9-EFEC63C19A55">SDO_GEOR.reproject</a>, <a href="geor_ref.htm#GUID-3F7A39BD-67FB-40B7-9143-32FA5DFD9628">SDO_GEOR.scaleCopy</a>, <a href="geor_ref.htm#GUID-859F107A-4D75-4C36-B9FC-690FA202789C">SDO_GEOR.mergeLayers</a>, and <a href="geor_ref.htm#GUID-5C7E6DDA-B9C1-4A67-9C1B-5FA35D2FB7C1">SDO_GEOR.createTemplate</a>.</p>
<p>The <code class="codeph">storageParam</code> parameter for the resulting GeoRaster objects should be based on factors such as the data size, dimension sizes, and application needs, as you determine them. However, the block sizes can also be optimized automatically based on the dimension sizes of the GeoRaster object and the desired output required by users, so that each GeoRaster object uses only minimum padding space but still meets the application requirements.</p>
<p>For more information, see <a href="geor_intro.htm#GUID-4B5901B5-879D-4E5F-BE73-2242F3D7CF9D">Storage Parameters</a>, especially <a href="geor_intro.htm#GUID-4B5901B5-879D-4E5F-BE73-2242F3D7CF9D__CHDHJCBF" title="This 2 column table lists the storageParam Keywords for Raster Data. Column 1 is the keyword. Column 2 explains the keyword.">Table 1-1</a>.</p>
</div>
</div>
<a id="GEORS1001"></a>
<div class="props_rev_3"><a id="GUID-5D4085E6-5A61-4AC1-B386-C7E1ABA63174"></a>
<h2 id="GEORS-GUID-5D4085E6-5A61-4AC1-B386-C7E1ABA63174" class="sect2"><span class="enumeration_section">3.11</span> Copying GeoRaster Objects</h2>
<div>
<div class="section">
<p>To copy a GeoRaster object, you must either copy it into an empty GeoRaster object or overwrite an existing valid GeoRaster object. (Empty GeoRaster objects are explained in <a href="geor_intro.htm#GUID-C4D574D6-340B-49DC-95BD-87FDEB11CE16">Blank and Empty GeoRaster Objects</a>.) To make an identical copy of the source GeoRaster object, use the <a href="geor_ref.htm#GUID-72D93D49-BF98-4AB9-8FEA-C386A1BE1071">SDO_GEOR.copy</a> procedure; to make a copy that includes storage format changes, use the <a href="geor_ref.htm#GUID-9C8E8AE6-4C33-4813-B94A-A69C6206E8C4">SDO_GEOR.changeFormatCopy</a> procedure (see <a href="basic-georaster-operations.htm#GUID-C27E5446-4222-447C-9661-19A5AA8CE9FC">Changing and Optimizing Raster Storage</a>).</p>
<p>To copy a GeoRaster object using an empty GeoRaster object, follow these steps:</p>
<ol>
<li>
<p>Initialize an empty GeoRaster object while inserting it into the destination table, returning the empty GeoRaster object.</p>
</li>
<li>
<p>Use the <a href="geor_ref.htm#GUID-72D93D49-BF98-4AB9-8FEA-C386A1BE1071">SDO_GEOR.copy</a> or <a href="geor_ref.htm#GUID-9C8E8AE6-4C33-4813-B94A-A69C6206E8C4">SDO_GEOR.changeFormatCopy</a> procedure to copy the GeoRaster object into the returned empty GeoRaster object.</p>
</li>
<li>
<p>Use UPDATE statement to update the desired row in the destination table so that its GeoRaster column contains the copied GeoRaster object.</p>
</li>
<li>
<p>When you are ready to commit the transaction, use the COMMIT statement.</p>
</li>
</ol>
<p>For an example of copying using an empty GeoRaster object, see the example for the <a href="geor_ref.htm#GUID-72D93D49-BF98-4AB9-8FEA-C386A1BE1071">SDO_GEOR.copy</a> procedure in <a href="geor_ref.htm#GUID-587A19B6-40FF-4F1C-AC13-556891070C30">SDO_GEOR Package Reference</a>.</p>
<p>To copy a GeoRaster object so that it overwrites (replaces) an existing GeoRaster object, follow these steps:</p>
</div>
<!-- class="section" -->
<ol>
<li><span>Select the existing GeoRaster object for update.</span></li>
<li><span>Use the <a href="geor_ref.htm#GUID-72D93D49-BF98-4AB9-8FEA-C386A1BE1071">SDO_GEOR.copy</a> or <a href="geor_ref.htm#GUID-9C8E8AE6-4C33-4813-B94A-A69C6206E8C4">SDO_GEOR.changeFormatCopy</a> procedure to copy the selected GeoRaster object into either a valid existing GeoRaster object or an empty GeoRaster object.</span></li>
<li><span>Use UPDATE statement to update the desired row in the destination table so that its GeoRaster column contains the copied GeoRaster object.</span></li>
<li><span>When you are ready to commit the transaction, use the COMMIT statement.</span></li>
</ol>
<div class="section">
<p>For an example of copying to replace an existing GeoRaster object and to change its storage format, see the example for the <a href="geor_ref.htm#GUID-9C8E8AE6-4C33-4813-B94A-A69C6206E8C4">SDO_GEOR.changeFormatCopy</a> procedure in <a href="geor_ref.htm#GUID-587A19B6-40FF-4F1C-AC13-556891070C30">SDO_GEOR Package Reference</a>.</p>
<p>Parallel copying and subsetting are supported with the <a href="geor_aggr_ref.htm#GUID-85F23FB6-7F4B-40C4-B023-25DE37FA53BF">SDO_GEOR_AGGR.mosaicSubset</a> procedure. For parallelized copying and change format copying, See <a href="geor_image_proc.htm#GUID-8BA68795-65F7-40A6-AD9C-8E774B527176__CHDIAIBB">Example 5-22</a> in <a href="geor_image_proc.htm#GUID-8BA68795-65F7-40A6-AD9C-8E774B527176">Parallel Compression_ Copying_ Subsetting_ Reprojection_ and Rectification</a>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="GEORS1002"></a>
<div class="props_rev_3"><a id="GUID-DB762BC3-88BA-4716-9F0C-A4DC4AEC624F"></a>
<h2 id="GEORS-GUID-DB762BC3-88BA-4716-9F0C-A4DC4AEC624F" class="sect2"><span class="enumeration_section">3.12</span> Querying and Updating GeoRaster Metadata</h2>
<div>
<p>You can query metadata for a GeoRaster object, and you can update many attributes of the metadata.</p>
<p>You can use many functions, most of whose names start with <span class="italic">get</span>, to query the metadata and ancillary information (for example, <a href="geor_ref.htm#GUID-2063052F-9197-45EC-9E94-2CE3761A9D16">SDO_GEOR.getTotalLayerNumber</a> and <a href="geor_ref.htm#GUID-6BE36C22-6E17-4E96-9928-29EB46869425">SDO_GEOR.hasPseudoColor</a>).</p>
<p>You can use several subprograms, most of whose names start with <span class="italic">set</span>, to update metadata and ancillary data (for example, <a href="geor_ref.htm#GUID-0406AB05-BA9B-4331-8613-B480A9F12C09">SDO_GEOR.setSRS</a> and <a href="geor_ref.htm#GUID-0A226840-C338-4B71-B705-47F7CDD6FC09">SDO_GEOR.setColorMap</a>).</p>
<p>For many of the <span class="italic">get</span> functions, there is a corresponding procedure, whose name starts with <span class="italic">set</span>, to set, modify, or delete the value of a metadata attribute. For most <span class="italic">set</span> procedures, to delete the value of the metadata attribute that the procedure is designed to modify, specify a null value for the attribute. For example, to delete the bin table for a layer of a GeoRaster object, call the <a href="geor_ref.htm#GUID-2D5830C4-DBF6-4338-86B6-0D10EBF5BF23">SDO_GEOR.setBinTable</a> procedure and specify a null <code class="codeph">tableName</code> parameter. However, in most cases you cannot specify a null value for other related attributes. For example, you cannot specify a null <code class="codeph">layerNumber</code> parameter in a call to the <a href="geor_ref.htm#GUID-2D5830C4-DBF6-4338-86B6-0D10EBF5BF23">SDO_GEOR.setBinTable</a> procedure.</p>
<p>Note the following recommendations, requirements, and restrictions:</p>
<ul style="list-style-type: disc;">
<li>
<p>Most GeoRaster metadata can also be retrieved and modified using XMLType methods or XML-specific SQL functions, such as <code class="codeph">extract</code> and <code class="codeph">updateXML</code>. However, if a GeoRaster <span class="italic">get</span> or <span class="italic">set</span> subprogram exists for the metadata attribute you want to retrieve or change, use the GeoRaster subprogram instead of an XMLType interface, because the GeoRaster subprograms validate any changes before they are made. If you do call XMLType methods or XML-specific SQL functions to update metadata, you should validate the GeoRaster object before you commit the transaction.</p>
</li>
<li>
<p>Never directly set the metadata to be null.</p>
</li>
<li>
<p>Do not directly update the rasterType attribute of a GeoRaster object; instead, call the <a href="geor_ref.htm#GUID-E04962DA-2B64-4FF0-9DFC-C498A761A8A8">SDO_GEOR.setRasterType</a> procedure.</p>
</li>
<li>
<p>To change the raster data table name, use the <a href="geor_util_ref.htm#GUID-9B5168A6-2624-4E80-B8C8-DC4815B94E36">SDO_GEOR_UTL.renameRDT</a> procedure.</p>
</li>
<li>
<p>In general, you should not directly update the attributes of a GeoRaster object, except for the <code class="codeph">spatialExtent</code> attribute.</p>
</li>
<li>
<p>After updating a GeoRaster object&#39;s metadata or cell data (or both) and before you commit a database transaction, you should call the SQL UPDATE statement to update the GeoRaster object (see <a href="basic-georaster-operations.htm#GUID-7AB60C10-E48E-4281-A03A-DA38FFA9F121">Updating GeoRaster Objects Before Committing</a>).</p>
</li>
</ul>
</div>
</div>
<a id="GEORS1003"></a>
<div class="props_rev_3"><a id="GUID-D78B30EA-E592-4D34-94AC-AB2B1435D60E"></a>
<h2 id="GEORS-GUID-D78B30EA-E592-4D34-94AC-AB2B1435D60E" class="sect2"><span class="enumeration_section">3.13</span> Querying and Updating GeoRaster Cell Data</h2>
<div>
<p>To query cell (pixel) data of a GeoRaster object for processing and visualization, you can query the raster data for a cell (pixel), a range of cells, or the entire raster of a GeoRaster object:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="geor_ref.htm#GUID-1E61D84B-F431-4532-B16E-E005596D4DAC">SDO_GEOR.getCellValue</a> returns cell values of one or multiple layers or bands for a specified location.</p>
</li>
<li>
<p><a href="geor_ref.htm#GUID-3997A37D-60FD-4F24-A9D0-F90E9BCCC523">SDO_GEOR.evaluateDouble</a> evaluates a direct location based on neighboring cell values by using a specified interpolation method, and returns the raster values (double precision numbers) for the specified bands or layers for that location. (See <a href="basic-georaster-operations.htm#GUID-8C2E91C6-54EF-4285-9B6F-83002E347B3E">Interpolating Cell Values</a> for more information.)</p>
</li>
<li>
<p><a href="geor_ref.htm#GUID-CC66F0CA-96A9-4C4F-AB94-AEB5FE53C83D">SDO_GEOR.getRasterSubset</a> creates a single BLOB object containing all cells of a precise subset of the GeoRaster object (as specified by a rectangular window or a clipping polygon geometry, layer or band numbers, and pyramid level). This BLOB object contains only raster cells and no related metadata.</p>
</li>
<li>
<p><a href="geor_ref.htm#GUID-4C357F31-6844-4CF2-BB86-E49A15F40522">SDO_GEOR.getRasterData</a> creates a single BLOB object containing all cells of the GeoRaster object at a specified pyramid level. This BLOB object contains only raster cells and no related metadata.</p>
</li>
<li>
<p><a href="geor_ref.htm#GUID-684DC2C4-0F25-4EC8-A18C-8E1985A172E9">SDO_GEOR.getRasterBlocks</a> returns an object that includes all image data inside or touching a specified window. Specifically, it returns an object of the SDO_RASTERSET collection type that identifies all blocks of a specified pyramid level that are inside or touch a specified window.</p>
</li>
<li>
<p><a href="geor_ref.htm#GUID-9B3FA7F4-E6CA-4FDB-9DF9-EFEC63C19A55">SDO_GEOR.reproject</a> not only transforms a whole GeoRaster object from one projected coordinate system to another, but can also include the same capability as <a href="geor_ref.htm#GUID-CC66F0CA-96A9-4C4F-AB94-AEB5FE53C83D">SDO_GEOR.getRasterSubset</a> by directly transforming the query result (a single BLOB) into a different coordinate system on-the-fly.</p>
</li>
<li>
<p><a href="geor_ref.htm#GUID-FAC58FA1-3707-498F-BC69-7D36C17BDFA1">SDO_GEOR.rectify</a> performs reprojection, rectification, or orthorectification on all or part of a georeferenced GeoRaster object based on a query window. The resulting object can be a new GeoRaster object (for persistent storage) or a BLOB (for temporary use).</p>
</li>
<li>
<p><a href="geor_ra_ref.htm#GUID-67FDA0FA-D055-4821-964F-600660861A72">SDO_GEOR_RA.findCells</a> generates a new GeoRaster object based on the cell values using the GeoRaster Raster Algebra language. (See <a href="geor_raster_algebra.htm#GUID-FF9C7591-6CCB-41B2-941D-7998F94B8FE9">Cell Value-Based Conditional Queries</a> for more information.)</p>
</li>
<li>
<p><a href="geor_aggr_ref.htm#GUID-85F23FB6-7F4B-40C4-B023-25DE37FA53BF">SDO_GEOR_AGGR.mosaicSubset</a> mosaics a number of GeoRaster objects into one GeoRaster object.</p>
</li>
<li>
<p><a href="geor_aggr_ref.htm#GUID-89303715-7E1A-46B9-8CDE-0228C48388D7">SDO_GEOR_AGGR.getMosaicSubset</a> lets you query a virtual mosaic and returns a mosaicked subset on-the-fly.</p>
</li>
</ul>
<p>You can also use the <a href="geor_ref.htm#GUID-6261233E-5E90-479C-97FD-8125C28EC838">SDO_GEOR.exportTo</a> procedure to export all or part of a raster image to a BLOB object (binary image format) or to a file of a specified file format type.</p>
<p>There are two types of raster updates: space-based and cell value-based</p>
<ul style="list-style-type: disc;">
<li>
<p>Space-based raster update allows you update a GeoRaster object&#39;s raster data inside a specified window entirely using either a single value or another GeoRaster object.</p>
<p>To update or change the value of raster cells in a specified window to a single value, you can use the <a href="geor_ref.htm#GUID-7F2859CD-4A33-4711-A926-5CFA405C7551">SDO_GEOR.changeCellValue</a> procedure. You can call the <a href="geor_ref.htm#GUID-ED3D72BF-B5C4-46B1-832C-287BF7696B3E">SDO_GEOR.updateRaster</a> procedure to update a specified pyramid of a specified area, or the overlapping parts of one GeoRaster object, with a specified pyramid and specified bands or layers of another GeoRaster object. Both the <a href="geor_ref.htm#GUID-7F2859CD-4A33-4711-A926-5CFA405C7551">SDO_GEOR.changeCellValue</a> and the <a href="geor_ref.htm#GUID-ED3D72BF-B5C4-46B1-832C-287BF7696B3E">SDO_GEOR.updateRaster</a> procedures support all pyramid levels, including the original raster data (that is, pyramid level 0).</p>
<p>The <a href="geor_aggr_ref.htm#GUID-D47B17BE-79C2-4610-B75A-D03182FD40FB">SDO_GEOR_AGGR.append</a> procedure can also be used to update an existing image with a new image (see <a href="geor_image_proc.htm#GUID-EE1AFE0D-730E-49DC-80AF-E99504D14156">Image Appending</a>).</p>
</li>
<li>
<p>Cell value-based raster update allows you update a GeoRaster object&#39;s raster data based on the cell values using the GeoRaster Raster Algebra language.</p>
<p><a href="geor_ra_ref.htm#GUID-7F1A50AC-9595-4AC3-83E3-D7233C9FAF2E">SDO_GEOR_RA.rasterUpdate</a> selects cells from the specified GeoRaster object based on Boolean strings specified in the <code class="codeph">conditions</code> parameter, and updates corresponding cell values by calculating expression strings specified in the <code class="codeph">vals</code> parameter. Both the <code class="codeph">conditions</code> and <code class="codeph">vals</code> parameters can be complicated expressions using the raster algebra language. (See <a href="geor_raster_algebra.htm#GUID-0AEAF37F-6147-4CC7-9573-929B1EF6B44F">Cell Value-Based Conditional Updates (Edits)</a> for more information.)</p>
</li>
</ul>
<p>If statistics are already set in the GeoRaster object when you perform space-based or raster cell value-based updates, the statistics are not removed or updated automatically after you run the raster update procedures. If necessary, you should remove or regenerate the statistics.</p>
<div class="infobox-note" id="GUID-D78B30EA-E592-4D34-94AC-AB2B1435D60E__GUID-B2B388D0-6C32-4AF5-B4A0-3432DB0214E2">
<p class="notep1">Note:</p>
<p>If you use any procedure that adds or overwrites data in the input GeoRaster object, you should make a copy of the original GeoRaster object and use the procedure on the copied object. After you are satisfied with the result of the procedure, you can discard the original GeoRaster object if you wish.</p>
</div>
<p>If you want to change the raster data table name, the attributes of a GeoRaster object, or any other metadata, see the recommendations, requirements, and restrictions noted in <a href="basic-georaster-operations.htm#GUID-DB762BC3-88BA-4716-9F0C-A4DC4AEC624F">Querying and Updating GeoRaster Metadata</a>.</p>
<p>After updating a GeoRaster object&#39;s metadata or cell data (or both) and before you commit a database transaction, you should call the SQL UPDATE statement to update the GeoRaster object (see <a href="basic-georaster-operations.htm#GUID-7AB60C10-E48E-4281-A03A-DA38FFA9F121">Updating GeoRaster Objects Before Committing</a>).</p>
</div>
</div>
<a id="GEORS1244"></a>
<div class="props_rev_3"><a id="GUID-8C2E91C6-54EF-4285-9B6F-83002E347B3E"></a>
<h2 id="GEORS-GUID-8C2E91C6-54EF-4285-9B6F-83002E347B3E" class="sect2"><span class="enumeration_section">3.14</span> Interpolating Cell Values</h2>
<div>
<p>GeoRaster objects are grid coverages. The &#34;evaluate&#34; operation of a grid coverage is also called <span class="bold">grid interpolation</span>, a method for interpolating cell values at point positions between the cells or within the cells. This operation in GeoRaster is performed by the <a href="geor_ref.htm#GUID-3997A37D-60FD-4F24-A9D0-F90E9BCCC523">SDO_GEOR.evaluateDouble</a> function, which evaluates any point in the raster and returns a double number value for that location. You can use any one of the six different interpolation methods (listed in <a href="geor_intro.htm#GUID-3BD837FF-70CF-44B3-8489-242FF4590D61">Resampling and Interpolation</a>) to do the evaluation. For example, if a georaster object is a DEM layer, you can find out the elevation of a random point location, using the following example:</p>
<pre dir="ltr">SELECT SDO_GEOR.evaluateDouble(a.georaster, 0, 
    SDO_GEOMETRY(2001, 8307, SDO_POINT_TYPE(112.704, 41.917, NULL),
                 NULL, NULL),
    &#39;1&#39;, 
    &#39;interpolationMethod=BILINEAR&#39;) 
  FROM georaster_table a WHERE raster_name=&#39;myDEM&#39;;
</pre>
<p>If you call <a href="geor_ref.htm#GUID-3997A37D-60FD-4F24-A9D0-F90E9BCCC523">SDO_GEOR.evaluateDouble</a> with <code class="codeph">&#39;interpolationMethod=NN&#39;</code>, the GeoRaster object is treated as a discrete raster and the preceding is the same as calling <a href="geor_ref.htm#GUID-1E61D84B-F431-4532-B16E-E005596D4DAC">SDO_GEOR.getCellValue</a>, which gives you the same value (that is, the cell value) at a different point location inside a cell. In this case, you can directly call <a href="geor_ref.htm#GUID-1E61D84B-F431-4532-B16E-E005596D4DAC">SDO_GEOR.getCellValue</a> instead, particularly when you query only the cell values of a single band. Other interpolation methods treat the raster as a continuous surface and may give you different values at different point locations inside a cell.</p>
</div>
</div>
<a id="GEORS1004"></a>
<div class="props_rev_3"><a id="GUID-D5389E0F-A151-4476-8EA6-DCA329FEFB31"></a>
<h2 id="GEORS-GUID-D5389E0F-A151-4476-8EA6-DCA329FEFB31" class="sect2"><span class="enumeration_section">3.15</span> Processing and Analyzing GeoRaster Objects</h2>
<div>
<p>You can perform a variety of raster and image processing operations on GeoRaster data, including changing the internal raster storage format, subsetting (cropping), scaling, masking, stretching, reprojecting (from one coordinate system to another), rectifying, orthorectifying, mosaicking, appending, and generating pyramids. GeoRaster also supports virtual mosaic. Some relevant subprograms are <a href="geor_ref.htm#GUID-9C8E8AE6-4C33-4813-B94A-A69C6206E8C4">SDO_GEOR.changeFormatCopy</a>, <a href="geor_ref.htm#GUID-827C49FA-3759-4EC3-8ED5-A9A4E623EEEB">SDO_GEOR.subset</a>, <a href="geor_ref.htm#GUID-9B3FA7F4-E6CA-4FDB-9DF9-EFEC63C19A55">SDO_GEOR.reproject</a>, <a href="geor_ref.htm#GUID-FAC58FA1-3707-498F-BC69-7D36C17BDFA1">SDO_GEOR.rectify</a>, <a href="geor_ref.htm#GUID-896CB187-FAC1-4A2C-9921-B98AC4E92F3B">SDO_GEOR.generatePyramid</a>, <a href="geor_ref.htm#GUID-351B293B-CE47-45E0-92F0-DC7A52D84FDF">SDO_GEOR.deletePyramid</a>, <a href="geor_ref.htm#GUID-3F7A39BD-67FB-40B7-9143-32FA5DFD9628">SDO_GEOR.scaleCopy</a>, <a href="geor_ref.htm#GUID-859F107A-4D75-4C36-B9FC-690FA202789C">SDO_GEOR.mergeLayers</a>, <a href="geor_aggr_ref.htm#GUID-85F23FB6-7F4B-40C4-B023-25DE37FA53BF">SDO_GEOR_AGGR.mosaicSubset</a>, <a href="geor_aggr_ref.htm#GUID-89303715-7E1A-46B9-8CDE-0228C48388D7">SDO_GEOR_AGGR.getMosaicSubset</a>, and <a href="geor_aggr_ref.htm#GUID-D47B17BE-79C2-4610-B75A-D03182FD40FB">SDO_GEOR_AGGR.append</a>. For detailed descriptions, see <a href="geor_image_proc.htm#GUID-EB60166B-6A52-4974-AF16-139CD6480EBC">Image Processing and Virtual Mosaic</a>, <a href="geor_ref.htm#GUID-587A19B6-40FF-4F1C-AC13-556891070C30">SDO_GEOR Package Reference</a>, and <a href="geor_aggr_ref.htm#GUID-92406947-E079-487D-B0D0-3342ECC23E34">SDO_GEOR_AGGR Package Reference</a>.</p>
<p>For raster cell value-based algebraic operations and cartographic modeling and analysis, GeoRaster supports a raster algebra language (PL/SQL and Algebraic Expressions) and related raster operations, including conditional queries (<a href="geor_ra_ref.htm#GUID-67FDA0FA-D055-4821-964F-600660861A72">SDO_GEOR_RA.findCells</a>), cell value-based updates or edits (<a href="geor_ra_ref.htm#GUID-7F1A50AC-9595-4AC3-83E3-D7233C9FAF2E">SDO_GEOR_RA.rasterUpdate</a>), mathematical operations (<a href="geor_ra_ref.htm#GUID-BB7A762E-E615-43AD-9D74-5E917D29F333">SDO_GEOR_RA.rasterMathOp</a>), and image and raster segmentation (<a href="geor_ra_ref.htm#GUID-D9DA6608-7D97-4428-B1B2-002C371846E9">SDO_GEOR_RA.classify</a>). The <a href="geor_ref.htm#GUID-96B2E47F-17E2-491D-9FF6-AC7BEFB434D7">SDO_GEOR.generateStatistics</a> function supports polygon-based statistics and histogram generation. The following on-the-fly functions support interactive statistical analysis of a GeoRaster object or its layers: <a href="geor_ref.htm#GUID-FD88A636-A97B-456E-A07A-DE2D6AE54545">SDO_GEOR.generateStatisticsMax</a>, <a href="geor_ref.htm#GUID-CE118FEB-6F5D-4B42-9D95-2989355D7222">SDO_GEOR.generateStatisticsMean</a>, <a href="geor_ref.htm#GUID-5726F33E-CDE7-4793-9973-B0F779E629E8">SDO_GEOR.generateStatisticsMedian</a>, <a href="geor_ref.htm#GUID-963EB183-C710-471B-A1DA-9665D93FE2DC">SDO_GEOR.generateStatisticsMin</a>, <a href="geor_ref.htm#GUID-D36B7F54-FEF4-4111-AF3F-99A193BEC0D9">SDO_GEOR.generateStatisticsMode</a>, and <a href="geor_ref.htm#GUID-453A78AC-CCDB-4E87-9A67-7C2C113B1C57">SDO_GEOR.generateStatisticsSTD</a>. For detailed descriptions, see <a href="geor_raster_algebra.htm#GUID-C75744C9-FA04-4391-96F2-59EF2EA212FF">Raster Algebra and Analytics</a> and <a href="geor_ra_ref.htm#GUID-7E8EC42B-D663-49EF-B6D8-158A0EC10333">SDO_GEOR_RA Package Reference</a>.</p>
<p>See also the GeoRaster PL/SQL demo files, described in <a href="geor_intro.htm#GUID-0B5D0180-E897-4F30-9E65-65D827024A95">GeoRaster PL/SQL and Java Demo Files</a>, for examples and explanatory comments.</p>
</div>
</div>
<a id="GEORS1245"></a>
<div class="props_rev_3"><a id="GUID-AA00D7EE-B6ED-4A42-9475-F353CB5989AC"></a>
<h2 id="GEORS-GUID-AA00D7EE-B6ED-4A42-9475-F353CB5989AC" class="sect2"><span class="enumeration_section">3.16</span> Monitoring and Reporting GeoRaster Operation Progress</h2>
<div>
<div class="section">
<p>GeoRaster lets you monitor and report the execution progress of many operations (listed in <a href="geor_intro.htm#GUID-B57F4783-7F39-4AC2-AB95-02984E3C44E9">Reporting Operation Progress in GeoRaster</a>). The following are the basic steps for reporting the progress of an operation:</p>
<ol>
<li>
<p>Use the <a href="geor_util_ref.htm#GUID-E35FA2E9-24FD-455B-B53F-B42DDDD3D71C">SDO_GEOR_UTL.createReportTable</a> procedure to create the report table under the appropriate user&#39;s schema. (This must be called once before you can monitor any operations.)</p>
<pre dir="ltr">EXECUTE SDO_GEOR_UTL.createReportTable;
</pre></li>
<li>
<p>In the user session where the operations are to be executed and monitored, perform the following actions:</p>
<ol>
<li>
<p>Use <a href="geor_util_ref.htm#GUID-15481B20-58FD-47D8-A97D-65F8F1FE287D">SDO_GEOR_UTL.enableReport</a> to enable the monitoring. (You must call this procedure in order to be able to get the status report later.)</p>
<pre dir="ltr">EXECUTE SDO_GEOR_UTL.enableReport;
</pre></li>
<li>
<p>Optionally, use <a href="geor_util_ref.htm#GUID-C0CB06F5-4A64-436E-99D3-C9F48C759585">SDO_GEOR_UTL.setClientID</a> to set the client ID. The client ID is used to identify the user session that executes the operation. If this procedure is not called, the client ID defaults to the SQL session ID. For example:</p>
<pre dir="ltr">EXECUTE SDO_GEOR_UTL.setClientID(100);
</pre></li>
<li>
<p>Optionally, use <a href="geor_util_ref.htm#GUID-1E056015-616E-4D1D-8524-248A6E60CEE9">SDO_GEOR_UTL.setSeqID</a> to set the sequence ID. The sequence ID is used to identify the repeated operations in the same SQL session. If this procedure is not called, the sequence ID defaults to 0. For example:</p>
<pre dir="ltr">EXECUTE SDO_GEOR_UTL.setSeqID(1);
</pre></li>
<li>
<p>Execute the operation to be monitored. For example:</p>
<pre dir="ltr">-- Generate pyramid for georid=6. The progress of this generatePyramid call 
-- can be monitored by step 3.
DECLARE
  gr sdo_georaster;
BEGIN
   SELECT georaster INTO gr 
    FROM georaster_table WHERE georid = 6 FOR UPDATE;
  sdo_geor.generatePyramid(gr, &#39;rLevel=5, resampling=NN&#39;);
  UPDATE georaster_table SET georaster = gr WHERE georid = 6;
   COMMIT;
END;
/
</pre></li>
<li>
<p>Optionally, repeat steps c and d for each additional operation to be monitored. For example:</p>
<pre dir="ltr">EXECUTE SDO_GEOR_UTL.setSeqID(2);
-- Generate pyramid for georid=7. The progress of this generatePyramid call
-- can be monitored by step 3.
DECLARE
  gr sdo_georaster;
BEGIN
   SELECT georaster INTO gr 
    FROM georaster_table WHERE georid = 7 FOR UPDATE;
  sdo_geor.generatePyramid(gr, &#39;rLevel=5, resampling=NN&#39;);
  UPDATE georaster_table SET georaster = gr WHERE georid = 7;
   COMMIT;
END;
/
</pre></li>
<li>
<p>Optionally, use <a href="geor_util_ref.htm#GUID-7102EF4A-0279-4079-83FB-1B8EFE8C3A12">SDO_GEOR_UTL.disableReport</a> to disable the monitoring. If this procedure is not called, the monitoring is automatically stopped when the user session ends.</p>
<pre dir="ltr">EXECUTE SDO_GEOR_UTL.disableReport;
</pre></li>
</ol>
</li>
<li>
<p>From another session under the same user, retrieve the execution status report.</p>
<p>To get the progress of a specific operation identified by client ID and sequence ID, use the <a href="geor_util_ref.htm#GUID-34284A54-1792-4845-8F27-078AAE159413">SDO_GEOR_UTL.getProgress</a> function. This function returns the progress as a number between 0 and 1 reflecting the percentage of completion. For example, the following query shows that the operation if 55% complete:</p>
<pre dir="ltr">SELECT sdo_geor_utl.getProgress(100, 2) progress FROM DUAL;
 
PROGRESS
--------
    0.55
 
1 row selected.
</pre>
<p>To get the status report of a specific operation identified by client ID and sequence ID, use the <a href="geor_util_ref.htm#GUID-7AC9801F-D891-4A9B-9BD9-87D273C7DC6F">SDO_GEOR_UTL.getStatusReport</a> function. This function returns an array of strings describing the progress and other information about the operation. For example:</p>
<pre dir="ltr">-- Check the status of the generatePyramid on georid=6
SELECT sdo_geor_utl.getStatusReport(100, 1) FROM DUAL;
SDO_GEOR_UTL.GETSTATUSREPORT(100,1)
-----------------------------------------------------------------------------
SDO_STRING2_ARRAY(&#39;31-OCT-11 02.20.04.854558 PM&#39;, &#39;GeneratePyramid&#39;, &#39;RDT:RDT_1&#39;, &#39;RID:6&#39;, &#39;100% complete&#39;, &#39;operation completed&#39;)
 
1 row selected.

-- Check the status of the generatePyramid on georid=7
SELECT sdo_geor_utl.getStatusReport(100, 2) FROM DUAL;
 
SDO_GEOR_UTL.GETSTATUSREPORT(100,2)
-----------------------------------------------------------------------------
SDO_STRING2_ARRAY(&#39;31-OCT-11 02.20.08.854558 PM&#39;, &#39;GeneratePyramid&#39;, &#39;RDT:RDT_1&#39;, &#39;RID:7&#39;, &#39;55% complete&#39;, &#39;operation completed&#39;)
 
1 row selected.
</pre>
<p>To get the status of all the monitored operations, enter the following statement:</p>
<pre dir="ltr">SELECT * from the (select sdo_geor_utl.getAllStatusReport() FROM DUAL); 
COLUMN_VALUE
------------------------------------------------------------------------------
SDO_STRING2_ARRAY(&#39;Client:100&#39;, &#39;Sequence:1&#39;, &#39;31-OCT-11 02.20.04.854558 PM&#39;, &#39;GeneratePyramid&#39;, &#39;RDT:RDT_1&#39;, &#39;RID:6&#39;, &#39;100% complete&#39;, &#39;operation completed&#39;)
SDO_STRING2_ARRAY(&#39;Client:100&#39;, &#39;Sequence:2&#39;, &#39;31-OCT-11 02.20.08.854558 PM&#39;, &#39;GeneratePyramid&#39;, &#39;RDT:RDT_1&#39;, &#39;RID:7&#39;, &#39;55% complete&#39;, NULL)
 
2 rows selected.
</pre></li>
</ol>
<p>If you need to clear or drop the report table, use the <a href="geor_util_ref.htm#GUID-DC1098B1-94FF-4150-9BBF-13E30CE34F15">SDO_GEOR_UTL.clearReportTable</a> or <a href="geor_util_ref.htm#GUID-E4389281-1803-4FB7-A61C-42D0CD4105FC">SDO_GEOR_UTL.dropReportTable</a> procedure, respectively:</p>
<pre dir="ltr">EXECUTE SDO_GEOR_UTL.clearReportTable;
-- or:
EXECUTE SDO_GEOR_UTL.dropReportTable;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="GEORS1005"></a>
<div class="props_rev_3"><a id="GUID-900D8B54-15B7-4044-AF7F-7BC6854535FE"></a>
<h2 id="GEORS-GUID-900D8B54-15B7-4044-AF7F-7BC6854535FE" class="sect2"><span class="enumeration_section">3.17</span> Compressing and Decompressing GeoRaster Objects</h2>
<div>
<p>You can reduce the storage space requirements for GeoRaster objects by compressing them using JPEG-F or DEFLATE compression. You can decompress any compressed GeoRaster object, although this is not required for any GeoRaster operations, because any GeoRaster operation that can be performed on an uncompressed (decompressed) GeoRaster object can be performed on a compressed GeoRaster object.</p>
<p>To compress or decompress a GeoRaster object, use the compression keyword in the <code class="codeph">storageParam</code> parameter with the <a href="geor_ref.htm#GUID-9C8E8AE6-4C33-4813-B94A-A69C6206E8C4">SDO_GEOR.changeFormatCopy</a> procedure, or with several other procedures that load and process a GeoRaster object to create another GeoRaster object, including <a href="geor_ref.htm#GUID-07B69D26-239F-4C52-A2D2-E776B2BABF8B">SDO_GEOR.importFrom</a>, <a href="geor_ref.htm#GUID-17F61F94-A06C-41F4-A064-9243C8904F31">SDO_GEOR.mosaic</a>, <a href="geor_ref.htm#GUID-3F7A39BD-67FB-40B7-9143-32FA5DFD9628">SDO_GEOR.scaleCopy</a>, <a href="geor_ref.htm#GUID-827C49FA-3759-4EC3-8ED5-A9A4E623EEEB">SDO_GEOR.subset</a>, and <a href="geor_aggr_ref.htm#GUID-85F23FB6-7F4B-40C4-B023-25DE37FA53BF">SDO_GEOR_AGGR.mosaicSubset</a>. (There are no separate procedures for compressing and decompressing a GeoRaster object.)</p>
<p>For more information about GeoRaster compression and decompression, see <a href="geor_intro.htm#GUID-9BEA34A1-E05E-4E70-B09D-97A0EF1027B8">Compression and Decompression</a>, including information about support for third-party compression solutions in <a href="geor_intro.htm#GUID-D2F21C14-DC30-49A9-A5AD-6220412F9A81">Third-Party Plug-ins for Compression</a>.</p>
<p>In addition, when compression is used with GeoRaster objects, some special usage considerations apply:</p>
<ul style="list-style-type: disc;">
<li>
<p>If a large GeoRaster object is to be compressed and will have full pyramids built on it, it is faster to generate pyramids on the uncompressed GeoRaster object first, then apply compression.</p>
</li>
<li>
<p>For large scale mosaicking, it is faster to mosaic without applying compression first, then generate pyramids, then apply compression.</p>
</li>
<li>
<p>In some operations, GeoRaster uses temporary tablespaces to compress and decompress data, so adding temporary tablespaces for GeoRaster users is essential for performance (see <a href="basic-georaster-operations.htm#GUID-2162EF15-706C-43D2-B2BF-AAD219D8CB88">Adding Temporary Tablespaces for GeoRaster Users</a>).</p>
</li>
</ul>
<p>Parallel compression and decompression are supported with the <a href="geor_aggr_ref.htm#GUID-85F23FB6-7F4B-40C4-B023-25DE37FA53BF">SDO_GEOR_AGGR.mosaicSubset</a> procedure. Parallel compression and decompression significantly improve performance, which is especially useful for large images. See <a href="geor_image_proc.htm#GUID-8BA68795-65F7-40A6-AD9C-8E774B527176__CHDEDHCE">Example 5-21</a> in <a href="geor_image_proc.htm#GUID-8BA68795-65F7-40A6-AD9C-8E774B527176">Parallel Compression_ Copying_ Subsetting_ Reprojection_ and Rectification</a>.</p>
<p>If you want to store compressed GeoRaster objects, make sure you create a temporary tablespace for the users. For more information, see <a href="basic-georaster-operations.htm#GUID-2162EF15-706C-43D2-B2BF-AAD219D8CB88">Adding Temporary Tablespaces for GeoRaster Users</a>.</p>
</div>
</div>
<a id="GEORS1246"></a>
<div class="props_rev_3"><a id="GUID-3FE51533-061E-4A2F-BB3E-49A723FE3553"></a>
<h2 id="GEORS-GUID-3FE51533-061E-4A2F-BB3E-49A723FE3553" class="sect2"><span class="enumeration_section">3.18</span> Deleting GeoRaster Objects, and Dropping GeoRaster Tables and RDTs</h2>
<div>
<p>GeoRaster automatically maintains the GeoRaster metadata and the relationship between GeoRaster tables and raster data tables (RDTs). Therefore, for most operations you can use the relevant traditional SQL statement.</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">To delete a GeoRaster object</span>, delete the row containing the object using the DELETE statement (for example, <code class="codeph">DELETE FROM geor_table WHERE ...;</code>).</p>
<p>After a GeoRaster object is deleted from a GeoRaster table, all related raster data stored in the RDT is deleted automatically. Never insert or delete any rows directly in a raster data table.</p>
</li>
<li>
<p><span class="bold">To drop a GeoRaster table</span>, use the DROP statement (for example, <code class="codeph">DROP geor_table;</code>).</p>
<p>After a GeoRaster table is dropped, all raster data associated with GeoRaster objects in the deleted GeoRaster table is deleted automatically.</p>
</li>
<li>
<p><span class="bold">To drop an RDT</span>, you must first delete all GeoRaster objects that reference the RDT, after which you can use the DROP statement on the RDT.</p>
<p>If you do not delete all GeoRaster objects that reference the RDT before attempting to drop the RDT, an exception is raised.</p>
<div class="infobox-note" id="GUID-3FE51533-061E-4A2F-BB3E-49A723FE3553__GUID-27B141AE-B2A4-4412-A83E-105056E7A704">
<p class="notep1">Note:</p>
<p><span class="bold">To rename an RDT</span>, use the <a href="geor_util_ref.htm#GUID-9B5168A6-2624-4E80-B8C8-DC4815B94E36">SDO_GEOR_UTL.renameRDT</a> procedure.</p>
</div>
</li>
</ul>
</div>
</div>
<a id="GEORS1006"></a>
<div class="props_rev_3"><a id="GUID-C65D9E81-48AA-4569-B8E3-2A52263B2435"></a>
<h2 id="GEORS-GUID-C65D9E81-48AA-4569-B8E3-2A52263B2435" class="sect2"><span class="enumeration_section">3.19</span> Viewing GeoRaster Objects</h2>
<div>
<p>To view GeoRaster objects, you have the following options:</p>
<ul style="list-style-type: disc;">
<li>
<p>Call the <a href="geor_ref.htm#GUID-6261233E-5E90-479C-97FD-8125C28EC838">SDO_GEOR.exportTo</a> procedure to export GeoRaster objects to image files, and then display the images using image tools or a Web browser.</p>
</li>
<li>
<p>Use the standalone GeoRaster viewer tool (one of the tools described in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>).</p>
</li>
<li>
<p>Use Oracle Fusion Middleware MapViewer or its associated Map Builder utility.</p>
</li>
</ul>
<p>With the GeoRaster viewer tool, you can select a GeoRaster object of a database schema (user), query and display the whole or a subset of a GeoRaster object, zoom in and zoom out, scroll, and perform other basic operations. The pyramid level, cell coordinates, and model coordinates (if the object is georeferenced) are displayed for the point at the mouse pointer location. You can display individual cell values and choose different layers of a multiband or hyperspectral image for RGB full color display. The blocking boundaries can be overlapped on the top of the display. Depending on the data and your requests, the viewer can display the raster data in grayscale, pseudocolor, and 24-bit true color over an intranet or the Internet. Some of the basic GeoRaster metadata is also displayed.</p>
<p>The GeoRaster viewer tool allows you to display a virtual mosaic defined as one or a list of GeoRaster tables or views.</p>
<p>The GeoRaster viewer tool provides a set of image processing operators for enhanced display of the GeoRaster objects, especially for those whose cell depth is greater than 8 or is a floating-point number. It can also display and apply bitmap masks on the GeoRaster objects if they have bitmap masks.</p>
<p>The GeoRaster viewer tool also includes menu commands to call the GeoRaster loader and exporter tools, thus enabling you to use a single tool as an interface to the capabilities of all the GeoRaster tools.</p>
<p>Visualization applications can leverage the default RGBA and default pyramid level specifications in the GeoRaster objects. You can set up different bands in a multiband image as the default Red, Green, Blue, and Alpha channels by calling <a href="geor_ref.htm#GUID-3E6EA4DC-DEEF-42B7-B296-92FA58515C4D">SDO_GEOR.setDefaultColorLayer</a> or <a href="geor_ref.htm#GUID-70FC29B9-588B-47E1-BC48-DE3162C6785E">SDO_GEOR.setDefaultRed</a>, <a href="geor_ref.htm#GUID-0CB5060E-6733-40E0-B6AE-3951378EDC4A">SDO_GEOR.setDefaultGreen</a>, <a href="geor_ref.htm#GUID-45AB9089-BF53-474B-B59C-28AEE5A34C59">SDO_GEOR.setDefaultBlue</a>, and <a href="geor_ref.htm#GUID-9E830C52-D920-4A12-BEB6-73CBCD277CDB">SDO_GEOR.setDefaultAlpha</a>. For large images, you can call <a href="geor_ref.htm#GUID-DAD267E0-410B-493F-92E8-FE7F6EF33B6F">SDO_GEOR.setDefaultPyramidLevel</a> to set up the best resolution (pyramid) level of an image for initial display in the applications. For example, for a complete overview of a whole image, it is best to set the top pyramid level as the default pyramid level.</p>
</div>
</div>
<a id="GEORS1007"></a>
<div class="props_rev_3"><a id="GUID-D45DBC81-B4E5-4D06-B1F2-82339C6F52E2"></a>
<h2 id="GEORS-GUID-D45DBC81-B4E5-4D06-B1F2-82339C6F52E2" class="sect2"><span class="enumeration_section">3.20</span> Exporting GeoRaster Objects</h2>
<div>
<p>To load and export imagery or raster data, always consider third-party ETL tools (see the note in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>)</p>
<p>If you use features in GeoRaster to export GeoRaster objects to image files, you have the following options:</p>
<ul style="list-style-type: disc;">
<li>
<p>Call the <a href="geor_ref.htm#GUID-6261233E-5E90-479C-97FD-8125C28EC838">SDO_GEOR.exportTo</a> procedure (which can export either to a file or to a BLOB object).</p>
</li>
<li>
<p>Use the GeoRaster exporter tool or viewer tool, which are described in <a href="geor_intro.htm#GUID-4813E3BC-2DB8-4310-82E5-3ADC467C0253">GeoRaster Tools: Viewer_ Loader_ Exporter</a>.</p>
</li>
</ul>
</div>
</div>
<a id="GEORS1009"></a><a id="GEORS1008"></a>
<div class="props_rev_3"><a id="GUID-7AB60C10-E48E-4281-A03A-DA38FFA9F121"></a>
<h2 id="GEORS-GUID-7AB60C10-E48E-4281-A03A-DA38FFA9F121" class="sect2"><span class="enumeration_section">3.21</span> Updating GeoRaster Objects Before Committing</h2>
<div>
<p>Before you commit a database transaction that inserts, updates, reformats, compresses, decompresses, or deletes GeoRaster cell data or metadata, you should use the SQL UPDATE statement to update the GeoRaster object. If you do not update the GeoRaster object after changing cell data, one or more of the following can result: an invalid GeoRaster object, dangling raster data, and inconsistent metadata. If you do not update the GeoRaster object after changing GeoRaster metadata, the metadata changes will not take effect.</p>
<p>If you decide to roll back the transaction instead of committing it, an UPDATE statement is not needed.</p>
<p>In <a href="basic-georaster-operations.htm#GUID-7AB60C10-E48E-4281-A03A-DA38FFA9F121__CIHIIFDE">Example 3-4</a>, the UPDATE statement is required after the call to the <a href="geor_ref.htm#GUID-9C8E8AE6-4C33-4813-B94A-A69C6206E8C4">SDO_GEOR.changeFormatCopy</a> procedure and before the COMMIT statement.</p>
<div class="example" id="GUID-7AB60C10-E48E-4281-A03A-DA38FFA9F121__CIHIIFDE">
<p class="titleinexample">Example 3-4 Updating a GeoRaster Object Before Committing</p>
<pre dir="ltr">DECLARE
    gr1 sdo_georaster;
    gr2 sdo_georaster;
BEGIN
    SELECT georaster INTO gr2 from georaster_table WHERE georid=11 FOR UPDATE;
    SELECT georaster INTO gr1 from georaster_table WHERE georid=1;
    sdo_geor.changeFormatCopy(gr1, &#39;blocksize=(2048,2048)&#39;, gr2);
    UPDATE georaster_table SET georaster=gr2 WHERE georid=11;
    COMMIT;
END;
/
</pre></div>
<!-- class="example" --></div>
</div>
<a id="GEORS1010"></a>
<div class="props_rev_3"><a id="GUID-A77AAC5B-B0EE-4F8A-9569-79A14D88658B"></a>
<h2 id="GEORS-GUID-A77AAC5B-B0EE-4F8A-9569-79A14D88658B" class="sect2"><span class="enumeration_section">3.22</span> Using Template-Related Subprograms to Develop GeoRaster Applications</h2>
<div>
<p>The <a href="geor_ref.htm#GUID-5C7E6DDA-B9C1-4A67-9C1B-5FA35D2FB7C1">SDO_GEOR.createTemplate</a> and <a href="geor_ref.htm#GUID-D16DF6A5-7526-4574-8ECE-5D9D08CD6207">SDO_GEOR.getRasterBlockLocator</a> subprograms enable you to develop GeoRaster applications, such as ETL tools and image processing systems that work with GeoRaster objects, by reading and writing GeoRaster metadata and binary raster data without dealing directly with the Oracle XMLType, the GeoRaster XML schema, and Oracle BLOBs.</p>
<p>After you create a new GeoRaster object (explained in <a href="basic-georaster-operations.htm#GUID-A6E26D1A-490F-4D47-B86C-3E4AD707457D">Creating New GeoRaster Objects</a>), you can use the <a href="geor_ref.htm#GUID-5C7E6DDA-B9C1-4A67-9C1B-5FA35D2FB7C1">SDO_GEOR.createTemplate</a> function to populate the metadata of the GeoRaster object with basic information, such as raster type, dimension sizes, ultCoordinates, cell depth, interleaving type, blocking and block size, pyramid resampling method and reducing level, and compression method and quality. This function can optionally populate the raster data table with the correct number of rows and row data consisting of raster blocks containing empty BLOBs.</p>
<p>The XML metadata generated by the <a href="geor_ref.htm#GUID-5C7E6DDA-B9C1-4A67-9C1B-5FA35D2FB7C1">SDO_GEOR.createTemplate</a> function conforms to the GeoRaster metadata schema. You can then use other GeoRaster subprogams to query or update the metadata (see <a href="basic-georaster-operations.htm#GUID-DB762BC3-88BA-4716-9F0C-A4DC4AEC624F">Querying and Updating GeoRaster Metadata</a>).</p>
<p>You can use the <a href="geor_ref.htm#GUID-D16DF6A5-7526-4574-8ECE-5D9D08CD6207">SDO_GEOR.getRasterBlockLocator</a> procedure to get the raster block locator by specifying the pyramid level and block number. If you have the raster block locator, you can then use the OCI or Java JDBC LOB interfaces to read and write the binary raster data. (The <a href="geor_ref.htm#GUID-D16DF6A5-7526-4574-8ECE-5D9D08CD6207">SDO_GEOR.getRasterBlockLocator</a> procedure does not itself read or process LOB data.) To use this approach, you must understand the physical storage of the raster data (explained in <a href="geor_intro.htm#GUID-DB21CC32-06DC-4E18-A4FB-B15C389C1F72">GeoRaster Physical Storage</a>), and you must compress and decompress the data as necessary before reading from or writing to the BLOB.</p>
</div>
</div>
<a id="GEORS1011"></a>
<div class="props_rev_3"><a id="GUID-BBE8942E-96B3-4EBE-ADB9-AA3FC8FFF3DD"></a>
<h2 id="GEORS-GUID-BBE8942E-96B3-4EBE-ADB9-AA3FC8FFF3DD" class="sect2"><span class="enumeration_section">3.23</span> Using GeoRaster with Workspace Manager and Label Security</h2>
<div>
<p>Oracle Workspace Manager provides a versioning capability for the raster blocks of a GeoRaster object. Oracle Label Security supports GeoRaster objects with enhanced security at the row level of raster blocks.</p>
<p>To use GeoRaster with Oracle Workspace Manager or Oracle Label Security, you should create a raster data table (RDT) as a relational table for the GeoRaster objects (see <a href="basic-georaster-operations.htm#GUID-9A353A7D-CD42-4692-AFD2-554353919431__CHDCEIAC">Example 3-3</a>). You do not need to define an object view of SDO_RASTER type on the base relational RDT.</p>
</div>
<a id="GEORS1012"></a>
<div class="props_rev_3"><a id="GUID-A78EEF50-DA67-476E-96C0-F4715620098B"></a>
<h3 id="GEORS-GUID-A78EEF50-DA67-476E-96C0-F4715620098B" class="sect3"><span class="enumeration_section">3.23.1</span> Using GeoRaster with Workspace Manager</h3>
<div>
<p>With Workspace Manager, you can conveniently manage changes to the raster data by saving different raster data versions and making modifications in different workspaces. To use GeoRaster with Workspace Manager, you must use relational raster data tables for raster storage and version-enable these relational raster data tables. For example (general format):</p>
<pre dir="ltr">EXECUTE DBMS_WM.EnableVersioning (&lt;rdt_relational_table&gt;, &#39;VIEW_WO_OVERWRITE&#39;);
</pre>
<div class="infobox-note" id="GUID-A78EEF50-DA67-476E-96C0-F4715620098B__GUID-BAFAA41B-8F5D-4D3C-9165-85202FCE164B">
<p class="notep1">Note:</p>
<p>You can version-enable only raster data tables. Do not version-enable any GeoRaster tables, where GeoRaster objects are stored, and do not perform any operations that will require a GeoRaster table to be modified while you are in a workspace.</p>
</div>
<p>After you version-enable a relational RDT, you can use the subprograms in the DBMS_WM package to manage changes to the raster data. If you need to directly modify a raster block, call the DBMS_WM.copyForUpdate procedure before the operation, as shown in the following example:</p>
<pre dir="ltr">declare
  geor sdo_georaster;
  cond varchar2(1000);
  lb   blob;
  r1   raw(1024);
  amt  number;
begin
  r1 := utl_raw.copies(utl_raw.cast_to_raw(&#39;0&#39;),1024);
 
  select georaster into geor from georaster_table where georid=1;
  cond := &#39;rasterId=&#39; || geor.rasterId || &#39; AND pyramidLevel=0 AND &#39; ||
          &#39; bandBlockNumber=0 AND rowBlockNumber=0 AND columnBlockNumber=0&#39;;
  dbms_wm.copyForUpdate(geor.rasterDataTable, cond);
  sdo_geor.getRasterBlockLocator(geor, 0, 0, 0, 0, lb, null, &#39;TRUE&#39;);
  amt := 1024;
  dbms_lob.write(lb, amt, 1, r1);
end;
/
</pre>
<p>However, if you modify raster data using GeoRaster subprograms, you do <span class="italic">not</span> need to call the DBMS_WM.copyForUpdate procedure beforehand.</p>
<p>For information about Workspace Manager, see <a class="olink ADWSM" target="_blank" href="../ADWSM/toc.htm"><span class="italic">Oracle Database Workspace Manager Developer&#39;s Guide</span></a>.</p>
</div>
</div>
<a id="GEORS1013"></a>
<div class="props_rev_3"><a id="GUID-F33D17DF-B8D8-40CD-8040-44A6F8684B7E"></a>
<h3 id="GEORS-GUID-F33D17DF-B8D8-40CD-8040-44A6F8684B7E" class="sect3"><span class="enumeration_section">3.23.2</span> Using GeoRaster with Label Security</h3>
<div>
<div class="section">
<p>Oracle Label Security provides row-level access control for sensitive data based on a user&#39;s level of security clearance. To use GeoRaster with Label Security, follow these basic steps:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Create the GeoRaster table and relational RDT or RDTs.</span></li>
<li class="stepexpand"><span>Create an Oracle Label Security policy and define the label components.</span></li>
<li class="stepexpand"><span>Create labeling functions for the GeoRaster table and the relational RDT or RDTs.</span>
<div>
<p>The labels for rows in a GeoRaster table should be generated according to the application&#39;s requirements. Use the same label for both the row that stores a GeoRaster object and for the GeoRaster object&#39;s raster rows in the associated RDT; otherwise, the GeoRaster objects might be invalid or have an inconsistent status.</p>
<p>The following example creates the labeling function for a relational RDT:</p>
<pre dir="ltr">CREATE OR REPLACE FUNCTION gen_rdt_label(rdt_name varchar2, rid number)
  RETURN LBACSYS.LBAC_LABEL
AS
  tabname varchar2(80);
  schema  varchar2(32);
  grcol   varchar2(1024);
  colname varchar2(30);
  label   NUMBER;
BEGIN
  EXECUTE IMMEDIATE
   &#39;SELECT v.owner, v.table_name, v.column_name grcol, p.column_name &#39; ||
   &#39;  FROM all_sdo_geor_sysdata v, all_sa_policies p, all_sa_table_policies t &#39;
   || &#39; WHERE v.rdt_table_name=:1 AND v.raster_id=:2 AND &#39; ||
   &#39; v.owner=t.schema_name AND v.table_name=t.table_name AND &#39; ||
   &#39; p.policy_name=t.policy_name &#39; 
   INTO schema, tabname, grcol, colname
   USING upper(rdt_name), rid;
  EXECUTE IMMEDIATE
    &#39;SELECT t.&#39; || colname  ||
     &#39; FROM &#39; || schema || &#39;.&#39; || tabname || &#39; t &#39; ||
     &#39; WHERE t.&#39; || grcol || &#39;.rasterdatatable=:1 AND &#39; ||
     &#39;       t.&#39; || grcol || &#39;.rasterid=:2&#39; 
    INTO label
    USING upper(rdt_name), rid;
  RETURN LBACSYS.LBAC_LABEL.NEW_LBAC_LABEL(label);
END;
/
</pre></div>
</li>
<li class="stepexpand"><span>Apply the Label Security policy to a GeoRaster table and its associated RDT or RDTs.</span>
<div>
<p>The following example (general format) applies a Label Security policy to an RDT using the labeling function example from the preceding step.</p>
<pre dir="ltr">BEGIN
  SA_POLICY_ADMIN.REMOVE_TABLE_POLICY(&lt;policy_name&gt;,&lt;schema_name&gt;,&lt;rdt_relational_table&gt;);
  SA_POLICY_ADMIN.APPLY_TABLE_POLICY(
    POLICY_NAME =&gt; &lt;policy_name&gt;,
    SCHEMA_NAME =&gt; &lt;schema_name&gt;,
    TABLE_NAME  =&gt; &lt;rdt_relational_table&gt;,
    TABLE_OPTIONS =&gt; &#39;READ_CONTROL,WRITE_CONTROL,CHECK_CONTROL&#39;,
    LABEL_FUNCTION =&gt; &#39;&lt;schema_name&gt;.gen_rdt_label(&lt;rdt_relational_table&gt;,:new.rasterid)&#39;,
    PREDICATE =&gt; NULL);
END;
/
</pre></div>
</li>
<li class="stepexpand"><span>Create and authorize users, and complete other administrative tasks related to Label Security.</span></li>
</ol>
<div class="section">
<p>You can load GeoRaster data before or after applying the policy to the tables.</p>
<p>The ALL_SDO_GEOR_SYSDATA view (described in <a href="geor_operations.htm#GUID-657BA65F-E8FF-41D7-94B6-BA412993EC52">GeoRaster System Data Views (xxx_SDO_GEOR_SYSDATA)</a>) contains system data for all GeoRaster objects accessible by the current user, and accessibility in this case is determined by the user&#39;s privileges as defined in the context of discretionary access control (DAC).</p>
<p>After the label for a GeoRaster table row is updated, ensure that the related data labels in the RDT are updated, so that the labels are synchronized.</p>
<p>For information about Label Security, see <a class="olink OLSAG" target="_blank" href="../OLSAG/toc.htm"><span class="italic">Oracle Label Security Administrator&#39;s Guide</span></a>.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="GEORS1015"></a><a id="GEORS1016"></a><a id="GEORS1014"></a>
<div class="props_rev_3"><a id="GUID-CE77309C-2712-4EC0-B92B-B3A0A028EB32"></a>
<h2 id="GEORS-GUID-CE77309C-2712-4EC0-B92B-B3A0A028EB32" class="sect2"><span class="enumeration_section">3.24</span> Maintaining Efficient Tablespace Use by GeoRaster Objects</h2>
<div>
<p>After delete or rollback operations, unused space allocated to a raster data table might not be promptly returned to the underlying tablespace. This could result in wasted tablespace area, and it can be a significant issue if the amount of raster data is large. If the raster data table is created using BasicFiles LOBs in an automatic segment space management tablespace, you can explicitly shrink the <code class="codeph">rasterBlock</code> LOB segment or the raster data table by altering the raster data table, as shown in <a href="basic-georaster-operations.htm#GUID-CE77309C-2712-4EC0-B92B-B3A0A028EB32__CHDCJDDI">Example 3-5</a> and <a href="basic-georaster-operations.htm#GUID-CE77309C-2712-4EC0-B92B-B3A0A028EB32__CHDFHADH">Example 3-6</a>.</p>
<div class="example" id="GUID-CE77309C-2712-4EC0-B92B-B3A0A028EB32__CHDCJDDI">
<p class="titleinexample">Example 3-5 Shrinking a BasicFile RasterBlock LOB Segment</p>
<pre dir="ltr">ALTER TABLE city_images_rdt MODIFY LOB (rasterBlock) (SHRINK SPACE);
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-CE77309C-2712-4EC0-B92B-B3A0A028EB32__CHDFHADH">
<p class="titleinexample">Example 3-6 Shrinking a Raster Data Table</p>
<pre dir="ltr">ALTER TABLE city_images_rdt ENABLE ROW MOVEMENT;
ALTER TABLE city_images_rdt SHRINK SPACE CASCADE;
</pre></div>
<!-- class="example" -->
<p>If you are using SecureFiles, or if you are using BasicFiles allocated in a manual segment space management tablespace, you cannot reclaim unused space using the ALTER TABLE statements as shown in the preceding examples. Instead, you should create some working (for temporary use) raster data tables and try to put any intermittent results in these RDTs, and then drop these working RDTs after they are no longer needed.</p>
</div>
</div>
<a id="GEORS1017"></a>
<div class="props_rev_3"><a id="GUID-14CEA0C1-837D-4DD4-A255-80ECCC28615E"></a>
<h2 id="GEORS-GUID-14CEA0C1-837D-4DD4-A255-80ECCC28615E" class="sect2"><span class="enumeration_section">3.25</span> Maintaining GeoRaster Objects and System Data in the Database</h2>
<div>
<p>Although GeoRaster provides internal database mechanism to prevent the creation of invalid GeoRaster objects and system data, sometimes such GeoRaster objects and system data might exist in the database, especially after an upgrade from a previous release, or after some user errors in operations on GeoRaster system data. Examples of such invalid objects and system data include the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>An entry in the GeoRaster system data views (<span class="italic">xxx</span>_SDO_GEOR_SYSDATA, described in <a href="geor_operations.htm#GUID-657BA65F-E8FF-41D7-94B6-BA412993EC52">GeoRaster System Data Views (xxx_SDO_GEOR_SYSDATA)</a>) refers to a nonexistent GeoRaster table or column.</p>
</li>
<li>
<p>Two or more GeoRaster objects have the same pair of RDT name and raster ID values.</p>
</li>
<li>
<p>Some GeoRaster objects, tables, columns, or RDTs not registered.</p>
</li>
<li>
<p>An RDT name is not unique.</p>
</li>
<li>
<p>A GeoRaster object is non-empty or nonblank, but an associated RDT does not exist.</p>
</li>
</ul>
<p>After a database upgrade, you should call the <a href="geor_admin_ref.htm#GUID-2E813E4E-C5A5-4884-97FA-DB8E6BEC87D6">SDO_GEOR_ADMIN.isUpgradeNeeded</a> function to check for any invalid GeoRaster objects and invalid system data for the current version. If there are any errors or invalid data, call the <a href="geor_admin_ref.htm#GUID-7B7D8C75-46E9-4278-8B2E-60675055A8F2">SDO_GEOR_ADMIN.upgradeGeoRaster</a> function to have the problems automatically corrected. If you connect as user MDSYS, the <a href="geor_admin_ref.htm#GUID-7B7D8C75-46E9-4278-8B2E-60675055A8F2">SDO_GEOR_ADMIN.upgradeGeoRaster</a> function upgrades all GeoRaster objects in the database; otherwise, it upgrades only GeoRaster objects in the schema of the current user. (See the reference and usage information about <a href="geor_admin_ref.htm#GUID-7B7D8C75-46E9-4278-8B2E-60675055A8F2">SDO_GEOR_ADMIN.upgradeGeoRaster</a> in <a href="geor_admin_ref.htm#GUID-6F9B00F3-56C1-4AF9-82A6-DFBAB1BB489E">SDO_GEOR_ADMIN Package Reference</a>.)</p>
<p>For regular maintenance due to possible user errors, several functions and procedures will be helpful in checking for and correcting invalid GeoRaster objects and system data entries:</p>
<ul style="list-style-type: disc;">
<li>
<p>To check for errors, call <a href="geor_admin_ref.htm#GUID-786E293A-2F1B-4605-AC82-4B788A1BDED6">SDO_GEOR_ADMIN.checkSysdataEntries</a> and <a href="geor_admin_ref.htm#GUID-579B7EA9-5D89-45B2-A9F2-FC9BE216C827">SDO_GEOR_ADMIN.listUnregisteredRDT</a>.</p>
</li>
<li>
<p>To check for dangling raster data, call <a href="geor_admin_ref.htm#GUID-C20A7F7C-C861-437E-BFD3-791B7AFAFB4C">SDO_GEOR_ADMIN.listDanglingRasterData</a>.</p>
</li>
<li>
<p>To correct all invalid system data entries, call <a href="geor_admin_ref.htm#GUID-3EEACD9B-7B9C-4606-9DC0-966CFE0CB469">SDO_GEOR_ADMIN.maintainSysdataEntries</a>.</p>
</li>
<li>
<p>To create correct DML triggers for all GeoRaster columns, call <a href="geor_admin_ref.htm#GUID-8FC19048-E701-4D73-98E5-64140ED503B3">SDO_GEOR_ADMIN.registerGeoRasterColumns</a>.</p>
</li>
<li>
<p>To register all existing GeoRaster objects in the sysdata table, call <a href="geor_admin_ref.htm#GUID-13898CD3-CD1F-4C78-A023-1ED2B3D6C524">SDO_GEOR_ADMIN.registerGeoRasterObjects</a>.</p>
</li>
</ul>
<p>See the reference and usage information about these procedures and functions in <a href="geor_admin_ref.htm#GUID-6F9B00F3-56C1-4AF9-82A6-DFBAB1BB489E">SDO_GEOR_ADMIN Package Reference</a>.</p>
</div>
</div>
<a id="GEORS1018"></a>
<div class="props_rev_3"><a id="GUID-0F77203F-486F-4160-A03C-8E7EA2594DB1"></a>
<h2 id="GEORS-GUID-0F77203F-486F-4160-A03C-8E7EA2594DB1" class="sect2"><span class="enumeration_section">3.26</span> Transferring GeoRaster Data Between Databases</h2>
<div>
<div class="section">
<p>You can use either the Data Pump Export and Import utilities or the original Export and Import utilities to transfer GeoRaster data between databases. You must export and import rows from both the GeoRaster table and its related raster data table or tables. After the transfer, you do not need to insert the GeoRaster system data for the imported GeoRaster objects into the USER_SDO_GEOR_SYSDATA view (described in <a href="geor_operations.htm#GUID-657BA65F-E8FF-41D7-94B6-BA412993EC52">GeoRaster System Data Views (xxx_SDO_GEOR_SYSDATA)</a>) in the target schema; however, you should use the <a href="geor_ref.htm#GUID-72D06328-134D-473E-8279-F0C3B6ADEE34">SDO_GEOR.validateGeoRaster</a> function to check the validity of imported GeoRaster objects before you perform any operations on these objects.</p>
<p>For information about the Data Pump Export and Import utilities and the original Export and Import utilities, see <a class="olink SUTIL" target="_blank" href="../SUTIL/toc.htm"><span class="italic">Oracle Database Utilities</span></a>.</p>
<p>To transfer GeoRaster data between databases, follow these general steps:</p>
</div>
<!-- class="section" -->
<ol>
<li><span>Check for and resolve any conflicts, as explained in <a href="basic-georaster-operations.htm#GUID-2EA1AFDA-D11D-4913-87B3-DF222E290696">Checking for and Resolving Conflicts</a>.</span></li>
<li><span>Perform the data transfer, as explained in <a href="basic-georaster-operations.htm#GUID-1B3CA536-A9A6-41AB-B704-13B66A4957EE">Performing the GeoRaster Data Transfer</a>.</span></li>
</ol>
</div>
<a id="GEORS1019"></a>
<div class="props_rev_3"><a id="GUID-2EA1AFDA-D11D-4913-87B3-DF222E290696"></a>
<h3 id="GEORS-GUID-2EA1AFDA-D11D-4913-87B3-DF222E290696" class="sect3"><span class="enumeration_section">3.26.1</span> Checking for and Resolving Conflicts</h3>
<div>
<p>For a successful import of GeoRaster data into a target database, there must be no conflicts in the target schema&#39;s GeoRaster system data. The following conditions can cause a conflict:</p>
<ul style="list-style-type: disc;">
<li>
<p>A raster data table with the same name is already defined in another schema in the target database.</p>
<p>For example, you might plan to import a GeoRaster object by creating its raster data table (RDT) in the target schema, but an existing RDT in the target schema might already have the same name. In this case, you should use the <a href="geor_admin_ref.htm#GUID-2CDF0178-612F-4DCA-A63D-E151AC4C3CCF">SDO_GEOR_ADMIN.listRDT</a> or <a href="geor_admin_ref.htm#GUID-05492210-9524-40A2-8A29-6B7028566FAA">SDO_GEOR_ADMIN.isRDTNameUnique</a> function to check both source database and target database to see if there are RDT name conflicts; and if there are any conflicts, use the <a href="geor_util_ref.htm#GUID-9B5168A6-2624-4E80-B8C8-DC4815B94E36">SDO_GEOR_UTL.renameRDT</a> procedure to rename the RDT to a different name in the target database to solve the conflicts before you import the GeoRaster objects.</p>
</li>
<li>
<p>Any pairs of raster data table name and raster ID to be inserted into the target schema&#39;s USER_SDO_GEOR_SYSDATA view are not unique.</p>
<p>For example, if you import RDT data by appending to an existing RDT in the target database, this conflict might occur. In this case, before importing the data into the target database, use the <a href="geor_admin_ref.htm#GUID-2B2ED5B6-BE91-4BBD-91F0-1A9B98565283">SDO_GEOR_ADMIN.listGeoRasterObjects</a> function to list all GeoRaster objects defined in the target schema, and make sure that there are no conflicts in the combination of RDT name and raster ID between existing GeoRaster data and the GeoRaster data to be imported. If there are any conflicts, change the raster ID of the GeoRaster object in the target schema to resolve the conflicts; otherwise, those GeoRaster objects with conflicts in the dump file will get rejected when you perform import process.</p>
</li>
</ul>
<p>If you need to check the raster data table (RDT) name and raster ID (RID) information in the dump file, you have the following options: check the information in the source database; request the information from the provider of the dump file; load the dump file into a separate test database and check the information there; or (if you cannot use a separate database for testing) load the dump file into a test schema in the current database and check the information. To load the dump file into a test schema in the current database and check the information, follow these steps:</p>
<ol>
<li>
<p>Create a test schema in the target database.</p>
</li>
<li>
<p>Load all GeoRaster tables into this test schema from the dump file, using the Data Pump Import utility with the <code class="codeph">CONTENT = METADATA_ONLY</code> parameter.</p>
</li>
<li>
<p>Connect to the database as the MDSYS user, and disable all DML triggers on the GeoRaster tables that were loaded in the preceding step.</p>
</li>
<li>
<p>Load the data into the GeoRaster tables, using the Data Pump Import utility with the <code class="codeph">CONTENT = DATA_ONLY</code> parameter.</p>
</li>
<li>
<p>Retrieve the RDT/RID (raster data table name and raster ID) pairs directly from the GeoRaster tables in the test schema.</p>
</li>
</ol>
<p>After you resolve conflicts, you should ensure the integrity of GeoRaster metadata and data (see <a href="basic-georaster-operations.htm#GUID-14CEA0C1-837D-4DD4-A255-80ECCC28615E">Maintaining GeoRaster Objects and System Data in the Database</a>). You should also validate any fixed GeoRaster objects before performing a commit or any other operation.</p>
<p>For general information about resolving conflicts during import operations, see the description of the <code class="codeph">TABLE_EXISTS_ACTION</code> parameter in the Data Pump Import chapter of <a class="olink SUTIL300" target="_blank" href="../SUTIL/GUID-D11E340E-14C6-43B8-AB09-6335F0C1F71B.htm#SUTIL300"><span class="italic">Oracle Database Utilities</span></a>.</p>
</div>
</div>
<a id="GEORS1020"></a>
<div class="props_rev_3"><a id="GUID-1B3CA536-A9A6-41AB-B704-13B66A4957EE"></a>
<h3 id="GEORS-GUID-1B3CA536-A9A6-41AB-B704-13B66A4957EE" class="sect3"><span class="enumeration_section">3.26.2</span> Performing the GeoRaster Data Transfer</h3>
<div>
<p>When you export GeoRaster data from one database and import it into another, the GeoRaster database management system ensures that the necessary DML triggers and system data entries are automatically generated after the GeoRaster tables and objects are imported into the target database. Therefore, all GeoRaster internal DML triggers should be excluded in <code class="codeph">expdp</code> and <code class="codeph">impdp</code> operations; otherwise, some <code class="codeph">impdp</code> errors such as the following will be raised, even though the errors can be safely ignored:</p>
<pre dir="ltr">ORA-39083: Object type TRIGGER failed to create with error:
ORA-13391:  GeoRaster reserved names cannot be used to create regular triggers
</pre>
<p>To export GeoRaster data, do as you would for other types of data, but exclude the GeoRaster internal DML triggers (whose names start with <code class="codeph">GRDMLTR_</code>). For example:</p>
<pre dir="ltr">expdp scott schemas=scott directory=dump_dir dumpfile=exp.dmp parfile=exclude.par
Enter password: <span class="italic">password</span>
</pre>
<p>where the <code class="codeph">exclude.par</code> file contains the following:</p>
<pre dir="ltr">exclude=trigger:&#34;like &#39;GRDMLTR_%&#39;&#34;
</pre>
<p>To import GeoRaster data, do as you would for other types of data, but exclude the GeoRaster internal DML triggers (whose names start with <code class="codeph">GRDMLTR_</code>) if you did not exclude them in the export operation. For example:</p>
<ol>
<li>
<p>Ensure that no conflicts exist between the GeoRaster data to be imported and the existing GeoRaster data in the target database, as explained in <a href="basic-georaster-operations.htm#GUID-2EA1AFDA-D11D-4913-87B3-DF222E290696">Checking for and Resolving Conflicts</a>.</p>
<p>If any conflicts are not resolved, some exceptions will be raised and only non-conflicted GeoRaster data will be imported into the target database.</p>
</li>
<li>
<p>Import GeoRaster data as you would for other types of data, but exclude the GeoRaster internal DML triggers (whose names start with <code class="codeph">GRDMLTR_</code>) if you did not exclude them in the export operation. For example:</p>
<pre dir="ltr">impdp scott schemas=scott directory=dump_dir dumpfile=exp.dmp parfile=exclude.par
Enter password: <span class="italic">password</span>
</pre>
<p>where the <code class="codeph">exclude.par</code> file contains the following:</p>
<pre dir="ltr">exclude=trigger:&#34;like &#39;GRDMLTR_%&#39;&#34;
</pre></li>
</ol>
</div>
</div>
</div>
<a id="GEORS1195"></a>
<div class="props_rev_3"><a id="GUID-51C68427-CA7F-4E85-90AD-780D770DF81F"></a>
<h2 id="GEORS-GUID-51C68427-CA7F-4E85-90AD-780D770DF81F" class="sect2"><span class="enumeration_section">3.27</span> Using Transportable Tablespaces with GeoRaster Data</h2>
<div>
<div class="section">
<p>You can use the Oracle Database transportable tablespaces feature with GeoRaster data.</p>
<p>If a tablespace to be transported contains any spatial indexes on the GeoRaster tables or raster data tables (RDTs), you may have to take some preparatory steps. See the Usage Notes for the SDO_UTIL.PREPARE_FOR_TTS and SDO_UTIL.INITIALIZE_INDEXES_FOR_TTS procedures in <a class="olink SPATL" target="_blank" href="../SPATL/toc.htm"><span class="italic">Oracle Spatial and Graph Developer&#39;s Guide</span></a> for more information about using the transportable tablespace feature with spatial data.</p>
<p>For a successful import of GeoRaster data into a target database, there must be no conflicts in the target schema&#39;s GeoRaster system data. Before you transport the tablespace to another database or schema, it is recommended (but not required) that you check for and resolve such conflicts by following the procedure described in <a href="basic-georaster-operations.htm#GUID-2EA1AFDA-D11D-4913-87B3-DF222E290696">Checking for and Resolving Conflicts</a>. For this reason, you should design GeoRaster tables and RDT tables so as to avoid such foreseeable conflicts before you use such transportable tablespaces in the source database.</p>
<p>Regardless or whether a transported tablespace has any spatial indexes, after transporting the tablespace that contains GeoRaster objects, do the following:</p>
</div>
<!-- class="section" -->
<ol>
<li><span>Call the <a href="geor_admin_ref.htm#GUID-13898CD3-CD1F-4C78-A023-1ED2B3D6C524">SDO_GEOR_ADMIN.registerGeoRasterObjects</a> procedure (described in <a href="geor_admin_ref.htm#GUID-6F9B00F3-56C1-4AF9-82A6-DFBAB1BB489E">SDO_GEOR_ADMIN Package Reference</a>) to register all GeoRaster objects in the current schema or new database.</span></li>
<li><span>Before you use the transported GeoRaster data, perform the &#34;regular maintenance&#34; operations described in <a href="basic-georaster-operations.htm#GUID-14CEA0C1-837D-4DD4-A255-80ECCC28615E">Maintaining GeoRaster Objects and System Data in the Database</a>, to maintain GeoRaster objects and system data and to ensure all GeoRaster objects are correctly transported and properly registered.</span></li>
<li><span>If you find any conflicts, call the <a href="geor_util_ref.htm#GUID-9B5168A6-2624-4E80-B8C8-DC4815B94E36">SDO_GEOR_UTL.renameRDT</a> or <a href="geor_util_ref.htm#GUID-94664890-EDA7-4518-B87A-99AD4D8672DA">SDO_GEOR_UTL.makeRDTNamesUnique</a> procedure to solve such conflicts, and validate again.</span></li>
</ol>
<div class="section">
<p>For detailed information about transportable tablespaces and transporting tablespaces to other databases, see <a class="olink ADMIN11394" target="_blank" href="../ADMIN/transport.htm#ADMIN11394"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a>.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4336">
<tr>
<td class="cellalignment4343">
<table class="cellalignment4341">
<tr>
<td class="cellalignment4340"><a href="geor_operations.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4340"><a href="geor_raster_algebra.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4345">
<table class="cellalignment4339">
<tr>
<td class="cellalignment4340"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4340"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4340"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4340"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4340"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4340"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>