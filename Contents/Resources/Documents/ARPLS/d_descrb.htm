<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2258"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_DESCRIBE"></a><title>DBMS_DESCRIBE</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_defsys.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_dg.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">62/290</span> <!-- End Header -->
<div id="ARPLS013" class="chapter"><a id="BAJDBCIE"></a>
<h1 class="chapter"><span class="secnum">58</span> DBMS_DESCRIBE</h1>
<p>You can use the <a id="sthref3973"></a><code dir="ltr">DBMS_DESCRIBE</code> package to get information about a PL/SQL object. When you specify an object name, <code dir="ltr">DBMS_DESCRIBE</code> returns a set of indexed tables with the results. Full name translation is performed and security checking is also checked on the final object.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BAJGDGIE">Using DBMS_DESCRIBE</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Types</p>
</li>
<li>
<p>Exceptions</p>
</li>
<li>
<p>Examples</p>
</li>
</ul>
</li>
<li>
<p><a href="#BAJJJGJH">Summary of DBMS_DESCRIBE Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="BAJGDGIE"></a>
<div id="ARPLS66211" class="refsect1">
<h2 class="refsect1">Using DBMS_DESCRIBE</h2>
<ul>
<li>
<p><a href="#i1000091">Overview</a></p>
</li>
<li>
<p><a href="#i999939">Security Model</a></p>
</li>
<li>
<p><a href="#i999971">Types</a></p>
</li>
<li>
<p><a href="#i999972">Exceptions</a></p>
</li>
<li>
<p><a href="#CHDHGGFD">Examples</a></p>
</li>
</ul>
<div id="ARPLS66212" class="refsect2"><a id="i1000091"></a>
<h3 class="refsect2">Overview</h3>
<p>This package provides the same functionality as the Oracle Call Interface <code dir="ltr">OCIDescribeAny</code> call.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a class="olink LNOCI" href="../LNOCI/toc.htm"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a></div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS66213" class="refsect2"><a id="i999939"></a>
<h3 class="refsect2">Security Model</h3>
<p>This package is available to <code dir="ltr">PUBLIC</code> and performs its own security checking based on the schema object being described.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS66214" class="refsect2"><a id="i999971"></a>
<h3 class="refsect2">Types</h3>
<p>The <code dir="ltr">DBMS_DESCRIBE</code> package declares two PL/SQL table types, which are used to hold data returned by <code dir="ltr">DESCRIBE_PROCEDURE</code> in its <code dir="ltr">OUT</code> parameters. The types are:</p>
<pre dir="ltr">TYPE VARCHAR2_TABLE IS TABLE OF VARCHAR2(30)
    INDEX BY BINARY_INTEGER;

TYPE NUMBER_TABLE IS TABLE OF NUMBER
    INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsect2" -->
<div id="ARPLS66215" class="refsect2"><a id="i999972"></a>
<h3 class="refsect2">Exceptions</h3>
<p><code dir="ltr">DBMS_DESCRIBE</code> can raise application errors in the range -20000 to -20004.</p>
<div id="ARPLS66216" class="tblformal">
<p class="titleintable"><a id="sthref3974"></a><a id="sthref3975"></a>Table 58-1 DBMS_DESCRIBE Errors</p>
<table class="cellalignment4330" title="DBMS_DESCRIBE Errors " summary="This table describes Exceptions for the DBMS_DESCRIBE package." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t3">Error</th>
<th class="cellalignment4328" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">ORA-20000</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c2-t3">
<p><code dir="ltr">ORU 10035:</code> cannot describe a package (&#39;<code dir="ltr">X</code>&#39;) only a procedure within a package.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">ORA-20001</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c2-t3">
<p><code dir="ltr">ORU-10032:</code> procedure &#39;<code dir="ltr">X</code>&#39; within package &#39;<code dir="ltr">Y</code>&#39; does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">ORA-20002</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c2-t3">
<p><code dir="ltr">ORU-10033:</code> object &#39;<code dir="ltr">X</code>&#39; is remote, cannot describe; expanded name &#39;<code dir="ltr">Y</code>&#39;.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t3" headers="r1c1-t3">
<p><code dir="ltr">ORA-20003</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c2-t3">
<p><code dir="ltr">ORU-10036:</code> object &#39;<code dir="ltr">X</code>&#39; is invalid and cannot be described.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t3" headers="r1c1-t3">
<p><code dir="ltr">ORA-20004</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c2-t3">
<p>Syntax error attempting to parse &#39;<code dir="ltr">X</code>&#39;.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74975" class="refsect2"><a id="CHDHGGFD"></a>
<h3 class="refsect2">Examples</h3>
<p>One use of the <code dir="ltr">DESCRIBE_PROCEDURE</code> procedure is as an external service interface.</p>
<p>For example, consider a client that provides an <code dir="ltr">OBJECT_NAME</code> of <code dir="ltr">SCOTT</code>.<code dir="ltr">ACCOUNT_UPDATE,</code> where <code dir="ltr">ACCOUNT_UPDATE</code> is an overloaded function with specification:</p>
<pre dir="ltr">TABLE account (accnt_no NUMBER, person_id NUMBER,
               balance NUMBER(7,2)) 
TABLE person  (person_id number(4), person_nm varchar2(10))

CREATE OR REPLACE PACKAGE ACCOUNT_PKG is   FUNCTION ACCOUNT_UPDATE (accnt_no    NUMBER,
                            person      person%rowtype,
                            amounts     DBMS_DESCRIBE.NUMBER_TABLE,
                            trans_date  DATE)
                            return       account.balance%type;
 
   FUNCTION ACCOUNT_UPDATE (accnt_no     NUMBER, 
                            person       person%rowtype,
                            amounts      DBMS_DESCRIBE.NUMBER_TABLE, 
                            trans_no     NUMBER)
                            return       account.balance%type;
END;
</pre>
<p>This procedure might look similar to the following output:</p>
<pre dir="ltr">overload position  argument level  datatype length prec scale rad  
-------- --------- -------- ------ -------- ------ ---- ----- ---  
       1        0               0         2     22    7     2  10  
       1        1   ACCNT_NO    0         2      0    0     0   0  
       1        2   PERSON      0       250      0    0     0   0  
       1        1   PERSON_ID   1         2     22    4     0  10  
       1        2   PERSON_NM   1         1     10    0     0   0  
       1        3   AMOUNTS     0       251      0    0     0   0  
       1        1               1         2     22    0     0   0  
       1        4   TRANS_DATE  0        12      0    0     0   0  
       2        0               0         2     22    7     2  10  
       2        1   ACCNT_NO    0         2     22    0     0   0  
       2        2   PERSON      0         2     22    4     0  10  
       2        3   AMOUNTS     0       251     22    4     0  10  
       2        1               1         2      0    0     0   0  
       2        4   TRANS_NO    0         2      0    0     0   0  
</pre>
<p>The following PL/SQL procedure has as its parameters all of the PL/SQL datatypes: <a id="sthref3976"></a></p>
<pre dir="ltr">CREATE OR REPLACE PROCEDURE p1 (
        pvc2    IN     VARCHAR2,
        pvc     OUT    VARCHAR,
        pstr    IN OUT STRING,
        plong   IN     LONG,
        prowid  IN     ROWID,
        pchara  IN     CHARACTER,
        pchar   IN     CHAR,
        praw    IN     RAW,
        plraw   IN     LONG RAW,
        pbinint IN     BINARY_INTEGER,
        pplsint IN     PLS_INTEGER,
        pbool   IN     BOOLEAN,
        pnat    IN     NATURAL,
        ppos    IN     POSITIVE,
        pposn   IN     POSITIVEN,
        pnatn   IN     NATURALN,
        pnum    IN     NUMBER,
        pintgr  IN     INTEGER,
        pint    IN     INT,
        psmall  IN     SMALLINT,
        pdec    IN     DECIMAL,
        preal   IN     REAL,
        pfloat  IN     FLOAT,
        pnumer  IN     NUMERIC,
        pdp     IN     DOUBLE PRECISION,
        pdate   IN     DATE,
        pmls    IN     MLSLABEL) AS

BEGIN
    NULL;
END;
</pre>
<p>If you describe this procedure using the following:</p>
<pre dir="ltr">CREATE OR REPLACE PACKAGE describe_it AS

    PROCEDURE desc_proc (name VARCHAR2);

END describe_it;

CREATE OR REPLACE PACKAGE BODY describe_it AS

  PROCEDURE prt_value(val VARCHAR2, isize INTEGER) IS
    n INTEGER;
  BEGIN
    n := isize - LENGTHB(val);
    IF n &lt; 0 THEN
      n := 0;
    END IF;
    DBMS_OUTPUT.PUT(val);
    FOR i in 1..n LOOP
      DBMS_OUTPUT.PUT(&#39; &#39;);
    END LOOP;
  END prt_value;

  PROCEDURE desc_proc (name VARCHAR2) IS

      overload     DBMS_DESCRIBE.NUMBER_TABLE;
      position     DBMS_DESCRIBE.NUMBER_TABLE;
      c_level      DBMS_DESCRIBE.NUMBER_TABLE;
      arg_name     DBMS_DESCRIBE.VARCHAR2_TABLE;
      dty          DBMS_DESCRIBE.NUMBER_TABLE;
      def_val      DBMS_DESCRIBE.NUMBER_TABLE;
      p_mode       DBMS_DESCRIBE.NUMBER_TABLE;
      length       DBMS_DESCRIBE.NUMBER_TABLE;
      precision    DBMS_DESCRIBE.NUMBER_TABLE;
      scale        DBMS_DESCRIBE.NUMBER_TABLE;
      radix        DBMS_DESCRIBE.NUMBER_TABLE;
      spare        DBMS_DESCRIBE.NUMBER_TABLE;
      idx          INTEGER := 0;
  
  BEGIN
      DBMS_DESCRIBE.DESCRIBE_PROCEDURE(
              name,
              null,
              null,
              overload,
              position,
              c_level,
              arg_name,
              dty,
              def_val,
              p_mode,
              length,
              precision,
              scale,
              radix,
              spare);
  
      DBMS_OUTPUT.PUT_LINE(&#39;Position    Name        DTY  Mode&#39;);
      LOOP
          idx := idx + 1;
          prt_value(TO_CHAR(position(idx)), 12);
          prt_value(arg_name(idx), 12);
          prt_value(TO_CHAR(dty(idx)), 5);
          prt_value(TO_CHAR(p_mode(idx)), 5);
          DBMS_OUTPUT.NEW_LINE;
      END LOOP;
  EXCEPTION
     WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.NEW_LINE;
        DBMS_OUTPUT.NEW_LINE;

  END desc_proc;
END describe_it;
</pre>
<p>Then the results list all the numeric codes for the PL/SQL datatypes: <a id="sthref3977"></a><a id="sthref3978"></a></p>
<pre dir="ltr">Position  Name    Datatype_Code  Mode
1         PVC2      1              0 
2         PVC       1              1 
3         PSTR      1              2 
4         PLONG     8              0 
5         PROWID    11             0 
6         PCHARA    96             0 
7         PCHAR     96             0 
8         PRAW      23             0 
9         PLRAW     24             0 
10        PBININT   3              0 
11        PPLSINT   3              0 
12        PBOOL     252            0 
13        PNAT      3              0 
14        PPOS      3              0 
15        PPOSN     3              0 
16        PNATN     3              0 
17        PNUM      2              0 
18        PINTGR    2              0 
19        PINT      2              0 
20        PSMALL    2              0 
21        PDEC      2              0 
22        PREAL     2              0 
23        PFLOAT    2              0 
24        PNUMER    2              0 
25        PDP       2              0 
26        PDATE     12             0
27        PMLS      106            0
</pre></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="BAJJJGJH"></a>
<div id="ARPLS66218" class="refsect1">
<h2 class="refsect1">Summary of DBMS_DESCRIBE Subprograms</h2>
<div id="ARPLS66219" class="tblformal">
<p class="titleintable"><a id="sthref3979"></a><a id="sthref3980"></a>Table 58-2 DBMS_DESCRIBE Package Subprograms</p>
<table class="cellalignment4330" title="DBMS_DESCRIBE Package Subprograms " summary="This table lists the single DBMS_DESCRIBE subprograms and briefly describes it" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i1000288">DESCRIBE_PROCEDURE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p>Provides a brief description of a PL/SQL stored procedure</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS66220" class="refsect2"><a id="i1000288"></a>
<h3 class="refsect2"><a id="sthref3981"></a>DESCRIBE_PROCEDURE Procedure</h3>
<p>The procedure <code dir="ltr">DESCRIBE_PROCEDURE</code> provides a brief description of a PL/SQL stored procedure. It takes the name of a stored procedure and returns information about each parameter of that procedure.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3982"></a>Syntax</p>
<pre dir="ltr">DBMS_DESCRIBE.DESCRIBE_PROCEDURE(
   object_name                   IN  VARCHAR2,
   reserved1                     IN  VARCHAR2,
   reserved2                     IN  VARCHAR2,
   overload                      OUT NUMBER_TABLE,
   position                      OUT NUMBER_TABLE,
   level                         OUT NUMBER_TABLE,
   argument_name                 OUT VARCHAR2_TABLE,
   datatype                      OUT NUMBER_TABLE,
   default_value                 OUT NUMBER_TABLE,
   in_out                        OUT NUMBER_TABLE,
   length                        OUT NUMBER_TABLE,
   precision                     OUT NUMBER_TABLE,
   scale                         OUT NUMBER_TABLE,
   radix                         OUT NUMBER_TABLE,
   spare                         OUT NUMBER_TABLE
   include_string_constraints    OUT BOOLEAN DEFAULT FALSE); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3983"></a>Parameters</p>
<div id="ARPLS66221" class="tblformal">
<p class="titleintable"><a id="sthref3984"></a><a id="sthref3985"></a>Table 58-3 DBMS_DESCRIBE.DESCRIBE_PROCEDURE Parameters</p>
<table class="cellalignment4330" title="DBMS_DESCRIBE.DESCRIBE_PROCEDURE Parameters " summary="This table describes the parameters of DBMS_DESCRIBE.DESCRIBE_PROCEDURE." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5"><span class="bold">Parameter</span></th>
<th class="cellalignment4328" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p>Name of the procedure being described.</p>
<p>The syntax for this parameter follows the rules used for identifiers in SQL. The name can be a synonym. This parameter is required and may not be null. The total length of the name cannot exceed 197 bytes. An incorrectly specified <code dir="ltr">OBJECT_NAME</code> can result in one of the following exceptions:</p>
<p><code dir="ltr">ORA-20000</code> - A package was specified. You can only specify a stored procedure, stored function, packaged procedure, or packaged function.</p>
<p><code dir="ltr">ORA-20001</code> - The procedure or function that you specified does not exist within the given package.</p>
<p><code dir="ltr">ORA-20002</code> - The object that you specified is a remote object. This procedure cannot currently describe remote objects.</p>
<p><code dir="ltr">ORA-20003</code> - The object that you specified is invalid and cannot be described.</p>
<p><code dir="ltr">ORA-20004</code> - The object was specified with a syntax error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">reserved1 reserved2</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c2-t5">
<p>Reserved for future use -- must be set to <code dir="ltr">NULL</code> or the empty string.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">overload</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t5 r1c2-t5">
<p>A unique number assigned to the procedure&#39;s signature.</p>
<p>If a procedure is overloaded, then this field holds a different value for each version of the procedure.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t5" headers="r1c1-t5">
<p><code dir="ltr">position</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t5 r1c2-t5">
<p>Position of the argument in the parameter list.</p>
<p>Position 0 returns the values for the return type of a function.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t5" headers="r1c1-t5">
<p><code dir="ltr">level</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t5 r1c2-t5">
<p>If the argument is a composite type, such as record, then this parameter returns the level of the datatype. See the <a class="olink LNOCI" href="../LNOCI/toc.htm"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for a description of the <code dir="ltr">ODESSP</code> call for an example.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t5" headers="r1c1-t5">
<p><code dir="ltr">argument_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t5 r1c2-t5">
<p>Name of the argument associated with the procedure that you are describing.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t5" headers="r1c1-t5">
<p><code dir="ltr">datatype</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t5 r1c2-t5">
<p><a id="sthref3986"></a>Oracle datatype of the argument being described. The datatypes and their numeric type codes are:</p>
<pre dir="ltr">0   placeholder for procedures with no arguments
1   VARCHAR, VARCHAR, STRING
2   NUMBER, INTEGER, SMALLINT, REAL, FLOAT, DECIMAL
3   BINARY_INTEGER, PLS_INTEGER, POSITIVE, NATURAL
8   LONG
11  ROWID
12  DATE
23  RAW
24  LONG RAW
58  OPAQUE TYPE
96  CHAR (ANSI FIXED CHAR), CHARACTER
106 MLSLABEL
121 OBJECT
122 NESTED TABLE
123 VARRAY
178 TIME
179 TIME WITH TIME ZONE
180 TIMESTAMP
181 TIMESTAMP WITH TIME ZONE
231 TIMESTAMP WITH LOCAL TIME ZONE
250 PL/SQL RECORD
251 PL/SQL TABLE
252 PL/SQL BOOLEAN
</pre></td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t5" headers="r1c1-t5">
<p><code dir="ltr">default_value</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t5 r1c2-t5">
<p>1 if the argument being described has a default value; otherwise, the value is 0.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t5" headers="r1c1-t5">
<p><code dir="ltr">in_out</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t5 r1c2-t5">
<p>Describes the mode of the parameter:</p>
<pre dir="ltr">0 IN
1 OUT
2 IN OUT
</pre></td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t5" headers="r1c1-t5">
<p><code dir="ltr">length</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t5 r1c2-t5">
<p>For <code dir="ltr">%rowtype</code> formal arguments, the length constraint is returned, otherwise 0 is returned.If the <code dir="ltr">include_string_constraints</code> parameter is set to <code dir="ltr">TRUE, the</code> argument&#39;s formal length constraint is passed back if it is of the appropriate type. Those are the string types: 1;8;23;24;96</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t5" headers="r1c1-t5">
<p><code dir="ltr">precision</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t5 r1c2-t5">
<p>If the argument being described is of datatype 2 (<code dir="ltr">NUMBER</code>), then this parameter is the precision of that number.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t5" headers="r1c1-t5">
<p><code dir="ltr">scale</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t5 r1c2-t5">
<p>If the argument being described is of datatype 2 (<code dir="ltr">NUMBER</code>), then this parameter is the scale of that number.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t5" headers="r1c1-t5">
<p><code dir="ltr">radix</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t5 r1c2-t5">
<p>If the argument being described is of datatype 2 (<code dir="ltr">NUMBER</code>), then this parameter is the radix of that number.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t5" headers="r1c1-t5">
<p><code dir="ltr">spare</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t5 r1c2-t5">
<p>Reserved for future functionality.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t5" headers="r1c1-t5">
<p><code dir="ltr">include_string_constraints</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t5 r1c2-t5">
<p>The default is <code dir="ltr">FALSE</code>. If the parameter is set to <code dir="ltr">TRUE</code>, the arguments&#39; formal type constraints is passed back if it is of the appropriate type.Those are the string types: 1;8;23;24;96</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3987"></a>Return Values</p>
<p>All values from <code dir="ltr">DESCRIBE_PROCEDURE</code> are returned in its <code dir="ltr">OUT</code> parameters. The datatypes for these are PL/SQL tables, to accommodate a variable number of parameters.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_defsys.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_dg.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>