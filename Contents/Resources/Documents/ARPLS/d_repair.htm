<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2326"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_REPAIR"></a><title>DBMS_REPAIR</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:28Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_refrsh.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_repcat.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">128/290</span> <!-- End Header -->
<div id="ARPLS044" class="chapter"><a id="BABHJAHI"></a>
<h1 class="chapter"><span class="secnum">124</span> DBMS_REPAIR</h1>
<p>The <code dir="ltr"><a id="sthref7441"></a>DBMS_REPAIR</code> package contains data corruption repair procedures that enable you to detect and repair corrupt blocks in tables and indexes. You can address corruptions where possible and continue to use objects while you attempt to rebuild or repair them.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For detailed information about using the <code dir="ltr">DBMS_REPAIR</code> package, see <a class="olink ADMIN" href="../ADMIN/toc.htm"><span class="italic">Oracle Database Administrator&#39;s Guide.</span></a></div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDHHIAB">Using DBMS_REPAIR</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
<li>
<p>Operating Notes</p>
</li>
<li>
<p>Exceptions</p>
</li>
<li>
<p>Examples</p>
</li>
</ul>
</li>
<li>
<p><a href="#i1000581">Summary of DBMS_REPAIR Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDHHIAB"></a>
<div id="ARPLS67536" class="refsect1">
<h2 class="refsect1">Using DBMS_REPAIR</h2>
<ul>
<li>
<p><a href="#i1000732">Overview</a></p>
</li>
<li>
<p><a href="#i1000709">Security Model</a></p>
</li>
<li>
<p><a href="#i1000683">Constants</a></p>
</li>
<li>
<p><a href="#BGBHGJHB">Operating Notes</a></p>
</li>
<li>
<p><a href="#i1000638">Exceptions</a></p>
</li>
<li>
<p><a href="#i1000639">Examples</a></p>
</li>
</ul>
<div id="ARPLS67537" class="refsect2"><a id="i1000732"></a>
<h3 class="refsect2">Overview</h3>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
The <code dir="ltr">DBMS_REPAIR</code> package is intended for use by database administrators only. It is not intended for use by application developers.</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67538" class="refsect2"><a id="i1000709"></a>
<h3 class="refsect2">Security Model</h3>
<p>The package is owned by <code dir="ltr">SYS</code>. Execution privilege is not granted to other users.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67539" class="refsect2"><a id="i1000683"></a>
<h3 class="refsect2">Constants</h3>
<p>The <code dir="ltr">DBMS_REPAIR</code> package defines several enumerated constants that should be used for specifying parameter values. Enumerated constants must be prefixed with the package name. For example, <code dir="ltr">DBMS_REPAIR</code>.<code dir="ltr">TABLE_OBJECT</code>.</p>
<p><a href="#CHDFDJEE">Table 124-1</a> lists the parameters and the enumerated constants.</p>
<div id="ARPLS67540" class="tblformalwide">
<p class="titleintable"><a id="sthref7442"></a><a id="CHDFDJEE"></a>Table 124-1 DBMS_REPAIR Parameters with Enumerated Constants</p>
<table class="cellalignment4327" title="DBMS_REPAIR Parameters with Enumerated Constants" summary="This table describes the enumerated constants of DBMS_REPAIR parameters." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Parameter</th>
<th class="cellalignment4328" id="r1c2-t4">Option</th>
<th class="cellalignment4328" id="r1c3-t4">Type</th>
<th class="cellalignment4328" id="r1c4-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<ul>
<li>
<p><code dir="ltr">TABLE_OBJECT</code></p>
</li>
<li>
<p><code dir="ltr">INDEX_OBJECT</code></p>
</li>
<li>
<p><code dir="ltr">CLUSTER_OBJECT</code></p>
</li>
</ul>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c3-t4">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c4-t4">
<p>-</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">action</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<ul>
<li>
<p><code dir="ltr">CREATE_ACTION</code></p>
</li>
<li>
<p><code dir="ltr">DROP_ACTION</code></p>
</li>
<li>
<p><code dir="ltr">PURGE_ACTION</code></p>
</li>
</ul>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c3-t4">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c4-t4">
<p>-</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t4" headers="r1c1-t4">
<p><code dir="ltr">table_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c2-t4">
<ul>
<li>
<p><code dir="ltr">REPAIR_TABLE</code></p>
</li>
<li>
<p><code dir="ltr">ORPHAN_TABLE</code></p>
</li>
</ul>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c3-t4">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c4-t4">
<p>-</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t4" headers="r1c1-t4">
<p><code dir="ltr">flags</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c2-t4">
<ul>
<li>
<p><code dir="ltr">SKIP_FLAG</code></p>
</li>
<li>
<p><code dir="ltr">NOSKIP_FLAG</code></p>
</li>
</ul>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c3-t4">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c4-t4">
<p>-</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t4" headers="r1c1-t4">
<p><code dir="ltr">object_id</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t4 r1c2-t4">
<ul>
<li>
<p><code dir="ltr">ALL_INDEX_ID := 0</code></p>
</li>
</ul>
</td>
<td class="cellalignment4329" headers="r6c1-t4 r1c3-t4">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t4 r1c4-t4">
<p>Clean up all objects that qualify</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t4" headers="r1c1-t4">
<p><code dir="ltr">wait_for_lock</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t4 r1c2-t4">
<ul>
<li>
<p><code dir="ltr">LOCK_WAIT := 1</code></p>
</li>
<li>
<p><code dir="ltr">LOCK_NOWAIT := 0</code></p>
</li>
</ul>
</td>
<td class="cellalignment4329" headers="r7c1-t4 r1c3-t4">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t4 r1c4-t4">
<p>Specifies whether to try getting DML locks on underlying table [[sub]partition] object</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The default <code dir="ltr">table_name</code> will be <code dir="ltr">REPAIR_TABLE</code> when <code dir="ltr">table_type</code> is <code dir="ltr">REPAIR_TABLE</code>, and will be <code dir="ltr">ORPHAN_KEY_TABLE</code> when <code dir="ltr">table_type</code> is <code dir="ltr">ORPHAN_TABLE</code>.</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67541" class="refsect2"><a id="BGBHGJHB"></a>
<h3 class="refsect2">Operating Notes</h3>
<p>The procedure to create the <code dir="ltr">ORPHAN_KEYS_TABLE</code> is similar to the one used to create the <code dir="ltr">REPAIR_TABLE</code>.</p>
<pre dir="ltr">CONNECT / AS SYSDBA;
EXEC DBMS_REPAIR.ADMIN_TABLES(&#39;ORPHAN_KEYS_TABLE&#39;, DBMS_REPAIR.ORPHAN_TABLE,
                               DBMS_REPAIR.CREATE_ACTION);
EXEC DBMS_REPAIR.ADMIN_TABLES(&#39;REPAIR_TABLE&#39;, DBMS_REPAIR.REPAIR_TABLE,
                               DBMS_REPAIR.CREATE_ACTION);
DESCRIBE ORPHAN_KEYS_TABLE;
DESCRIBE REPAIR_TABLE;
SELECT * FROM ORPHAN_KEYS_TABLE;
SELECT * FROM REPAIR_TABLE;
</pre>
<p>The DBA would create the repair and orphan keys tables once. Subsequent executions of the <a href="#i997050">CHECK_OBJECT Procedure</a> would add rows into the appropriate table indicating the types of errors found.</p>
<p>The name of the repair and orphan keys tables can be chosen by the user, with the following restriction: the name of the repair table must begin with the &#39;<code dir="ltr">REPAIR_</code>&#39; prefix, and the name of the orphan keys table must begin with the &#39;<code dir="ltr">ORPHAN_</code>&#39; prefix. The following code is also legal:</p>
<pre dir="ltr">CONNECT / AS SYSDBA;
EXEC DBMS_REPAIR.ADMIN_TABLES(&#39;ORPHAN_FOOBAR&#39;, DBMS_REPAIR.ORPHAN_TABLE,
                               DBMS_REPAIR.CREATE_ACTION);
EXEC DBMS_REPAIR.ADMIN_TABLES(&#39;REPAIR_ABCD&#39;, DBMS_REPAIR.REPAIR_TABLE,
                               DBMS_REPAIR.CREATE_ACTION);
DESCRIBE ORPHAN_FOOBAR;
DESCRIBE REPAIR_ABCD;
SELECT * FROM ORPHAN_FOOBAR;
SELECT * FROM REPAIR_ABCD;
</pre>
<p>When invoking the <a href="#i997050">CHECK_OBJECT Procedure</a> the name of the repair and orphan keys tables that were created should be specified correctly, especially if the default values were not used in the <a href="#i1000098">ADMIN_TABLES Procedure</a> or <code dir="ltr">CREATE_ACTION</code>.</p>
<p>Other actions in the <a href="#i1000098">ADMIN_TABLES Procedure</a> can be used to purge/delete the <code dir="ltr">REPAIR_TABLE</code> and the <code dir="ltr">ORPHAN_KEYS_TABLE</code>.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67542" class="refsect2"><a id="i1000638"></a>
<h3 class="refsect2">Exceptions</h3>
<div id="ARPLS67543" class="tblformal">
<p class="titleintable"><a id="sthref7443"></a><a id="sthref7444"></a>Table 124-2 DBMS_REPAIR Exceptions</p>
<table class="cellalignment4330" title="DBMS_REPAIR Exceptions" summary="This table describes the Exceptions raised by the DDBMS_REPAIR subprograms." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t6">Exception</th>
<th class="cellalignment4328" id="r1c2-t6">Description</th>
<th class="cellalignment4328" id="r1c3-t6">Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">942</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c2-t6">
<p>Reported by <code dir="ltr">DBMS_REPAIR.ADMIN_TABLES</code> during a <code dir="ltr">DROP_ACTION</code> when the specified table doesn&#39;t exist.</p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c3-t6">
<p>-</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t6" headers="r1c1-t6">
<p><code dir="ltr">955</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c2-t6">
<p>Reported by <code dir="ltr">DBMS_REPAIR</code>. <code dir="ltr">CREATE_ACTION</code> when the specified table already exists.</p>
</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c3-t6">
<p>-</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24120</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t6 r1c2-t6">
<p>An invalid parameter was passed to the specified <code dir="ltr">DBMS_REPAIR</code> procedure.</p>
</td>
<td class="cellalignment4329" headers="r4c1-t6 r1c3-t6">
<p>Specify a valid parameter value or use the parameter&#39;s default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24122</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t6 r1c2-t6">
<p>An incorrect block range was specified.</p>
</td>
<td class="cellalignment4329" headers="r5c1-t6 r1c3-t6">
<p>Specify correct values for the <code dir="ltr">BLOCK_START</code> and <code dir="ltr">BLOCK_END</code> parameters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24123</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t6 r1c2-t6">
<p>An attempt was made to use the specified feature, but the feature is not yet implemented.</p>
</td>
<td class="cellalignment4329" headers="r6c1-t6 r1c3-t6">
<p>Do not attempt to use the feature.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24124</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t6 r1c2-t6">
<p>An invalid <code dir="ltr">ACTION</code> parameter was specified.</p>
</td>
<td class="cellalignment4329" headers="r7c1-t6 r1c3-t6">
<p>Specify <code dir="ltr">CREATE_ACTION</code>, <code dir="ltr">PURGE_ACTION</code> or <code dir="ltr">DROP_ACTION</code> for the <code dir="ltr">ACTION</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24125</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t6 r1c2-t6">
<p>An attempt was made to fix corrupt blocks on an object that has been dropped or truncated since <code dir="ltr">DBMS_REPAIR</code>.<code dir="ltr">CHECK_OBJECT</code> was run.</p>
</td>
<td class="cellalignment4329" headers="r8c1-t6 r1c3-t6">
<p>Use <code dir="ltr">DBMS_REPAIR</code>.<code dir="ltr">ADMIN_TABLES</code> to purge the repair table and run <code dir="ltr">DBMS_REPAIR</code>.<code dir="ltr">CHECK_OBJECT</code> to determine whether there are any corrupt blocks to be fixed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24127</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t6 r1c2-t6">
<p><code dir="ltr">TABLESPACE</code> parameter specified with an <code dir="ltr">ACTION</code> other than <code dir="ltr">CREATE_ACTION</code>.</p>
</td>
<td class="cellalignment4329" headers="r9c1-t6 r1c3-t6">
<p>Do not specify <code dir="ltr">TABLESPACE</code> when performing actions other than <code dir="ltr">CREATE_ACTION</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24128</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t6 r1c2-t6">
<p>A partition name was specified for an object that is not partitioned.</p>
</td>
<td class="cellalignment4329" headers="r10c1-t6 r1c3-t6">
<p>Specify a partition name only if the object is partitioned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24129</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t6 r1c2-t6">
<p>An attempt was made to pass a table name parameter without the specified prefix.</p>
</td>
<td class="cellalignment4329" headers="r11c1-t6 r1c3-t6">
<p>Pass a valid table name parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24130</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t6 r1c2-t6">
<p>An attempt was made to specify a repair or orphan table that does not exist.</p>
</td>
<td class="cellalignment4329" headers="r12c1-t6 r1c3-t6">
<p>Specify a valid table name parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24131</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t6 r1c2-t6">
<p>An attempt was made to specify a repair or orphan table that does not have a correct definition.</p>
</td>
<td class="cellalignment4329" headers="r13c1-t6 r1c3-t6">
<p>Specify a table name that refers to a properly created table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t6" headers="r1c1-t6">
<p><code dir="ltr">24132</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t6 r1c2-t6">
<p>An attempt was made to specify a table name is greater than 30 characters long.</p>
</td>
<td class="cellalignment4329" headers="r14c1-t6 r1c3-t6">
<p>Specify a valid table name parameter.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67544" class="refsect2"><a id="i1000639"></a>
<h3 class="refsect2">Examples</h3>
<pre dir="ltr">/* Fix the bitmap status for all the blocks in table mytab in schema sys */

EXECUTE DBMS_REPAIR.SEGMENT_FIX_STATUS(&#39;SYS&#39;, &#39;MYTAB&#39;); 

/* Mark block number 45, filenumber 1 for table mytab in sys schema as FULL.*/ 

EXECUTE DBMS_REPAIR.SEGMENT_FIX_STATUS(&#39;SYS&#39;, &#39;MYTAB&#39;, TABLE_OBJECT,1, 45, 1); 
</pre></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i1000581"></a>
<div id="ARPLS67545" class="refsect1">
<h2 class="refsect1">Summary of DBMS_REPAIR Subprograms</h2>
<div id="ARPLS67546" class="tblformal">
<p class="titleintable"><a id="sthref7445"></a><a id="sthref7446"></a>Table 124-3 DBMS_REPAIR Package Subprograms</p>
<table class="cellalignment4330" title="DBMS_REPAIR Package Subprograms" summary="This table lists the DBMS_REPAIR subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t7">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t7" headers="r1c1-t7">
<p><a href="#i1000098">ADMIN_TABLES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t7 r1c2-t7">
<p>Provides administrative functions for the <code dir="ltr">DBMS_REPAIR</code> package repair and orphan key tables, including create, purge, and drop functions</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t7" headers="r1c1-t7">
<p><a href="#i997050">CHECK_OBJECT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t7 r1c2-t7">
<p>Detects and reports corruptions in a table or index</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t7" headers="r1c1-t7">
<p><a href="#i997129">DUMP_ORPHAN_KEYS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t7 r1c2-t7">
<p>Reports on index entries that point to rows in corrupt data blocks</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t7" headers="r1c1-t7">
<p><a href="#CHDGBBEG">FIX_CORRUPT_BLOCKS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t7 r1c2-t7">
<p>Marks blocks software corrupt that have been previously detected as corrupt by <code dir="ltr">CHECK_OBJECT</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t7" headers="r1c1-t7">
<p><a href="#CHDEACBI">ONLINE_INDEX_CLEAN Function</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t7 r1c2-t7">
<p>Performs a manual cleanup of failed or interrupted online index builds or rebuilds</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t7" headers="r1c1-t7">
<p><a href="#i997264">REBUILD_FREELISTS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t7 r1c2-t7">
<p>Rebuilds an object&#39;s freelists</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t7" headers="r1c1-t7">
<p><a href="#i997375">SEGMENT_FIX_STATUS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t7 r1c2-t7">
<p>Fixes the corrupted state of a bitmap entry</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t7" headers="r1c1-t7">
<p><a href="#i1000167">SKIP_CORRUPT_BLOCKS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r9c1-t7 r1c2-t7">
<p>Sets whether to ignore blocks marked corrupt during table and index scans or to report <code dir="ltr">ORA-1578</code> when blocks marked corrupt are encountered</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS67547" class="refsect2"><a id="i1000098"></a>
<h3 class="refsect2"><a id="sthref7447"></a>ADMIN_TABLES Procedure</h3>
<p>This procedure provides administrative functions for the <code dir="ltr">DBMS_REPAIR</code> package repair and orphan key tables.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7448"></a>Syntax</p>
<pre dir="ltr">DBMS_REPAIR.ADMIN_TABLES (
   table_name  IN   VARCHAR2,
   table_type  IN   BINARY_INTEGER,
   action      IN   BINARY_INTEGER,
   tablespace  IN   VARCHAR2  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7449"></a>Parameters</p>
<div id="ARPLS67548" class="tblformal">
<p class="titleintable"><a id="sthref7450"></a><a id="sthref7451"></a>Table 124-4 ADMIN_TABLES Procedure Parameters</p>
<table class="cellalignment4330" title="ADMIN_TABLES Procedure Parameters" summary="This table describes Parameters used by the DBMS_REPAIR.ADMIN_TABLES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Parameter</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>Name of the table to be processed. Defaults to <code dir="ltr">ORPHAN_KEY_TABLE</code> or <code dir="ltr">REPAIR_TABLE</code> based on the specified <code dir="ltr">table_type</code>. When specified, the table name must have the appropriate prefix: <code dir="ltr">ORPHAN_</code> or <code dir="ltr">REPAIR_</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">table_type</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t8 r1c2-t8">
<p>Type of table; must be either <code dir="ltr">ORPHAN_TABLE</code> or <code dir="ltr">REPAIR_TABLE</code>.</p>
<p>See <a href="#i1000683">&#34;Constants&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t8" headers="r1c1-t8">
<p><code dir="ltr">action</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t8 r1c2-t8">
<p>Indicates what administrative action to perform.</p>
<p>Must be either <code dir="ltr">CREATE_ACTION</code>, <code dir="ltr">PURGE_ACTION</code>, or <code dir="ltr">DROP_ACTION</code>. If the table already exists, and if <code dir="ltr">CREATE_ACTION</code> is specified, then an error is returned. <code dir="ltr">PURGE_ACTION</code> indicates to delete all rows in the table that are associated with non-existent objects. If the table does not exist, and if <code dir="ltr">DROP_ACTION</code> is specified, then an error is returned.</p>
<p>When <code dir="ltr">CREATE_ACTION</code> and <code dir="ltr">DROP_ACTION</code> are specified, an associated view named <code dir="ltr">DBA_&lt;table_name&gt;</code> is created and dropped respectively. The view is defined so that rows associated with non-existent objects are eliminated.</p>
<p>Created in the <code dir="ltr">SYS</code> schema.</p>
<p>See <a href="#i1000683">&#34;Constants&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t8" headers="r1c1-t8">
<p><code dir="ltr">tablespace</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t8 r1c2-t8">
<p>Indicates the tablespace to use when creating a table.</p>
<p>By default, the <code dir="ltr">SYS</code> default tablespace is used. An error is returned if the tablespace is specified and if the action is not <code dir="ltr">CREATE_ACTION</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67549" class="refsect2"><a id="i997050"></a>
<h3 class="refsect2"><a id="sthref7452"></a>CHECK_OBJECT Procedure</h3>
<p>This procedure checks the specified objects and populates the repair table with information about corruptions and repair directives.</p>
<p>Validation consists of block checking all blocks in the object.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7453"></a>Syntax</p>
<pre dir="ltr">DBMS_REPAIR.CHECK_OBJECT (
   schema_name       IN  VARCHAR2,
   object_name       IN  VARCHAR2,
   partition_name    IN  VARCHAR2       DEFAULT NULL,
   object_type       IN  BINARY_INTEGER DEFAULT TABLE_OBJECT,
   repair_table_name IN  VARCHAR2       DEFAULT &#39;REPAIR_TABLE&#39;,
   flags             IN  BINARY_INTEGER DEFAULT NULL,
   relative_fno      IN  BINARY_INTEGER DEFAULT NULL,
   block_start       IN  BINARY_INTEGER DEFAULT NULL,
   block_end         IN  BINARY_INTEGER DEFAULT NULL,
   corrupt_count     OUT BINARY_INTEGER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7454"></a>Parameters</p>
<div id="ARPLS67550" class="tblformal">
<p class="titleintable"><a id="sthref7455"></a><a id="sthref7456"></a>Table 124-5 CHECK_OBJECT Procedure Parameters</p>
<table class="cellalignment4330" title="CHECK_OBJECT Procedure Parameters" summary="This table describes Parameters used by the DBMS_REPAIR.CHECK_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t9">Parameter</th>
<th class="cellalignment4328" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c2-t9">
<p>Schema name of the object to be checked.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t9" headers="r1c1-t9">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c2-t9">
<p>Name of the table or index to be checked.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t9" headers="r1c1-t9">
<p><code dir="ltr">partition_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t9 r1c2-t9">
<p>Partition or subpartition name to be checked.</p>
<p>If this is a partitioned object, and if <code dir="ltr">partition_name</code> is not specified, then all partitions and subpartitions are checked. If this is a partitioned object, and if the specified partition contains subpartitions, then all subpartitions are checked.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t9" headers="r1c1-t9">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t9 r1c2-t9">
<p>Type of the object to be processed. This must be either <code dir="ltr">TABLE_OBJECT</code> (default) or <code dir="ltr">INDEX_OBJECT</code>.</p>
<p>See <a href="#i1000683">&#34;Constants&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t9" headers="r1c1-t9">
<p><code dir="ltr">repair_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t9 r1c2-t9">
<p>Name of the repair table to be populated.</p>
<p>The table must exist in the <code dir="ltr">SYS</code> schema. Use the <code dir="ltr">ADMIN_TABLES</code> Procedure to create a repair table. The default name is <code dir="ltr">REPAIR_TABLE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t9" headers="r1c1-t9">
<p><code dir="ltr">flags</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t9 r1c2-t9">
<p>Reserved for future use.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t9" headers="r1c1-t9">
<p><code dir="ltr">relative_fno</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t9 r1c2-t9">
<p>Relative file number: Used when specifying a block range.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t9" headers="r1c1-t9">
<p><code dir="ltr">block_start</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t9 r1c2-t9">
<p>First block to process if specifying a block range. May be specified only if the object is a single table, partition, or subpartition.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t9" headers="r1c1-t9">
<p><code dir="ltr">block_end</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t9 r1c2-t9">
<p>Last block to process if specifying a block range. May be specified only if the object is a single table, partition, or subpartition. If only one of <code dir="ltr">block_start</code> or <code dir="ltr">block_end</code> is specified, then the other defaults to the first or last block in the file respectively.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t9" headers="r1c1-t9">
<p><code dir="ltr">corrupt_count</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t9 r1c2-t9">
<p>Number of corruptions reported.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7457"></a>Usage Notes</p>
<p>You may optionally specify a DBA range, partition name, or subpartition name when you want to check a portion of an object.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67551" class="refsect2"><a id="i997129"></a>
<h3 class="refsect2"><a id="sthref7458"></a>DUMP_ORPHAN_KEYS Procedure</h3>
<p>This procedure reports on index entries that point to rows in corrupt data blocks. For each such index entry encountered, a row is inserted into the specified orphan table.</p>
<p>If the repair table is specified, then any corrupt blocks associated with the base table are handled in addition to all data blocks that are marked software corrupt. Otherwise, only blocks that are marked corrupt are handled.</p>
<p>This information may be useful for rebuilding lost rows in the table and for diagnostic purposes.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7459"></a>Syntax</p>
<pre dir="ltr">DBMS_REPAIR.DUMP_ORPHAN_KEYS (
   schema_name       IN  VARCHAR2,
   object_name       IN  VARCHAR2,
   partition_name    IN  VARCHAR2       DEFAULT NULL,
   object_type       IN  BINARY_INTEGER DEFAULT INDEX_OBJECT,
   repair_table_name IN  VARCHAR2       DEFAULT &#39;REPAIR_TABLE&#39;,
   orphan_table_name IN  VARCHAR2       DEFAULT &#39;ORPHAN_KEYS_TABLE&#39;,
   flags             IN  BINARY_INTEGER DEFAULT NULL,
   key_count         OUT BINARY_INTEGER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7460"></a>Parameters</p>
<div id="ARPLS67552" class="tblformal">
<p class="titleintable"><a id="sthref7461"></a><a id="sthref7462"></a>Table 124-6 DUMP_ORPHAN_KEYS Procedure Parameters</p>
<table class="cellalignment4330" title="DUMP_ORPHAN_KEYS Procedure Parameters" summary="This table describes Parameters used by the DBMS_REPAIR.DUMP_ORPHAN_KEYS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t10">Parameter</th>
<th class="cellalignment4328" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t10 r1c2-t10">
<p>Schema name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t10" headers="r1c1-t10">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t10 r1c2-t10">
<p>Object name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t10" headers="r1c1-t10">
<p><code dir="ltr">partition_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t10 r1c2-t10">
<p>Partition or subpartition name to be processed.</p>
<p>If this is a partitioned object, and if <code dir="ltr">partition_name</code> is not specified, then all partitions and subpartitions are processed. If this is a partitioned object, and if the specified partition contains subpartitions, then all subpartitions are processed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t10" headers="r1c1-t10">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t10 r1c2-t10">
<p>Type of the object to be processed. The default is <code dir="ltr">INDEX_OBJECT</code></p>
<p>See <a href="#i1000683">&#34;Constants&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t10" headers="r1c1-t10">
<p><code dir="ltr">repair_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t10 r1c2-t10">
<p>Name of the repair table that has information regarding corrupt blocks in the base table.</p>
<p>The specified table must exist in the <code dir="ltr">SYS</code> schema. The <code dir="ltr">ADMIN_TABLES</code> Procedure is used to create the table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t10" headers="r1c1-t10">
<p><code dir="ltr">orphan_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t10 r1c2-t10">
<p>Name of the orphan key table to populate with information regarding each index entry that refers to a row in a corrupt data block.</p>
<p>The specified table must exist in the <code dir="ltr">SYS</code> schema. The <code dir="ltr">ADMIN_TABLES</code> Procedure is used to create the table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t10" headers="r1c1-t10">
<p><code dir="ltr">flags</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t10 r1c2-t10">
<p>Reserved for future use.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t10" headers="r1c1-t10">
<p><code dir="ltr">key_count</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t10 r1c2-t10">
<p>Number of index entries processed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67553" class="refsect2"><a id="CHDGBBEG"></a>
<h3 class="refsect2"><a id="sthref7463"></a>FIX_CORRUPT_BLOCKS Procedure</h3>
<p>This procedure fixes the corrupt blocks in specified objects based on information in the repair table that was previously generated by the <a href="#i997050">CHECK_OBJECT Procedure</a>.</p>
<p>Prior to effecting any change to a block, the block is checked to ensure the block is still corrupt. Corrupt blocks are repaired by marking the block software corrupt. When a repair is effected, the associated row in the repair table is updated with a fix timestamp.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7464"></a>Syntax</p>
<pre dir="ltr">DBMS_REPAIR.FIX_CORRUPT_BLOCKS (
   schema_name       IN  VARCHAR2,
   object_name       IN  VARCHAR2,
   partition_name    IN  VARCHAR2       DEFAULT NULL, 
   object_type       IN  BINARY_INTEGER DEFAULT TABLE_OBJECT,
   repair_table_name IN  VARCHAR2       DEFAULT &#39;REPAIR_TABLE&#39;,
   flags             IN  BINARY_INTEGER DEFAULT NULL,
   fix_count         OUT BINARY_INTEGER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7465"></a>Parameters</p>
<div id="ARPLS67554" class="tblformal">
<p class="titleintable"><a id="sthref7466"></a><a id="sthref7467"></a>Table 124-7 FIX_CORRUPT_BLOCKS Procedure Parameters</p>
<table class="cellalignment4330" title="FIX_CORRUPT_BLOCKS Procedure Parameters" summary="This table describes Parameters used by the DBMS_REPAIR.FIX_CORRUPT_BLOCKS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t11">Parameter</th>
<th class="cellalignment4328" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t11 r1c2-t11">
<p>Schema name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t11 r1c2-t11">
<p>Name of the object with corrupt blocks to be fixed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t11" headers="r1c1-t11">
<p><code dir="ltr">partition_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t11 r1c2-t11">
<p>Partition or subpartition name to be processed.</p>
<p>If this is a partitioned object, and if <code dir="ltr">partition_name</code> is not specified, then all partitions and subpartitions are processed. If this is a partitioned object, and if the specified partition contains subpartitions, then all subpartitions are processed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t11" headers="r1c1-t11">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t11 r1c2-t11">
<p>Type of the object to be processed. This must be either <code dir="ltr">TABLE_OBJECT</code> (default) or <code dir="ltr">INDEX_OBJECT</code>.</p>
<p>See <a href="#i1000683">&#34;Constants&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t11" headers="r1c1-t11">
<p><code dir="ltr">repair_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t11 r1c2-t11">
<p>Name of the repair table with the repair directives.</p>
<p>Must exist in the <code dir="ltr">SYS</code> schema.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t11" headers="r1c1-t11">
<p><code dir="ltr">flags</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t11 r1c2-t11">
<p>Reserved for future use.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t11" headers="r1c1-t11">
<p><code dir="ltr">fix_count</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t11 r1c2-t11">
<p>Number of blocks fixed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67555" class="refsect2"><a id="CHDEACBI"></a>
<h3 class="refsect2"><a id="sthref7468"></a>ONLINE_INDEX_CLEAN Function</h3>
<p>This function performs a manual cleanup of failed or interrupted online index builds or rebuilds. This action is also performed periodically by SMON, regardless of user-initiated cleanup.</p>
<p>This function returns <code dir="ltr">TRUE</code> if all indexes specified were cleaned up and <code dir="ltr">FALSE</code> if one or more indexes could not be cleaned up.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7469"></a>Syntax</p>
<pre dir="ltr">DBMS_REPAIR.ONLINE_INDEX_CLEAN (
   object_id      IN BINARY_INTEGER DEFAULT ALL_INDEX_ID,
   wait_for_lock  IN BINARY_INTEGER DEFAULT LOCK_WAIT)
 RETURN BOOLEAN;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7470"></a>Parameters</p>
<div id="ARPLS67556" class="tblformal">
<p class="titleintable"><a id="sthref7471"></a><a id="sthref7472"></a>Table 124-8 ONLINE_INDEX_CLEAN Function Parameters</p>
<table class="cellalignment4330" title="ONLINE_INDEX_CLEAN Function Parameters" summary="This table describes Parameters used by the DBMS_REPAIR.ONLINE_INDEX_CLEAN subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t12">Parameter</th>
<th class="cellalignment4328" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">object_id</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t12 r1c2-t12">
<p>Object id of index to be cleaned up. The default cleans up all object ids that qualify.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">wait_for_lock</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t12 r1c2-t12">
<p>This parameter specifies whether to try getting DML locks on underlying table [[sub]partition] object. The default retries up to an internal retry limit, after which the lock get will give up. If <code dir="ltr">LOCK_NOWAIT</code> is specified, then the lock get does not retry.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67557" class="refsect2"><a id="i997264"></a>
<h3 class="refsect2"><a id="sthref7473"></a>REBUILD_FREELISTS Procedure</h3>
<p>This procedure rebuilds the freelists for the specified object. All free blocks are placed on the master freelist. All other freelists are zeroed.</p>
<p>If the object has multiple freelist groups, then the free blocks are distributed among all freelists, allocating to the different groups in round-robin fashion.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7474"></a>Syntax</p>
<pre dir="ltr">DBMS_REPAIR.REBUILD_FREELISTS (
   schema_name    IN VARCHAR2,   
   object_name    IN  VARCHAR2,
   partition_name IN VARCHAR2 DEFAULT NULL,
   object_type    IN BINARY_INTEGER DEFAULT TABLE_OBJECT);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7475"></a>Parameters</p>
<div id="ARPLS67558" class="tblformal">
<p class="titleintable"><a id="sthref7476"></a><a id="sthref7477"></a>Table 124-9 REBUILD_FREELISTS Procedure Parameters</p>
<table class="cellalignment4330" title="REBUILD_FREELISTS Procedure Parameters" summary="This table describes Parameters used by the DBMS_REPAIR.REBUILD_FREELISTS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t13">Parameter</th>
<th class="cellalignment4328" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t13 r1c2-t13">
<p>Schema name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t13 r1c2-t13">
<p>Name of the object whose freelists are to be rebuilt.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t13" headers="r1c1-t13">
<p><code dir="ltr">partition_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t13 r1c2-t13">
<p>Partition or subpartition name whose freelists are to be rebuilt.</p>
<p>If this is a partitioned object, and partition_name is not specified, then all partitions and subpartitions are processed. If this is a partitioned object, and the specified partition contains subpartitions, then all subpartitions are processed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t13" headers="r1c1-t13">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t13 r1c2-t13">
<p>Type of the object to be processed. This must be either <code dir="ltr">TABLE_OBJECT</code> (default) or <code dir="ltr">INDEX_OBJECT</code>.</p>
<p>See<a href="#i1000683">&#34;Constants&#34;</a>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67559" class="refsect2"><a id="i997375"></a>
<h3 class="refsect2"><a id="sthref7478"></a>SEGMENT_FIX_STATUS Procedure</h3>
<p>With this procedure you can fix the corrupted state of a bitmap entry. The procedure either recalculates the state based on the current contents of the corresponding block or sets the state to a specific value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7479"></a>Syntax</p>
<pre dir="ltr">DBMS_REPAIR.SEGMENT_FIX_STATUS (
   segment_owner   IN VARCHAR2,
   segment_name    IN VARCHAR2,
   segment_type    IN BINARY_INTEGER DEFAULT TABLE_OBJECT,
   file_number     IN BINARY_INTEGER DEFAULT NULL,
   block_number    IN BINARY_INTEGER DEFAULT NULL,
   status_value    IN BINARY_INTEGER DEFAULT NULL,
   partition_name  IN VARCHAR2 DEFAULT NULL,);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7480"></a>Parameters</p>
<div id="ARPLS67560" class="tblformal">
<p class="titleintable"><a id="sthref7481"></a><a id="sthref7482"></a>Table 124-10 SEGMENT_FIX_STATUS Procedure Parameters</p>
<table class="cellalignment4330" title="SEGMENT_FIX_STATUS Procedure Parameters" summary="This table describes Parameters used by the DBMS_REPAIR.SEGMENT_FIX_STATUS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t14">Parameter</th>
<th class="cellalignment4328" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">schema_owner</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t14 r1c2-t14">
<p>Schema name of the segment.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t14" headers="r1c1-t14">
<p><code dir="ltr">segment_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t14 r1c2-t14">
<p>Segment name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t14" headers="r1c1-t14">
<p><code dir="ltr">partition_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t14 r1c2-t14">
<p>Optional. Name of an individual partition. <code dir="ltr">NULL</code> for nonpartitioned objects. Default is <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t14" headers="r1c1-t14">
<p><code dir="ltr">segment_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t14 r1c2-t14">
<p>Optional Type of the segment (for example, <code dir="ltr">TABLE_OBJECT</code> or <code dir="ltr">INDEX_OBJECT</code>). Default is <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t14" headers="r1c1-t14">
<p><code dir="ltr">file_number</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t14 r1c2-t14">
<p>(optional) The tablespace-relative file number of the data block whose status has to be fixed. If omitted, all the blocks in the segment will be checked for state correctness and fixed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t14" headers="r1c1-t14">
<p><code dir="ltr">block_number</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t14 r1c2-t14">
<p>(optional) The file-relative block number of the data block whose status has to be fixed. If omitted, all the blocks in the segment will be checked for state correctness and fixed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t14" headers="r1c1-t14">
<p><code dir="ltr">status_value</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t14 r1c2-t14">
<p>(optional) The value to which the block status described by the <code dir="ltr">file_number</code> and <code dir="ltr">block_number</code> will be set. If omitted, the status will be set based on the current state of the block. This is almost always the case, but if there is a bug in the calculation algorithm, the value can be set manually. Status values:</p>
<ul>
<li>
<p>1 = block is full</p>
</li>
<li>
<p>2 = block is 0-25% free</p>
</li>
<li>
<p>3 = block is 25-50% free</p>
</li>
<li>
<p>4 = block is 50-75% free</p>
</li>
<li>
<p>5 = block is 75-100% free</p>
</li>
</ul>
<p>The status for bitmap blocks, segment headers, and extent map blocks cannot be altered. The status for blocks in a fixed hash area cannot be altered. For index blocks, there are only two possible states: 1 = block is full and 3 = block has free space.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67561" class="refsect2"><a id="i1000167"></a>
<h3 class="refsect2"><a id="sthref7483"></a>SKIP_CORRUPT_BLOCKS Procedure</h3>
<p>This procedure enables or disables the skipping of corrupt blocks during index and table scans of the specified object.</p>
<p>When the object is a table, skip applies to the table and its indexes. When the object is a cluster, it applies to all of the tables in the cluster, and their respective indexes.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When Oracle performs an index range scan on a corrupt index after DBMS_REPAIR.SKIP_CORRUPT_BLOCKS has been set for the base table, corrupt branch blocks and root blocks are not skipped. Only corrupt non-root leaf blocks are skipped.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7484"></a>Syntax</p>
<pre dir="ltr">DBMS_REPAIR.SKIP_CORRUPT_BLOCKS (
   schema_name  IN VARCHAR2,
   object_name  IN VARCHAR2,
   object_type  IN BINARY_INTEGER DEFAULT TABLE_OBJECT,
   flags        IN BINARY_INTEGER DEFAULT SKIP_FLAG);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7485"></a>Parameters</p>
<div id="ARPLS67562" class="tblformal">
<p class="titleintable"><a id="sthref7486"></a><a id="sthref7487"></a>Table 124-11 SKIP_CORRUPT_BLOCKS Procedure Parameters</p>
<table class="cellalignment4330" title="SKIP_CORRUPT_BLOCKS Procedure Parameters" summary="This table describes Parameters used by the DBMS_REPAIR.SSKIP_CORRUPT_BLOCKS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t16">Parameter</th>
<th class="cellalignment4328" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t16 r1c2-t16">
<p>Schema name of the object to be processed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t16" headers="r1c1-t16">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t16 r1c2-t16">
<p>Name of the object.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t16" headers="r1c1-t16">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t16 r1c2-t16">
<p>Type of the object to be processed. This must be either <code dir="ltr">TABLE_OBJECT</code> (default) or <code dir="ltr">CLUSTER_OBJECT</code>.</p>
<p>See <a href="#i1000683">&#34;Constants&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t16" headers="r1c1-t16">
<p><code dir="ltr">flags</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t16 r1c2-t16">
<p>If <code dir="ltr">SKIP_FLAG</code> is specified, then it turns on the skip of software corrupt blocks for the object during index and table scans. If <code dir="ltr">NOSKIP_FLAG</code> is specified, then scans that encounter software corrupt blocks return an <code dir="ltr">ORA</code>-<code dir="ltr">1578</code>.</p>
<p>See<a href="#i1000683">&#34;Constants&#34;</a>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_refrsh.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_repcat.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>