<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2323"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_REDEFINITION"></a><title>DBMS_REDEFINITION</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:28Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_redact.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_refrsh.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">126/290</span> <!-- End Header -->
<div id="ARPLS042" class="chapter"><a id="CBBJJAIF"></a>
<h1 class="chapter"><span class="secnum">122</span> DBMS_REDEFINITION</h1>
<p>The <code dir="ltr"><a id="sthref7382"></a>DBMS_REDEFINITION</code> package provides an interface to perform an online redefinition of tables.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a class="olink ADMIN01514" href="../ADMIN/tables.htm#ADMIN01514"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about online redefinition of tables</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CBBFDJBC">Using DBMS_REDEFINITION</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
<li>
<p>Operational Notes</p>
</li>
</ul>
</li>
<li>
<p><a href="#i998265">Summary of DBMS_REDEFINITION Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CBBFDJBC"></a>
<div id="ARPLS67511" class="refsect1">
<h2 class="refsect1">Using DBMS_REDEFINITION</h2>
<ul>
<li>
<p><a href="#i1001131">Overview</a></p>
</li>
<li>
<p><a href="#CHDGCJJI">Security Model</a></p>
</li>
<li>
<p><a href="#i1001095">Constants</a></p>
</li>
<li>
<p><a href="#i1001100">Operational Notes</a></p>
</li>
</ul>
<div id="ARPLS67512" class="refsect2"><a id="i1001131"></a>
<h3 class="refsect2">Overview</h3>
<p>To achieve online redefinition, incrementally maintainable local materialized views are used. These logs keep track of the changes to the master tables and are used by the materialized views during refresh synchronization.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS74593" class="refsect2"><a id="CHDGCJJI"></a>
<h3 class="refsect2">Security Model</h3>
<p>Subprograms in the <code dir="ltr">DBMS_REDEFINTION</code> package are run with invokers&#39; rights (with the privileges of the current user). There are two modes:</p>
<ul>
<li>
<p>In <code dir="ltr">USER</code> mode, the user who has the <code dir="ltr">CREATE TABLE</code> and <code dir="ltr">CREATE MVIEW</code> privileges may redefine a table residing in his own schema.</p>
</li>
<li>
<p>In <code dir="ltr">FULL</code> mode, the user who has the <code dir="ltr">ANY</code> privilege may redefine tables in any schema.</p>
</li>
</ul>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67513" class="refsect2"><a id="i1001095"></a>
<h3 class="refsect2">Constants</h3>
<p>The <code dir="ltr">DBMS_REDEFINITION</code> package uses the constants shown in <a href="#CHDHHBAA">Table 122-1, &#34;DBMS_REDEFINITION Constants&#34;</a>:</p>
<div id="ARPLS67514" class="tblformal">
<p class="titleintable"><a id="sthref7383"></a><a id="CHDHHBAA"></a>Table 122-1 DBMS_REDEFINITION Constants</p>
<table class="cellalignment4330" title="DBMS_REDEFINITION Constants" summary="The tables lists DBMS_REDEFINITION constants and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t3">Constant</th>
<th class="cellalignment4328" id="r1c2-t3">Type</th>
<th class="cellalignment4328" id="r1c3-t3">Value</th>
<th class="cellalignment4328" id="r1c4-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c3-t3">
<p><code dir="ltr">3</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c4-t3">
<p>Used to specify that dependent object type is a constraint</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c3-t3">
<p><code dir="ltr">2</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c4-t3">
<p>Used to specify that dependent object type is a index</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_MVLOG</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c3-t3">
<p><code dir="ltr">10</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c4-t3">
<p>Used to (un)register a materialized view log, as a dependent object of the table, through the <a href="#i998995">REGISTER_DEPENDENT_OBJECT Procedure</a>and the <a href="#CBBHCDDC">UNREGISTER_DEPENDENT_OBJECT Procedure</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_ORIG_PARAMS</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c3-t3">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c4-t3">
<p>Used to specify that indexes should be cloned with their original storage parameters</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_TRIGGER</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c3-t3">
<p><code dir="ltr">4</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c4-t3">
<p>Used to specify that dependent object type is a trigger</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_USE_PK</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t3 r1c2-t3">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t3 r1c3-t3">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t3 r1c4-t3">
<p>Used to indicate that the redefinition should be done using primary keys or pseudo-primary keys (unique keys with all component columns having not-<code dir="ltr">NULL</code> constraints)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_USE_ROWID</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t3 r1c2-t3">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t3 r1c3-t3">
<p><code dir="ltr">2</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t3 r1c4-t3">
<p>Used to indicate that the redefinition should be done using rowids</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_VPD_AUTO</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t3 r1c2-t3">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t3 r1c3-t3">
<p><code dir="ltr">2</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t3 r1c4-t3">
<p>Used to indicate to copy VPD policies automatically</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_VPD_MANUAL</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t3 r1c2-t3">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t3 r1c3-t3">
<p><code dir="ltr">4</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t3 r1c4-t3">
<p>Used to indicate to copy VPD policies manually</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CONS_VPD_NONE</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t3 r1c2-t3">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t3 r1c3-t3">
<p>1</p>
</td>
<td class="cellalignment4329" headers="r11c1-t3 r1c4-t3">
<p>Used to indicate that there are no VPD policies on the original table</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67515" class="refsect2"><a id="i1001100"></a>
<h3 class="refsect2">Operational Notes</h3>
<ul>
<li>
<p><code dir="ltr">CONS_USE_PK</code> and <code dir="ltr">CONS_USE_ROWID</code> are constants used as input to the &#34;options_flag&#34; parameter in both the <a href="#CBBHFJAI">START_REDEF_TABLE Procedure</a> and <a href="#i998726">CAN_REDEF_TABLE Procedure</a>. <code dir="ltr">CONS_USE_ROWID</code> is used to indicate that the redefinition should be done using rowids while <code dir="ltr">CONS_USE_PK</code> implies that the redefinition should be done using primary keys or pseudo-primary keys (which are unique keys with all component columns having <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraints).</p>
</li>
<li>
<p><code dir="ltr">CONS_INDEX</code>, <code dir="ltr">CONS_MVLOG</code>,<code dir="ltr">CONS_TRIGGER</code> and <code dir="ltr">CONS_CONSTRAINT</code> are used to specify the type of the dependent object being (un)registered in <a href="#i998995">REGISTER_DEPENDENT_OBJECT Procedure</a> and <a href="#CBBHCDDC">UNREGISTER_DEPENDENT_OBJECT Procedure</a> (parameter &#34;<code dir="ltr">dep_type</code>&#34;).</p>
<p><code dir="ltr">CONS_INDEX</code> ==&gt; dependent object is of type <code dir="ltr">INDEX</code></p>
<p><code dir="ltr">CONS_TRIGGER</code> ==&gt; dependent object is of type <code dir="ltr">TRIGGER</code></p>
<p><code dir="ltr">CONS_CONSTRAINT</code>==&gt; dependent object type is of type <code dir="ltr">CONSTRAINT</code></p>
<p><code dir="ltr">CONS_MVLOG</code> ==&gt; dependent object is of type <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> <code dir="ltr">LOG</code></p>
</li>
<li>
<p><code dir="ltr">CONS_ORIG_PARAMS</code> as used as input to the &#34;<code dir="ltr">copy_indexes</code>&#34; parameter in <a href="#i999656">COPY_TABLE_DEPENDENTS Procedure</a>. Using this parameter implies that the indexes on the original table be copied onto the interim table using the same storage parameters as that of the original index.</p>
</li>
</ul>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67516" class="refsect2"><a id="sthref7384"></a>
<h3 class="refsect2">Rules and Limits</h3>
<p>For information about various rules and limits that apply to implementation of this package, see the <a class="olink ADMIN01510" href="../ADMIN/tables.htm#ADMIN01510"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a>.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i998265"></a>
<div id="ARPLS67517" class="refsect1">
<h2 class="refsect1">Summary of DBMS_REDEFINITION Subprograms</h2>
<div id="ARPLS67518" class="tblformal">
<p class="titleintable"><a id="sthref7385"></a><a id="sthref7386"></a>Table 122-2 DBMS_REDEFINITION Package Subprograms</p>
<table class="cellalignment4330" title="DBMS_REDEFINITION Package Subprograms" summary="This table lists the DBMS_REDEFINITION subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i998327">ABORT_REDEF_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p>Cleans up errors that occur during the redefinition process and removes all temporary objects created by the reorganization process</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#i998726">CAN_REDEF_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<p>Determines if a given table can be redefined online</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#i999656">COPY_TABLE_DEPENDENTS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c2-t4">
<p>Copies the dependent objects of the original table onto the interim table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#i998731">FINISH_REDEF_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c2-t4">
<p>Completes the redefinition process</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#CHDDDDFG">REDEF_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t4 r1c2-t4">
<p>Provides a single push-button interface that integrates several redefinition steps</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#i998995">REGISTER_DEPENDENT_OBJECT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t4 r1c2-t4">
<p>Registers a dependent object (index, trigger, constraint or materialized view log) on the table being redefined and the corresponding dependent object on the interim table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#CBBHFJAI">START_REDEF_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t4 r1c2-t4">
<p>Initiates the redefinition process</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#i998432">SYNC_INTERIM_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r9c1-t4 r1c2-t4">
<p>Keeps the interim table synchronized with the original table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#CBBHCDDC">UNREGISTER_DEPENDENT_OBJECT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r10c1-t4 r1c2-t4">
<p>Unregisters a dependent object (index, trigger, constraint or materialized view log) on the table being redefined and the corresponding dependent object on the interim table</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS67519" class="refsect2"><a id="i998327"></a>
<h3 class="refsect2"><a id="sthref7387"></a>ABORT_REDEF_TABLE Procedure</h3>
<p>This procedure cleans up errors that occur during the redefinition process. This procedure can also be used to terminate the redefinition process any time after the <a href="#CBBHFJAI">START_REDEF_TABLE Procedure</a> has been called and before the <a href="#i998731">FINISH_REDEF_TABLE Procedure</a> is called. This process will remove the temporary objects that are created by the redefinition process such as materialized view logs.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7388"></a>Syntax</p>
<pre dir="ltr">DBMS_REDEFINITION.ABORT_REDEF_TABLE (
   uname                   IN  VARCHAR2,
   orig_table              IN  VARCHAR2,
   int_table               IN  VARCHAR2,
   part_name               IN  VARCHAR2 := NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7389"></a>Parameters</p>
<div id="ARPLS67520" class="tblformal">
<p class="titleintable"><a id="sthref7390"></a><a id="sthref7391"></a>Table 122-3 ABORT_REDEF_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="ABORT_REDEF_TABLE Procedure Parameters" summary="This table describes Parameters used by the DBMS_REDEFINITION.ABORT_REDEF_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5">Parameter</th>
<th class="cellalignment4328" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">uname</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p>Schema name of the tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">orig_table</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c2-t5">
<p>Name of the table to be redefined</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">int_table</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t5 r1c2-t5">
<p>Name of the interim table. Can take a comma-delimited list of interim table names.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t5" headers="r1c1-t5">
<p><code dir="ltr">part_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t5 r1c2-t5">
<p>Name of the partition being redefined. If redefining only a single partition of a table, specify the partition name in this parameter. <code dir="ltr">NULL</code> implies the entire table is being redefined. Can take a comma-delimited list of partition names to be redefined.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67521" class="refsect2"><a id="i998726"></a>
<h3 class="refsect2"><a id="sthref7392"></a>CAN_REDEF_TABLE Procedure</h3>
<p>This procedure determines if a given table can be redefined online. This is the first step of the online redefinition process. If the table is not a candidate for online redefinition, an error message is raised.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7393"></a>Syntax</p>
<pre dir="ltr">DBMS_REDEFINITION.CAN_REDEF_TABLE (
   uname         IN  VARCHAR2,
   tname        IN  VARCHAR2,
   options_flag  IN  PLS_INTEGER := 1,
   part_name     IN  VARCHAR2 := NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7394"></a>Parameters</p>
<div id="ARPLS67522" class="tblformal">
<p class="titleintable"><a id="sthref7395"></a><a id="sthref7396"></a>Table 122-4 CAN_REDEF_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="CAN_REDEF_TABLE Procedure Parameters" summary="This table describes Parameters used by the DBMS_REDEFINITION.CAN_REDEF_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t6">Parameter</th>
<th class="cellalignment4328" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">uname</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c2-t6">
<p>Schema name of the table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t6" headers="r1c1-t6">
<p><code dir="ltr">tname</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c2-t6">
<p>Name of the table to be re-organized</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t6" headers="r1c1-t6">
<p><code dir="ltr">options_flag</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t6 r1c2-t6">
<p>Indicates the type of redefinition method to use.</p>
<ul>
<li>
<p>If <code dir="ltr">dbms_redefinition.cons_use_pk</code>, the redefinition is done using primary keys or pseudo-primary keys (unique keys with all component columns having <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraints). The default method of redefinition is using primary keys.</p>
</li>
<li>
<p>If <code dir="ltr">dbms_redefinition.cons_use_rowid</code>, the redefinition is done using rowids.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t6" headers="r1c1-t6">
<p><code dir="ltr">part_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t6 r1c2-t6">
<p>Name of the partition being redefined. If redefining only a single partition of a table, specify the partition name in this parameter. <code dir="ltr">NULL</code> implies the entire table is being redefined.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7397"></a>Exceptions</p>
<p>If the table is not a candidate for online redefinition, an error message is raised.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67523" class="refsect2"><a id="i999656"></a>
<h3 class="refsect2"><a id="sthref7398"></a>COPY_TABLE_DEPENDENTS Procedure</h3>
<p>This procedure clones the dependent objects of the table being redefined onto the interim table and registers the dependent objects. This procedure does not clone the already registered dependent objects.</p>
<p>This subprogram is used to clone the dependent objects like grants, triggers, constraints and privileges from the table being redefined to the interim table (which represents the post-redefinition table).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7399"></a>Syntax</p>
<pre dir="ltr">DBMS_REDEFINITION.COPY_TABLE_DEPENDENTS(
   uname                    IN  VARCHAR2,
   orig_table               IN  VARCHAR2,
   int_table                IN  VARCHAR2,
   copy_indexes             IN  PLS_INTEGER := 1,
   copy_triggers            IN  BOOLEAN     := TRUE,
   copy_constraints         IN  BOOLEAN     := TRUE,
   copy_privileges          IN  BOOLEAN     := TRUE,
   ignore_errors            IN  BOOLEAN     := FALSE,
   num_errors               OUT PLS_INTEGER,
   copy_statistics          IN  BOOLEAN     := FALSE, 
   copy_mvlog               IN  BOOLEAN     := FALSE); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7400"></a>Parameters</p>
<div id="ARPLS67524" class="tblformal">
<p class="titleintable"><a id="sthref7401"></a><a id="sthref7402"></a>Table 122-5 COPY_TABLE_DEPENDENTS Procedure Parameters</p>
<table class="cellalignment4330" title="COPY_TABLE_DEPENDENTS Procedure Parameters" summary="This table describes Parameters used by the DBMS_REDEFINITION.COPY_TABLE_DEPENDENTS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t7">Parameter</th>
<th class="cellalignment4328" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">uname</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t7 r1c2-t7">
<p>Schema name of the tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">orig_table</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t7 r1c2-t7">
<p>Name of the table being redefined</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t7" headers="r1c1-t7">
<p><code dir="ltr">int_table</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t7 r1c2-t7">
<p>Name of the interim table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t7" headers="r1c1-t7">
<p><code dir="ltr">copy_indexes</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t7 r1c2-t7">
<p>Flag indicating whether to copy the indexes</p>
<ul>
<li>
<p><code dir="ltr">0</code> - do not copy any index</p>
</li>
<li>
<p><code dir="ltr">dbms_redefinition</code>.<code dir="ltr">cons_orig_params</code> &ndash; copy the indexes using the physical parameters of the source indexes</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t7" headers="r1c1-t7">
<p><code dir="ltr">copy_triggers</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t7 r1c2-t7">
<p><code dir="ltr">TRUE</code> = clone triggers, <code dir="ltr">FALSE</code> = do nothing</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t7" headers="r1c1-t7">
<p><code dir="ltr">copy_constraints</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t7 r1c2-t7">
<p><code dir="ltr">TRUE</code> = clone constraints, <code dir="ltr">FALSE</code> = do nothing. If compatibility setting is 10.2 or higher, then clone <code dir="ltr">CHECK</code> and <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraints</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t7" headers="r1c1-t7">
<p><code dir="ltr">copy_privileges</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t7 r1c2-t7">
<p><code dir="ltr">TRUE</code> = clone privileges, <code dir="ltr">FALSE</code> = do nothing</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t7" headers="r1c1-t7">
<p><code dir="ltr">ignore_errors</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t7 r1c2-t7">
<p><code dir="ltr">TRUE</code> = if an error occurs while cloning a particular dependent object, then skip that object and continue cloning other dependent objects. <code dir="ltr">FALSE</code> = that the cloning process should stop upon encountering an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t7" headers="r1c1-t7">
<p><code dir="ltr">num_errors</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t7 r1c2-t7">
<p>Number of errors that occurred while cloning dependent objects</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t7" headers="r1c1-t7">
<p><code dir="ltr">copy_statistics</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t7 r1c2-t7">
<p><code dir="ltr">TRUE</code> = copy statistics, <code dir="ltr">FALSE</code> = do nothing</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t7" headers="r1c1-t7">
<p><code dir="ltr">copy_mvlog</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t7 r1c2-t7">
<p><code dir="ltr">TRUE</code> = copy materialized view log, <code dir="ltr">FALSE</code> = do nothing</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7403"></a>Usage Notes</p>
<ul>
<li>
<p>The user must check the column <code dir="ltr">num_errors</code> before proceeding to ensure that no errors occurred during the cloning of the objects.</p>
</li>
<li>
<p>In case of an error, the user should fix the cause of the error and call the <a href="#i999656">COPY_TABLE_DEPENDENTS Procedure</a> again to clone the dependent object. Alternatively the user can manually clone the dependent object and then register the manually cloned dependent object using the <a href="#i998995">REGISTER_DEPENDENT_OBJECT Procedure</a>.</p>
</li>
<li>
<p>All cloned referential constraints involving the interim tables will be created disabled (they will be automatically enabled after the redefinition) and all triggers on interim tables will not fire till the redefinition is completed. After the redefinition is complete, the cloned objects will be renamed to the corresponding pre-redefinition names of the objects (from which they were cloned from).</p>
</li>
<li>
<p>It is the user&#39;s responsibility that the cloned dependent objects are unaffected by the redefinition. All the triggers will be cloned and it is the user&#39;s responsibility that the cloned triggers are unaffected by the redefinition.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67525" class="refsect2"><a id="i998731"></a>
<h3 class="refsect2"><a id="sthref7404"></a>FINISH_REDEF_TABLE Procedure</h3>
<p>This procedure completes the redefinition process. Before this step, you can create new indexes, triggers, grants, and constraints on the interim table. The referential constraints involving the interim table must be disabled. After completing this step, the original table is redefined with the attributes and data of the interim table. The original table is locked briefly during this procedure.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7405"></a>Syntax</p>
<pre dir="ltr">DBMS_REDEFINITION.FINISH_REDEF_TABLE (
   uname                   IN   VARCHAR2,
   orig_table              IN   VARCHAR2,
   int_table               IN   VARCHAR2,
   part_name               IN   VARCHAR2 := NULL,
   dml_lock_timeout        IN   PLS_INTEGER := NULL,
   continue_after_errors   IN   BOOLEAN := FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7406"></a>Parameters</p>
<div id="ARPLS67526" class="tblformal">
<p class="titleintable"><a id="sthref7407"></a><a id="sthref7408"></a>Table 122-6 FINISH_REDEF_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="FINISH_REDEF_TABLE Procedure Parameters" summary="This table describes Parameters used by the DBMS_REDEFINITION.FINISH_REDEF_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Parameters</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">uname</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>Schema name of the tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">orig_table</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t8 r1c2-t8">
<p>Name of the table to be redefined</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t8" headers="r1c1-t8">
<p><code dir="ltr">int_table</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t8 r1c2-t8">
<p>Name of the interim table. Can take a comma-delimited list of interim table names.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t8" headers="r1c1-t8">
<p><code dir="ltr">part_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t8 r1c2-t8">
<p>Name of the partition being redefined. If redefining only a single partition of a table, specify the partition name in this parameter. <code dir="ltr">NULL</code> implies the entire table is being redefined. Can take a comma-delimited list of partition names to be redefined.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t8" headers="r1c1-t8">
<p><code dir="ltr">dml_lock_timeout</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t8 r1c2-t8">
<p>Specifies the number of seconds the procedure waits for its required locks before failing. The permissible range of values for timeout is 0 to 1,000,000. The default is <code dir="ltr">NULL</code> (wait mode).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t8" headers="r1c1-t8">
<p><code dir="ltr">continue_after_errors</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t8 r1c2-t8">
<p>When redefining multiple partitions allows operation execution to continue on the next partition (applies only to batched partition redefinition)</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7409"></a>Examples</p>
<p>Wait up to 600 seconds for required locks on <code dir="ltr">SH.SALES</code>:</p>
<pre dir="ltr">EXECUTE DBMS_REDEFINITION.FINISH_REDEF_TABLE (
  &#39;SH&#39;, &#39;SALES&#39;, &#39;INT_SALES&#39;, 600);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74410" class="refsect2"><a id="CHDDDDFG"></a>
<h3 class="refsect2"><a id="sthref7410"></a>REDEF_TABLE Procedure</h3>
<p>This procedure provides a single interface that integrates several redefinition steps including the <a href="#i998726">CAN_REDEF_TABLE Procedure</a>, the <a href="#CBBHFJAI">START_REDEF_TABLE Procedure</a>, the <a href="#i999656">COPY_TABLE_DEPENDENTS Procedure</a> and the <a href="#i998731">FINISH_REDEF_TABLE Procedure</a>. This procedure can change data storage properties including tablespaces (for table, partition, subpartition, index, LOB column), compress type (for table, partition, subpartition, index, LOB column) and <code dir="ltr">STORE_AS</code> clause for the LOB column.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7411"></a>Syntax</p>
<pre dir="ltr">DBMS_REDEFINITION.REDEF_TABLE (
   uname                       IN  VARCHAR2,
   tname                       IN  VARCHAR2,    
   table_compression_type      IN  VARCHAR2 := NULL, 
   table_part_tablespace       IN  VARCHAR2 := NULL, 
   index_key_compression_type  IN  VARCHAR2 := NULL,
   index_tablespace            IN  VARCHAR2 := NULL,
   lob_compression_type        IN  VARCHAR2 := NULL,
   lob_tablespace              IN  VARCHAR2 := NULL,
   lob_store_as                IN  VARCHAR2 := NULL); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7412"></a>Parameters</p>
<div id="ARPLS74411" class="tblformal">
<p class="titleintable"><a id="sthref7413"></a><a id="sthref7414"></a>Table 122-7 REDEF_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="REDEF_TABLE Procedure Parameters" summary="This table describes Parameters used by the DBMS_REDEFINITION.REDEF_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t9">Parameter</th>
<th class="cellalignment4328" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">uname</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c2-t9">
<p>Schema name of the table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t9" headers="r1c1-t9">
<p><code dir="ltr">tname</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c2-t9">
<p>Name of the table to be redefined</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t9" headers="r1c1-t9">
<p><code dir="ltr">table_compression_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t9 r1c2-t9">
<p>Text string of the table compression clause. <code dir="ltr">NULL</code> means there is no change.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t9" headers="r1c1-t9">
<p><code dir="ltr">table_part_tablespace</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t9 r1c2-t9">
<p>Tablespace name for the entire table or partitions. <code dir="ltr">NULL</code> means there is no change.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t9" headers="r1c1-t9">
<p><code dir="ltr">index_key_compression_type</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t9 r1c2-t9">
<p>Text string of the compression clause for all indexes on the table. <code dir="ltr">NULL</code> means there is no change.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t9" headers="r1c1-t9">
<p><code dir="ltr">index_tablespace</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t9 r1c2-t9">
<p>Tablespace name for all indexes on the table. <code dir="ltr">NULL</code> means there is no change.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t9" headers="r1c1-t9">
<p><code dir="ltr">lob_compression_type</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t9 r1c2-t9">
<p>Text string of the compression clause for all LOBs in the entire table. <code dir="ltr">NULL</code> means there is no change.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t9" headers="r1c1-t9">
<p><code dir="ltr">lob_tablespace</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t9 r1c2-t9">
<p>Tablespace name for all LOBs in the table. <code dir="ltr">NULL</code> means there is no change.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t9" headers="r1c1-t9">
<p><code dir="ltr">lob_storage_as</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t9 r1c2-t9">
<p>Specifies LOB store as &#39;<code dir="ltr">SECUREFILE&#39;</code> or <code dir="ltr">&#39;BASICFILE&#39;</code>. <code dir="ltr">NULL</code> means there is no change.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7415"></a>Examples</p>
<pre dir="ltr">BEGIN
   DBMS_REDEFINITION.REDEF_TABLE(
     uname                        =&gt; &#39;TABOWNER2&#39;,
     tname                        =&gt; &#39;EMP2&#39;,
     table_compression_type       =&gt; &#39;ROW STORE COMPRESS ADVANCED&#39;,
     table_part_tablespace        =&gt; &#39;NEWTBS&#39;,
     index_key_compression_type   =&gt; &#39;COMPRESS 1&#39;,
     index_tablespace             =&gt; &#39;NEWIDXTBS&#39;,
     lob_compression_type         =&gt; &#39;COMPRESS HIGH&#39;,
     lob_tablespace               =&gt; &#39;SLOBTBS&#39;,
     lob_store_as                 =&gt; &#39;SECUREFILE&#39;);
END;
</pre></div>
<!-- class="refsubsect" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN14159" href="../ADMIN/tables.htm#ADMIN14159"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> regarding &#34;Performing Online Redefinition with the <code dir="ltr">REDEF_TABLE</code> Procedure&#34;</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67527" class="refsect2"><a id="i998995"></a>
<h3 class="refsect2"><a id="sthref7416"></a>REGISTER_DEPENDENT_OBJECT Procedure</h3>
<p>This procedure registers a dependent object (index, trigger, constraint or materialized view log) on the table being redefined and the corresponding dependent object on the interim table.</p>
<p>This can be used to have the same object on each table but with different attributes. For example: for an index, the storage and tablespace attributes could be different but the columns indexed remain the same</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7417"></a>Syntax</p>
<pre dir="ltr">DBMS_REDEFINITION.REGISTER_DEPENDENT_OBJECT(
   uname                  IN    VARCHAR2,
   orig_table             IN    VARCHAR2,
   int_table              IN    VARCHAR2,
   dep_type               IN    PLS_INTEGER,
   dep_owner              IN    VARCHAR2,
   dep_orig_name          IN    VARCHAR2,
   dep_int_name           IN    VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7418"></a>Parameters</p>
<div id="ARPLS67528" class="tblformal">
<p class="titleintable"><a id="sthref7419"></a><a id="sthref7420"></a>Table 122-8 REGISTER_DEPENDENT_OBJECT Procedure Parameters</p>
<table class="cellalignment4330" title="REGISTER_DEPENDENT_OBJECT Procedure Parameters" summary="This table describes Parameters used by the DBMS_REDEFINITION.REGISTER_DEPENDENT_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t11">Parameters</th>
<th class="cellalignment4328" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">uname</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t11 r1c2-t11">
<p>Schema name of the tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr">orig_table</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t11 r1c2-t11">
<p>Name of the table to be redefined</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t11" headers="r1c1-t11">
<p><code dir="ltr">int_table</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t11 r1c2-t11">
<p>Name of the interim table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t11" headers="r1c1-t11">
<p><code dir="ltr">dep_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t11 r1c2-t11">
<p>Type of the dependent object (see <a href="#i1001095">Constants</a> and <a href="#i1001100">Operational Notes</a>)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t11" headers="r1c1-t11">
<p><code dir="ltr">dep_owner</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t11 r1c2-t11">
<p>Owner of the dependent object</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t11" headers="r1c1-t11">
<p><code dir="ltr">dep_orig_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t11 r1c2-t11">
<p>Name of the original dependent object</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t11" headers="r1c1-t11">
<p><code dir="ltr">dep_int_name</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t11 r1c2-t11">
<p>Name of the interim dependent object</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7421"></a>Usage Notes</p>
<ul>
<li>
<p>Attempting to register an already registered object will raise an error.</p>
</li>
<li>
<p>Registering a dependent object will automatically remove that object from <code dir="ltr">DBA_REDEFINITION_ERRORS</code> if an entry exists for that object.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67529" class="refsect2"><a id="CBBHFJAI"></a>
<h3 class="refsect2"><a id="sthref7422"></a>START_REDEF_TABLE Procedure</h3>
<p>Prior to calling this procedure, you must manually create an empty interim table (in the same schema as the table to be redefined) with the desired attributes of the post-redefinition table, and then call this procedure to initiate the redefinition.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7423"></a>Syntax</p>
<pre dir="ltr">DBMS_REDEFINITION.START_REDEF_TABLE (
   uname                   IN  VARCHAR2,
   orig_table              IN  VARCHAR2,
   int_table               IN  VARCHAR2,
   col_mapping             IN  VARCHAR2 := NULL,
   options_flag            IN  BINARY_INTEGER := 1,
   orderby_cols            IN  VARCHAR2 := NULL,
   part_name               IN  VARCHAR2 := NULL,
   continue_after_errors   IN  BOOLEAN := FALSE
   copy_vpd_opt            IN  BINARY_INTEGER := CONS_VPD_NONE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7424"></a>Parameters</p>
<div id="ARPLS67530" class="tblformal">
<p class="titleintable"><a id="sthref7425"></a><a id="sthref7426"></a>Table 122-9 START_REDEF_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="START_REDEF_TABLE Procedure Parameters" summary="This table describes Parameters used by the DBMS_REDEFINITION.START_REDEF_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t12">Parameter</th>
<th class="cellalignment4328" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">uname</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t12 r1c2-t12">
<p>Schema name of the tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">orig_table</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t12 r1c2-t12">
<p>Name of the table to be redefined</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t12" headers="r1c1-t12">
<p><code dir="ltr">int_table</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t12 r1c2-t12">
<p>Name of the interim table. Can take a comma-delimited list of interim table names.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t12" headers="r1c1-t12">
<p><code dir="ltr">col_mapping</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t12 r1c2-t12">
<p>Mapping information from the columns in the original table to the columns in the interim table. (This is similar to the column list on the <code dir="ltr">SELECT</code> clause of a query.) If <code dir="ltr">NULL,</code> all the columns in the original table are selected and have the same name after redefinition.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t12" headers="r1c1-t12">
<p><code dir="ltr">options_flag</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t12 r1c2-t12">
<p>Indicates the type of redefinition method to use:</p>
<ul>
<li>
<p>If <code dir="ltr">dbms_redefinition.cons_use_pk</code>, the redefinition is done using primary keys or pseudo-primary keys (unique keys with all component columns having <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraints). The default method of redefinition is using primary keys.</p>
</li>
<li>
<p>If <code dir="ltr">dbms_redefinition.cons_use_rowid</code>, the redefinition is done using rowids.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t12" headers="r1c1-t12">
<p><code dir="ltr">orderby_cols</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t12 r1c2-t12">
<p>This optional parameter accepts the list of columns (along with the optional keyword(s) ascending/descending) with which to order by the rows during the initial instantiation of the interim table (the order by is only done for the initial instantiation and not for subsequent synchronizations)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t12" headers="r1c1-t12">
<p><code dir="ltr">part_name</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t12 r1c2-t12">
<p>Name of the partition being redefined. If redefining only a single partition of a table, specify the partition name in this parameter. <code dir="ltr">NULL</code> implies the entire table is being redefined. Can take a comma-delimited list of partition names to be redefined.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t12" headers="r1c1-t12">
<p><code dir="ltr">continue_after_errors</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t12 r1c2-t12">
<p>When redefining multiple partitions allows operation execution to continue on the next partition (applies only to batched partition redefinition)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t12" headers="r1c1-t12">
<p><code dir="ltr">copy_vpd_opt</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t12 r1c2-t12">
<p>Specifies how VPD policies are handled in online redefinition</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7427"></a>Examples</p>
<p>Start redefinition of three partitions (<code dir="ltr">sal03q1,sal03q2,sal03q3</code>) in table <code dir="ltr">&#39;STEVE.salestable&#39;</code> using three interim tables of <code dir="ltr">int_salestable1</code>, <code dir="ltr">int_salestable2</code> and <code dir="ltr">int_salestable3</code>, respectively. The operation will continue on <code dir="ltr">sal03q3</code> even if it fails on <code dir="ltr">sal03q1</code>.</p>
<pre dir="ltr">DBMS_REDEFINITION.START_REDEF_TABLE(
   uname                 =&gt; &#39;STEVE&#39;,
   orig_table            =&gt; &#39;salestable&#39;,
   int_table             =&gt; &#39;int_salestable1, int_salestable2, int_salestable3&#39;,
   col_mapping           =&gt; NULL,
   options_flag          =&gt; DBMS_REDEFINITION.CONS_USE_ROWID,
   part_name             =&gt; &#39;sal03q1,sal03q2,sal03q3&#39;,
   continue_after_errors =&gt; TRUE);
</pre>
<p>Specify to copy VPD policies automatically:</p>
<pre dir="ltr">EXECUTE DBMS_REDEFINITION.START_REDEF_TABLE (
  uname                  =&gt; &#39;SCOTT&#39;,
  orig_table             =&gt; &#39;T&#39;,
  int_table              =&gt; &#39;INT_T&#39;,
  copy_vpd_opt           =&gt; DBMS_REDEFINITION.CONS_VPD_AUTO);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67531" class="refsect2"><a id="i998432"></a>
<h3 class="refsect2"><a id="sthref7428"></a>SYNC_INTERIM_TABLE Procedure</h3>
<p>This procedure keeps the interim table synchronized with the original table.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7429"></a>Syntax</p>
<pre dir="ltr">DBMS_REDEFINITION.SYNC_INTERIM_TABLE (
   uname                   IN  VARCHAR2,
   orig_table              IN  VARCHAR2,
   int_table               IN  VARCHAR2,
   part_name               IN  VARCHAR2 := NULL,
   continue_after_errors   IN  BOOLEAN := FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7430"></a>Parameters</p>
<div id="ARPLS67532" class="tblformal">
<p class="titleintable"><a id="sthref7431"></a><a id="sthref7432"></a>Table 122-10 SYNC_INTERIM_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="SYNC_INTERIM_TABLE Procedure Parameters" summary="This table describes Parameters used by the DBMS_REDEFINITION.SYNC_INTERIM_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t13">Parameter</th>
<th class="cellalignment4328" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">uname</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t13 r1c2-t13">
<p>Schema name of the table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">orig_table</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t13 r1c2-t13">
<p>Name of the table to be redefined</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t13" headers="r1c1-t13">
<p><code dir="ltr">int_table</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t13 r1c2-t13">
<p>Name of the interim table. Can take a comma-delimited list of interim table names.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t13" headers="r1c1-t13">
<p><code dir="ltr">part_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t13 r1c2-t13">
<p>Name of the partition being redefined. If redefining only a single partition of a table, specify the partition name in this parameter. <code dir="ltr">NULL</code> implies the entire table is being redefined. Can take a comma-delimited list of partition names to be redefined.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t13" headers="r1c1-t13">
<p><code dir="ltr">continue_after_errors</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t13 r1c2-t13">
<p>When redefining multiple partitions allows operation execution to continue on the next partition (applies only to batched partition redefinition)</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7433"></a>Usage Notes</p>
<ul>
<li>
<p>This step is useful in minimizing the amount of synchronization needed to be done by the <a href="#i998731">FINISH_REDEF_TABLE Procedure</a> before completing the online redefinition.</p>
</li>
<li>
<p>This procedure can be called between long running operations (such as <code dir="ltr">CREATE</code> <code dir="ltr">INDEX</code>) on the interim table to sync it up with the data in the original table and speed up subsequent operations.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67533" class="refsect2"><a id="CBBHCDDC"></a>
<h3 class="refsect2"><a id="sthref7434"></a>UNREGISTER_DEPENDENT_OBJECT Procedure</h3>
<p>This procedure unregisters a dependent object (index, trigger, constraint or materialized view log) on the table being redefined and the corresponding dependent object on the interim table.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7435"></a>Syntax</p>
<pre dir="ltr">DBMS_REDEFINITION.UNREGISTER_DEPENDENT_OBJECT(
   uname             IN VARCHAR2,
   orig_table        IN VARCHAR2,
   int_table         IN VARCHAR2,
   dep_type          IN PLS_INTEGER,
   dep_owner         IN VARCHAR2,
   dep_orig_name     IN VARCHAR2,
   dep_int_name      IN  VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7436"></a>Parameters</p>
<div id="ARPLS67534" class="tblformal">
<p class="titleintable"><a id="sthref7437"></a><a id="sthref7438"></a>Table 122-11 UNREGISTER_DEPENDENT_OBJECT Procedure Parameters</p>
<table class="cellalignment4330" title="UNREGISTER_DEPENDENT_OBJECT Procedure Parameters" summary="This table describes Parameters used by the DBMS_REDEFINITION.UNREGISTER_DEPENDENT_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t14">Parameters</th>
<th class="cellalignment4328" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">uname</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t14 r1c2-t14">
<p>Schema name of the tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t14" headers="r1c1-t14">
<p><code dir="ltr">orig_table</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t14 r1c2-t14">
<p>Name of the table to be redefined</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t14" headers="r1c1-t14">
<p><code dir="ltr">int_table</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t14 r1c2-t14">
<p>Name of the interim table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t14" headers="r1c1-t14">
<p><code dir="ltr">dep_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t14 r1c2-t14">
<p>Type of the dependent object</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t14" headers="r1c1-t14">
<p><code dir="ltr">dep_owner</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t14 r1c2-t14">
<p>Owner of the dependent object</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t14" headers="r1c1-t14">
<p><code dir="ltr">dep_orig_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t14 r1c2-t14">
<p>Name of the original dependent object</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t14" headers="r1c1-t14">
<p><code dir="ltr">dep_int_name</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t14 r1c2-t14">
<p>Name of the interim dependent object</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_redact.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_refrsh.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>