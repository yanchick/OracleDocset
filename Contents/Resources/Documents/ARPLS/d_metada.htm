<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2295"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_METADATA"></a><title>DBMS_METADATA</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:24Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_logstdby_context.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_metadiff.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">98/290</span> <!-- End Header -->
<div id="ARPLS026" class="chapter"><a id="BGBBIEGA"></a> <a id="i1015856"></a>
<h1 class="chapter"><span class="secnum">94</span> DBMS_METADATA</h1>
<p>The <code dir="ltr">DBMS_METADATA<a id="sthref5712"></a></code> package provides a way for you to retrieve metadata from the database dictionary as XML or creation DDL and to submit the XML to re-create the object.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL" href="../SUTIL/toc.htm"><span class="italic">Oracle Database Utilities</span></a> for more information and for examples of using the Metadata API</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BGBHHHBG">Using DBMS_METADATA</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Rules and Limits</p>
</li>
</ul>
</li>
<li>
<p><a href="#BABHBADI">Data Structures - Object and Table Types</a></p>
</li>
<li>
<p><a href="#BABFBDDG">Subprogram Groupings</a></p>
<ul>
<li>
<p>Subprograms for Retrieving Multiple Objects From the Database</p>
</li>
<li>
<p>Subprograms for Submitting XML to the Database</p>
</li>
</ul>
</li>
<li>
<p><a href="#BGBDJAHH">Summary of All DBMS_METADATA Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="BGBHHHBG"></a>
<div id="ARPLS640" class="refsect1">
<h2 class="refsect1">Using DBMS_METADATA</h2>
<p>This section contains topics which relate to using the <code dir="ltr">DBMS_METADATA</code> package.</p>
<ul>
<li>
<p><a href="#i1016850">Overview</a></p>
</li>
<li>
<p><a href="#i1016867">Security Model</a></p>
</li>
<li>
<p><a href="#i1017429">Rules and Limits</a></p>
</li>
</ul>
<div id="ARPLS66865" class="refsect2"><a id="i1016850"></a>
<h3 class="refsect2">Overview</h3>
<p>You can use the <code dir="ltr">DBMS_METADATA</code> package to retrieve metadata and also to submit XML, as described in the following sections.</p>
<ul>
<li>
<p><a href="#i1017375">Retrieving Metadata</a></p>
</li>
<li>
<p><a href="#i996777">Submitting XML</a></p>
</li>
</ul>
<div id="ARPLS66866" class="refsect3"><a id="i1017375"></a>
<h4 class="refsect3">Retrieving Metadata</h4>
<p>If you are retrieving metadata, you can specify:</p>
<ul>
<li>
<p>The kind of object to be retrieved. This can be either a particular object type (such as a table, index, or procedure) or a heterogeneous collection of object types that form a logical unit (such as a database export or schema export).</p>
</li>
<li>
<p>Optional selection criteria, such as owner or name.</p>
</li>
<li>
<p>Parse items (attributes of the returned objects to be parsed and returned separately).</p>
</li>
<li>
<p>Optional transformations on the output, implemented by XSLT (Extensible Stylesheet Language Transformation) scripts. By default the output is represented in XML, but you can specify transformations (into SQL DDL, for example), which are implemented by XSLT stylesheets stored in the database or externally.</p>
</li>
</ul>
<p><code dir="ltr">DBMS_METADATA</code> provides the following retrieval interfaces:</p>
<ul>
<li>
<p>For programmatic use: <code dir="ltr">OPEN,</code> <code dir="ltr">SET_FILTER,</code> <code dir="ltr">SET_COUNT,</code> <code dir="ltr">GET_QUERY,</code> <code dir="ltr">SET_PARSE_ITEM,</code> <code dir="ltr">ADD_TRANSFORM,</code> <code dir="ltr">SET_TRANSFORM_PARAM,SET_REMAP_PARAM,</code> <code dir="ltr">FETCH_xxx,</code> and <code dir="ltr">CLOSE</code> retrieve multiple objects.</p>
</li>
<li>
<p>For use in SQL queries and for browsing: <code dir="ltr">GET_XML</code>, <code dir="ltr">GET_DDL</code> and <code dir="ltr">GET_SXML</code> return metadata for a single named object. The <code dir="ltr">GET_DEPENDENT_XML</code>, <code dir="ltr">GET_DEPENDENT_DDL</code>, <code dir="ltr">GET_GRANTED_XML</code>, and <code dir="ltr">GET_GRANTED_DDL</code> interfaces return metadata for one or more dependent or granted objects. These procedures do not support heterogeneous object types.</p>
</li>
</ul>
</div>
<!-- class="refsect3" -->
<div id="ARPLS66867" class="refsect3"><a id="i996777"></a>
<h4 class="refsect3">Submitting XML</h4>
<p>If you are submitting XML, you specify:</p>
<ul>
<li>
<p>The type of object</p>
</li>
<li>
<p>Optional transform parameters to modify the object (for example, changing the object&#39;s owner)</p>
</li>
<li>
<p>Parse items (attributes of the submitted objects to be parsed and submitted separately)</p>
</li>
<li>
<p>Whether to execute the operation or simply return the generated DDL</p>
</li>
</ul>
<p><code dir="ltr">DBMS_METADATA</code> provides a programmatic interface for submission of XML. It is comprised of the following procedures: <code dir="ltr">OPENW</code>, <code dir="ltr">ADD_TRANSFORM</code>, <code dir="ltr">SET_TRANSFORM_PARAM</code>, <code dir="ltr">SET_REMAP_PARAM</code>, <code dir="ltr">SET_PARSE_ITEM</code>, <code dir="ltr">CONVERT</code>, <code dir="ltr">PUT</code>, and <code dir="ltr">CLOSE</code>.</p>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66868" class="refsect2"><a id="i1016867"></a>
<h3 class="refsect2">Security Model</h3>
<p>The <code dir="ltr">DBMS_METADATA</code> package considers a privileged user to be one who is connected as user <code dir="ltr">SYS</code> or who has the <code dir="ltr">SELECT_CATALOG_ROLE</code> role. The object views of the Oracle metadata model implement security<a id="sthref5713"></a> as follows:</p>
<ul>
<li>
<p>Nonprivileged users can see the metadata of only their own objects.</p>
</li>
<li>
<p>Nonprivileged users can also retrieve public synonyms, system privileges granted to them, and object privileges granted to them or by them to others. This also includes privileges granted to <code dir="ltr">PUBLIC</code>.</p>
</li>
<li>
<p>If callers request objects they are not privileged to retrieve, no exception is raised; the object is simply not retrieved.</p>
</li>
<li>
<p>If nonprivileged users are granted some form of access to an object in someone else&#39;s schema, they will be able to retrieve the grant specification through the Metadata API, but not the object&#39;s actual metadata.</p>
</li>
<li>
<p>In stored procedures, functions, and definers-rights packages, roles (such as <code dir="ltr">SELECT_CATALOG_ROLE</code>) are disabled. Therefore, such a PL/SQL program can only fetch metadata for objects in its own schema. If you want to write a PL/SQL program that fetches metadata for objects in a different schema (based on the invoker&#39;s possession of <code dir="ltr">SELECT_CATALOG_ROLE</code>), you must make the program invokers-rights.</p>
</li>
<li>
<p>For all objects that have passwords, except database links (for example, users and roles), the following rules apply:</p>
<ul>
<li>
<p>A user who has the <code dir="ltr">SELECT_CATALOG_ROLE</code> can see all metadata for an object except the passwords for that object.</p>
</li>
<li>
<p>The <code dir="ltr">SYS</code> user, users who have the <code dir="ltr">EXP_FULL_DATABASE</code> role, and users who own an object can see all metadata for that object, including passwords.</p>
</li>
</ul>
</li>
<li>
<p>For database links the password is never displayed. For security reasons Oracle restricts visibility of the password value to <code dir="ltr">SYS</code> users who query the <code dir="ltr">link$.passwordx</code> column directly. Instead of the password, <code dir="ltr">DBMS_METADATA</code> returns the following invalid syntax:</p>
<pre dir="ltr">IDENTIFIED BY VALUES &#39;:1&#39;
</pre>
<p>A user who knows the password of the database link can manually replace the <code dir="ltr">:1</code> with the password.</p>
</li>
</ul>
</div>
<!-- class="refsect2" -->
<div id="ARPLS66869" class="refsect2"><a id="i1017429"></a>
<h3 class="refsect2">Rules and Limits</h3>
<p>In an Oracle Shared Server (OSS) environment, the <code dir="ltr">DBMS_METADATA</code> package must disable session migration and connection pooling. This results in any shared server process that is serving a session running the package to effectively become a default, dedicated server for the life of the session. You should ensure that sufficient shared servers are configured when the package is used and that the number of servers is not artificially limited by too small a value for the <code dir="ltr">MAX_SHARED_SERVERS</code> initialization parameter.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="BABHBADI"></a>
<div id="ARPLS66870" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Data Structures - Object and Table Types</h2>
<p>The <code dir="ltr">DBMS_METADATA</code> package defines, in the <code dir="ltr">SYS</code> schema, the following <code dir="ltr">OBJECT</code> and <code dir="ltr">TABLE</code> types.</p>
<pre dir="ltr">CREATE TYPE sys.ku$_parsed_item AS OBJECT (
  item            VARCHAR2(30),
  value           VARCHAR2(4000),
  object_row      NUMBER )
/

CREATE PUBLIC SYNONYM ku$_parsed_item FOR sys.ku$_parsed_item;

CREATE TYPE sys.ku$_parsed_items IS TABLE OF sys.ku$_parsed_item
/

CREATE PUBLIC SYNONYM ku$_parsed_items FOR sys.ku$_parsed_items;

CREATE TYPE sys.ku$_ddl AS OBJECT (
   ddlText        CLOB,
parsedItems sys.ku$_parsed_items )
/

CREATE PUBLIC SYNONYM ku$_ddl FOR sys.ku$_ddl;

CREATE TYPE sys.ku$_ddls IS TABLE OF sys.ku$_ddl
/

CREATE PUBLIC SYNONYM ku$_ddls FOR sys.ku$_ddls;

CREATE TYPE sys.ku$_multi_ddl AS OBJECT (
   object_row     NUMBER,
   ddls           sys.ku$_ddls )
/

CREATE OR REPLACE PUBLIC SYNONYM ku$_multi_ddl FOR sys.ku$_multi_ddl;

CREATE TYPE sys.ku$_multi_ddls IS TABLE OF sys.ku$_multi_ddl;
/

CREATE OR REPLACE PUBLIC SYNONYM ku$_multi_ddls FOR
                          sys.ku$_multi_ddls;

CREATE TYPE sys.ku$_ErrorLine IS OBJECT (
   errorNumber    NUMBER,
   errorText      VARCHAR2(2000) )
/

CREATE PUBLIC SYNONYM ku$_ErrorLine FOR sys.ku$_ErrorLine;

CREATE TYPE sys.ku$_ErrorLines IS TABLE OF sys.ku$_ErrorLine
/
CREATE PUBLIC SYNONYM ku$ErrorLines FOR sys.ku$_ErrorLines;

CREATE TYPE sys.ku$_SubmitResult AS OBJECT (
   ddl          sys.ku$_ddl,
   errorLines   sys.ku$_ErrorLines );
/

CREATE TYPE sys.ku$_SubmitResults IS TABLE OF sys.ku$_SubmitResult
/

CREATE PUBLIC SYNONYM ku$_SubmitResults FOR sys.ku$_SubmitResults;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The maximum size of the <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NVARCHAR2</code>, and <code dir="ltr">RAW</code> datatypes has been increased to 32 KB when the <code dir="ltr">COMPATIBLE</code> initialization parameter is set to 12.0 and the <code dir="ltr">MAX_STRING_SIZE</code> initialization parameter is set to <code dir="ltr">EXTENDED</code>. The <code dir="ltr">DBMS_METADATA</code> package supports this increased size unless the version of the metadata is earlier than 12.1.</div>
</div>
<!-- class="refsect1" -->
<a id="BABFBDDG"></a>
<div id="ARPLS66871" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Subprogram Groupings</h2>
<p>The <code dir="ltr">DBMS_METADATA</code> subprograms are used to retrieve objects from, and submit XML to, a database. Some subprograms are used for both activities, while others are used only for retrieval or only for submission.</p>
<ul>
<li>
<p><a href="#BABJGHDI">Table 94-1</a> provides a summary, in alphabetical order, of <code dir="ltr">DBMS_METADATA</code> subprograms used to retrieve multiple objects from a database.</p>
</li>
<li>
<p><a href="#BABJIFJH">Table 94-2</a> provides a summary, in alphabetical order, of <code dir="ltr">DBMS_METADATA</code> subprograms used to submit XML metadata to a database.</p>
</li>
</ul>
<div id="ARPLS66872" class="refsect2"><a id="BABBCHHJ"></a>
<h3 class="refsect2">Subprograms for Retrieving Multiple Objects From the Database</h3>
<p><a href="#BABJGHDI">Table 94-1</a> lists the subprograms used for retrieving multiple objects from the database.</p>
<div id="ARPLS66873" class="tblformal">
<p class="titleintable"><a id="sthref5714"></a><a id="BABJGHDI"></a>Table 94-1 DBMS_METADATA Subprograms for Retrieving Multiple Objects</p>
<table class="cellalignment4330" title="DBMS_METADATA Subprograms for Retrieving Multiple Objects" summary="This table lists the DBMS_METADATA subprograms for Retrieval of Multiple Objects and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i1018757">ADD_TRANSFORM Function</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p>Specifies a transform that <code dir="ltr">FETCH_xxx</code> applies to the XML representation of the retrieved objects</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#i1018912">CLOSE Procedure</a><a href="#i1018912">2</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<p>Invalidates the handle returned by <code dir="ltr">OPEN</code> and cleans up the associated state</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#i1019125">FETCH_xxx Functions and Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c2-t4">
<p>Returns metadata for objects meeting the criteria established by <code dir="ltr">OPEN</code>, <code dir="ltr">SET_FILTER</code>, <code dir="ltr">SET_COUNT</code>, <code dir="ltr">ADD_TRANSFORM</code>, and so on</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#i1019267">GET_QUERY Function</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c2-t4">
<p>Returns the text of the queries that are used by <code dir="ltr">FETCH_xxx</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#i1019414">GET_xxx Functions</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t4 r1c2-t4">
<p>Fetches the metadata for a specified object as XML, SXML, or DDL, using only a single call</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#i1018906">OPEN Function</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t4 r1c2-t4">
<p>Specifies the type of object to be retrieved, the version of its metadata, and the object model</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#i1019710">SET_COUNT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t4 r1c2-t4">
<p>Specifies the maximum number of objects to be retrieved in a single <code dir="ltr">FETCH_xxx</code> call</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#i998485">SET_FILTER Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r9c1-t4 r1c2-t4">
<p>Specifies restrictions on the objects to be retrieved, for example, the object name or schema</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#i999844">SET_PARSE_ITEM Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r10c1-t4 r1c2-t4">
<p>Enables output parsing by specifying an object attribute to be parsed and returned</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#i1000135">SET_TRANSFORM_PARAM and SET_REMAP_PARAM Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r11c1-t4 r1c2-t4">
<p>Specifies parameters to the XSLT stylesheets identified by <code dir="ltr">transform_handle</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66874" class="refsect2"><a id="BABBIDBB"></a>
<h3 class="refsect2">Subprograms for Submitting XML to the Database</h3>
<p><a href="#BABJIFJH">Table 94-2</a> lists the subprograms used for submitting XML to the database.</p>
<div id="ARPLS66875" class="tblformal">
<p class="titleintable"><a id="sthref5715"></a><a id="BABJIFJH"></a>Table 94-2 DBMS_METADATA Subprograms for Submitting XML</p>
<table class="cellalignment4330" title="DBMS_METADATA Subprograms for Submitting XML" summary="This table lists the DBMS_METADATA subprograms For Submitting XML and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><a href="#i1018757">ADD_TRANSFORM Function</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p>Specifies a transform for the XML documents</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t5" headers="r1c1-t5">
<p><a href="#i1018912">CLOSE Procedure</a><a href="#i1018912">2</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c2-t5">
<p>Closes the context opened with <code dir="ltr">OPENW</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t5" headers="r1c1-t5">
<p><a href="#i1019048">CONVERT Functions and Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t5 r1c2-t5">
<p>Converts an XML document to DDL</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t5" headers="r1c1-t5">
<p><a href="#i1019325">OPENW Function</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t5 r1c2-t5">
<p>Opens a write context</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t5" headers="r1c1-t5">
<p><a href="#i1019618">PUT Function</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t5 r1c2-t5">
<p>Submits an XML document to the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t5" headers="r1c1-t5">
<p><a href="#i999844">SET_PARSE_ITEM Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t5 r1c2-t5">
<p>Specifies an object attribute to be parsed</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t5" headers="r1c1-t5">
<p><a href="#i1000135">SET_TRANSFORM_PARAM and SET_REMAP_PARAM Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t5 r1c2-t5">
<p><code dir="ltr">SET_TRANSFORM_PARAM</code> specifies a parameter to a transform</p>
<p><code dir="ltr">SET_REMAP_PARAM</code> specifies a remapping for a transform</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="BGBDJAHH"></a>
<div id="ARPLS641" class="refsect1">
<h2 class="refsect1">Summary of All DBMS_METADATA Subprograms</h2>
<div id="ARPLS66876" class="tblformal">
<p class="titleintable"><a id="sthref5716"></a><a id="BGBGAHFF"></a>Table 94-3 DBMS_METADATA Package Subprograms</p>
<table class="cellalignment4330" title="DBMS_METADATA Package Subprograms " summary="This table lists the DBMS_METADATA subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t6">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t6" headers="r1c1-t6">
<p><a href="#i1018757">ADD_TRANSFORM Function</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c2-t6">
<p>Specifies a transform that <code dir="ltr">FETCH_xxx</code> applies to the XML representation of the retrieved objects</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t6" headers="r1c1-t6">
<p><a href="#i1018912">CLOSE Procedure</a><a href="#i1018912">2</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c2-t6">
<p>Invalidates the handle returned by <code dir="ltr">OPEN</code> and cleans up the associated state</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t6" headers="r1c1-t6">
<p><a href="#i1019048">CONVERT Functions and Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t6 r1c2-t6">
<p>Converts an XML document to DDL.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t6" headers="r1c1-t6">
<p><a href="#i1019125">FETCH_xxx Functions and Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t6 r1c2-t6">
<p>Returns metadata for objects meeting the criteria established by <code dir="ltr">OPEN</code>, <code dir="ltr">SET_FILTER</code>, <code dir="ltr">SET_COUNT</code>, <code dir="ltr">ADD_TRANSFORM</code>, and so on</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t6" headers="r1c1-t6">
<p><a href="#i1019414">GET_xxx Functions</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t6 r1c2-t6">
<p>Fetches the metadata for a specified object as XML, SXML, or DDL, using only a single call</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t6" headers="r1c1-t6">
<p><a href="#i1019267">GET_QUERY Function</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t6 r1c2-t6">
<p>Returns the text of the queries that are used by <code dir="ltr">FETCH_xxx</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t6" headers="r1c1-t6">
<p><a href="#i1018906">OPEN Function</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t6 r1c2-t6">
<p>Specifies the type of object to be retrieved, the version of its metadata, and the object model</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t6" headers="r1c1-t6">
<p><a href="#i1019325">OPENW Function</a></p>
</td>
<td class="cellalignment4329" headers="r9c1-t6 r1c2-t6">
<p>Opens a write context</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t6" headers="r1c1-t6">
<p><a href="#i1019618">PUT Function</a></p>
</td>
<td class="cellalignment4329" headers="r10c1-t6 r1c2-t6">
<p>Submits an XML document to the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t6" headers="r1c1-t6">
<p><a href="#i1019710">SET_COUNT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r11c1-t6 r1c2-t6">
<p>Specifies the maximum number of objects to be retrieved in a single <code dir="ltr">FETCH_xxx</code> call</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t6" headers="r1c1-t6">
<p><a href="#i998485">SET_FILTER Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r12c1-t6 r1c2-t6">
<p>Specifies restrictions on the objects to be retrieved, for example, the object name or schema</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t6" headers="r1c1-t6">
<p><a href="#i999844">SET_PARSE_ITEM Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r13c1-t6 r1c2-t6">
<p>Enables output parsing by specifying an object attribute to be parsed and returned</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t6" headers="r1c1-t6">
<p><a href="#i1000135">SET_TRANSFORM_PARAM and SET_REMAP_PARAM Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r14c1-t6 r1c2-t6">
<p>Specifies parameters to the XSLT stylesheets identified by <code dir="ltr">transform_handle</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS66877" class="refsect2"><a id="i1018757"></a>
<h3 class="refsect2">ADD_TRANSFORM Function<a id="sthref5717"></a></h3>
<p>This function is used for both retrieval and submission:</p>
<ul>
<li>
<p>When this procedure is used to retrieve objects, it specifies a transform that <code dir="ltr">FETCH_xxx</code> applies to the XML representation of the retrieved objects.</p>
</li>
<li>
<p>When used to submit objects, it specifies a transform that <code dir="ltr">CONVERT</code> or <code dir="ltr">PUT</code> applies to the XML representation of the submitted objects. It is possible to add more than one transform.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
<li>
<p><a href="#BABBIDBB">Subprograms for Submitting XML to the Database</a></p>
</li>
<li>
<p><a href="#i1000135">&#34;SET_TRANSFORM_PARAM and SET_REMAP_PARAM Procedures&#34;</a> for information about how to modify and customize transform output</p>
</li>
</ul>
</div>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5718"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.ADD_TRANSFORM (
   handle       IN NUMBER,
   name         IN VARCHAR2,
   encoding     IN VARCHAR2 DEFAULT NULL,
   object_type  IN VARCHAR2 DEFAULT NULL)
 RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5719"></a>Parameters</p>
<div id="ARPLS66878" class="tblhruleformal">
<p class="titleintable"><a id="sthref5720"></a><a id="BGBCDDAD"></a>Table 94-4 ADD_TRANSFORM Function Parameters</p>
<table class="cellalignment4327" title="ADD_TRANSFORM Function Parameters" summary="This table describes the parameters of the DBMS_METADATA.ADD_TRANSFORM subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Parameters</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>The handle returned from <code dir="ltr">OPEN</code> when this transform is used to retrieve objects. Or the handle returned from <code dir="ltr">OPENW</code> when this transform is used in the submission of XML metadata.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t8 r1c2-t8">
<p>The name of the transform. If the name contains a period, colon, or forward slash, it is interpreted as the URL of a user-supplied XSLT script. See <a class="olink ADXDB" href="../ADXDB/toc.htm"><span class="italic">Oracle XML DB Developer&#39;s Guide.</span></a></p>
<p>Otherwise, name designates a transform implemented by <code dir="ltr">DBMS_METADATA</code>.</p>
<p>See <a href="#BGBGACHF">Table 94-5</a> for descriptions of available transforms.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t8" headers="r1c1-t8">
<p><code dir="ltr">encoding</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t8 r1c2-t8">
<p>The name of the Globalization Support character set in which the stylesheet pointed to by name is encoded. This is only valid if name is a URL. If left NULL and the URL is external to the database, UTF-8 encoding is assumed. If left NULL and the URL is internal to the database (that is, it begins with /oradb/), then the encoding is assumed to be the database character set.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t8" headers="r1c1-t8">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t8 r1c2-t8">
<p>The definition of this parameter depends upon whether you are retrieving objects or submitting XML metadata.</p>
<ol>
<li>
<p>When you use <code dir="ltr">ADD_TRANFORM</code> to retrieve objects, the following definition of object_type applies:</p>
<p>Designates the object type to which the transform applies. (Note that this is an object type name, not a path name.) By default the transform applies to the object type of the <code dir="ltr">OPEN</code> handle. When the <code dir="ltr">OPEN</code> handle designates a heterogeneous object type, the following behavior can occur:</p>
<ul>
<li>
<p>if <code dir="ltr">object_type</code> is omitted, the transform applies to all object types within the heterogeneous collection</p>
</li>
<li>
<p>if <code dir="ltr">object_type</code> is specified, the transform only applies to that specific object type within the collection</p>
<p>If you omit this parameter you can add the DDL transform to all objects in a heterogeneous collection with a single call. If you supply this parameter, you can add a transform for a specific object type.</p>
</li>
</ul>
</li>
<li>
<p>When you use <code dir="ltr">ADD_TRANSFORM</code> in the submission of XML metadata, this parameter is the object type to which the transform applies. By default, it is the object type of the <code dir="ltr">OPENW</code> handle. Because the <code dir="ltr">OPENW</code> handle cannot designate a heterogeneous object type, the caller would normally leave this parameter NULL in the <code dir="ltr">ADD_TRANSFORM</code> calls.</p>
</li>
</ol>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<div id="ARPLS75002" class="tblhruleformal">
<p class="titleintable"><a id="sthref5721"></a><a id="BGBGACHF"></a>Table 94-5 Transforms Available on ADD_TRANSFORM Function</p>
<table class="cellalignment4327" title="Transforms Available on ADD_TRANSFORM Function" summary="List of Oracle supplied transforms" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t9">Object Type</th>
<th class="cellalignment4328" id="r1c2-t9">Transform Name</th>
<th class="cellalignment4328" id="r1c3-t9">Input Doc Type</th>
<th class="cellalignment4328" id="r1c4-t9">Output Doc Type</th>
<th class="cellalignment4328" id="r1c5-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t9" headers="r1c1-t9">
<p>All</p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c2-t9">
<p>DDL</p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c3-t9">
<p>XML</p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c4-t9">
<p>DDL</p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c5-t9">
<p>Convert XML to SQL to create the object</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t9" headers="r1c1-t9">
<p>All</p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c2-t9">
<p>MODIFY</p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c3-t9">
<p>XML</p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c4-t9">
<p>XML</p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c5-t9">
<p>Modify XML document according to transform parameters</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t9" headers="r1c1-t9">
<p>Subset</p>
</td>
<td class="cellalignment4329" headers="r4c1-t9 r1c2-t9">
<p>SXML</p>
</td>
<td class="cellalignment4329" headers="r4c1-t9 r1c3-t9">
<p>XML</p>
</td>
<td class="cellalignment4329" headers="r4c1-t9 r1c4-t9">
<p>SXML</p>
</td>
<td class="cellalignment4329" headers="r4c1-t9 r1c5-t9">
<p>Convert XML to SXML</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t9" headers="r1c1-t9">
<p>Subset</p>
</td>
<td class="cellalignment4329" headers="r5c1-t9 r1c2-t9">
<p>MODIFYSXML</p>
</td>
<td class="cellalignment4329" headers="r5c1-t9 r1c3-t9">
<p>SXML</p>
</td>
<td class="cellalignment4329" headers="r5c1-t9 r1c4-t9">
<p>SXML</p>
</td>
<td class="cellalignment4329" headers="r5c1-t9 r1c5-t9">
<p>Modify SXML document according to transform parameters</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t9" headers="r1c1-t9">
<p>Subset</p>
</td>
<td class="cellalignment4329" headers="r6c1-t9 r1c2-t9">
<p>SXMLDDL</p>
</td>
<td class="cellalignment4329" headers="r6c1-t9 r1c3-t9">
<p>SXML</p>
</td>
<td class="cellalignment4329" headers="r6c1-t9 r1c4-t9">
<p>DDL</p>
</td>
<td class="cellalignment4329" headers="r6c1-t9 r1c5-t9">
<p>Convert SXML to DDL</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t9" headers="r1c1-t9">
<p>Subset</p>
</td>
<td class="cellalignment4329" headers="r7c1-t9 r1c2-t9">
<p>ALTERXML</p>
</td>
<td class="cellalignment4329" headers="r7c1-t9 r1c3-t9">
<p>SXML difference document</p>
</td>
<td class="cellalignment4329" headers="r7c1-t9 r1c4-t9">
<p>ALTER_XML</p>
</td>
<td class="cellalignment4329" headers="r7c1-t9 r1c5-t9">
<p>Generate ALTER_XML from SXML difference document. (See the <code dir="ltr">DBMS_METADATA_DIFF</code> PL/SQL package for more information about SXML difference format.)</p>
<p>The following parameters are valid for the ALTERXML transform:</p>
<ul>
<li>
<p><code dir="ltr">XPATH</code> - The <code dir="ltr">XPATH</code> of the object being altered</p>
</li>
<li>
<p><code dir="ltr">NAME</code> - Name of the object being altered</p>
</li>
<li>
<p><code dir="ltr">ALTERABLE</code> - Affirms that the object can be altered. If the object cannot be altered, a <code dir="ltr">NOT_ALTERABLE</code> element is inserted whose value indicates the reason.</p>
</li>
<li>
<p><code dir="ltr">CLAUSE_TYPE</code> - The type of clause (for example, <code dir="ltr">ADD_COLUMN</code>)</p>
</li>
<li>
<p><code dir="ltr">COLUMN_ATTRIBUTE</code> - The attribute being modified</p>
</li>
<li>
<p><code dir="ltr">CONSTRAINT_TYPE</code> - The type of constraint (for example, <code dir="ltr">UNIQUE</code> or <code dir="ltr">PRIMARY</code>)</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t9" headers="r1c1-t9">
<p>Subset</p>
</td>
<td class="cellalignment4329" headers="r8c1-t9 r1c2-t9">
<p>ALTERDDL</p>
</td>
<td class="cellalignment4329" headers="r8c1-t9 r1c3-t9">
<p>ALTER_XML</p>
</td>
<td class="cellalignment4329" headers="r8c1-t9 r1c4-t9">
<p>ALTER_DDL</p>
</td>
<td class="cellalignment4329" headers="r8c1-t9 r1c5-t9">
<p>Convert ALTER_XML to ALTER_DDL</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5722"></a>Return Values</p>
<p>The opaque handle that is returned is used as input to <code dir="ltr">SET_TRANSFORM_PARAM</code> and <code dir="ltr">SET_REMAP_PARAM</code>. Note that this handle is different from the handle returned by <code dir="ltr">OPEN</code> or <code dir="ltr">OPENW</code>; it refers to the transform, not the set of objects to be retrieved.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5723"></a>Usage Notes</p>
<ul>
<li>
<p>With no transforms added, objects are returned by default as XML documents. You call <code dir="ltr">ADD_TRANSFORM</code> to specify the XSLT stylesheets to be used to transform the returned XML documents.</p>
</li>
<li>
<p>You can call <code dir="ltr">ADD_TRANSFORM</code> more than once to apply multiple transforms to XML documents. <code dir="ltr">T</code>ransforms are applied in the order in which they were specified, the output of the first transform being used as input to the second, and so on.</p>
</li>
<li>
<p>The output of a DDL transform is <span class="italic">not</span> an XML document. Therefore, no transform should be added after the DDL transform.</p>
</li>
<li>
<p>Each transform expects a certain format XML document as input. If the input document is unspecified, metadata XML format is assumed.</p>
</li>
<li>
<p>When the ALTERXML transform is used, parse items are returned in a <code dir="ltr">PARSE_LIST</code> element of the ALTER_XML document. Each <code dir="ltr">PARSE_LIST_ITEM</code> element contains an <code dir="ltr">ITEM</code> and a <code dir="ltr">VALUE</code>. For example:</p>
<pre dir="ltr">&lt;PARSE_LIST&gt;
 &lt;PARSE_LIST_ITEM&gt;
  &lt;ITEM&gt;XPATH&lt;/ITEM&gt;
  &lt;VALUE&gt;/sxml:TABLE/sxml:RELATIONAL_TABLE/sxml:COL_LIST/sxml:COL_LIST_ITEM[14]&lt;/VALUE&gt;
 &lt;/PARSE_LIST_ITEM&gt;
 &lt;PARSE_LIST_ITEM&gt;
  &lt;ITEM&gt;NAME&lt;/ITEM&gt;
  &lt;VALUE&gt;Z1&lt;/VALUE&gt;
 &lt;/PARSE_LIST_ITEM&gt;
 &lt;PARSE_LIST_ITEM&gt;
  &lt;ITEM&gt;CLAUSE_TYPE&lt;/ITEM&gt;
  &lt;VALUE&gt;ADD_COLUMN&lt;/VALUE&gt;
 &lt;/PARSE_LIST_ITEM&gt;
 &lt;PARSE_LIST_ITEM&gt;
  &lt;ITEM&gt;COLUMN_ATTRIBUTE&lt;/ITEM&gt;
  &lt;VALUE&gt;NOT_NULL&lt;/VALUE&gt;
 &lt;/PARSE_LIST_ITEM&gt;
&lt;/PARSE_LIST&gt;
</pre></li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5724"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A <code dir="ltr">NULL</code> or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INVALID_OPERATION</code>. <code dir="ltr">ADD_TRANSFORM</code> was called after the first call to <code dir="ltr">FETCH_xxx</code> for the <code dir="ltr">OPEN</code> context. After the first call to <code dir="ltr">FETCH_xxx</code> is made, no further calls to <code dir="ltr">ADD_TRANSFORM</code> for the current <code dir="ltr">OPEN</code> context are permitted.</p>
</li>
<li>
<p><code dir="ltr">INCONSISTENT_ARGS</code>. The arguments are inconsistent. Possible inconsistencies include the following:</p>
<ul>
<li>
<p><code dir="ltr">encoding</code> is specified even though name is not a URL</p>
</li>
<li>
<p><code dir="ltr">object_type</code> is not part of the collection designated by handle</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66879" class="refsect2"><a id="i1018912"></a>
<h3 class="refsect2">CLOSE Procedure<a id="sthref5725"></a></h3>
<p>This procedure is used for both retrieval and submission. This procedure invalidates the handle returned by <code dir="ltr">OPEN</code> (or <code dir="ltr">OPENW</code>) and cleans up the associated state.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
<li>
<p><a href="#BABBIDBB">Subprograms for Submitting XML to the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5726"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.CLOSE<span class="bold"> </span>(
   handle  IN NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5727"></a>Parameters</p>
<div id="ARPLS66880" class="tblhruleformal">
<p class="titleintable"><a id="sthref5728"></a><a id="sthref5729"></a>Table 94-6 CLOSE Procedure Parameters</p>
<table class="cellalignment4327" title="CLOSE Procedure Parameters" summary="This table describes the parameters of the DBMS_METADATA.CLOSE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t11">Parameter</th>
<th class="cellalignment4328" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t11 r1c2-t11">
<p>The handle returned from <code dir="ltr">OPEN</code> (or <code dir="ltr">OPENW</code>).</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5730"></a>Usage Notes</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The following notes apply only to object retrieval</div>
<p>You can prematurely terminate the stream of objects established by <code dir="ltr">OPEN</code> or (<code dir="ltr">OPENW)</code>.</p>
<ul>
<li>
<p>If a call to <code dir="ltr">FETCH_xxx</code> returns <code dir="ltr">NULL,</code> indicating no more objects, a call to <code dir="ltr">CLOSE</code> is made transparently. In this case, you can still call <code dir="ltr">CLOSE</code> on the handle and not get an exception. (The call to <code dir="ltr">CLOSE</code> is not required.)</p>
</li>
<li>
<p>If you know that only one specific object will be returned, you should explicitly call <code dir="ltr">CLOSE</code> after the single <code dir="ltr">FETCH_xxx</code> call to free resources held by the handle.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5731"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. The value for the <code dir="ltr">handle</code> parameter is <code dir="ltr">NULL</code> or invalid.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66881" class="refsect2"><a id="i1019048"></a>
<h3 class="refsect2">CONVERT Functions and Procedures<a id="sthref5732"></a></h3>
<p>The <code dir="ltr">CONVERT</code> functions and procedures transform input XML documents. The <code dir="ltr">CONVERT</code> functions return creation DDL. The <code dir="ltr">CONVERT</code> procedures return either XML or DDL, depending on the specified transforms.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBIDBB">Subprograms for Submitting XML to the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5733"></a>Syntax</p>
<p>The <code dir="ltr">CONVERT</code> functions are as follows:</p>
<pre dir="ltr">DBMS_METADATA.CONVERT (
   handle   IN NUMBER,
   document IN sys.XMLType)
 RETURN sys.ku$_multi_ddls;

DBMS_METADATA.CONVERT (
  handle   IN NUMBER,
  document IN CLOB)
 RETURN sys.ku$_multi_ddls;
</pre>
<p>The <code dir="ltr">CONVERT</code> procedures are as follows:</p>
<pre dir="ltr">DBMS_METADATA.CONVERT (
  handle   IN NUMBER,
  document IN sys.XMLType,
  result   IN OUT NOCOPY CLOB);

DBMS_METADATA.CONVERT (
  handle   IN NUMBER,
  document IN CLOB,
  result   IN OUT NOCOPY CLOB);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5734"></a>Parameters</p>
<div id="ARPLS66882" class="tblformal">
<p class="titleintable"><a id="sthref5735"></a><a id="sthref5736"></a>Table 94-7 CONVERT Subprogram Parameters</p>
<table class="cellalignment4330" title="CONVERT Subprogram Parameters" summary="This table describes the parameters of the DBMS_METADATA.CONVERT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t14">Parameter</th>
<th class="cellalignment4328" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t14 r1c2-t14">
<p>The handle returned from <code dir="ltr">OPENW</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t14" headers="r1c1-t14">
<p><code dir="ltr">document</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t14 r1c2-t14">
<p>The XML document containing object metadata of the type of the <code dir="ltr">OPENW</code> handle.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t14" headers="r1c1-t14">
<p>result</p>
</td>
<td class="cellalignment4329" headers="r4c1-t14 r1c2-t14">
<p>The converted document.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5737"></a>Return Values</p>
<p>Either XML or DDL, depending on the specified transforms.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5738"></a>Usage Notes</p>
<p>You can think of <code dir="ltr">CONVERT</code> as the second half of <code dir="ltr">FETCH_xxx</code>, either <code dir="ltr">FETCH_DDL</code> (for the function variants) or <code dir="ltr">FETCH_CLOB</code> (for the procedure variants). There are two differences:</p>
<ul>
<li>
<p><code dir="ltr">FETCH_xxx</code> gets its XML document from the database, but <code dir="ltr">CONVERT</code> gets its XML document from the caller</p>
</li>
<li>
<p>FETCH_DDL returns its results in a sys.ku$_ddls nested table, but CONVERT returns a sys.ku$_multi_ddls nested table</p>
</li>
</ul>
<p>The transforms specified with <code dir="ltr">ADD_TRANSFORM</code> are applied in turn, and the result is returned to the caller. For the function variants, the DDL transform must be specified. If parse items were specified, they are returned in the <code dir="ltr">parsedItems</code> column. Parse items are ignored by the procedure variants.</p>
<p>The encoding of the XML document is embedded in its CLOB or XMLType representation. The version of the metadata is embedded in the XML. The generated DDL is valid for the database version specified in <code dir="ltr">OPENW</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5739"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A NULL or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INCONSISTENT_OPERATION</code>. No transform was specified. The DDL transform was not specified (function variants only).</p>
</li>
<li>
<p><code dir="ltr">INCOMPATIBLE_DOCUMENT</code>. The version of the XML document is not compatible with this version of the software.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66883" class="refsect2"><a id="i1019125"></a>
<h3 class="refsect2">FETCH_xxx Functions and Procedures</h3>
<p>These functions and procedures return metadata for objects meeting the criteria established by <code dir="ltr">OPEN</code>, <code dir="ltr">SET_FILTER</code>, <code dir="ltr">SET_COUNT</code>, <code dir="ltr">ADD_TRANSFORM</code>, and so on. See <a href="#i1019214">&#34;Usage Notes&#34;</a> for the variants.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5740"></a>Syntax</p>
<p>The <code dir="ltr">FETCH</code> functions are as follows:</p>
<pre dir="ltr">DBMS_METADATA.FETCH_XML (
<span class="bold">   </span>handle  IN NUMBER) 
RETURN sys.XMLType;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADXDB" href="../ADXDB/toc.htm"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a> for a description of <code dir="ltr">XMLType</code></div>
<pre dir="ltr">DBMS_METADATA.FETCH_DDL (
   handle  IN NUMBER)
RETURN sys.ku$_ddls;

DBMS_METADATA.FETCH_CLOB (
   handle       IN NUMBER,
   cache_lob    IN BOOLEAN DEFAULT TRUE,
   lob_duration IN PLS INTEGER DEFAULT DBMS_LOB.SESSION)
RETURN CLOB;
</pre>
<p>The <code dir="ltr">FETCH</code> procedures are as follows:</p>
<pre dir="ltr">DBMS_METADATA.FETCH_CLOB (
   handle  IN NUMBER,
   doc     IN OUT NOCOPY CLOB);

DBMS_METADATA.FETCH_XML_CLOB (
   handle  IN NUMBER,
   doc     IN OUT NOCOPY CLOB,
   parsed_items OUT sys.ku$_parsed_items,
   object_type_path OUT VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5741"></a>Parameters</p>
<div id="ARPLS66884" class="tblhruleformal">
<p class="titleintable"><a id="sthref5742"></a><a id="sthref5743"></a>Table 94-8 FETCH_xxx Function Parameters</p>
<table class="cellalignment4327" title="FETCH_xxx Function Parameters" summary="This table describes the parameters of the DBMS_METADATA.FETCH subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t17">Parameters</th>
<th class="cellalignment4328" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t17" headers="r1c1-t17">
<p><code dir="ltr">handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t17 r1c2-t17">
<p>The handle returned from <code dir="ltr">OPEN</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t17" headers="r1c1-t17">
<p><code dir="ltr">cache_lob</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t17 r1c2-t17">
<p><code dir="ltr">TRUE</code>=read LOB into buffer cache</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t17" headers="r1c1-t17">
<p><code dir="ltr">lob_duration</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t17 r1c2-t17">
<p>The duration for the temporary LOB created by <code dir="ltr">FETCH_CLOB</code>, either <code dir="ltr">DBMS_LOB.SESSION</code> (the default) or <code dir="ltr">DBMS_LOB.CALL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t17" headers="r1c1-t17">
<p><code dir="ltr">doc</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t17 r1c2-t17">
<p>The metadata for the objects, or <code dir="ltr">NULL</code> if all objects have been returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t17" headers="r1c1-t17">
<p><code dir="ltr">parsed_items</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t17 r1c2-t17">
<p>A nested table containing the items specified by <code dir="ltr">SET_PARSE_ITEM</code>. If <code dir="ltr">SET_PARSE_ITEM</code> was not called, a NULL is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t17" headers="r1c1-t17">
<p><code dir="ltr">object_type_path</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t17 r1c2-t17">
<p>For heterogeneous object types, this is the full path name of the object type for the objects returned by the call to <code dir="ltr">FETCH_XXX</code>. If <code dir="ltr">handle</code> designates a homogeneous object type, a NULL is returned.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5744"></a>Return Values</p>
<p>The metadata for the objects or <code dir="ltr">NULL</code> if all objects have been returned.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i1019214"></a>Usage Notes</p>
<p>These functions and procedures return metadata for objects meeting the criteria established by the call to <code dir="ltr">OPEN</code> that returned the handle, and subsequent calls to <code dir="ltr">SET_FILTER</code>, <code dir="ltr">SET_COUNT</code>, <code dir="ltr">ADD_TRANSFORM</code>, and so on. Each call to <code dir="ltr">FETCH_xxx</code> returns the number of objects specified by <code dir="ltr">SET_COUNT</code> (or less, if fewer objects remain in the underlying cursor) until all objects have been returned. After the last object is returned, subsequent calls to <code dir="ltr">FETCH_xxx</code> return <code dir="ltr">NULL</code> and cause the stream created by <code dir="ltr">OPEN</code> to be transparently closed.</p>
<p>There are several different <code dir="ltr">FETCH_xxx</code> functions and procedures:</p>
<ul>
<li>
<p>The <code dir="ltr">FETCH_XML</code> function returns the XML metadata for an object as an <code dir="ltr">XMLType</code>. It assumes that if any transform has been specified, that transform will produce an XML document. In particular, it assumes that the DDL transform has not been specified.</p>
</li>
<li>
<p>The <code dir="ltr">FETCH_DDL</code> function returns the DDL (to create the object) in a <code dir="ltr">sys.ku$_ddls</code> nested table. It assumes that the DDL transform has been specified. Each row of the <code dir="ltr">sys.ku$_ddls</code> nested table contains a single DDL statement in the <code dir="ltr">ddlText</code> column; if requested, parsed items for the DDL statement will be returned in the <code dir="ltr">parsedItems</code> column. Multiple DDL statements may be returned under the following circumstances:</p>
<ul>
<li>
<p>When you call <code dir="ltr">SET_COUNT</code> to specify a count greater than <code dir="ltr">1</code></p>
</li>
<li>
<p>When an object is transformed into multiple DDL statements. For example, A <code dir="ltr">TYPE</code> object that has a DDL transform applied to it can be transformed into both <code dir="ltr">CREATE TYPE</code> and <code dir="ltr">CREATE TYPE BODY</code> statements. A <code dir="ltr">TABLE</code> object can be transformed into a <code dir="ltr">CREATE TABLE</code>, and one or more <code dir="ltr">ALTER TABLE</code> statements</p>
</li>
</ul>
</li>
<li>
<p>The <code dir="ltr">FETCH_CLOB</code> function simply returns the object, transformed or not, as a CLOB. By default, the CLOB is read into the buffer cache and has session duration, but these defaults can be overridden with the <code dir="ltr">cache_lob</code> and <code dir="ltr">lob_duration</code> parameters.</p>
</li>
<li>
<p>The <code dir="ltr">FETCH_CLOB</code> procedure returns the objects by reference in an <code dir="ltr">IN</code> <code dir="ltr">OUT</code> <code dir="ltr">NOCOPY</code> parameter. This is faster than the function variant, which returns LOBs by value, a practice that involves an expensive LOB copy.</p>
</li>
<li>
<p>The <code dir="ltr">FETCH_XML_CLOB</code> procedure returns the XML metadata for the objects as a CLOB in an <code dir="ltr">IN</code> <code dir="ltr">OUT</code> <code dir="ltr">NOCOPY</code> parameter. This helps to avoid LOB copies, which can consume a lot of resources. It also returns a nested table of parse items and the full path name of the object type of the returned objects.</p>
</li>
<li>
<p>All LOBs returned by <code dir="ltr">FETCH_xxx</code> are temporary LOBs. You must free the LOB. If the LOB is supplied as an <code dir="ltr">IN</code> <code dir="ltr">OUT</code> <code dir="ltr">NOCOPY</code> parameter, you must also create the LOB.</p>
</li>
<li>
<p>If <code dir="ltr">SET_PARSE_ITEM</code> was called, <code dir="ltr">FETCH_DDL</code> and <code dir="ltr">FETCH_XML_CLOB</code> return attributes of the object&#39;s metadata (or the DDL statement) in a <code dir="ltr">sys.ku$_parsed_items</code> nested table. For <code dir="ltr">FETCH_XML_CLOB</code>, the nested table is an <code dir="ltr">OUT</code> parameter. For <code dir="ltr">FETCH_DDL</code>, it is a column in the returned <code dir="ltr">sys.ku$_ddls</code> nested table. Each row of the nested table corresponds to an item specified by <code dir="ltr">SET_PARSE_ITEM</code> and contains the following columns:</p>
<ul>
<li>
<p><code dir="ltr">item</code>&mdash;the name of the attribute as specified in the <code dir="ltr">name</code> parameter to <code dir="ltr">SET_PARSE_ITEM.</code></p>
</li>
<li>
<p>value&mdash;the attribute value, or <code dir="ltr">NULL</code> if the attribute is not present in the DDL statement.</p>
</li>
<li>
<p><code dir="ltr">object-row</code>&mdash;a positive integer indicating the object to which the parse item applies. If multiple objects are returned by <code dir="ltr">FETCH_xxx</code>, (because <code dir="ltr">SET_COUNT</code> specified a count greater than 1) then <code dir="ltr">object_row</code>=<code dir="ltr">1</code> for all items for the first object, <code dir="ltr">2</code> for the second, and so on.</p>
</li>
</ul>
</li>
<li>
<p>The rows of the <code dir="ltr">sys.ku$_parsed_items</code> nested table are ordered by ascending <code dir="ltr">object_row</code>, but otherwise the row order is undetermined. To find a particular parse item within an object row the caller must search the table for a match on <code dir="ltr">item</code>.</p>
</li>
<li>
<p>In general there is no guarantee that a requested parse item will be returned. For example, the parse item may not apply to the object type or to the particular line of DDL, or the item&#39;s value may be <code dir="ltr">NULL</code>.</p>
</li>
<li>
<p>If <code dir="ltr">SET_PARSE_ITEM</code> was not called, <code dir="ltr">NULL</code> is returned as the value of the parsed items nested table.</p>
</li>
<li>
<p>It is expected that the same variant of <code dir="ltr">FETCH_xxx</code> will be called for all objects selected by <code dir="ltr">OPEN</code>. That is, programs will not intermix calls to <code dir="ltr">FETCH_XML</code>, <code dir="ltr">FETCH_DDL</code>, <code dir="ltr">FETCH_CLOB</code>, and so on using the same <code dir="ltr">OPEN</code> handle. The effect of calling different variants is undefined; it might do what you expect, but there are no guarantees.</p>
</li>
<li>
<p>Every object fetched will be internally consistent with respect to on-going DDL (and the subsequent recursive DML) operations against the dictionary. In some cases, multiple queries may be issued, either because the object type is heterogeneous or for performance reasons (for example, one query for heap tables, one for index-organized tables). Consequently the <code dir="ltr">FETCH_xxx</code> calls may in fact be fetches from different underlying cursors (meaning that read consistency is not guaranteed).</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5745"></a>Exceptions</p>
<p>Most exceptions raised during execution of the query are propagated to the caller. Also, the following exceptions may be raised:</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A <code dir="ltr">NULL</code> or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INCONSISTENT_OPERATION</code>. Either <code dir="ltr">FETCH_XML</code> was called when the DDL transform had been specified, or <code dir="ltr">FETCH_DD</code>L was called when the DDL transform had <span class="italic">not</span> been specified.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66885" class="refsect2"><a id="i1019414"></a>
<h3 class="refsect2">GET_xxx Functions<a id="sthref5746"></a><a id="sthref5747"></a></h3>
<p>The following <code dir="ltr">GET_xxx</code> functions let you fetch metadata for objects with a single call:</p>
<ul>
<li>
<p><code dir="ltr">GET_XML</code></p>
</li>
<li>
<p><code dir="ltr">GET_DDL</code></p>
</li>
<li>
<p><code dir="ltr">GET_SXML</code></p>
</li>
<li>
<p><code dir="ltr">GET_DEPENDENT_XML</code></p>
</li>
<li>
<p><code dir="ltr">GET_DEPENDENT_DDL</code></p>
</li>
<li>
<p><code dir="ltr">GET_GRANTED_XML</code></p>
</li>
<li>
<p><code dir="ltr">GET_GRANTED_DDL</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
</ul>
</div>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5748"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.GET_XML (
object_type     IN VARCHAR2,
name            IN VARCHAR2,
schema          IN VARCHAR2 DEFAULT NULL,
version         IN VARCHAR2 DEFAULT &#39;COMPATIBLE&#39;,
model           IN VARCHAR2 DEFAULT &#39;ORACLE&#39;,
transform       IN VARCHAR2 DEFAULT NULL)
RETURN CLOB;

DBMS_METADATA.GET_DDL (
object_type     IN VARCHAR2,
name            IN VARCHAR2,
schema          IN VARCHAR2 DEFAULT NULL,
version         IN VARCHAR2 DEFAULT &#39;COMPATIBLE&#39;,
model           IN VARCHAR2 DEFAULT &#39;ORACLE&#39;,
transform       IN VARCHAR2 DEFAULT &#39;DDL&#39;)
RETURN CLOB;

DBMS_METADATA.GET_SXML (
object_type     IN VARCHAR2,
name            IN VARCHAR2 DEFAULT NULL,
schema          IN VARCHAR2 DEFAULT NULL,
version         IN VARCHAR2 DEFAULT &#39;COMPATIBLE&#39;,
model           IN VARCHAR2 DEFAULT &#39;ORACLE&#39;,
transform       IN VARCHAR2 DEFAULT &#39;SXML&#39;)
RETURN CLOB;

DBMS_METADATA.GET_DEPENDENT_XML (
object_type        IN VARCHAR2,
base_object_name   IN VARCHAR2,
base_object_schema IN VARCHAR2 DEFAULT NULL,
version            IN VARCHAR2 DEFAULT &#39;COMPATIBLE&#39;,
model              IN VARCHAR2 DEFAULT &#39;ORACLE&#39;,
transform          IN VARCHAR2 DEFAULT NULL,
object_count       IN NUMBER   DEFAULT 10000)
RETURN CLOB;

DBMS_METADATA.GET_DEPENDENT_DDL (
object_type         IN VARCHAR2,
base_object_name    IN VARCHAR2,
base_object_schema  IN VARCHAR2 DEFAULT NULL,
version             IN VARCHAR2 DEFAULT &#39;COMPATIBLE&#39;,
model               IN VARCHAR2 DEFAULT &#39;ORACLE&#39;,
transform           IN VARCHAR2 DEFAULT &#39;DDL&#39;,
object_count        IN NUMBER   DEFAULT 10000)
RETURN CLOB;

DBMS_METADATA.GET_GRANTED_XML (
object_type     IN VARCHAR2,
grantee         IN VARCHAR2 DEFAULT NULL,
version         IN VARCHAR2 DEFAULT &#39;COMPATIBLE&#39;,
model           IN VARCHAR2 DEFAULT &#39;ORACLE&#39;,
transform       IN VARCHAR2 DEFAULT NULL,
object_count    IN NUMBER   DEFAULT 10000)
RETURN CLOB;

DBMS_METADATA.GET_GRANTED_DDL (
object_type     IN VARCHAR2,
grantee         IN VARCHAR2 DEFAULT NULL,
version         IN VARCHAR2 DEFAULT &#39;COMPATIBLE&#39;,
model           IN VARCHAR2 DEFAULT &#39;ORACLE&#39;,
transform       IN VARCHAR2 DEFAULT &#39;DDL&#39;,
object_count    IN NUMBER   DEFAULT 10000)
RETURN CLOB;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5749"></a>Parameters</p>
<div id="ARPLS66886" class="tblhruleformal">
<p class="titleintable"><a id="sthref5750"></a><a id="sthref5751"></a>Table 94-9 GET_xxx Function Parameters</p>
<table class="cellalignment4327" title="GET_xxx Function Parameters" summary="This table describes the parameters of the DBMS_METADATA.GET_*** subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t19">Parameter</th>
<th class="cellalignment4328" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t19" headers="r1c1-t19">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t19 r1c2-t19">
<p>The type of object to be retrieved. This parameter takes the same values as the <code dir="ltr">OPEN object_type</code> parameter, except that it cannot be a heterogeneous object type. The attributes of the object type must be appropriate to the function. That is, for <code dir="ltr">GET_xxx</code> it must be a named object.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t19" headers="r1c1-t19">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t19 r1c2-t19">
<p>The object name. It is used internally in a <code dir="ltr">NAME</code> filter. (If the name is longer than 30 characters, it will be used in a <code dir="ltr">LONGNAME</code> filter.) If this parameter is NULL, then no <code dir="ltr">NAME</code> or <code dir="ltr">LONGNAME</code> filter is specified. See <a href="#BGBHBCDB">Table 94-18</a> for a list of filters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t19" headers="r1c1-t19">
<p><code dir="ltr">schema</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t19 r1c2-t19">
<p>The object schema. It is used internally in a <code dir="ltr">SCHEMA</code> filter. The default is the current user.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t19" headers="r1c1-t19">
<p><code dir="ltr">version</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t19 r1c2-t19">
<p>The version of metadata to be extracted. This parameter takes the same values as the <code dir="ltr">OPEN</code> version parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t19" headers="r1c1-t19">
<p><code dir="ltr">model</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t19 r1c2-t19">
<p>The object model to use. This parameter takes the same values as the <code dir="ltr">OPEN</code> model parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t19" headers="r1c1-t19">
<p><code dir="ltr">transform</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t19 r1c2-t19">
<p>The name of a transformation on the output. This parameter takes the same values as the <code dir="ltr">ADD_TRANSFORM</code> <code dir="ltr">name</code> parameter. For <code dir="ltr">GET_XML</code> this must not be <code dir="ltr">DDL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t19" headers="r1c1-t19">
<p><code dir="ltr">base_object_name</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t19 r1c2-t19">
<p>The base object name. It is used internally in a <code dir="ltr">BASE_OBJECT_NAME</code> filter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t19" headers="r1c1-t19">
<p><code dir="ltr">base_object_schema</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t19 r1c2-t19">
<p>The base object schema. It is used internally in a <code dir="ltr">BASE_OBJECT_SCHEMA</code> filter. The default is the current user.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t19" headers="r1c1-t19">
<p><code dir="ltr">grantee</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t19 r1c2-t19">
<p>The grantee. It is used internally in a <code dir="ltr">GRANTEE</code> filter. The default is the current user.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t19" headers="r1c1-t19">
<p><code dir="ltr">object_count</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t19 r1c2-t19">
<p>The maximum number of objects to return. See <a href="#i1019710">SET_COUNT Procedure</a> .</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5752"></a>Return Values</p>
<p>The metadata for the specified object as XML or DDL.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5753"></a>Usage Notes</p>
<ul>
<li>
<p>These functions allow you to fetch metadata for objects with a single call. They encapsulate calls to <code dir="ltr">OPEN</code>, <code dir="ltr">SET_FILTER</code>, and so on. The function you use depends on the characteristics of the object type and on whether you want XML, SXML, or DDL.</p>
<ul>
<li>
<p><code dir="ltr">GET_xxx</code> is used to fetch named objects, especially schema objects (tables, views).</p>
</li>
<li>
<p><code dir="ltr">GET_DEPENDENT_xxx</code> is used to fetch dependent objects (audits, object grants).</p>
</li>
<li>
<p><code dir="ltr">GET_GRANTED_xxx</code> is used to fetch granted objects (system grants, role grants).</p>
</li>
</ul>
</li>
<li>
<p>For some object types you can use more than one function. For example, you can use <code dir="ltr">GET_xxx</code> to fetch an index by name, or <code dir="ltr">GET_DEPENDENT_xxx</code> to fetch the same index by specifying the table on which it is defined.</p>
</li>
<li>
<p><code dir="ltr">GET_xxx</code> only returns a single named object.</p>
</li>
<li>
<p>For <code dir="ltr">GET_DEPENDENT_xxx</code> and <code dir="ltr">GET_GRANTED_xxx,</code> an arbitrary number of dependent or granted objects can match the input criteria. You can specify an object count when fetching these objects. (The default count of 10000 should be adequate in most cases.)</p>
</li>
<li>
<p>If the DDL transform is specified, session-level transform parameters are inherited.</p>
</li>
<li>
<p>If you invoke these functions from SQL*Plus, you should set the <code dir="ltr">PAGESIZE</code> to 0 and set <code dir="ltr">LONG</code> to some large number to get complete, uninterrupted output.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5754"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A <code dir="ltr">NULL</code> or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">OBJECT_NOT_FOUND</code>. The specified object was not found in the database.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5755"></a>Examples</p>
<p class="subhead2"><a id="ARPLS66887"></a>Example: Fetch the XML Representation of SCOTT.EMP</p>
<p>To generate complete, uninterrupted output, set the <code dir="ltr">PAGESIZE</code> to 0 and set <code dir="ltr">LONG</code> to some large number, as shown, before executing your query.</p>
<pre dir="ltr">SET LONG 2000000
SET PAGESIZE 0
SELECT DBMS_METADATA.GET_XML(&#39;TABLE&#39;,&#39;EMP&#39;,&#39;SCOTT&#39;)
FROM DUAL;
</pre>
<p class="subhead2"><a id="ARPLS66888"></a>Example: Fetch the DDL for all Complete Tables in the Current Schema, Filter Out Nested Tables and Overflow Segments</p>
<p>This example fetches the DDL for all &#34;complete&#34; tables in the current schema, filtering out nested tables and overflow segments. The example uses <code dir="ltr">SET_TRANSFORM_PARAM</code> (with the handle value = <code dir="ltr">DBMS_METADATA.SESSION_TRANSFORM</code> meaning &#34;for the current session&#34;) to specify that storage clauses are not to be returned in the SQL DDL. Afterwards, the example resets the session-level parameters to their defaults.</p>
<p>To generate complete, uninterrupted output, set the <code dir="ltr">PAGESIZE</code> to 0 and set <code dir="ltr">LONG</code> to some large number, as shown, before executing your query.</p>
<pre dir="ltr">SET LONG 2000000
SET PAGESIZE 0
EXECUTE DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,&#39;STORAGE&#39;,false);
SELECT DBMS_METADATA.GET_DDL(&#39;TABLE&#39;,u.table_name)
     FROM USER_ALL_TABLES u
     WHERE u.nested=&#39;NO&#39; 
     AND (u.iot_type is null or u.iot_type=&#39;IOT&#39;);
EXECUTE DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,&#39;DEFAULT&#39;);
</pre>
<p class="subhead2"><a id="ARPLS66889"></a>Example: Fetch the DDL For All Object Grants On HR.EMPLOYEES</p>
<pre dir="ltr">SELECT DBMS_METADATA.GET_DEPENDENT_DDL(&#39;OBJECT_GRANT&#39;,
    &#39;EMPLOYEES&#39;,&#39;HR&#39;) FROM DUAL;
</pre>
<p class="subhead2"><a id="ARPLS66890"></a>Example: Fetch the DDL For All System Grants Granted To SCOTT</p>
<pre dir="ltr">SELECT DBMS_METADATA.GET_GRANTED_DDL(&#39;SYSTEM_GRANT&#39;,&#39;SCOTT&#39;)
    FROM DUAL;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66891" class="refsect2"><a id="i1019267"></a>
<h3 class="refsect2">GET_QUERY Function<a id="sthref5756"></a></h3>
<p>This function returns the text of the queries that are used by <code dir="ltr">FETCH_xxx</code>. This function assists in debugging.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5757"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.GET_QUERY (
   handle  IN NUMBER)
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5758"></a>Parameters</p>
<div id="ARPLS66892" class="tblhruleformal">
<p class="titleintable"><a id="sthref5759"></a><a id="sthref5760"></a>Table 94-10 GET_QUERY Function Parameters</p>
<table class="cellalignment4327" title="GET_QUERY Function Parameters" summary="This table describes the parameters of the DBMS_METADATA.GET_QUERY subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t21">Parameter</th>
<th class="cellalignment4328" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t21" headers="r1c1-t21">
<p><code dir="ltr">handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t21 r1c2-t21">
<p>The handle returned from <code dir="ltr">OPEN</code>. It cannot be the handle for a heterogeneous object type.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5761"></a>Return Values</p>
<p>The text of the queries that will be used by <code dir="ltr">FETCH_xxx.</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5762"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A <code dir="ltr">NULL</code> or invalid value was supplied for the <code dir="ltr">handle</code> parameter.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66893" class="refsect2"><a id="i1018906"></a>
<h3 class="refsect2">OPEN Function<a id="sthref5763"></a></h3>
<p>This function specifies the type of object to be retrieved, the version of its metadata, and the object model. The return value is an opaque context handle for the set of objects to be used in subsequent calls.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5764"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.OPEN (
   object_type  IN VARCHAR2,
   version      IN VARCHAR2 DEFAULT &#39;COMPATIBLE&#39;,
   model        IN VARCHAR2 DEFAULT &#39;ORACLE&#39;, 
   network_link IN VARCHAR2 DEFAULT NULL)
 RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5765"></a>Parameters</p>
<div id="ARPLS66894" class="tblhruleformal">
<p class="titleintable"><a id="sthref5766"></a><a id="sthref5767"></a>Table 94-11 Open Function Parameters</p>
<table class="cellalignment4327" title="Open Function Parameters" summary="This table describes the parameters of the DBMS_METADATA.OPEN subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t23">Parameter</th>
<th class="cellalignment4328" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t23" headers="r1c1-t23">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t23 r1c2-t23">
<p>The type of object to be retrieved. <a href="#BGBIEDIA">Table 94-12</a> lists the valid type names and their meanings. These object types will be supported for the ORACLE model of metadata (see <a href="#i997127"><code dir="ltr">model</code></a> in this table).</p>
<p>The Attributes column in <a href="#BGBIEDIA">Table 94-12</a> specifies some object type attributes:</p>
<ul>
<li>
<p>Schema objects, such as tables, belong to schemas.</p>
</li>
<li>
<p>Named objects have unique names (if they are schema objects, the name is unique to the schema).</p>
</li>
<li>
<p>Dependent objects, such as indexes, are defined with reference to a base schema object.</p>
</li>
<li>
<p>Granted objects are granted or assigned to a user or role and therefore have a named grantee.</p>
</li>
<li>
<p>Heterogeneous object types denote a collection of related objects of different types. See <a href="#BGBFJFHA">Table 94-13</a> for a listing of object types returned for the heterogeneous object type.</p>
</li>
</ul>
<p>These attributes are relevant when choosing object selection criteria. See <a href="#i998485">&#34;SET_FILTER Procedure&#34;</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t23" headers="r1c1-t23">
<p><code dir="ltr">version</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t23 r1c2-t23">
<p>The version of metadata to be extracted. Database objects or attributes that are incompatible with the version will not be extracted. Legal values for this parameter are as follows:</p>
<p><code dir="ltr">COMPATIBLE</code> (default)&mdash;the version of the metadata corresponds to the database compatibility level.</p>
<p><code dir="ltr">LATEST</code>&mdash;the version of the metadata corresponds to the database version.</p>
<p>A specific database version. The value cannot be lower than 9.2.0.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t23" headers="r1c1-t23">
<p><a id="i997127"></a><code dir="ltr">model</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t23 r1c2-t23">
<p>Specifies which view to use, because the API can support multiple views on the metadata. Only the ORACLE model is supported.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t23" headers="r1c1-t23">
<p><code dir="ltr">network_link</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t23 r1c2-t23">
<p>The name of a database link to the database whose metadata is to be retrieved. If NULL (the default), metadata is retrieved from the database on which the caller is running</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p><a href="#BGBIEDIA">Table 94-12</a> provides the name, meaning, attributes, and notes for the <code dir="ltr">DBMS_METADATA</code> package object types. In the attributes column, <code dir="ltr">S</code> represents a schema object, <code dir="ltr">N</code> represents a named object, <code dir="ltr">D</code> represents a dependent object, <code dir="ltr">G</code> represents a granted object, and <code dir="ltr">H</code> represents a heterogeneous object.</p>
<div id="ARPLS66895" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref5768"></a><a id="BGBIEDIA"></a>Table 94-12 DBMS_METADATA: Object Types</p>
<table class="cellalignment4327" title="DBMS_METADATA: Object Types" summary="This table lists the DBMS_METADATA Object Types." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t24">Type Name</th>
<th class="cellalignment4328" id="r1c2-t24">Meaning</th>
<th class="cellalignment4328" id="r1c3-t24">Attributes</th>
<th class="cellalignment4328" id="r1c4-t24">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t24" headers="r1c1-t24">
<p><code dir="ltr">AQ_QUEUE</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t24 r1c2-t24">
<p>queues</p>
</td>
<td class="cellalignment4329" headers="r2c1-t24 r1c3-t24">
<p><code dir="ltr">SND</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t24 r1c4-t24">
<p>Dependent on table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t24" headers="r1c1-t24">
<p><code dir="ltr">AQ_QUEUE_TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t24 r1c2-t24">
<p>additional metadata for queue tables</p>
</td>
<td class="cellalignment4329" headers="r3c1-t24 r1c3-t24">
<p><code dir="ltr">ND</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t24 r1c4-t24">
<p>Dependent on table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t24" headers="r1c1-t24">
<p><code dir="ltr">AQ_TRANSFORM</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t24 r1c2-t24">
<p>transforms</p>
</td>
<td class="cellalignment4329" headers="r4c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t24" headers="r1c1-t24">
<p><code dir="ltr">ASSOCIATION</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t24 r1c2-t24">
<p>associate statistics</p>
</td>
<td class="cellalignment4329" headers="r5c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t24" headers="r1c1-t24">
<p><code dir="ltr">AUDIT</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t24 r1c2-t24">
<p>audits of SQL statements</p>
</td>
<td class="cellalignment4329" headers="r6c1-t24 r1c3-t24">
<p><code dir="ltr">DG</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t24 r1c4-t24">
<p>Modeled as dependent, granted object. The base object name is the statement audit option name (for example, <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code>). There is no base object schema. The grantee is the user or proxy whose statements are audited.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t24" headers="r1c1-t24">
<p><code dir="ltr">AUDIT_OBJ</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t24 r1c2-t24">
<p>audits of schema objects</p>
</td>
<td class="cellalignment4329" headers="r7c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t24" headers="r1c1-t24">
<p><code dir="ltr">CLUSTER</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t24 r1c2-t24">
<p>clusters</p>
</td>
<td class="cellalignment4329" headers="r8c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t24" headers="r1c1-t24">
<p><code dir="ltr">COMMENT</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t24 r1c2-t24">
<p>comments</p>
</td>
<td class="cellalignment4329" headers="r9c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t24" headers="r1c1-t24">
<p><code dir="ltr">CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t24 r1c2-t24">
<p>constraints</p>
</td>
<td class="cellalignment4329" headers="r10c1-t24 r1c3-t24">
<p><code dir="ltr">SND</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t24 r1c4-t24">
<p>Does not include:</p>
<ul>
<li>
<p>primary key constraint for IOT</p>
</li>
<li>
<p>column <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraints</p>
</li>
<li>
<p>certain <code dir="ltr">REF</code> <code dir="ltr">SCOPE</code> and <code dir="ltr">WITH</code> <code dir="ltr">ROWID</code> constraints for tables with <code dir="ltr">REF</code> columns</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t24" headers="r1c1-t24">
<p><code dir="ltr">CONTEXT</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t24 r1c2-t24">
<p>application contexts</p>
</td>
<td class="cellalignment4329" headers="r11c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t24" headers="r1c1-t24">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t24 r1c2-t24">
<p>all metadata objects in a database</p>
</td>
<td class="cellalignment4329" headers="r12c1-t24 r1c3-t24">
<p><code dir="ltr">H</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t24 r1c4-t24">
<p>Corresponds to a full database export</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t24" headers="r1c1-t24">
<p><code dir="ltr">DB_LINK</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t24 r1c2-t24">
<p>database links</p>
</td>
<td class="cellalignment4329" headers="r13c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t24 r1c4-t24">
<p>Modeled as schema objects because they have owners. For public links, the owner is PUBLIC. For private links, the creator is the owner.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t24" headers="r1c1-t24">
<p><code dir="ltr">DEFAULT_ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t24 r1c2-t24">
<p>default roles</p>
</td>
<td class="cellalignment4329" headers="r14c1-t24 r1c3-t24">
<p><code dir="ltr">G</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t24 r1c4-t24">
<p>Granted to a user by <code dir="ltr">ALTER</code> <code dir="ltr">USER</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t24" headers="r1c1-t24">
<p><code dir="ltr">DIMENSION</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t24 r1c2-t24">
<p>dimensions</p>
</td>
<td class="cellalignment4329" headers="r15c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t24" headers="r1c1-t24">
<p><code dir="ltr">DIRECTORY</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t24 r1c2-t24">
<p>directories</p>
</td>
<td class="cellalignment4329" headers="r16c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t24" headers="r1c1-t24">
<p><code dir="ltr">FGA_POLICY</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t24 r1c2-t24">
<p>fine-grained audit policies</p>
</td>
<td class="cellalignment4329" headers="r17c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t24 r1c4-t24">
<p>Not modeled as named object because policy names are not unique.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t24" headers="r1c1-t24">
<p><code dir="ltr">FUNCTION</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t24 r1c2-t24">
<p>stored functions</p>
</td>
<td class="cellalignment4329" headers="r18c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t24" headers="r1c1-t24">
<p><code dir="ltr">INDEX_STATISTICS</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t24 r1c2-t24">
<p>precomputed statistics on indexes</p>
</td>
<td class="cellalignment4329" headers="r19c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t24 r1c4-t24">
<p>The base object is the index&#39;s table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t24" headers="r1c1-t24">
<p><code dir="ltr">INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t24 r1c2-t24">
<p>indexes</p>
</td>
<td class="cellalignment4329" headers="r20c1-t24 r1c3-t24">
<p><code dir="ltr">SND</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t24" headers="r1c1-t24">
<p><code dir="ltr">INDEXTYPE</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t24 r1c2-t24">
<p>indextypes</p>
</td>
<td class="cellalignment4329" headers="r21c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r22c1-t24" headers="r1c1-t24">
<p><code dir="ltr">JAVA_SOURCE</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t24 r1c2-t24">
<p>Java sources</p>
</td>
<td class="cellalignment4329" headers="r22c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r23c1-t24" headers="r1c1-t24">
<p><code dir="ltr">JOB</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t24 r1c2-t24">
<p>jobs</p>
</td>
<td class="cellalignment4329" headers="r23c1-t24 r1c3-t24">
<p><code dir="ltr">S</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r24c1-t24" headers="r1c1-t24">
<p><code dir="ltr">LIBRARY</code></p>
</td>
<td class="cellalignment4329" headers="r24c1-t24 r1c2-t24">
<p>external procedure libraries</p>
</td>
<td class="cellalignment4329" headers="r24c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r24c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r25c1-t24" headers="r1c1-t24">
<p><code dir="ltr">MATERIALIZED_VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r25c1-t24 r1c2-t24">
<p>materialized views</p>
</td>
<td class="cellalignment4329" headers="r25c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r25c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r26c1-t24" headers="r1c1-t24">
<p><code dir="ltr">MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r26c1-t24 r1c2-t24">
<p>materialized view logs</p>
</td>
<td class="cellalignment4329" headers="r26c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r26c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r27c1-t24" headers="r1c1-t24">
<p><code dir="ltr">OBJECT_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r27c1-t24 r1c2-t24">
<p>object grants</p>
</td>
<td class="cellalignment4329" headers="r27c1-t24 r1c3-t24">
<p><code dir="ltr">DG</code></p>
</td>
<td class="cellalignment4329" headers="r27c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r28c1-t24" headers="r1c1-t24">
<p><code dir="ltr">OPERATOR</code></p>
</td>
<td class="cellalignment4329" headers="r28c1-t24 r1c2-t24">
<p>operators</p>
</td>
<td class="cellalignment4329" headers="r28c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r28c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r29c1-t24" headers="r1c1-t24">
<p><code dir="ltr">PACKAGE</code></p>
</td>
<td class="cellalignment4329" headers="r29c1-t24 r1c2-t24">
<p>stored packages</p>
</td>
<td class="cellalignment4329" headers="r29c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r29c1-t24 r1c4-t24">
<p>By default, both package specification and package body are retrieved. See <a href="#i998485">&#34;SET_FILTER Procedure&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r30c1-t24" headers="r1c1-t24">
<p><code dir="ltr">PACKAGE_SPEC</code></p>
</td>
<td class="cellalignment4329" headers="r30c1-t24 r1c2-t24">
<p>package specifications</p>
</td>
<td class="cellalignment4329" headers="r30c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r30c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r31c1-t24" headers="r1c1-t24">
<p><code dir="ltr">PACKAGE_BODY</code></p>
</td>
<td class="cellalignment4329" headers="r31c1-t24 r1c2-t24">
<p>package bodies</p>
</td>
<td class="cellalignment4329" headers="r31c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r31c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r32c1-t24" headers="r1c1-t24">
<p><code dir="ltr">PROCEDURE</code></p>
</td>
<td class="cellalignment4329" headers="r32c1-t24 r1c2-t24">
<p>stored procedures</p>
</td>
<td class="cellalignment4329" headers="r32c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r32c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r33c1-t24" headers="r1c1-t24">
<p><code dir="ltr">PROFILE</code></p>
</td>
<td class="cellalignment4329" headers="r33c1-t24 r1c2-t24">
<p>profiles</p>
</td>
<td class="cellalignment4329" headers="r33c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r33c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r34c1-t24" headers="r1c1-t24">
<p><code dir="ltr">PROXY</code></p>
</td>
<td class="cellalignment4329" headers="r34c1-t24 r1c2-t24">
<p>proxy authentications</p>
</td>
<td class="cellalignment4329" headers="r34c1-t24 r1c3-t24">
<p><code dir="ltr">G</code></p>
</td>
<td class="cellalignment4329" headers="r34c1-t24 r1c4-t24">
<p>Granted to a user by <code dir="ltr">ALTER</code> <code dir="ltr">USER</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r35c1-t24" headers="r1c1-t24">
<p><code dir="ltr">REF_CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r35c1-t24 r1c2-t24">
<p>referential constraint</p>
</td>
<td class="cellalignment4329" headers="r35c1-t24 r1c3-t24">
<p><code dir="ltr">SND</code></p>
</td>
<td class="cellalignment4329" headers="r35c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r36c1-t24" headers="r1c1-t24">
<p><code dir="ltr">REFRESH_GROUP</code></p>
</td>
<td class="cellalignment4329" headers="r36c1-t24 r1c2-t24">
<p>refresh groups</p>
</td>
<td class="cellalignment4329" headers="r36c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r36c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r37c1-t24" headers="r1c1-t24">
<p><code dir="ltr">RESOURCE_COST</code></p>
</td>
<td class="cellalignment4329" headers="r37c1-t24 r1c2-t24">
<p>resource cost info</p>
</td>
<td class="cellalignment4329" headers="r37c1-t24 r1c3-t24">&nbsp;</td>
<td class="cellalignment4329" headers="r37c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r38c1-t24" headers="r1c1-t24">
<p><code dir="ltr">RLS_CONTEXT</code></p>
</td>
<td class="cellalignment4329" headers="r38c1-t24 r1c2-t24">
<p>driving contexts for enforcement of fine-grained access-control policies</p>
</td>
<td class="cellalignment4329" headers="r38c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r38c1-t24 r1c4-t24">
<p>Corresponds to the DBMS_RLS.ADD_POLICY_CONTENT procedure</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r39c1-t24" headers="r1c1-t24">
<p><code dir="ltr">RLS_GROUP</code></p>
</td>
<td class="cellalignment4329" headers="r39c1-t24 r1c2-t24">
<p>fine-grained access-control policy groups</p>
</td>
<td class="cellalignment4329" headers="r39c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r39c1-t24 r1c4-t24">
<p>Corresponds to the DBMS_RLS.CREATE_GROUP procedure</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r40c1-t24" headers="r1c1-t24">
<p><code dir="ltr">RLS_POLICY</code></p>
</td>
<td class="cellalignment4329" headers="r40c1-t24 r1c2-t24">
<p>fine-grained access-control policies</p>
</td>
<td class="cellalignment4329" headers="r40c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r40c1-t24 r1c4-t24">
<p>Corresponds to DBMS_RLS.ADD_GROUPED_POLICY. Not modeled as named objects because policy names are not unique.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r41c1-t24" headers="r1c1-t24">
<p><code dir="ltr">RMGR_CONSUMER_GROUP</code></p>
</td>
<td class="cellalignment4329" headers="r41c1-t24 r1c2-t24">
<p>resource consumer groups</p>
</td>
<td class="cellalignment4329" headers="r41c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r41c1-t24 r1c4-t24">
<p>Data Pump does not use these object types. Instead, it exports resource manager objects as procedural objects.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r42c1-t24" headers="r1c1-t24">
<p><code dir="ltr">RMGR_INTITIAL_CONSUMER_GROUP</code></p>
</td>
<td class="cellalignment4329" headers="r42c1-t24 r1c2-t24">
<p>assign initial consumer groups to users</p>
</td>
<td class="cellalignment4329" headers="r42c1-t24 r1c3-t24">
<p><code dir="ltr">G</code></p>
</td>
<td class="cellalignment4329" headers="r42c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r43c1-t24" headers="r1c1-t24">
<p><code dir="ltr">RMGR_PLAN</code></p>
</td>
<td class="cellalignment4329" headers="r43c1-t24 r1c2-t24">
<p>resource plans</p>
</td>
<td class="cellalignment4329" headers="r43c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r43c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r44c1-t24" headers="r1c1-t24">
<p><code dir="ltr">RMGR_PLAN_DIRECTIVE</code></p>
</td>
<td class="cellalignment4329" headers="r44c1-t24 r1c2-t24">
<p>resource plan directives</p>
</td>
<td class="cellalignment4329" headers="r44c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r44c1-t24 r1c4-t24">
<p>Dependent on resource plan</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r45c1-t24" headers="r1c1-t24">
<p><code dir="ltr">ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r45c1-t24 r1c2-t24">
<p>roles</p>
</td>
<td class="cellalignment4329" headers="r45c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r45c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r46c1-t24" headers="r1c1-t24">
<p><code dir="ltr">ROLE_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r46c1-t24 r1c2-t24">
<p>role grants</p>
</td>
<td class="cellalignment4329" headers="r46c1-t24 r1c3-t24">
<p><code dir="ltr">G</code></p>
</td>
<td class="cellalignment4329" headers="r46c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r47c1-t24" headers="r1c1-t24">
<p><code dir="ltr">ROLLBACK_SEGMENT</code></p>
</td>
<td class="cellalignment4329" headers="r47c1-t24 r1c2-t24">
<p>rollback segments</p>
</td>
<td class="cellalignment4329" headers="r47c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r47c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r48c1-t24" headers="r1c1-t24">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r48c1-t24 r1c2-t24">
<p>all metadata objects in a schema</p>
</td>
<td class="cellalignment4329" headers="r48c1-t24 r1c3-t24">
<p><code dir="ltr">H</code></p>
</td>
<td class="cellalignment4329" headers="r48c1-t24 r1c4-t24">
<p>Corresponds to user-mode export.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r49c1-t24" headers="r1c1-t24">
<p><code dir="ltr">SEQUENCE</code></p>
</td>
<td class="cellalignment4329" headers="r49c1-t24 r1c2-t24">
<p>sequences</p>
</td>
<td class="cellalignment4329" headers="r49c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r49c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r50c1-t24" headers="r1c1-t24">
<p><code dir="ltr">SYNONYM</code></p>
</td>
<td class="cellalignment4329" headers="r50c1-t24 r1c2-t24">
<p>synonyms</p>
</td>
<td class="cellalignment4329" headers="r50c1-t24 r1c3-t24">
<p><code dir="ltr">See notes</code></p>
</td>
<td class="cellalignment4329" headers="r50c1-t24 r1c4-t24">
<p>Private synonyms are schema objects. Public synonyms are not, but for the purposes of this API, their schema name is <code dir="ltr">PUBLIC</code>. The name of a synonym is considered to be the synonym itself. For example, in <code dir="ltr">CREATE PUBLIC SYNONYM FOO FOR BAR</code>, the resultant object is considered to have name <code dir="ltr">FOO</code> and schema <code dir="ltr">PUBLIC</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r51c1-t24" headers="r1c1-t24">
<p><code dir="ltr">SYSTEM_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r51c1-t24 r1c2-t24">
<p>system privilege grants</p>
</td>
<td class="cellalignment4329" headers="r51c1-t24 r1c3-t24">
<p><code dir="ltr">G</code></p>
</td>
<td class="cellalignment4329" headers="r51c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r52c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r52c1-t24 r1c2-t24">
<p>tables</p>
</td>
<td class="cellalignment4329" headers="r52c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r52c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r53c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TABLE_DATA</code></p>
</td>
<td class="cellalignment4329" headers="r53c1-t24 r1c2-t24">
<p>metadata describing row data for a table, nested table, or partition</p>
</td>
<td class="cellalignment4329" headers="r53c1-t24 r1c3-t24">
<p><code dir="ltr">SND</code></p>
</td>
<td class="cellalignment4329" headers="r53c1-t24 r1c4-t24">
<p>For partitions, the object name is the partition name.</p>
<p>For nested tables, the object name is the storage table name. The base object is the top-level table to which the table data belongs. For nested tables and partitioning, this is the top-level table (<span class="italic">not</span> the parent table or partition). For nonpartitioned tables and non-nested tables this is the table itself.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r54c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r54c1-t24 r1c2-t24">
<p>metadata for a table and its associated objects</p>
</td>
<td class="cellalignment4329" headers="r54c1-t24 r1c3-t24">
<p><code dir="ltr">H</code></p>
</td>
<td class="cellalignment4329" headers="r54c1-t24 r1c4-t24">
<p>Corresponds to table-mode export</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r55c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TABLE_STATISTICS</code></p>
</td>
<td class="cellalignment4329" headers="r55c1-t24 r1c2-t24">
<p>precomputed statistics on tables</p>
</td>
<td class="cellalignment4329" headers="r55c1-t24 r1c3-t24">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment4329" headers="r55c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r56c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r56c1-t24 r1c2-t24">
<p>tablespaces</p>
</td>
<td class="cellalignment4329" headers="r56c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r56c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r57c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TABLESPACE_QUOTA</code></p>
</td>
<td class="cellalignment4329" headers="r57c1-t24 r1c2-t24">
<p>tablespace quotas</p>
</td>
<td class="cellalignment4329" headers="r57c1-t24 r1c3-t24">
<p><code dir="ltr">G</code></p>
</td>
<td class="cellalignment4329" headers="r57c1-t24 r1c4-t24">
<p>Granted with <code dir="ltr">ALTER</code> <code dir="ltr">USER</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r58c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TRANSPORTABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r58c1-t24 r1c2-t24">
<p>metadata for objects in a transportable tablespace set</p>
</td>
<td class="cellalignment4329" headers="r58c1-t24 r1c3-t24">
<p><code dir="ltr">H</code></p>
</td>
<td class="cellalignment4329" headers="r58c1-t24 r1c4-t24">
<p>Corresponds to transportable tablespace export</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r59c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TRIGGER</code></p>
</td>
<td class="cellalignment4329" headers="r59c1-t24 r1c2-t24">
<p>triggers</p>
</td>
<td class="cellalignment4329" headers="r59c1-t24 r1c3-t24">
<p><code dir="ltr">SND</code></p>
</td>
<td class="cellalignment4329" headers="r59c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r60c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TRUSTED_DB_LINK</code></p>
</td>
<td class="cellalignment4329" headers="r60c1-t24 r1c2-t24">
<p>trusted links</p>
</td>
<td class="cellalignment4329" headers="r60c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r60c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r61c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r61c1-t24 r1c2-t24">
<p>user-defined types</p>
</td>
<td class="cellalignment4329" headers="r61c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r61c1-t24 r1c4-t24">
<p>By default, both type and type body are retrieved. See <a href="#i998485">&#34;SET_FILTER Procedure&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r62c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TYPE_SPEC</code></p>
</td>
<td class="cellalignment4329" headers="r62c1-t24 r1c2-t24">
<p>type specifications</p>
</td>
<td class="cellalignment4329" headers="r62c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r62c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r63c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TYPE_BODY</code></p>
</td>
<td class="cellalignment4329" headers="r63c1-t24 r1c2-t24">
<p>type bodies</p>
</td>
<td class="cellalignment4329" headers="r63c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r63c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r64c1-t24" headers="r1c1-t24">
<p><code dir="ltr">USER</code></p>
</td>
<td class="cellalignment4329" headers="r64c1-t24 r1c2-t24">
<p>users</p>
</td>
<td class="cellalignment4329" headers="r64c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r64c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r65c1-t24" headers="r1c1-t24">
<p><code dir="ltr">VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r65c1-t24 r1c2-t24">
<p>views</p>
</td>
<td class="cellalignment4329" headers="r65c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r65c1-t24 r1c4-t24">
<p>None</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r66c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XMLSCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r66c1-t24 r1c2-t24">
<p>XML schema</p>
</td>
<td class="cellalignment4329" headers="r66c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r66c1-t24 r1c4-t24">
<p>The object&#39;s name is its URL (which may be longer than 30 characters). Its schema is the user who registered it.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r67c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XS_USER</code></p>
</td>
<td class="cellalignment4329" headers="r67c1-t24 r1c2-t24">
<p>Real Application Security (RAS) user</p>
</td>
<td class="cellalignment4329" headers="r67c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r67c1-t24 r1c4-t24">
<p>Corresponds to RAS users</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r68c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XS_ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r68c1-t24 r1c2-t24">
<p>Real Application Security (RAS) role</p>
</td>
<td class="cellalignment4329" headers="r68c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r68c1-t24 r1c4-t24">
<p>Corresponds to RAS roles</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r69c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XS_ROLESET</code></p>
</td>
<td class="cellalignment4329" headers="r69c1-t24 r1c2-t24">
<p>Real Application Security (RAS) rolesets</p>
</td>
<td class="cellalignment4329" headers="r69c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r69c1-t24 r1c4-t24">
<p>Corresponds to RAS rolesets</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r70c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XS_ROLE_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r70c1-t24 r1c2-t24">
<p>Real Application Security (RAS) role grants</p>
</td>
<td class="cellalignment4329" headers="r70c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r70c1-t24 r1c4-t24">
<p>Corresponds to RAS role grants</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r71c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XS_SECURITY_CLASS</code></p>
</td>
<td class="cellalignment4329" headers="r71c1-t24 r1c2-t24">
<p>Real Application Security (RAS) security class</p>
</td>
<td class="cellalignment4329" headers="r71c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r71c1-t24 r1c4-t24">
<p>Corresponds to RAS security classes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r72c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XS_DATA_SECURITY</code></p>
</td>
<td class="cellalignment4329" headers="r72c1-t24 r1c2-t24">
<p>Real Application Security (RAS) data security policy</p>
</td>
<td class="cellalignment4329" headers="r72c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r72c1-t24 r1c4-t24">
<p>Corresponds to RAS data security policies</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r73c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XS_ACL</code></p>
</td>
<td class="cellalignment4329" headers="r73c1-t24 r1c2-t24">
<p>Real Application Security (RAS) ACL</p>
</td>
<td class="cellalignment4329" headers="r73c1-t24 r1c3-t24">
<p><code dir="ltr">SN</code></p>
</td>
<td class="cellalignment4329" headers="r73c1-t24 r1c4-t24">
<p>Corresponds to RAS access control lists (ACLs) and associated access control entries (ACEs)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r74c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XS_ACL_PARAM</code></p>
</td>
<td class="cellalignment4329" headers="r74c1-t24 r1c2-t24">
<p>Real Application Security (RAS) ACL parameter</p>
</td>
<td class="cellalignment4329" headers="r74c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r74c1-t24 r1c4-t24">
<p>Corresponds to RAS access control lists (ACL) parameters</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r75c1-t24" headers="r1c1-t24">
<p><code dir="ltr">XS_NAMESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r75c1-t24 r1c2-t24">
<p>Real Application Security (RAS) namespace</p>
</td>
<td class="cellalignment4329" headers="r75c1-t24 r1c3-t24">
<p><code dir="ltr">N</code></p>
</td>
<td class="cellalignment4329" headers="r75c1-t24 r1c4-t24">
<p>Corresponds to RAS namespaces.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" -->
<p><a href="#BGBFJFHA">Table 94-13</a> lists the types of objects returned for the major heterogeneous object types. For <code dir="ltr">SCHEMA_EXPORT</code>, certain object types are only returned if the <code dir="ltr">INCLUDE_USER</code> filter is specified at <code dir="ltr">TRUE</code>. In the table, such object types are marked <code dir="ltr">INCLUDE_USER</code>.</p>
<div id="ARPLS66896" class="tblformalwide">
<p class="titleintable"><a id="sthref5769"></a><a id="BGBFJFHA"></a>Table 94-13 Object Types Returned for the Heterogeneous Object Type</p>
<table class="cellalignment4327" title="Object Types Returned for the Heterogeneous Object Type" summary="This table lists the DBMS_METADATA Object Types Returned for the Heterogeneous Object Type." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t25">Object Type</th>
<th class="cellalignment4328" id="r1c2-t25">DATABASE_EXPORT</th>
<th class="cellalignment4328" id="r1c3-t25">SCHEMA_EXPORT</th>
<th class="cellalignment4328" id="r1c4-t25">TABLE_EXPORT</th>
<th class="cellalignment4328" id="r1c5-t25">TRANSPORTABLE_EXPORT</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t25" headers="r1c1-t25">
<p><code dir="ltr">ASSOCIATION</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r2c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r2c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r2c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t25" headers="r1c1-t25">
<p><code dir="ltr">AUDIT</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r3c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r3c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r3c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t25" headers="r1c1-t25">
<p><code dir="ltr">AUDIT_OBJ</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r4c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r4c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r4c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t25" headers="r1c1-t25">
<p><code dir="ltr">CLUSTER</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r5c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r5c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r5c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t25" headers="r1c1-t25">
<p><code dir="ltr">COMMENT</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r6c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r6c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r6c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t25" headers="r1c1-t25">
<p><code dir="ltr">CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r7c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r7c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r7c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t25" headers="r1c1-t25">
<p><code dir="ltr">CONTEXT</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r8c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r8c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r8c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t25" headers="r1c1-t25">
<p><code dir="ltr">DB_LINK</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r9c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r9c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r9c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t25" headers="r1c1-t25">
<p><code dir="ltr">DEFAULT_ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r10c1-t25 r1c3-t25">
<p><code dir="ltr">INCLUDE_USER</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r10c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t25" headers="r1c1-t25">
<p><code dir="ltr">DIMENSION</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r11c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r11c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r11c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t25" headers="r1c1-t25">
<p><code dir="ltr">DIRECTORY</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r12c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r12c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r12c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t25" headers="r1c1-t25">
<p><code dir="ltr">FGA_POLICY</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r13c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r13c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r13c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t25" headers="r1c1-t25">
<p><code dir="ltr">FUNCTION</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r14c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r14c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r14c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t25" headers="r1c1-t25">
<p><code dir="ltr">INDEX_STATISTICS</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r15c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r15c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r15c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t25" headers="r1c1-t25">
<p><code dir="ltr">INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r16c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r16c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r16c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t25" headers="r1c1-t25">
<p><code dir="ltr">INDEXTYPE</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r17c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r17c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r17c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t25" headers="r1c1-t25">
<p><code dir="ltr">JAVA_SOURCE</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r18c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r18c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r18c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t25" headers="r1c1-t25">
<p><code dir="ltr">JOB</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r19c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r19c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r19c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t25" headers="r1c1-t25">
<p><code dir="ltr">LIBRARY</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r20c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r20c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r20c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t25" headers="r1c1-t25">
<p><code dir="ltr">MATERIALIED_VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r21c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r21c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r21c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r22c1-t25" headers="r1c1-t25">
<p><code dir="ltr">MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r22c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r22c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r22c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r23c1-t25" headers="r1c1-t25">
<p><code dir="ltr">OBJECT_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r23c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r23c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r23c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r24c1-t25" headers="r1c1-t25">
<p><code dir="ltr">OPERATOR</code></p>
</td>
<td class="cellalignment4329" headers="r24c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r24c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r24c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r24c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r25c1-t25" headers="r1c1-t25">
<p><code dir="ltr">PACKAGE</code></p>
</td>
<td class="cellalignment4329" headers="r25c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r25c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r25c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r25c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r26c1-t25" headers="r1c1-t25">
<p><code dir="ltr">PACKAGE_SPEC</code></p>
</td>
<td class="cellalignment4329" headers="r26c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r26c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r26c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r26c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r27c1-t25" headers="r1c1-t25">
<p><code dir="ltr">PACKAGE_BODY</code></p>
</td>
<td class="cellalignment4329" headers="r27c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r27c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r27c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r27c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r28c1-t25" headers="r1c1-t25">
<p><code dir="ltr">PASSWORD_HISTORY</code></p>
</td>
<td class="cellalignment4329" headers="r28c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r28c1-t25 r1c3-t25">
<p><code dir="ltr">INCLUDE_USER</code></p>
</td>
<td class="cellalignment4329" headers="r28c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r28c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r29c1-t25" headers="r1c1-t25">
<p><code dir="ltr">PASSWORD_VERIFY_FUNCTION</code></p>
</td>
<td class="cellalignment4329" headers="r29c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r29c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r29c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r29c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r30c1-t25" headers="r1c1-t25">
<p><code dir="ltr">PROCEDURE</code></p>
</td>
<td class="cellalignment4329" headers="r30c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r30c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r30c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r30c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r31c1-t25" headers="r1c1-t25">
<p><code dir="ltr">PROFILE</code></p>
</td>
<td class="cellalignment4329" headers="r31c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r31c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r31c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r31c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r32c1-t25" headers="r1c1-t25">
<p><code dir="ltr">PROXY</code></p>
</td>
<td class="cellalignment4329" headers="r32c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r32c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r32c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r32c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r33c1-t25" headers="r1c1-t25">
<p><code dir="ltr">REF_CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r33c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r33c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r33c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r33c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r34c1-t25" headers="r1c1-t25">
<p><code dir="ltr">REFRESH_GROUP</code></p>
</td>
<td class="cellalignment4329" headers="r34c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r34c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r34c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r34c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r35c1-t25" headers="r1c1-t25">
<p><code dir="ltr">RESOURCE_COST</code></p>
</td>
<td class="cellalignment4329" headers="r35c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r35c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r35c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r35c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r36c1-t25" headers="r1c1-t25">
<p><code dir="ltr">RLS_CONTEXT</code></p>
</td>
<td class="cellalignment4329" headers="r36c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r36c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r36c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r36c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r37c1-t25" headers="r1c1-t25">
<p><code dir="ltr">RLS_GROUP</code></p>
</td>
<td class="cellalignment4329" headers="r37c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r37c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r37c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r37c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r38c1-t25" headers="r1c1-t25">
<p><code dir="ltr">RLS_POLICY</code></p>
</td>
<td class="cellalignment4329" headers="r38c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r38c1-t25 r1c3-t25">
<p>Table data is retrieved according to policy</p>
</td>
<td class="cellalignment4329" headers="r38c1-t25 r1c4-t25">
<p>Table data is retrieved according to policy</p>
</td>
<td class="cellalignment4329" headers="r38c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r39c1-t25" headers="r1c1-t25">
<p><code dir="ltr">ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r39c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r39c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r39c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r39c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r40c1-t25" headers="r1c1-t25">
<p><code dir="ltr">ROLE_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r40c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r40c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r40c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r40c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r41c1-t25" headers="r1c1-t25">
<p><code dir="ltr">ROLLBACK_SEGMENT</code></p>
</td>
<td class="cellalignment4329" headers="r41c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r41c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r41c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r41c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r42c1-t25" headers="r1c1-t25">
<p><code dir="ltr">SEQUENCE</code></p>
</td>
<td class="cellalignment4329" headers="r42c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r42c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r42c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r42c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r43c1-t25" headers="r1c1-t25">
<p><code dir="ltr">SYNONYM</code></p>
</td>
<td class="cellalignment4329" headers="r43c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r43c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r43c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r43c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r44c1-t25" headers="r1c1-t25">
<p><code dir="ltr">SYSTEM_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r44c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r44c1-t25 r1c3-t25">
<p><code dir="ltr">INCLUDE_USER</code></p>
</td>
<td class="cellalignment4329" headers="r44c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r44c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r45c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r45c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r45c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r45c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r45c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r46c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TABLE_DATA</code></p>
</td>
<td class="cellalignment4329" headers="r46c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r46c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r46c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r46c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r47c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TABLE_STATISTICS</code></p>
</td>
<td class="cellalignment4329" headers="r47c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r47c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r47c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r47c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r48c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r48c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r48c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r48c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r48c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r49c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TABLESPACE_QUOTA</code></p>
</td>
<td class="cellalignment4329" headers="r49c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r49c1-t25 r1c3-t25">
<p><code dir="ltr">INCLUDE_USER</code></p>
</td>
<td class="cellalignment4329" headers="r49c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r49c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r50c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TRIGGER</code></p>
</td>
<td class="cellalignment4329" headers="r50c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r50c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r50c1-t25 r1c4-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r50c1-t25 r1c5-t25">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r51c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TRUSTED_DB_LINK</code></p>
</td>
<td class="cellalignment4329" headers="r51c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r51c1-t25 r1c3-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r51c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r51c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r52c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r52c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r52c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r52c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r52c1-t25 r1c5-t25">
<p>Yes, if the types are used by tables in the transportable set</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r53c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TYPE_SPEC</code></p>
</td>
<td class="cellalignment4329" headers="r53c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r53c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r53c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r53c1-t25 r1c5-t25">
<p>Yes, if the types are used by tables in the transportable set</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r54c1-t25" headers="r1c1-t25">
<p><code dir="ltr">TYPE_BODY</code></p>
</td>
<td class="cellalignment4329" headers="r54c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r54c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r54c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r54c1-t25 r1c5-t25">
<p>Yes, if the types are used by tables in the transportable set</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r55c1-t25" headers="r1c1-t25">
<p><code dir="ltr">USER</code></p>
</td>
<td class="cellalignment4329" headers="r55c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r55c1-t25 r1c3-t25">
<p><code dir="ltr">INCLUDE_USER</code></p>
</td>
<td class="cellalignment4329" headers="r55c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r55c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r56c1-t25" headers="r1c1-t25">
<p><code dir="ltr">VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r56c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r56c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r56c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r56c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r57c1-t25" headers="r1c1-t25">
<p><code dir="ltr">XMLSCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r57c1-t25 r1c2-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r57c1-t25 r1c3-t25">
<p>Yes</p>
</td>
<td class="cellalignment4329" headers="r57c1-t25 r1c4-t25">
<p>No</p>
</td>
<td class="cellalignment4329" headers="r57c1-t25 r1c5-t25">
<p>No</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5770"></a>Return Values</p>
<p>An opaque handle to the class of objects. This handle is used as input to <code dir="ltr">SET_FILTER</code>, <code dir="ltr">SET_COUNT,</code> <code dir="ltr">ADD_TRANSFORM</code>, <code dir="ltr">GET_QUERY,</code> <code dir="ltr">SET_PARSE_ITEM,</code> <code dir="ltr">FETCH_xxx,</code> and <code dir="ltr">CLOSE</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5771"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A <code dir="ltr">NULL</code> or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INVALID_OBJECT_PARAM</code>. The <code dir="ltr">version</code> or <code dir="ltr">model</code> parameter was not valid for the <code dir="ltr">object_type</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66897" class="refsect2"><a id="i1019325"></a>
<h3 class="refsect2">OPENW Function<a id="sthref5772"></a></h3>
<p>This function specifies the type of object to be submitted and the object model. The return value is an opaque context handle.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBIDBB">Subprograms for Submitting XML to the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5773"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.OPENW
  (object_type  IN VARCHAR2,
  version       IN VARCHAR2 DEFAULT &#39;COMPATIBLE&#39;,
  model         IN VARCHAR2 DEFAULT &#39;ORACLE&#39;) 
 RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5774"></a>Parameters</p>
<div id="ARPLS66898" class="tblformal">
<p class="titleintable"><a id="sthref5775"></a><a id="sthref5776"></a>Table 94-14 OPENW Function Parameters</p>
<table class="cellalignment4330" title="OPENW Function Parameters" summary="This table describes the parameters of the DBMS_METADATA.OPENW subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t27">Parameter</th>
<th class="cellalignment4328" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t27" headers="r1c1-t27">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t27 r1c2-t27">
<p>The type of object to be submitted. Valid types names and their meanings are listed in <a href="#BGBIEDIA">Table 94-12</a>. The type cannot be a heterogeneous object type.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t27" headers="r1c1-t27">
<p><code dir="ltr">version</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t27 r1c2-t27">
<p>The version of DDL to be generated by the <code dir="ltr">CONVERT</code> function. DDL clauses that are incompatible with the version will not be generated. The legal values for this parameter are as follows:</p>
<ul>
<li>
<p><code dir="ltr">COMPATIBLE</code> - This is the default. The version of the DDL corresponds to the database compatibility level. Database compatibility must be set to 9.2.0 or higher.</p>
</li>
<li>
<p><code dir="ltr">LATEST</code> - The version of the DDL corresponds to the database version.</p>
</li>
<li>
<p>A specific database version. The value cannot be lower than 9.2.0.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t27" headers="r1c1-t27">
<p><code dir="ltr">model</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t27 r1c2-t27">
<p>Specifies which view to use. Only the Oracle proprietary (ORACLE) view is supported by <code dir="ltr">DBMS_METADATA</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5777"></a>Return Values</p>
<p>An opaque handle to write context. This handle is used as input to the <code dir="ltr">ADD_TRANSFORM</code>, <code dir="ltr">CONVERT</code>, <code dir="ltr">PUT</code>, and <code dir="ltr">CLOSE</code> procedures.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5778"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A NULL or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INVALID_OBJECT_PARAM</code>. The <code dir="ltr">model</code> parameter was not valid for the <code dir="ltr">object_type</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66899" class="refsect2"><a id="i1019618"></a>
<h3 class="refsect2">PUT Function<a id="sthref5779"></a></h3>
<p>This function submits an XML document containing object metadata to the database to create the object.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBIDBB">Subprograms for Submitting XML to the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5780"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.PUT (
   handle     IN             NUMBER,
   document   IN             sys.XMLType,
   flags      IN             NUMBER,
   results    IN OUT NOCOPY  sys.ku$_SubmitResults)
  RETURN BOOLEAN;

DBMS_METADATA.PUT (
   handle     IN             NUMBER,
   document   IN             CLOB,
   flags      IN             NUMBER,
   results    IN OUT NOCOPY  sys.ku$_SubmitResults)
 RETURN BOOLEAN;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5781"></a>Parameters</p>
<div id="ARPLS66900" class="tblformal">
<p class="titleintable"><a id="sthref5782"></a><a id="sthref5783"></a>Table 94-15 PUT Function Parameters</p>
<table class="cellalignment4330" title="PUT Function Parameters" summary="This table describes the parameters of the DBMS_METADATA.PUT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t29">Parameter</th>
<th class="cellalignment4328" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t29" headers="r1c1-t29">
<p><code dir="ltr">handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t29 r1c2-t29">
<p>The handle returned from <code dir="ltr">OPENW</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t29" headers="r1c1-t29">
<p><code dir="ltr">document</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t29 r1c2-t29">
<p>The XML document containing object metadata for the type of the <code dir="ltr">OPENW</code> handle.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t29" headers="r1c1-t29">
<p><code dir="ltr">flags</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t29 r1c2-t29">
<p>Reserved for future use</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t29" headers="r1c1-t29">
<p><code dir="ltr">results</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t29 r1c2-t29">
<p>Detailed results of the operation.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5784"></a>Return Values</p>
<p><code dir="ltr">TRUE</code> if all SQL operations succeeded; <code dir="ltr">FALSE</code> if there were any errors.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5785"></a>Usage Notes</p>
<p>The <code dir="ltr">PUT</code> function converts the XML document to DDL just as <code dir="ltr">CONVERT</code> does (applying the specified transforms in turn) and then submits each resultant DDL statement to the database. As with <code dir="ltr">CONVERT</code>, the DDL transform must be specified. The DDL statements and associated parse items are returned in the <code dir="ltr">sys</code>.<code dir="ltr">ku$_SubmitResults</code> nested table. With each DDL statement is a nested table of error lines containing any errors or exceptions raised by the statement.</p>
<p>The encoding of the XML document is embedded in its CLOB or XMLType representation. The version of the metadata is embedded in the XML. The generated DDL is valid for the database version specified in <code dir="ltr">OPENW</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5786"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A NULL or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INCONSISTENT_OPERATION</code>. The DDL transform was not specified.</p>
</li>
<li>
<p><code dir="ltr">INCOMPATIBLE_DOCUMENT</code>. The version of the XML document is not compatible with this version of the software.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66901" class="refsect2"><a id="i1019710"></a>
<h3 class="refsect2">SET_COUNT Procedure<a id="sthref5787"></a></h3>
<p>This procedure specifies the maximum number of objects to be retrieved in a single <code dir="ltr">FETCH_xxx</code> call. By default, each call to <code dir="ltr">FETCH_xxx</code> returns one object. You can use the <code dir="ltr">SET_COUNT</code> procedure to override this default. If <code dir="ltr">FETCH_xxx</code> is called from a client, specifying a count value greater than 1 can result in fewer server round trips and, therefore, improved performance.</p>
<p>For heterogeneous object types, a single <code dir="ltr">FETCH_xxx</code> operation only returns objects of a single object type.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5788"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.SET_COUNT (
   handle           IN NUMBER,
   value            IN NUMBER,
   object_type_path IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5789"></a>Parameters</p>
<div id="ARPLS66902" class="tblhruleformal">
<p class="titleintable"><a id="sthref5790"></a><a id="sthref5791"></a>Table 94-16 SET_COUNT Procedure Parameters</p>
<table class="cellalignment4327" title="SET_COUNT Procedure Parameters" summary="This table describes the parameters of the DBMS_METADATA.SET_COUNT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t31">Parameter</th>
<th class="cellalignment4328" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t31" headers="r1c1-t31">
<p><code dir="ltr">handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t31 r1c2-t31">
<p>The handle returned from <code dir="ltr">OPEN</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t31" headers="r1c1-t31">
<p><code dir="ltr">value</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t31 r1c2-t31">
<p>The maximum number of objects to retrieve.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t31" headers="r1c1-t31">
<p><code dir="ltr">object_type_path</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t31 r1c2-t31">
<p>A path name designating the object types to which the count value applies. By default, the count value applies to the object type of the <code dir="ltr">OPEN</code> handle. When the <code dir="ltr">OPEN</code> handle designates a heterogeneous object type, behavior can be either of the following:</p>
<ul>
<li>
<p>if <code dir="ltr">object_type_path</code> is omitted, the count applies to all object types within the heterogeneous collection</p>
</li>
<li>
<p>if <code dir="ltr">object_type_path</code> is specified, the count only applies to the specific node (or set of nodes) within the tree of object types forming the heterogeneous collection</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5792"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A <code dir="ltr">NULL</code> or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INVALID_OPERATION</code>. <code dir="ltr">SET_COUNT</code> was called after the first call to <code dir="ltr">FETCH_xxx</code> for the <code dir="ltr">OPEN</code> context. After the first call to <code dir="ltr">FETCH_xxx</code> is made, no further calls to <code dir="ltr">SET_COUNT</code> for the current <code dir="ltr">OPEN</code> context are permitted.</p>
</li>
<li>
<p><code dir="ltr">INCONSISTENT_ARGS</code>. <code dir="ltr">object_type</code> parameter is not consistent with handle.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66903" class="refsect2"><a id="i998485"></a>
<h3 class="refsect2">SET_FILTER Procedure<a id="sthref5793"></a></h3>
<p>This procedure specifies restrictions on the objects to be retrieved, for example, the object name or schema.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5794"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.SET_FILTER (
   handle           IN NUMBER,
   name             IN VARCHAR2,
   value            IN VARCHAR2,
   object_type_path IN VARCHAR2 DEFAULT NULL);

DBMS_METADATA.SET_FILTER (
   handle            IN NUMBER,
   name              IN VARCHAR2,
   value             IN BOOLEAN DEFAULT TRUE,
   object_type_path  IN VARCHAR2 DEFAULT NULL);

DBMS_METADATA.SET_FILTER (
   handle            IN NUMBER,
   name              IN VARCHAR2,
   value             IN NUMBER,
   object_type_path  IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5795"></a>Parameters</p>
<div id="ARPLS66904" class="tblhruleformal">
<p class="titleintable"><a id="sthref5796"></a><a id="sthref5797"></a>Table 94-17 SET_FILTER Procedure Parameters</p>
<table class="cellalignment4327" title="SET_FILTER Procedure Parameters" summary="This table describes the parameters of the DBMS_METADATA.SET_FILTER subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t33">Parameter</th>
<th class="cellalignment4328" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t33" headers="r1c1-t33">
<p><code dir="ltr">handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t33 r1c2-t33">
<p>The handle returned from <code dir="ltr">OPEN</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t33" headers="r1c1-t33">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t33 r1c2-t33">
<p>The name of the filter. For each filter, <a href="#BGBHBCDB">Table 94-18</a> lists the <code dir="ltr">object_type</code> it applies to, its name, its datatype (text or Boolean) and its meaning or effect (including its default value, if any).</p>
<p>The Datatype column of <a href="#BGBHBCDB">Table 94-18</a> also indicates whether a text filter is an expression filter. An expression filter is the right-hand side of a SQL comparison (that is, a SQL comparison operator (=, !=, and so on.)) and the value compared against. The value must contain parentheses and quotation marks where appropriate. Note that in PL/SQL and SQL*Plus, two single quotes (<span class="italic">not</span> a double quote) are needed to represent an apostrophe. For example, an example of a <code dir="ltr">NAME_EXPR</code> filter in PL/SQL is as follows:</p>
<p><code dir="ltr">&#39;IN (&#39;&#39;DEPT&#39;&#39;,&#39;&#39;EMP&#39;&#39;)&#39;</code></p>
<p>The filter value is combined with a particular object attribute to produce a <code dir="ltr">WHERE</code> condition in the query that fetches the objects. In the preceding example, the filter is combined with the attribute corresponding to an object name; objects named &#39;<code dir="ltr">DEPT&#39;</code> and &#39;<code dir="ltr">EMP&#39;</code> are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t33" headers="r1c1-t33">
<p><code dir="ltr">value</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t33 r1c2-t33">
<p>The value of the filter. Text, Boolean, and Numeric filters are supported.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t33" headers="r1c1-t33">
<p><code dir="ltr">object_type_path</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t33 r1c2-t33">
<p>A path name designating the object types to which the filter applies. By default, the filter applies to the object type of the <code dir="ltr">OPEN</code> handle. When the <code dir="ltr">OPEN</code> handle designates a heterogeneous object type, you can use this parameter to specify a filter for a specific node or set of nodes within the tree of object types that form the heterogeneous collection. See <a href="#BGBBCDJH">Table 94-19</a> for a listing of some of the values for this parameter.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p><a href="#BGBHBCDB">Table 94-18</a> describes the object type, name, datatype, and meaning of the filters available with the <code dir="ltr">SET_FILTER</code> procedure.</p>
<div id="ARPLS66905" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref5798"></a><a id="BGBHBCDB"></a>Table 94-18 SET_FILTER: Filters</p>
<table class="cellalignment4327" title="SET_FILTER: Filters" summary="This table lists the Filters for SET_FILTER." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t34">Object Type</th>
<th class="cellalignment4328" id="r1c2-t34">Name</th>
<th class="cellalignment4328" id="r1c3-t34">Datatype</th>
<th class="cellalignment4328" id="r1c4-t34">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t34" headers="r1c1-t34">
<p>Named objects</p>
</td>
<td class="cellalignment4329" headers="r2c1-t34 r1c2-t34">
<p><code dir="ltr">NAME</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r2c1-t34 r1c4-t34">
<p>Objects with this exact name are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t34" headers="r1c1-t34">
<p>Named objects</p>
</td>
<td class="cellalignment4329" headers="r3c1-t34 r1c2-t34">
<p><code dir="ltr">NAME_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r3c1-t34 r1c4-t34">
<p>The filter value is combined with the object attribute corresponding to the object name to produce a <code dir="ltr">WHERE</code> condition in the query that fetches the objects.</p>
<p>By default, all named objects of <code dir="ltr">object_type</code> are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t34" headers="r1c1-t34">
<p>Named objects</p>
</td>
<td class="cellalignment4329" headers="r4c1-t34 r1c2-t34">
<p><code dir="ltr">EXCLUDE_NAME_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r4c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the object name to specify objects that are to be excluded from the set of objects fetched.</p>
<p>By default, all named objects of the object type are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t34" headers="r1c1-t34">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t34 r1c2-t34">
<p><code dir="ltr">EXCLUDE_TABLES</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t34 r1c3-t34">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r5c1-t34 r1c4-t34">
<p>If <code dir="ltr">TRUE</code>, all paths associated with tables are excluded from the set of objects fetched. If <code dir="ltr">FALSE</code> (the default), all paths associated with tables are fetched.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t34" headers="r1c1-t34">
<p>Schema objects</p>
</td>
<td class="cellalignment4329" headers="r6c1-t34 r1c2-t34">
<p><code dir="ltr">SCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r6c1-t34 r1c4-t34">
<p>Objects in this schema are selected. If the object type is SYNONYM, specify PUBLIC to select public synonyms.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t34" headers="r1c1-t34">
<p>Schema objects</p>
</td>
<td class="cellalignment4329" headers="r7c1-t34 r1c2-t34">
<p><code dir="ltr">SCHEMA_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r7c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the object&#39;s schema.</p>
<p>The default is determined as follows:</p>
<p>- if <code dir="ltr">BASE_OBJECT_SCHEMA</code> is specified, then objects in that schema are selected;</p>
<p>- otherwise, objects in the current schema are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t34" headers="r1c1-t34">
<p><code dir="ltr">PACKAGE, TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t34 r1c2-t34">
<p><code dir="ltr">SPECIFICATION</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t34 r1c3-t34">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r8c1-t34 r1c4-t34">
<p>If <code dir="ltr">TRUE</code>, retrieve the package or type specification. Defaults to T<code dir="ltr">RUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t34" headers="r1c1-t34">
<p><code dir="ltr">PACKAGE, TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t34 r1c2-t34">
<p><code dir="ltr">BODY</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t34 r1c3-t34">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r9c1-t34 r1c4-t34">
<p>If <code dir="ltr">TRUE</code>, retrieve the package or type body. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t34" headers="r1c1-t34">
<p><code dir="ltr">TABLE, CLUSTER, INDEX, TABLE_DATA, TABLE_EXPORT, TRANSPORTABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t34 r1c2-t34">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r10c1-t34 r1c4-t34">
<p>Objects in this tablespace (or having a partition in this tablespace) are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t34" headers="r1c1-t34">
<p><code dir="ltr">TABLE, CLUSTER, INDEX,TABLE_DATA, TABLE_EXPORT, TRANSPORTABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t34 r1c2-t34">
<p><code dir="ltr">TABLESPACE_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r11c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the object&#39;s tablespace (or in the case of a partitioned table or index, the partition&#39;s tablespaces). By default, objects in all tablespaces are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t34" headers="r1c1-t34">
<p><code dir="ltr">TABLE</code>, objects dependent on tables</p>
</td>
<td class="cellalignment4329" headers="r12c1-t34 r1c2-t34">
<p><code dir="ltr">PRIMARY</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t34 r1c3-t34">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r12c1-t34 r1c4-t34">
<p>If <code dir="ltr">TRUE</code>, retrieve primary tables (that is, tables for which the secondary object bit in <code dir="ltr">obj$</code> is clear.</p>
<p>Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t34" headers="r1c1-t34">
<p><code dir="ltr">TABLE</code>, objects dependent on tables</p>
</td>
<td class="cellalignment4329" headers="r13c1-t34 r1c2-t34">
<p><code dir="ltr">SECONDARY</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t34 r1c3-t34">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r13c1-t34 r1c4-t34">
<p>If <code dir="ltr">TRUE</code>, retrieve secondary tables (that is, tables for which the secondary object bit in <code dir="ltr">obj$</code> is set).</p>
<p>Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t34" headers="r1c1-t34">
<p>Dependent Objects</p>
</td>
<td class="cellalignment4329" headers="r14c1-t34 r1c2-t34">
<p><code dir="ltr">BASE_OBJECT_NAME</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r14c1-t34 r1c4-t34">
<p>Objects are selected that are defined or granted on objects with this name. Specify <code dir="ltr">SCHEMA</code> for triggers on schemas. Specify <code dir="ltr">DATABASE</code> for database triggers. Column-level comments cannot be selected by column name; the base object name must be the name of the table, view, or materialized view containing the column.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t34" headers="r1c1-t34">
<p>Dependent Objects</p>
</td>
<td class="cellalignment4329" headers="r15c1-t34 r1c2-t34">
<p><code dir="ltr">BASE_OBJECT_SCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r15c1-t34 r1c4-t34">
<p>Objects are selected that are defined or granted on objects in this schema. If <code dir="ltr">BASE_OBJECT_NAME</code> is specified with a value other than <code dir="ltr">SCHEMA</code> or <code dir="ltr">DATABASE</code>, this defaults to the current schema.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t34" headers="r1c1-t34">
<p>Dependent Objects</p>
</td>
<td class="cellalignment4329" headers="r16c1-t34 r1c2-t34">
<p><code dir="ltr">BASE_OBJECT_NAME_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r16c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the name of the base object.</p>
<p>Not valid for schema and database triggers.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t34" headers="r1c1-t34">
<p>Dependent Objects</p>
</td>
<td class="cellalignment4329" headers="r17c1-t34 r1c2-t34">
<p><code dir="ltr">EXCLUDE_BASE_OBJECT_NAME_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r17c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the name of the base object to specify objects that are to be excluded from the set of objects fetched.</p>
<p>Not valid for schema and database triggers.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t34" headers="r1c1-t34">
<p>Dependent Objects</p>
</td>
<td class="cellalignment4329" headers="r18c1-t34 r1c2-t34">
<p><code dir="ltr">BASE_OBJECT_SCHEMA_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r18c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the schema of the base object.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t34" headers="r1c1-t34">
<p>Dependent Objects</p>
</td>
<td class="cellalignment4329" headers="r19c1-t34 r1c2-t34">
<p><code dir="ltr">BASE_OBJECT_TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r19c1-t34 r1c4-t34">
<p>The object type of the base object.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t34" headers="r1c1-t34">
<p>Dependent Objects</p>
</td>
<td class="cellalignment4329" headers="r20c1-t34 r1c2-t34">
<p><code dir="ltr">BASE_OBJECT_TYPE_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r20c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the object type of the base object.</p>
<p>By default no filtering is done on object type.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t34" headers="r1c1-t34">
<p>Dependent Objects</p>
</td>
<td class="cellalignment4329" headers="r21c1-t34 r1c2-t34">
<p><code dir="ltr">BASE_OBJECT_TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r21c1-t34 r1c4-t34">
<p>The tablespace of the base object.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r22c1-t34" headers="r1c1-t34">
<p>Dependent Objects</p>
</td>
<td class="cellalignment4329" headers="r22c1-t34 r1c2-t34">
<p><code dir="ltr">BASE_OBJECT_TABLESPACE_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r22c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the tablespaces of the base object. By default, no filtering is done on the tablespace.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r23c1-t34" headers="r1c1-t34">
<p><code dir="ltr">INDEX, TRIGGER</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t34 r1c2-t34">
<p><code dir="ltr">SYSTEM_GENERATED</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t34 r1c3-t34">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r23c1-t34 r1c4-t34">
<p>If <code dir="ltr">TRUE</code>, select indexes or triggers even if they are system-generated. If <code dir="ltr">FALSE</code>, omit system-generated indexes or triggers. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r24c1-t34" headers="r1c1-t34">
<p>Granted Objects</p>
</td>
<td class="cellalignment4329" headers="r24c1-t34 r1c2-t34">
<p><code dir="ltr">GRANTEE</code></p>
</td>
<td class="cellalignment4329" headers="r24c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r24c1-t34 r1c4-t34">
<p>Objects are selected that are granted to this user or role. Specify <code dir="ltr">PUBLIC</code> for grants to <code dir="ltr">PUBLIC</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r25c1-t34" headers="r1c1-t34">
<p>Granted Objects</p>
</td>
<td class="cellalignment4329" headers="r25c1-t34 r1c2-t34">
<p><code dir="ltr">PRIVNAME</code></p>
</td>
<td class="cellalignment4329" headers="r25c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r25c1-t34 r1c4-t34">
<p>The name of the privilege or role to be granted. For TABLESPACE_QUOTA, only UNLIMITED can be specified.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r26c1-t34" headers="r1c1-t34">
<p>Granted Objects</p>
</td>
<td class="cellalignment4329" headers="r26c1-t34 r1c2-t34">
<p><code dir="ltr">PRIVNAME_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r26c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r26c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the privilege or role name. By default, all privileges/roles are returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r27c1-t34" headers="r1c1-t34">
<p>Granted Objects</p>
</td>
<td class="cellalignment4329" headers="r27c1-t34 r1c2-t34">
<p><code dir="ltr">GRANTEE_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r27c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r27c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the grantee name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r28c1-t34" headers="r1c1-t34">
<p>Granted Objects</p>
</td>
<td class="cellalignment4329" headers="r28c1-t34 r1c2-t34">
<p><code dir="ltr">EXCLUDE_GRANTEE_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r28c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r28c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the grantee name to specify objects that are to be excluded from the set of objects fetched.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r29c1-t34" headers="r1c1-t34">
<p><code dir="ltr">OBJECT_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r29c1-t34 r1c2-t34">
<p><code dir="ltr">GRANTOR</code></p>
</td>
<td class="cellalignment4329" headers="r29c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r29c1-t34 r1c4-t34">
<p>Object grants are selected that are granted by this user.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r30c1-t34" headers="r1c1-t34">
<p><code dir="ltr">SYNONYM, JAVA_SOURCE, XMLSCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r30c1-t34 r1c2-t34">
<p><code dir="ltr">LONGNAME</code></p>
</td>
<td class="cellalignment4329" headers="r30c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r30c1-t34 r1c4-t34">
<p>A name longer than 30 characters. Objects with this exact name are selected. If the object name is 30 characters or less, the <code dir="ltr">NAME</code> filter must be used.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r31c1-t34" headers="r1c1-t34">
<p><code dir="ltr">SYNONYM, JAVA_SOURCE, XMLSCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r31c1-t34 r1c2-t34">
<p><code dir="ltr">LONGNAME_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r31c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r31c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to the object&#39;s long name. By default, no filtering is done on the long name of an object.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r32c1-t34" headers="r1c1-t34">
<p>All objects</p>
</td>
<td class="cellalignment4329" headers="r32c1-t34 r1c2-t34">
<p><code dir="ltr">CUSTOM_FILTER</code></p>
</td>
<td class="cellalignment4329" headers="r32c1-t34 r1c3-t34">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r32c1-t34 r1c4-t34">
<p>The text of a <code dir="ltr">WHERE</code> condition. The condition is appended to the query that fetches the objects. By default, no custom filter is used.</p>
<p>The other filters are intended to meet the needs of the majority of users. Use <code dir="ltr">CUSTOM_FILTER</code> when no defined filters exists for your purpose. Of necessity such a filter depends on the detailed structure of the UDTs and views used in the query. Because filters may change from version to version, upward compatibility is not guaranteed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r33c1-t34" headers="r1c1-t34">
<p>All objects</p>
</td>
<td class="cellalignment4329" headers="r33c1-t34 r1c2-t34">
<p><code dir="ltr">EDITION</code></p>
</td>
<td class="cellalignment4329" headers="r33c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r33c1-t34 r1c4-t34">
<p>The edition filter is accepted for any object type, but affects only objects that support editions. The filter is only accepted for local objects (that is, the <code dir="ltr">network_link</code> parameter is not specified in the <code dir="ltr">OPEN</code> call). The edition name must be a valid edition name. If an edition is not specified, the edition of the active session is used.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r34c1-t34" headers="r1c1-t34">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r34c1-t34 r1c2-t34">
<p><code dir="ltr">SCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r34c1-t34 r1c3-t34">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r34c1-t34 r1c4-t34">
<p>The schema whose objects are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r35c1-t34" headers="r1c1-t34">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r35c1-t34 r1c2-t34">
<p><code dir="ltr">SCHEMA_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r35c1-t34 r1c3-t34">
<p><code dir="ltr">Text expression</code></p>
</td>
<td class="cellalignment4329" headers="r35c1-t34 r1c4-t34">
<p>The filter value is either:</p>
<p>combined with the attribute corresponding to a schema name to produce a <code dir="ltr">WHERE</code> condition in the query that fetches schema objects,</p>
<p>combined with the attribute corresponding to a base schema name to produce a <code dir="ltr">WHERE</code> condition in the query that fetches dependent objects.</p>
<p>By default the current user&#39;s objects are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r36c1-t34" headers="r1c1-t34">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r36c1-t34 r1c2-t34">
<p><code dir="ltr">INCLUDE_USER</code></p>
</td>
<td class="cellalignment4329" headers="r36c1-t34 r1c3-t34">
<p><code dir="ltr">Boolean</code></p>
</td>
<td class="cellalignment4329" headers="r36c1-t34 r1c4-t34">
<p>If <code dir="ltr">TRUE</code>, retrieve objects containing privileged information about the user. For example, <code dir="ltr">USER</code>, <code dir="ltr">PASSWORD_HISTORY</code>, <code dir="ltr">TABLESPACE_QUOTA</code>.</p>
<p>Defaults to <code dir="ltr">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r37c1-t34" headers="r1c1-t34">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r37c1-t34 r1c2-t34">
<p><code dir="ltr">SCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r37c1-t34 r1c3-t34">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r37c1-t34 r1c4-t34">
<p>Objects (tables and their dependent objects) in this schema are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r38c1-t34" headers="r1c1-t34">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r38c1-t34 r1c2-t34">
<p><code dir="ltr">SCHEMA_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r38c1-t34 r1c3-t34">
<p><code dir="ltr">Text expression</code></p>
</td>
<td class="cellalignment4329" headers="r38c1-t34 r1c4-t34">
<p>The filter value is either:</p>
<p>combined with the attribute corresponding to a schema name to produce a <code dir="ltr">WHERE</code> condition in the query that fetches the tables,</p>
<p>combined with the attribute corresponding to a base schema name to produce a <code dir="ltr">WHERE</code> condition in the query that fetches the tables&#39; dependent objects.</p>
<p>By default the current user&#39;s objects are selected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r39c1-t34" headers="r1c1-t34">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r39c1-t34 r1c2-t34">
<p><code dir="ltr">NAME</code></p>
</td>
<td class="cellalignment4329" headers="r39c1-t34 r1c3-t34">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r39c1-t34 r1c4-t34">
<p>The table with this exact name is selected along with its dependent objects.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r40c1-t34" headers="r1c1-t34">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r40c1-t34 r1c2-t34">
<p><code dir="ltr">NAME_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r40c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r40c1-t34 r1c4-t34">
<p>The filter value is combined with the attribute corresponding to a table name in the queries that fetch tables and their dependent objects.</p>
<p>By default all tables in the selected schemas are selected, along with their dependent objects.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r41c1-t34" headers="r1c1-t34">
<p>Heterogeneous objects</p>
</td>
<td class="cellalignment4329" headers="r41c1-t34 r1c2-t34">
<p><code dir="ltr">BEGIN_WITH</code></p>
</td>
<td class="cellalignment4329" headers="r41c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r41c1-t34 r1c4-t34">
<p>The fully qualified path name of the first object type in the heterogeneous collection to be retrieved. Objects normally fetched prior to this object type will not be retrieved.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r42c1-t34" headers="r1c1-t34">
<p>Heterogeneous objects</p>
</td>
<td class="cellalignment4329" headers="r42c1-t34 r1c2-t34">
<p><code dir="ltr">BEGIN_AFTER</code></p>
</td>
<td class="cellalignment4329" headers="r42c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r42c1-t34 r1c4-t34">
<p>The fully qualified path name of an object type after which the heterogeneous retrieval should begin. Objects of this type will not be retrieved, nor will objects normally fetched prior to this object type.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r43c1-t34" headers="r1c1-t34">
<p>Heterogeneous objects</p>
</td>
<td class="cellalignment4329" headers="r43c1-t34 r1c2-t34">
<p><code dir="ltr">END_BEFORE</code></p>
</td>
<td class="cellalignment4329" headers="r43c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r43c1-t34 r1c4-t34">
<p>The fully qualified path name of an object type where the heterogeneous retrieval should end. Objects of this type will not be retrieved, nor will objects normally fetched after this object type.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r44c1-t34" headers="r1c1-t34">
<p>Heterogeneous objects</p>
</td>
<td class="cellalignment4329" headers="r44c1-t34 r1c2-t34">
<p><code dir="ltr">END_WITH</code></p>
</td>
<td class="cellalignment4329" headers="r44c1-t34 r1c3-t34">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r44c1-t34 r1c4-t34">
<p>The fully qualified path name of the last object type in the heterogeneous collection to be retrieved. Objects normally fetched after this object type will not be retrieved.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r45c1-t34" headers="r1c1-t34">
<p>Heterogeneous objects</p>
</td>
<td class="cellalignment4329" headers="r45c1-t34 r1c2-t34">
<p><code dir="ltr">INCLUDE_PATH_EXPR, EXCLUDE_PATH_EXPR</code></p>
</td>
<td class="cellalignment4329" headers="r45c1-t34 r1c3-t34">
<p>Text expression</p>
</td>
<td class="cellalignment4329" headers="r45c1-t34 r1c4-t34">
<p>For these two filters, the filter value is combined with the attribute corresponding to an object type path name to produce a <code dir="ltr">WHERE</code> condition in the query that fetches the object types belonging to the heterogeneous collection. Objects of types satisfying this condition are included (<code dir="ltr">INCLUDE_PATH_EXPR</code>) or excluded (<code dir="ltr">EXCLUDE_PATH_EXPR</code>) from the set of object types fetched. Path names in the filter value do not have to be fully qualified. See <a href="#BGBBCDJH">Table 94-19</a> for valid path names that can be used with these filters.</p>
<p><code dir="ltr">BEGIN_WITH</code>, <code dir="ltr">BEGIN_AFTER</code>, <code dir="ltr">END_BEFORE</code>, <code dir="ltr">END_WITH</code>, <code dir="ltr">INCLUDE_PATH_EXPR</code>, and <code dir="ltr">EXCLUDE_PATH_EXPR</code> all restrict the set of object types in the heterogeneous collection. By default, objects of all object types in the heterogeneous collection are retrieved.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5799"></a>Usage Notes</p>
<ul>
<li>
<p>Each call to <code dir="ltr">SET_FILTER</code> causes a <code dir="ltr">WHERE</code> condition to be added to the underlying query that fetches the set of objects. The <code dir="ltr">WHERE</code> conditions are ANDed together, so you can use multiple <code dir="ltr">SET_FILTER</code> calls to refine the set of objects to be returned. For example to specify that you want the object named <code dir="ltr">EMP</code> in schema <code dir="ltr">SCOTT</code>, do the following:</p>
<pre dir="ltr"> SET_FILTER(handle,&#39;SCHEMA&#39;,&#39;SCOTT&#39;);
 SET_FILTER(handle,&#39;NAME&#39;,&#39;EMP&#39;);
</pre></li>
<li>
<p>You can use the same text expression filter multiple times with different values. All the filter conditions will be applied to the query. For example, to get objects with names between Felix and Oscar, do the following:</p>
<pre dir="ltr">SET_FILTER(handle,&#39;NAME_EXPR&#39;,&#39;&gt;=&#39;&#39;FELIX&#39;&#39;&#39;);
SET_FILTER(handle,&#39;NAME_EXPR&#39;,&#39;&lt;=&#39;&#39;OSCAR&#39;&#39;&#39;);
</pre></li>
<li>
<p><code dir="ltr">With SET_FILTER,</code> you can specify the schema of objects to be retrieved, but security considerations may override this specification. If the caller is <code dir="ltr">SYS</code> or has <code dir="ltr">SELECT_CATALOG_ROLE</code>, then any object can be retrieved; otherwise, only the following can be retrieved:</p>
<ul>
<li>
<p>Schema objects owned by the current user</p>
</li>
<li>
<p>Public synonyms</p>
</li>
<li>
<p>System privileges granted to the current user or to <code dir="ltr">PUBLIC</code></p>
</li>
<li>
<p>Grants on objects for which the current user is owner, grantor, or grantee (either explicitly or as <code dir="ltr">PUBLIC</code>).</p>
</li>
<li>
<p><code dir="ltr">SCHEMA_EXPORT</code> where the <code dir="ltr">name</code> is the current user</p>
</li>
<li>
<p><code dir="ltr">TABLE_EXPORT</code> where <code dir="ltr">SCHEMA</code> is the current user</p>
</li>
</ul>
<p>If you request objects that you are not privileged to retrieve, no exception is raised; the object is not retrieved, as if it did not exist.</p>
<p>In stored procedures, functions, and definers-rights packages, roles (such as <code dir="ltr">SELECT_CATALOG_ROLE</code>) are disabled. Therefore, such a PL/SQL program can only fetch metadata for objects in its own schema. If you want to write a PL/SQL program that fetches metadata for objects in a different schema (based on the invoker&#39;s possession of <code dir="ltr">SELECT_CATALOG_ROLE</code>), you must make the program invokers-rights.</p>
</li>
<li>
<p>For heterogeneous object types, the <code dir="ltr">BEGIN_WITH</code> and <code dir="ltr">BEGIN_AFTER</code> filters allow restart on an object type boundary. Appropriate filter values are returned by the <code dir="ltr">FETCH_XML_CLOB</code> procedure.</p>
<p>Filters on heterogeneous objects provide default values for filters on object types within the collection. You can override this default for a particular object type by specifying the appropriate filter for the specific object type path. For example, for <code dir="ltr">SCHEMA_EXPORT</code> the <code dir="ltr">NAME</code> filter specifies the schema to be fetched including all the tables in the schema, but you can further restrict this set of tables by supplying a <code dir="ltr">NAME_EXPR</code> filter explicitly for the TABLE object type path. <a href="#BGBBCDJH">Table 94-19</a> lists valid object type path names for the major heterogeneous object types along with an explanation of the scope of each path name. (The same information is available in the following catalog views: <code dir="ltr">DATABASE_EXPORT_OBJECTS</code>, <code dir="ltr">SCHEMA_EXPORT_OBJECTS</code>, and <code dir="ltr">TABLE_EXPORT_OBJECTS</code>.) See <a href="#BGBHBCDB">Table 94-18</a> for filters defined for each path name. These path names are valid in the <code dir="ltr">INCLUDE_PATH_EXPR</code> and <code dir="ltr">EXCLUDE_PATH_EXPR</code> filters. Path names marked with an asterisk (*) are <span class="italic">only</span> valid in those filters; they cannot be used as values of the <code dir="ltr">SET_FILTER</code> <code dir="ltr">object_type_path</code> parameter.</p>
</li>
</ul>
<div id="ARPLS66906" class="tblformalwide">
<p class="titleintable"><a id="sthref5800"></a><a id="BGBBCDJH"></a>Table 94-19 Object Type Path Names for Heterogeneous Object Types</p>
<table class="cellalignment4327" title="Object Type Path Names for Heterogeneous Object Types" summary="This table lists the Object Type Path Names for Heterogeneous Object Types for use with SET_FILTER." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t35">Heterogeneous Type</th>
<th class="cellalignment4328" id="r1c2-t35">Path Name (*=valid only in xxx_PATH_EXPR)</th>
<th class="cellalignment4328" id="r1c3-t35">Scope</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t35 r1c2-t35">
<p><code dir="ltr">AUDIT_OBJ</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t35 r1c3-t35">
<p>Object audits on the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t35 r1c2-t35">
<p><code dir="ltr">COMMENT</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t35 r1c3-t35">
<p>Table and column comments for the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t35 r1c2-t35">
<p><code dir="ltr">CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t35 r1c3-t35">
<p>Constraints (including referential constraints) on the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t35 r1c2-t35">
<p><code dir="ltr">*GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t35 r1c3-t35">
<p>Object grants on the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t35 r1c2-t35">
<p><code dir="ltr">INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t35 r1c3-t35">
<p>Indexes (including domain indexes) on the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t35 r1c2-t35">
<p><code dir="ltr">OBJECT_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t35 r1c3-t35">
<p>Object grants on the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t35 r1c2-t35">
<p><code dir="ltr">REF_CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t35 r1c3-t35">
<p>Referential (foreign key) constraints on the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t35 r1c2-t35">
<p><code dir="ltr">STATISTICS</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t35 r1c3-t35">
<p>Statistics on the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t35 r1c2-t35">
<p><code dir="ltr">TABLE_DATA</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t35 r1c3-t35">
<p>Row data for the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t35" headers="r1c1-t35">
<p><code dir="ltr">TABLE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t35 r1c2-t35">
<p><code dir="ltr">TRIGGER</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t35 r1c3-t35">
<p>Triggers on the selected tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t35 r1c2-t35">
<p><code dir="ltr">ASSOCIATION</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t35 r1c3-t35">
<p>Statistics type associations for objects in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t35 r1c2-t35">
<p><code dir="ltr">AUDIT_OBJ</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t35 r1c3-t35">
<p>Audits on all objects in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t35 r1c2-t35">
<p><code dir="ltr">CLUSTER</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t35 r1c3-t35">
<p>Clusters in the selected schemas and their indexes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t35 r1c2-t35">
<p><code dir="ltr">COMMENT</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t35 r1c3-t35">
<p>Comments on all objects in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t35 r1c2-t35">
<p><code dir="ltr">CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t35 r1c3-t35">
<p>Constraints (including referential constraints) on all objects in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t35 r1c2-t35">
<p><code dir="ltr">DB_LINK</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t35 r1c3-t35">
<p>Private database links in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t35 r1c2-t35">
<p><code dir="ltr">DEFAULT_ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t35 r1c3-t35">
<p>Default roles granted to users associated with the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t35 r1c2-t35">
<p><code dir="ltr">DIMENSION</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t35 r1c3-t35">
<p>Dimensions in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t35 r1c2-t35">
<p><code dir="ltr">FUNCTION</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t35 r1c3-t35">
<p>Functions in the selected schemas and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t35 r1c2-t35">
<p><code dir="ltr">*GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t35 r1c3-t35">
<p>Grants on objects in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r22c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t35 r1c2-t35">
<p><code dir="ltr">INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t35 r1c3-t35">
<p>Indexes (including domain indexes) on tables and clusters in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r23c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t35 r1c2-t35">
<p><code dir="ltr">INDEXTYPE</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t35 r1c3-t35">
<p>Indextypes in the selected schemas and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r24c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r24c1-t35 r1c2-t35">
<p><code dir="ltr">JAVA_SOURCE</code></p>
</td>
<td class="cellalignment4329" headers="r24c1-t35 r1c3-t35">
<p>Java sources in the selected schemas and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r25c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r25c1-t35 r1c2-t35">
<p><code dir="ltr">JOB</code></p>
</td>
<td class="cellalignment4329" headers="r25c1-t35 r1c3-t35">
<p>Jobs in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r26c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r26c1-t35 r1c2-t35">
<p><code dir="ltr">LIBRARY</code></p>
</td>
<td class="cellalignment4329" headers="r26c1-t35 r1c3-t35">
<p>External procedure libraries in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r27c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r27c1-t35 r1c2-t35">
<p><code dir="ltr">MATERIALIZED_VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r27c1-t35 r1c3-t35">
<p>Materialized views in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r28c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r28c1-t35 r1c2-t35">
<p><code dir="ltr">MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r28c1-t35 r1c3-t35">
<p>Materialized view logs on tables in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r29c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r29c1-t35 r1c2-t35">
<p><code dir="ltr">OBJECT_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r29c1-t35 r1c3-t35">
<p>Grants on objects in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r30c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r30c1-t35 r1c2-t35">
<p><code dir="ltr">OPERATOR</code></p>
</td>
<td class="cellalignment4329" headers="r30c1-t35 r1c3-t35">
<p>Operators in the selected schemas and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r31c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r31c1-t35 r1c2-t35">
<p><code dir="ltr">PACKAGE</code></p>
</td>
<td class="cellalignment4329" headers="r31c1-t35 r1c3-t35">
<p>Packages (both specification and body) in the selected schemas, and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r32c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r32c1-t35 r1c2-t35">
<p><code dir="ltr">PACKAGE_BODY</code></p>
</td>
<td class="cellalignment4329" headers="r32c1-t35 r1c3-t35">
<p>Package bodies in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r33c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r33c1-t35 r1c2-t35">
<p><code dir="ltr">PACKAGE_SPEC</code></p>
</td>
<td class="cellalignment4329" headers="r33c1-t35 r1c3-t35">
<p>Package specifications in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r34c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r34c1-t35 r1c2-t35">
<p><code dir="ltr">PASSWORD_HISTORY</code></p>
</td>
<td class="cellalignment4329" headers="r34c1-t35 r1c3-t35">
<p>The password history for users associated with the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r35c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r35c1-t35 r1c2-t35">
<p><code dir="ltr">PROCEDURE</code></p>
</td>
<td class="cellalignment4329" headers="r35c1-t35 r1c3-t35">
<p>Procedures in the selected schemas and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r36c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r36c1-t35 r1c2-t35">
<p><code dir="ltr">REF_CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r36c1-t35 r1c3-t35">
<p>Referential (foreign key) constraints on tables in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r37c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r37c1-t35 r1c2-t35">
<p><code dir="ltr">REFRESH_GROUP</code></p>
</td>
<td class="cellalignment4329" headers="r37c1-t35 r1c3-t35">
<p>Refresh groups in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r38c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r38c1-t35 r1c2-t35">
<p><code dir="ltr">SEQUENCE</code></p>
</td>
<td class="cellalignment4329" headers="r38c1-t35 r1c3-t35">
<p>Sequences in the selected schemas and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r39c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r39c1-t35 r1c2-t35">
<p><code dir="ltr">STATISTICS</code></p>
</td>
<td class="cellalignment4329" headers="r39c1-t35 r1c3-t35">
<p>Statistics on tables and indexes in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r40c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r40c1-t35 r1c2-t35">
<p><code dir="ltr">SYNONYM</code></p>
</td>
<td class="cellalignment4329" headers="r40c1-t35 r1c3-t35">
<p>Private synonyms in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r41c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r41c1-t35 r1c2-t35">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r41c1-t35 r1c3-t35">
<p>Tables in the selected schemas and their dependent objects (indexes, constraints, triggers, grants, audits, comments, table data, and so on)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r42c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r42c1-t35 r1c2-t35">
<p><code dir="ltr">TABLE_DATA</code></p>
</td>
<td class="cellalignment4329" headers="r42c1-t35 r1c3-t35">
<p>Row data for tables in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r43c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r43c1-t35 r1c2-t35">
<p><code dir="ltr">TABLESPACE_QUOTA</code></p>
</td>
<td class="cellalignment4329" headers="r43c1-t35 r1c3-t35">
<p>Tablespace quota granted to users associated with the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r44c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r44c1-t35 r1c2-t35">
<p><code dir="ltr">TRIGGER</code></p>
</td>
<td class="cellalignment4329" headers="r44c1-t35 r1c3-t35">
<p>Triggers on tables in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r45c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r45c1-t35 r1c2-t35">
<p><code dir="ltr">XS_SECURITY_CLASS</code></p>
</td>
<td class="cellalignment4329" headers="r45c1-t35 r1c3-t35">
<p>Real Application Security (RAS) security classes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r46c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r46c1-t35 r1c2-t35">
<p><code dir="ltr">XS_DATA_SECURITY</code></p>
</td>
<td class="cellalignment4329" headers="r46c1-t35 r1c3-t35">
<p>Real Application Security (RAS) data security policies</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r47c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r47c1-t35 r1c2-t35">
<p><code dir="ltr">XS_ACL</code></p>
</td>
<td class="cellalignment4329" headers="r47c1-t35 r1c3-t35">
<p>Real Application Security (RAS) access control lists (ACLs)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r48c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r48c1-t35 r1c2-t35">
<p><code dir="ltr">TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r48c1-t35 r1c3-t35">
<p>Types (both specification and body) in the selected schemas, and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r49c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r49c1-t35 r1c2-t35">
<p><code dir="ltr">TYPE_BODY</code></p>
</td>
<td class="cellalignment4329" headers="r49c1-t35 r1c3-t35">
<p>Type bodies in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r50c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r50c1-t35 r1c2-t35">
<p><code dir="ltr">TYPE_SPEC</code></p>
</td>
<td class="cellalignment4329" headers="r50c1-t35 r1c3-t35">
<p>Type specifications in the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r51c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r51c1-t35 r1c2-t35">
<p><code dir="ltr">USER</code></p>
</td>
<td class="cellalignment4329" headers="r51c1-t35 r1c3-t35">
<p>User definitions for users associated with the selected schemas</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r52c1-t35" headers="r1c1-t35">
<p><code dir="ltr">SCHEMA_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r52c1-t35 r1c2-t35">
<p><code dir="ltr">VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r52c1-t35 r1c3-t35">
<p>Views in the selected schemas and their dependent objects (grants, constraints, comments, audits)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r53c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r53c1-t35 r1c2-t35">
<p><code dir="ltr">ASSOCIATION</code></p>
</td>
<td class="cellalignment4329" headers="r53c1-t35 r1c3-t35">
<p>Statistics type associations for objects in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r54c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r54c1-t35 r1c2-t35">
<p><code dir="ltr">AUDIT</code></p>
</td>
<td class="cellalignment4329" headers="r54c1-t35 r1c3-t35">
<p>Audits of SQL statements</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r55c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r55c1-t35 r1c2-t35">
<p><code dir="ltr">AUDIT_OBJ</code></p>
</td>
<td class="cellalignment4329" headers="r55c1-t35 r1c3-t35">
<p>Audits on all objects in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r56c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r56c1-t35 r1c2-t35">
<p><code dir="ltr">CLUSTER</code></p>
</td>
<td class="cellalignment4329" headers="r56c1-t35 r1c3-t35">
<p>Clusters and their indexes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r57c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r57c1-t35 r1c2-t35">
<p><code dir="ltr">COMMENT</code></p>
</td>
<td class="cellalignment4329" headers="r57c1-t35 r1c3-t35">
<p>Comments on all objects</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r58c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r58c1-t35 r1c2-t35">
<p><code dir="ltr">CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r58c1-t35 r1c3-t35">
<p>Constraints (including referential constraints)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r59c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r59c1-t35 r1c2-t35">
<p><code dir="ltr">CONTEXT</code></p>
</td>
<td class="cellalignment4329" headers="r59c1-t35 r1c3-t35">
<p>Application contexts</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r60c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r60c1-t35 r1c2-t35">
<p><code dir="ltr">DB_LINK</code></p>
</td>
<td class="cellalignment4329" headers="r60c1-t35 r1c3-t35">
<p>Private and public database links</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r61c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r61c1-t35 r1c2-t35">
<p><code dir="ltr">DEFAULT_ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r61c1-t35 r1c3-t35">
<p>Default roles granted to users in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r62c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r62c1-t35 r1c2-t35">
<p><code dir="ltr">DIMENSION</code></p>
</td>
<td class="cellalignment4329" headers="r62c1-t35 r1c3-t35">
<p>Dimensions in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r63c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r63c1-t35 r1c2-t35">
<p><code dir="ltr">DIRECTORY</code></p>
</td>
<td class="cellalignment4329" headers="r63c1-t35 r1c3-t35">
<p>Directory objects in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r64c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r64c1-t35 r1c2-t35">
<p><code dir="ltr">FGA_POLICY</code></p>
</td>
<td class="cellalignment4329" headers="r64c1-t35 r1c3-t35">
<p>Fine-grained audit policies</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r65c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r65c1-t35 r1c2-t35">
<p><code dir="ltr">FUNCTION</code></p>
</td>
<td class="cellalignment4329" headers="r65c1-t35 r1c3-t35">
<p>Functions</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r66c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r66c1-t35 r1c2-t35">
<p><code dir="ltr">* GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r66c1-t35 r1c3-t35">
<p>Object and system grants</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r67c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r67c1-t35 r1c2-t35">
<p><code dir="ltr">INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r67c1-t35 r1c3-t35">
<p>Indexes (including domain indexes) on tables and clusters</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r68c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r68c1-t35 r1c2-t35">
<p><code dir="ltr">INDEXTYPE</code></p>
</td>
<td class="cellalignment4329" headers="r68c1-t35 r1c3-t35">
<p>Indextypes and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r69c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r69c1-t35 r1c2-t35">
<p><code dir="ltr">JAVA_SOURCE</code></p>
</td>
<td class="cellalignment4329" headers="r69c1-t35 r1c3-t35">
<p>Java sources and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r70c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r70c1-t35 r1c2-t35">
<p><code dir="ltr">JOB</code></p>
</td>
<td class="cellalignment4329" headers="r70c1-t35 r1c3-t35">
<p>Jobs</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r71c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r71c1-t35 r1c2-t35">
<p><code dir="ltr">LIBRARY</code></p>
</td>
<td class="cellalignment4329" headers="r71c1-t35 r1c3-t35">
<p>External procedure libraries</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r72c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r72c1-t35 r1c2-t35">
<p><code dir="ltr">MATERIALIZED_VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r72c1-t35 r1c3-t35">
<p>Materialized views</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r73c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r73c1-t35 r1c2-t35">
<p><code dir="ltr">MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r73c1-t35 r1c3-t35">
<p>Materialized view logs</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r74c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r74c1-t35 r1c2-t35">
<p><code dir="ltr">OBJECT_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r74c1-t35 r1c3-t35">
<p>All object grants in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r75c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r75c1-t35 r1c2-t35">
<p><code dir="ltr">OPERATOR</code></p>
</td>
<td class="cellalignment4329" headers="r75c1-t35 r1c3-t35">
<p>Operators and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r76c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r76c1-t35 r1c2-t35">
<p><code dir="ltr">PACKAGE</code></p>
</td>
<td class="cellalignment4329" headers="r76c1-t35 r1c3-t35">
<p>Packages (both specification and body) and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r77c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r77c1-t35 r1c2-t35">
<p><code dir="ltr">PACKAGE_BODY</code></p>
</td>
<td class="cellalignment4329" headers="r77c1-t35 r1c3-t35">
<p>Package bodies</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r78c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r78c1-t35 r1c2-t35">
<p><code dir="ltr">PACKAGE_SPEC</code></p>
</td>
<td class="cellalignment4329" headers="r78c1-t35 r1c3-t35">
<p>Package specifications</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r79c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r79c1-t35 r1c2-t35">
<p><code dir="ltr">PASSWORD_HISTORY</code></p>
</td>
<td class="cellalignment4329" headers="r79c1-t35 r1c3-t35">
<p>Password histories for database users</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r80c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r80c1-t35 r1c2-t35">
<p><code dir="ltr">*PASSWORD_VERIFY_FUNCTION</code></p>
</td>
<td class="cellalignment4329" headers="r80c1-t35 r1c3-t35">
<p>The password complexity verification function</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r81c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r81c1-t35 r1c2-t35">
<p><code dir="ltr">PROCEDURE</code></p>
</td>
<td class="cellalignment4329" headers="r81c1-t35 r1c3-t35">
<p>Procedures and their dependent grants and objects</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r82c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r82c1-t35 r1c2-t35">
<p><code dir="ltr">PROFILE</code></p>
</td>
<td class="cellalignment4329" headers="r82c1-t35 r1c3-t35">
<p>Profiles</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r83c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r83c1-t35 r1c2-t35">
<p><code dir="ltr">PROXY</code></p>
</td>
<td class="cellalignment4329" headers="r83c1-t35 r1c3-t35">
<p>Proxy authentications</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r84c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r84c1-t35 r1c2-t35">
<p><code dir="ltr">REF_CONSTRAINT</code></p>
</td>
<td class="cellalignment4329" headers="r84c1-t35 r1c3-t35">
<p>Referential (foreign key) constraints on tables in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r85c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r85c1-t35 r1c2-t35">
<p><code dir="ltr">REFRESH_GROUP</code></p>
</td>
<td class="cellalignment4329" headers="r85c1-t35 r1c3-t35">
<p>Refresh groups</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r86c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r86c1-t35 r1c2-t35">
<p><code dir="ltr">*RESOURCE_ COST</code></p>
</td>
<td class="cellalignment4329" headers="r86c1-t35 r1c3-t35">
<p>Resource cost information</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r87c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r87c1-t35 r1c2-t35">
<p><code dir="ltr">RLS_CONTEXT</code></p>
</td>
<td class="cellalignment4329" headers="r87c1-t35 r1c3-t35">
<p>Fine-grained access-control driving contexts</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r88c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r88c1-t35 r1c2-t35">
<p><code dir="ltr">RLS_GROUP</code></p>
</td>
<td class="cellalignment4329" headers="r88c1-t35 r1c3-t35">
<p>Fine-grained access-control policy groups</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r89c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r89c1-t35 r1c2-t35">
<p><code dir="ltr">RLS_POLICY</code></p>
</td>
<td class="cellalignment4329" headers="r89c1-t35 r1c3-t35">
<p>Fine-grained access-control policies</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r90c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r90c1-t35 r1c2-t35">
<p><code dir="ltr">ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r90c1-t35 r1c3-t35">
<p>Roles</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r91c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r91c1-t35 r1c2-t35">
<p><code dir="ltr">ROLE_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r91c1-t35 r1c3-t35">
<p>Role grants to users in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r92c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r92c1-t35 r1c2-t35">
<p><code dir="ltr">ROLLBACK_SEGMENT</code></p>
</td>
<td class="cellalignment4329" headers="r92c1-t35 r1c3-t35">
<p>Rollback segments</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r93c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r93c1-t35 r1c2-t35">
<p><code dir="ltr">*SCHEMA (named object)</code></p>
</td>
<td class="cellalignment4329" headers="r93c1-t35 r1c3-t35">
<p>Database schemas including for each schema all related and dependent objects: user definitions and their attributes (default roles, role grants, tablespace quotas, and so on), objects in the schema (tables, view, packages, types, and so on), and their dependent objects (grants, audits, indexes, constraints, and so on). The <code dir="ltr">NAME</code> and <code dir="ltr">NAME_EXPR</code> filters can be used with this object type path name to designate the database schemas to be fetched.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r94c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r94c1-t35 r1c2-t35">
<p><code dir="ltr">SEQUENCE</code></p>
</td>
<td class="cellalignment4329" headers="r94c1-t35 r1c3-t35">
<p>Sequences</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r95c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r95c1-t35 r1c2-t35">
<p><code dir="ltr">STATISTICS</code></p>
</td>
<td class="cellalignment4329" headers="r95c1-t35 r1c3-t35">
<p>Statistics on tables and indexes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r96c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r96c1-t35 r1c2-t35">
<p><code dir="ltr">SYNONYM</code></p>
</td>
<td class="cellalignment4329" headers="r96c1-t35 r1c3-t35">
<p>Public and private synonyms</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r97c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r97c1-t35 r1c2-t35">
<p><code dir="ltr">SYSTEM_GRANT</code></p>
</td>
<td class="cellalignment4329" headers="r97c1-t35 r1c3-t35">
<p>System privilege grants</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r98c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r98c1-t35 r1c2-t35">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r98c1-t35 r1c3-t35">
<p>Tables and their dependent objects (indexes, constraints, triggers, grants, audits, comments, table data, and so on)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r99c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r99c1-t35 r1c2-t35">
<p><code dir="ltr">TABLE_DATA</code></p>
</td>
<td class="cellalignment4329" headers="r99c1-t35 r1c3-t35">
<p>Row data for all tables</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r100c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r100c1-t35 r1c2-t35">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r100c1-t35 r1c3-t35">
<p>Tablespace definitions</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r101c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r101c1-t35 r1c2-t35">
<p><code dir="ltr">TABLESPACE_QUOTA</code></p>
</td>
<td class="cellalignment4329" headers="r101c1-t35 r1c3-t35">
<p>Tablespace quota granted to users in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r102c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r102c1-t35 r1c2-t35">
<p><code dir="ltr">TRIGGER</code></p>
</td>
<td class="cellalignment4329" headers="r102c1-t35 r1c3-t35">
<p>Triggers on the database, on schemas, and on schema objects</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r103c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r103c1-t35 r1c2-t35">
<p><code dir="ltr">XS_USER</code></p>
</td>
<td class="cellalignment4329" headers="r103c1-t35 r1c3-t35">
<p>Real Application Security (RAS) users</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r104c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r104c1-t35 r1c2-t35">
<p><code dir="ltr">XS_ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r104c1-t35 r1c3-t35">
<p>Real Application Security (RAS) roles</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r105c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r105c1-t35 r1c2-t35">
<p><code dir="ltr">XS_SECURITY_CLASS</code></p>
</td>
<td class="cellalignment4329" headers="r105c1-t35 r1c3-t35">
<p>Real Application Security (RAS) security classes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r106c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r106c1-t35 r1c2-t35">
<p><code dir="ltr">XS_DATA_SECURITY</code></p>
</td>
<td class="cellalignment4329" headers="r106c1-t35 r1c3-t35">
<p>Real Application Security (RAS) data security policies</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r107c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r107c1-t35 r1c2-t35">
<p><code dir="ltr">XS_ACL</code></p>
</td>
<td class="cellalignment4329" headers="r107c1-t35 r1c3-t35">
<p>Real Application Security (RAS) access control lists (ACLs)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r108c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r108c1-t35 r1c2-t35">
<p><code dir="ltr">XS_NAMESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r108c1-t35 r1c3-t35">
<p>Real Application Security (RAS) namespaces</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r109c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r109c1-t35 r1c2-t35">
<p><code dir="ltr">TRUSTED_DB_LINK</code></p>
</td>
<td class="cellalignment4329" headers="r109c1-t35 r1c3-t35">
<p>Trusted links</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r110c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r110c1-t35 r1c2-t35">
<p><code dir="ltr">TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r110c1-t35 r1c3-t35">
<p>Types (both specification and body) and their dependent grants and audits</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r111c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r111c1-t35 r1c2-t35">
<p><code dir="ltr">TYPE_BODY</code></p>
</td>
<td class="cellalignment4329" headers="r111c1-t35 r1c3-t35">
<p>Type bodies</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r112c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r112c1-t35 r1c2-t35">
<p><code dir="ltr">TYPE_SPEC</code></p>
</td>
<td class="cellalignment4329" headers="r112c1-t35 r1c3-t35">
<p>Type specifications</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r113c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r113c1-t35 r1c2-t35">
<p><code dir="ltr">USER</code></p>
</td>
<td class="cellalignment4329" headers="r113c1-t35 r1c3-t35">
<p>User definitions</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r114c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DATABASE_EXPORT</code></p>
</td>
<td class="cellalignment4329" headers="r114c1-t35 r1c2-t35">
<p><code dir="ltr">VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r114c1-t35 r1c3-t35">
<p>Views</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5801"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A <code dir="ltr">NULL</code> or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INVALID_OPERATION</code>. <code dir="ltr">SET_FILTER</code> was called after the first call to <code dir="ltr">FETCH_xxx</code> for the <code dir="ltr">OPEN</code> context. After the first call to <code dir="ltr">FETCH_xxx</code> is made, no further calls to <code dir="ltr">SET_FILTER</code> are permitted.</p>
</li>
<li>
<p><code dir="ltr">INCONSISTENT_ARGS</code>. The arguments are inconsistent. Possible inconsistencies include the following:</p>
<ul>
<li>
<p>filter name not valid for the object type associated with the <code dir="ltr">OPEN</code> context</p>
</li>
<li>
<p>filter <code dir="ltr">name</code> not valid for the <code dir="ltr">object_type_path</code></p>
</li>
<li>
<p><code dir="ltr">object_type_path</code> not part of the collection designated by <code dir="ltr">handle</code></p>
</li>
<li>
<p>filter <code dir="ltr">value</code> is the wrong datatype</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66907" class="refsect2"><a id="i999844"></a>
<h3 class="refsect2">SET_PARSE_ITEM Procedure<a id="sthref5802"></a></h3>
<p>This procedure is used for both retrieval and submission. This procedure enables output parsing and specifies an object attribute to be parsed and returned.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
<li>
<p><a href="#BABBIDBB">Subprograms for Submitting XML to the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5803"></a>Syntax</p>
<p>The following syntax applies when <code dir="ltr">SET_PARSE_ITEM</code> is used for object retrieval:</p>
<pre dir="ltr">DBMS_METADATA.SET_PARSE_ITEM (
   handle       IN  NUMBER,
   name         IN  VARCHAR2,
   object_type  IN  VARCHAR2 DEFAULT NULL);
</pre>
<p>The following syntax applies when <code dir="ltr">SET_PARSE_ITEM</code> is used for XML submission:</p>
<pre dir="ltr">DBMS_METADATA.SET_PARSE_ITEM (
   handle     IN NUMBER,
   name        IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5804"></a>Parameters</p>
<div id="ARPLS66908" class="tblhruleformal">
<p class="titleintable"><a id="sthref5805"></a><a id="sthref5806"></a>Table 94-20 SET_PARSE_ITEM Procedure Parameters</p>
<table class="cellalignment4327" title="SET_PARSE_ITEM Procedure Parameters" summary="This table describes the parameters of the DBMS_METADATA.SET_PARSE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t37">Parameter</th>
<th class="cellalignment4328" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t37" headers="r1c1-t37">
<p><code dir="ltr">handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t37 r1c2-t37">
<p>The handle returned from <code dir="ltr">OPEN</code> (or <code dir="ltr">OPENW</code>).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t37" headers="r1c1-t37">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t37 r1c2-t37">
<p>The name of the object attribute to be parsed and returned. See <a href="#BGBHAAEE">Table 94-21</a> for the attribute object type, name, and meaning.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t37" headers="r1c1-t37">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t37 r1c2-t37">
<p>Designates the object type to which the parse item applies (this is an object type name, not a path name). By default, the parse item applies to the object type of the OPEN handle. When the <code dir="ltr">OPEN</code> handle designates a heterogeneous object type, behavior can be either of the following:</p>
<ul>
<li>
<p>if object_type is omitted, the parse item applies to all object types within the heterogeneous collection</p>
</li>
<li>
<p>if object_type is specified, the parse item only applies to that specific object type within the collection</p>
</li>
</ul>
<p>This parameter only applies when <code dir="ltr">SET_PARSE_ITEM</code> is used for object retrieval.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p><a href="#BGBHAAEE">Table 94-21</a> describes the object type, name, and meaning of the items available in the <code dir="ltr">SET_PARSE_ITEM</code> procedure.</p>
<div id="ARPLS66909" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref5807"></a><a id="BGBHAAEE"></a>Table 94-21 SET_PARSE_ITEM: Parse Items</p>
<table class="cellalignment4327" title="SET_PARSE_ITEM: Parse Items" summary="This table ldescribes the object type, name, and meaning of the items available for use by the SET_PARSE_ITEM in parsing." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t38">Object Type</th>
<th class="cellalignment4328" id="r1c2-t38">Name</th>
<th class="cellalignment4328" id="r1c3-t38">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t38" headers="r1c1-t38">
<p>All objects</p>
</td>
<td class="cellalignment4329" headers="r2c1-t38 r1c2-t38">
<p><code dir="ltr">VERB</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t38 r1c3-t38">
<p>If <code dir="ltr">FETCH_XML_CLOB</code> is called, no value is returned.</p>
<p>If <code dir="ltr">FETCH_DDL</code> is called, then for every row in the <code dir="ltr">sys.ku$_ddls</code> nested table returned by <code dir="ltr">FETCH_DDL</code> the verb in the corresponding <code dir="ltr">ddlText</code> is returned. If the <code dir="ltr">ddlText</code> is a SQL DDL statement, then the SQL verb (for example, <code dir="ltr">CREATE</code>, <code dir="ltr">GRANT</code>, <code dir="ltr">AUDIT</code>) is returned. If the <code dir="ltr">ddlText</code> is a procedure call (for example, <code dir="ltr">DBMS_AQADM</code>.<code dir="ltr">CREATE_QUEUE_TABLE())</code> then the package.procedure-name is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t38" headers="r1c1-t38">
<p>All objects</p>
</td>
<td class="cellalignment4329" headers="r3c1-t38 r1c2-t38">
<p><code dir="ltr">OBJECT_TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t38 r1c3-t38">
<p>If <code dir="ltr">FETCH_XML_CLOB</code> is called, an object type name from <a href="#BGBIEDIA">Table 94-12</a> is returned.</p>
<p>If <code dir="ltr">FETCH_DDL</code> is called and the <code dir="ltr">ddlText</code> is a SQL DDL statement whose verb is <code dir="ltr">CREATE</code> or <code dir="ltr">ALTER</code>, the object type as used in the DDL statement is returned (for example, <code dir="ltr">TABLE</code>, <code dir="ltr">PACKAGE</code>_<code dir="ltr">BODY</code>, and so on). Otherwise, an object type name from <a href="#BGBIEDIA">Table 94-12</a> is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t38" headers="r1c1-t38">
<p>Schema objects</p>
</td>
<td class="cellalignment4329" headers="r4c1-t38 r1c2-t38">
<p><code dir="ltr">SCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t38 r1c3-t38">
<p>The object schema is returned. If the object is not a schema object, no value is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t38" headers="r1c1-t38">
<p>Named objects</p>
</td>
<td class="cellalignment4329" headers="r5c1-t38 r1c2-t38">
<p><code dir="ltr">NAME</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t38 r1c3-t38">
<p>The object name is returned. If the object is not a named object, no value is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t38" headers="r1c1-t38">
<p><code dir="ltr">TABLE, TABLE_DATA, INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t38 r1c2-t38">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t38 r1c3-t38">
<p>The name of the object&#39;s tablespace or, if the object is a partitioned table, the default tablespace is returned. For a TABLE_DATA object, this is always the tablespace where the rows are stored.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t38" headers="r1c1-t38">
<p><code dir="ltr">TRIGGER</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t38 r1c2-t38">
<p><code dir="ltr">ENABLE</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t38 r1c3-t38">
<p>If the trigger is enabled, <code dir="ltr">ENABLE</code> is returned. If the trigger is disabled, <code dir="ltr">DISABLE</code> is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t38" headers="r1c1-t38">
<p><code dir="ltr">OBJECT_GRANT, TABLESPACE_QUOTA</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t38 r1c2-t38">
<p><code dir="ltr">GRANTOR</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t38 r1c3-t38">
<p>The grantor is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t38" headers="r1c1-t38">
<p>Dependent objects (including domain index secondary tables)</p>
</td>
<td class="cellalignment4329" headers="r9c1-t38 r1c2-t38">
<p><code dir="ltr">BASE_OBJECT_NAME</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t38 r1c3-t38">
<p>The name of the base object is returned. If the object is not a dependent object, no value is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t38" headers="r1c1-t38">
<p>Dependent objects (including domain index secondary tables)</p>
</td>
<td class="cellalignment4329" headers="r10c1-t38 r1c2-t38">
<p><code dir="ltr">BASE_OBJECT_SCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t38 r1c3-t38">
<p>The schema of the base object is returned. If the object is not a dependent object, no value is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t38" headers="r1c1-t38">
<p>Dependent objects (including domain index secondary tables)</p>
</td>
<td class="cellalignment4329" headers="r11c1-t38 r1c2-t38">
<p><code dir="ltr">BASE_OBJECT_TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t38 r1c3-t38">
<p>The object type of the base object is returned. If the object is not a dependent object, no value is returned.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t38" headers="r1c1-t38">
<p>Granted objects</p>
</td>
<td class="cellalignment4329" headers="r12c1-t38 r1c2-t38">
<p><code dir="ltr">GRANTEE</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t38 r1c3-t38">
<p>The grantee is returned. If the object is not a granted object, no value is returned.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5808"></a>Usage Notes</p>
<p>These notes apply when using SET_PARSE_ITEM to retrieve objects.</p>
<p>By default, the <code dir="ltr">FETCH_xxx</code> routines return an object&#39;s metadata as XML or creation DDL. By calling <code dir="ltr">SET_PARSE_ITEM</code> you can request that individual attributes of the object be returned as well.</p>
<p>You can call <code dir="ltr">SET_PARSE_ITEM</code> multiple times to ask for multiple items to be parsed and returned. Parsed items are returned in the <code dir="ltr">sys</code>.<code dir="ltr">ku$_parsed_items</code> nested table.</p>
<p>For <code dir="ltr">TABLE_DATA</code> objects, the following parse item return values are of interest:</p>
<div class="inftblruleinformal">
<table class="cellalignment4327" title="Parse Item Return Values" summary="This table lists parse items that return values of interest." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t39"><span class="bold">If Object Is</span></th>
<th class="cellalignment4328" id="r1c2-t39">NAME, SCHEMA</th>
<th class="cellalignment4328" id="r1c3-t39">BASE_OBJECT_NAME, BASE_OBJECT_SCHEMA</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t39" headers="r1c1-t39">nonpartitioned table</td>
<td class="cellalignment4329" headers="r2c1-t39 r1c2-t39">table name, schema</td>
<td class="cellalignment4329" headers="r2c1-t39 r1c3-t39">table name, schema</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t39" headers="r1c1-t39">table partition</td>
<td class="cellalignment4329" headers="r3c1-t39 r1c2-t39">partition name, schema</td>
<td class="cellalignment4329" headers="r3c1-t39 r1c3-t39">table name, schema</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t39" headers="r1c1-t39">nested table</td>
<td class="cellalignment4329" headers="r4c1-t39 r1c2-t39">storage table name, schema</td>
<td class="cellalignment4329" headers="r4c1-t39 r1c3-t39">name and schema of top-level table (<span class="italic">not</span> the parent nested table)</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>Tables are not usually thought of as dependent objects. However, secondary tables for domain indexes are dependent on the domain indexes. Consequently, the <code dir="ltr">BASE_OBJECT_NAME</code>, <code dir="ltr">BASE_OBJECT_SCHEMA</code> and <code dir="ltr">BASE_OBJECT_TYPE</code> parse items for secondary <code dir="ltr">TABLE</code> objects return the name, schema, and type of the domain index.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1019125">&#34;FETCH_xxx Functions and Procedures&#34;</a></p>
</li>
<li>
<p><a class="olink SUTIL" href="../SUTIL/toc.htm"><span class="italic">Oracle Database Utilities</span></a> for information about using the Metadata API</p>
</li>
</ul>
</div>
<p>By default, the <code dir="ltr">CONVERT</code> and <code dir="ltr">PUT</code> procedures simply transform an object&#39;s XML metadata to DDL. By calling <code dir="ltr">SET_PARSE_ITEM</code> you can request that individual attributes of the object be returned as well.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5809"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL</code>. A <code dir="ltr">NULL</code> or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INVALID_OPERATION</code>. <code dir="ltr">SET_PARSE_ITEM</code> was called after the first call to <code dir="ltr">FETCH_xxx</code> for the <code dir="ltr">OPEN</code> context. After the first call to <code dir="ltr">FETCH_xxx</code> is made, no further calls to <code dir="ltr">SET_PARSE_ITEM</code> are permitted.</p>
</li>
<li>
<p><code dir="ltr">INCONSISTENT_ARGS</code>. The attribute <code dir="ltr">name</code> is not valid for the object type associated with the <code dir="ltr">OPEN</code> context.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66910" class="refsect2"><a id="i1000135"></a>
<h3 class="refsect2">SET_TRANSFORM_PARAM and SET_REMAP_PARAM<a id="sthref5810"></a> Procedure<a id="sthref5811"></a>s</h3>
<p>These procedures are used for both retrieval and submission. <code dir="ltr">SET_TRANSFORM_PARAM</code> and <code dir="ltr">SET_REMAP_PARAM</code> specify parameters to the XSLT stylesheet identified by <code dir="ltr">transform_handle.</code>Use them to modify or customize the output of the transform.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about related subprograms:
<ul>
<li>
<p><a href="#BABBCHHJ">Subprograms for Retrieving Multiple Objects From the Database</a></p>
</li>
<li>
<p><a href="#BABBIDBB">Subprograms for Submitting XML to the Database</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5812"></a>Syntax</p>
<pre dir="ltr">DBMS_METADATA.SET_TRANSFORM_PARAM (
   transform_handle   IN NUMBER,
   name               IN VARCHAR2,
   value              IN VARCHAR2,
   object_type        IN VARCHAR2 DEFAULT NULL);

DBMS_METADATA.SET_TRANSFORM_PARAM (
   transform_handle   IN NUMBER,
   name               IN VARCHAR2,
   value              IN BOOLEAN DEFAULT TRUE,
   object_type        IN VARCHAR2 DEFAULT NULL);

DBMS_METADATA.SET_TRANSFORM_PARAM (
   transform_handle   IN NUMBER,
   name               IN VARCHAR2,
   value              IN NUMBER,
   object_type        IN VARCHAR2 DEFAULT NULL);

DBMS_METADATA.SET_REMAP_PARAM (
   transform_handle   IN NUMBER,
   name               IN VARCHAR2,
   old_value          IN VARCHAR2,
   new_value          IN VARCHAR2,
   object_type        IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5813"></a>Parameters</p>
<p><a href="#BGBCGCII">Table 94-22</a> describes the parameters for the <code dir="ltr">SET_TRANSFORM_PARAM</code> and <code dir="ltr">SET_REMAP_PARAM</code> procedures.</p>
<div id="ARPLS66911" class="tblhruleformal">
<p class="titleintable"><a id="sthref5814"></a><a id="BGBCGCII"></a>Table 94-22 SET_TRANSFORM_PARAM and SET_REMAP_PARAM Parameters</p>
<table class="cellalignment4327" title="SET_TRANSFORM_PARAM and SET_REMAP_PARAM Parameters" summary="This table describes the parameters of the DBMS_METADATA.SET_TRANSFORM_PARAM and SET_REMAP_PARAM subprograms." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t42">Parameters</th>
<th class="cellalignment4328" id="r1c2-t42">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t42" headers="r1c1-t42">
<p><code dir="ltr">transform_handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t42 r1c2-t42">
<p>Either (1) the handle returned from <code dir="ltr">ADD_TRANSFORM</code>, or (2) the enumerated constant <code dir="ltr">SESSION_TRANSFORM</code> that designates the DDL transform for the whole session.</p>
<p>Note that the handle returned by <code dir="ltr">OPEN</code> is not a valid transform handle.</p>
<p>For <code dir="ltr">SET_REMAP_PARAM</code>, the transform handle must designate the MODIFY transform.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t42" headers="r1c1-t42">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t42 r1c2-t42">
<p>The name of the transform parameter.</p>
<p>For descriptions of the parameters available for each transform on the <code dir="ltr">SET_TRANSFORM_PARAM</code> procedure, see the following:</p>
<p><a href="#BGBJBFGE">Table 94-23</a> - DDL transform</p>
<p><a href="#BGBEIIGA">Table 94-24</a> - MODIFY transform</p>
<p><a href="#BGBFAGBG">Table 94-26</a> - SXML transform</p>
<p><a href="#BGBFFBCH">Table 94-27</a> - MODIFYSXML transform</p>
<p><a href="#BGBHDAHD">Table 94-28</a> - SXMLDDL transform</p>
<p>For descriptions of the parameters available for the MODIFY transform on the <code dir="ltr">SET_REMAP_PARAM</code> procedure, see <a href="#BGBFIDAC">Table 94-25</a>.</p>
<p>For descriptions of the parameters available for the ALTERXML transform, see <a href="#BGBCDDAD">Table 94-4</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t42" headers="r1c1-t42">
<p><code dir="ltr">value</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t42 r1c2-t42">
<p>The value of the transform. This parameter is valid only for <code dir="ltr">SET_TRANSFORM_PARAM</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t42" headers="r1c1-t42">
<p><code dir="ltr">old_value</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t42 r1c2-t42">
<p>The old value for the remapping. This parameter is valid only for <code dir="ltr">SET_REMAP_PARAM</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t42" headers="r1c1-t42">
<p><code dir="ltr">new_value</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t42 r1c2-t42">
<p>The new value for the remapping. This parameter is valid only for <code dir="ltr">SET_REMAP_PARAM</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t42" headers="r1c1-t42">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t42 r1c2-t42">
<p>Designates the object type to which the transform or remap parameter applies. By default, it applies to the same object type as the transform. In cases where the transform applies to all object types within a heterogeneous collection, the following apply:</p>
<ul>
<li>
<p>If <code dir="ltr">object_type</code> is omitted, the parameter applies to all applicable object types within the heterogeneous collection.</p>
</li>
<li>
<p>If <code dir="ltr">object_type</code> is specified, the parameter only applies to that object type.</p>
</li>
</ul>
<p>This allows a caller who has added a transform to a heterogeneous collection to specify different transform parameters for different object types within the collection.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p><a href="#BGBJBFGE">Table 94-23</a> describes the object type, name, datatype, and meaning of the parameters for the DDL transform in the <code dir="ltr">SET_TRANSFORM_PARAM</code> procedure.</p>
<div id="ARPLS66912" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref5815"></a><a id="BGBJBFGE"></a>Table 94-23 SET_TRANSFORM_PARAM: Transform Parameters for the DDL Transform</p>
<table class="cellalignment4327" title="SET_TRANSFORM_PARAM: Transform Parameters for the DDL Transform" summary="This table describes the Transform Parameters for the DDL Transform used by the DBMS_METADATA.SET_TRANSFORM_PARAM subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t43">Object Type</th>
<th class="cellalignment4328" id="r1c2-t43">Name</th>
<th class="cellalignment4328" id="r1c3-t43">Datatype</th>
<th class="cellalignment4328" id="r1c4-t43">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t43" headers="r1c1-t43">
<p><code dir="ltr">All objects</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t43 r1c2-t43">
<p><code dir="ltr">PRETTY</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, format the output with indentation and line feeds. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t43" headers="r1c1-t43">
<p><code dir="ltr">All objects</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t43 r1c2-t43">
<p><code dir="ltr">SQLTERMINATOR</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, append a SQL terminator (<code dir="ltr">;</code> or <code dir="ltr">/</code>) to each DDL statement. Defaults to <code dir="ltr">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t43 r1c2-t43">
<p><code dir="ltr">CONSTRAINTS</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include all non-referential table constraints in the DDL. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t43 r1c2-t43">
<p><code dir="ltr">REF_CONSTRAINTS</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include all referential constraints (foreign keys) in the DDL. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t43 r1c2-t43">
<p><code dir="ltr">CONSTRAINTS_AS_ALTER</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include table constraints as separate <code dir="ltr">ALTER TABLE</code> (and, if necessary, <code dir="ltr">CREATE INDEX</code>) statements. If <code dir="ltr">FALSE</code>, specify table constraints as part of the <code dir="ltr">CREATE TABLE</code> statement. Defaults to <code dir="ltr">FALSE</code>. Requires that <code dir="ltr">CONSTRAINTS be TRUE.</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TABLE</code>, <code dir="ltr">TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t43 r1c2-t43">
<p><code dir="ltr">OID</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include the OID clause in the DDL. If <code dir="ltr">FALSE</code>, omit it. Defaults to <code dir="ltr">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t43 r1c2-t43">
<p><code dir="ltr">SIZE_BYTE_KEYWORD</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include the <code dir="ltr">BYTE</code> keyword as part of the size specification of <code dir="ltr">CHAR</code> and <code dir="ltr">VARCHAR2</code> columns that use byte semantics. If <code dir="ltr">FALSE</code>, omit the keyword. Defaults to <code dir="ltr">FALSE.</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TABLE</code>, <code dir="ltr">INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t43 r1c2-t43">
<p><code dir="ltr">PARTITIONING</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include partitioning clauses in the DDL. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t43" headers="r1c1-t43">
<p><code dir="ltr">INDEX</code>, <code dir="ltr">CONSTRAINT</code>, <code dir="ltr">ROLLBACK_SEGMENT</code>, <code dir="ltr">CLUSTER, TABLE, TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t43 r1c2-t43">
<p><code dir="ltr">SEGMENT_ATTRIBUTES</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include segment attributes clauses (physical attributes, storage attributes, tablespace, logging) in the DDL. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t43" headers="r1c1-t43">
<p><code dir="ltr">INDEX</code>, <code dir="ltr">CONSTRAINT</code>, <code dir="ltr">ROLLBACK_SEGMENT</code>, <code dir="ltr">CLUSTER,TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t43 r1c2-t43">
<p><code dir="ltr">STORAGE</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include storage clauses in the DDL. If <code dir="ltr">FALSE</code>, omit them. (Ignored if <code dir="ltr">SEGMENT_ATTRIBUTES</code> is <code dir="ltr">FALSE</code>.) Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t43" headers="r1c1-t43">
<p><code dir="ltr">INDEX</code>, <code dir="ltr">CONSTRAINT</code>, <code dir="ltr">ROLLBACK_SEGMENT</code>, <code dir="ltr">CLUSTER,TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t43 r1c2-t43">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include tablespace clauses in the DDL. If <code dir="ltr">FALSE</code>, omit them. (Ignored if <code dir="ltr">SEGMENT_ATTRIBUTES</code> is <code dir="ltr">FALSE</code>.) Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TYPE</code>, <code dir="ltr">PACKAGE</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t43 r1c2-t43">
<p><code dir="ltr">SPECIFICATION</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include the type or package specification in the DDL. If <code dir="ltr">FALSE</code>, omit it. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TYPE</code>, <code dir="ltr">PACKAGE</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t43 r1c2-t43">
<p><code dir="ltr">BODY</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include the type body or package body in the DDL. If <code dir="ltr">FALSE</code>, omit it. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t43" headers="r1c1-t43">
<p><code dir="ltr">VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t43 r1c2-t43">
<p><code dir="ltr">FORCE</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, use the <code dir="ltr">FORCE</code> keyword in the <code dir="ltr">CREATE VIEW</code> statement. If <code dir="ltr">FALSE</code>, do not use the <code dir="ltr">FORCE</code> keyword in the <code dir="ltr">CREATE VIEW</code> statement. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t43" headers="r1c1-t43">
<p><code dir="ltr">OUTLINE</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t43 r1c2-t43">
<p><code dir="ltr">INSERT</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include the <code dir="ltr">INSERT</code> statements into the OL$ dictionary tables that will create the outline and its hints. If <code dir="ltr">FALSE</code>, omit a <code dir="ltr">CREATE</code> <code dir="ltr">OUTLINE</code> statement. Defaults to <code dir="ltr">FALSE</code>.</p>
<p>Note: This object type is being deprecated.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t43" headers="r1c1-t43">
<p><code dir="ltr">All objects</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t43 r1c2-t43">
<p><code dir="ltr">DEFAULT</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t43 r1c4-t43">
<p>Calling <code dir="ltr">SET_TRANSFORM_PARAM</code> with this parameter set to <code dir="ltr">TRUE</code> has the effect of resetting all parameters for the transform to their default values. Setting this <code dir="ltr">FALSE</code> has no effect. There is no default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t43" headers="r1c1-t43">
<p><code dir="ltr">All objects</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t43 r1c2-t43">
<p><code dir="ltr">INHERIT</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, inherits session-level parameters. Defaults to <code dir="ltr">FALSE</code>. If an application calls <code dir="ltr">ADD_TRANSFORM</code> to add the DDL transform, then by default the only transform parameters that apply are those explicitly set for that transform handle. This has no effect if the transform handle is the session transform handle.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t43" headers="r1c1-t43">
<p><code dir="ltr">ROLE</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t43 r1c2-t43">
<p><code dir="ltr">REVOKE_FROM</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t43 r1c3-t43">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t43 r1c4-t43">
<p>The name of a user from whom the role must be revoked. If this is a non-null string and if the <code dir="ltr">CREATE</code> <code dir="ltr">ROLE</code> statement grants you the role, a <code dir="ltr">REVOKE</code> statement is included in the DDL after the <code dir="ltr">CREATE</code> <code dir="ltr">ROLE</code> statement.</p>
<p>Note: When you issue a <code dir="ltr">CREATE</code> <code dir="ltr">ROLE</code> statement, Oracle may grant you the role. You can use this transform parameter to undo the grant.</p>
<p>Defaults to null string.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t43 r1c2-t43">
<p><code dir="ltr">REUSE</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t43 r1c3-t43">
<p><code dir="ltr">BOOLEAN</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t43 r1c4-t43">
<p>If <code dir="ltr">TRUE</code>, include the <code dir="ltr">REUSE</code> parameter for datafiles in a tablespace to indicate that existing files can be reused. If <code dir="ltr">FALSE</code>, omit the <code dir="ltr">REUSE</code> parameter.</p>
<p>Defaults to <code dir="ltr">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t43" headers="r1c1-t43">
<p><code dir="ltr">CLUSTER</code>, <code dir="ltr">INDEX</code>, <code dir="ltr">ROLLBACK_SEGMENT</code>, <code dir="ltr">TABLE</code>, <code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t43 r1c2-t43">
<p><code dir="ltr">PCTSPACE</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t43 r1c3-t43">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t43 r1c4-t43">
<p>A number representing the percentage by which space allocation for the object type is to be modified. The value is the number of one-hundredths of the current allocation. For example, 100 means 100%.</p>
<p>If the object type is <code dir="ltr">TABLESPACE</code>, the following size values are affected:</p>
<p>- in file specifications, the value of <code dir="ltr">SIZE</code></p>
<p>- <code dir="ltr">MINIMUM</code> <code dir="ltr">EXTENT</code></p>
<p>- <code dir="ltr">EXTENT</code> <code dir="ltr">MANAGEMENT</code> <code dir="ltr">LOCAL</code> <code dir="ltr">UNIFORM</code> <code dir="ltr">SIZE</code></p>
<p>For other object types, <code dir="ltr">INITIAL</code> and <code dir="ltr">NEXT</code> are affected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r22c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t43 r1c2-t43">
<p><code dir="ltr">LOB_STORAGE</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t43 r1c3-t43">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t43 r1c4-t43">
<p>Specifies the storage type to use for LOB segments. The options are as follows:</p>
<ul>
<li>
<p><code dir="ltr">SECUREFILE</code> - LOB storage is returned as <code dir="ltr">SECUREFILE</code></p>
</li>
<li>
<p><code dir="ltr">BASICFILE</code> - LOB storage is returned as <code dir="ltr">BASICFILE</code></p>
</li>
<li>
<p><code dir="ltr">DEFAULT</code> - The keyword (<code dir="ltr">SECUREFILE</code> or <code dir="ltr">BASICFILE</code>) is omitted in the <code dir="ltr">LOB STORE AS</code> clause.</p>
</li>
<li>
<p><code dir="ltr">NO_CHANGE</code> - LOB segments are created with the same storage they had in the source database. This is the default.</p>
</li>
</ul>
<p>Specifying this transform changes the LOB storage for all tables in the job, including tables that provide storage for materialized views.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r23c1-t43" headers="r1c1-t43">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t43 r1c2-t43">
<p><code dir="ltr">TABLE_COMPRESSION_CLAUSE</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t43 r1c3-t43">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t43 r1c4-t43">
<p>Specifies a table compression clause (for example, <code dir="ltr">COMPRESS BASIC</code>) to use when the table is created.</p>
<p>Specify <code dir="ltr">NONE</code> to omit the table compression clause. The table will have the default compression for the tablespace.</p>
<p>Specifying this transform changes the compression type for all tables in the job, including tables that provide storage for materialized views.</p>
<p>See <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about table compression options and syntax.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" -->
<p><a href="#BGBEIIGA">Table 94-24</a> describes the object type, name, datatype, and meaning of the parameters for the MODIFY transform in the <code dir="ltr">SET_TRANSFORM_PARAM</code> procedure.</p>
<div id="ARPLS66913" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref5816"></a><a id="BGBEIIGA"></a>Table 94-24 SET_TRANSFORM_PARAM: Transform Parameters for the MODIFY Transform</p>
<table class="cellalignment4327" title="SET_TRANSFORM_PARAM: Transform Parameters for the MODIFY Transform" summary="This table describes the Transform Parameters for the MODIFY Transform used by the DBMS_METADATA.SET_TRANSFORM_PARAM subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t44">Object Type</th>
<th class="cellalignment4328" id="r1c2-t44">Name</th>
<th class="cellalignment4328" id="r1c3-t44">Datatype</th>
<th class="cellalignment4328" id="r1c4-t44">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t44" headers="r1c1-t44">
<p><code dir="ltr">All objects</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t44 r1c2-t44">
<p><code dir="ltr">OBJECT_ROW</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t44 r1c3-t44">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t44 r1c4-t44">
<p>A number designating the object row for an object. The object in the document that corresponds to this number will be copied to the output document.</p>
<p>This parameter is additive.</p>
<p>By default, all objects are copied to the output document.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" -->
<p><a href="#BGBFIDAC">Table 94-25</a> describes the object type, name, datatype, and meaning of the parameters for the MODIFY transform in the <code dir="ltr">SET_REMAP_PARAM</code> procedure.</p>
<div id="ARPLS66914" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref5817"></a><a id="BGBFIDAC"></a>Table 94-25 SET_REMAP_PARAM: Transform Parameters for the MODIFY Transform</p>
<table class="cellalignment4327" title="SET_REMAP_PARAM: Transform Parameters for the MODIFY Transform" summary="This table describes the Transform Parameters for the MODIFY Transform used by the DBMS_METADATA.SET_REMAP_PARAM subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t45">Object Type</th>
<th class="cellalignment4328" id="r1c2-t45">Name</th>
<th class="cellalignment4328" id="r1c3-t45">Datatype</th>
<th class="cellalignment4328" id="r1c4-t45">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t45" headers="r1c1-t45">
<p><code dir="ltr">LIBRARY, TABLESPACE, DIRECTORY</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t45 r1c2-t45">
<p><code dir="ltr">REMAP_DATAFILE</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t45 r1c3-t45">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t45 r1c4-t45">
<p>Objects in the document will have their filespecs renamed as follows: any filespec matching <code dir="ltr">old_value</code> will be changed to <code dir="ltr">new_value</code>. Filespecs should <span class="italic">not</span> be enclosed in quotes.</p>
<p>This parameter is additive.</p>
<p>By default, filespecs are not renamed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t45" headers="r1c1-t45">
<p>Named objects and all objects dependent on named objects</p>
</td>
<td class="cellalignment4329" headers="r3c1-t45 r1c2-t45">
<p><code dir="ltr">REMAP_NAME</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t45 r1c3-t45">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r3c1-t45 r1c4-t45">
<p>Any named object in the document whose name matches <code dir="ltr">old_value</code> will have its name changed to <code dir="ltr">new_value</code>.</p>
<p>Any dependent object whose base object name matches <code dir="ltr">old_value</code> will have its base schema name changed to <code dir="ltr">new_value</code>.</p>
<p>This parameter is additive.</p>
<p>By default, names are not remapped.</p>
<p>(Use <code dir="ltr">REMAP_TABLESPACE</code> to remap the name of a <code dir="ltr">TABLESPACE</code> object.)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t45" headers="r1c1-t45">
<p><code dir="ltr">Schema Objects, Dependent Objects, Granted Objects, USER</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t45 r1c2-t45">
<p><code dir="ltr">REMAP_SCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t45 r1c3-t45">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t45 r1c4-t45">
<p>Any schema object in the document whose name matches <code dir="ltr">old_value</code> will have its schema name changed to <code dir="ltr">new_value</code>.</p>
<p>Any dependent object whose base object schema name matches <code dir="ltr">old_value</code> will have its base object schema name changed to <code dir="ltr">new_value</code>.</p>
<p>Any granted object whose grantee name matches <code dir="ltr">old_value</code> will have its grantee name changed to <code dir="ltr">new_value</code>.</p>
<p>Any user whose name matches <code dir="ltr">old_value</code> will have its name changed to <code dir="ltr">new_value</code>.</p>
<p>This parameter is additive.</p>
<p>By default, schemas are not remapped.</p>
<p>NOTE: The mapping may not be 100 percent complete because there are certain schema references that Import is not capable of finding. For example, Import will not find schema references embedded within the body of definitions of triggers, types, views, procedures, and packages.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t45" headers="r1c1-t45">
<p><code dir="ltr">TABLE, CLUSTER, CONSTRAINT, INDEX, ROLLBACK_SEGMENT, MATERIALIZED_VIEW, MATERIALIZED_VIEW_LOG, TABLESPACE_QUOTA</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t45 r1c2-t45">
<p><code dir="ltr">REMAP_TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t45 r1c3-t45">
<p><code dir="ltr">Text</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t45 r1c4-t45">
<p>Objects in the document will have their tablespaces renamed as follows: any tablespace name matching <code dir="ltr">old_value</code> will be changed to <code dir="ltr">new_value</code>.</p>
<p>This parameter is additive.</p>
<p>By default, tablespaces are not remapped.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" -->
<div id="ARPLS75003" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref5818"></a><a id="BGBFAGBG"></a>Table 94-26 SET_TRANSFORM_PARAM: Transform Parameters for the SXML Transform</p>
<table class="cellalignment4327" title="SET_TRANSFORM_PARAM: Transform Parameters for the SXML Transform" summary="Transform parameters for the SXML transform" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t46">Object type</th>
<th class="cellalignment4328" id="r1c2-t46">Name</th>
<th class="cellalignment4328" id="r1c3-t46">Datatype</th>
<th class="cellalignment4328" id="r1c4-t46">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t46" headers="r1c1-t46">
<p><code dir="ltr">TABLE</code>, <code dir="ltr">TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t46 r1c2-t46">
<p><code dir="ltr">OID</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t46 r1c3-t46">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r2c1-t46 r1c4-t46">
<p><code dir="ltr">If TRUE</code>, include the OID clause in the SXML. If <code dir="ltr">FALSE</code>, omit it. Defaults to <code dir="ltr">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t46" headers="r1c1-t46">
<p><code dir="ltr">TABLE, INDEX, CLUSTER, MATERIALIZED_VIEW, MATERIALIZED_VIEW_LOG.</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t46 r1c2-t46">
<p><code dir="ltr">STORAGE</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t46 r1c3-t46">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r3c1-t46 r1c4-t46">
<p>If <code dir="ltr">TRUE</code>, include storage clauses in the SXML. If <code dir="ltr">FALSE</code>, omit them. (Ignored if <code dir="ltr">SEGMENT_ATTRIBUTES</code> is <code dir="ltr">FALSE</code>.) Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t46" headers="r1c1-t46">
<p><code dir="ltr">TABLE, INDEX, CLUSTER, MATERIALIZED_VIEW, MATERIALIZED_VIEW_LOG.</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t46 r1c2-t46">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t46 r1c3-t46">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r4c1-t46 r1c4-t46">
<p>If <code dir="ltr">TRUE</code>, include tablespace clauses in the SXML. If <code dir="ltr">FALSE</code>, omit them. (Ignored if <code dir="ltr">SEGMENT_ATTRIBUTES</code> is <code dir="ltr">FALSE</code>.) Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t46" headers="r1c1-t46">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t46 r1c2-t46">
<p><code dir="ltr">REF_CONSTRAINTS</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t46 r1c3-t46">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r5c1-t46 r1c4-t46">
<p>If <code dir="ltr">TRUE</code>, include all referential constraints (foreign keys) in the SXML. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t46" headers="r1c1-t46">
<p><code dir="ltr">TABLE</code>, <code dir="ltr">INDEX</code>, <code dir="ltr">MATERIALIZED_VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t46 r1c2-t46">
<p><code dir="ltr">PHYSICAL_PROPERTIES</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t46 r1c3-t46">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r6c1-t46 r1c4-t46">
<p>If <code dir="ltr">TRUE</code>, include segment attributes clauses (physical attributes, storage attributes, tablespace, logging) in the SXML. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t46" headers="r1c1-t46">
<p><code dir="ltr">INDEX</code>, <code dir="ltr">CONSTRAINT</code>, <code dir="ltr">ROLLBACK_SEGMENT</code>, <code dir="ltr">CLUSTER,TABLE, TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t46 r1c2-t46">
<p><code dir="ltr">SEGMENT_ATTRIBUTES</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t46 r1c3-t46">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r7c1-t46 r1c4-t46">
<p>If <code dir="ltr">TRUE</code>, include segment attributes clauses (physical attributes, storage attributes, tablespace, logging) in the SXML. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t46" headers="r1c1-t46">
<p><code dir="ltr">TABLE</code>, <code dir="ltr">INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t46 r1c2-t46">
<p><code dir="ltr">PARTITIONING</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t46 r1c3-t46">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r8c1-t46 r1c4-t46">
<p>If <code dir="ltr">TRUE</code>, include partitioning clauses in the SXML. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE.</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t46" headers="r1c1-t46">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t46 r1c2-t46">
<p><code dir="ltr">CONSTRAINTS</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t46 r1c3-t46">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r9c1-t46 r1c4-t46">
<p>If <code dir="ltr">TRUE</code>, include all non-referential table constraints in the SXML. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" -->
<div id="ARPLS75004" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref5819"></a><a id="BGBFFBCH"></a>Table 94-27 SET_TRANSFORM_PARAM: Transform Parameters for the MODIFYSXML Transform</p>
<table class="cellalignment4327" title="SET_TRANSFORM_PARAM: Transform Parameters for the MODIFYSXML Transform" summary="Transform parameters for the MODIFYSXML transform" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t47">Object type</th>
<th class="cellalignment4328" id="r1c2-t47">Name</th>
<th class="cellalignment4328" id="r1c3-t47">Datatype</th>
<th class="cellalignment4328" id="r1c4-t47">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t47" headers="r1c1-t47">
<p><code dir="ltr">TABLE, INDEX, MATERIALIZED_VIEW, MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t47 r1c2-t47">
<p><code dir="ltr">STORAGE</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t47 r1c3-t47">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r2c1-t47 r1c4-t47">
<p>If <code dir="ltr">TRUE</code>, include storage clauses in the output SXML. If <code dir="ltr">FALSE</code>, omit them. (Ignored if <code dir="ltr">SEGMENT_ATTRIBUTES</code> is <code dir="ltr">FALSE</code>.) Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t47" headers="r1c1-t47">
<p><code dir="ltr">TABLE, INDEX, MATERIALIZED_VIEW, MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t47 r1c2-t47">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t47 r1c3-t47">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r3c1-t47 r1c4-t47">
<p>If <code dir="ltr">TRUE</code>, include tablespace clauses in the output SXML. If <code dir="ltr">FALSE</code>, omit them. (Ignored if <code dir="ltr">SEGMENT_ATTRIBUTES</code> is <code dir="ltr">FALSE</code>.) Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t47" headers="r1c1-t47">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t47 r1c2-t47">
<p><code dir="ltr">REF_CONSTRAINTS</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t47 r1c3-t47">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r4c1-t47 r1c4-t47">
<p>If <code dir="ltr">TRUE</code>, include all referential constraints (foreign keys) in the output SXML. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t47" headers="r1c1-t47">
<p><code dir="ltr">TABLE</code>, <code dir="ltr">INDEX</code>, <code dir="ltr">VIEW</code>, <code dir="ltr">MATERIALIZED_VIEW</code>, <code dir="ltr">MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t47 r1c2-t47">
<p><code dir="ltr">REMAP_NAME</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t47 r1c3-t47">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r5c1-t47 r1c4-t47">
<p>Any NAME element in the document that matches <code dir="ltr">old_value</code> will be changed to <code dir="ltr">new_value</code>.</p>
<p>This does not apply to column names. (See <code dir="ltr">REMAP_COLUMN_NAME</code>).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t47" headers="r1c1-t47">
<p><code dir="ltr">TABLE</code>, <code dir="ltr">INDEX</code>, <code dir="ltr">VIEW</code>, <code dir="ltr">MATERIALIZED_VIEW</code>, <code dir="ltr">MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t47 r1c2-t47">
<p><code dir="ltr">REMAP_SCHEMA</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t47 r1c3-t47">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r6c1-t47 r1c4-t47">
<p>Any SCHEMA element in the document matching <code dir="ltr">old_value</code> will be changed to <code dir="ltr">new_value</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t47" headers="r1c1-t47">
<p><code dir="ltr">TABLE</code>, <code dir="ltr">INDEX</code>, <code dir="ltr">VIEW</code>, <code dir="ltr">MATERIALIZED_VIEW</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t47 r1c2-t47">
<p><code dir="ltr">REMAP_COLUMN_NAME</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t47 r1c3-t47">
<p>Text</p>
</td>
<td class="cellalignment4329" headers="r7c1-t47 r1c4-t47">
<p>Any column in the document whose name matches <code dir="ltr">old_value</code> will have its name changed to <code dir="ltr">new_value</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t47" headers="r1c1-t47">
<p><code dir="ltr">TABLE, INDEX, MATERIALIZED_VIEW, MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t47 r1c2-t47">
<p><code dir="ltr">SEGMENT_ATTRIBUTES</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t47 r1c3-t47">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r8c1-t47 r1c4-t47">
<p>If <code dir="ltr">TRUE</code>, include segment attributes clauses (physical attributes, storage attributes, tablespace, logging) in the output SXML. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE.</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t47" headers="r1c1-t47">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t47 r1c2-t47">
<p><code dir="ltr">CONSTRAINTS</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t47 r1c3-t47">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r9c1-t47 r1c4-t47">
<p>If <code dir="ltr">TRUE</code>, include all non-referential table constraints in the output SXML. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" -->
<div id="ARPLS75005" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref5820"></a><a id="BGBHDAHD"></a>Table 94-28 SET_TRANSFORM_PARAM: Transform Parameters for the SXMLDDL Transform</p>
<table class="cellalignment4327" title="SET_TRANSFORM_PARAM: Transform Parameters for the SXMLDDL Transform" summary="Transform parameters for the SXMLDDL transform" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t48">Object type</th>
<th class="cellalignment4328" id="r1c2-t48">Name</th>
<th class="cellalignment4328" id="r1c3-t48">Datatype</th>
<th class="cellalignment4328" id="r1c4-t48">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t48" headers="r1c1-t48">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t48 r1c2-t48">
<p><code dir="ltr">OID</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t48 r1c3-t48">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r2c1-t48 r1c4-t48">
<p>If <code dir="ltr">TRUE</code>, include OIDs in the DDL. If <code dir="ltr">FALSE</code>, omit them. (Ignored if <code dir="ltr">SEGMENT_ATTRIBUTES</code> is <code dir="ltr">FALSE</code>.) Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t48" headers="r1c1-t48">
<p><code dir="ltr">TABLE, INDEX, CLUSTER, MATERIALIZED_VIEW, MATERIALIZED_VIEW_LOG.</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t48 r1c2-t48">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t48 r1c3-t48">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r3c1-t48 r1c4-t48">
<p>If <code dir="ltr">TRUE</code>, include tablespace clauses in the DDL. If <code dir="ltr">FALSE</code>, omit them. (Ignored if <code dir="ltr">SEGMENT_ATTRIBUTES</code> is FALSE.) Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t48" headers="r1c1-t48">
<p><code dir="ltr">TABLE, INDEX, CLUSTER, MATERIALIZED_VIEW, MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t48 r1c2-t48">
<p><code dir="ltr">STORAGE</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t48 r1c3-t48">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r4c1-t48 r1c4-t48">
<p>If <code dir="ltr">TRUE</code>, include storage clauses in the DDL. If <code dir="ltr">FALSE</code>, omit them. (Ignored if <code dir="ltr">SEGMENT_ATTRIBUTES</code> is <code dir="ltr">FALSE</code>.) Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t48" headers="r1c1-t48">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t48 r1c2-t48">
<p><code dir="ltr">REF_CONSTRAINTS</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t48 r1c3-t48">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r5c1-t48 r1c4-t48">
<p>If <code dir="ltr">TRUE</code>, include all referential constraints (foreign keys) in the DDL. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t48" headers="r1c1-t48">
<p><code dir="ltr">INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t48 r1c2-t48">
<p><code dir="ltr">PRESERVE_LOCAL</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t48 r1c3-t48">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r6c1-t48 r1c4-t48">
<p>If <code dir="ltr">PARTITIONING</code> is <code dir="ltr">FALSE</code> and <code dir="ltr">PRESERVE_LOCAL</code> is <code dir="ltr">TRUE</code> and the index is a locally partitioned index, include the <code dir="ltr">LOCAL</code> keyword in the DDL. Defaults to <code dir="ltr">FALSE.</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t48" headers="r1c1-t48">
<p><code dir="ltr">TABLE, INDEX, CLUSTER, MATERIALIZED_VIEW, MATERIALIZED_VIEW_LOG</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t48 r1c2-t48">
<p><code dir="ltr">SEGMENT_ATTRIBUTES</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t48 r1c3-t48">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r7c1-t48 r1c4-t48">
<p>If <code dir="ltr">TRUE</code>, include segment attributes clauses (physical attributes, storage attributes, tablespace, logging) in the DDL. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t48" headers="r1c1-t48">
<p><code dir="ltr">TABLESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t48 r1c2-t48">
<p><code dir="ltr">REUSE</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t48 r1c3-t48">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r8c1-t48 r1c4-t48">
<p>If <code dir="ltr">TRUE</code>, include the <code dir="ltr">REUSE</code> parameter for datafiles in a tablespace to indicate that existing files can be reused. If <code dir="ltr">FALSE</code>, omit the <code dir="ltr">REUSE</code> parameter.</p>
<p>Defaults to <code dir="ltr">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t48" headers="r1c1-t48">
<p><code dir="ltr">TABLE</code>, <code dir="ltr">INDEX</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t48 r1c2-t48">
<p><code dir="ltr">PARTITIONING</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t48 r1c3-t48">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r9c1-t48 r1c4-t48">
<p>If <code dir="ltr">TRUE</code>, include partitioning clauses in the DDL. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t48" headers="r1c1-t48">
<p><code dir="ltr">TABLE</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t48 r1c2-t48">
<p><code dir="ltr">CONSTRAINTS</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t48 r1c3-t48">
<p>Boolean</p>
</td>
<td class="cellalignment4329" headers="r10c1-t48 r1c4-t48">
<p>If <code dir="ltr">TRUE</code>, include all non-referential table constraints in the output SXML. If <code dir="ltr">FALSE</code>, omit them. Defaults to <code dir="ltr">TRUE</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5821"></a>Exceptions</p>
<ul>
<li>
<p><code dir="ltr">INVALID_ARGVAL.</code> A <code dir="ltr">NULL</code> or invalid value was supplied for an input parameter. The error message text identifies the parameter.</p>
</li>
<li>
<p><code dir="ltr">INVALID_OPERATION.</code> Either <code dir="ltr">SET_TRANSFORM_PARAM</code> or <code dir="ltr">SET_REMAP_PARAM</code> was called after the first call to <code dir="ltr">FETCH_xxx</code> for the <code dir="ltr">OPEN</code> context. After the first call to <code dir="ltr">FETCH_xxx</code> is made, no further calls to <code dir="ltr">SET_TRANSFORM_PARAM</code> or <code dir="ltr">SET_REMAP_PARAM</code> are permitted.</p>
</li>
<li>
<p><code dir="ltr">INCONSISTENT_ARGS</code>. The arguments are inconsistent. This can mean the following:</p>
<ul>
<li>
<p>The transform parameter <code dir="ltr">name</code> is not valid for the object type associated with the <code dir="ltr">OPEN</code> context or for the transform associated with the transform handle.</p>
</li>
<li>
<p>The transform applies to all object types in a heterogeneous collection, but <code dir="ltr">object_type</code> is not part of the collection.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5822"></a>Usage Notes</p>
<p>XSLT allows parameters to be passed to stylesheets. You call <code dir="ltr">SET_TRANSFORM_PARAM</code> or <code dir="ltr">SET_REMAP_PARAM</code> to specify the value of a parameter to be passed to the stylesheet identified by <code dir="ltr">transform_handle</code>.</p>
<p>Normally, if you call <code dir="ltr">SET_TRANSFORM_PARAMETER</code> multiple times for the same parameter name, each call overrides the prior call. For example, the following sequence simply sets the <code dir="ltr">STORAGE</code> transform parameter to <code dir="ltr">TRUE</code>.</p>
<pre dir="ltr">SET_TRANSFORM_PARAM(tr_handle,&#39;STORAGE&#39;,false);
SET_TRANSFORM_PARAM(tr_handle,&#39;STORAGE&#39;,true);
</pre>
<p>However, some transform parameters are additive which means that all specified parameter values are applied to the document, not just the last one. For example, the <code dir="ltr">OBJECT_ROW</code> parameter to the <code dir="ltr">MODIFY</code> transform is additive. If you specify the following, then both specified rows are copied to the output document.</p>
<pre dir="ltr">SET_TRANSFORM_PARAM(tr_handle,&#39;OBJECT_ROW&#39;,5);
SET_TRANSFORM_PARAM(tr_handle,&#39;OBJECT_ROW&#39;,8);
</pre>
<p>The <code dir="ltr">REMAP_TABLESPACE</code> parameter is also additive. If you specify the following, then tablespaces TBS1 and TBS3 are changed to TBS2 and TBS4, respectively.</p>
<pre dir="ltr">SET_REMAP_PARAM(tr_handle,&#39;REMAP_TABLESPACE&#39;,&#39;TBS1&#39;,&#39;TBS2&#39;);
SET_REMAP_PARAM(tr_handle,&#39;REMAP_TABLESPACE&#39;,&#39;TBS3&#39;,&#39;TBS4&#39;);
</pre>
<p>The order in which the transformations are performed is undefined. For example, if you specify the following, the result is undefined.</p>
<pre dir="ltr">SET_REMAP_PARAM(tr_handle,&#39;REMAP_TABLESPACE&#39;,&#39;TBS1&#39;,&#39;TBS2&#39;);
SET_REMAP_PARAM(tr_handle,&#39;REMAP_TABLESPACE&#39;,&#39;TBS2&#39;,&#39;TBS3&#39;);
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The number of remap parameters that can be specified for a MODIFY transform is limited to ten. That is, you can specify up to ten <code dir="ltr">REMAP_DATAFILE</code> parameters, up to ten <code dir="ltr">REMAP_SCHEMA</code> parameters and so on. Additional instances are ignored. To work around this, you can perform another <code dir="ltr">DBMS_METADATA.ADD_TRANSFORM</code> and specify additional remap parameters.</div>
<p>The <code dir="ltr">GET_DDL</code>, <code dir="ltr">GET_DEPENDENT_DDL</code>, and <code dir="ltr">GET_GRANTED_DDL</code> functions allow the casual browser to extract the creation DDL for an object. So that you can specify transform parameters, this package defines an enumerated constant <code dir="ltr">SESSION_TRANSFORM</code> as the handle of the DDL transform at the session level. You can call <code dir="ltr">SET_TRANSFORM_PARAM</code> using <code dir="ltr">DBMS_METADATA.SESSION_TRANSFORM</code> as the transform handle to set transform parameters for the whole session. <code dir="ltr">GET_DDL</code>, <code dir="ltr">GET_DEPENDENT_DDL</code>, and <code dir="ltr">GET GRANTED_DDL</code> inherit these parameters when they invoke the DDL transform.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The enumerated constant must be prefixed with the package name <code dir="ltr">DBMS_METADATA.SESSION_TRANSFORM</code>.</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_logstdby_context.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_metadiff.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>