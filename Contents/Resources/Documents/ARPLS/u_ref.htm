<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2485"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/UTL_REF"></a><title>UTL_REF</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:37:17Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="u_recomp.htm" title="Previous" type="text/html"/>
<link rel="Next" href="u_smtp.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">266/290</span> <!-- End Header -->
<div id="ARPLS385" class="chapter"><a id="BABFDGCE"></a>
<h1 class="chapter"><span class="secnum">262</span> UTL_REF</h1>
<p>The <code dir="ltr"><a id="sthref19621"></a>UTL_REF</code> package provides PL/SQL procedures to support reference-based operations. Unlike SQL, <code dir="ltr">UTL_REF</code> procedures enable you to write generic type methods without knowing the object table name.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BABGHCHG">Using UTL_REF</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Types</p>
</li>
<li>
<p>Exceptions</p>
</li>
</ul>
</li>
<li>
<p><a href="#i999086">Summary of UTL_REF Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="BABGHCHG"></a>
<div id="ARPLS71443" class="refsect1">
<h2 class="refsect1">Using UTL_REF</h2>
<ul>
<li>
<p><a href="#i998921">Overview</a></p>
</li>
<li>
<p><a href="#i999033">Security Model</a></p>
</li>
<li>
<p><a href="#BABGBABH">Types</a></p>
</li>
<li>
<p><a href="#i999034">Exceptions</a></p>
</li>
</ul>
<div id="ARPLS71444" class="refsect2"><a id="i998921"></a>
<h3 class="refsect2">Overview</h3>
<p><a id="i998937"></a>Oracle supports user-defined composite type or object type. Any instance of an object type is called an object. An object type can be used as the type of a column or as the type of a table.</p>
<p>In an object table, each row of the table stores an object. You can uniquely identify an object in an object table with an object identifier.</p>
<p>A reference is a persistent pointer to an object, and each reference can contain an object identifier. The reference can be an attribute of an object type, or it can be stored in a column of a table. Given a reference, an object can be retrieved.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS71445" class="refsect2"><a id="i999033"></a>
<h3 class="refsect2">Security Model</h3>
<p>The procedural option is needed to use this package. This package must be created under <code dir="ltr">SYS</code> (<code dir="ltr">CONNECT /AS SYSDBA</code>). Operations provided by this package are performed under the current calling user, not under the package owner <code dir="ltr">SYS</code>.</p>
<p>You can use the <code dir="ltr">UTL_REF</code> package from stored PL/SQL procedures/packages on the server, as well as from client/side PL/SQL code.</p>
<p>When invoked from PL/SQL procedures/packages on the server, <code dir="ltr">UTL_REF</code> verifies that the invoker has the appropriate privileges to access the object pointed to by the <code dir="ltr">REF</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This is in contrast to PL/SQL packages/procedures on the server which operate with definer&#39;s privileges, where the package owner must have the appropriate privileges to perform the desired operations.</div>
<p>Thus, if <code dir="ltr">UTL_REF</code> is defined under user <code dir="ltr">SYS</code>, and user A invokes <code dir="ltr">UTL_REF</code>.<code dir="ltr">SELECT</code> to select an object from a reference, then user A (the invoker) requires the privileges to check.</p>
<p>When invoked from client-side PL/SQL code, <code dir="ltr">UTL_REF</code> operates with the privileges of the client session under which the PL/SQL execution is being done.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS71446" class="refsect2"><a id="BABGBABH"></a>
<h3 class="refsect2">Types</h3>
<p>An object type is a composite datatype defined by the user or supplied as a library type. You can create the object type <code dir="ltr">employee_type</code> using the following syntax:</p>
<pre dir="ltr">CREATE TYPE employee_type AS OBJECT (
   name    VARCHAR2(20),
   id      NUMBER,

member function GET_ID
    (name VARCHAR2) 
   RETURN MEMBER);
</pre>
<p>The object type <code dir="ltr">employee_type</code> is a user-defined type that contains two attributes, <code dir="ltr">name</code> and <code dir="ltr">id</code>, and a member function, <code dir="ltr">GET_ID</code>().</p>
<p>You can create an object table using the following SQL syntax:</p>
<pre dir="ltr">CREATE TABLE employee_table OF employee_type;
</pre></div>
<!-- class="refsect2" -->
<div id="ARPLS71447" class="refsect2"><a id="i999034"></a>
<h3 class="refsect2">Exceptions</h3>
<p>Exceptions can be returned during execution of <code dir="ltr">UTL_REF</code> functions for various reasons. For example, the following scenarios would result in exceptions:</p>
<ul>
<li>
<p>The object selected does not exist. This could be because either:</p>
<ol>
<li>
<p><kbd>The object has been deleted, or the given reference is dangling (invalid).</kbd></p>
</li>
<li>
<p><kbd>The object table was dropped or does not exist.</kbd></p>
</li>
</ol>
</li>
<li>
<p>The object cannot be modified or locked in a serializable transaction. The object was modified by another transaction after the serializable transaction started.</p>
</li>
<li>
<p>You do not have the privilege to select or modify the object. The caller of the <code dir="ltr">UTL_REF</code> subprogram must have the proper privilege on the object that is being selected or modified.</p>
</li>
</ul>
<div id="ARPLS71448" class="tblformal">
<p class="titleintable"><a id="sthref19622"></a><a id="sthref19623"></a>Table 262-1 <span class="bolditalic">UTL_REF Exceptions</span></p>
<table class="cellalignment4330" title="UTL_REF Exceptions " summary="This table describes Exceptions raised by UTL_REF subprograms." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t3">Exceptions</th>
<th class="cellalignment4328" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">errnum == 942</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c2-t3">
<p>Insufficient privileges.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">errnum == 1031</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c2-t3">
<p>Insufficient privileges.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">errnum == 8177</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c2-t3">
<p>Unable to serialize, if in a serializable transaction.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t3" headers="r1c1-t3">
<p><code dir="ltr">errnum == 60</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c2-t3">
<p>Deadlock detected.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t3" headers="r1c1-t3">
<p><code dir="ltr">errnum == 1403</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c2-t3">
<p>No data found (if the <code dir="ltr">REF</code> is <code dir="ltr">NULL</code>, and so on.).</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>The <code dir="ltr">UTL_REF</code> package does not define any named exceptions. You may define exception handling blocks to catch specific exceptions and to handle them appropriately.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i999086"></a>
<div id="ARPLS71449" class="refsect1">
<h2 class="refsect1">Summary of UTL_REF Subprograms</h2>
<div id="ARPLS71450" class="tblformal">
<p class="titleintable"><a id="sthref19624"></a><a id="sthref19625"></a>Table 262-2 UTL_REF Package Subprograms</p>
<table class="cellalignment4330" title="UTL_REF Package Subprograms" summary="This table lists the UTL_REF subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i999151">DELETE_OBJECT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p>Deletes an object given a reference</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#i999239">LOCK_OBJECT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<p>Locks an object given a reference</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#i999141">SELECT_OBJECT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c2-t4">
<p>Selects an object given a reference</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#i996944">UPDATE_OBJECT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c2-t4">
<p>Updates an object given a reference</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS71451" class="refsect2"><a id="i999151"></a>
<h3 class="refsect2"><a id="sthref19626"></a>DELETE_OBJECT Procedure</h3>
<p>This procedure deletes an object given a reference. The semantic of this subprogram is similar to the following SQL statement:</p>
<pre dir="ltr">DELETE FROM object_table  
WHERE REF(t) = reference; 
</pre>
<p>Unlike the preceding SQL statement, this subprogram does not require you to specify the object table name where the object resides.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19627"></a>Syntax</p>
<pre dir="ltr">UTL_REF.DELETE_OBJECT (
   reference IN REF &#34;&lt;typename&gt;&#34;); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19628"></a>Parameters</p>
<div id="ARPLS71452" class="tblformal">
<p class="titleintable"><a id="sthref19629"></a><a id="sthref19630"></a>Table 262-3 DELETE_OBJECT Procedure Parameters</p>
<table class="cellalignment4330" title="DELETE_OBJECT Procedure Parameters " summary="This table describes the Parameters of the UTL_REF.DELETE_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5">Parameter</th>
<th class="cellalignment4328" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">reference</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p>Reference of the object to delete.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19631"></a>Exceptions</p>
<p>May be raised.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19632"></a>Examples</p>
<p>The following example illustrates usage of the <code dir="ltr">UTL_REF</code> package to implement this scenario: if an employee of a company changes their address, their manager should be notified.</p>
<p>... declarations of <code dir="ltr">Address_t</code> and others...</p>
<pre dir="ltr">CREATE OR REPLACE TYPE Person_t ( 
   name    VARCHAR2(64), 
   gender  CHAR(1), 
   address Address_t, 
   MEMBER PROCEDURE setAddress(addr IN Address_t) 
); 

CREATE OR REPLACE TYPE BODY Person_t ( 
   MEMBER PROCEDURE setAddress(addr IN Address_t) IS 
   BEGIN 
      address := addr; 
   END; 
); 

CREATE OR REPLACE TYPE Employee_t (  
</pre>
<p>Under <code dir="ltr">Person_t</code>: Simulate implementation of inheritance using a <code dir="ltr">REF</code> to <code dir="ltr">Person_t</code> and delegation of <code dir="ltr">setAddress</code> to it.</p>
<pre dir="ltr">   thePerson  REF Person_t, 
   empno      NUMBER(5), 
   deptREF    Department_t, 
   mgrREF     Employee_t, 
   reminders  StringArray_t, 
   MEMBER PROCEDURE setAddress(addr IN Address_t), 
   MEMBER procedure addReminder(reminder VARCHAR2); 
); 

CREATE TYPE BODY Employee_t ( 
   MEMBER PROCEDURE setAddress(addr IN Address_t) IS 
      myMgr Employee_t; 
      meAsPerson Person_t; 
   BEGIN 
</pre>
<p>Update the address by delegating the responsibility to <code dir="ltr">thePerson</code>. Lock the Person object from the reference, and also select it:</p>
<pre dir="ltr">      UTL_REF.LOCK_OBJECT(thePerson, meAsPerson); 
      meAsPerson.setAddress(addr);    
</pre>
<p>Delegate to <code dir="ltr">thePerson</code>:</p>
<pre dir="ltr">        UTL_REF.UPDATE_OBJECT(thePerson, meAsPerson); 
        if mgr is NOT NULL THEN 
</pre>
<p>Give the manager a reminder:</p>
<pre dir="ltr">         UTL_REF.LOCK_OBJECT(mgr); 
         UTL_REF.SELECT_OBJECT(mgr, myMgr); 
         myMgr.addReminder 
         (&#39;Update address in the employee directory for&#39; || 
         thePerson.name || &#39;, new address: &#39; || addr.asString); 
         UTL_REF.UPDATE_OBJECT(mgr, myMgr); 
      END IF; 
   EXCEPTION 
      WHEN OTHERS THEN 
      errnum := SQLCODE; 
      errmsg := SUBSTR(SQLERRM, 1, 200);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71453" class="refsect2"><a id="i999239"></a>
<h3 class="refsect2"><a id="sthref19633"></a>LOCK_OBJECT Procedure</h3>
<p>This procedure locks an object given a reference. In addition, this procedure lets the program select the locked object. The semantic of this subprogram is similar to the following SQL statement:</p>
<pre dir="ltr">SELECT VALUE(t) 
  INTO object 
  FROM object_table t 
  WHERE REF(t) = reference 
  FOR UPDATE; 
</pre>
<p>Unlike the preceding SQL statement, this subprogram does not require you to specify the object table name where the object resides. It is not necessary to lock an object before updating/deleting it.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19634"></a>Syntax</p>
<pre dir="ltr">UTL_REF.LOCK_OBJECT (
   reference IN REF &#34;&lt;typename&gt;&#34;); 

UTL_REF.LOCK_OBJECT (
   reference IN REF &#34;&lt;typename&gt;&#34;, 
   object    IN OUT &#34;&lt;typename&gt;&#34;); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19635"></a>Parameters</p>
<div id="ARPLS71454" class="tblformal">
<p class="titleintable"><a id="sthref19636"></a><a id="sthref19637"></a>Table 262-4 LOCK_OBJECT Procedure Parameters</p>
<table class="cellalignment4330" title="LOCK_OBJECT Procedure Parameters " summary="This table describes the Parameters of the UTL_REF.LOCK_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t6">Parameter</th>
<th class="cellalignment4328" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">reference</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c2-t6">
<p>Reference of the object to lock.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t6" headers="r1c1-t6">
<p><code dir="ltr">object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c2-t6">
<p>The PL/SQL variable that stores the locked object. This variable should be of the same object type as the locked object.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19638"></a>Exceptions</p>
<p>May be raised.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71455" class="refsect2"><a id="i999141"></a>
<h3 class="refsect2"><a id="sthref19639"></a>SELECT_OBJECT Procedure</h3>
<p>This procedure selects an object given its reference. The selected object is retrieved from the database and its value is put into the PL/SQL variable &#39;object&#39;. The semantic of this subprogram is similar to the following SQL statement:</p>
<pre dir="ltr">SELECT VALUE(t) 
INTO object 
FROM object_table t 
WHERE REF(t) = reference; 
</pre>
<p>Unlike the preceding SQL statement, this subprogram does not require you to specify the object table name where the object resides.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19640"></a>Syntax</p>
<pre dir="ltr">UTL_REF.SELECT_OBJECT (
   reference IN REF &#34;&lt;typename&gt;&#34;, 
   object    IN OUT &#34;&lt;typename&gt;&#34;); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19641"></a>Parameters</p>
<div id="ARPLS71456" class="tblformal">
<p class="titleintable"><a id="sthref19642"></a><a id="sthref19643"></a>Table 262-5 SELECT_OBJECT Procedure Parameters</p>
<table class="cellalignment4330" title="SELECT_OBJECT Procedure Parameters " summary="This table describes the Parameters of the UTL_REF.SELECT_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t7">Parameter</th>
<th class="cellalignment4328" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">reference</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t7 r1c2-t7">
<p>Reference to the object to select or retrieve.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t7 r1c2-t7">
<p>The PL/SQL variable that stores the selected object; this variable should be of the same object type as the referenced object.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19644"></a>Exceptions</p>
<p>May be raised.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71457" class="refsect2"><a id="i996944"></a>
<h3 class="refsect2"><a id="sthref19645"></a>UPDATE_OBJECT Procedure</h3>
<p>This procedure updates an object given a reference. The referenced object is updated with the value contained in the PL/SQL variable &#39;object&#39;. The semantic of this subprogram is similar to the following SQL statement:</p>
<pre dir="ltr">UPDATE object_table t 
SET VALUE(t) = object 
WHERE REF(t) = reference; 
</pre>
<p>Unlike the preceding SQL statement, this subprogram does not require you to specify the object table name where the object resides.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19646"></a>Syntax</p>
<pre dir="ltr">UTL_REF.UPDATE_OBJECT (
   reference IN REF &#34;&lt;typename&gt;&#34;, 
   object    IN     &#34;&lt;typename&gt;&#34;); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19647"></a>Parameters</p>
<div id="ARPLS71458" class="tblformal">
<p class="titleintable"><a id="sthref19648"></a><a id="sthref19649"></a>Table 262-6 UPDATE_OBJECT Procedure Parameters</p>
<table class="cellalignment4330" title="UPDATE_OBJECT Procedure Parameters " summary="This table describes the Parameters of the UTL_REF.UPDATE_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Parameter</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">reference</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>Reference of the object to update.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t8 r1c2-t8">
<p>The PL/SQL variable that contains the new value of the object. This variable should be of the same object type as the object to update.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref19650"></a>Exceptions</p>
<p>May be raised.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="u_recomp.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="u_smtp.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>