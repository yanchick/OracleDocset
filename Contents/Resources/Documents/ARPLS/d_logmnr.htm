<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2291"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_LOGMNR"></a><title>DBMS_LOGMNR</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:23Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_lock.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_logmnrd.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">94/290</span> <!-- End Header -->
<div id="ARPLS022" class="chapter"><a id="CCHEGJCG"></a> <a id="i79049"></a>
<h1 class="chapter"><span class="secnum">90</span> DBMS_LOGMNR</h1>
<p>The <code dir="ltr">DBMS<a id="sthref5445"></a>_LOGMNR</code> package, one of a set of LogMiner packages, contains the subprograms you use to initialize the LogMiner tool and to begin and end a LogMiner session.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL019" href="../SUTIL/GUID-3417B738-374C-4EE3-B15C-3A66E01AE2B5.htm#SUTIL019"><span class="italic">Oracle Database Utilities</span></a> for information regarding LogMiner.</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CCHIEGJC">Using DBMS_LOGMNR</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
<li>
<p>Views</p>
</li>
<li>
<p>Operational Notes</p>
</li>
</ul>
</li>
<li>
<p><a href="#i80310">Summary of DBMS_LOGMNR Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CCHIEGJC"></a>
<div id="ARPLS66784" class="refsect1">
<h2 class="refsect1">Using DBMS_LOGMNR</h2>
<p>This section contains the following topics, which relate to using the <code dir="ltr">DBMS_LOGMNR</code> package:</p>
<ul>
<li>
<p><a href="#BHJEFAEF">Overview</a></p>
</li>
<li>
<p><a href="#i80625">Security Model</a></p>
</li>
<li>
<p><a href="#i80656">Constants</a></p>
</li>
<li>
<p><a href="#BHJHFAHC">Views</a></p>
</li>
<li>
<p><a href="#i81144">Operational Notes</a></p>
</li>
</ul>
<div id="ARPLS66785" class="refsect2"><a id="BHJEFAEF"></a>
<h3 class="refsect2">Overview</h3>
<p>Oracle LogMiner, which is part of Oracle Database, enables you to query online and archived redo log files through a SQL interface. The <code dir="ltr">DBMS_LOGMNR</code> package provides the majority of the tools needed to start and stop LogMiner and specify the redo log files of interest.</p>
<p>All changes made to user data or to the database dictionary are recorded in the Oracle redo log files so that database recovery operations can be performed. You can take advantage of the data recorded in the redo log files to accomplish other tasks, such as:</p>
<ul>
<li>
<p>Pinpointing when a logical corruption to a database, such as errors made at the application level, may have begun</p>
</li>
<li>
<p>Determining what actions you would have to take to perform fine-grained recovery at the transaction level.</p>
</li>
<li>
<p>Performance tuning and capacity planning through trend analysis.</p>
</li>
<li>
<p>Track any data manipulation language (DML) and data definition language (DDL) statements executed on the database, the order in which they were executed, and who executed them.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a href="d_logmnrd.htm#BABECAHB">Chapter 91, &#34;DBMS_LOGMNR_D&#34;</a> for information on the package subprograms that extract a LogMiner dictionary and re-create LogMiner tables in alternate tablespaces</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS66786" class="refsect2"><a id="i80625"></a>
<h3 class="refsect2">Security Model</h3>
<p>You must have the <code dir="ltr">EXECUTE_CATALOG_ROLE</code> role to use the <code dir="ltr">DBMS_LOGMNR</code> package.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS66787" class="refsect2"><a id="i80656"></a>
<h3 class="refsect2">Constants</h3>
<p>The <code dir="ltr">DBMS_LOGMNR</code> package defines several enumerated constants for specifying parameter values. Enumerated constants must be prefixed with the package name, for example, <code dir="ltr">DBMS_LOGMNR.NEW</code>.</p>
<p><a href="#CCHCAJEE">Table 90-1</a> describes the constants for the <code dir="ltr">ADD_LOGFILE</code> <code dir="ltr">options</code> flag in the <code dir="ltr">DBMS_LOGMNR</code> package.</p>
<div id="ARPLS66788" class="tblformal">
<p class="titleintable"><a id="sthref5446"></a><a id="CCHCAJEE"></a>Table 90-1 Constants for ADD_LOGFILE Options Flag</p>
<table class="cellalignment4330" title="Constants for ADD_LOGFILE Options Flag" summary="This table describes constants used by the ADD_LOGFILE options flag of the DBMS_LOGMNR package." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Constant</th>
<th class="cellalignment4328" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">NEW</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p>Implicitly calls the <code dir="ltr">DBMS_LOGMNR.END_LOGMNR</code> procedure to end the current LogMiner session and then creates a new session. The new session starts a new list of redo log files to be analyzed, beginning with the redo log file you specify.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">ADDFILE</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<p>Adds the specified redo log file to the list of redo log files to be analyzed. Any attempt to add a duplicate file raises an exception (<code dir="ltr">ORA-01289</code>). This is the default if no options flag is specified.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p><a href="#CCHDBIGB">Table 90-2</a> describes the constants for the <code dir="ltr">START_LOGMNR</code> options flag in the <code dir="ltr">DBMS_LOGMNR</code> package.</p>
<div id="ARPLS66789" class="tblformal">
<p class="titleintable"><a id="sthref5447"></a><a id="CCHDBIGB"></a>Table 90-2 Constants for START_LOGMNR Options Flag</p>
<table class="cellalignment4330" title="Constants for START_LOGMNR Options Flag" summary="This table describes constants used by the START_LOGMNR options flag of the DBMS_LOGMNR package." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5">Constant</th>
<th class="cellalignment4328" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">COMMITTED_DATA_ONLY</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p>If set, DML statements corresponding to committed transactions are returned. DML statements corresponding to a committed transaction are grouped together. Transactions are returned in their commit order. Transactions that are rolled back or in-progress are filtered out, as are internal redo records (those related to index operations, management, and so on).</p>
<p>If this option is not set, all rows for all transactions (committed, rolled back, and in-progress) are returned in the order in which they are found in the redo logs (in order of SCN values).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">SKIP_CORRUPTION</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c2-t5">
<p>Directs a select operation on the <code dir="ltr">V$LOGMNR_CONTENTS</code> view to skip any corruptions in the redo log file being analyzed and continue processing. This option works only when a block in the redo log file (and not the header of the redo log file) is corrupt. You should check the <code dir="ltr">INFO</code> column in the <code dir="ltr">V$LOGMNR_CONTENTS</code> view to determine the corrupt blocks skipped by LogMiner. When a corruption in the redo log file is skipped, the <code dir="ltr">OPERATION</code> column contains the value <code dir="ltr">CORRUPTED_BLOCKS</code>, and the <code dir="ltr">STATUS</code> column contains the value <code dir="ltr">1343.</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">DDL_DICT_TRACKING</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t5 r1c2-t5">
<p>If the LogMiner dictionary in use is a flat file or in the redo log files, LogMiner updates its internal dictionary if a DDL event occurs. This ensures that correct <code dir="ltr">SQL_REDO</code> and <code dir="ltr">SQL_UNDO</code> information is maintained for objects that are modified after the LogMiner internal dictionary is built. The database to which LogMiner is connected must be open.</p>
<p>This option cannot be used in conjunction with the <code dir="ltr">DICT_FROM_ONLINE_CATALOG</code> option and cannot be used when the LogMiner dictionary being used is one that was extracted to a flat file prior to Oracle9<span class="italic">i</span>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t5" headers="r1c1-t5">
<p><code dir="ltr">DICT_FROM_ONLINE_CATALOG</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t5 r1c2-t5">
<p>Directs LogMiner to use the current online database dictionary rather than a LogMiner dictionary contained in a flat file or in the redo log files being analyzed.</p>
<p>This option cannot be used in conjunction with the <code dir="ltr">DDL_DICT_TRACKING</code> option. The database to which LogMiner is connected must be the same one that generated the redo log files.</p>
<p>Expect to see a value of <code dir="ltr">2</code> in the <code dir="ltr">STATUS</code> column of the <code dir="ltr">V$LOGMNR_CONTENTS</code> view if the table definition in the database does not match the table definition in the redo log file.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t5" headers="r1c1-t5">
<p><code dir="ltr">DICT_FROM_REDO_LOGS</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t5 r1c2-t5">
<p>If set, LogMiner expects to find a LogMiner dictionary in the redo log files that were specified. The redo log files are specified with the <code dir="ltr">DBMS_LOGMNR.ADD_LOGFILE</code> procedure or with the <code dir="ltr">DBMS_LOGMNR.START_LOGMNR</code> procedure with the <code dir="ltr">CONTINUOUS_MINE</code> option.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t5" headers="r1c1-t5">
<p><code dir="ltr">NO_SQL_DELIMITER</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t5 r1c2-t5">
<p>If set, the SQL delimiter (a semicolon) is not placed at the end of reconstructed SQL statements. This is helpful for applications that open a cursor and then execute the reconstructed statements.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t5" headers="r1c1-t5">
<p><code dir="ltr">NO_ROWID_IN_STMT</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t5 r1c2-t5">
<p>If set, the <code dir="ltr">ROWID</code> clause is not included in the reconstructed SQL statements. The redo log file may already contain logically unique identifiers for modified rows if supplemental logging is enabled.</p>
<p>When using this option, you must be sure that supplemental logging was enabled in the source database at the appropriate level and that no duplicate rows exist in the tables of interest. LogMiner does not make any guarantee regarding the uniqueness of logical row identifiers.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t5" headers="r1c1-t5">
<p><code dir="ltr">PRINT_PRETTY_SQL</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t5 r1c2-t5">
<p>If set, LogMiner formats the reconstructed SQL statements for ease of reading. These reconstructed SQL statements are not executable.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t5" headers="r1c1-t5">
<p><code dir="ltr">CONTINUOUS_MINE</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t5 r1c2-t5">
<p>Directs LogMiner to automatically add redo log files, as needed, to find the data of interest. You only need to specify the first log to start mining, or just the starting SCN or date to indicate to LogMiner where to begin mining logs. You are not required to specify any redo log files explicitly. LogMiner automatically adds and mines the (archived and online) redo log files for the data of interest. This option requires that LogMiner is connected to the same database instance that is generating the redo log files. It also requires that the database be mounted and that archiving be enabled.</p>
<p>Beginning with Oracle Database release 10.1, the <code dir="ltr">CONTINUOUS_MINE</code> options is supported for use in an Oracle Real Application Clusters (Oracle RAC) environment.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t5" headers="r1c1-t5">
<p><code dir="ltr">STRING_LITERALS_IN_STMT</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t5 r1c2-t5">
<p>If set, SQL_REDO and SQL_UNDO use literals for numbers and datetime and interval column types.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>To specify more than one option, use a plus sign (+) between them. For example:</p>
<pre dir="ltr">EXECUTE DBMS_LOGMNR.START_LOGMNR(OPTIONS =&gt; -
   DBMS_LOGMNR.DDL_DICT_TRACKING + DBMS_LOGMNR.DICT_FROM_REDO_LOGS);
</pre></div>
<!-- class="refsect2" -->
<div id="ARPLS66790" class="refsect2"><a id="BHJHFAHC"></a>
<h3 class="refsect2">Views</h3>
<p>The <code dir="ltr">DBMS_LOGMNR</code> package uses the views listed in the section on accessing LogMiner operational information in views in <a class="olink SUTIL1594" href="../SUTIL/GUID-B3C964E4-F33E-48C0-951F-86AF3778DE39.htm#SUTIL1594"><span class="italic">Oracle Database Utilities</span></a>.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS66791" class="refsect2"><a id="i81144"></a>
<h3 class="refsect2">Operational Notes</h3>
<p>A <span class="bold">LogMiner</span> <span class="bold">session</span> begins with a call to <code dir="ltr">DBMS_LOGMNR.ADD_LOGFILE</code> or <code dir="ltr">DBMS_LOGMNR.START_LOGMNR</code> (the former if you plan to specify log files explicitly; the latter if you plan to use continuous mining). The session ends with a call to <code dir="ltr">DBMS_LOGMNR.END_LOGMNR</code>. Within a LogMiner session, you can specify the redo log files to be analyzed and the SCN or time range of interest; then you can issue SQL <code dir="ltr">SELECT</code> statements against the <code dir="ltr">V$LOGMNR_CONTENTS</code> view to retrieve the data of interest.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i80310"></a>
<div id="ARPLS480" class="refsect1">
<h2 class="refsect1">Summary of DBMS_LOGMNR Subprograms</h2>
<p>In a multitenant container database (CDB) some subprograms must be called from the root. There may be other differences as well. See the individual subprogram descriptions for details.</p>
<div id="ARPLS66792" class="tblformal">
<p class="titleintable"><a id="sthref5448"></a><a id="sthref5449"></a>Table 90-3 DBMS_LOGMNR Package Subprograms</p>
<table class="cellalignment4330" title="DBMS_LOGMNR Package Subprograms" summary="This table lists the DBMS_LOGMNR subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t6">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t6" headers="r1c1-t6">
<p><a href="#i77176">ADD_LOGFILE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c2-t6">
<p>Adds a redo log file to the existing or newly created list of redo log files for LogMiner to process, so that if a new list is created, this marks the beginning of a LogMiner session</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t6" headers="r1c1-t6">
<p><a href="#i80784">COLUMN_PRESENT Function</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c2-t6">
<p>Call this function for any row returned from the <code dir="ltr">V$LOGMNR_CONTENTS</code> view to determine if undo or redo column values exist for the column specified by the <code dir="ltr">column_name</code> input parameter to this function</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t6" headers="r1c1-t6">
<p><a href="#i80896">END_LOGMNR Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t6 r1c2-t6">
<p>Finishes a LogMiner session</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t6" headers="r1c1-t6">
<p><a href="#i80918">MINE_VALUE Function</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t6 r1c2-t6">
<p>Call this function for any row returned from the <code dir="ltr">V$LOGMNR_CONTENTS</code> view to retrieve the undo or redo column value of the column specified by the <code dir="ltr">column_name</code> input parameter to this function</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t6" headers="r1c1-t6">
<p><a href="#i77231">REMOVE_LOGFILE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t6 r1c2-t6">
<p>Removes a redo log file from the list of redo log files for LogMiner to process</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t6" headers="r1c1-t6">
<p><a href="#i77269">START_LOGMNR Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t6 r1c2-t6">
<p>Initializes the LogMiner utility and starts LogMiner (unless the session was already started with a call to <code dir="ltr">DBMS_LOGMNR.ADD_LOGFILE</code>)</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS66793" class="refsect2"><a id="i77176"></a>
<h3 class="refsect2">ADD_LOGFILE Procedure<a id="sthref5450"></a></h3>
<p>This procedure adds a file to an existing or newly created list of log files for LogMiner to process.</p>
<p>In a CDB, the <code dir="ltr">ADD_LOGFILE</code> procedure must be called from the root database. You must have the <code dir="ltr">LOGMINING</code> administrative privilege to use this procedure.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5451"></a>Syntax</p>
<pre dir="ltr">DBMS_LOGMNR.ADD_LOGFILE ( 
   LogFileName     IN VARCHAR2,
   options         IN BINARY_INTEGER default ADDFILE );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5452"></a>Parameters</p>
<div id="ARPLS66794" class="tblformal">
<p class="titleintable"><a id="sthref5453"></a><a id="sthref5454"></a>Table 90-4 ADD_LOGFILE Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_LOGFILE Procedure Parameters" summary="This table describes the parameters of the DBMS_LOGMNR.ADD_LOGFILE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t7">Parameter</th>
<th class="cellalignment4328" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">LogFileName</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t7 r1c2-t7">
<p>Specifies the name of the redo log file to add to the list of redo log files to be analyzed during this session.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">options</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t7 r1c2-t7">
<p>Does one of the following:</p>
<ul>
<li>
<p>Starts a new LogMiner session and a new list of redo log files for analysis (<code dir="ltr">DBMS_LOGMNR.NEW</code>)</p>
</li>
<li>
<p>Adds a file to an existing list of redo log files for analysis (<code dir="ltr">DBMS_LOGMNR.ADDFILE</code>)</p>
</li>
</ul>
<p>See <a href="#CCHCAJEE">Table 90-1, &#34;Constants for ADD_LOGFILE Options Flag&#34;</a>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5455"></a>Exceptions</p>
<div id="ARPLS66795" class="tblformal">
<p class="titleintable"><a id="sthref5456"></a><a id="sthref5457"></a>Table 90-5 ADD_LOGFILE Procedure Exceptions</p>
<table class="cellalignment4330" title="ADD_LOGFILE Procedure Exceptions" summary="This table describes exceptions raised by the DBMS_LOGMNR.ADD_LOGFILE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Exception</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">ORA-01284</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>Specified file cannot be opened.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">ORA-01287</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t8 r1c2-t8">
<p>Specified file is from a different database incarnation.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t8" headers="r1c1-t8">
<p><code dir="ltr">ORA-01289</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t8 r1c2-t8">
<p>Specified file has already been added to the list. Duplicate redo log files cannot be added.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t8" headers="r1c1-t8">
<p><code dir="ltr">ORA-01290</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t8 r1c2-t8">
<p>Specified file is not in the current list and therefore cannot be removed from the list.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t8" headers="r1c1-t8">
<p><code dir="ltr">ORA-01324</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t8 r1c2-t8">
<p>Specified file cannot be added to the list because there is a DB_ID mismatch.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5458"></a>Usage Notes</p>
<ul>
<li>
<p>Before querying the <code dir="ltr">V$LOGMNR_CONTENTS</code> view, you must make a successful call to the <code dir="ltr">DBMS_LOGMNR.START_LOGMNR</code> procedure (within the current LogMiner session).</p>
</li>
<li>
<p>Unless you specify the <code dir="ltr">CONTINUOUS_MINE</code> option, the LogMiner session must be set up with a list of redo log files to be analyzed. Use the <code dir="ltr">ADD_LOGFILE</code> procedure to specify the list of redo log files to analyze.</p>
</li>
<li>
<p>If you are not using the <code dir="ltr">CONTINUOUS_MINE</code> option and you want to analyze more than one redo log file, you must call the <code dir="ltr">ADD_LOGFILE</code> procedure separately for each redo log file. The redo log files do not need to be registered in any particular order.</p>
</li>
<li>
<p>Both archived and online redo log files can be mined.</p>
</li>
<li>
<p>After you have added the first redo log file to the list, each additional redo log file that you add to the list must be associated with the same database and database <code dir="ltr">RESETLOGS</code> <code dir="ltr">SCN</code> as the first redo log file. (The database <code dir="ltr">RESETLOGS</code> <code dir="ltr">SCN</code> uniquely identifies each execution of an <code dir="ltr">ALTER</code> <code dir="ltr">DATABASE</code> <code dir="ltr">OPEN</code> <code dir="ltr">RESETLOGS</code> statement. When the online redo logs are reset, Oracle creates a new and unique incarnation of the database.)</p>
</li>
<li>
<p>To analyze the redo log files from a different database (or a database incarnation with a different database <code dir="ltr">RESETLOGS SCN</code>) than that with which the current list of redo log files is associated, use the <code dir="ltr">END_LOGMNR</code> procedure to end the current LogMiner session, and then build a new list using the <code dir="ltr">ADD_LOGFILE</code> procedure.</p>
</li>
<li>
<p>LogMiner matches redo log files by the log sequence number. Thus, two redo log files with different names but with the same log sequence number will return the ORA-01289 exception. For instance, the online counterpart of an archived redo log file has a different name from the archived redo log file, but attempting to register it with LogMiner after registering the archived counterpart will result in the ORA-01289 exception being returned.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66796" class="refsect2"><a id="i80784"></a>
<h3 class="refsect2">COLUMN_PRESENT Function<a id="sthref5459"></a></h3>
<p>This function is designed to be used in conjunction with the <code dir="ltr">MINE_VALUE</code> function.</p>
<p>If the <code dir="ltr">MINE_VALUE</code> function returns a <code dir="ltr">NULL</code> value, it can mean either:</p>
<ul>
<li>
<p>The specified column is not present in the redo or undo portion of the data.</p>
</li>
<li>
<p>The specified column is present and has a <code dir="ltr">NULL</code> value.</p>
</li>
</ul>
<p>To distinguish between these two cases, use the <code dir="ltr">COLUMN_PRESENT</code> function, which returns a <code dir="ltr">1</code> if the column is present in the redo or undo portion of the data. Otherwise, it returns a <code dir="ltr">0</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5460"></a>Syntax</p>
<pre dir="ltr">DBMS_LOGMNR.COLUMN_PRESENT (
     sql_redo_undo      IN  RAW,
     column_name        IN  VARCHAR2 default &#39;&#39;) RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5461"></a>Parameters</p>
<div id="ARPLS66797" class="tblformal">
<p class="titleintable"><a id="sthref5462"></a><a id="sthref5463"></a>Table 90-6 COLUMN_PRESENT Function Parameters</p>
<table class="cellalignment4330" title="COLUMN_PRESENT Function Parameters" summary="This table describes the parameters of the DBMS_LOGMNR.COLUMN_PRESENT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t9">Parameter</th>
<th class="cellalignment4328" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">sql_redo_undo</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c2-t9">
<p>Specifies either the <code dir="ltr">REDO_VALUE</code> or the <code dir="ltr">UNDO_VALUE</code> column in the <code dir="ltr">V$LOGMNR_CONTENTS</code> view from which to extract data values. See the Usage Notes for more information.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t9" headers="r1c1-t9">
<p><code dir="ltr">column_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c2-t9">
<p>Specifies the fully qualified name (<code dir="ltr">schema.table.column</code>) of the column for which this function will return information.</p>
<p>In a CDB, the column name is specified as follows:</p>
<p><code dir="ltr">container_name:schema.table.column</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5464"></a>Return Values</p>
<p><a href="#CCHHCAHC">Table 90-7</a> describes the return values for the <code dir="ltr">COLUMN_PRESENT</code> function. The <code dir="ltr">COLUMN_PRESENT</code> function returns 1 if the self-describing record (the first parameter) contains the column specified in the second parameter. This can be used to determine the meaning of <code dir="ltr">NULL</code> values returned by the <code dir="ltr">DBMS_LOGMNR.MINE_VALUE</code> function.</p>
<div id="ARPLS66798" class="tblformal">
<p class="titleintable"><a id="sthref5465"></a><a id="CCHHCAHC"></a>Table 90-7 Return Values for COLUMN_PRESENT Function</p>
<table class="cellalignment4330" title="Return Values for COLUMN_PRESENT Function" summary="This table describes values returned by the COLUMN_PRESENT function." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t10">Return</th>
<th class="cellalignment4328" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t10 r1c2-t10">
<p>Specified column is not present in this row of <code dir="ltr">V$LOGMNR_CONTENTS</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t10" headers="r1c1-t10">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t10 r1c2-t10">
<p>Column is present in this row of <code dir="ltr">V$LOGMNR_CONTENTS</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5466"></a>Exceptions</p>
<div id="ARPLS66799" class="tblformal">
<p class="titleintable"><a id="sthref5467"></a><a id="sthref5468"></a>Table 90-8 COLUMN_PRESENT Function Exceptions</p>
<table class="cellalignment4330" title="COLUMN_PRESENT Function Exceptions" summary="This table describes exceptions raised by the DBMS_LOGMNR.COLUMN_PRESENT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t11">Exception</th>
<th class="cellalignment4328" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ORA-01323</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t11 r1c2-t11">
<p>Currently, a LogMiner dictionary is not associated with the LogMiner session. You must specify a LogMiner dictionary for the LogMiner session.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ORA-00904</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t11 r1c2-t11">
<p>Value specified for the <code dir="ltr">column_name</code> parameter is not a fully qualified column name.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5469"></a>Usage Notes</p>
<ul>
<li>
<p>To use the <code dir="ltr">COLUMN_PRESENT</code> function, you must have successfully started LogMiner.</p>
</li>
<li>
<p>The <code dir="ltr">COLUMN_PRESENT</code> function must be invoked in the context of a select operation on the <code dir="ltr">V$LOGMNR_CONTENTS</code> view.</p>
</li>
<li>
<p>The <code dir="ltr">COLUMN_PRESENT</code> function does not support <code dir="ltr">LONG</code>, LOB, <code dir="ltr">ADT</code>, or <code dir="ltr">COLLECTION</code> datatypes.</p>
</li>
<li>
<p>The value for the <code dir="ltr">sql_redo_undo</code> parameter depends on the operation performed and the data of interest:</p>
<ul>
<li>
<p>If an update operation was performed and you want to know what the value was prior to the update operation, specify <code dir="ltr">UNDO_VALUE</code>.</p>
</li>
<li>
<p>If an update operation was performed and you want to know what the value is after the update operation, specify <code dir="ltr">REDO_VALUE</code>.</p>
</li>
<li>
<p>If an insert operation was performed, typically you would specify <code dir="ltr">REDO_VALUE</code> (because the value of a column prior to an insert operation will always be <code dir="ltr">NULL</code>).</p>
</li>
<li>
<p>If a delete operation was performed, typically you would specify <code dir="ltr">UNDO_VALUE</code> (because the value of a column after a delete operation will always be <code dir="ltr">NULL</code>).</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66800" class="refsect2"><a id="i80896"></a>
<h3 class="refsect2">END_LOGMNR Procedure<a id="sthref5470"></a></h3>
<p>This procedure finishes a LogMiner session. Because this procedure performs cleanup operations that may not otherwise be done, you must use it to properly end a LogMiner session. This procedure is called automatically when you log out of a database session or when you call <code dir="ltr">DBMS_LOGMNR.ADD_LOGFILE</code> and specify the <code dir="ltr">NEW</code> option.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5471"></a>Syntax</p>
<pre dir="ltr">DBMS_LOGMNR.END_LOGMNR;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5472"></a>Exceptions</p>
<div id="ARPLS66801" class="tblformal">
<p class="titleintable"><a id="sthref5473"></a><a id="sthref5474"></a>Table 90-9 END_LOGMNR Procedure Exception</p>
<table class="cellalignment4330" title="END_LOGMNR Procedure Exception" summary="This table describes the exception raised by the DBMS_LOGMNR.END_LOGMNR subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t12">Exception</th>
<th class="cellalignment4328" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ORA-01307</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t12 r1c2-t12">
<p>No LogMiner session is currently active. The <code dir="ltr">END_LOGMNR</code> procedure was called without adding any log files or before the <code dir="ltr">START_LOGMNR</code> procedure was called</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66802" class="refsect2"><a id="i80918"></a>
<h3 class="refsect2">MINE_VALUE Function<a id="sthref5475"></a></h3>
<p>This function facilitates queries based on a column&#39;s data value. This function takes two arguments. The first one specifies whether to mine the redo (<code dir="ltr">REDO_VALUE</code>) or undo (<code dir="ltr">UNDO_VALUE</code>) portion of the data. The second argument is a string that specifies the fully qualified name of the column to be mined. The <code dir="ltr">MINE_VALUE</code> function always returns a string that can be converted back to the original datatype.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5476"></a>Syntax</p>
<pre dir="ltr">DBMS_LOGMNR.MINE_VALUE (
     sql_redo_undo      IN  RAW,
     column_name        IN  VARCHAR2 default &#39;&#39;) RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5477"></a>Parameters</p>
<div id="ARPLS66803" class="tblformal">
<p class="titleintable"><a id="sthref5478"></a><a id="sthref5479"></a>Table 90-10 MINE_VALUE Function Parameters</p>
<table class="cellalignment4330" title="MINE_VALUE Function Parameters" summary="This table describes the parameters of the DBMS_LOGMNR.MINE_VALUE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t13">Parameter</th>
<th class="cellalignment4328" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">sql_redo_undo</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t13 r1c2-t13">
<p>Specifies either the <code dir="ltr">REDO_VALUE</code> or the <code dir="ltr">UNDO_VALUE</code> column in the <code dir="ltr">V$LOGMNR_CONTENTS</code> view from which to extract data values. See the Usage Notes for more information.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">column_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t13 r1c2-t13">
<p>Specifies the fully qualified name (<code dir="ltr">schema.table.column</code>) of the column for which this function will return information.</p>
<p>In a CDB, the column name is specified as follows:</p>
<p><code dir="ltr">container_name:schema.table.column</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5480"></a>Return Values</p>
<div id="ARPLS66804" class="tblformal">
<p class="titleintable"><a id="sthref5481"></a><a id="sthref5482"></a>Table 90-11 Return Values for MINE_VALUE Function</p>
<table class="cellalignment4330" title="Return Values for MINE_VALUE Function" summary="This table describes values returned by the MINE_VALUE function." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t14">Return</th>
<th class="cellalignment4328" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">NULL</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t14 r1c2-t14">
<p>The column is not contained within the self-describing record, or the column value is <code dir="ltr">NULL</code>. To distinguish between the two different null possibilities, use the <code dir="ltr">DBMS_LOGMNR.COLUMN_PRESENT</code> function.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t14" headers="r1c1-t14">
<p><code dir="ltr">NON-NULL</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t14 r1c2-t14">
<p>The column is contained within the self-describing record; the value is returned in string format.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5483"></a>Exceptions</p>
<div id="ARPLS66805" class="tblformal">
<p class="titleintable"><a id="sthref5484"></a><a id="sthref5485"></a>Table 90-12 MINE_VALUE Function Exceptions</p>
<table class="cellalignment4330" title="MINE_VALUE Function Exceptions" summary="This table describes the exceptions raised by the DBMS_LOGMNR.MINE_VALUE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t15">Exception</th>
<th class="cellalignment4328" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t15" headers="r1c1-t15">
<p><code dir="ltr">ORA-01323</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t15 r1c2-t15">
<p>Invalid state. Currently, a LogMiner dictionary is not associated with the LogMiner session. You must specify a LogMiner dictionary for the LogMiner session.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t15" headers="r1c1-t15">
<p><code dir="ltr">ORA-00904</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t15 r1c2-t15">
<p>Invalid identifier. The value specified for the <code dir="ltr">column_name</code> parameter was not a fully qualified column name.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5486"></a>Usage Notes</p>
<ul>
<li>
<p>To use the <code dir="ltr">MINE_VALUE</code> function, you must have successfully started LogMiner.</p>
</li>
<li>
<p>The <code dir="ltr">MINE_VALUE</code> function must be invoked in the context of a select operation from the <code dir="ltr">V$LOGMNR_CONTENTS</code> view.</p>
</li>
<li>
<p>The <code dir="ltr">MINE_VALUE</code> function does not support <code dir="ltr">LONG</code>, LOB, <code dir="ltr">ADT</code>, or <code dir="ltr">COLLECTION</code> datatypes.</p>
</li>
<li>
<p>The value for the <code dir="ltr">sql_redo_undo</code> parameter depends on the operation performed and the data of interest:</p>
<ul>
<li>
<p>If an update operation was performed and you want to know what the value was prior to the update operation, specify <code dir="ltr">UNDO_VALUE</code>.</p>
</li>
<li>
<p>If an update operation was performed and you want to know what the value is after the update operation, specify <code dir="ltr">REDO_VALUE</code>.</p>
</li>
<li>
<p>If an insert operation was performed, typically you would specify <code dir="ltr">REDO_VALUE</code> (because the value of a column prior to an insert operation will always be null).</p>
</li>
<li>
<p>If a delete operation was performed, typically you would specify <code dir="ltr">UNDO_VALUE</code> (because the value of a column after a delete operation will always be null).</p>
</li>
</ul>
</li>
<li>
<p>If the <code dir="ltr">DBMS_LOGMNR.MINE_VALUE</code> function is used to get an <code dir="ltr">NCHAR</code> value that includes characters not found in the database character set, then those characters are returned as the replacement character (for example, an inverted question mark) of the database character set.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66806" class="refsect2"><a id="i77231"></a>
<h3 class="refsect2">REMOVE_LOGFILE Procedure<a id="sthref5487"></a></h3>
<p>This procedure removes a redo log file from an existing list of redo log files for LogMiner to process.</p>
<p>In a CDB, the <code dir="ltr">REMOVE_LOGFILE</code> procedure must be called from the root database. You must have the <code dir="ltr">LOGMINING</code> administrative privilege to use this procedure.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5488"></a>Syntax</p>
<pre dir="ltr">DBMS_LOGMNR.REMOVE_LOGFILE ( 
   LogFileName     IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5489"></a>Parameters</p>
<div id="ARPLS66807" class="tblformal">
<p class="titleintable"><a id="sthref5490"></a><a id="sthref5491"></a>Table 90-13 REMOVE_LOGFILE Procedure Parameters</p>
<table class="cellalignment4330" title="REMOVE_LOGFILE Procedure Parameters" summary="This table describes the parameters of the DBMS_LOGMNR.REMOVE_LOGFILE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t16">Parameter</th>
<th class="cellalignment4328" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">LogFileName</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t16 r1c2-t16">
<p>Specifies the name of the redo log file to be removed from the list of redo log files to be analyzed during this session.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5492"></a>Exceptions</p>
<div id="ARPLS66808" class="tblformal">
<p class="titleintable"><a id="sthref5493"></a><a id="sthref5494"></a>Table 90-14 REMOVE_LOGFILE Procedure Exception</p>
<table class="cellalignment4330" title="REMOVE_LOGFILE Procedure Exception" summary="This table describes exceptions raised by the DBMS_LOGMNR.REMOVE_LOGFILE procedure." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t17">Exception</th>
<th class="cellalignment4328" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ORA-01290</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t17 r1c2-t17">
<p>Cannot remove unlisted log file</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5495"></a>Usage Notes</p>
<ul>
<li>
<p>Before querying the <code dir="ltr">V$LOGMNR_CONTENTS</code> view, you must make a successful call to the <code dir="ltr">DBMS_LOGMNR.START_LOGMNR</code> procedure (within the current LogMiner session).</p>
</li>
<li>
<p>You can use this procedure to remove a redo log file from the list of redo log files for LogMiner to process if you know that redo log file does not contain any data of interest.</p>
</li>
<li>
<p>Multiple redo log files can be removed by calling this procedure repeatedly.</p>
</li>
<li>
<p>The redo log files do not need to be removed in any particular order.</p>
</li>
<li>
<p>To start a new list of redo log files for analysis, use the <code dir="ltr">END_LOGMNR</code> procedure to end the current LogMiner session, and then build a new list using the <code dir="ltr">ADD_LOGFILE</code> procedure.</p>
</li>
<li>
<p>Even if you remove all redo log files from the list, any subsequent calls you make to the <code dir="ltr">ADD_LOGFILE</code> procedure must match the database ID and <code dir="ltr">RESETLOGS</code> <code dir="ltr">SCN</code> of the removed redo log files. Therefore, to analyze the redo log files from a different database (or a database incarnation with a different database <code dir="ltr">RESETLOGS</code> <code dir="ltr">SCN</code>) than that with which the current list of redo log files is associated, use the <code dir="ltr">END_LOGMNR</code> procedure to end the current LogMiner session, and then build a new list using the <code dir="ltr">ADD_LOGFILE</code> procedure.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66809" class="refsect2"><a id="i77269"></a>
<h3 class="refsect2">START_LOGMNR Procedure<a id="sthref5496"></a></h3>
<p>This procedure starts LogMiner by loading the dictionary that LogMiner will use to translate internal schema object identifiers to names.</p>
<p>In a CDB, the <code dir="ltr">START_LOGMNR</code> procedure must be called from the root database. You must have the <code dir="ltr">LOGMINING</code> administrative privilege to use this procedure.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5497"></a>Syntax</p>
<pre dir="ltr">DBMS_LOGMNR.START_LOGMNR ( 
   startScn           IN NUMBER default 0,
   endScn             IN NUMBER default 0,
   startTime          IN DATE default &#39;01-jan-1988&#39;,
   endTime            IN DATE default &#39;31-dec-2110&#39;,
   DictFileName       IN VARCHAR2 default &#39;&#39;,
   Options            IN BINARY_INTEGER default 0 );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5498"></a>Parameters</p>
<div id="ARPLS66810" class="tblformal">
<p class="titleintable"><a id="sthref5499"></a><a id="sthref5500"></a>Table 90-15 START_LOGMNR Procedure Parameters</p>
<table class="cellalignment4330" title="START_LOGMNR Procedure Parameters" summary="This table describes the parameters of the DBMS_LOGMNR.START_LOGMNR subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t18">Parameter</th>
<th class="cellalignment4328" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t18" headers="r1c1-t18">
<p><code dir="ltr">startScn</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t18 r1c2-t18">
<p>Directs LogMiner to return only redo records with an SCN greater than or equal to the <code dir="ltr">startScn</code> specified. This fails if there is no redo log file containing the specified <code dir="ltr">startScn</code> value. (You can query the <code dir="ltr">FILENAME</code>, <code dir="ltr">LOW_SCN,</code> and <code dir="ltr">NEXT_SCN</code> columns in the <code dir="ltr">V$LOGMNR_LOGS</code> view for each redo log file to determine the range of SCN values contained in each redo log file.)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t18" headers="r1c1-t18">
<p><code dir="ltr">endScn</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t18 r1c2-t18">
<p>Directs LogMiner to return only redo records with an SCN less than or equal to the <code dir="ltr">endScn</code> specified. If you specify an <code dir="ltr">endScn</code> value that is beyond the value in any redo log file, then LogMiner uses the greatest endScn value in the redo log file that contains the most recent changes. (You can query the <code dir="ltr">FILENAME,</code> <code dir="ltr">LOW_SCN,</code> and <code dir="ltr">NEXT_SCN</code> columns in the <code dir="ltr">V$LOGMNR_LOGS</code> view for each redo log file to determine the range of SCN values contained in each redo log file.)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t18" headers="r1c1-t18">
<p><code dir="ltr">startTime</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t18 r1c2-t18">
<p>Directs LogMiner to return only redo records with a timestamp greater than or equal to the <code dir="ltr">startTime</code> specified. This fails if there is no redo log file containing the specified <code dir="ltr">startTime</code> value. (You can query the <code dir="ltr">FILENAME</code>, <code dir="ltr">LOW_TIME,</code> and <code dir="ltr">HIGH_TIME</code> columns in the <code dir="ltr">V$LOGMNR_LOGS</code> view for each redo log file to determine the range of time covered in each redo log file.)</p>
<p>This parameter is ignored if <code dir="ltr">startScn</code> is specified. See the Usage Notes for additional information.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t18" headers="r1c1-t18">
<p><code dir="ltr">endTime</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t18 r1c2-t18">
<p>Directs LogMiner to return only redo records with a timestamp less than or equal to the <code dir="ltr">endTime</code> specified. If you specify an <code dir="ltr">endTime</code> value that is beyond the value in any redo log file, then LogMiner will use the greatest <code dir="ltr">endTime</code> in the redo log file that contains the most recent changes. You can query the <code dir="ltr">FILENAME,</code> <code dir="ltr">LOW_TIME,</code> and <code dir="ltr">HIGH_TIME</code> columns in the V$LOGMNR_LOGS view for each redo log file to determine the range of time covered in each redo log file.)</p>
<p>This parameter is ignored if <code dir="ltr">endScn</code> is specified. See the Usage Notes for additional information.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t18" headers="r1c1-t18">
<p><code dir="ltr">DictFileName</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t18 r1c2-t18">
<p>Specifies the flat file that contains the LogMiner dictionary. It is used to reconstruct <code dir="ltr">SQL_REDO</code> and <code dir="ltr">SQL_UNDO</code> columns in <code dir="ltr">V$LOGMNR_CONTENTS</code>, as well as to fully translate <code dir="ltr">SEG_NAME</code>, <code dir="ltr">SEG_OWNER</code>, <code dir="ltr">SEG_TYPE_NAME,</code> <code dir="ltr">TABLE_NAME,</code> and <code dir="ltr">TABLE_SPACE</code> columns. The fully qualified path name for the LogMiner dictionary file must be specified. (This file must have been created previously through the <code dir="ltr">DBMS_LOGMNR_D</code>.<code dir="ltr">BUILD</code> procedure.)</p>
<p>You need to specify this parameter only if neither <code dir="ltr">DICT_FROM_REDO_LOGS</code> nor <code dir="ltr">DICT_FROM_ONLINE_CATALOG</code> is specified.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t18" headers="r1c1-t18">
<p><code dir="ltr">options</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t18 r1c2-t18">
<p>See <a href="#CCHDBIGB">Table 90-2, &#34;Constants for START_LOGMNR Options Flag&#34;</a>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5501"></a>Exceptions</p>
<div id="ARPLS66811" class="tblformal">
<p class="titleintable"><a id="sthref5502"></a><a id="sthref5503"></a>Table 90-16 START_LOGMNR Procedure Exceptions</p>
<table class="cellalignment4330" title="START_LOGMNR Procedure Exceptions" summary="This table describes exceptions raised by the START_LOGMNR procedure." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t19">Exception</th>
<th class="cellalignment4328" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01280</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t19 r1c2-t19">
<p>Internal error encountered.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01281</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t19 r1c2-t19">
<p><code dir="ltr">startScn</code> or <code dir="ltr">endScn</code> parameter value is not a valid SCN, or <code dir="ltr">endScn</code> is less than <code dir="ltr">startScn</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01282</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t19 r1c2-t19">
<p>value for the <code dir="ltr">startTime</code> parameter was greater than the value specified for the <code dir="ltr">endTime</code> parameter, or there was no redo log file that was compatible with the date range specified with the <code dir="ltr">startTime</code> and <code dir="ltr">endTime</code> parameters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01283</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t19 r1c2-t19">
<p>Options parameter specified is invalid.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01284</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t19 r1c2-t19">
<p>LogMiner dictionary file specified in the <code dir="ltr">DictFileName</code> parameter has a full path length greater than 256 characters, or the file cannot be opened.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01285</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t19 r1c2-t19">
<p>Error reading specified file.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01291</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t19 r1c2-t19">
<p>Redo log files that are needed to satisfy the user&#39;s requested SCN or time range are missing.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01292</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t19 r1c2-t19">
<p>No log file has been specified for the current LogMiner session.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01293</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t19 r1c2-t19">
<p>Mounted database required for specified LogMiner options.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01294</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t19 r1c2-t19">
<p>Error occurred while processing information in the specified dictionary file, possible corruption.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01295</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t19 r1c2-t19">
<p>Specified LogMiner dictionary does not correspond to the database that produced the log files being analyzed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01296</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t19 r1c2-t19">
<p>Character set mismatch between specified LogMiner dictionary and log files.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01297</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t19 r1c2-t19">
<p>Redo version mismatch between LogMiner dictionary and log files.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01299</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t19 r1c2-t19">
<p>Specified LogMiner dictionary corresponds to a different database incarnation.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ORA-01300</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t19 r1c2-t19">
<p>Writable database required for specified LogMiner options.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5504"></a>Usage Notes</p>
<ul>
<li>
<p>LogMiner can use a dictionary that you previously extracted to the redo log files or to a flat file, or you can specify that LogMiner use the online catalog if LogMiner is mining data from the source system. See <a class="olink SUTIL" href="../SUTIL/toc.htm"><span class="italic">Oracle Database Utilities</span></a> and <a href="d_logmnrd.htm#BABECAHB">Chapter 91, &#34;DBMS_LOGMNR_D&#34;</a> in this manual for more information about the LogMiner dictionary.</p>
</li>
<li>
<p>After executing the <code dir="ltr">START_LOGMNR</code> procedure, you can query the following views:</p>
<ul>
<li>
<p><code dir="ltr">V$LOGMNR_CONTENTS</code> - contains history of information in redo log files</p>
</li>
<li>
<p><code dir="ltr">V$LOGMNR_DICTIONARY</code> - contains current information about the LogMiner dictionary file extracted to a flat file</p>
</li>
<li>
<p><code dir="ltr">V$LOGMNR_PARAMETERS</code> - contains information about the LogMiner session</p>
</li>
</ul>
<p>(You can query the <code dir="ltr">V$LOGMNR_LOGS</code> view after a redo log file list has been added to the list of files that LogMiner is to mine.)</p>
</li>
<li>
<p>Parameters and options are not persistent across calls to <code dir="ltr">DBMS_LOGMNR.START_LOGMNR</code>. You must specify all desired parameters and options (including SCN and time ranges) each time you call <code dir="ltr">DBMS_LOGMNR.START_LOGMNR</code></p>
</li>
<li>
<p>Be aware that specifying redo log files using a timestamp is not precise.</p>
</li>
<li>
<p>The <code dir="ltr">CONTINUOUS_MINE</code> option directs LogMiner to automatically add redo log files, as needed, to find the data of interest. You need to specify only the first log to start mining, or just the starting SCN or date to indicate to LogMiner where to begin mining logs. Keep the following in mind when using the <code dir="ltr">CONTINUOUS_MINE</code> option:</p>
<ul>
<li>
<p>The database control file will hold information about a limited number of archived redo log files, although the number of entries can be quite large. Query the <code dir="ltr">V$ARCHIVED_LOGS</code> view to determine which redo log file entries will be found by LogMiner.</p>
<p>Even if an entry is listed in the database control file (and the <code dir="ltr">V$ARCHIVED_LOGS</code> view), the archived redo log file may not be accessible by LogMiner for various reasons. For example, the archived redo log file may have been deleted or moved from its location (maybe because of a backup operation to tape), or the directory where it resides may not be not available.</p>
</li>
<li>
<p>If you specify the <code dir="ltr">CONTINUOUS_MINE</code> option and an ending time or SCN that will occur in the future (or you do not specify an end time or SCN), a query of the <code dir="ltr">V$LOGMNR_CONTENTS</code> view will not finish until the database has generated redo log files beyond the specified time or SCN. In this scenario, LogMiner will automatically add archived redo log files to the LogMiner redo log file list as they are generated. In addition, in this scenario only, LogMiner may automatically remove redo log files from the list to keep it at 50 processed redo files. This is to save PGA memory as LogMiner automatically adds redo log files to the list. If LogMiner did not perform automated removal, memory could eventually be exhausted.</p>
</li>
<li>
<p>LogMiner can mine online redo logs. However, if the <code dir="ltr">CONTINUOUS_MINE</code> option is not specified, it is possible that the database is writing to the online redo log file at the same time that LogMiner is reading the online redo log file. If a log switch occurs while LogMiner is reading an online redo log file, the database will overwrite what LogMiner is attempting to read. The data that LogMiner returns if the file it is trying to read gets overwritten by the database is unpredictable.</p>
</li>
</ul>
</li>
<li>
<p>Keep the following in mind regarding starting and ending times or SCN ranges:</p>
<ul>
<li>
<p>If you specify neither a <code dir="ltr">startTime</code> nor a <code dir="ltr">startScn</code> parameter, LogMiner will set the <code dir="ltr">startScn</code> parameter to use the lowest SCN value from the redo log file that contains the oldest changes.</p>
</li>
<li>
<p>If you specify both time and SCN values, LogMiner uses the SCN value or values and ignores the time values.</p>
</li>
<li>
<p>If you specify starting and ending time or SCN values and they are found in the LogMiner redo log file list, then LogMiner mines the logs indicated by those values.</p>
</li>
<li>
<p>If you specify starting and ending times or SCN values that are not in the LogMiner redo log file list, and you specify <code dir="ltr">DBMS_LOGMNR.START_LOGMNR</code> without the <code dir="ltr">CONTINUOUS_MINE</code> option, and you specify:</p>
<ul>
<li>
<p><code dir="ltr">0</code> for the <code dir="ltr">startTime</code> or <code dir="ltr">startScn</code> value, then the lowest SCN in the LogMiner redo log file list will be used as the <code dir="ltr">startScn</code></p>
</li>
<li>
<p>A nonzero number for the <code dir="ltr">startTime</code> or <code dir="ltr">startScn</code> value, then an error is returned</p>
</li>
<li>
<p><code dir="ltr">0</code> or a nonzero number for the <code dir="ltr">endTime</code> or <code dir="ltr">endScn</code> value, then the highest SCN in the LogMiner redo log file list will be used as the <code dir="ltr">endScn</code></p>
</li>
</ul>
</li>
<li>
<p>If you specify starting and ending times or SCN values and they are not found in the LogMiner redo log file list, and you specify <code dir="ltr">DBMS_LOGMNR.START_LOGMNR</code> with the <code dir="ltr">CONTINUOUS_MINE</code> option, and you specify:</p>
<ul>
<li>
<p><code dir="ltr">0</code> for the <code dir="ltr">startTime</code> or <code dir="ltr">startScn</code> value, then an error is returned.</p>
</li>
<li>
<p>A <code dir="ltr">startTime</code> or <code dir="ltr">startScn</code> value that is greater than any value in the database&#39;s archived redo log files, then LogMiner starts mining in the online redo log file. LogMiner will continue to process the online redo log file until it finds a change at, or beyond, the requested starting point before it returns rows from the <code dir="ltr">V$LOGMNR_CONTENTS</code> view.</p>
</li>
<li>
<p>An <code dir="ltr">endTime</code> or <code dir="ltr">endScn</code> parameter value that indicates a time or SCN in the future, then LogMiner includes the online redo log files when it mines. When you query the <code dir="ltr">V$LOGMNR_CONTENTS</code> view, rows will be returned from this view as changes are made to the database, and will not stop until LogMiner sees a change beyond the requested ending point.</p>
</li>
<li>
<p><code dir="ltr">0</code> for the <code dir="ltr">endTime</code> or <code dir="ltr">endScn</code> parameter value, then LogMiner includes the online redo log files when it mines. When you query the <code dir="ltr">V$LOGMNR_CONTENTS</code> view, rows will be returned from this view as changes are made to the database, and will not stop until you enter CTL+C or you terminate the PL/SQL cursor.</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_lock.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_logmnrd.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>