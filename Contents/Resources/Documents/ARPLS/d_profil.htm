<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2317"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_PROFILER"></a><title>DBMS_PROFILER</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:28Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_priv_prof.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_prop_a.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">120/290</span> <!-- End Header -->
<div id="ARPLS039" class="chapter"><a id="sthref7151"></a>
<h1 class="chapter"><span class="secnum">116</span> DBMS_PROFILER</h1>
<p>The <a id="sthref7152"></a><code dir="ltr">DBMS_PROFILER</code> package provides an interface to profile existing PL/SQL applications and identify performance bottlenecks. You can then collect and persistently store the PL/SQL profiler data.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BJEFDBBC">Using DBMS_PROFILER</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Operational Notes</p>
</li>
<li>
<p>Exceptions</p>
</li>
</ul>
</li>
<li>
<p><a href="#i997087">Summary of DBMS_PROFILER Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="BJEFDBBC"></a>
<div id="ARPLS67460" class="refsect1">
<h2 class="refsect1">Using DBMS_PROFILER</h2>
<ul>
<li>
<p><a href="#i999476">Overview</a></p>
</li>
<li>
<p><a href="#i999855">Security Model</a></p>
</li>
<li>
<p><a href="#i999870">Operational Notes</a></p>
</li>
<li>
<p><a href="#i999871">Exceptions</a></p>
</li>
</ul>
<div id="ARPLS67461" class="refsect2"><a id="i999476"></a>
<h3 class="refsect2">Overview</h3>
<p>This package enables the collection of profiler (performance) data for performance improvement or for determining code coverage for PL/SQL applications. Application developers can use code coverage data to focus their incremental testing efforts.</p>
<p>With this interface, you can generate profiling information for all named library units that are executed in a session. The profiler gathers information at the PL/SQL virtual machine level. This information includes the total number of times each line has been executed, the total amount of time that has been spent executing that line, and the minimum and maximum times that have been spent on a particular execution of that line.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
It is possible to infer the code coverage figures for PL/SQL units for which data has been collected.</div>
<p>The profiling information is stored in database tables. This enables querying on the data: you can build customizable reports (summary reports, hottest lines, code coverage data, and so on. And you can analyze the data.</p>
<p>The <code dir="ltr">PROFTAB.SQL</code> script creates tables with the columns, datatypes, and definitions as shown in <a href="#BJEGFHGE">Table 116-1</a>, <a href="#BJEIBAGI">Table 116-2</a>, and <a href="#BJEJFCHI">Table 116-3</a>.</p>
<div id="ARPLS67462" class="tblformal">
<p class="titleintable"><a id="sthref7153"></a><a id="BJEGFHGE"></a>Table 116-1 Columns in Table PLSQL_PROFILER_RUNS</p>
<table class="cellalignment4330" title="Columns in Table PLSQL_PROFILER_RUNS" summary="This table describesColumns in Table PLSQL_PROFILER_RUNS." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t3">Column</th>
<th class="cellalignment4328" id="r1c2-t3">Datatype</th>
<th class="cellalignment4328" id="r1c3-t3">Definition</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">runid</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c2-t3">
<p><code dir="ltr">NUMBER PRIMARY KEY</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c3-t3">
<p>Unique run identifier from plsql_profiler_runnumber</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">related_run</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c2-t3">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c3-t3">
<p>Runid of related run (for client/server correlation)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">run_owner</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(32),</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c3-t3">
<p>User who started run</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t3" headers="r1c1-t3">
<p><code dir="ltr">run_date</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c2-t3">
<p><code dir="ltr">DATE</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c3-t3">
<p>Start time of run</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t3" headers="r1c1-t3">
<p><code dir="ltr">run_comment</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(2047)</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c3-t3">
<p>User provided comment for this run</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t3" headers="r1c1-t3">
<p><code dir="ltr">run_total_time</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t3 r1c2-t3">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t3 r1c3-t3">
<p>Elapsed time for this run in nanoseconds</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t3" headers="r1c1-t3">
<p><code dir="ltr">run_system_info</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(2047)</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t3 r1c3-t3">
<p>Currently unused</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t3" headers="r1c1-t3">
<p><code dir="ltr">run_comment1</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(2047)</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t3 r1c3-t3">
<p>Additional comment</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t3" headers="r1c1-t3">
<p><code dir="ltr">spare1</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(256)</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t3 r1c3-t3">
<p>Unused</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS67463" class="tblformal">
<p class="titleintable"><a id="sthref7154"></a><a id="BJEIBAGI"></a>Table 116-2 Columns in Table PLSQL_PROFILER_UNITS</p>
<table class="cellalignment4330" title="Columns in Table PLSQL_PROFILER_UNITS" summary="This table describes Columns in Table PLSQL_PROFILER_UNITS." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Column</th>
<th class="cellalignment4328" id="r1c2-t4">Datatype</th>
<th class="cellalignment4328" id="r1c3-t4">Definition</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">runid</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c3-t4">
<p>Primary key, references plsql_profiler_runs,</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">unit_number</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c3-t4">
<p>Primary key, internally generated library unit #</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t4" headers="r1c1-t4">
<p><code dir="ltr">unit_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c2-t4">
<p><code dir="ltr">VARCHAR2(32)</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c3-t4">
<p>Library unit type</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t4" headers="r1c1-t4">
<p><code dir="ltr">unit_owner</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c2-t4">
<p><code dir="ltr">VARCHAR2(32)</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c3-t4">
<p>Library unit owner name</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t4" headers="r1c1-t4">
<p><code dir="ltr">unit_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t4 r1c2-t4">
<p><code dir="ltr">VARCHAR2(32)</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t4 r1c3-t4">
<p>Library unit name timestamp on library unit</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t4" headers="r1c1-t4">
<p><code dir="ltr">unit_timestamp</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t4 r1c2-t4">
<p><code dir="ltr">DATE</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t4 r1c3-t4">
<p>In the future will be used to detect changes to unit between runs</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t4" headers="r1c1-t4">
<p><code dir="ltr">total_time</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t4 r1c2-t4">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t4 r1c3-t4">
<p>Total time spent in this unit in nanoseconds. The profiler does not set this field, but it is provided for the convenience of analysis tools.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t4" headers="r1c1-t4">
<p><code dir="ltr">spare1</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t4 r1c2-t4">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t4 r1c3-t4">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t4" headers="r1c1-t4">
<p><code dir="ltr">spare2</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t4 r1c2-t4">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t4 r1c3-t4">
<p>Unused</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS67464" class="tblformal">
<p class="titleintable"><a id="sthref7155"></a><a id="BJEJFCHI"></a>Table 116-3 Columns in Table PLSQL_PROFILER_DATA</p>
<table class="cellalignment4330" title="Columns in Table PLSQL_PROFILER_DATA" summary="This table describes Columns in Table PLSQL_PROFILER_DATA." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5">Column</th>
<th class="cellalignment4328" id="r1c2-t5">Datatype</th>
<th class="cellalignment4328" id="r1c3-t5">Definition</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">runid</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c3-t5">
<p>Primary key, unique (generated) run identifier</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">unit_number</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c3-t5">
<p>Primary key, internally generated library unit number</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">line#</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t5 r1c3-t5">
<p>Primary key, not null, line number in unit</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t5" headers="r1c1-t5">
<p><code dir="ltr">total_occur</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t5 r1c3-t5">
<p>Number of times line was executed</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t5" headers="r1c1-t5">
<p><code dir="ltr">total_time</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t5 r1c3-t5">
<p>Total time spent executing line in nanoseconds</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t5" headers="r1c1-t5">
<p><code dir="ltr">min_time</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t5 r1c3-t5">
<p>Minimum execution time for this line in nanoseconds</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t5" headers="r1c1-t5">
<p><code dir="ltr">max_time</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t5 r1c3-t5">
<p>Maximum execution time for this line in nanoseconds</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t5" headers="r1c1-t5">
<p><code dir="ltr">spare1</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t5 r1c3-t5">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t5" headers="r1c1-t5">
<p><code dir="ltr">spare2</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t5 r1c3-t5">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t5" headers="r1c1-t5">
<p><code dir="ltr">spare3</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t5 r1c3-t5">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t5" headers="r1c1-t5">
<p><code dir="ltr">spare4</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t5 r1c2-t5">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t5 r1c3-t5">
<p>Unused</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>With Oracle database version 8.x, a sample textual report writer(profrep.sql) is provided with the PL/SQL demo scripts.</p>
<p>Note that prior to Oracle Database 10<span class="italic">g</span>, the <code dir="ltr">DBMS_PROFILER</code> package was not automatically loaded when the database was created, and the Oracle-supplied <code dir="ltr">PROFLOAD.SQL</code> script was used to create it. In 10<span class="italic">g</span> and beyond, the <code dir="ltr">DBMS_PROFILER</code> package is loaded automatically when the database is created, and <code dir="ltr">PROFLOAD.SQL</code> is no longer needed.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67465" class="refsect2"><a id="i999855"></a>
<h3 class="refsect2">Security Model</h3>
<p>The profiler only gathers data for units for which a user has <code dir="ltr">CREATE</code> privilege; you cannot use the package to profile units for which <code dir="ltr">EXECUTE ONLY</code> access has been granted. In general, if a user can debug a unit, the same user can profile it. However, a unit can be profiled whether or not it has been compiled <code dir="ltr">DEBUG.</code> Oracle advises that modules that are being profiled should be compiled <code dir="ltr">DEBUG,</code> since this provides additional information about the unit in the database.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
<code dir="ltr">DBMS_PROFILER</code> treats any program unit that is compiled in <code dir="ltr">NATIVE</code> mode as if you do not have <code dir="ltr">CREATE</code> privilege, that is, you will not get any output.</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67466" class="refsect2"><a id="i999870"></a>
<h3 class="refsect2">Operational Notes</h3>
<ul>
<li>
<p><a href="#i999809">Typical Run</a></p>
</li>
<li>
<p><a href="#i999827">Two Methods of Exception Generation</a></p>
</li>
</ul>
<div id="ARPLS67467" class="refsect3"><a id="i999809"></a>
<h4 class="refsect3">Typical Run</h4>
<p>Improving application performance is an iterative process. Each iteration involves the following steps:</p>
<ol>
<li>
<p>Running the application with one or more benchmark tests with profiler data collection enabled.</p>
</li>
<li>
<p>Analyzing the profiler data and identifying performance problems.</p>
</li>
<li>
<p>Fixing the problems.</p>
</li>
</ol>
<p>The PL/SQL profiler supports this process using the concept of a <span class="italic">&#34;run&#34;.</span> A run involves running the application through benchmark tests with profiler data collection enabled. You can control the beginning and the ending of a run by calling the <code dir="ltr">START_PROFILER</code> and <code dir="ltr">STOP_PROFILER</code> functions.</p>
<p>The user must first create database tables in the profiler user&#39;s schema to collect the data. The <code dir="ltr">PROFTAB</code>.<code dir="ltr">SQL</code> script creates the tables and other data structures required for persistently storing the profiler data.</p>
<p>Note that running <code dir="ltr">PROFTAB.SQL</code> drops the current tables. The <code dir="ltr">PROFTAB.SQL</code> script is in the <code dir="ltr">RDBMS/ADMIN</code> directory. Some PL/SQL operations, such as the first execution of a PL/SQL unit, may involve I/O to catalog tables to load the byte code for the PL/SQL unit being executed. Also, it may take some time executing package initialization code the first time a package procedure or function is called.</p>
<p>To avoid timing this overhead, &#34;<span class="italic">warm</span> <span class="italic">up&#34;</span> the database before collecting profile data. To do this, run the application once without gathering profiler data.</p>
<p>You can allow profiling across all users of a system, for example, to profile all users of a package, independent of who is using it. In such cases, the <code dir="ltr">SYSADMIN</code> should use a modified <code dir="ltr">PROFTAB.SQL</code> script which:</p>
<ul>
<li>
<p>Creates the profiler tables and sequence</p>
</li>
<li>
<p>Grants <code dir="ltr">SELECT</code>/<code dir="ltr">INSERT</code>/<code dir="ltr">UPDATE</code> on those tables and sequence to all users</p>
</li>
<li>
<p>Defines public synonyms for the tables and sequence</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do not alter the actual fields of the tables.</div>
</li>
</ul>
<p>A typical run then involves:</p>
<ul>
<li>
<p>Starting profiler data collection in the run.</p>
</li>
<li>
<p>Executing PL/SQL code for which profiler and code coverage data is required.</p>
</li>
<li>
<p>Stopping profiler data collection, which writes the collected data for the run into database tables</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The collected profiler data is not automatically stored when the user disconnects. You must issue an explicit call to the <code dir="ltr">FLUSH_DATA</code> or the <code dir="ltr">STOP_PROFILER</code> function to store the data at the end of the session. Stopping data collection stores the collected data.</div>
</li>
</ul>
<p>As the application executes, profiler data is collected in memory data structures that last for the duration of the run. You can call the <code dir="ltr">FLUSH_DATA</code> function at intermediate points during the run to get incremental data and to free memory for allocated profiler data structures. Flushing the collected data involves storing collected data in the database tables created earlier.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i999978">&#34;FLUSH_DATA Function and Procedure&#34;</a>.</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS75018" class="refsect3"><a id="sthref7156"></a>
<h4 class="refsect3">Interpreting Output</h4>
<p>The table <code dir="ltr">plsql_profiler_data</code> contains one row for each line of the source unit for which code was generated. The line# value specifies which source line. If the row exists, and the total_occur value in that row is &gt; 0, some code associated with that line was executed. If the row exists, and total_occur value is 0, no code associated with that line was executed. If the row doesn&#39;t exist in the table, no code was generated for that line, and therefore it should not be mentioned in reports</p>
<p>If the source of a single statement is on a single line, any code generated for that statement will be attributed to that line number. (In some cases, such as a simple declaration, or because of optimization, no code will be needed). To get coverage information, units should be compiled with <code dir="ltr">PLSQL_OPTIMIZE_LEVEL=1</code>.</p>
<p>If a statement spans multiple lines, any code generated for that statement will be attributed to some line in the range, but it is not guaranteed that every line in the range will have code attributed to it. In such a case there will be gaps in the set of line# values. In particular, multi-line SQL-related statements may appear to be on a single line (usually the first). This is because PL/SQL passes the processed text of the cursor to the SQL engine; therefore, as far as PL/SQL is concerned, the entire SQL statement is a single indivisible operation.</p>
<p>When multiple statements are on the same line, the profiler will combine the occurrences for each statement. This may be confusing if a line has embedded control flow. For example, if <code dir="ltr">&#39;then ...&#39;</code> and <code dir="ltr">&#39;else ...&#39;</code> are on the same line, it will not be possible to determine whether the <code dir="ltr">&#39;then&#39;</code> or the <code dir="ltr">&#39;else&#39;</code> was taken.</p>
<p>In general, profiler and coverage reports are most easily interpreted if each statement is on its own line.</p>
</div>
<!-- class="refsect3" -->
<div id="ARPLS67468" class="refsect3"><a id="i999827"></a>
<h4 class="refsect3">Two Methods of Exception Generation</h4>
<p>Each routine in this package has two versions that allow you to determine how errors are reported.</p>
<ul>
<li>
<p>A function that returns success/failure as a status value and will never raise an exception</p>
</li>
<li>
<p>A procedure that returns normally if it succeeds and raises an exception if it fails</p>
</li>
</ul>
<p>In each case, the parameters of the function and procedure are identical. Only the method by which errors are reported differs. If there is an error, there is a correspondence between the error codes that the functions return, and the exceptions that the procedures raise.</p>
<p>To avoid redundancy, the following section only provides details about the functional form.</p>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67469" class="refsect2"><a id="i999871"></a>
<h3 class="refsect2">Exceptions</h3>
<div id="ARPLS67470" class="tblformal">
<p class="titleintable"><a id="sthref7157"></a><a id="sthref7158"></a>Table 116-4 DBMS_PROFILER Exceptions</p>
<table class="cellalignment4330" title="DBMS_PROFILER Exceptions" summary="This table describes the Exceptions raised by the DBMS_PROFILER subprograms." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t10">Exception</th>
<th class="cellalignment4328" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">version_mismatch</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t10 r1c2-t10">
<p>Corresponds to error_version.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t10" headers="r1c1-t10">
<p><code dir="ltr">profiler_error</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t10 r1c2-t10">
<p>Corresponds to either &#34;error_param&#34; or &#34;error_io&#34;.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>A <code dir="ltr">0</code> return value from any function denotes successful completion; a nonzero return value denotes an error condition. The possible errors are as follows:</p>
<ul>
<li>
<p>&#39;A subprogram was called with an incorrect parameter.&#39;</p>
</li>
</ul>
<pre dir="ltr">    error_param constant binary_integer := 1; 
 
</pre>
<ul>
<li>
<p>&#39;Data flush operation failed. Check whether the profiler tables have been created, are accessible, and that there is adequate space.&#39;</p>
</li>
</ul>
<pre dir="ltr">    error_io    constant binary_integer := 2; 
 
</pre>
<ul>
<li>
<p>There is a mismatch between package and database implementation. Oracle returns this error if an incorrect version of the <code dir="ltr">DBMS_PROFILER</code> package is installed, and if the version of the profiler package cannot work with this database version. The only recovery is to install the correct version of the package.</p>
</li>
</ul>
<pre dir="ltr">    error_version constant binary_integer := -1; 
</pre></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i997087"></a>
<div id="ARPLS67471" class="refsect1">
<h2 class="refsect1">Summary of DBMS_PROFILER Subprograms</h2>
<div id="ARPLS67472" class="tblformal">
<p class="titleintable"><a id="sthref7159"></a><a id="sthref7160"></a>Table 116-5 DBMS_PROFILER Package Subprograms</p>
<table class="cellalignment4330" title="DBMS_PROFILER Package Subprograms" summary="This table lists the DBMS_PROFILER subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t11">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t11" headers="r1c1-t11">
<p><a href="#i999978">FLUSH_DATA Function and Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t11 r1c2-t11">
<p>Flushes profiler data collected in the user&#39;s session</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t11" headers="r1c1-t11">
<p><a href="#i999998">GET_VERSION Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t11 r1c2-t11">
<p>Gets the version of this API</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t11" headers="r1c1-t11">
<p><a href="#i1000064">INTERNAL_VERSION_CHECK Function</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t11 r1c2-t11">
<p>Verifies that this version of the <code dir="ltr">DBMS_PROFILER</code> package can work with the implementation in the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t11" headers="r1c1-t11">
<p><a href="#i1000101">PAUSE_PROFILER Function and Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t11 r1c2-t11">
<p>Pauses profiler data collection</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t11" headers="r1c1-t11">
<p><a href="#i1000092">RESUME_PROFILER Function and Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t11 r1c2-t11">
<p>Resumes profiler data collection</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t11" headers="r1c1-t11">
<p><a href="#i1000047">START_PROFILER Functions and Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t11 r1c2-t11">
<p>Starts profiler data collection in the user&#39;s session</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t11" headers="r1c1-t11">
<p><a href="#i997210">STOP_PROFILER Function and Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t11 r1c2-t11">
<p>Stops profiler data collection in the user&#39;s session</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS67473" class="refsect2"><a id="i999978"></a>
<h3 class="refsect2"><a id="sthref7161"></a>FLUSH_DATA Function and Procedure</h3>
<p>This function flushes profiler data collected in the user&#39;s session. The data is flushed to database tables, which are expected to preexist.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Use the <code dir="ltr">PROFTAB</code>.<code dir="ltr">SQL</code> script to create the tables and other data structures required for persistently storing the profiler data.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7162"></a>Syntax</p>
<pre dir="ltr">DBMS_PROFILER.FLUSH_DATA 
  RETURN BINARY_INTEGER;

DBMS_PROFILER.FLUSH_DATA;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67474" class="refsect2"><a id="i999998"></a>
<h3 class="refsect2"><a id="sthref7163"></a>GET_VERSION Procedure</h3>
<p>This procedure gets the version of this API.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7164"></a>Syntax</p>
<pre dir="ltr">DBMS_PROFILER.GET_VERSION ( 
   major  OUT BINARY_INTEGER, 
   minor  OUT BINARY_INTEGER); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7165"></a>Parameters</p>
<div id="ARPLS67475" class="tblformal">
<p class="titleintable"><a id="sthref7166"></a><a id="sthref7167"></a>Table 116-6 GET_VERSION Procedure Parameters</p>
<table class="cellalignment4330" title="GET_VERSION Procedure Parameters" summary="This table describes Parameters used by the DBMS_PROFILER.GET_VERSION subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t13">Parameter</th>
<th class="cellalignment4328" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">major</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t13 r1c2-t13">
<p>Major version of <code dir="ltr">DBMS_PROFILER</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">minor</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t13 r1c2-t13">
<p>Minor version of <code dir="ltr">DBMS_PROFILER</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67476" class="refsect2"><a id="i1000064"></a>
<h3 class="refsect2"><a id="sthref7168"></a>INTERNAL_VERSION_CHECK Function</h3>
<p>This function verifies that this version of the <code dir="ltr">DBMS_PROFILER</code> package can work with the implementation in the database.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7169"></a>Syntax</p>
<pre dir="ltr">DBMS_PROFILER.INTERNAL_VERSION_CHECK 
  RETURN BINARY_INTEGER; 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67477" class="refsect2"><a id="i1000101"></a>
<h3 class="refsect2"><a id="sthref7170"></a>PAUSE_PROFILER Function and Procedure</h3>
<p>This function pauses profiler data collection.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7171"></a>Syntax</p>
<pre dir="ltr">DBMS_PROFILER.PAUSE_PROFILER 
  RETURN BINARY_INTEGER; 

DBMS_PROFILER.PAUSE_PROFILER; 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67478" class="refsect2"><a id="i1000092"></a>
<h3 class="refsect2"><a id="sthref7172"></a>RESUME_PROFILER Function and Procedure</h3>
<pre dir="ltr">This function resumes profiler data collection. 
</pre>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7173"></a>Syntax</p>
<pre dir="ltr">DBMS_PROFILER.RESUME_PROFILER 
  RETURN BINARY_INTEGER; 

DBMS_PROFILER.RESUME_PROFILER; 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67479" class="refsect2"><a id="i1000047"></a>
<h3 class="refsect2"><a id="sthref7174"></a>START_PROFILER Functions and Procedures</h3>
<p>This function starts profiler data collection in the user&#39;s session.</p>
<p>There are two overloaded forms of the <code dir="ltr">START_PROFILER</code> function; one returns the run number of the started run, as well as the result of the call. The other does not return the run number. The first form is intended for use with GUI-based tools controlling the profiler.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7175"></a>Syntax</p>
<pre dir="ltr">DBMS_PROFILER.START_PROFILER(
   run_comment   IN VARCHAR2 := sysdate,
   run_comment1  IN VARCHAR2 :=&#39;&#39;,
   run_number    OUT BINARY_INTEGER)
 RETURN BINARY_INTEGER;

DBMS_PROFILER.START_PROFILER(
   run_comment IN VARCHAR2 := sysdate,
   run_comment1 IN VARCHAR2 :=&#39;&#39;)
RETURN BINARY_INTEGER;

DBMS_PROFILER.START_PROFILER(
   run_comment   IN VARCHAR2 := sysdate,
   run_comment1  IN VARCHAR2 :=&#39;&#39;,
   run_number    OUT BINARY_INTEGER);

DBMS_PROFILER.START_PROFILER(
   run_comment IN VARCHAR2 := sysdate,
   run_comment1 IN VARCHAR2 :=&#39;&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7176"></a>Parameters</p>
<div id="ARPLS67480" class="tblformal">
<p class="titleintable"><a id="sthref7177"></a><a id="sthref7178"></a>Table 116-7 START_PROFILER Function Parameters</p>
<table class="cellalignment4330" title="START_PROFILER Function Parameters" summary="This table describes Parameters used by the DBMS_PROFILER.START_PROFILER subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t14">Parameter</th>
<th class="cellalignment4328" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">run_comment</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t14 r1c2-t14">
<p>Each profiler run can be associated with a comment. For example, the comment could provide the name and version of the benchmark test that was used to collect data.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t14" headers="r1c1-t14">
<p><code dir="ltr">run_number</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t14 r1c2-t14">
<p>Stores the number of the run so you can store and later recall the run&#39;s data.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t14" headers="r1c1-t14">
<p><code dir="ltr">run_comment1</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t14 r1c2-t14">
<p>Allows you to make interesting comments about the run.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67481" class="refsect2"><a id="i997210"></a>
<h3 class="refsect2"><a id="sthref7179"></a>STOP_PROFILER Function and Procedure</h3>
<p>This function stops profiler data collection in the user&#39;s session.</p>
<p>This function has the side effect of flushing data collected so far in the session, and it signals the end of a run.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7180"></a>Syntax</p>
<pre dir="ltr">DBMS_PROFILER.STOP_PROFILER 
  RETURN BINARY_INTEGER; 

DBMS_PROFILER.STOP_PROFILER; 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_priv_prof.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_prop_a.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>