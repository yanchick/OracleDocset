<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2476"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/UTL_I18N"></a><title>UTL_I18N</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:37:14Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="u_http.htm" title="Previous" type="text/html"/>
<link rel="Next" href="u_inaddr.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">257/290</span> <!-- End Header -->
<div id="ARPLS410" class="chapter"><a id="CHDICDCB"></a>
<h1 class="chapter"><span class="secnum">253</span> UTL_I18N</h1>
<p><code dir="ltr"><a id="sthref18812"></a>UTL_I18N</code> is a set of services that provides additional globalization functionality for applications written in PL/SQL.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a class="olink NLSPG" href="../NLSPG/toc.htm"><span class="italic">Oracle Database Globalization Support Guide</span></a></div>
<p>The chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDDJHHI">Using UTL_I18N</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
</ul>
</li>
<li>
<p><a href="#CHDEEBGI">Summary of UTL_I18N Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDDJHHI"></a>
<div id="ARPLS71114" class="refsect1">
<h2 class="refsect1">Using UTL_I18N</h2>
<p>This section contains topics which relate to using the <code dir="ltr">UTL_I18N</code> package.</p>
<ul>
<li>
<p><a href="#i1000606">Overview</a></p>
</li>
<li>
<p><a href="#CJHIAGJH">Security Model</a></p>
</li>
<li>
<p><a href="#i1000783">Constants</a></p>
</li>
</ul>
<div id="ARPLS71115" class="refsect2"><a id="i1000606"></a>
<h3 class="refsect2">Overview</h3>
<p>The <code dir="ltr">UTL_I18N</code> PL/SQL package consists of the following categories of services:</p>
<ul>
<li>
<p>String conversion functions for various datatypes.</p>
</li>
<li>
<p>Functions that convert a text string to character references and vice versa.</p>
</li>
<li>
<p>Functions that map between Oracle, Java, and ISO languages and territories.</p>
</li>
<li>
<p>Functions that map between Oracle, Internet Assigned Numbers Authority (IANA), and e-mail safe character sets.</p>
</li>
<li>
<p>A function that returns the Oracle character set name from an Oracle language name.</p>
</li>
<li>
<p>A function that returns the maximum number of bytes for a character of an Oracle character set.</p>
</li>
<li>
<p>A function that performs script transliteration.</p>
</li>
<li>
<p>Functions that return the ISO currency code, local time zones, and local languages supported for a given territory.</p>
</li>
<li>
<p>Functions that return the most appropriate linguistic sort, a listing of all the applicable linguistic sorts, and the local territories supported for a given language.</p>
</li>
<li>
<p>Functions that map between the Oracle full and short language names.</p>
</li>
<li>
<p>A function that returns the language translation of a given language and territory name.</p>
</li>
<li>
<p>A function that returns a listing of the most commonly used time zones.</p>
</li>
</ul>
</div>
<!-- class="refsect2" -->
<div id="ARPLS73281" class="refsect2"><a id="CJHIAGJH"></a>
<h3 class="refsect2">Security Model</h3>
<p>The functions of the <code dir="ltr">UTL_I18N</code> package neither read database contents nor modify them. The functions operate on their arguments only and/or they retrieve static internationalization information from NLS Data files. The execution privilege for the package is granted to <code dir="ltr">PUBLIC</code> by default</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS71116" class="refsect2"><a id="i1000783"></a>
<h3 class="refsect2">Constants</h3>
<p>The <code dir="ltr">UTL_I18N</code> package uses the constants shown in <a href="#CHDCFGJA">Table 253-1</a>.</p>
<div id="ARPLS71117" class="tblformal">
<p class="titleintable"><a id="sthref18813"></a><a id="CHDCFGJA"></a>Table 253-1 UTL_I18N Constants</p>
<table class="cellalignment4330" title="UTL_I18N Constants" summary="This table describes constants used by the UTL_I18N package." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t3">Constant</th>
<th class="cellalignment4328" id="r1c2-t3">Type</th>
<th class="cellalignment4328" id="r1c3-t3">Value</th>
<th class="cellalignment4328" id="r1c4-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">GENERIC_CONTEXT</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c3-t3">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c4-t3">
<p>Returns the default character set for general cases.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">MAIL_GENERIC</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c3-t3">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c4-t3">
<p>Map from an Oracle character set name to an email safe character set name on a non-Windows platform.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">ORACLE_TO_IANA</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c3-t3">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c4-t3">
<p>Map from an Oracle character set name to an IANA character set name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t3" headers="r1c1-t3">
<p><code dir="ltr">SHIFT_IN</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c3-t3">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c4-t3">
<p>Used with <code dir="ltr">shift_status</code>. Must be set the first time it is called in piecewise conversion.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t3" headers="r1c1-t3">
<p><code dir="ltr">IANA_TO_ORACLE</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c3-t3">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c4-t3">
<p>Map from an IANA character set name to an Oracle character set name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t3" headers="r1c1-t3">
<p><code dir="ltr">MAIL_CONTEXT</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t3 r1c3-t3">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t3 r1c4-t3">
<p>The mapping is between an Oracle character set name and an email safe character set name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t3" headers="r1c1-t3">
<p><code dir="ltr">MAIL_WINDOWS</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t3 r1c3-t3">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t3 r1c4-t3">
<p>Map from an Oracle character set name to an email safe character set name on a Windows platform.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t3" headers="r1c1-t3">
<p><code dir="ltr">SHIFT_OUT</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t3 r1c2-t3">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t3 r1c3-t3">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t3" headers="r1c1-t3">
<p><code dir="ltr">FWKATAKANA_HIRAGANA</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t3 r1c3-t3">
<p><code dir="ltr">&#39;fwkatakana_hiragana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t3 r1c4-t3">
<p>Converts only fullwidth Katakana characters to fullwidth Hiragana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t3" headers="r1c1-t3">
<p><code dir="ltr">FWKATAKANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t3 r1c3-t3">
<p><code dir="ltr">&#39;fwkatakana_hwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t3 r1c4-t3">
<p>Converts only fullwidth Katakana characters to halfwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t3" headers="r1c1-t3">
<p><code dir="ltr">HIRAGANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t3 r1c3-t3">
<p><code dir="ltr">&#39;hiragana_fwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t3 r1c4-t3">
<p>Converts only fullwidth Hiragana characters to fullwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t3" headers="r1c1-t3">
<p><code dir="ltr">HIRAGANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t3 r1c3-t3">
<p><code dir="ltr">&#39;hiragana_hwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t3 r1c4-t3">
<p>Converts only fullwidth Hiragana characters to halfwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t3" headers="r1c1-t3">
<p><code dir="ltr">HWKATAKANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t3 r1c3-t3">
<p><code dir="ltr">&#39;hwkatakana_fwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t3 r1c4-t3">
<p>Converts only halfwidth Katakana characters to fullwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t3" headers="r1c1-t3">
<p><code dir="ltr">HWKATAKANA_HIRAGANA</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t3 r1c3-t3">
<p><code dir="ltr">&#39;hwkatakana_hiragana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t3 r1c4-t3">
<p>Converts only halfwidth Katakana characters to fullwidth Hiragana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t3" headers="r1c1-t3">
<p><code dir="ltr">KANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t3 r1c3-t3">
<p><code dir="ltr">&#39;kana_fwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t3 r1c4-t3">
<p>Converts any type of Kana character to a fullwidth Katakana character.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t3" headers="r1c1-t3">
<p><code dir="ltr">KANA_HIRAGANA</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t3 r1c3-t3">
<p><code dir="ltr">&#39;kana_hiragana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t3 r1c4-t3">
<p>Converts any type of Kana character to a fullwidth Hiragana character.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t3" headers="r1c1-t3">
<p><code dir="ltr">KANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t3 r1c2-t3">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t3 r1c3-t3">
<p><code dir="ltr">&#39;kana_hwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t3 r1c4-t3">
<p>Converts any type of Kana character to a halfwidth Katakana character.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHDEEBGI"></a>
<div id="ARPLS71118" class="refsect1">
<h2 class="refsect1">Summary of UTL_I18N Subprograms</h2>
<div id="ARPLS71119" class="tblformal">
<p class="titleintable"><a id="sthref18814"></a><a id="sthref18815"></a>Table 253-2 UTL_I18N Package Subprograms</p>
<table class="cellalignment4330" title=" UTL_I18N Package Subprograms" summary="This table lists the UTL_I18N subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Procedure</th>
<th class="cellalignment4328" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i1000938">ESCAPE_REFERENCE Function</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p>Converts a given text string to its character reference counterparts, for characters that fall outside the document character set.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#CACGGHHD">GET_COMMON_TIME_ZONES Function</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<p>Returns the list of common time zone IDs that are independent of the locales.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#i1001031">GET_DEFAULT_CHARSET Function</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c2-t4">
<p>Returns the default Oracle character set name or the default e-mail safe character set name from an Oracle language name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#CACCCHGG">GET_DEFAULT_ISO_CURRENCY Function</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c2-t4">
<p>Returns the default ISO 4217 currency code for the specified territory.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#CACCFEFE">GET_DEFAULT_LINGUISTIC_SORT Function</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t4 r1c2-t4">
<p>Returns the default linguistic sort name for the specified language.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#CACEAJFA">GET_LOCAL_LANGUAGES Function</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t4 r1c2-t4">
<p>Returns the local language names for the specified territory.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#CACDDJBE">GET_LOCAL_LINGUISTIC_SORTS Function</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t4 r1c2-t4">
<p>Returns the local linguistic sort names for the specified language.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#CACHFIBJ">GET_LOCAL_TERRITORIES Function</a></p>
</td>
<td class="cellalignment4329" headers="r9c1-t4 r1c2-t4">
<p>Returns the local territory names for the specified language.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#CACGGGCD">GET_LOCAL_TIME_ZONES Function</a></p>
</td>
<td class="cellalignment4329" headers="r10c1-t4 r1c2-t4">
<p>Returns the local time zone IDs for the specified territory.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#CJHEJBAB">GET_MAX_CHARACTER_SIZE Function</a></p>
</td>
<td class="cellalignment4329" headers="r11c1-t4 r1c2-t4">
<p>Returns the maximum character size of a given character set.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t4" headers="r1c1-t4">
<p><a href="#CACCBGFC">GET_TRANSLATION Function</a></p>
</td>
<td class="cellalignment4329" headers="r12c1-t4 r1c2-t4">
<p>Returns the translation of the language and territory name in the specified translation language.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t4" headers="r1c1-t4">
<p><a href="#i1001102">MAP_CHARSET Function</a></p>
</td>
<td class="cellalignment4329" headers="r13c1-t4 r1c2-t4">
<ul>
<li>
<p>Maps an Oracle character set name to an IANA character set name.</p>
</li>
<li>
<p>Maps an IANA character set name to an Oracle character set name.</p>
</li>
<li>
<p>Maps an Oracle character set name to an e-mail safe character set name.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t4" headers="r1c1-t4">
<p><a href="#CACGHHBG">MAP_FROM_SHORT_LANGUAGE Function</a></p>
</td>
<td class="cellalignment4329" headers="r14c1-t4 r1c2-t4">
<p>Maps an Oracle short language name to an Oracle language name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t4" headers="r1c1-t4">
<p><a href="#i1001270">MAP_LANGUAGE_FROM_ISO Function</a></p>
</td>
<td class="cellalignment4329" headers="r15c1-t4 r1c2-t4">
<p>Returns an Oracle language name from an ISO locale name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t4" headers="r1c1-t4">
<p><a href="#i1001337">MAP_LOCALE_TO_ISO Function</a></p>
</td>
<td class="cellalignment4329" headers="r16c1-t4 r1c2-t4">
<p>Returns an ISO locale name from the Oracle language and territory name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t4" headers="r1c1-t4">
<p><a href="#i1001400">MAP_TERRITORY_FROM_ISO Function</a></p>
</td>
<td class="cellalignment4329" headers="r17c1-t4 r1c2-t4">
<p>Returns an Oracle territory name from an ISO locale name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t4" headers="r1c1-t4">
<p><a href="#CACBHDAC">MAP_TO_SHORT_LANGUAGE Function</a></p>
</td>
<td class="cellalignment4329" headers="r18c1-t4 r1c2-t4">
<p>Maps an Oracle language name to an Oracle short language name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t4" headers="r1c1-t4">
<p><a href="#i998567">RAW_TO_CHAR Functions</a></p>
</td>
<td class="cellalignment4329" headers="r19c1-t4 r1c2-t4">
<p>Converts <code dir="ltr">RAW</code> data that is not encoded in the database character set into a <code dir="ltr">VARCHAR2</code> string</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t4" headers="r1c1-t4">
<p><a href="#i998574">RAW_TO_NCHAR Functions</a></p>
</td>
<td class="cellalignment4329" headers="r20c1-t4 r1c2-t4">
<p>Converts <code dir="ltr">RAW</code> data that is not encoded in the national character set into an <code dir="ltr">NVARCHAR2</code> string</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t4" headers="r1c1-t4">
<p><a href="#i1001698">STRING_TO_RAW Function</a></p>
</td>
<td class="cellalignment4329" headers="r21c1-t4 r1c2-t4">
<p>Converts a <code dir="ltr">VARCHAR2</code> or <code dir="ltr">NVARCHAR2</code> string to another character set. The result is returned as a <code dir="ltr">RAW</code> datatype.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r22c1-t4" headers="r1c1-t4">
<p><a href="#CJHBGCAE">TRANSLITERATE Function</a></p>
</td>
<td class="cellalignment4329" headers="r22c1-t4 r1c2-t4">
<p>Transliterates between Japanese hiragana and katakana.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r23c1-t4" headers="r1c1-t4">
<p><a href="#i998992">UNESCAPE_REFERENCE Function</a></p>
</td>
<td class="cellalignment4329" headers="r23c1-t4 r1c2-t4">
<p>Converts an input string that contains character references to a text string.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS71120" class="refsect2"><a id="i1000938"></a>
<h3 class="refsect2"><a id="sthref18816"></a>ESCAPE_REFERENCE Function</h3>
<p>This function converts a text string to its character reference counterparts for characters that fall outside the character set used by the current document. Character references are mainly used in HTML and XML documents to represent characters independently of the encoding of the document.Character references may appear in two forms, numeric character references and character entity references. Numeric character references specify the Unicode code point value of a character, while character entity references use symbolic names to refer to the same character. For example, <code dir="ltr">&amp;#xe5;</code> is the numeric character reference for the small letter &#34;a&#34; with a ring above, whereas <code dir="ltr">&amp;aring;</code> is the character entity reference for the same character. Character entity references are also used to escape special characters, as an example, <code dir="ltr">&amp;lt;</code> represents the &lt; (less than) sign. This is to avoid possible confusion with the beginning of a tag in Markup languages.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18817"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.ESCAPE_REFERENCE(
    str            IN VARCHAR2 CHARACTER SET ANY_CS,
    page_cs_name   IN VARCHAR2 DEFAULT NULL)
 RETURN VARCHAR2 CHARACTER SET str%CHARSET;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18818"></a>Parameters</p>
<div id="ARPLS71121" class="tblformal">
<p class="titleintable"><a id="sthref18819"></a><a id="sthref18820"></a>Table 253-3 ESCAPE_REFERENCE Function Parameters</p>
<table class="cellalignment4330" title="ESCAPE_REFERENCE Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5">Parameter</th>
<th class="cellalignment4328" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">str</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p>Specifies the input string</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">page_cs_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c2-t5">
<p>Specifies the character set of the document. If <code dir="ltr">page_cs_name</code> is <code dir="ltr">NULL</code>, then the database character set is used for <code dir="ltr">CHAR</code> data and the national character set is used for <code dir="ltr">NCHAR</code> data.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18821"></a>Usage Notes</p>
<p>If the user specifies an invalid character set or a <code dir="ltr">NULL</code> string, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18822"></a>Examples</p>
<pre dir="ltr">UTL_I18N.ESCAPE_REFERENCE(&#39;hello &lt; &#39;||chr(229),&#39;us7ascii&#39;)
</pre>
<p>This returns <code dir="ltr">&#39;hello &amp;lt; &amp;#xe5;&#39;</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71122" class="refsect2"><a id="CACGGHHD"></a>
<h3 class="refsect2"><a id="sthref18823"></a>GET_COMMON_TIME_ZONES Function</h3>
<p>This function returns a listing of the most commonly used time zones. This list contains a subset of the time zones that are supported in the database.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18824"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_COMMON_TIME_ZONES
 RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18825"></a>Examples</p>
<p>Returns the list of the most commonly used time zones.</p>
<pre dir="ltr">DECLARE
   retval UTL_I18N.STRING_ARRAY;
BEGIN
   retval := UTL_I18N.GET_COMMON_TIME_ZONES;
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71123" class="refsect2"><a id="i1001031"></a>
<h3 class="refsect2"><a id="sthref18826"></a>GET_DEFAULT_CHARSET Function</h3>
<p>This function returns the default Oracle character set name or the default e-mail safe character set name from an Oracle language name.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1001102">&#34;MAP_CHARSET Function&#34;</a> for an explanation of an e-mail safe character set</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18827"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_DEFAULT_CHARSET( 
   language  IN VARCHAR2,
   context   IN PLS_INTEGER DEFAULT GENERIC_CONTEXT,
   iswindows IN BOOLEAN DEFAULT FALSE)
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18828"></a>Parameters</p>
<div id="ARPLS71124" class="tblformal">
<p class="titleintable"><a id="sthref18829"></a><a id="sthref18830"></a>Table 253-4 GET_DEFAULT_CHARSET Function Parameters</p>
<table class="cellalignment4330" title="GET_DEFAULT_CHARSET Function Parameters" summary="This table describes the Parameters of the UTL_I18N.GET_DEFAULT_CHARSET subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t7">Parameter</th>
<th class="cellalignment4328" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">language</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t7 r1c2-t7">
<p>Specifies a valid Oracle language</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">context</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t7 r1c2-t7">
<p><code dir="ltr">GENERIC_CONTEXT | MAIL_CONTEXT</code></p>
<p><code dir="ltr">GENERIC_CONTEXT</code>: Returns the default character set for general cases</p>
<p><code dir="ltr">MAIL_CONTEXT</code>: Returns the default e-mail safe character set name</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t7" headers="r1c1-t7">
<p><code dir="ltr">iswindows</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t7 r1c2-t7">
<p>If <code dir="ltr">context</code> is set as <code dir="ltr">MAIL_CONTEXT</code>, then <code dir="ltr">iswindows</code> should be set to <code dir="ltr">TRUE</code> if the platform is Windows and <code dir="ltr">FALSE</code> if the platform is not Windows. The default is <code dir="ltr">FALSE</code>.</p>
<p><code dir="ltr">iswindows</code> has no effect if <code dir="ltr">context</code> is set as <code dir="ltr">GENERIC_CONTEXT</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18831"></a>Usage Notes</p>
<p>If the user specifies an invalid language name or an invalid flag, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18832"></a>Examples</p>
<p class="subhead1"><a id="ARPLS71125"></a>GENERIC_CONTEXT, iswindows=FALSE</p>
<pre dir="ltr">UTL_I18N.GET_DEFAULT_CHARSET(&#39;French&#39;, UTL_I18N.GENERIC_CONTEXT, FALSE)
</pre>
<p>This returns <code dir="ltr">&#39;WE8ISO8859P1&#39;</code>.</p>
<p class="subhead1"><a id="ARPLS71126"></a>MAIL_CONTEXT, iswindows=TRUE</p>
<pre dir="ltr">UTL_I18N.GET_DEFAULT_CHARSET(&#39;French&#39;, UTL_I18N.MAIL_CONTEXT, TRUE)
</pre>
<p>This returns &#39;<code dir="ltr">WE8MSWIN1252</code>&#39;.</p>
<p class="subhead1"><a id="ARPLS71127"></a>MAIL_CONTEXT, iswindows=FALSE</p>
<pre dir="ltr">UTL_I18N.GET_DEFAULT_CHARSET(&#39;French&#39;, UTL_I18N.MAIL_CONTEXT, FALSE)
</pre>
<p>This returns &#39;<code dir="ltr">WE8ISO8859P1</code>&#39;.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71128" class="refsect2"><a id="CACCCHGG"></a>
<h3 class="refsect2"><a id="sthref18833"></a>GET_DEFAULT_ISO_CURRENCY Function</h3>
<p>This function returns the default ISO 4217 currency code for the specified territory.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18834"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_DEFAULT_ISO_CURRENCY (
   territory    IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18835"></a>Parameters</p>
<div id="ARPLS71129" class="tblformal">
<p class="titleintable"><a id="sthref18836"></a><a id="sthref18837"></a>Table 253-5 GET_DEFAULT_ISO_CURRENCY Function Parameters</p>
<table class="cellalignment4330" title="GET_DEFAULT_ISO_CURRENCY Function Parameters" summary="This table describes the Parameters of the UTL_I18N.GET_DEFAULT_CHARSET subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Parameter</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">territory</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>Specifies a valid Oracle territory. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18838"></a>Usage Notes</p>
<p>If the user specifies an invalid territory name, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18839"></a>Examples</p>
<p>Displays the default ISO currency code for China.</p>
<pre dir="ltr">DECLARE
   retval VARCHAR2(50);
BEGIN
   retval := UTL_I18N.GET_DEFAULT_ISO_CURRENCY(&#39;CHINA&#39;);
   DBMS_OUTPUT.PUT_LINE(retval);
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71130" class="refsect2"><a id="CACCFEFE"></a>
<h3 class="refsect2"><a id="sthref18840"></a>GET_DEFAULT_LINGUISTIC_SORT Function</h3>
<p>This function returns the most commonly used Oracle linguistic sort for the specified language.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18841"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_DEFAULT_LINGUISTIC_SORT (
   language  IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18842"></a>Parameters</p>
<div id="ARPLS71131" class="tblformal">
<p class="titleintable"><a id="sthref18843"></a><a id="sthref18844"></a>Table 253-6 GET_DEFAULT_LINGUISTIC_SORT Function Parameters</p>
<table class="cellalignment4330" title="GET_DEFAULT_LINGUISTIC_SORT Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t9">Parameter</th>
<th class="cellalignment4328" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">language</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c2-t9">
<p>Specifies a valid Oracle language. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18845"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18846"></a>Examples</p>
<p>Displays the name of the most appropriate linguistic sort name for the language used in the current SQL session.</p>
<pre dir="ltr">DECLARE
   retval VARCHAR2(50);
BEGIN
  SELECT value INTO retval FROM nls_session_parameters
   WHERE parameter = &#39;NLS_LANGUAGE&#39;;
   retval := UTL_I18N.GET_DEFAULT_LINGUISTIC_SORT(retval);
   DBMS_OUTPUT.PUT_LINE(retval);
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71132" class="refsect2"><a id="CACEAJFA"></a>
<h3 class="refsect2"><a id="sthref18847"></a>GET_LOCAL_LANGUAGES Function</h3>
<p>This function returns the local language names for the specified territory.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18848"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_LOCAL_LANGUAGES (
   territory    IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18849"></a>Parameters</p>
<div id="ARPLS71133" class="tblformal">
<p class="titleintable"><a id="sthref18850"></a><a id="sthref18851"></a>Table 253-7 GET_LOCAL_LANGUAGES Function Parameters</p>
<table class="cellalignment4330" title="GET_LOCAL_LANGUAGES Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t10">Parameter</th>
<th class="cellalignment4328" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">territory</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t10 r1c2-t10">
<p>Specifies a valid Oracle territory. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18852"></a>Usage Notes</p>
<p>If the user specifies an invalid territory name, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18853"></a>Examples</p>
<p>Returns the list of local languages used in Belgium.</p>
<pre dir="ltr">DECLARE
   retval UTL_I18N.STRING_ARRAY;
   cnt    INTEGER;
BEGIN
   retval   :=  UTL_I18N.GET_LOCAL_LANGUAGES(&#39;BELGIUM&#39;);
   DBMS_OUTPUT.PUT(&#39;Count = &#39;);
   DBMS_OUTPUT.PUT_LINE(retval.LAST);
   cnt := retval.FIRST;
   WHILE cnt IS NOT NULL LOOP
      DBMS_OUTPUT.PUT_LINE(retval(cnt));
      cnt := retval.NEXT(cnt);
   END LOOP;
END;
/
...
Count = 2
DUTCH
FRENCH
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71134" class="refsect2"><a id="CACDDJBE"></a>
<h3 class="refsect2"><a id="sthref18854"></a>GET_LOCAL_LINGUISTIC_SORTS Function</h3>
<p>This function returns a list of the Oracle linguistic sort names that are appropriate for the specified language. A <code dir="ltr">BINARY</code> sort is included for all languages.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18855"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_LOCAL_LINGUISTIC_SORTS (
   language  IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18856"></a>Parameters</p>
<div id="ARPLS71135" class="tblformal">
<p class="titleintable"><a id="sthref18857"></a><a id="sthref18858"></a>Table 253-8 GET_LOCAL_LINGUISTIC_SORTS Function Parameters</p>
<table class="cellalignment4330" title="GET_LOCAL_LINGUISTIC_SORTS Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t11">Parameter</th>
<th class="cellalignment4328" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">language</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t11 r1c2-t11">
<p>Specifies a valid Oracle language. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18859"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18860"></a>Examples</p>
<p>Displays the local linguistic sort names for <code dir="ltr">JAPANESE</code>.</p>
<pre dir="ltr">DECLARE
   retval UTL_I18N.STRING_ARRAY;
   cnt INTEGER;
BEGIN
  retval := UTL_I18N.GET_LOCAL_LINGUISTIC_SORTS(&#39;Japanese&#39;);
  DBMS_OUTPUT.PUT(&#39;Count = &#39;);
  DBMS_OUTPUT.PUT_LINE(retval.COUNT);
  cnt := retval.FIRST;
   WHILE cnt IS NOT NULL LOOP
      DBMS_OUTPUT.PUT_LINE(retval(cnt));
      cnt := retval.NEXT(cnt);
    END LOOP;
END;
/

...
Count = 2
JAPANESE_M
BINARY
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71136" class="refsect2"><a id="CACHFIBJ"></a>
<h3 class="refsect2"><a id="sthref18861"></a>GET_LOCAL_TERRITORIES Function</h3>
<p>This function returns the local territory names for the specified language.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18862"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_LOCAL_TERRITORIES (
   language  IN VARCHAR2 CHARACTER SET ANY_CS)
 RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18863"></a>Parameters</p>
<div id="ARPLS71137" class="tblformal">
<p class="titleintable"><a id="sthref18864"></a><a id="sthref18865"></a>Table 253-9 GET_LOCAL_TERRITORIES Function Parameters</p>
<table class="cellalignment4330" title="GET_LOCAL_TERRITORIES Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t12">Parameter</th>
<th class="cellalignment4328" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">language</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t12 r1c2-t12">
<p>Specifies a valid Oracle language. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18866"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18867"></a>Examples</p>
<p>Returns the list of Oracle territories that use German as one of their local languages.</p>
<pre dir="ltr">DECLARE
   retval  UTL_I18N.STRING_ARRAY;
   cnt     INTEGER;
BEGIN
   retval  := UTL_I18N.GET_LCOAL_TERRITORIIES(&#39;GERMAN&#39;);
   DBMS_OUTPUT.PUT(&#39;Count = &#39;);
   DBMS_OUTPUT.PUT_LINE(retval.LAST);
  cnt := retval.FIRST;
   WHILE cnt IS NOT NULL LOOP
      DBMS_OUTPUT.PUT_LINE(retval(cnt));
      cnt := retval.NEXT(cnt));
   END LOOP;
END;
/
...
Count = 4
GERMANY
AUSTRIA
LUXEMBOURG
SWITZERLAND
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71138" class="refsect2"><a id="CACGGGCD"></a>
<h3 class="refsect2"><a id="sthref18868"></a>GET_LOCAL_TIME_ZONES Function</h3>
<p>This function returns the local time zone IDs for the specified territory.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18869"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_LOCAL_TIME_ZONES ( 
   territory      IN VARCHAR2 CHARACTER SET ANY_CS DEFAULT NULL)
RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18870"></a>Parameters</p>
<div id="ARPLS71139" class="tblformal">
<p class="titleintable"><a id="sthref18871"></a><a id="sthref18872"></a>Table 253-10 GET_LOCAL_TIME_ZONES Function Parameters</p>
<table class="cellalignment4330" title="GET_LOCAL_TIME_ZONES Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t13">Parameter</th>
<th class="cellalignment4328" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">territory</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t13 r1c2-t13">
<p>Specifies a valid Oracle territory. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18873"></a>Usage Notes</p>
<p>If the user specifies an invalid territory name, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18874"></a>Examples</p>
<p>Creates a function that returns the list of time zones locally used in the territory <code dir="ltr">AZERBAIJAN</code> followed by the general common time zones. This is useful for when the user&#39;s territory is known and the application still allows the user to choose other time zones as a user&#39;s preference.</p>
<pre dir="ltr">CREATE OR REPLACE FUNCTION get_time_zones
(territory IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN utl_i18n.string_array
IS
  retval  utl_i18n.string_array;
  retval2 utl_i18n.string_array;
  stpos   INTEGER;
BEGIN
  retval  := utl_i18n.get_local_time_zones(
    territory);
  retval2 := utl_i18n.get_common_time_zones;
  stpos := retval.LAST + 1;
  retval(stpos) := &#39;-----&#39;; -- a separator
  FOR i IN retval2.FIRST..retval2.LAST LOOP
    stpos := stpos + 1;
    retval(stpos) := retval2(i);
  END LOOP;
  RETURN retval;
END;
/
</pre>
<p>Returns the list of local time zones for <code dir="ltr">AZERBAIJAN</code> followed by the common time zones with a separator string of five dashes (-----).</p>
<pre dir="ltr">DECLARE
   retval UTL_I18N.STRING_ARRAY;
   cnt INTEGER;
BEGIN
   DBMS_OUTPUT.ENABLE(100000);
   retval UTL_I18N.GET_TIME_ZONES(&#39;AZERBAIJAN&#39;);
   cnt := retval.FIRST;
  WHILE cnt IS NOT NULL LOOP
    DBMS_OUTPUT.PUT_LINE(retval(cnt));
    cnt := retval.NEXT(cnt);
  END LOOP;
END;
/

Asia/Baku
-----
Pacific/Pago_Pago
Pacific/Honolulu
America/Anchorage
America/Vancouver
America/Los_Angeles
America/Tijuana
America/Edmonton
America/Denver
America/Phoenix
America/Mazatlan
America/Winnipeg
America/Regina
America/Chicago
America/Mexico_City
America/Guatemala
America/El_Salvador
America/Managua
America/Costa_Rica
America/Montreal
...
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74751" class="refsect2"><a id="CJHEJBAB"></a>
<h3 class="refsect2">GET_MAX_CHARACTER_SIZE Function</h3>
<p>This function returns the maximum character size of a given character set.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18875"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_MAX_CHARACTER_SIZE(
    charset_name       IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN PLS_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18876"></a>Parameters</p>
<div id="ARPLS74752" class="tblformal">
<p class="titleintable"><a id="sthref18877"></a><a id="sthref18878"></a>Table 253-11 GET_MAX_CHARACTER_SIZE Function Parameters</p>
<table class="cellalignment4330" title="GET_MAX_CHARACTER_SIZE Function Parameters" summary="GET_MAX_CHARACTER_SIZE parameters" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t14">Parameter</th>
<th class="cellalignment4328" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">charset_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t14 r1c2-t14">
<p>Specifies a valid character set name. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18879"></a>Usage Notes</p>
<p>For shift-sensitive character sets, the returned maximum character size will include the possible extra shift characters.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18880"></a>Examples</p>
<pre dir="ltr">UTL_I18N.GET_MAX_CHARACTER_SIZE(&#39;AL32UTF8&#39;);
</pre>
<p>This returns 4.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71140" class="refsect2"><a id="CACCBGFC"></a>
<h3 class="refsect2"><a id="sthref18881"></a>GET_TRANSLATION Function</h3>
<p>This function returns the translation of the language and territory name in the specified translation language.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18882"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.GET_TRANSLATION ( 
   parameter        IN VARCHAR2 CHARACTER SET ANY_CS,
   trans_language   IN VARCHAR2 &#39;AMERICAN&#39;,
   flag             IN PLS_INTEGER DEFAULT LANGUAGE_TRANS)
RETURN VARCHAR2 CHARACTER SET parameter%CHARSET;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18883"></a>Parameters</p>
<div id="ARPLS71141" class="tblformal">
<p class="titleintable"><a id="sthref18884"></a><a id="sthref18885"></a>Table 253-12 GET_TRANSLATION Function Parameters</p>
<table class="cellalignment4330" title="GET_TRANSLATION Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t15">Parameter</th>
<th class="cellalignment4328" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t15" headers="r1c1-t15">
<p><code dir="ltr">parameter</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t15 r1c2-t15">
<p>Specifies a valid language name, territory name, or a combined string in the form of <code dir="ltr"><span class="codeinlineitalic">language_territory</span></code>. It is case-insensitive.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t15" headers="r1c1-t15">
<p><code dir="ltr">trans_language</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t15 r1c2-t15">
<p>Specifies a translation language name. For example, <code dir="ltr">ITALIAN</code> is for the Italian language. The default is <code dir="ltr">AMERICAN</code>, which indicates American English.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t15" headers="r1c1-t15">
<p><code dir="ltr">flag</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t15 r1c2-t15">
<p>Specifies the translation type:</p>
<ul>
<li>
<p><code dir="ltr">LANGUAGE_TRANS</code>: The function returns the language translation.</p>
</li>
<li>
<p><code dir="ltr">TERRITORY_TRANS</code>: The function returns the territory translation.</p>
</li>
<li>
<p><code dir="ltr">LANGUAGE_TERRITORY_TRANS</code>: The function returns the language and territory translation.</p>
</li>
</ul>
<p>The default translation type is <code dir="ltr">LANGUAGE_TRANS</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18886"></a>Usage Notes</p>
<p>If <code dir="ltr">VARCHAR2</code> is used as a parameter type, the returned translation text can be corrupted due to the conversion to the database character set. Using <code dir="ltr">NVARCHAR2</code> as the parameter type will preserve the translation text because Unicode can encode all translated languages.</p>
<p>If the specified translation language is not available or an invalid name is provided, the default &#34;American English&#34; translations are returned. For example, Oracle does not provide <code dir="ltr">GUJARATI</code> translations, so the returned translation would be in American English.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18887"></a>Examples</p>
<p>The following returns the names of all the Oracle-supported languages in Italian.</p>
<pre dir="ltr">DECLARE
   CURSOR c1 IS
     SELECT value FROM V$NLS_VALID_VALUES
     WHERE parameter = &#39;LANGUAGE&#39;
  ORDER BY value;
  retval NVARCHAR2(100);
BEGIN
   FOR item IN c1 LOOP
     retval := UTL_I18N.GET_TRANSLATION (TO_NCHAR(item.value), &#39;italian&#39;);
   END LOOP;
END;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71142" class="refsect2"><a id="i1001102"></a>
<h3 class="refsect2"><a id="sthref18888"></a>MAP_CHARSET Function</h3>
<p>This function maps the following:</p>
<ul>
<li>
<p>An Oracle character set name to an IANA character set name.</p>
</li>
<li>
<p>An IANA character set name to an Oracle character set name.</p>
</li>
<li>
<p>An Oracle character set to an e-mail safe character set name.</p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18889"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.MAP_CHARSET( 
   charset   IN VARCHAR2,
   context   IN PLS_INTEGER DEFAULT GENERIC_CONTEXT,
   flag      IN PLS_INTEGER DEFAULT ORACLE_TO_IANA)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18890"></a>Parameters</p>
<div id="ARPLS71143" class="tblformal">
<p class="titleintable"><a id="sthref18891"></a><a id="sthref18892"></a>Table 253-13 MAP_CHARSET Function Parameters</p>
<table class="cellalignment4330" title="MAP_CHARSET Function Parameters" summary="This table describes the Parameters of the UTL_I18N.MAP_CHARSET subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t16">Parameter</th>
<th class="cellalignment4328" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">charset</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t16 r1c2-t16">
<p>Specifies the character set name to be mapped. The mapping is case-insensitive.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t16" headers="r1c1-t16">
<p><code dir="ltr">context</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t16 r1c2-t16">
<p><code dir="ltr">GENERIC_CONTEXT | MAIL_CONTEXT</code></p>
<p><code dir="ltr">GENERIC_CONTEXT</code>: The mapping is between an Oracle character set name and an IANA character set name. This is the default value.</p>
<p><code dir="ltr">MAIL_CONTEXT</code>: The mapping is between an Oracle character set name and an email safe character set name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t16" headers="r1c1-t16">
<p><code dir="ltr">flag</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t16 r1c2-t16">
<ul>
<li>
<p><code dir="ltr">ORACLE_TO_IANA | IANA_TO_ORACLE</code> if <code dir="ltr">GENERIC_CONTEXT</code> is set</p>
<p><code dir="ltr">ORACLE_TO_IANA</code>: Map from an Oracle character set name to an IANA character set name. This is the default.</p>
<p><code dir="ltr">IANA_TO_ORACLE</code>: Map from an IANA character set name to an Oracle character set name.</p>
</li>
<li>
<p><code dir="ltr">MAIL_GENERIC | MAIL_WINDOWS</code> if <code dir="ltr">MAIL_CONTEXT</code> is set</p>
<p><code dir="ltr">MAIL_GENERIC</code>: Map from an Oracle character set name to an email safe character set name on a non-Windows platform.</p>
<p><code dir="ltr">MAIL_WINDOWS</code>: Map from an Oracle character set name to an email safe character set name on a Windows platform.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18893"></a>Usage Notes</p>
<p>An e-mail safe character set is an Oracle character set that is commonly used by applications when they submit e-mail messages. The character set is usually used to convert contents in the database character set to e-mail safe contents. To specify the character set name in the mail header, you should use the corresponding IANA character set name obtained by calling the <code dir="ltr">MAP_CHARSET</code> function with the <code dir="ltr">ORACLE_TO_IANA</code> option, providing the e-mail safe character set name as input.</p>
<p>For example, no e-mail client recognizes message contents in the <code dir="ltr">WE8DEC</code> character set, whose corresponding IANA name is <code dir="ltr">DEC-MCS</code>. If <code dir="ltr">WE8DEC</code> is passed to the <code dir="ltr">MAP_CHARSET</code> function with the <code dir="ltr">MAIL_CONTEXT</code> option, then the function returns <code dir="ltr">WE8ISO8859P1</code>. Its corresponding IANA name, <code dir="ltr">ISO-8859-1</code>, is recognized by most e-mail clients.</p>
<p>The steps in this example are as follows:</p>
<ol>
<li>
<p>Call the <code dir="ltr">MAP_CHARSET</code> function with the <code dir="ltr">MAIL_CONTEXT | MAIL_GENERIC</code> option with the database character set name, <code dir="ltr">WE8DEC</code>. The result is <code dir="ltr">WE8ISO8859P1</code>.</p>
</li>
<li>
<p>Convert the contents stored in the database to <code dir="ltr">WE8ISO8859P1</code>.</p>
</li>
<li>
<p>Call the <code dir="ltr">MAP_CHARSET</code> function with the <code dir="ltr">ORACLE_TO_IANA | GENERIC_CONTEXT</code> option with the e-mail safe character set, <code dir="ltr">WE8ISO8859P1</code>. The result is <code dir="ltr">ISO-8859-1</code>.</p>
</li>
<li>
<p>Specify <code dir="ltr">ISO-8859-1</code> in the mail header when the e-mail message is submitted.</p>
</li>
</ol>
<p>The function returns a character set name if a match is found. If no match is found or if the flag is invalid, then it returns <code dir="ltr">NULL</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Many Oracle character sets can map to one e-mail safe character set. There is no function that maps an e-mail safe character set to an Oracle character set name.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18894"></a>Examples</p>
<p class="subhead1"><a id="ARPLS71144"></a>Generic Context</p>
<pre dir="ltr">UTL_I18N.MAP_CHARSET(&#39;iso-8859-1&#39;,UTL_I18N.GENERIC_CONTEXT,UTL_I18N.IANA_TO_ORACLE)
</pre>
<p>This returns <code dir="ltr">&#39;WE8ISO8859P1&#39;</code>.</p>
<p class="subhead1"><a id="ARPLS71145"></a>Context</p>
<pre dir="ltr">UTL_I18N.MAP_CHARSET(&#39;WE8DEC&#39;, utl_i18n.mail_context,  utl_i18n.mail_generic)
</pre>
<p>This returns <code dir="ltr">&#39;WE8ISO8859P1&#39;</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG012" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=NLSPG012"><span class="italic">Oracle Database Globalization Support Guide</span></a> for a list of valid Oracle character sets</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71146" class="refsect2"><a id="CACGHHBG"></a>
<h3 class="refsect2"><a id="sthref18895"></a>MAP_FROM_SHORT_LANGUAGE Function</h3>
<p>This function maps an Oracle short language name to an Oracle language name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18896"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.MAP_FROM_SHORT_LANGUAGE (
   language           IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18897"></a>Parameters</p>
<div id="ARPLS71147" class="tblformal">
<p class="titleintable"><a id="sthref18898"></a><a id="sthref18899"></a>Table 253-14 MAP_FROM_SHORT_LANGUAGE Function Parameters</p>
<table class="cellalignment4330" title="MAP_FROM_SHORT_LANGUAGE Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t19">Parameter</th>
<th class="cellalignment4328" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t19" headers="r1c1-t19">
<p><code dir="ltr">language</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t19 r1c2-t19">
<p>Specifies a valid short language name. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18900"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18901"></a>Examples</p>
<p>Returns the default linguistic sort name for the customer with the ID of 9000. Note that the table <code dir="ltr">customers</code> is from the <code dir="ltr">oe</code> user in the Common Schema. Because the customer&#39;s language preference is stored using a short language name, you need to convert to a full language name by calling the <code dir="ltr">GET_DEFAULT_LINGUISTIC_SORT</code> procedure.</p>
<pre dir="ltr">DECLARE
   short_n VARCHAR2(10);
   ling_n VARCHAR2(50);
BEGIN
   SELECT nls_language INTO short 
   FROM customers WHERE customer_id = 9000;
   ling_n := UTL_I18N.GET_DEFAULT_LINGUISTIC_SORT (
   UTL_I18N.MAP_FROM_SHORT_LANGUAGE(short_n));
   DBMS_OUTPUT.PUT_LINE(ling_n);
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71148" class="refsect2"><a id="i1001270"></a>
<h3 class="refsect2"><a id="sthref18902"></a>MAP_LANGUAGE_FROM_ISO Function</h3>
<p>This function returns an Oracle language name from an ISO locale name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18903"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.MAP_LANGUAGE_FROM_ISO( 
  isolocale IN VARCHAR2)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18904"></a>Parameters</p>
<div id="ARPLS71149" class="tblformal">
<p class="titleintable"><a id="sthref18905"></a><a id="sthref18906"></a>Table 253-15 MAP_LANGUAGE_FROM_ISO Function Parameters</p>
<table class="cellalignment4330" title="MAP_LANGUAGE_FROM_ISO Function Parameters" summary="This table describes the Parameters of the UTL_I18N.MAP_LANGUAGE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t20">Parameter</th>
<th class="cellalignment4328" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t20" headers="r1c1-t20">
<p><code dir="ltr">isolocale</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t20 r1c2-t20">
<p>Specifies the ISO locale. The mapping is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18907"></a>Usage Notes</p>
<p>If the user specifies an invalid locale string, then the function returns a <code dir="ltr">NULL</code> string.</p>
<p>If the user specifies a locale string that includes only the language (for example, <code dir="ltr">en_</code> instead of <code dir="ltr">en_US</code>), then the function returns the default language name for the specified language (for example, <code dir="ltr">American</code>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18908"></a>Examples</p>
<pre dir="ltr">UTL_I18N.MAP_LANGUAGE_FROM_ISO(&#39;en_US&#39;)
</pre>
<p>This returns <code dir="ltr">&#39;American&#39;</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG012" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=NLSPG012"><span class="italic">Oracle Database Globalization Support Guide</span></a> for a list of valid Oracle languages</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71150" class="refsect2"><a id="i1001337"></a>
<h3 class="refsect2"><a id="sthref18909"></a>MAP_LOCALE_TO_ISO Function</h3>
<p>This function returns an ISO locale name from an Oracle language name and an Oracle territory name. A valid string must include at least one of the following: a valid Oracle language name or a valid Oracle territory name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18910"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.MAP_LOCALE_TO_ISO ( 
   ora_language   IN VARCHAR2,
   ora_territory  IN VARCHAR2)
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18911"></a>Parameters</p>
<div id="ARPLS71151" class="tblformal">
<p class="titleintable"><a id="sthref18912"></a><a id="sthref18913"></a>Table 253-16 MAP_LOCALE_TO_ISO Function Parameters</p>
<table class="cellalignment4330" title="MAP_LOCALE_TO_ISO Function Parameters" summary="This table describes the Parameters of the UTL_I18N.MAP_LOCALE_TO_ISO subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t22">Parameter</th>
<th class="cellalignment4328" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t22" headers="r1c1-t22">
<p><code dir="ltr">ora_language</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t22 r1c2-t22">
<p>Specifies an Oracle language name. It is case-insensitive.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t22" headers="r1c1-t22">
<p>ora_territory</p>
</td>
<td class="cellalignment4329" headers="r3c1-t22 r1c2-t22">
<p>Specifies an Oracle territory name. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18914"></a>Usage Notes</p>
<p>If the user specifies an invalid string, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18915"></a>Examples</p>
<pre dir="ltr">UTL_I18N.MAP_LOCALE_TO_ISO(&#39;American&#39;,&#39;America&#39;)
</pre>
<p>This returns <code dir="ltr">&#39;en_US&#39;</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG012" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=NLSPG012"><span class="italic">Oracle Database Globalization Support Guide</span></a> for a list of valid Oracle languages and territories</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71152" class="refsect2"><a id="i1001400"></a>
<h3 class="refsect2"><a id="sthref18916"></a>MAP_TERRITORY_FROM_ISO Function</h3>
<p>This function returns an Oracle territory name from an ISO locale.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18917"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.MAP_TERRITORY_FROM_ISO (
  isolocale IN VARCHAR2)
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18918"></a>Parameters</p>
<div id="ARPLS71153" class="tblformal">
<p class="titleintable"><a id="sthref18919"></a><a id="sthref18920"></a>Table 253-17 MAP_TERRITORY_FROM_ISO Function Parameters</p>
<table class="cellalignment4330" title="MAP_TERRITORY_FROM_ISO Function Parameters" summary="This table describes the Parameters of the UTL_I18N.MAP_TERRITORY_FROM_ISO subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t24">Parameter</th>
<th class="cellalignment4328" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t24" headers="r1c1-t24">
<p><code dir="ltr">isolocale</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t24 r1c2-t24">
<p>Specifies the ISO locale. The mapping is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18921"></a>Usage Notes</p>
<p>If the user specifies an invalid locale string, then the function returns a <code dir="ltr">NULL</code> string.</p>
<p>If the user specifies a locale string that includes only the territory (for example, <code dir="ltr">_fr</code> instead of <code dir="ltr">fr_fr</code>), then the function returns the default territory name for the specified territory (for example, <code dir="ltr">France</code>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18922"></a>Examples</p>
<pre dir="ltr">UTL_I18N.MAP_TERRITORY_FROM_ISO(&#39;en_US&#39;)
</pre>
<p>This returns &#39;<code dir="ltr">America&#39;</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG012" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=NLSPG012"><span class="italic">Oracle Database Globalization Support Guide</span></a> for a list of valid Oracle territories</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71154" class="refsect2"><a id="CACBHDAC"></a>
<h3 class="refsect2"><a id="sthref18923"></a>MAP_TO_SHORT_LANGUAGE Function</h3>
<p>This function maps an Oracle language name to an Oracle short language name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18924"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.MAP_TO_SHORT_LANGUAGE (
   language    IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18925"></a>Parameters</p>
<div id="ARPLS71155" class="tblformal">
<p class="titleintable"><a id="sthref18926"></a><a id="sthref18927"></a>Table 253-18 MAP_TO_SHORT_LANGUAGE Function Parameters</p>
<table class="cellalignment4330" title="MAP_TO_SHORT_LANGUAGE Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t26">Parameter</th>
<th class="cellalignment4328" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t26" headers="r1c1-t26">
<p><code dir="ltr">language</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t26 r1c2-t26">
<p>Specifies a valid full language name. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18928"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18929"></a>Examples</p>
<p>Returns the short language name for the language.</p>
<pre dir="ltr">DECLARE  retval VARCHAR2(100);BEGIN  retval := UTL_I18N.MAP_TO_SHORT_LANGUAGE(&#39;american&#39;);  DBMS_OUTPUT.PUT_LINE(retval);END;/US
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71156" class="refsect2"><a id="i998567"></a>
<h3 class="refsect2"><a id="sthref18930"></a>RAW_TO_CHAR Functions</h3>
<p>This function converts <code dir="ltr">RAW</code> data from a valid Oracle character set to a <code dir="ltr">VARCHAR2</code> string in the database character set.</p>
<p>The function is overloaded. The different forms of functionality are described along with the syntax declarations.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18931"></a>Syntax</p>
<p>Buffer Conversion:</p>
<pre dir="ltr">UTL_I18N.RAW_TO_CHAR(
   data          IN RAW,
   src_charset   IN VARCHAR2 DEFAULT NULL)
 RETURN VARCHAR2;
</pre>
<p>Piecewise conversion converts raw data into character data piece by piece:</p>
<pre dir="ltr">UTL_I18N.RAW_TO_CHAR (
   data            IN RAW,
   src_charset     IN VARCHAR2 DEFAULT NULL,
   scanned_length  OUT PLS_INTEGER,
   shift_status    IN OUT PLS_INTEGER)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18932"></a>Parameters</p>
<div id="ARPLS71157" class="tblformal">
<p class="titleintable"><a id="sthref18933"></a><a id="sthref18934"></a>Table 253-19 RAW_TO_CHAR Function Parameters</p>
<table class="cellalignment4330" title="RAW_TO_CHAR Function Parameters" summary="This table describes the Parameters of the UTL_I18N.RAW_TO_CHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t27">Parameter</th>
<th class="cellalignment4328" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t27" headers="r1c1-t27">
<p><code dir="ltr">data</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t27 r1c2-t27">
<p>Specifies the <code dir="ltr">RAW</code> data to be converted to a <code dir="ltr">VARCHAR2</code> string</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t27" headers="r1c1-t27">
<p><code dir="ltr">src_charset</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t27 r1c2-t27">
<p>Specifies the character set that the <code dir="ltr">RAW</code> data was derived from. If src_charset is <code dir="ltr">NULL</code>, then the database character set is used.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t27" headers="r1c1-t27">
<p><code dir="ltr">scanned_length</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t27 r1c2-t27">
<p>Specifies the number of bytes of source data scanned</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t27" headers="r1c1-t27">
<p><code dir="ltr">shift_status</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t27 r1c2-t27">
<p>Specifies the shift status at the end of the scan. The user must set it to <code dir="ltr">SHIFT_IN</code> the first time it is called in piecewise conversion.</p>
<p><span class="bold">Note:</span> ISO 2022 character sets use escape sequences instead of shift characters to indicate the encoding method. <code dir="ltr">shift_status</code> cannot hold the encoding method information that is provided by the escape sequences for the next function call. As a result, this function cannot be used to reconstruct ISO 2022 character from raw data in a piecewise way unless each unit of input can be guaranteed to be a closed string. A closed string begins and ends in a 7-bit escape state.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18935"></a>Usage Notes</p>
<p>If the user specifies an invalid character set, <code dir="ltr">NULL</code> data, or data whose length is 0, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18936"></a>Examples</p>
<p class="subhead1"><a id="ARPLS71158"></a>Buffer Conversion</p>
<pre dir="ltr">UTL_I18N.RAW_TO_CHAR(hextoraw(&#39;616263646566C2AA&#39;), &#39;utf8&#39;)
</pre>
<p>This returns the following string in the database character set:</p>
<pre dir="ltr">&#39;abcde&#39;||chr(170)
</pre>
<p class="subhead1"><a id="ARPLS71159"></a>Piecewise Conversion</p>
<pre dir="ltr">UTL_I18N.RAW_TO_CHAR(hextoraw(&#39;616263646566C2AA&#39;),&#39;utf8&#39;,shf,slen)
</pre>
<p>This expression returns the following string in the database character set:</p>
<pre dir="ltr">&#39;abcde&#39;||chr(170)
</pre>
<p>It also sets <code dir="ltr">shf</code> to <code dir="ltr">SHIFT_IN</code> and <code dir="ltr">slen</code> to <code dir="ltr">8</code>.</p>
<p>The following example converts data from the Internet piece by piece to the database character set.</p>
<pre dir="ltr">rvalue RAW(1050); 
  nvalue VARCHAR2(1024); 
  conversion_state  PLS_INTEGER = 0; 
  converted_len   PLS_INTEGER; 
  rtemp  RAW(10) = &#39;&#39;; 
  conn   utl_tcp.connection; 
  tlen PLS_INTEGER;

  ... 
  conn := utl_tcp.open_connection ( remote_host =&gt; &#39;localhost&#39;, 
                                    remote_port =&gt; 2000); 
  LOOP 
      tlen := utl_tcp.read_raw(conn, rvalue, 1024); 
      rvalue := utl_raw.concat(rtemp, rvalue); 
      nvalue := utl_i18n.raw_to_char(rvalue, &#39;JA16SJIS&#39;, converted_len, conversion_stat); 
      if (converted_len &lt; utl_raw.length(rvalue) ) 
      then 
        rtemp := utl_raw.substr(rvalue, converted_len+1); 
      else 
        rtemp := &#39;&#39;; 
      end if; 
      /* do anything you want with nvalue */ 
      /* e.g htp.prn(nvalue); */ 
    END LOOP; 
    utl_tcp.close_connection(conn); 
  EXCEPTION 
    WHEN utl_tcp.end_of_input THEN 
      utl_tcp.close_connection(conn);
END;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71160" class="refsect2"><a id="i998574"></a>
<h3 class="refsect2"><a id="sthref18937"></a>RAW_TO_NCHAR Functions</h3>
<p>This function converts <code dir="ltr">RAW</code> data from a valid Oracle character set to an <code dir="ltr">NVARCHAR2</code> string in the national character set.</p>
<p>The function is overloaded. The different forms of functionality are described along with the syntax declarations.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18938"></a>Syntax</p>
<p>Buffer Conversion:</p>
<pre dir="ltr">UTL_I18N.RAW_TO_NCHAR ( 
   data         IN RAW,
   src_charset  IN VARCHAR2 DEFAULT NULL)
 RETURN NVARCHAR2;
</pre>
<p>Piecewise conversion converts raw data into character data piece by piece:</p>
<pre dir="ltr">UTL_I18N.RAW_TO_NCHAR ( 
   data            IN RAW,
   src_charset      IN VARCHAR2 DEFAULT NULL,
   scanned_length   OUT PLS_INTEGER,
   shift_status     IN OUT PLS_INTEGER)
 RETURN NVARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18939"></a>Parameters</p>
<div id="ARPLS71161" class="tblformal">
<p class="titleintable"><a id="sthref18940"></a><a id="sthref18941"></a>Table 253-20 RAW_TO_NCHAR Function Parameters</p>
<table class="cellalignment4330" title="RAW_TO_NCHAR Function Parameters" summary="This table describes the Parameters of the UTL_I18N.RAW_TO_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t28">Parameter</th>
<th class="cellalignment4328" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t28" headers="r1c1-t28">
<p><code dir="ltr">data</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t28 r1c2-t28">
<p>Specifies the <code dir="ltr">RAW</code> data to be converted to an <code dir="ltr">NVARCHAR2</code> string</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t28" headers="r1c1-t28">
<p><code dir="ltr">src_charset</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t28 r1c2-t28">
<p>Specifies the character set that the <code dir="ltr">RAW</code> data was derived from. If <code dir="ltr">src_charset</code> is <code dir="ltr">NULL</code>, then the database character set is used.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t28" headers="r1c1-t28">
<p><code dir="ltr">scanned_length</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t28 r1c2-t28">
<p>Specifies the number of bytes of source data scanned</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t28" headers="r1c1-t28">
<p><code dir="ltr">shift_status</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t28 r1c2-t28">
<p>Specifies the shift status at the end of the scan. The user must set it to <code dir="ltr">SHIFT_IN</code> the first time it is called in piecewise conversion.</p>
<p><span class="bold">Note:</span> ISO 2022 character sets use escape sequences instead of shift characters to indicate the encoding method. <code dir="ltr">shift_status</code> cannot hold the encoding method information that is provided by the escape sequences for the next function call. As a result, this function cannot be used to reconstruct ISO 2022 character from raw data in a piecewise way unless each unit of input can be guaranteed to be a closed string. A closed string begins and ends in a 7-bit escape state.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18942"></a>Usage Notes</p>
<p>If the user specifies an invalid character set, <code dir="ltr">NULL</code> data, or data whose length is 0, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18943"></a>Examples</p>
<p class="subhead1"><a id="ARPLS71162"></a>Buffer Conversion</p>
<pre dir="ltr">UTL_I18N.RAW_TO_NCHAR(hextoraw(&#39;616263646566C2AA&#39;),&#39;utf8&#39;)
</pre>
<p>This returns the following string in the national character set:</p>
<pre dir="ltr">&#39;abcde&#39;||chr(170)
</pre>
<p class="subhead1"><a id="ARPLS71163"></a>Piecewise Conversion</p>
<pre dir="ltr">UTL_I18N.RAW_TO_NCHAR(hextoraw(&#39;616263646566C2AA&#39;),&#39;utf8&#39;, shf, slen)
</pre>
<p>This expression returns the following string in the national character set:</p>
<pre dir="ltr">&#39;abcde&#39;||chr(170)
</pre>
<p>It also sets <code dir="ltr">shf</code> to <code dir="ltr">SHIFT_IN</code> and <code dir="ltr">slen</code> to <code dir="ltr">8</code>.</p>
<p>The following example converts data from the Internet piece by piece to the national character set.</p>
<pre dir="ltr">rvalue RAW(1050); 
  nvalue NVARCHAR2(1024); 
  converstion_state  PLS_INTEGER = 0; 
  converted_len   PLS_INTEGER; 
  rtemp  RAW(10) = &#39;&#39;; 
  conn   utl_tcp.connection; 
  tlen PLS_INTEGER;

  ... 
  conn := utl_tcp.open_connection ( remote_host =&gt; &#39;localhost&#39;, 
                                    remote_port =&gt; 2000); 
  LOOP 
      tlen := utl_tcp.read_raw(conn, rvalue, 1024); 
      rvalue := utl_raw.concat(rtemp, rvalue); 
      nvalue := utl_i18n.raw_to_nchar(rvalue, &#39;JA16SJIS&#39;, converted_len, conversion_stat); 
      if (converted_len &lt; utl_raw.length(rvalue) ) 
      then 
        rtemp := utl_raw.substr(rvalue, converted_len+1); 
      else 
        rtemp := &#39;&#39;; 
      end if; 
      /* do anything you want with nvalue */ 
      /* e.g htp.prn(nvalue); */ 
    END LOOP; 
    utl_tcp.close_connection(conn); 
  EXCEPTION 
    WHEN utl_tcp.end_of_input THEN 
      utl_tcp.close_connection(conn); 
  END; 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71164" class="refsect2"><a id="i1001698"></a>
<h3 class="refsect2"><a id="sthref18944"></a>STRING_TO_RAW Function</h3>
<p>This function converts a <code dir="ltr">VARCHAR2</code> or <code dir="ltr">NVARCHAR2</code> string to another valid Oracle character set and returns the result as <code dir="ltr">RAW</code> data.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18945"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.STRING_TO_RAW( 
   data          IN VARCHAR2 CHARACTER SET ANY_CS,
   dst_charset   IN VARCHAR2 DEFAULT NULL)
RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18946"></a>Parameters</p>
<div id="ARPLS71165" class="tblformal">
<p class="titleintable"><a id="sthref18947"></a><a id="sthref18948"></a>Table 253-21 STRING_TO_RAW Function Parameters</p>
<table class="cellalignment4330" title="STRING_TO_RAW Function Parameters" summary="This table describes the Parameters of the UTL_I18N.STRING_TO_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t29">Parameter</th>
<th class="cellalignment4328" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t29" headers="r1c1-t29">
<p><code dir="ltr">data</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t29 r1c2-t29">
<p>Specifies the <code dir="ltr">VARCHAR2</code> or <code dir="ltr">NVARCHAR2</code> string to convert.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t29" headers="r1c1-t29">
<p><code dir="ltr">dst_charset</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t29 r1c2-t29">
<p>Specifies the destination character set. If <code dir="ltr">dst_charset</code> is <code dir="ltr">NULL</code>, then the database character set is used for <code dir="ltr">CHAR</code> data and the national character set is used for <code dir="ltr">NCHAR</code> data.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18949"></a>Usage Notes</p>
<p>If the user specifies an invalid character set, a <code dir="ltr">NULL</code> string, or a string whose length is 0, then the function returns a <code dir="ltr">NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18950"></a>Examples</p>
<pre dir="ltr">DECLARE 
    r raw(50); 
    s varchar2(20); 
  BEGIN 
    s:=&#39;abcdef&#39;||chr(170); 
    r:=utl_i18n.string_to_raw(s,&#39;utf8&#39;); 
    dbms_output.put_line(rawtohex(r)); 
  end; 
/ 
</pre>
<p>This returns a hex value of <code dir="ltr">&#39;616263646566C2AA&#39;</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71166" class="refsect2"><a id="CJHBGCAE"></a>
<h3 class="refsect2"><a id="sthref18951"></a>TRANSLITERATE Function</h3>
<p>This function performs script transliteration. In this release, the <code dir="ltr">TRANSLITERATE</code> function only supports Japanese Kana conversion.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18952"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.TRANSLITERATE (
  data IN VARCHAR2 CHARACTER SET ANY_CS,
  name IN VARCHAR2)
RETURN VARCHAR2 CHARACTER SET data%CHARSET;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18953"></a>Parameters</p>
<div id="ARPLS71167" class="tblformal">
<p class="titleintable"><a id="sthref18954"></a><a id="sthref18955"></a>Table 253-22 TRANSLITERATE Function Parameters</p>
<table class="cellalignment4330" title="TRANSLITERATE Function Parameters" summary="This table describes the Parameters of the UTL_I18N.STRING_TO_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t30">Parameter</th>
<th class="cellalignment4328" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t30" headers="r1c1-t30">
<p><code dir="ltr">data</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t30 r1c2-t30">
<p>Specifies the data to be converted. Either <code dir="ltr">CHAR</code> or <code dir="ltr">NCHAR</code> datatype can be specified.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t30" headers="r1c1-t30">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t30 r1c2-t30">
<p>Specifies the transliteration name string. For a list of valid names, see <a href="#CACIJHFB">Table 253-23</a>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18956"></a>Constants</p>
<p>These options specify Japanese Kana conversions.</p>
<div id="ARPLS71168" class="tblformal">
<p class="titleintable"><a id="sthref18957"></a><a id="CACIJHFB"></a>Table 253-23 TRANSLITERATE Function Constants</p>
<table class="cellalignment4330" title="TRANSLITERATE Function Constants" summary="TRANSLITERATE constants" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t31">Constant Name</th>
<th class="cellalignment4328" id="r1c2-t31">Value</th>
<th class="cellalignment4328" id="r1c3-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t31" headers="r1c1-t31">
<p><code dir="ltr">KANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t31 r1c2-t31">
<p><code dir="ltr">&#39;kana_fwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t31 r1c3-t31">
<p>Converts any type of Kana character to a fullwidth Katakana character.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t31" headers="r1c1-t31">
<p><code dir="ltr">KANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t31 r1c2-t31">
<p><code dir="ltr">&#39;kana_hwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t31 r1c3-t31">
<p>Converts any type of Kana character to a halfwidth Katakana character.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t31" headers="r1c1-t31">
<p><code dir="ltr">KANA_HIRAGANA</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t31 r1c2-t31">
<p><code dir="ltr">&#39;kana_hiragana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t31 r1c3-t31">
<p>Converts any type of Kana character to a fullwidth Hiragana character.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t31" headers="r1c1-t31">
<p><code dir="ltr">FWKATAKANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t31 r1c2-t31">
<p><code dir="ltr">&#39;fwkatakana_hwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t31 r1c3-t31">
<p>Converts only fullwidth Katakana characters to halfwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t31" headers="r1c1-t31">
<p><code dir="ltr">FWKATAKANA_HIRAGANA</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t31 r1c2-t31">
<p><code dir="ltr">&#39;fwkatakana_hiragana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t31 r1c3-t31">
<p>Converts only fullwidth Katakana characters to fullwidth Hiragana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t31" headers="r1c1-t31">
<p><code dir="ltr">HWKATAKANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t31 r1c2-t31">
<p><code dir="ltr">&#39;hwkatakana_fwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t31 r1c3-t31">
<p>Converts only halfwidth Katakana characters to fullwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t31" headers="r1c1-t31">
<p><code dir="ltr">HWKATAKANA_HIRAGANA</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t31 r1c2-t31">
<p><code dir="ltr">&#39;hwkatakana_hiragana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t31 r1c3-t31">
<p>Converts only halfwidth Katakana characters to fullwidth Hiragana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t31" headers="r1c1-t31">
<p><code dir="ltr">HIRAGANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t31 r1c2-t31">
<p><code dir="ltr">&#39;hiragana_fwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t31 r1c3-t31">
<p>Converts only fullwidth Hiragana characters to fullwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t31" headers="r1c1-t31">
<p><code dir="ltr">HIRAGANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t31 r1c2-t31">
<p><code dir="ltr">&#39;hiragana_hwkatakana&#39;</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t31 r1c3-t31">
<p>Converts only fullwidth Hiragana characters to halfwidth Katakana characters.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18958"></a>Usage Notes</p>
<p>The function returns the converted string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18959"></a>Examples</p>
<p>Given a table <code dir="ltr">japanese_emp</code>, containing an <code dir="ltr">NVARCHAR2</code> column <code dir="ltr">ename</code>, the following statement can be used to normalize all the kana names in <code dir="ltr">ename</code> to hiragana:</p>
<pre dir="ltr">UPDATE japanese_emp
   SET ename = UTL_I18N.TRANSLITERATE (ename, &#39;kana_hiragana&#39;);
</pre>
<p>Figure shows how this output might look.</p>
<div id="ARPLS71169" class="figure">
<p class="titleinfigure"><a id="i1005928"></a>Figure 253-1 Loading Locale-Specific Data to the Database</p>
<img width="71" height="128" src="img/kana_small_arrow.gif" alt="Description of Figure 253-1 follows"/><br/>
<a id="sthref18960" href="img_text/kana_small_arrow.htm">Description of &#39;&#39;Figure 253-1 Loading Locale-Specific Data to the Database&#39;&#39;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The following statement normalizes one kana name to hiragana:</p>
<pre dir="ltr">DECLARE
   Name  japanese_emp.ename%TYPE;
   Eno   CONSTANT  NUMBER(4) := 1;
BEGIN
   SELECT ename INTO name FROM japanese_emp WHERE enumber = eno;
   name := UTL_I18N.TRANSLITERATE(name, UTL_I18N.KANA_HIRAGANA);
   UPDATE japanese_emp SET ename = name WHERE enumber = eno;
EXCEPTION
   WHEN  UTL_I18N.UNSUPPORTED_TRANSLITERATION THEN
   DBMS_OUTPUT.PUT_LINE(&#39;transliteration not supported&#39;);
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71170" class="refsect2"><a id="i998992"></a>
<h3 class="refsect2"><a id="sthref18961"></a>UNESCAPE_REFERENCE Function</h3>
<p>This function returns a string from an input string that contains character references. It decodes each character reference to the corresponding character value.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1000938">&#34;ESCAPE_REFERENCE Function&#34;</a> for more information about escape sequences</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18962"></a>Syntax</p>
<pre dir="ltr">UTL_I18N.UNESCAPE_REFERENCE ( 
   str IN VARCHAR2 CHARACTER SET ANY_CS)
 RETURN VARCHAR2 CHARACTER SET str%CHARSET;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18963"></a>Parameters</p>
<div id="ARPLS71171" class="tblformal">
<p class="titleintable"><a id="sthref18964"></a><a id="sthref18965"></a>Table 253-24 UNESCAPE_REFERENCE Function Parameters</p>
<table class="cellalignment4330" title="UNESCAPE_REFERENCE Function Parameters " summary="This table describes the Parameters of the UTL_I18N.UNESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t33">Parameter</th>
<th class="cellalignment4328" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t33" headers="r1c1-t33">
<p><code dir="ltr">str</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t33 r1c2-t33">
<p>Specifies the input string</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18966"></a>Usage Notes</p>
<p>If the user specifies a <code dir="ltr">NULL</code> string or a string whose length is 0, then the function returns a <code dir="ltr">NULL</code> string. If the function fails, then it returns the original string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18967"></a>Examples</p>
<pre dir="ltr">UTL_I18N.UNESCAPE_REFERENCE(&#39;hello &amp;lt; &amp;#xe5;&#39;)
</pre>
<p>This returns <code dir="ltr">&#39;hello &lt;&#39;||chr(229)</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="u_http.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="u_inaddr.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>