<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2360"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_STREAMS_ADM"></a><title>DBMS_STREAMS_ADM</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:50Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_streams.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_streams_adv.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">163/290</span> <!-- End Header -->
<div id="ARPLS305" class="chapter"><a id="CDEFIIEG"></a>
<h1 class="chapter"><span class="secnum">159</span> DBMS_STREAMS_ADM</h1>
<p><a id="sthref11277"></a>The <code dir="ltr">DBMS_STREAMS_ADM</code> package, one of a set of Oracle Streams packages, provides subprograms for configuring Oracle Streams environments. This package also includes subprograms for adding and removing simple rules for capture, propagation, apply, and dequeue at the table, schema, and database level. This package also includes subprograms for configuring and managing XStream outbound servers and inbound servers.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CDEBHJGH">Using DBMS_STREAMS_ADM</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Deprecated Subprograms</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Operational Notes</p>
</li>
</ul>
</li>
<li>
<p><a href="#CDEJFACB">Summary of DBMS_STREAMS_ADM Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CDEBHJGH"></a>
<div id="ARPLS68721" class="refsect1">
<h2 class="refsect1">Using DBMS_STREAMS_ADM<a id="sthref11278"></a></h2>
<p>This section contains topics that relate to using the <code dir="ltr">DBMS_STREAMS_ADM</code> package.</p>
<ul>
<li>
<p><a href="#i1027714">Overview</a></p>
</li>
<li>
<p><a href="#CDEHIJCD">Deprecated Subprograms</a></p>
</li>
<li>
<p><a href="#i1024974">Security Model</a></p>
</li>
<li>
<p><a href="#i1024973">Operational Notes</a></p>
</li>
</ul>
<div id="ARPLS68722" class="refsect2"><a id="i1027714"></a>
<h3 class="refsect2">Overview</h3>
<p>The <code dir="ltr">DBMS_STREAMS_ADM</code> package, one of a set of Oracle Streams packages, provides subprograms for configuring an Oracle Streams environment. This package also includes subprograms for adding and removing simple rules for capture, propagation, apply, and dequeue at the table, schema, and database level. These rules support logical change records (LCRs), which include row LCRs and data definition language (DDL) LCRs. This package also contains subprograms for creating message rules for specific message types. This package also contains subprograms for creating queues, and for managing Oracle Streams metadata, such as data dictionary information.</p>
<p>If you require more sophisticated rules, then refer to <a href="d_rule.htm#CHDHAHII">Chapter 138, &#34;DBMS_RULE&#34;</a> package.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<ul>
<li>
<p><a class="olink STRMS" href="../STRMS/toc.htm"><span class="italic">Oracle Streams Concepts and Administration</span></a>, <a class="olink STREP" href="../STREP/toc.htm"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about this package and Oracle Streams</p>
</li>
<li>
<p><a href="d_rule.htm#CHDHAHII">Chapter 138, &#34;DBMS_RULE&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS68723" class="refsect2"><a id="CDEHIJCD"></a>
<h3 class="refsect2">Deprecated Subprograms<a id="sthref11279"></a></h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you do not use deprecated subprograms. Support for deprecated features is for backward compatibility only.</div>
<p>The following subprograms are deprecated with Oracle Database 10<span class="italic">g</span> Release 2 and later:</p>
<ul>
<li>
<p><code dir="ltr">MAINTAIN_SIMPLE_TABLESPACE</code></p>
<p>This procedure is replaced by the <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> procedure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEIFFHH">MAINTAIN_SIMPLE_TTS Procedure</a></div>
</li>
<li>
<p><code dir="ltr">MAINTAIN_TABLESPACES</code></p>
<p>This procedure is replaced by the <code dir="ltr">MAINTAIN_TTS</code> procedure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEFBAEH">MAINTAIN_TTS Procedure</a></div>
</li>
</ul>
</div>
<!-- class="refsect2" -->
<div id="ARPLS68724" class="refsect2"><a id="i1024974"></a>
<h3 class="refsect2">Security Model</h3>
<p>Security on this package can be controlled in either of the following ways:</p>
<ul>
<li>
<p>Granting <code dir="ltr">EXECUTE</code> on this package to selected users or roles.</p>
</li>
<li>
<p>Granting <code dir="ltr">EXECUTE_CATALOG_ROLE</code> to selected users or roles.</p>
</li>
</ul>
<p>If subprograms in the package are run from within a stored procedure, then the user who runs the subprograms must be granted <code dir="ltr">EXECUTE</code> privilege on the package directly. It cannot be granted through a role.</p>
<p>A user is associated with each Oracle Streams client. The following sections describe these users:</p>
<ul>
<li>
<p><a href="#CACCAIFA">Oracle Streams Administrator</a></p>
</li>
<li>
<p><a href="#BABDAGJB">Capture User</a></p>
</li>
<li>
<p><a href="#i1026648">Propagation User</a></p>
</li>
<li>
<p><a href="#BABFIFBD">Apply User for an Oracle Streams Apply Process</a></p>
</li>
<li>
<p><a href="#CIADBJDI">Apply User for an XStream Inbound Server</a></p>
</li>
<li>
<p><a href="#BABDHHDI">Messaging Client User</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The user must be granted additional privileges to perform some administrative tasks using the subprograms in this package, such as creating a synchronous capture. If additional privileges are required for a subprogram, then the privileges are documented in the section that describes the subprogram.</div>
<div id="ARPLS68725" class="refsect3"><a id="CACCAIFA"></a>
<h4 class="refsect3">Oracle Streams Administrator</h4>
<p>To ensure that the user who runs the subprograms in this package has the necessary privileges, configure an Oracle Streams administrator and connect as the Oracle Streams administrator when using this package.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP200" href="../STREP/prep_rep.htm#STREP200"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about configuring an Oracle Streams administrator</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS68726" class="refsect3"><a id="BABDAGJB"></a>
<h4 class="refsect3">Capture User<a id="sthref11280"></a></h4>
<p>The following procedures can create a capture process:</p>
<ul>
<li>
<p><a href="#i1028131">ADD_GLOBAL_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i997270">ADD_SCHEMA_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i1027849">ADD_SUBSET_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i997673">ADD_TABLE_RULES Procedure</a></p>
</li>
</ul>
<p>The following procedures can create a synchronous capture:</p>
<ul>
<li>
<p><a href="#i1027849">ADD_SUBSET_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i997673">ADD_TABLE_RULES Procedure</a></p>
</li>
</ul>
<p>If one of these procedures creates a capture process or a synchronous capture, then it configures the current user as the capture user. The capture user is the user in whose security domain a capture process or synchronous capture captures changes that satisfy its rule set(s) and runs custom rule-based transformations configured for these rules. This user must have the necessary privileges to capture changes. The procedure grants the capture user <code dir="ltr">ENQUEUE</code> privilege on the queue used by the capture process or synchronous capture and configures the user as a secure queue user of the queue.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="d_cap_a.htm#i997066">CREATE_CAPTURE Procedure</a> and <a href="d_cap_a.htm#BGBCAHCG">CREATE_SYNC_CAPTURE Procedure</a> for information about the privileges required to capture changes (refer to the <code dir="ltr">capture_user</code> parameter)</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS68727" class="refsect3"><a id="i1026648"></a>
<h4 class="refsect3">Propagation User<a id="sthref11281"></a></h4>
<p>The following procedures can create a propagation:</p>
<ul>
<li>
<p><a href="#CDEDIEDE">ADD_GLOBAL_PROPAGATION_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i1012741">ADD_MESSAGE_PROPAGATION_RULE Procedure</a></p>
</li>
<li>
<p><a href="#i1010842">ADD_SCHEMA_PROPAGATION_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i1007301">ADD_SUBSET_PROPAGATION_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i997544">ADD_TABLE_PROPAGATION_RULES Procedure</a></p>
</li>
</ul>
<p>When a propagation is created, a propagation job also might be created. If a propagation job is created when one of these procedures is run, then the user who runs the procedure owns the propagation job. Each propagation job is an Oracle Scheduler job. You can adjust the schedule of a propagation job using Oracle Scheduler.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The source queue owner performs the propagation, but the propagation job is owned by the user who creates it. These two users might or might not be the same.</p>
</li>
<li>
<p>For a propagation to work properly, the owner of the source queue must have the necessary privileges to propagate messages.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="d_prop_a.htm#i996840">CREATE_PROPAGATION Procedure</a> for more information about the required privileges</p>
</li>
<li>
<p><a href="#CDEBBFCH">&#34;Propagation Rules for LCRs&#34;</a> for information about when a propagation job is created</p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS68728" class="refsect3"><a id="BABFIFBD"></a>
<h4 class="refsect3">Apply User for an Oracle Streams Apply Process<a id="sthref11282"></a></h4>
<p>The following procedures can create an apply process:</p>
<ul>
<li>
<p><a href="#i1028131">ADD_GLOBAL_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i1012752">ADD_MESSAGE_RULE Procedure</a></p>
</li>
<li>
<p><a href="#i997270">ADD_SCHEMA_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i1027849">ADD_SUBSET_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i997673">ADD_TABLE_RULES Procedure</a></p>
</li>
</ul>
<p>If one of these procedures creates an apply process, then it configures the current user as the apply user. For an apply process, the apply user is the user in whose security domain an apply process dequeues messages that satisfy its rule sets.</p>
<p>An apply user applies messages directly to database objects, runs custom rule-based transformations configured for apply process rules, and runs apply handlers configured for the apply process. This user must have the necessary privileges to apply changes. The procedure grants the apply user <code dir="ltr">DEQUEUE</code> privilege on the queue used by the apply process and configures the user as a secure queue user of the queue.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="d_apply.htm#i997054">CREATE_APPLY Procedure</a> for information about the privileges required to apply changes (refer to the <code dir="ltr">apply_user</code> parameter)</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS73360" class="refsect3"><a id="CIADBJDI"></a>
<h4 class="refsect3">Apply User for an XStream Inbound Server<a id="sthref11283"></a><a id="sthref11284"></a><a id="sthref11285"></a><a id="sthref11286"></a></h4>
<p>The following procedures can create an XStream inbound server:</p>
<ul>
<li>
<p><a href="#i1028131">ADD_GLOBAL_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i997270">ADD_SCHEMA_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i1027849">ADD_SUBSET_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i997673">ADD_TABLE_RULES Procedure</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Oracle recommends using procedures in the <code dir="ltr">DBMS_XSTREAM_ADM</code> package to create or add rules to an XStream inbound server. See <a href="d_xstrm_adm.htm#CACJEJGH">Chapter 204, &#34;DBMS_XSTREAM_ADM&#34;</a>.</p>
</li>
<li>
<p>These procedures cannot create an outbound server.</p>
</li>
</ul>
</div>
<p>If the <code dir="ltr">streams_name</code> parameter is set to <code dir="ltr">NULL</code> and no relevant apply process, inbound server, or outbound server exists, then the procedure creates an apply process automatically with a system-generated name.</p>
<p>The apply process remains an apply process if it receives captured logical change records (LCRs) from a capture process. The apply process can become an inbound server if an XStream client application attaches to it before it receives captured LCRs from a capture process. After the initial contact, an apply process cannot be changed into an inbound server, and an inbound server cannot be changed into an apply process.</p>
<p>If one of these procedures creates an inbound server, then it configures the current user as the apply user. The apply user is the user in whose security domain an XStream client application attaches to an Oracle database.</p>
<p>An apply user applies changes directly to database objects, runs custom rule-based transformations configured for inbound server rules, and runs apply handlers configured for the inbound server. This user must have the necessary privileges to apply changes. The procedure grants the apply user <code dir="ltr">DEQUEUE</code> privilege on the queue used by the inbound server and configures the user as a secure queue user.</p>
<p>Each inbound server must have a unique name. The name cannot be used by an apply process, outbound server, or messaging client in the same database, and the name cannot be used by another inbound server in the same database.</p>
<p>If a relevant apply process, inbound server, or outbound server exists, then the procedure does not create an inbound server. Instead, the procedure uses the relevant apply process, inbound server, or outbound server. If the <code dir="ltr">streams_name</code> parameter specifies an existing apply process, inbound server, or outbound server, then the specified client is used.</p>
<p>When <code dir="ltr">streams_name</code> parameter is <code dir="ltr">NULL</code> and the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">apply</code>, the relevant apply process, inbound server, or outbound server is identified in one of the following ways:</p>
<ul>
<li>
<p>If one existing apply process or outbound server has the source database specified in the <code dir="ltr">source_database</code> parameter and uses the queue specified in the <code dir="ltr">queue_name</code> parameter, then the procedure uses this apply process or outbound server.</p>
</li>
<li>
<p>If the <code dir="ltr">source_database</code> parameter is set to <code dir="ltr">NULL</code> and one existing apply process, inbound server, or outbound server is using the queue specified in the <code dir="ltr">queue_name</code> parameter, then the procedure uses this apply process, inbound server, or outbound server.</p>
</li>
</ul>
<p>If the <code dir="ltr">streams_name</code> parameter is set to <code dir="ltr">NULL</code> and multiple relevant apply processes, inbound servers, or outbound servers exist, then the procedure raises an error.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Using XStream requires purchasing a license for the Oracle GoldenGate product. See <a class="olink XSTRM72545" href="../XSTRM/xstrm_intro.htm#XSTRM72545"><span class="italic">Oracle Database XStream Guide</span></a>.</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS68729" class="refsect3"><a id="BABDHHDI"></a>
<h4 class="refsect3">Messaging Client User<a id="sthref11287"></a></h4>
<p>The following procedures can create a messaging client:</p>
<ul>
<li>
<p><a href="#i1028131">ADD_GLOBAL_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i1012752">ADD_MESSAGE_RULE Procedure</a></p>
</li>
<li>
<p><a href="#i997270">ADD_SCHEMA_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i1027849">ADD_SUBSET_RULES Procedure</a></p>
</li>
<li>
<p><a href="#i997673">ADD_TABLE_RULES Procedure</a></p>
</li>
</ul>
<p>If one of these procedures creates a messaging client, then the user who runs this procedure is granted the privileges to dequeue from the queue using the messaging client. The procedure configures this user as a secure queue user of the queue, and only this user can use the messaging client.</p>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68730" class="refsect2"><a id="i1024973"></a>
<h3 class="refsect2">Operational Notes</h3>
<p>Several procedures in this package create rules for Oracle Streams clients and XStream clients, and several procedures configure an Oracle Streams environment. The following sections provide information about using these procedures:</p>
<ul>
<li>
<p><a href="#CDEBDICH">Procedures That Create Rules for Oracle Streams Clients and XStream Clients</a></p>
</li>
<li>
<p><a href="#CDEJFABB">Procedures That Configure an Oracle Streams Environment</a></p>
</li>
</ul>
<div id="ARPLS68731" class="refsect3"><a id="CDEBDICH"></a>
<h4 class="refsect3">Procedures That Create Rules for Oracle Streams Clients and XStream Clients<a id="sthref11288"></a></h4>
<p>Oracle Streams clients include capture processes, synchronous captures, propagations, apply processes, and messaging clients. XStream clients include XStream outbound servers and inbound servers. Some of the procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package add rules to the rule sets of Oracle Streams clients and XStream clients. The rules can pertain to changes in the redo log, to data manipulation language (DML) changes made to a table, to logical change records (LCRs), or to user messages.</p>
<p>An LCR represents either a row change that results from a DML operation or a data definition language (DDL) change. An LCR that represents a row change is a row LCR, and an LCR that represents a DDL change is a DDL LCR. LCRs can either represent changes that were captured by a capture process or a synchronous capture, or they can represent changes created by a user or application. A user message is a custom message that is based on a user-defined type and created by users or applications.</p>
<p>A capture process, propagation, apply process, messaging client, outbound server, or inbound server can have both positive and negative rule sets. A synchronous capture can have only a positive rule set.</p>
<p>For all of the procedures except the ones that create subset rules, and for all clients except for synchronous captures, you use the <code dir="ltr">inclusion_rule</code> parameter to specify the type of rule set (either positive or negative) for the created rules. If the client does not have a rule set of the specified type, then a rule set is created automatically, and the rules are added to the rule set. Other rules in an existing rule set for the client are not affected. Additional rules can be added to a rule set using either the <code dir="ltr">DBMS_STREAMS_ADM</code> package or the <code dir="ltr">DBMS_RULE_ADM</code> package. If an client has both a positive and a negative rule set, then the negative rule set is always evaluated first.</p>
<p>The following sections describe each type of rule in detail:</p>
<ul>
<li>
<p><a href="#i1023683">Capture Process Rules for Changes in the Redo Log</a></p>
</li>
<li>
<p><a href="#CDEFFFFC">Synchronous Capture Rules for DML Changes to Tables</a></p>
</li>
<li>
<p><a href="#CDEBBFCH">Propagation Rules for LCRs</a></p>
</li>
<li>
<p><a href="#CDEBDIFE">Propagation Rules for User Messages</a></p>
</li>
<li>
<p><a href="#i1023716">Apply Process Rules for LCRs</a></p>
</li>
<li>
<p><a href="#i1024656">Apply Process Rules for User Messages</a></p>
</li>
<li>
<p><a href="#i1023717">Messaging Client Rules for LCRs</a></p>
</li>
<li>
<p><a href="#i1024657">Messaging Client Rules for User Messages</a></p>
</li>
<li>
<p><a href="#CIABJICG">XStream Outbound Server Rules for LCRs</a></p>
</li>
<li>
<p><a href="#CIADDAJJ">XStream Inbound Server Rules for LCRs</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Using XStream requires purchasing a license for the Oracle GoldenGate product. See <a class="olink XSTRM72545" href="../XSTRM/xstrm_intro.htm#XSTRM72545"><span class="italic">Oracle Database XStream Guide</span></a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS006" href="../STRMS/strms_rules.htm#STRMS006"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about how rules are used in Oracle Streams</div>
<div id="ARPLS68732" class="refsect4"><a id="i1023683"></a>
<h5 class="refsect4">Capture Process Rules for Changes in the Redo Log<a id="sthref11289"></a></h5>
<p>The following procedures add rules to a rule set of a capture process when you specify <code dir="ltr">capture</code> for the <code dir="ltr">streams_type</code> parameter:</p>
<ul>
<li>
<p>The <code dir="ltr">ADD_GLOBAL_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for all changes made to a source database. See <a href="#i1028131">ADD_GLOBAL_RULES Procedure</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SCHEMA_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for changes made to a specified schema. See <a href="#i997270">ADD_SCHEMA_RULES Procedure</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for DML changes made to a subset of rows in a specified table. See <a href="#i1027849">ADD_SUBSET_RULES Procedure</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_TABLE_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for changes made to a specified table. See <a href="#i997673">ADD_TABLE_RULES Procedure</a>.</p>
</li>
</ul>
<p>If one of these procedures adds rules to the positive rule set for a capture process, then the capture process captures row changes resulting from DML changes, or DDL changes, or both from a source database and enqueues these changes into the specified queue. If one of these procedures adds rules to the negative rule set for a capture process, then the capture process discards row changes, or DDL changes, or both from a source database.</p>
<p>A capture process can capture changes locally at a source database or remotely at a downstream database. Therefore, for capture process rules, you should execute the procedure either at the source database or at a downstream database.</p>
<p>If the capture process is a local capture process, or if the capture process is a downstream capture process that uses a database link to the source database, then these procedures automatically prepare the appropriate database objects for instantiation:</p>
<ul>
<li>
<p><code dir="ltr">ADD_GLOBAL_RULES</code> invokes the <code dir="ltr">PREPARE_GLOBAL_INSTANTIATION</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package at the source database.</p>
</li>
<li>
<p><code dir="ltr">ADD_SCHEMA_RULES</code> invokes the <code dir="ltr">PREPARE_SCHEMA_INSTANTIATION</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package at the source database.</p>
</li>
<li>
<p><code dir="ltr">ADD_SUBSET_RULES</code> and <code dir="ltr">ADD_TABLE_RULES</code> invoke the <code dir="ltr">PREPARE_TABLE_INSTANTIATION</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package at the source database.</p>
</li>
</ul>
<p>These procedures also enable supplemental logging for the primary key, unique key, foreign key, and bitmap index columns in the tables prepared for instantiation. The primary key columns are unconditionally logged. The unique key, foreign key, and bitmap index columns are conditionally logged.</p>
<p>If the capture process is a downstream capture process that does not use a database link to the source database, then you must prepare the appropriate objects for instantiation and specify the necessary supplemental logging manually at the source database.</p>
<p>If one of these procedures is executed at a downstream database, then you specify the source database using the <code dir="ltr">source_database</code> parameter, and the specified capture process must exist. The procedure cannot create a capture process if it is run at a downstream database. You can create a capture process at a downstream database using the <code dir="ltr">CREATE_CAPTURE</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="d_cap_a.htm#BGBHHBDD">Chapter 34, &#34;Summary of DBMS_CAPTURE_ADM Subprograms&#34;</a> for more information about the <code dir="ltr">CREATE_CAPTURE</code> procedure and the procedures that prepare database objects for instantiation</div>
<br/></div>
<!-- class="refsect4" -->
<div id="ARPLS68733" class="refsect4"><a id="CDEFFFFC"></a>
<h5 class="refsect4">Synchronous Capture Rules for DML Changes to Tables<a id="sthref11290"></a></h5>
<p>The following procedures add rules to the rule set of a synchronous capture when you specify <code dir="ltr">sync_capture</code> for the <code dir="ltr">streams_type</code> parameter:</p>
<ul>
<li>
<p>The <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for DML changes made to a subset of rows in a specified table. See <a href="#i1027849">ADD_SUBSET_RULES Procedure</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_TABLE_RULES</code> procedure adds a rule whose rule condition evaluates to <code dir="ltr">TRUE</code> for DML changes made to a specified table. See <a href="#i997673">ADD_TABLE_RULES Procedure</a>.</p>
</li>
</ul>
<p>If one of these procedures adds rules to the positive rule set for a synchronous capture, then the synchronous capture captures row changes resulting from DML changes to the table at the source database and enqueues these changes into the specified queue. A synchronous capture cannot have a negative rule set.</p>
<p>A synchronous capture captures changes locally at the database where it is configured. This database is the source database for changes captured by the synchronous capture. Therefore, for synchronous capture rules, you should execute the procedure at the source database.</p>
<p>These procedures automatically prepare the appropriate tables for instantiation by invoking the <code dir="ltr">PREPARE_SYNC_INSTANTIATION</code> function in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package at the source database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>A synchronous capture ignores rules in its rule set that were created by a procedure other than <code dir="ltr">ADD_SUBSET_RULES</code> or <code dir="ltr">ADD_TABLE_RULES</code>.</p>
</li>
<li>
<p>When the <code dir="ltr">ADD_TABLE_RULES</code> or the <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds rules to a synchronous capture rule set, the procedure must obtain an exclusive lock on the specified table. If there are outstanding transactions on the specified table, then the procedure waits until it can obtain a lock.</p>
</li>
</ul>
</div>
<br/></div>
<!-- class="refsect4" -->
<div id="ARPLS68734" class="refsect4"><a id="CDEBBFCH"></a>
<h5 class="refsect4">Propagation Rules for LCRs<a id="sthref11291"></a></h5>
<p>The following procedures add propagation rules for LCRs to a rule set of a propagation:</p>
<ul>
<li>
<p>The <code dir="ltr">ADD_GLOBAL_PROPAGATION_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for all LCRs in a source queue. See <a href="#CDEDIEDE">ADD_GLOBAL_PROPAGATION_RULES Procedure</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SCHEMA_PROPAGATION_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for LCRs in a source queue containing changes made to a specified schema. See <a href="#i1010842">ADD_SCHEMA_PROPAGATION_RULES Procedure</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SUBSET_PROPAGATION_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for row LCRs in a source queue containing the results of DML changes made to a subset of rows in a specified table. See <a href="#i1007301">&#34;ADD_SUBSET_PROPAGATION_RULES Procedure&#34;</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_TABLE_PROPAGATION_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for LCRs in a source queue containing changes made to a specified table. See <a href="#i997544">&#34;ADD_TABLE_PROPAGATION_RULES Procedure&#34;</a>.</p>
</li>
</ul>
<p>If one of these procedures adds rules to the positive rule set for the propagation, then the rules specify that the propagation propagates LCRs in a source queue to a destination queue. If one of these procedures adds rules to the negative rule set for the propagation, then the rules specify that the propagation discards LCRs in a source queue. When you create rules with one of these procedures, and you specify a value for the <code dir="ltr">source_databse</code> parameter, then the rules include conditions for the specified source database.</p>
<br/></div>
<!-- class="refsect4" -->
<div id="ARPLS68735" class="refsect4"><a id="CDEBDIFE"></a>
<h5 class="refsect4">Propagation Rules for User Messages<a id="sthref11292"></a></h5>
<p>The <code dir="ltr">ADD_MESSAGE_PROPAGATION_RULE</code> procedure adds a message rule to a rule set of a propagation. If this procedure adds a rule to the positive rule set for the propagation, then the rule specifies that the propagation propagates the user messages of a specific message type that evaluate to <code dir="ltr">TRUE</code> for the rule condition from a source queue to a destination queue. If this procedure adds a rule to the negative rule set for the propagation, then the rule specifies that the propagation discards the user messages in a source queue of a specific message type that evaluate to <code dir="ltr">TRUE</code> for the rule condition. This procedure generates a rule name for the rule.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1012741">&#34;ADD_MESSAGE_PROPAGATION_RULE Procedure&#34;</a></div>
<br/></div>
<!-- class="refsect4" -->
<div id="ARPLS68736" class="refsect4"><a id="i1023716"></a>
<h5 class="refsect4">Apply Process Rules for LCRs<a id="sthref11293"></a></h5>
<p>The following procedures add rules to a rule set of an apply process when you specify <code dir="ltr">apply</code> for the <code dir="ltr">streams_type</code> parameter and an apply process for the <code dir="ltr">streams_name</code> parameter:</p>
<ul>
<li>
<p>The <code dir="ltr">ADD_GLOBAL_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for all LCRs in the apply process&#39;s queue. See <a href="#i1028131">&#34;ADD_GLOBAL_RULES Procedure&#34;</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SCHEMA_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for LCRs in the apply process&#39;s queue containing changes made to a specified schema. See <a href="#i997270">&#34;ADD_SCHEMA_RULES Procedure&#34;</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for row LCRs in the apply process&#39;s queue containing the results of DML changes made to a subset of rows in a specified table. See <a href="#i1027849">&#34;ADD_SUBSET_RULES Procedure&#34;</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_TABLE_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for LCRs in the apply process&#39;s queue containing changes made to a specified table. See <a href="#i997673">&#34;ADD_TABLE_RULES Procedure&#34;</a>.</p>
</li>
</ul>
<p>If one of these procedures adds rules to the positive rule set for the apply process, then the rules specify that the apply process applies LCRs in its queue. If one of these procedures adds rules to the negative rule set for the apply process, then the rules specify that the apply process discards LCRs in its queue. For apply process rules, you should execute these procedures at the destination database.</p>
<p>Changes applied by an apply process created by one of these procedures generate tags in the redo log at the destination database with a value of <code dir="ltr">&#39;00&#39;</code> (double zero). You can use the <code dir="ltr">ALTER_APPLY</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package to alter the tag value after the apply process is created, if necessary.</p>
<p>An apply process can apply captured LCRs from only one source database. If one of these procedures creates an apply process, then specify the source database for the apply process using the <code dir="ltr">source_database</code> parameter. If the <code dir="ltr">source_database</code> parameter is <code dir="ltr">NULL</code>, and one of these procedures creates an apply process, then the source database name of the first LCR received by the apply process is used for the source database.</p>
<p>The rules in the apply process rule sets determine which messages are dequeued by the apply process. When you create rules with one of these procedures, and you specify a value for the <code dir="ltr">source_database</code> parameter, then the rules include conditions for the specified source database. If the apply process dequeues an LCR with a source database that is different from the source database for the apply process, then an error is raised. In addition, when adding rules to an existing apply process, the database specified in the <code dir="ltr">source_database</code> parameter cannot be different from the source database for the apply process. You can determine the source database for an apply process by querying the <code dir="ltr">DBA_APPLY_PROGRESS</code> data dictionary view.</p>
<p>An apply process created by one of these procedures can apply messages only at the local database and can apply only captured messages. To create an apply process that applies messages at a remote database or an apply process that applies user messages, use the <code dir="ltr">CREATE_APPLY</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package.</p>
<p>You can also use the <code dir="ltr">DBMS_APPLY_ADM.CREATE_APPLY</code> procedure to specify nondefault values for the <code dir="ltr">apply_captured</code>, <code dir="ltr">apply_user</code>, <code dir="ltr">apply_database_link</code>, and <code dir="ltr">apply_tag</code> parameters when you run that procedure. You can use one of the procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to add rules to a rule set used by the apply process after you create it.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="d_apply.htm#BGBGGBJJ">&#34;ALTER_APPLY Procedure&#34;</a></p>
</li>
<li>
<p><a href="d_apply.htm#i997054">&#34;CREATE_APPLY Procedure&#34;</a></p>
</li>
</ul>
</div>
<br/></div>
<!-- class="refsect4" -->
<div id="ARPLS68737" class="refsect4"><a id="i1024656"></a>
<h5 class="refsect4">Apply Process Rules for User Messages<a id="sthref11294"></a></h5>
<p>The <code dir="ltr">ADD_MESSAGE_RULE</code> procedure adds a message rule to a rule set of an apply process when you specify <code dir="ltr">apply</code> for the <code dir="ltr">streams_type</code> parameter. For an apply process rule, you should execute this procedure at the destination database.</p>
<p>If this procedure adds a rule to the positive rule set for an apply process, then the apply process dequeues user messages of a specific message type that satisfy the apply process rule and sends these messages to its message handler. If no message handler is specified for the apply process, then use the <code dir="ltr">ALTER_APPLY</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package to set the message handler. If this procedure adds a rule to the negative rule set for an apply process, then the apply process discards user messages of a specific message type that satisfy the apply process rule.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1012752">ADD_MESSAGE_RULE Procedure</a></p>
</li>
<li>
<p><a href="d_apply.htm#BGBGGBJJ">ALTER_APPLY Procedure</a></p>
</li>
</ul>
</div>
<br/></div>
<!-- class="refsect4" -->
<div id="ARPLS68738" class="refsect4"><a id="i1023717"></a>
<h5 class="refsect4">Messaging Client Rules for LCRs<a id="sthref11295"></a></h5>
<p>The following procedures add rules to a rule set of a messaging client when you specify <code dir="ltr">dequeue</code> for the <code dir="ltr">streams_type</code> parameter:</p>
<ul>
<li>
<p>The <code dir="ltr">ADD_GLOBAL_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for all LCRs in the messaging client&#39;s queue. See <a href="#i1028131">&#34;ADD_GLOBAL_RULES Procedure&#34;</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SCHEMA_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for LCRs in the messaging client&#39;s queue containing changes made to a specified schema. See <a href="#i997270">&#34;ADD_SCHEMA_RULES Procedure&#34;</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for row LCRs in the messaging client&#39;s queue containing the results of DML changes made to a subset of rows in a specified table. See <a href="#i1027849">&#34;ADD_SUBSET_RULES Procedure&#34;</a>.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_TABLE_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for LCRs in the messaging client&#39;s queue containing changes made to a specified table. See <a href="#i997673">&#34;ADD_TABLE_RULES Procedure&#34;</a>.</p>
</li>
</ul>
<p>If one of these procedures adds rules to the positive rule set for a messaging client, then the messaging client can dequeue persistent row LCRs, or DDL LCRs, or both that originated at the source database that matches the <code dir="ltr">source_database</code> parameter. If one of these procedures adds rules to the negative rule set for a messaging client, then the messaging client discards persistent row LCRs, or DDL LCRs, or both that originated at the source database that matches the <code dir="ltr">source_database</code> parameter. You should execute these procedures at the database where you want to dequeue the messages with the messaging client.</p>
<br/></div>
<!-- class="refsect4" -->
<div id="ARPLS68739" class="refsect4"><a id="i1024657"></a>
<h5 class="refsect4">Messaging Client Rules for User Messages<a id="sthref11296"></a></h5>
<p>The <code dir="ltr">ADD_MESSAGE_RULE</code> procedure adds a message rule to a rule set of a messaging client when you specify <code dir="ltr">dequeue</code> for the <code dir="ltr">streams_type</code> parameter. You should execute this procedure at the database that will dequeue messages.</p>
<p>If this procedure adds a rule to the positive rule set for a messaging client, then the messaging client dequeues user messages of a specific message type that satisfy the message rule. If this procedure adds a rule to the negative rule set for a messaging client, then the messaging client discards user messages of a specific message type that satisfy the message rule.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1012752">&#34;ADD_MESSAGE_RULE Procedure&#34;</a></div>
<br/></div>
<!-- class="refsect4" -->
<div id="ARPLS73361" class="refsect4"><a id="CIABJICG"></a>
<h5 class="refsect4">XStream Outbound Server Rules for LCRs<a id="sthref11297"></a><a id="sthref11298"></a><a id="sthref11299"></a></h5>
<p>When you specify <code dir="ltr">apply</code> for the <code dir="ltr">streams_type</code> parameter and an XStream outbound server for the <code dir="ltr">streams_name</code> parameter, the following procedures add rules to a rule set of the specified outbound server:</p>
<ul>
<li>
<p>The <code dir="ltr">ADD_GLOBAL_RULES</code> procedure adds rules whose rule conditions evaluate to <code dir="ltr">TRUE</code> for all LCRs.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SCHEMA_RULES</code> procedure adds rules whose rule conditions evaluate to <code dir="ltr">TRUE</code> for LCRs that contain changes made to a specified schema.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds rules whose rule conditions evaluate to <code dir="ltr">TRUE</code> for row LCRs that contain the results of DML changes made to a subset of rows in a specified table.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_TABLE_RULES</code> procedure adds rules whose rule conditions evaluate to <code dir="ltr">TRUE</code> for LCRs that contain changes made to a specified table.</p>
</li>
</ul>
<p>These rules are evaluated against LCRs in the outbound server&#39;s queue.</p>
<p>If one of the preceding procedures adds rules to the positive rule set for the outbound server, then the rules specify that the outbound server sends LCRs in its queue to the XStream client application. If one of these procedures adds rules to the negative rule set for the outbound server, then the rules specify that the outbound server discards LCRs in its queue. For outbound server rules, execute these procedures at the database to which the XStream client application attaches.</p>
<p>An outbound server can process captured LCRs from only one source database. The source database is the database where the changes originated. If one of these procedures adds rules to the rule set of an outbound server, then specify the source database for the outbound server using the <code dir="ltr">source_database</code> parameter.</p>
<p>The rules in the outbound server&#39;s rule sets determine which LCRs are dequeued by the outbound server. When you create rules with one of these procedures, and you specify a value for the <code dir="ltr">source_database</code> parameter, then the rules include conditions for the specified source database. If the outbound server dequeues an LCR with a source database that is different from the source database for the outbound server, then an error is raised. In addition, when adding rules to an existing outbound server, the database specified in the <code dir="ltr">source_database</code> parameter cannot be different from the source database for the outbound server. You can determine the source database for an outbound server by querying the <code dir="ltr">DBA_XSTREAM_OUTBOUND</code> data dictionary view.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
These procedures cannot create an XStream outbound server. You can use one of the procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to add rules to a rule set used by the outbound server after you create it.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink XSTRM1496" href="../XSTRM/xstrm_xout_config.htm#XSTRM1496"><span class="italic">Oracle Database XStream Guide</span></a> for information about creating an outbound server</div>
<div id="ARPLS73362" class="refsect4"><a id="CIADDAJJ"></a>
<h5 class="refsect4">XStream Inbound Server Rules for LCRs<a id="sthref11300"></a><a id="sthref11301"></a><a id="sthref11302"></a></h5>
<p>When you specify <code dir="ltr">apply</code> for the <code dir="ltr">streams_type</code> parameter and an XStream inbound server for the <code dir="ltr">streams_name</code> parameter, the following procedures add rules to a rule set of the specified inbound server:</p>
<ul>
<li>
<p>The <code dir="ltr">ADD_GLOBAL_RULES</code> procedure adds rules whose rule conditions evaluate to <code dir="ltr">TRUE</code> for all LCRs sent to the inbound server.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SCHEMA_RULES</code> procedure adds rules whose rule conditions evaluate to <code dir="ltr">TRUE</code> for LCRs sent to the inbound server that contain changes made to a specified schema.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for row LCRs sent to the inbound server that contain the results of data definition language (DML) changes made to a subset of rows in a specified table.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_TABLE_RULES</code> procedure adds rules whose rule condition evaluates to <code dir="ltr">TRUE</code> for LCRs sent to the inbound server that contain changes made to a specified table.</p>
</li>
</ul>
<p>If one of the preceding procedures adds rules to the positive rule set for the inbound server, then the rules specify that the inbound server applies LCRs sent to it by the XStream client application. If one of these procedures adds rules to the negative rule set for the inbound server, then the rules specify that the inbound server discards LCRs sent to it by the XStream client application. For inbound server rules, execute these procedures at the database to which the XStream client application attaches. If an inbound server has no rule sets, then it applies all of the LCRs sent to it by the XStream client application.</p>
<p>Changes applied by an inbound server created by one of these procedures generate tags in the redo log at the destination database with a value of <code dir="ltr">&#39;00&#39;</code> (double zero). You can use the <code dir="ltr">ALTER_APPLY</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package to alter the tag value after the inbound server is created, if necessary.</p>
<p>The rules in the XStream inbound server rule sets determine which LCRs are either applied or discarded after the LCRs are received from the XStream client application. An inbound server can only process LCRs sent from an XStream client application.</p>
<p>When one of these procedures creates rules for an inbound server, the procedure ignores the <code dir="ltr">source_database</code> parameter.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the name specified in the <code dir="ltr">streams_name</code> parameter does not exist, then these procedures always create an apply process. The apply process remains an apply process if it receives captured LCRs from a capture process. The apply process can become an inbound server if an XStream client application attaches to it before it receives LCRs from a capture process. After the initial contact, an apply process cannot be changed into an inbound server, and an inbound server cannot be changed into an apply process.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink XSTRM72713" href="../XSTRM/xstrm_xin_config.htm#XSTRM72713"><span class="italic">Oracle Database XStream Guide</span></a> for information about creating an inbound server</div>
<br/></div>
<!-- class="refsect4" -->
<br/></div>
<!-- class="refsect4" --></div>
<!-- class="refsect3" -->
<div id="ARPLS878" class="refsect3"><a id="CDEJFABB"></a>
<h4 class="refsect3">Procedures That Configure an Oracle Streams Environment<a id="sthref11303"></a><a id="sthref11304"></a></h4>
<p>The following procedures in this package configure an environment that is maintained by Oracle Streams:</p>
<ul>
<li>
<p><a href="#CACBEIJI">MAINTAIN_CHANGE_TABLE Procedure</a> configures an Oracle Streams environment that records in a change table the data manipulation language (DML) changes made to a source table. Optionally, this procedure can also configure one-way replication of the table from the source database to the destination database.</p>
</li>
<li>
<p><a href="#CDEGDDEG">MAINTAIN_GLOBAL Procedure</a> configures an Oracle Streams environment that replicates changes at the database level between two databases.</p>
</li>
<li>
<p><a href="#CDEDAJEB">MAINTAIN_SCHEMAS Procedure</a> configures an Oracle Streams environment that replicates changes to specified schemas between two databases.</p>
</li>
<li>
<p><a href="#CDEIFFHH">MAINTAIN_SIMPLE_TTS Procedure</a> clones a simple tablespace from a source database at a destination database and configures an Oracle Streams environment that replicates changes to specified tablespace between these two databases.</p>
</li>
<li>
<p><a href="#CDEDADAI">MAINTAIN_TABLES Procedure</a> configures an Oracle Streams environment that replicates changes to specified tables between two databases.</p>
</li>
<li>
<p><a href="#CDEFBAEH">MAINTAIN_TTS Procedure</a> clones a set of tablespaces from a source database at a destination database and configures an Oracle Streams environment that replicates changes to specified tablespaces between these two databases.</p>
</li>
<li>
<p><a href="#CDEGDHBC">PRE_INSTANTIATION_SETUP Procedure</a> and <a href="#CDEBEJFE">POST_INSTANTIATION_SETUP Procedure</a></p>
</li>
</ul>
<p>The <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures must be used together to complete the Oracle Streams replication configuration. Typically, the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures are used to perform database maintenance operations with little or no down time. See <a class="olink STRMS165" href="../STRMS/ap_strmnt.htm#STRMS165"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information.</p>
<p>The following sections contain information about using these procedures:</p>
<ul>
<li>
<p><a href="#CDEGFEEC">Automatic Platform Conversion</a></p>
</li>
<li>
<p><a href="#CDEEDEBF">Actions Performed by These Procedures</a></p>
</li>
<li>
<p><a href="#CDEEFGAC">Configuration Progress and Recoverability</a></p>
</li>
<li>
<p><a href="#CDEJJJIF">Requirements for Running These Procedures</a></p>
</li>
<li>
<p><a href="#CDEDCHFF">Common Parameters for the Configuration Procedures</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP020" href="../STREP/config_simple.htm#STREP020"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about using these procedures</div>
<p class="subhead2"><a id="CDEGFEEC"></a><a id="ARPLS68740"></a>Automatic Platform Conversion</p>
<p>If the source and destination databases run on different platforms, then these procedures, or the scripts generated by these procedures, convert transferred datafiles to the appropriate platform automatically.</p>
<p class="subhead2"><a id="CDEEDEBF"></a><a id="ARPLS68741"></a>Actions Performed by These Procedures</p>
<p>To view all of the actions performed by one of these procedures in detail, use the procedure to generate a script, and view the script in a text editor.</p>
<p class="subhead2"><a id="CDEEFGAC"></a><a id="ARPLS68742"></a>Configuration Progress and Recoverability</p>
<p>When one of these procedures is run with the <code dir="ltr">perform_actions</code> parameter set to <code dir="ltr">TRUE</code>, metadata about its configuration actions is recorded in the following data dictionary views: <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_PARAMS</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_BLOCKS</code>, and <code dir="ltr">DBA_RECOVERABLE_SCRIPT_ERRORS</code>. If the procedure stops because it encounters an error, then you can use the <code dir="ltr">RECOVER_OPERATION</code> procedure to complete the configuration after you correct the conditions that caused the error.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When one of these procedures is run with the <code dir="ltr">perform_actions</code> parameter set to <code dir="ltr">FALSE</code>, these views are not populated. Also, the views are not populated when a script generated by one of these procedures is run.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEIFBGC">&#34;RECOVER_OPERATION Procedure&#34;</a></div>
<p class="subhead2"><a id="CDEJJJIF"></a><a id="ARPLS68743"></a>Requirements for Running These Procedures</p>
<p>Meet the following requirements when you use one of these procedures:</p>
<ul>
<li>
<p>Run the procedure at the capture database. The capture database is the database that will contain the capture process that captures changes made to the source database. If the capture database is the same as the source database, then a local capture process is configured. If the capture database is different from the source database, then a downstream capture process is configured. See <a class="olink STREP225" href="../STREP/prep_rep.htm#STREP225"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about the capture database.</p>
</li>
<li>
<p>The user who runs the procedure must be able to use a database link from the source database to the destination database. This database link should have the same name as the global name of the destination database.</p>
</li>
<li>
<p>If the procedure configures downstream capture, then the corresponding user at the capture database must be able to use a database link to access the source database. This database link should have the same name as the global name of the source database.</p>
</li>
<li>
<p>If the procedure configures downstream capture, and the capture database is different from the destination database, then the corresponding user at the capture database must be able to use a database link to access the destination database. This database link should have the same name as the global name of the destination database.</p>
</li>
<li>
<p>Both databases must be open during configuration. If the procedure is generating a script only, then the database specified in the <code dir="ltr">destination_database</code> parameter does not need to be open when you run the procedure, but both databases must be open when you run the generated script.</p>
</li>
<li>
<p>Grant the user who runs the procedure the <code dir="ltr">DBA</code> role. This user must have the necessary privileges to complete the following actions:</p>
<ul>
<li>
<p>Create <code dir="ltr">ANYDATA</code> queues, capture processes, propagations, and apply processes.</p>
</li>
<li>
<p>Specify supplemental logging</p>
</li>
<li>
<p>Run subprograms in the <code dir="ltr">DBMS_STREAMS_ADM</code> and <code dir="ltr">DBMS_AQADM</code> packages.</p>
</li>
<li>
<p>Access the database specified in the <code dir="ltr">destination_database</code> parameter through a database link. This database link should have the same name as the global name of the destination database.</p>
</li>
</ul>
<p>Typically, the <code dir="ltr">DBA</code> role can be revoked from the user, if necessary, after the configuration is complete.</p>
</li>
<li>
<p>The procedure, or the scripts generated by these procedure, must be run at an Oracle Database 10<span class="italic">g</span> Release 2 or later database.</p>
</li>
<li>
<p>If the <code dir="ltr">perform_actions</code> parameter is set to <code dir="ltr">TRUE</code> in the procedure to configure the Oracle Streams environment directly, then all of the databases configured by the procedure must be Oracle Database 10<span class="italic">g</span> Release 2 or later databases.</p>
</li>
<li>
<p>If the <code dir="ltr">perform_actions</code> parameter is set to <code dir="ltr">FALSE</code> in the procedure, and the environment is configured with a generated script, then the databases configured by the script must be Oracle Database 10<span class="italic">g</span> Release&nbsp;1 or later databases. If the script configures an Oracle Database 10<span class="italic">g</span> Release 1 database, then the script must be modified so that it does not configure features that are available only in Oracle Database 10<span class="italic">g</span> Release 2 or later, such as queue-to-queue propagation.</p>
</li>
<li>
<p>Each specified directory object must be created using the SQL statement <code dir="ltr">CREATE</code> <code dir="ltr">DIRECTORY</code>, and the user who invokes the procedure must have <code dir="ltr">READ</code> and <code dir="ltr">WRITE</code> privilege on each one.</p>
</li>
<li>
<p>For procedures that include the <code dir="ltr">bi_directional</code> parameter, if the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, or if the source database is not the capture database, then the <code dir="ltr">source_database</code> parameter must specify a database that contains the database objects to be shared. The database specified in the <code dir="ltr">destination_database</code> parameter might or might not contain these database objects. If the destination database does not contain the shared database objects, then the procedure instantiates the database objects at the destination database (excluding the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures).</p>
</li>
<li>
<p>For procedures that include the <code dir="ltr">bi_directional</code> parameter, if the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code> or if a network instantiation will be performed, then the corresponding user at the destination database must be able to use a database link to access the source database. This database link should have the same name as the global name of the source database.</p>
</li>
</ul>
<p>To ensure that the user who runs these procedures has the necessary privileges, you should configure an Oracle Streams administrator at each database, and each database link should be should be created in the Oracle Streams administrator&#39;s schema.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP200" href="../STREP/prep_rep.htm#STREP200"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about configuring an Oracle Streams administrator</div>
<p class="subhead2"><a id="CDEDCHFF"></a><a id="ARPLS68744"></a>Common Parameters for the Configuration Procedures</p>
<p><a href="#CDEIJEAA">Table 159-1</a> describes the common parameters for the procedures in this package that configure an Oracle Streams environment. Some of the procedures do not include all of the parameters in <a href="#CDEIJEAA">Table 159-1</a>.</p>
<div id="ARPLS68745" class="tblformal">
<p class="titleintable"><a id="sthref11305"></a><a id="CDEIJEAA"></a>Table 159-1 Common Parameters for Configuration Procedures</p>
<table class="cellalignment4330" title="Common Parameters for Configuration Procedures" summary="This table describes the common parameters for the procedures that configure a Streams replication environment in the DBMS_STREAMS_ADM package." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t30">Parameter</th>
<th class="cellalignment4328" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t30" headers="r1c1-t30">
<p><code dir="ltr">perform_actions</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t30 r1c2-t30">
<p>If <code dir="ltr">TRUE</code>, then the procedure performs the necessary actions to configure the environment directly.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not perform the necessary actions to configure the environment directly.</p>
<p>Specify <code dir="ltr">FALSE</code> when this procedure is generating a script that you can edit and then run. The procedure raises an error if you specify <code dir="ltr">FALSE</code> and either of the following parameters is <code dir="ltr">NULL</code>:</p>
<ul>
<li>
<p><code dir="ltr">script_name</code></p>
</li>
<li>
<p><code dir="ltr">script_directory_object</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t30" headers="r1c1-t30">
<p><code dir="ltr">script_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t30 r1c2-t30">
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then specify the name of the script generated by this procedure. The script contains all of the statements used to configure the environment. If a file with the specified script name exists in the specified directory for the <code dir="ltr">script_directory_object</code> parameter, then the procedure appends the statements to the existing file.</p>
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then the procedure generates the specified script and performs the actions to configure the environment directly.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then the procedure performs the actions to configure the environment directly and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t30" headers="r1c1-t30">
<p><code dir="ltr">script_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t30 r1c2-t30">
<p>The directory object for the directory on the local computer system into which the generated script is placed.</p>
<p>If the <code dir="ltr">script_name</code> parameter is <code dir="ltr">NULL</code>, then the procedure ignores this parameter and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">script_name</code> parameter is non-<code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t30" headers="r1c1-t30">
<p><code dir="ltr">capture_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t30 r1c2-t30">
<p>The name of each capture process configured to capture changes. Do not specify an owner. If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then each capture process created by this procedure has the specified name.</p>
<p>If the specified name matches the name of an existing capture process, then the procedure uses the existing capture process and adds the rules for capturing changes to the database to the positive capture process rule set.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for each capture process it creates.</p>
<p><span class="bold">Note:</span> The capture process name cannot be altered after the capture process is created.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t30" headers="r1c1-t30">
<p><code dir="ltr">capture_queue_table</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t30 r1c2-t30">
<p>The name of the queue table for each queue used by a capture process, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_table_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue_table</code>. If the schema is not specified, then the current user is the default.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for the queue table of each queue used by a capture process, and the current user is the owner of each queue table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t30" headers="r1c1-t30">
<p><code dir="ltr">capture_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t30 r1c2-t30">
<p>The name of each queue used by a capture process, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue</code>.</p>
<p>If the schema is not specified, then the queue table owner is the default. The queue owner automatically has privileges to perform all queue operations on the queue.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for each queue used by a capture process.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t30" headers="r1c1-t30">
<p><code dir="ltr">capture_queue_user</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t30 r1c2-t30">
<p>The name of the user who requires <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges for the queue at the source database. This user also is configured as a secure queue user of the queue. The queue user cannot grant these privileges to other users because they are not granted with the <code dir="ltr">GRANT</code> option.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure does not grant any privileges. You can also grant queue privileges to the appropriate users using the <code dir="ltr">DBMS_AQADM</code> package.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t30" headers="r1c1-t30">
<p><code dir="ltr">propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t30 r1c2-t30">
<p>The name of each propagation configured to propagate changes. Do not specify an owner.</p>
<p>If the specified name matches the name of an existing propagation, then the procedure uses the existing propagation and adds the rules for propagating changes to the positive propagation rule set.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for each propagation it creates.</p>
<p><span class="bold">Note:</span> The propagation name cannot be altered after the propagation is created.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t30" headers="r1c1-t30">
<p><code dir="ltr">apply_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t30 r1c2-t30">
<p>The name of each apply process configured to apply changes. Do not specify an owner.</p>
<p>If the specified name matches the name of an existing apply process, then the procedure uses the existing apply process and adds the rules for applying changes to the positive apply process rule set.</p>
<p>The specified name must not match the name of an existing messaging client at the destination database.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for each apply process it creates. When set to <code dir="ltr">NULL</code>, no apply process that applies changes from the source database can exist on the destination database. If an apply process that applies changes from the source database exists at the destination database, then specify a non-<code dir="ltr">NULL</code> value for this parameter.</p>
<p><span class="bold">Note:</span> The apply process name cannot be altered after the apply process is created.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t30" headers="r1c1-t30">
<p><code dir="ltr">apply_queue_table</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t30 r1c2-t30">
<p>The name of the queue table for each queue used by an apply process, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_table_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue_table</code>. If the schema is not specified, then the current user is the default.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for the queue table of each queue used by an apply process, and the current user is the owner of each queue table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t30" headers="r1c1-t30">
<p><code dir="ltr">apply_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t30 r1c2-t30">
<p>The name of each queue used by an apply process, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue</code>.</p>
<p>If the schema is not specified, then the queue table owner is the default. The queue owner automatically has privileges to perform all queue operations on the queue.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for each queue used by an apply process.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t30" headers="r1c1-t30">
<p><code dir="ltr">apply_queue_user</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t30 r1c2-t30">
<p>The name of the user who requires <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges for the queue at the destination database. This user also is configured as a secure queue user of the queue. The queue user cannot grant these privileges to other users because they are not granted with the <code dir="ltr">GRANT</code> option.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure does not grant any privileges. You can also grant queue privileges to the appropriate users using the <code dir="ltr">DBMS_AQADM</code> package.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t30" headers="r1c1-t30">
<p><code dir="ltr">bi_directional</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t30 r1c2-t30">
<p>Specify <code dir="ltr">TRUE</code> to configure bi-directional replication between the database specified in <code dir="ltr">source_database</code> and the database specified in <code dir="ltr">destination_database</code>. Both databases are configured as source and destination databases, a capture and apply process is configured to capture changes to both databases, and propagations are configured to propagate these changes. If <code dir="ltr">TRUE</code>, then a database link from the destination database to the source database with the same global name as the source database must exist.</p>
<p>Specify <code dir="ltr">FALSE</code> to configure one way replication from the database specified in <code dir="ltr">source_database</code> and the database specified in <code dir="ltr">destination_database</code>. A capture process is configured at the current database and an apply process is configured at the destination database. A propagation is configured if necessary.</p>
<p><span class="bold">See Also:</span> <a class="olink STREP210" href="../STREP/config_simple.htm#STREP210"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about when propagations are configured</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t30" headers="r1c1-t30">
<p><code dir="ltr">include_ddl</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t30 r1c2-t30">
<p>Specify <code dir="ltr">TRUE</code> to configure an Oracle Streams replication environment that maintains both DML and DDL changes.</p>
<p>Specify <code dir="ltr">FALSE</code> to configure an Oracle Streams replication environment that maintains DML changes only. When this parameter is set to <code dir="ltr">FALSE</code>, DDL changes, such as <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code>, are not replicated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CDEJFACB"></a>
<div id="ARPLS599" class="refsect1">
<h2 class="refsect1">Summary of DBMS_STREAMS_ADM Subprograms</h2>
<div id="ARPLS68746" class="tblformal">
<p class="titleintable"><a id="sthref11306"></a><a id="sthref11307"></a>Table 159-2 DBMS_STREAMS_ADM Package Subprograms</p>
<table class="cellalignment4330" title="DBMS_STREAMS_ADM Package Subprograms" summary="This table lists the DBMS_STREAMS_ADM subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t31">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t31" headers="r1c1-t31">
<p><a href="#CDEBGJIC">ADD_COLUMN Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t31 r1c2-t31">
<p>Either adds or removes a declarative rule-based transformation which adds a column to a row logical change record (row LCR) that satisfies the specified rule</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t31" headers="r1c1-t31">
<p><a href="#CDEDIEDE">ADD_GLOBAL_PROPAGATION_RULES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t31 r1c2-t31">
<p>Either adds global rules to the positive rule set for a propagation, or adds global rules to the negative rule set for a propagation, and creates the specified propagation if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t31" headers="r1c1-t31">
<p><a href="#i1028131">ADD_GLOBAL_RULES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t31 r1c2-t31">
<p>Adds global rules to either the positive or negative rule set of a capture process, apply process, or messaging client, and creates the specified capture process, apply process, or messaging client if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t31" headers="r1c1-t31">
<p><a href="#i1012741">ADD_MESSAGE_PROPAGATION_RULE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t31 r1c2-t31">
<p>Either adds a message rule to the positive rule set for a propagation, or adds a message rule to the negative rule set for a propagation, and creates the specified propagation if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t31" headers="r1c1-t31">
<p><a href="#i1012752">ADD_MESSAGE_RULE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t31 r1c2-t31">
<p>Adds a message rule to either the positive or negative rule set of an apply process or messaging client, and creates the specified apply process or messaging client if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t31" headers="r1c1-t31">
<p><a href="#i1010842">ADD_SCHEMA_PROPAGATION_RULES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t31 r1c2-t31">
<p>Either adds schema rules to the positive rule set for a propagation, or adds schema rules to the negative rule set for a propagation, and creates the specified propagation if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t31" headers="r1c1-t31">
<p><a href="#i997270">ADD_SCHEMA_RULES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t31 r1c2-t31">
<p>Adds schema rules to either the positive or negative rule set of a capture process, apply process, or messaging client, and creates the specified capture process, apply process, or messaging client if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t31" headers="r1c1-t31">
<p><a href="#i1007301">ADD_SUBSET_PROPAGATION_RULES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r9c1-t31 r1c2-t31">
<p>Adds subset rules to the positive rule set for a propagation, and creates the specified propagation if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t31" headers="r1c1-t31">
<p><a href="#i1027849">ADD_SUBSET_RULES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r10c1-t31 r1c2-t31">
<p>Adds subset rules to the positive rule set of a capture process, synchronous capture, apply process, or messaging client, and creates the specified capture process, synchronous capture, apply process, or messaging client if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t31" headers="r1c1-t31">
<p><a href="#i997544">ADD_TABLE_PROPAGATION_RULES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r11c1-t31 r1c2-t31">
<p>Either adds table rules to the positive rule set for a propagation, or adds table rules to the negative rule set for a propagation, and creates the specified propagation if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t31" headers="r1c1-t31">
<p><a href="#i997673">ADD_TABLE_RULES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r12c1-t31 r1c2-t31">
<p>Adds table rules to the rule set of a capture process, synchronous capture, apply process, or messaging client, and creates the specified capture process, synchronous capture, apply process, or messaging client if it does not exist</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t31" headers="r1c1-t31">
<p><a href="#CDEIHIIC">CLEANUP_INSTANTIATION_SETUP Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r13c1-t31 r1c2-t31">
<p>Removes an Oracle Streams replication configuration that was set up by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures in this package</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t31" headers="r1c1-t31">
<p><a href="#CDEDIEGB">DELETE_COLUMN Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r14c1-t31 r1c2-t31">
<p>Either adds or removes a declarative rule-based transformation which deletes a column from a row LCR that satisfies the specified rule</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t31" headers="r1c1-t31">
<p><a href="#CDEFEDGF">GET_MESSAGE_TRACKING Function</a></p>
</td>
<td class="cellalignment4329" headers="r15c1-t31 r1c2-t31">
<p>Returns the tracking label for the current session</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t31" headers="r1c1-t31">
<p><a href="#i1018767">GET_SCN_MAPPING Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r16c1-t31 r1c2-t31">
<p>Gets information about the system change number (SCN) values to use for Oracle Streams capture and apply processes in an Oracle Streams replication environment</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t31" headers="r1c1-t31">
<p><a href="#CACGBIJI">GET_TAG Function</a></p>
</td>
<td class="cellalignment4329" headers="r17c1-t31 r1c2-t31">
<p>Gets the binary tag for all redo entries generated by the current session</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t31" headers="r1c1-t31">
<p><a href="#CACFIFCG">KEEP_COLUMNS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r18c1-t31 r1c2-t31">
<p>Either adds or removes a declarative rule-based transformation which keeps a list of columns in a row LCR that satisfies the specified rule</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t31" headers="r1c1-t31">
<p><a href="#CACBEIJI">MAINTAIN_CHANGE_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r19c1-t31 r1c2-t31">
<p>Configures an Oracle Streams environment that records in a change table the data manipulation language (DML) changes made to a source table. Optionally, this procedure can also configure one-way replication of the table from the source database to the destination database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t31" headers="r1c1-t31">
<p><a href="#CDEGDDEG">MAINTAIN_GLOBAL Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r20c1-t31 r1c2-t31">
<p>Configures an Oracle Streams environment that replicates changes at the database level between two databases</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t31" headers="r1c1-t31">
<p><a href="#CDEDAJEB">MAINTAIN_SCHEMAS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r21c1-t31 r1c2-t31">
<p>Configures an Oracle Streams environment that replicates changes to specified schemas between two databases</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r22c1-t31" headers="r1c1-t31">
<p><a href="#i1029845">MAINTAIN_SIMPLE_TABLESPACE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r22c1-t31 r1c2-t31">
<p>Clones a simple tablespace from a source database at a destination database and uses Oracle Streams to maintain this tablespace at both databases. This procedure is deprecated.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r23c1-t31" headers="r1c1-t31">
<p><a href="#CDEIFFHH">MAINTAIN_SIMPLE_TTS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r23c1-t31 r1c2-t31">
<p>Clones a simple tablespace from a source database at a destination database and uses Oracle Streams to maintain this tablespace at both databases</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r24c1-t31" headers="r1c1-t31">
<p><a href="#CDEDADAI">MAINTAIN_TABLES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r24c1-t31 r1c2-t31">
<p>Configures an Oracle Streams environment that replicates changes to specified tables between two databases</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r25c1-t31" headers="r1c1-t31">
<p><a href="#i1016534">MAINTAIN_TABLESPACES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r25c1-t31 r1c2-t31">
<p>Clones a set of tablespaces from a source database at a destination database and uses Oracle Streams to maintain these tablespaces at both databases. This procedure is deprecated.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r26c1-t31" headers="r1c1-t31">
<p><a href="#CDEFBAEH">MAINTAIN_TTS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r26c1-t31 r1c2-t31">
<p>Clones a set of tablespaces from a source database at a destination database and uses Oracle Streams to maintain these tablespaces at both databases</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r27c1-t31" headers="r1c1-t31">
<p><a href="#CDECACGG">MERGE_STREAMS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r27c1-t31 r1c2-t31">
<p>Merges a stream flowing from one capture process with a stream flowing from another capture process</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r28c1-t31" headers="r1c1-t31">
<p><a href="#BABBBGGH">MERGE_STREAMS_JOB Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r28c1-t31 r1c2-t31">
<p>Determines whether the original capture process and the cloned capture are within the specified merge threshold and, if they are, runs the <code dir="ltr">MERGE_STREAMS</code> procedure to merge the two streams</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r29c1-t31" headers="r1c1-t31">
<p><a href="#CDEBEJFE">POST_INSTANTIATION_SETUP Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r29c1-t31 r1c2-t31">
<p>Performs the actions required after instantiation to configure an Oracle Streams replication environment</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r30c1-t31" headers="r1c1-t31">
<p><a href="#CDEGDHBC">PRE_INSTANTIATION_SETUP Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r30c1-t31 r1c2-t31">
<p>Performs the actions required before instantiation to configure an Oracle Streams replication environment</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r31c1-t31" headers="r1c1-t31">
<p><a href="#i997810">PURGE_SOURCE_CATALOG Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r31c1-t31 r1c2-t31">
<p>Removes all Oracle Streams data dictionary information at the local database for the specified object</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r32c1-t31" headers="r1c1-t31">
<p><a href="#CDEIFBGC">RECOVER_OPERATION Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r32c1-t31 r1c2-t31">
<p>Provides options for an Oracle Streams replication configuration operation that stopped because it encountered an error. This procedure either rolls forward the operation, rolls back the operation, or purges all of the metadata about the operation.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r33c1-t31" headers="r1c1-t31">
<p><a href="#i1008918">REMOVE_QUEUE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r33c1-t31 r1c2-t31">
<p>Removes the specified <code dir="ltr">ANYDATA</code> queue</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r34c1-t31" headers="r1c1-t31">
<p><a href="#CDEFCADF">REMOVE_RULE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r34c1-t31 r1c2-t31">
<p>Removes the specified rule or all rules from the rule set associated with the specified capture process, synchronous capture, propagation, apply process, or messaging client.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r35c1-t31" headers="r1c1-t31">
<p><a href="#i1008310">REMOVE_STREAMS_CONFIGURATION Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r35c1-t31 r1c2-t31">
<p>Removes the Oracle Streams configuration at the local database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r36c1-t31" headers="r1c1-t31">
<p><a href="#CDECJDCG">RENAME_COLUMN Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r36c1-t31 r1c2-t31">
<p>Either adds or removes a declarative rule-based transformation which renames a column in a row LCR that satisfies the specified rule</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r37c1-t31" headers="r1c1-t31">
<p><a href="#CDEDCHCG">RENAME_SCHEMA Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r37c1-t31 r1c2-t31">
<p>Either adds or removes a declarative rule-based transformation which renames a schema in a row LCR that satisfies the specified rule</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r38c1-t31" headers="r1c1-t31">
<p><a href="#CDEFFCJI">RENAME_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r38c1-t31 r1c2-t31">
<p>Either adds or removes a declarative rule-based transformation which renames a table in a row LCR that satisfies the specified rule</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r39c1-t31" headers="r1c1-t31">
<p><a href="#i1012479">SET_MESSAGE_NOTIFICATION Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r39c1-t31 r1c2-t31">
<p>Sets a notification for messages that can be dequeued by a specified Oracle Streams messaging client from a specified queue</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r40c1-t31" headers="r1c1-t31">
<p><a href="#CDEGEEFA">SET_MESSAGE_TRACKING Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r40c1-t31 r1c2-t31">
<p>Sets the tracking label for logical change records (LCRs) produced by the current session</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r41c1-t31" headers="r1c1-t31">
<p><a href="#CDEECBGG">SET_RULE_TRANSFORM_FUNCTION Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r41c1-t31 r1c2-t31">
<p>Sets or removes the transformation function name for a rule-based transformation</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r42c1-t31" headers="r1c1-t31">
<p><a href="#CACIIBAE">SET_TAG Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r42c1-t31 r1c2-t31">
<p>Sets the binary tag for all redo entries subsequently generated by the current session</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r43c1-t31" headers="r1c1-t31">
<p><a href="#i997937">SET_UP_QUEUE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r43c1-t31 r1c2-t31">
<p>Creates a queue table and a queue for use with the capture, propagate, and apply functionality of Oracle Streams</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r44c1-t31" headers="r1c1-t31">
<p><a href="#CDEJBFIE">SPLIT_STREAMS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r44c1-t31 r1c2-t31">
<p>Splits one stream flowing from a capture process off from all of the other streams flowing from the capture process</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
All subprograms commit unless specified otherwise.</div>
<div id="ARPLS887" class="refsect2"><a id="CDEBGJIC"></a>
<h3 class="refsect2">ADD_COLUMN Procedure<a id="sthref11308"></a><a id="sthref11309"></a></h3>
<p>This procedure either adds or removes a declarative rule-based transformation which adds a column to a row logical change record (row LCR) that satisfies the specified rule.</p>
<p>For the transformation to be performed when the specified rule evaluates to <code dir="ltr">TRUE</code>, the rule must be in the positive rule set of an Oracle Streams client. Oracle Streams clients include capture processes, synchronous captures, propagations, apply processes, and messaging clients.</p>
<p>This procedure is overloaded. The <code dir="ltr">column_value</code> and <code dir="ltr">column_function</code> parameters are mutually exclusive.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p><code dir="ltr">ADD_COLUMN</code> transformations cannot add columns of the following data types: <code dir="ltr">BLOB</code>, <code dir="ltr">CLOB</code>, <code dir="ltr">NCLOB</code>, <code dir="ltr">BFILE</code>, <code dir="ltr">LONG</code>, <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>, <code dir="ltr">ROWID</code>, user-defined types (including object types, <code dir="ltr">REF</code>s, varrays, nested tables), and Oracle-supplied types (including any types, XML types, spatial types, and media types).</p>
</li>
<li>
<p>Declarative transformations can transform row LCRs only. These row LCRs can be captured by a capture process, captured by a synchronous capture, or constructed and enqueued by an application. Therefore, a DML rule must be specified when you run this procedure. If a DDL is specified, then the procedure raises an error.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS151" href="../STRMS/strms_transform.htm#STRMS151"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about declarative rule-based transformations</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11310"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_COLUMN(
   rule_name     IN  VARCHAR2,
   table_name    IN  VARCHAR2,
   column_name   IN  VARCHAR2,
   column_value  IN  ANYDATA,
   value_type    IN  VARCHAR2     DEFAULT &#39;NEW&#39;,
   step_number   IN  NUMBER       DEFAULT 0,
   operation     IN  VARCHAR2     DEFAULT &#39;ADD&#39;);
</pre>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_COLUMN(
   rule_name        IN  VARCHAR2,
   table_name       IN  VARCHAR2,
   column_name      IN  VARCHAR2,
   column_function  IN  VARCHAR2,
   value_type       IN  VARCHAR2     DEFAULT &#39;NEW&#39;,
   step_number      IN  NUMBER       DEFAULT 0,
   operation        IN  VARCHAR2     DEFAULT &#39;ADD&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11311"></a>Parameters</p>
<div id="ARPLS68747" class="tblformal">
<p class="titleintable"><a id="sthref11312"></a><a id="sthref11313"></a>Table 159-3 ADD_COLUMN Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_COLUMN Procedure Parameters " summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_COLUMN subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t35">Parameter</th>
<th class="cellalignment4328" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t35" headers="r1c1-t35">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t35 r1c2-t35">
<p>The name of the rule, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">rule_name</span></code>. If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p>For example, to specify a rule in the <code dir="ltr">hr</code> schema named <code dir="ltr">employees12</code>, enter <code dir="ltr">hr.employees12</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t35" headers="r1c1-t35">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t35 r1c2-t35">
<p>The name of the table to which the column is added in the row LCR, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t35" headers="r1c1-t35">
<p><code dir="ltr">column_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t35 r1c2-t35">
<p>The name of the column added to each row LCR that satisfies the rule.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t35" headers="r1c1-t35">
<p><code dir="ltr">column_value</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t35 r1c2-t35">
<p>The value of the added column. Specify the appropriate <code dir="ltr">ANYDATA</code> function for the column datatype and the column value. For example, if the datatype of the column being added is <code dir="ltr">NUMBER</code> and the value is <code dir="ltr">NULL</code>, then specify the <code dir="ltr">ANYDATA.ConvertNumber(NULL)</code> function.</p>
<p>This parameter cannot be specified if the <code dir="ltr">column_function</code> parameter is specified.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t35" headers="r1c1-t35">
<p><code dir="ltr">column_function</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t35 r1c2-t35">
<p>Either the <code dir="ltr">&#39;SYSDATE&#39;</code> or the <code dir="ltr">&#39;SYSTIMESTAMP&#39;</code> SQL function.</p>
<p>The <code dir="ltr">&#39;SYSDATE&#39;</code> SQL function places the current date and time set for the operating system on which the database resides. The datatype of the returned value is <code dir="ltr">DATE</code>, and the format returned depends on the value of the <code dir="ltr">NLS_DATE_FORMAT</code> initialization parameter.</p>
<p>The <code dir="ltr">&#39;SYSTIMESTAMP&#39;</code> SQL function returns the system date, including fractional seconds and time zone, of the system on which the database resides. The return type is <code dir="ltr">TIMESTAMP</code> <code dir="ltr">WITH</code> <code dir="ltr">TIME</code> <code dir="ltr">ZONE</code>.</p>
<p>The function executes when the rule evaluates to <code dir="ltr">TRUE</code>.</p>
<p>This parameter cannot be specified if the <code dir="ltr">column_value</code> parameter is specified.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t35" headers="r1c1-t35">
<p><code dir="ltr">value_type</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t35 r1c2-t35">
<p>Specify <code dir="ltr">&#39;NEW&#39;</code> to add the column to the new values in the row LCR.</p>
<p>Specify <code dir="ltr">&#39;OLD&#39;</code> to add the column to the old values in the row LCR.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t35" headers="r1c1-t35">
<p><code dir="ltr">step_number</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t35 r1c2-t35">
<p>The order of execution of the transformation.</p>
<p><span class="bold">See Also:</span> <a class="olink STRMS145" href="../STRMS/strms_transform.htm#STRMS145"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about transformation ordering</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t35" headers="r1c1-t35">
<p><code dir="ltr">operation</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t35 r1c2-t35">
<p>Specify <code dir="ltr">&#39;ADD&#39;</code> to add the transformation to the rule.</p>
<p>Specify <code dir="ltr">&#39;REMOVE&#39;</code> to remove the transformation from the rule.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11314"></a>Usage Notes</p>
<p>When <code dir="ltr">&#39;REMOVE&#39;</code> is specified for the <code dir="ltr">operation</code> parameter, all of the add column declarative rule-based transformations for the specified rule are removed that match the specified <code dir="ltr">table_name</code>, <code dir="ltr">column_name</code>, and <code dir="ltr">step_number</code> parameters. Nulls specified for these parameters act as wildcards. The following table lists the behavior of the <code dir="ltr">ADD_COLUMN</code> procedures when one or more of these parameters is <code dir="ltr">NULL</code>:</p>
<div class="inftblinformal">
<table class="cellalignment4327" title="Remove Behavior for the ADD_COLUMN Procedure" summary="This table describes the behavior of the ADD_COLUMN procedure when the operation parameter is set to REMOVE and various other procedure parameters are set to NULL." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t36">table_name</th>
<th class="cellalignment4328" id="r1c2-t36">column_name</th>
<th class="cellalignment4328" id="r1c3-t36">step_number</th>
<th class="cellalignment4328" id="r1c4-t36">Result</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t36" headers="r1c1-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t36 r1c2-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t36 r1c3-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t36 r1c4-t36">Remove all add column transformations for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t36" headers="r1c1-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t36 r1c2-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t36 r1c3-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t36 r1c4-t36">Remove all add column transformations with the specified <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t36" headers="r1c1-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t36 r1c2-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t36 r1c3-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t36 r1c4-t36">Remove all add column transformations with the specified <code dir="ltr">column_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t36" headers="r1c1-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t36 r1c2-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t36 r1c3-t36"><code dir="ltr">non-NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t36 r1c4-t36">Remove all add column transformations with the specified <code dir="ltr">table_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t36" headers="r1c1-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t36 r1c2-t36"><code dir="ltr">non-NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t36 r1c3-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t36 r1c4-t36">Remove all add column transformations with the specified <code dir="ltr">column_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t36" headers="r1c1-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t36 r1c2-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t36 r1c3-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t36 r1c4-t36">Remove all add column transformations with the specified <code dir="ltr">table_name</code> and <code dir="ltr">column_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t36" headers="r1c1-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t36 r1c2-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t36 r1c3-t36"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t36 r1c4-t36">Remove all add column transformations with the specified <code dir="ltr">table_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t36" headers="r1c1-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t36 r1c2-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t36 r1c3-t36">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t36 r1c4-t36">Remove all add column transformations with the specified <code dir="ltr">table_name</code>, <code dir="ltr">column_name</code>, and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS318" class="refsect2"><a id="CDEDIEDE"></a>
<h3 class="refsect2">ADD_GLOBAL_PROPAGATION_RULES Procedure<a id="sthref11315"></a><a id="sthref11316"></a><a id="sthref11317"></a><a id="sthref11318"></a></h3>
<p>This procedure either adds global rules to the positive rule set for a propagation, or adds global rules to the negative rule set for a propagation, and creates the specified propagation if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains two <code dir="ltr">OUT</code> parameters, and the other does not.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11319"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_GLOBAL_PROPAGATION_RULES(
   streams_name            IN   VARCHAR2  DEFAULT NULL,
   source_queue_name       IN   VARCHAR2,
   destination_queue_name  IN   VARCHAR2,
   include_dml             IN   BOOLEAN   DEFAULT TRUE,
   include_ddl             IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr      IN   BOOLEAN   DEFAULT FALSE,
   source_database         IN   VARCHAR2  DEFAULT NULL,
   dml_rule_name           OUT  VARCHAR2,
   ddl_rule_name           OUT  VARCHAR2,
   inclusion_rule          IN   BOOLEAN   DEFAULT TRUE,
   and_condition           IN   VARCHAR2  DEFAULT NULL,
   queue_to_queue          IN   BOOLEAN   DEFAULT NULL);

DBMS_STREAMS_ADM.ADD_GLOBAL_PROPAGATION_RULES(
   streams_name            IN   VARCHAR2  DEFAULT NULL,
   source_queue_name       IN   VARCHAR2,
   destination_queue_name  IN   VARCHAR2,
   include_dml             IN   BOOLEAN   DEFAULT TRUE,
   include_ddl             IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr      IN   BOOLEAN   DEFAULT FALSE,
   source_database         IN   VARCHAR2  DEFAULT NULL,
   inclusion_rule          IN   BOOLEAN   DEFAULT TRUE,
   and_condition           IN   VARCHAR2  DEFAULT NULL,
   queue_to_queue          IN   BOOLEAN   DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11320"></a>Parameters</p>
<div id="ARPLS68748" class="tblformal">
<p class="titleintable"><a id="sthref11321"></a><a id="sthref11322"></a>Table 159-4 ADD_GLOBAL_PROPAGATION_RULES Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_GLOBAL_PROPAGATION_RULES Procedure Parameters " summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_GLOBAL_PROPAGATION_RULES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t37">Parameter</th>
<th class="cellalignment4328" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t37" headers="r1c1-t37">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t37 r1c2-t37">
<p>The name of the propagation. Do not specify an owner.</p>
<p>If the specified propagation does not exist, then the procedure creates it automatically.</p>
<p>If <code dir="ltr">NULL</code> and a propagation exists for the same source queue and destination queue (including database link), then the procedure uses this propagation.</p>
<p>If <code dir="ltr">NULL</code> and no propagation exists for the same source queue and destination queue (including database link), then the procedure creates a propagation automatically with a system-generated name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t37" headers="r1c1-t37">
<p><code dir="ltr">source_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t37 r1c2-t37">
<p>The name of the source queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the source queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a source queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t37" headers="r1c1-t37">
<p><code dir="ltr">destination_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t37 r1c2-t37">
<p>The name of the destination queue, including a database link, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code><code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">@dblink_name</span></code><code dir="ltr">]</code>, if the destination queue is in a remote database. The queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a destination queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema and use a database link named <code dir="ltr">dbs2.net</code>, enter <code dir="ltr">strmadmin.streams_queue@dbs2.net</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
<p>If the database link is omitted, then the procedure uses the global name of the current database, and the source queue and destination queue must be in the same database.</p>
<p><span class="bold">Note:</span> Connection qualifiers are not allowed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t37" headers="r1c1-t37">
<p><code dir="ltr">include_dml</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t37 r1c2-t37">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DML changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DML rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t37" headers="r1c1-t37">
<p><code dir="ltr">include_ddl</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t37 r1c2-t37">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DDL changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DDL rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t37" headers="r1c1-t37">
<p><code dir="ltr">include_tagged_lcr</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t37 r1c2-t37">
<p>If <code dir="ltr">TRUE</code>, then the procedure does not add a condition regarding Oracle Streams tags to the generated rules. Therefore, these rules can evaluate to <code dir="ltr">TRUE</code> regardless of whether a logical change record (LCR) has a non-<code dir="ltr">NULL</code> tag. If the rules are added to the positive rule set for the propagation, then an LCR is always considered for propagation, regardless of whether it has a non-<code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">TRUE</code> is appropriate for a full (for example, standby) copy of a database. If the rules are added to the negative rule set for the propagation, then whether an LCR is discarded does not depend on the tag for the LCR.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure adds a condition to each generated rule that causes the rule to evaluate to <code dir="ltr">TRUE</code> only if an LCR has a <code dir="ltr">NULL</code> Oracle Streams tag. If the rules are added to the positive rule set for the propagation, then an LCR is considered for propagation only when the LCR contains a <code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">FALSE</code> might be appropriate in update-anywhere configurations to avoid sending a change back to its source database. If the rules are added to the negative rule set for the propagation, then an LCR can be discarded only if it has a <code dir="ltr">NULL</code> tag.</p>
<p>Usually, specify <code dir="ltr">TRUE</code> for this parameter if the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">FALSE</code>.</p>
<p><span class="bold">See Also:</span> <a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t37" headers="r1c1-t37">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t37 r1c2-t37">
<p>The global name of the source database. The source database is where the changes originated. If <code dir="ltr">NULL</code>, then the procedure does not add a condition regarding the source database to the generated rules.</p>
<p>If you do not include the domain name, then the procedure appends it to the database name automatically. For example, if you specify <code dir="ltr">DBS1</code> and the domain is <code dir="ltr">.NET</code>, then the procedure specifies <code dir="ltr">DBS1.NET</code> automatically.</p>
<p>Oracle recommends that you specify a source database for propagation rules.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t37" headers="r1c1-t37">
<p><code dir="ltr">dml_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t37 r1c2-t37">
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DML rule name.</p>
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t37" headers="r1c1-t37">
<p><code dir="ltr">ddl_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t37 r1c2-t37">
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DDL rule name.</p>
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t37" headers="r1c1-t37">
<p><code dir="ltr">inclusion_rule</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t37 r1c2-t37">
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">TRUE</code>, then the procedure adds the rules to the positive rule set for the propagation.</p>
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">FALSE</code>, then the procedure adds the rules to the negative rule set for the propagation.</p>
<p>In either case, the system creates the rule set if it does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t37" headers="r1c1-t37">
<p><code dir="ltr">and_condition</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t37 r1c2-t37">
<p>If non-<code dir="ltr">NULL</code>, appends the specified condition to the system-generated rule condition using an <code dir="ltr">AND</code> clause in the following way:</p>
<pre dir="ltr">(<span class="italic">system_condition</span>) AND (<span class="italic">and_condition</span>)
</pre>
<p>The variable in the specified condition must be <code dir="ltr">:lcr</code>. For example, to specify that the global rules generated by the procedure evaluate to <code dir="ltr">TRUE</code> only if the Oracle Streams tag is the hexadecimal equivalent of <code dir="ltr">&#39;02&#39;</code>, specify the following condition:</p>
<pre dir="ltr">:lcr.get_tag() = HEXTORAW(&#39;&#39;02&#39;&#39;)
</pre>
<p>The <code dir="ltr">:lcr</code> in the specified condition is converted to <code dir="ltr">:dml</code> or <code dir="ltr">:ddl</code>, depending on the rule that is being generated. If you are specifying an LCR member subprogram that is dependent on the LCR type (row or DDL), then make sure the procedure only generates the appropriate rule.</p>
<p>Specifically, if you specify an LCR member subprogram that is valid only for row LCRs, then specify <code dir="ltr">TRUE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">FALSE</code> for the <code dir="ltr">include_ddl</code> parameter. If you specify an LCR member subprogram that is valid only for DDL LCRs, then specify <code dir="ltr">FALSE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">TRUE</code> for the <code dir="ltr">include_ddl</code> parameter.</p>
<p><span class="bold">See Also:</span> <a href="t_lcr.htm#BABGGBHF">Chapter 275, &#34;Logical Change Record TYPEs&#34;</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t37" headers="r1c1-t37">
<p><code dir="ltr">queue_to_queue</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t37 r1c2-t37">
<p>If <code dir="ltr">TRUE</code> or <code dir="ltr">NULL</code>, then a new propagation created by this procedure is a queue to queue propagation. A queue-to-queue propagation always has its own propagation job and uses a service for automatic failover when the destination queue is a buffered queue in an Oracle Real Application Clusters (Oracle RAC) database.</p>
<p>If <code dir="ltr">FALSE</code>, then a new propagation created by this procedure is a queue-to-dblink propagation. A queue-to-dblink propagation can share a propagation job with other propagations that use the same database link and does not support automatic failover in an Oracle RAC environment.</p>
<p>The procedure cannot change the queue to queue property of an exiting propagation. If the specified propagation exists, then the procedure behaves in the following way for each setting:</p>
<ul>
<li>
<p>If <code dir="ltr">TRUE</code> and the specified propagation is not a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">FALSE</code> and the specified propagation is a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">NULL</code>, then the procedure does not change the queue to queue property of the propagation.</p>
</li>
</ul>
<p><span class="bold">See Also:</span> <a class="olink STRMS155" href="../STRMS/strms_prop.htm#STRMS155"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about queue-to-queue propagations</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CACIEEFD"></a>Usage Notes</p>
<p>This procedure configures propagation using the current user. Only one propagation is allowed between a particular source queue and destination queue.</p>
<p>This procedure creates DML and DDL rules automatically based on <code dir="ltr">include_dml</code> and <code dir="ltr">include_ddl</code> parameter values, respectively. Each rule has a system-generated rule name that consists of the database name with a sequence number appended to it. The sequence number is used to avoid naming conflicts. If the database name plus the sequence number is too long, then the database name is truncated. A propagation uses the rules for filtering.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a> and <a href="#CDEBBFCH">&#34;Propagation Rules for LCRs&#34;</a> for more information about the rules created by this procedure</p>
</li>
<li>
<p><a href="#i1026648">&#34;Propagation User&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CDEHEJII"></a>Examples</p>
<p>The following is an example of a global rule condition created for DML changes:</p>
<pre dir="ltr">(:dml.is_null_tag() = &#39;Y&#39; and :dml.get_source_database_name() = &#39;DBS1.NET&#39; )
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS310" class="refsect2"><a id="i1028131"></a>
<h3 class="refsect2">ADD_GLOBAL_RULES Procedure<a id="sthref11323"></a><a id="sthref11324"></a><a id="sthref11325"></a><a id="sthref11326"></a><a id="sthref11327"></a><a id="sthref11328"></a><a id="sthref11329"></a></h3>
<p>This procedure adds rules to a rule set of one of the following types of Oracle Streams clients:</p>
<ul>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">capture</code>, this procedure adds capture process rules for capturing changes to an entire database. See <a href="#i1023683">&#34;Capture Process Rules for Changes in the Redo Log&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">apply</code> and the <code dir="ltr">streams_name</code> parameter specifies the name of an apply process, this procedure adds apply process rules for applying all logical change records (LCRs) in a queue. The rules can specify that the LCRs must be from a particular source database. See <a href="#i1023716">&#34;Apply Process Rules for LCRs&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">dequeue</code>, this procedure adds messaging client rules for dequeuing all persistent LCRs from a queue. The rules can specify that the LCRs must be from a particular source database. See <a href="#i1023717">&#34;Messaging Client Rules for LCRs&#34;</a> for more information about these rules.</p>
</li>
</ul>
<p>This procedure creates the specified capture process, apply process, or messaging client if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains two <code dir="ltr">OUT</code> parameters, and the other does not.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
If you add global rules to the positive rule set for a capture process, then make sure you add rules to the negative capture process rule set to exclude database objects that are not support by Oracle Streams. Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Currently, messaging clients cannot dequeue buffered messages.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11330"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_GLOBAL_RULES(
   streams_type        IN   VARCHAR2,
   streams_name        IN   VARCHAR2  DEFAULT NULL,
   queue_name          IN   VARCHAR2  DEFAULT &#39;streams_queue&#39;,
   include_dml         IN   BOOLEAN   DEFAULT TRUE,
   include_ddl         IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr  IN   BOOLEAN   DEFAULT FALSE,
   source_database     IN   VARCHAR2  DEFAULT NULL,
   dml_rule_name       OUT  VARCHAR2,
   ddl_rule_name       OUT  VARCHAR2,
   inclusion_rule      IN   BOOLEAN   DEFAULT TRUE,
   and_condition       IN   VARCHAR2  DEFAULT NULL);

DBMS_STREAMS_ADM.ADD_GLOBAL_RULES(
   streams_type        IN   VARCHAR2,
   streams_name        IN   VARCHAR2  DEFAULT NULL,
   queue_name          IN   VARCHAR2  DEFAULT &#39;streams_queue&#39;,
   include_dml         IN   BOOLEAN   DEFAULT TRUE,
   include_ddl         IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr  IN   BOOLEAN   DEFAULT FALSE,
   source_database     IN   VARCHAR2  DEFAULT NULL,
   inclusion_rule      IN   BOOLEAN   DEFAULT TRUE,
   and_condition       IN   VARCHAR2  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11331"></a>Parameters</p>
<div id="ARPLS68749" class="tblformal">
<p class="titleintable"><a id="sthref11332"></a><a id="sthref11333"></a>Table 159-5 ADD_GLOBAL_RULES Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_GLOBAL_RULES Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_GLOBAL_RULES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t41">Parameter</th>
<th class="cellalignment4328" id="r1c2-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t41" headers="r1c1-t41">
<p><code dir="ltr">streams_type</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t41 r1c2-t41">
<p>The type of Oracle Streams client:</p>
<ul>
<li>
<p>Specify <code dir="ltr">capture</code> for a capture process.</p>
</li>
<li>
<p>Specify <code dir="ltr">apply</code> for an apply process.</p>
</li>
<li>
<p>Specify <code dir="ltr">dequeue</code> for a messaging client.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t41" headers="r1c1-t41">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t41 r1c2-t41">
<p>The name of the capture process, apply process, or messaging client. Do not specify an owner.</p>
<p>If <code dir="ltr">NULL</code>, if <code dir="ltr">streams_type</code> is <code dir="ltr">capture</code> or <code dir="ltr">dequeue</code>, and if one relevant capture process or messaging client for the queue exists, then the relevant Oracle Streams client is used. If no relevant Oracle Streams client exists for the queue, then an Oracle Streams client is created automatically with a system-generated name. If <code dir="ltr">NULL</code> and multiple Oracle Streams clients of the specified <code dir="ltr">streams_type</code> for the queue exist, then the procedure raises an error.</p>
<p>If <code dir="ltr">NULL</code>, if <code dir="ltr">streams_type</code> is <code dir="ltr">apply</code>, and if one relevant apply process exists, then the procedure uses the relevant apply process. The relevant apply process is identified in one of the following ways:</p>
<ul>
<li>
<p>If one existing apply process has the source database specified in <code dir="ltr">source_database</code> and uses the queue specified in <code dir="ltr">queue_name</code>, then the procedure uses this apply process.</p>
</li>
<li>
<p>If <code dir="ltr">source_database</code> is <code dir="ltr">NULL</code> and one existing apply process is using the queue specified in <code dir="ltr">queue_name</code>, then the procedure uses this apply process.</p>
</li>
</ul>
<p>If <code dir="ltr">NULL</code> and no relevant apply process exists, then the procedure creates an apply process automatically with a system-generated name.</p>
<p>If <code dir="ltr">NULL</code> and multiple relevant apply processes exist, then the procedure raises an error.</p>
<p>Each apply process and messaging client must have a unique name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t41" headers="r1c1-t41">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t41 r1c2-t41">
<p>The name of the local queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter. If the schema is not specified, then the current user is the default.</p>
<p>For capture process rules, this is the queue into which a capture process enqueues LCRs. For apply process rules, this is the queue from which an apply process dequeues messages. For messaging client rules, this is the queue from which a messaging client dequeues messages.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t41" headers="r1c1-t41">
<p><code dir="ltr">include_dml</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t41 r1c2-t41">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DML changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DML rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t41" headers="r1c1-t41">
<p><code dir="ltr">include_ddl</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t41 r1c2-t41">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DDL changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DDL rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t41" headers="r1c1-t41">
<p><code dir="ltr">include_tagged_lcr</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t41 r1c2-t41">
<p>If <code dir="ltr">TRUE</code>, then the procedure does not add a condition regarding Oracle Streams tags to the generated rules. Therefore, these rules can evaluate to <code dir="ltr">TRUE</code> regardless of whether a redo entry or LCR has a non-<code dir="ltr">NULL</code> tag. If the rules are added to the positive rule set for the process, then a redo entry is always considered for capture, and an LCR is always considered for apply, regardless of whether the redo entry or LCR has a non-<code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">TRUE</code> is appropriate for a full (for example, standby) copy of a database. If the rules are added to the negative rule set for the process, then whether a redo entry or LCR is discarded does not depend on the tag.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure adds a condition to each generated rule that causes the rule to evaluate to <code dir="ltr">TRUE</code> only if a redo entry or LCR has a <code dir="ltr">NULL</code> Oracle Streams tag. If the rules are added to the positive rule set for the process, then a redo entry is considered for capture, and an LCR is considered for apply, only when the redo entry or LCR contains a <code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">FALSE</code> might be appropriate in update-anywhere configurations to avoid sending a change back to its source database. If the rules are added to the negative rule set for the process, then a redo entry or LCR can be discarded only if it has a <code dir="ltr">NULL</code> tag.</p>
<p>Usually, specify <code dir="ltr">TRUE</code> for this parameter if the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">FALSE</code>.</p>
<p><span class="bold">See Also:</span> <a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t41" headers="r1c1-t41">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t41 r1c2-t41">
<p>The global name of the source database. If <code dir="ltr">NULL</code>, then the procedure does not add a condition regarding the source database to the generated rules.</p>
<p>For capture process rules, specify <code dir="ltr">NULL</code> or the global name of the local database if you are creating a capture process locally at the source database. If you are adding rules to a downstream capture process rule set at a downstream database, then specify the source database of the changes that will be captured.</p>
<p>For apply process rules, specify the source database of the changes that will be applied by the apply process. The source database is the database where the changes originated. If an apply process applies captured messages, then the apply process can apply messages from only one capture process at one source database.</p>
<p>For messaging client rules, specify <code dir="ltr">NULL</code> if you do not want the rules created by this procedure to have a condition for the source database. Specify a source database if you want the rules created by this procedure to have a condition for the source database. The source database is part of the information in an LCR, and user-constructed LCRs might or might not have this information.</p>
<p>If you do not include the domain name, then the procedure appends it to the database name automatically. For example, if you specify <code dir="ltr">DBS1</code> and the domain is <code dir="ltr">.NET</code>, then the procedure specifies <code dir="ltr">DBS1.NET</code> automatically.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t41" headers="r1c1-t41">
<p><code dir="ltr">dml_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t41 r1c2-t41">
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DML rule name.</p>
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t41" headers="r1c1-t41">
<p><code dir="ltr">ddl_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t41 r1c2-t41">
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DDL rule name.</p>
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t41" headers="r1c1-t41">
<p><code dir="ltr">inclusion_rule</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t41 r1c2-t41">
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">TRUE</code>, then the procedure adds the rules to the positive rule set for the Oracle Streams client.</p>
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">FALSE</code>, then the procedure adds the rules to the negative rule set for the Oracle Streams client.</p>
<p>In either case, the system creates the rule set if it does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t41" headers="r1c1-t41">
<p><code dir="ltr">and_condition</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t41 r1c2-t41">
<p>If non-<code dir="ltr">NULL</code>, appends the specified condition to the system-generated rule condition using an <code dir="ltr">AND</code> clause in the following way:</p>
<pre dir="ltr">(<span class="italic">system_condition</span>) AND (<span class="italic">and_condition</span>)
</pre>
<p>The variable in the specified condition must be <code dir="ltr">:lcr</code>. For example, to specify that the global rules generated by the procedure evaluate to <code dir="ltr">TRUE</code> only if the Oracle Streams tag is the hexadecimal equivalent of <code dir="ltr">&#39;02&#39;</code>, specify the following condition:</p>
<pre dir="ltr">:lcr.get_tag() = HEXTORAW(&#39;&#39;02&#39;&#39;)
</pre>
<p>The <code dir="ltr">:lcr</code> in the specified condition is converted to <code dir="ltr">:dml</code> or <code dir="ltr">:ddl</code>, depending on the rule that is being generated. If you are specifying an LCR member subprogram that is dependent on the LCR type (row or DDL), then make sure this procedure only generates the appropriate rule.</p>
<p>Specifically, if you specify an LCR member subprogram that is valid only for row LCRs, then specify <code dir="ltr">TRUE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">FALSE</code> for the <code dir="ltr">include_ddl</code> parameter. If you specify an LCR member subprogram that is valid only for DDL LCRs, then specify <code dir="ltr">FALSE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">TRUE</code> for the <code dir="ltr">include_ddl</code> parameter.</p>
<p><span class="bold">See Also:</span> <a href="t_lcr.htm#BABGGBHF">Chapter 275, &#34;Logical Change Record TYPEs&#34;</a></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11334"></a>Usage Notes</p>
<p>This procedure creates DML and DDL rules automatically based on <code dir="ltr">include_dml</code> and <code dir="ltr">include_ddl</code> parameter values, respectively. Each rule has a system-generated rule name that consists of the database name with a sequence number appended to it. The sequence number is used to avoid naming conflicts. If the database name plus the sequence number is too long, then the database name is truncated. A capture process, apply process, or messaging client uses the rules for filtering.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a></p>
</li>
<li>
<p><a href="#i1024974">&#34;Security Model&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CDEHCBDC"></a>Examples</p>
<p>The following is an example of a global rule condition created for DML changes:</p>
<pre dir="ltr">(:dml.is_null_tag() = &#39;Y&#39; and :dml.get_source_database_name() = &#39;DBS1.NET&#39; )
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS520" class="refsect2"><a id="i1012741"></a>
<h3 class="refsect2">ADD_MESSAGE_PROPAGATION_RULE Procedure<a id="sthref11335"></a><a id="sthref11336"></a><a id="sthref11337"></a><a id="sthref11338"></a></h3>
<p>This procedure adds a message rule to the positive rule set for a propagation, or adds a message rule to the negative rule set for a propagation, and creates the specified propagation if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains the <code dir="ltr">OUT</code> parameter <code dir="ltr">rule_name</code>, and the other does not.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11339"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_MESSAGE_PROPAGATION_RULE(
   message_type            IN   VARCHAR2,    
   rule_condition          IN   VARCHAR2,    
   streams_name            IN   VARCHAR2  DEFAULT NULL,    
   source_queue_name       IN   VARCHAR2,    
   destination_queue_name  IN   VARCHAR2,    
   inclusion_rule          IN   BOOLEAN   DEFAULT TRUE,
   rule_name               OUT  VARCHAR2,
   queue_to_queue          IN   BOOLEAN   DEFAULT NULL);

DBMS_STREAMS_ADM.ADD_MESSAGE_PROPAGATION_RULE(
   message_type            IN   VARCHAR2,    
   rule_condition          IN   VARCHAR2,    
   streams_name            IN   VARCHAR2  DEFAULT NULL,    
   source_queue_name       IN   VARCHAR2,    
   destination_queue_name  IN   VARCHAR2,    
   inclusion_rule          IN   BOOLEAN   DEFAULT TRUE,
   queue_to_queue          IN   BOOLEAN   DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11340"></a>Parameters</p>
<div id="ARPLS68750" class="tblformal">
<p class="titleintable"><a id="sthref11341"></a><a id="sthref11342"></a>Table 159-6 ADD_MESSAGE_PROPAGATION_RULE Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_MESSAGE_PROPAGATION_RULE Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_MESSAGE_PROPAGATION_RULE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t43">Parameter</th>
<th class="cellalignment4328" id="r1c2-t43">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t43" headers="r1c1-t43">
<p><code dir="ltr">message_type</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t43 r1c2-t43">
<p>The type of the message. The type can be an Oracle built-in type, such as <code dir="ltr">VARCHAR2</code> or <code dir="ltr">NUMBER</code>, or it can be a user-defined type.</p>
<p>If the type is not an Oracle built-in type, then it is specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">type_name</span></code>. If the schema is not specified, then the current user is the default.</p>
<p>For example, to specify <code dir="ltr">VARCHAR2</code>, enter <code dir="ltr">VARCHAR2(</code><code dir="ltr"><span class="codeinlineitalic">n</span></code><code dir="ltr">)</code>, where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is the size specification. To specify a type named <code dir="ltr">usr_msg</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.usr_msg</code> for this parameter.</p>
<p>The following data types require a size specification: <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NVARCHAR2</code>, and <code dir="ltr">RAW</code>.</p>
<p><span class="bold">See Also:</span> <a class="olink SQLRF0021" href="../SQLRF/sql_elements001.htm#SQLRF0021"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about data types</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t43" headers="r1c1-t43">
<p><code dir="ltr">rule_condition</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t43 r1c2-t43">
<p>The rule condition for this message type. The rule variable name specified in the rule condition must be the following:</p>
<pre dir="ltr">:msg
</pre>
<p><span class="bold">See Also:</span> <a href="#CDEJCIGA">&#34;Examples&#34;</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t43" headers="r1c1-t43">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t43 r1c2-t43">
<p>The name of the propagation. Do not specify an owner.</p>
<p>If the specified propagation does not exist, then the procedure creates it automatically.</p>
<p>If <code dir="ltr">NULL</code> and a propagation exists for the same source queue and destination queue (including database link), then the procedure uses this propagation.</p>
<p>If <code dir="ltr">NULL</code> and no propagation exists for the same source queue and destination queue (including database link), then the procedure creates a propagation automatically with a system-generated name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t43" headers="r1c1-t43">
<p><code dir="ltr">source_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t43 r1c2-t43">
<p>The name of the source queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the source queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a source queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t43" headers="r1c1-t43">
<p><code dir="ltr">destination_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t43 r1c2-t43">
<p>The name of the destination queue, including a database link, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code><code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">@dblink_name</span></code><code dir="ltr">]</code>, if the destination queue is in a remote database. The queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a destination queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema and use a database link named <code dir="ltr">dbs2.net</code>, enter <code dir="ltr">strmadmin.streams_queue@dbs2.net</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
<p>If the database link is omitted, then the procedure uses the global name of the current database, and the source queue and destination queue must be in the same database.</p>
<p><span class="bold">Note:</span> Connection qualifiers are not allowed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t43" headers="r1c1-t43">
<p><code dir="ltr">inclusion_rule</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t43 r1c2-t43">
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">TRUE</code>, then the procedure adds the rule to the positive rule set for the propagation.</p>
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">FALSE</code>, then the procedure adds the rule to the negative rule set for the propagation.</p>
<p>In either case, the system creates the rule set if it does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t43" headers="r1c1-t43">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t43 r1c2-t43">
<p>Contains the rule name</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t43" headers="r1c1-t43">
<p><code dir="ltr">queue_to_queue</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t43 r1c2-t43">
<p>If <code dir="ltr">TRUE</code> or <code dir="ltr">NULL</code>, then a new propagation created by this procedure is a queue to queue propagation. A queue-to-queue propagation always has its own propagation job and uses a service for automatic failover when the destination queue is a buffered queue in an Oracle Real Application Clusters (Oracle RAC) database.</p>
<p>If <code dir="ltr">FALSE</code>, then a new propagation created by this procedure is a queue-to-dblink propagation. A queue-to-dblink propagation can share a propagation job with other propagations that use the same database link and does not support automatic failover in an Oracle RAC environment.</p>
<p>This procedure cannot change the queue to queue property of an exiting propagation. If the specified propagation exists, then the procedure behaves in the following way for each setting:</p>
<ul>
<li>
<p>If <code dir="ltr">TRUE</code> and the specified propagation is not a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">FALSE</code> and the specified propagation is a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">NULL</code>, then the procedure does not change the queue to queue property of the propagation.</p>
</li>
</ul>
<p><span class="bold">See Also:</span> <a class="olink STRMS155" href="../STRMS/strms_prop.htm#STRMS155"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about queue-to-queue propagations</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11343"></a>Usage Notes</p>
<p>This procedure configures propagation using the current user. Only one propagation is allowed between a particular source queue and destination queue.</p>
<p>When you use this procedure to create a rule set for a message rule, the new rule set does not have an evaluation context. If no evaluation context exists for the specified message type, then this procedure creates a new evaluation context and associates it with the new rule. The evaluation context also has a system-generated name. If you create new rules that use an existing message type, then the new rules use the existing evaluation context for the message type.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a> and <a href="#CDEBDIFE">&#34;Propagation Rules for User Messages&#34;</a> for more information about the rules created by this procedure</p>
</li>
<li>
<p><a href="#i1026648">&#34;Propagation User&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CDEJCIGA"></a>Examples</p>
<p>Suppose the message type is <code dir="ltr">VARCHAR2(128)</code>. Given this type, the following rule condition can be specified:</p>
<pre dir="ltr">&#39;:msg = &#39;&#39;HQ&#39;&#39;&#39;
</pre>
<p>This rule condition evaluates to <code dir="ltr">TRUE</code> if a user message of type <code dir="ltr">VARCHAR2(128)</code> has <code dir="ltr">HQ</code> for its value.</p>
<p>Suppose the message type is <code dir="ltr">usr_msg</code>, and that this type has the following attributes: <code dir="ltr">source_dbname</code>, <code dir="ltr">owner</code>, <code dir="ltr">name</code>, and <code dir="ltr">message</code>. Given this type, the following rule condition can be specified:</p>
<pre dir="ltr">&#39;:msg.source_dbname = &#39;&#39;DBS1.NET&#39;&#39; AND &#39; || &#39;:msg.owner = &#39;&#39;HR&#39;&#39; AND  &#39; ||
&#39;:msg.name = &#39;&#39;EMPLOYEES&#39;&#39;&#39;
</pre>
<p>This rule condition evaluates to <code dir="ltr">TRUE</code> if a user message of type <code dir="ltr">usr_msg</code> has <code dir="ltr">DBS1.NET</code> for its <code dir="ltr">source_dbname</code> attribute, <code dir="ltr">HR</code> for its <code dir="ltr">owner</code> attribute, and <code dir="ltr">EMPLOYEES</code> for its <code dir="ltr">name</code> attribute.</p>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The quotation marks in the preceding examples are all single quotation marks.</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS521" class="refsect2"><a id="i1012752"></a>
<h3 class="refsect2">ADD_MESSAGE_RULE Procedure<a id="sthref11344"></a><a id="sthref11345"></a><a id="sthref11346"></a><a id="sthref11347"></a><a id="sthref11348"></a></h3>
<p>This procedure adds a message rule to a rule set of one of the following types of Oracle Streams clients:</p>
<ul>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">apply</code>, this procedure adds an apply process rule for dequeuing user messages of a specific message type from a queue. See <a href="#i1024656">&#34;Apply Process Rules for User Messages&#34;</a> for more information about such rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">dequeue</code>, this procedure adds a messaging client rule for dequeuing user messages of a specific message type from a queue. See <a href="#i1024657">&#34;Messaging Client Rules for User Messages&#34;</a> for more information about such rules.</p>
</li>
</ul>
<p>This procedure also creates the specified Oracle Streams client if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains the <code dir="ltr">OUT</code> parameter <code dir="ltr">rule_name</code>, and the other does not.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Currently, messaging clients cannot dequeue buffered messages.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11349"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_MESSAGE_RULE(
   message_type    IN   VARCHAR2,    
   rule_condition  IN   VARCHAR2,    
   streams_type    IN   VARCHAR2,
   streams_name    IN   VARCHAR2  DEFAULT NULL,    
   queue_name      IN   VARCHAR2  DEFAULT &#39;streams_queue&#39;,    
   inclusion_rule  IN   BOOLEAN   DEFAULT TRUE,
   rule_name       OUT  VARCHAR2);

DBMS_STREAMS_ADM.ADD_MESSAGE_RULE(
   message_type    IN   VARCHAR2,    
   rule_condition  IN   VARCHAR2,    
   streams_type    IN   VARCHAR2,
   streams_name    IN   VARCHAR2  DEFAULT NULL,    
   queue_name      IN   VARCHAR2  DEFAULT &#39;streams_queue&#39;,    
   inclusion_rule  IN   BOOLEAN   DEFAULT TRUE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11350"></a>Parameters</p>
<div id="ARPLS68751" class="tblformal">
<p class="titleintable"><a id="sthref11351"></a><a id="sthref11352"></a>Table 159-7 ADD_MESSAGE_RULE Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_MESSAGE_RULE Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_MESSAGE_RULE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t47">Parameter</th>
<th class="cellalignment4328" id="r1c2-t47">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t47" headers="r1c1-t47">
<p><code dir="ltr">message_type</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t47 r1c2-t47">
<p>The type of the message. The type can be an Oracle built-in type, such as <code dir="ltr">VARCHAR2</code> or <code dir="ltr">NUMBER</code>, or it can be a user-defined type.</p>
<p>If the type is not an Oracle built-in type, then it is specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">type_name</span></code>. If the schema is not specified, then the current user is the default.</p>
<p>For example, to specify <code dir="ltr">VARCHAR2</code>, enter <code dir="ltr">VARCHAR2(</code><code dir="ltr"><span class="codeinlineitalic">n</span></code><code dir="ltr">)</code>, where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is the size specification. To specify a type named <code dir="ltr">usr_msg</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.usr_msg</code> for this parameter.</p>
<p>The following data types require a size specification: <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NVARCHAR2</code>, and <code dir="ltr">RAW</code>.</p>
<p><span class="bold">See Also:</span> <a class="olink SQLRF0021" href="../SQLRF/sql_elements001.htm#SQLRF0021"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about data types</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t47" headers="r1c1-t47">
<p><code dir="ltr">rule_condition</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t47 r1c2-t47">
<p>The rule condition for this message type. The rule variable name specified in the rule condition must be the following:</p>
<pre dir="ltr">:msg
</pre>
<p><span class="bold">See Also:</span> <a href="#CDEGIAJG">&#34;Examples&#34;</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t47" headers="r1c1-t47">
<p><code dir="ltr">streams_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t47 r1c2-t47">
<p>The type of message consumer, either <code dir="ltr">apply</code> for apply process or <code dir="ltr">dequeue</code> for messaging client</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t47" headers="r1c1-t47">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t47 r1c2-t47">
<p>The name of the Oracle Streams apply process or messaging client.</p>
<p>If the specified <code dir="ltr">streams_type</code> is <code dir="ltr">apply</code>, then specify the name of the apply process. Do not specify an owner. If the specified apply process does not exist, then the procedure creates it automatically with a system-generated name.</p>
<p>If the specified <code dir="ltr">streams_type</code> is <code dir="ltr">dequeue</code>, then specify the messaging client. For example, if the user <code dir="ltr">strmadmin</code> is the messaging client, then specify <code dir="ltr">strmadmin</code>.</p>
<p>If <code dir="ltr">NULL</code> and a relevant apply process or messaging client for the queue exists, then the procedure uses the relevant apply process or messaging client. If <code dir="ltr">NULL</code> and multiple relevant apply processes or messaging clients for the queue exist, then the procedure raises an error.</p>
<p>If <code dir="ltr">NULL</code> and no Oracle Streams client of the specified <code dir="ltr">streams_type</code> exists for the queue, then the procedure creates an apply process or messaging client automatically with a system-generated name.</p>
<p>An apply process and a messaging client cannot have the same name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t47" headers="r1c1-t47">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t47 r1c2-t47">
<p>The name of the local queue from which messages will be dequeued, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t47" headers="r1c1-t47">
<p><code dir="ltr">inclusion_rule</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t47 r1c2-t47">
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">TRUE</code>, then the procedure adds the rule to the positive rule set for the apply process or messaging client.</p>
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">FALSE</code>, then the procedure adds the rule to the negative rule set for the apply process or messaging client.</p>
<p>In either case, the system creates the rule set if it does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t47" headers="r1c1-t47">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t47 r1c2-t47">
<p>Contains the rule name</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CACGEGJI"></a>Usage Notes</p>
<p>If an apply process rule is added, then this procedure creates the apply process if it does not exist. An apply process created by this procedure can apply only user messages, and dequeued messages are sent to the message handler for the apply process. If a messaging client rule is added, then this procedure creates a messaging client if it does not exist.</p>
<p>When you use this procedure to create a rule set for a message rule, the new rule set does not have an evaluation context. If no evaluation context exists for the specified message type, then this procedure creates a new evaluation context and associates it with the new rule. The evaluation context also has a system-generated name. If you create new rules that use an existing message type, then the new rules use the existing evaluation context for the message type.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a></p>
</li>
<li>
<p><a href="#i1024974">&#34;Security Model&#34;</a></p>
</li>
<li>
<p><a href="d_apply.htm#BGBGGBJJ">ALTER_APPLY Procedure</a> for more information about setting a message handler for an apply process</p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CDEGIAJG"></a>Examples</p>
<p>Suppose the message type is <code dir="ltr">VARCHAR2(128)</code>. Given this type, the following rule condition can be specified:</p>
<pre dir="ltr">&#39;:msg = &#39;&#39;HQ&#39;&#39;&#39;
</pre>
<p>This rule condition evaluates to <code dir="ltr">TRUE</code> if a user message of type <code dir="ltr">VARCHAR2(128)</code> has <code dir="ltr">HQ</code> for its value.</p>
<p>Suppose the message type is <code dir="ltr">usr_msg</code>, and that this type has the following attributes: <code dir="ltr">source_dbname</code>, <code dir="ltr">owner</code>, <code dir="ltr">name</code>, and <code dir="ltr">message</code>. Given this type, the following rule condition can be specified:</p>
<pre dir="ltr">&#39;:msg.source_dbname = &#39;&#39;DBS1.NET&#39;&#39; AND &#39; || &#39;:msg.owner = &#39;&#39;HR&#39;&#39; AND  &#39; ||
&#39;:msg.name = &#39;&#39;EMPLOYEES&#39;&#39;&#39;
</pre>
<p>This rule condition evaluates to <code dir="ltr">TRUE</code> if a user message of type <code dir="ltr">usr_msg</code> has <code dir="ltr">DBS1.NET</code> for its <code dir="ltr">source_dbname</code> attribute, <code dir="ltr">HR</code> for its <code dir="ltr">owner</code> attribute, and <code dir="ltr">EMPLOYEES</code> for its <code dir="ltr">name</code> attribute.</p>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The quotation marks in the preceding examples are all single quotation marks.</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS317" class="refsect2"><a id="i1010842"></a>
<h3 class="refsect2">ADD_SCHEMA_PROPAGATION_RULES Procedure<a id="sthref11353"></a><a id="sthref11354"></a><a id="sthref11355"></a><a id="sthref11356"></a></h3>
<p>This procedure either adds schema rules to the positive rule set for a propagation, or adds schema rules to the negative rule set for a propagation, and creates the specified propagation if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains two <code dir="ltr">OUT</code> parameters, and the other does not.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11357"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_SCHEMA_PROPAGATION_RULES(
   schema_name             IN   VARCHAR2,
   streams_name            IN   VARCHAR2  DEFAULT NULL,
   source_queue_name       IN   VARCHAR2,
   destination_queue_name  IN   VARCHAR2,
   include_dml             IN   BOOLEAN   DEFAULT TRUE,
   include_ddl             IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr      IN   BOOLEAN   DEFAULT FALSE,
   source_database         IN   VARCHAR2  DEFAULT NULL,
   dml_rule_name           OUT  VARCHAR2,
   ddl_rule_name           OUT  VARCHAR2,
   inclusion_rule          IN   BOOLEAN   DEFAULT TRUE,
   and_condition           IN   VARCHAR2  DEFAULT NULL,
   queue_to_queue          IN   BOOLEAN   DEFAULT NULL);

DBMS_STREAMS_ADM.ADD_SCHEMA_PROPAGATION_RULES(
   schema_name             IN   VARCHAR2,
   streams_name            IN   VARCHAR2  DEFAULT NULL,
   source_queue_name       IN   VARCHAR2,
   destination_queue_name  IN   VARCHAR2,
   include_dml             IN   BOOLEAN   DEFAULT TRUE,
   include_ddl             IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr      IN   BOOLEAN   DEFAULT FALSE,
   source_database         IN   VARCHAR2  DEFAULT NULL,
   inclusion_rule          IN   BOOLEAN   DEFAULT TRUE,
   and_condition           IN   VARCHAR2  DEFAULT NULL,
   queue_to_queue          IN   BOOLEAN   DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11358"></a>Parameters</p>
<div id="ARPLS68752" class="tblformal">
<p class="titleintable"><a id="sthref11359"></a><a id="sthref11360"></a>Table 159-8 ADD_SCHEMA_PROPAGATION_RULES Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_SCHEMA_PROPAGATION_RULES Procedure Parameters " summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_SCHEMA_PROPAGATION_RULES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t50">Parameter</th>
<th class="cellalignment4328" id="r1c2-t50">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t50" headers="r1c1-t50">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t50 r1c2-t50">
<p>The name of the schema. For example, <code dir="ltr">hr</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t50" headers="r1c1-t50">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t50 r1c2-t50">
<p>The name of the propagation. Do not specify an owner.</p>
<p>If the specified propagation does not exist, then the procedure creates it automatically.</p>
<p>If <code dir="ltr">NULL</code> and a propagation exists for the same source queue and destination queue (including database link), then the procedure uses this propagation.</p>
<p>If <code dir="ltr">NULL</code> and no propagation exists for the same source queue and destination queue (including database link), then the procedure creates a propagation automatically with a system-generated name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t50" headers="r1c1-t50">
<p><code dir="ltr">source_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t50 r1c2-t50">
<p>The name of the source queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the source queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a source queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t50" headers="r1c1-t50">
<p><code dir="ltr">destination_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t50 r1c2-t50">
<p>The name of the destination queue, including a database link, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code><code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">@dblink_name</span></code><code dir="ltr">]</code>, if the destination queue is in a remote database. The queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a destination queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema and use a database link named <code dir="ltr">dbs2.net</code>, enter <code dir="ltr">strmadmin.streams_queue@dbs2.net</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
<p>If the database link is omitted, then the procedure uses the global name of the current database, and the source queue and destination queue must be in the same database.</p>
<p><span class="bold">Note:</span> Connection qualifiers are not allowed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t50" headers="r1c1-t50">
<p><code dir="ltr">include_dml</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t50 r1c2-t50">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DML changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DML rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t50" headers="r1c1-t50">
<p><code dir="ltr">include_ddl</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t50 r1c2-t50">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DDL changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DDL rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t50" headers="r1c1-t50">
<p><code dir="ltr">include_tagged_lcr</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t50 r1c2-t50">
<p>If <code dir="ltr">TRUE</code>, then the procedure does not add a condition regarding Oracle Streams tags to the generated rules. Therefore, these rules can evaluate to <code dir="ltr">TRUE</code> regardless of whether a logical change record (LCR) has a non-<code dir="ltr">NULL</code> tag. If the rules are added to the positive rule set for the propagation, then an LCR is always considered for propagation, regardless of whether it has a non-<code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">TRUE</code> is appropriate for a full (for example, standby) copy of a database. If the rules are added to the negative rule set for the propagation, then whether an LCR is discarded does not depend on the tag for the LCR.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure adds a condition to each generated rule that causes the rule to evaluate to <code dir="ltr">TRUE</code> only if an LCR has a <code dir="ltr">NULL</code> Oracle Streams tag. If the rules are added to the positive rule set for the propagation, then an LCR is considered for propagation only when the LCR contains a <code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">FALSE</code> might be appropriate in update-anywhere configurations to avoid sending a change back to its source database. If the rules are added to the negative rule set for the propagation, then an LCR can be discarded only if it has a <code dir="ltr">NULL</code> tag.</p>
<p>Usually, specify <code dir="ltr">TRUE</code> for this parameter if the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">FALSE</code>.</p>
<p><span class="bold">See Also:</span> <a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t50" headers="r1c1-t50">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t50 r1c2-t50">
<p>The global name of the source database. The source database is where the change originated. If <code dir="ltr">NULL</code>, then the procedure does not add a condition regarding the source database to the generated rules.</p>
<p>If you do not include the domain name, then the procedure appends it to the database name automatically. For example, if you specify <code dir="ltr">DBS1</code> and the domain is <code dir="ltr">.NET</code>, then the procedure specifies <code dir="ltr">DBS1.NET</code> automatically.</p>
<p>Oracle recommends that you specify a source database for propagation rules.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t50" headers="r1c1-t50">
<p><code dir="ltr">dml_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t50 r1c2-t50">
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DML rule name.</p>
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t50" headers="r1c1-t50">
<p><code dir="ltr">ddl_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t50 r1c2-t50">
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DDL rule name.</p>
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t50" headers="r1c1-t50">
<p><code dir="ltr">inclusion_rule</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t50 r1c2-t50">
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">TRUE</code>, then the procedure adds the rules to the positive rule set for the propagation.</p>
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">FALSE</code>, then the procedure adds the rules to the negative rule set for the propagation.</p>
<p>In either case, the system creates the rule set if it does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t50" headers="r1c1-t50">
<p><code dir="ltr">and_condition</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t50 r1c2-t50">
<p>If non-<code dir="ltr">NULL</code>, appends the specified condition to the system-generated rule condition using an <code dir="ltr">AND</code> clause in the following way:</p>
<pre dir="ltr">(<span class="italic">system_condition</span>) AND (<span class="italic">and_condition</span>)
</pre>
<p>The variable in the specified condition must be <code dir="ltr">:lcr</code>. For example, to specify that the schema rules generated by the procedure evaluate to <code dir="ltr">TRUE</code> only if the Oracle Streams tag is the hexadecimal equivalent of <code dir="ltr">&#39;02&#39;</code>, specify the following condition:</p>
<pre dir="ltr">:lcr.get_tag() = HEXTORAW(&#39;&#39;02&#39;&#39;)
</pre>
<p>The <code dir="ltr">:lcr</code> in the specified condition is converted to <code dir="ltr">:dml</code> or <code dir="ltr">:ddl</code>, depending on the rule that is being generated. If you are specifying an LCR member subprogram that is dependent on the LCR type (row or DDL), then make sure this procedure only generates the appropriate rule.</p>
<p>Specifically, if you specify an LCR member subprogram that is valid only for row LCRs, then specify <code dir="ltr">TRUE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">FALSE</code> for the <code dir="ltr">include_ddl</code> parameter. If you specify an LCR member subprogram that is valid only for DDL LCRs, then specify <code dir="ltr">FALSE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">TRUE</code> for the <code dir="ltr">include_ddl</code> parameter.</p>
<p><span class="bold">See Also:</span> <a href="t_lcr.htm#BABGGBHF">Chapter 275, &#34;Logical Change Record TYPEs&#34;</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t50" headers="r1c1-t50">
<p><code dir="ltr">queue_to_queue</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t50 r1c2-t50">
<p>If <code dir="ltr">TRUE</code> or <code dir="ltr">NULL</code>, then a new propagation created by this procedure is a queue to queue propagation. A queue-to-queue propagation always has its own propagation job and uses a service for automatic failover when the destination queue is a buffered queue in an Oracle Real Application Clusters (Oracle RAC) database.</p>
<p>If <code dir="ltr">FALSE</code>, then a new propagation created by this procedure is a queue-to-dblink propagation. A queue-to-dblink propagation can share a propagation job with other propagations that use the same database link and does not support automatic failover in an Oracle RAC environment.</p>
<p>This procedure cannot change the queue to queue property of an exiting propagation. If the specified propagation exists, then the procedure behaves in the following way for each setting:</p>
<ul>
<li>
<p>If <code dir="ltr">TRUE</code> and the specified propagation is not a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">FALSE</code> and the specified propagation is a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">NULL</code>, then the procedure does not change the queue to queue property of the propagation.</p>
</li>
</ul>
<p><span class="bold">See Also:</span> <a class="olink STRMS155" href="../STRMS/strms_prop.htm#STRMS155"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about queue-to-queue propagations</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11361"></a>Usage Notes</p>
<p>This procedure configures propagation using the current user. Only one propagation is allowed between a particular source queue and destination queue.</p>
<p>This procedure creates DML and DDL rules automatically based on <code dir="ltr">include_dml</code> and <code dir="ltr">include_ddl</code> parameter values, respectively. Each rule has a system-generated rule name that consists of the schema name with a sequence number appended to it. The sequence number is used to avoid naming conflicts. If the schema name plus the sequence number is too long, then the schema name is truncated. A propagation uses the rules for filtering.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a> and <a href="#CDEBBFCH">&#34;Propagation Rules for LCRs&#34;</a> for more information about the rules created by this procedure</p>
</li>
<li>
<p><a href="#i1026648">&#34;Propagation User&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11362"></a>Examples</p>
<p>The following is an example of a schema rule condition created for DML changes:</p>
<pre dir="ltr">((:dml.get_object_owner() = &#39;HR&#39;) and :dml.is_null_tag() = &#39;Y&#39; 
and :dml.get_source_database_name() = &#39;DBS1.NET&#39; )
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS309" class="refsect2"><a id="i997270"></a>
<h3 class="refsect2">ADD_SCHEMA_RULES Procedure<a id="sthref11363"></a><a id="sthref11364"></a><a id="sthref11365"></a><a id="sthref11366"></a><a id="sthref11367"></a><a id="sthref11368"></a><a id="sthref11369"></a></h3>
<p>This procedures adds rules to a rule set of one of the following types of Oracle Streams clients:</p>
<ul>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">capture</code>, this procedure adds capture process rules for capturing changes to a specified schema. See <a href="#i1023683">&#34;Capture Process Rules for Changes in the Redo Log&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">apply</code> and the <code dir="ltr">streams_name</code> parameter specifies the name of an apply process, this procedure adds apply process rules for applying logical change records (LCRs) in a queue that contain changes to a specified schema. The rules can specify that the LCRs must be from a particular source database. See <a href="#i1023716">&#34;Apply Process Rules for LCRs&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">dequeue</code>, this procedure adds messaging client rules for dequeuing persistent LCRs from a queue that contain changes to a specified schema. The rules can specify that the LCRs must be from a particular source database. See <a href="#i1023717">&#34;Messaging Client Rules for LCRs&#34;</a> for more information about these rules.</p>
</li>
</ul>
<p>This procedure creates the specified capture process, apply process, or messaging client if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains two <code dir="ltr">OUT</code> parameters, and the other does not.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
If you add schema rules to the positive rule set for a capture process, then make sure you add rules to the negative capture process rule set to exclude database objects in the schema that are not support by Oracle Streams. Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Currently, messaging clients cannot dequeue buffered messages.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11370"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_SCHEMA_RULES(
   schema_name         IN   VARCHAR2,
   streams_type        IN   VARCHAR2,
   streams_name        IN   VARCHAR2  DEFAULT NULL,
   queue_name          IN   VARCHAR2  DEFAULT &#39;streams_queue&#39;,
   include_dml         IN   BOOLEAN   DEFAULT TRUE,
   include_ddl         IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr  IN   BOOLEAN   DEFAULT FALSE,
   source_database     IN   VARCHAR2  DEFAULT NULL,
   dml_rule_name       OUT  VARCHAR2,
   ddl_rule_name       OUT  VARCHAR2,
   inclusion_rule      IN   BOOLEAN   DEFAULT TRUE,
   and_condition       IN   VARCHAR2  DEFAULT NULL);

DBMS_STREAMS_ADM.ADD_SCHEMA_RULES(
   schema_name         IN   VARCHAR2,
   streams_type        IN   VARCHAR2,
   streams_name        IN   VARCHAR2  DEFAULT NULL,
   queue_name          IN   VARCHAR2  DEFAULT &#39;streams_queue&#39;,
   include_dml         IN   BOOLEAN   DEFAULT TRUE,
   include_ddl         IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr  IN   BOOLEAN   DEFAULT FALSE,
   source_database     IN   VARCHAR2  DEFAULT NULL,
   inclusion_rule      IN   BOOLEAN   DEFAULT TRUE,
   and_condition       IN   VARCHAR2  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11371"></a>Parameters</p>
<div id="ARPLS68753" class="tblformal">
<p class="titleintable"><a id="sthref11372"></a><a id="sthref11373"></a>Table 159-9 ADD_SCHEMA_RULES Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_SCHEMA_RULES Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_SCHEMA_RULES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t54">Parameter</th>
<th class="cellalignment4328" id="r1c2-t54">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t54" headers="r1c1-t54">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t54 r1c2-t54">
<p>The name of the schema. For example, <code dir="ltr">hr</code>.</p>
<p>You can specify a schema that does not yet exist, because Oracle Streams does not validate the existence of the schema.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t54" headers="r1c1-t54">
<p><code dir="ltr">streams_type</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t54 r1c2-t54">
<p>The type of Oracle Streams client:</p>
<ul>
<li>
<p>Specify <code dir="ltr">capture</code> for a capture process.</p>
</li>
<li>
<p>Specify <code dir="ltr">apply</code> for an apply process.</p>
</li>
<li>
<p>Specify <code dir="ltr">dequeue</code> for a messaging client.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t54" headers="r1c1-t54">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t54 r1c2-t54">
<p>The name of the capture process, apply process, or messaging client. Do not specify an owner.</p>
<p>If <code dir="ltr">NULL</code>, if <code dir="ltr">streams_type</code> is <code dir="ltr">capture</code> or <code dir="ltr">dequeue</code>, and if one relevant capture process or messaging client for the queue exists, then the relevant Oracle Streams client is used. If no relevant Oracle Streams client exists for the queue, then an Oracle Streams client is created automatically with a system-generated name. If <code dir="ltr">NULL</code> and multiple Oracle Streams clients of the specified <code dir="ltr">streams_type</code> for the queue exist, then the procedure raises an error.</p>
<p>If <code dir="ltr">NULL</code>, if <code dir="ltr">streams_type</code> is <code dir="ltr">apply</code>, and if one relevant apply process exists, then the procedure uses the relevant apply process. The relevant apply process is identified in one of the following ways:</p>
<ul>
<li>
<p>If one existing apply process has the source database specified in <code dir="ltr">source_database</code> and uses the queue specified in <code dir="ltr">queue_name</code>, then the procedure uses this apply process.</p>
</li>
<li>
<p>If <code dir="ltr">source_database</code> is <code dir="ltr">NULL</code> and one existing apply process is using the queue specified in <code dir="ltr">queue_name</code>, then the procedure uses this apply process.</p>
</li>
</ul>
<p>If <code dir="ltr">NULL</code> and no relevant apply process exists, then the procedure creates an apply process automatically with a system-generated name.</p>
<p>If <code dir="ltr">NULL</code> and multiple relevant apply processes exist, then the procedure raises an error.</p>
<p>Each apply process and messaging client must have a unique name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t54" headers="r1c1-t54">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t54 r1c2-t54">
<p>The name of the local queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter. If the schema is not specified, then the current user is the default.</p>
<p>For capture process rules, this is the queue into which a capture process enqueues LCRs. For apply process rules, this is the queue from which an apply process dequeues messages. For messaging client rules, this is the queue from which a messaging client dequeues messages.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t54" headers="r1c1-t54">
<p><code dir="ltr">include_dml</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t54 r1c2-t54">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DML changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DML rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t54" headers="r1c1-t54">
<p><code dir="ltr">include_ddl</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t54 r1c2-t54">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DDL changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DDL rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t54" headers="r1c1-t54">
<p><code dir="ltr">include_tagged_lcr</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t54 r1c2-t54">
<p>If <code dir="ltr">TRUE</code>, then the procedure does not add a condition regarding Oracle Streams tags to the generated rules. Therefore, these rules can evaluate to <code dir="ltr">TRUE</code> regardless of whether a redo entry or LCR has a non-<code dir="ltr">NULL</code> tag. If the rules are added to the positive rule set for the process, then a redo entry is always considered for capture, and an LCR is always considered for apply, regardless of whether the redo entry or LCR has a non-<code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">TRUE</code> is appropriate for a full (for example, standby) copy of a database. If the rules are added to the negative rule set for the process, then whether a redo entry or LCR is discarded does not depend on the tag.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure adds a condition to each generated rule that causes the rule to evaluate to <code dir="ltr">TRUE</code> only if a redo entry or LCR has a <code dir="ltr">NULL</code> Oracle Streams tag. If the rules are added to the positive rule set for the process, then a redo entry is considered for capture, and an LCR is considered for apply, only when the redo entry or LCR contains a <code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">FALSE</code> might be appropriate in update-anywhere configurations to avoid sending a change back to its source database. If the rules are added to the negative rule set for the process, then a redo entry or LCR can be discarded only if it has a <code dir="ltr">NULL</code> tag.</p>
<p>Usually, specify <code dir="ltr">TRUE</code> for this parameter if the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">FALSE</code>.</p>
<p><span class="bold">See Also:</span> <a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t54" headers="r1c1-t54">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t54 r1c2-t54">
<p>The global name of the source database. If <code dir="ltr">NULL</code>, then the procedure does not add a condition regarding the source database to the generated rules.</p>
<p>For capture process rules, specify <code dir="ltr">NULL</code> or the global name of the local database if you are creating a capture process locally at the source database. If you are adding rules to a downstream capture process rule set at a downstream database, then specify the source database of the changes that will be captured.</p>
<p>For apply process rules, specify the source database of the changes that will be applied by the apply process. The source database is the database where the changes originated. If an apply process applies captured messages, then the apply process can apply messages from only one capture process at one source database.</p>
<p>For messaging client rules, specify <code dir="ltr">NULL</code> if you do not want the rules created by this procedure to have a condition for the source database. Specify a source database if you want the rules created by this procedure to have a condition for the source database. The source database is part of the information in an LCR, and user-constructed LCRs might or might not have this information.</p>
<p>If you do not include the domain name, then the procedure appends it to the database name automatically. For example, if you specify <code dir="ltr">DBS1</code> and the domain is <code dir="ltr">.NET</code>, then the procedure specifies <code dir="ltr">DBS1.NET</code> automatically.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t54" headers="r1c1-t54">
<p><code dir="ltr">dml_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t54 r1c2-t54">
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DML rule name.</p>
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t54" headers="r1c1-t54">
<p><code dir="ltr">ddl_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t54 r1c2-t54">
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DDL rule name.</p>
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t54" headers="r1c1-t54">
<p><code dir="ltr">inclusion_rule</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t54 r1c2-t54">
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">TRUE</code>, then the procedure adds the rules to the positive rule set for the Oracle Streams client.</p>
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">FALSE</code>, then the procedure adds the rules to the negative rule set for the Oracle Streams client.</p>
<p>In either case, the system creates the rule set if it does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t54" headers="r1c1-t54">
<p><code dir="ltr">and_condition</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t54 r1c2-t54">
<p>If non-<code dir="ltr">NULL</code>, appends the specified condition to the system-generated rule condition using an <code dir="ltr">AND</code> clause in the following way:</p>
<pre dir="ltr">(<span class="italic">system_condition</span>) AND (<span class="italic">and_condition</span>)
</pre>
<p>The variable in the specified condition must be <code dir="ltr">:lcr</code>. For example, to specify that the schema rules generated by the procedure evaluate to <code dir="ltr">TRUE</code> only if the Oracle Streams tag is the hexadecimal equivalent of <code dir="ltr">&#39;02&#39;</code>, specify the following condition:</p>
<pre dir="ltr">:lcr.get_tag() = HEXTORAW(&#39;&#39;02&#39;&#39;)
</pre>
<p>The <code dir="ltr">:lcr</code> in the specified condition is converted to <code dir="ltr">:dml</code> or <code dir="ltr">:ddl</code>, depending on the rule that is being generated. If you are specifying an LCR member subprogram that is dependent on the LCR type (row or DDL), then make sure this procedure only generates the appropriate rule.</p>
<p>Specifically, if you specify an LCR member subprogram that is valid only for row LCRs, then specify <code dir="ltr">TRUE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">FALSE</code> for the <code dir="ltr">include_ddl</code> parameter. If you specify an LCR member subprogram that is valid only for DDL LCRs, then specify <code dir="ltr">FALSE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">TRUE</code> for the <code dir="ltr">include_ddl</code> parameter.</p>
<p><span class="bold">See Also:</span> <a href="t_lcr.htm#BABGGBHF">Chapter 275, &#34;Logical Change Record TYPEs&#34;</a></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11374"></a>Usage Notes</p>
<p>This procedure creates DML and DDL rules automatically based on <code dir="ltr">include_dml</code> and <code dir="ltr">include_ddl</code> parameter values, respectively. Each rule has a system-generated rule name that consists of the schema name with a sequence number appended to it. The sequence number is used to avoid naming conflicts. If the schema name plus the sequence number is too long, then the schema name is truncated. A capture process, apply process, or messaging client uses the rules for filtering.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a></p>
</li>
<li>
<p><a href="#i1024974">&#34;Security Model&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11375"></a>Examples</p>
<p>The following is an example of a schema rule condition created for DML changes:</p>
<pre dir="ltr">((:dml.get_object_owner() = &#39;HR&#39;) and :dml.is_null_tag() = &#39;Y&#39; 
and :dml.get_source_database_name() = &#39;DBS1.NET&#39; )
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS394" class="refsect2"><a id="i1007301"></a>
<h3 class="refsect2">ADD_SUBSET_PROPAGATION_RULES Procedure<a id="sthref11376"></a><a id="sthref11377"></a><a id="sthref11378"></a><a id="sthref11379"></a><a id="sthref11380"></a><a id="sthref11381"></a></h3>
<p>This procedures adds propagation rules that propagate the logical change records (LCRs) related to a subset of the rows in the specified table in a source queue to a destination queue, and creates the specified propagation if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains three <code dir="ltr">OUT</code> parameters, and the other does not.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11382"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_SUBSET_PROPAGATION_RULES(
   table_name               IN   VARCHAR2,
   dml_condition            IN   VARCHAR2,
   streams_name             IN   VARCHAR2  DEFAULT NULL,
   source_queue_name        IN   VARCHAR2,
   destination_queue_name   IN   VARCHAR2,
   include_tagged_lcr       IN   BOOLEAN   DEFAULT FALSE,
   source_database          IN   VARCHAR2  DEFAULT NULL,
   insert_rule_name         OUT  VARCHAR2,
   update_rule_name         OUT  VARCHAR2,
   delete_rule_name         OUT  VARCHAR2,
   queue_to_queue           IN   BOOLEAN   DEFAULT NULL);

DBMS_STREAMS_ADM.ADD_SUBSET_PROPAGATION_RULES(
   table_name               IN   VARCHAR2,
   dml_condition            IN   VARCHAR2,
   streams_name             IN   VARCHAR2  DEFAULT NULL,
   source_queue_name        IN   VARCHAR2,
   destination_queue_name   IN   VARCHAR2,
   include_tagged_lcr       IN   BOOLEAN   DEFAULT FALSE,
   source_database          IN   VARCHAR2  DEFAULT NULL,
   queue_to_queue           IN   BOOLEAN   DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11383"></a>Parameters</p>
<div id="ARPLS68754" class="tblformal">
<p class="titleintable"><a id="sthref11384"></a><a id="sthref11385"></a>Table 159-10 ADD_SUBSET_PROPAGATION_RULES Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_SUBSET_PROPAGATION_RULES Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_SUBSET_PROPAGATION_RULES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t56">Parameter</th>
<th class="cellalignment4328" id="r1c2-t56">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t56" headers="r1c1-t56">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t56 r1c2-t56">
<p>The name of the table specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
<p>The specified table must exist in the same database as the propagation. Also, the specified table cannot have any LOB, <code dir="ltr">LONG</code>, <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>, or <code dir="ltr">XMLType</code> columns currently or in the future.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t56" headers="r1c1-t56">
<p><code dir="ltr">dml_condition</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t56 r1c2-t56">
<p>The subset condition. Specify this condition similar to the way you specify conditions in a <code dir="ltr">WHERE</code> clause in SQL.</p>
<p>For example, to specify rows in the <code dir="ltr">hr.employees</code> table where the <code dir="ltr">salary</code> is greater than <code dir="ltr">4000</code> and the <code dir="ltr">job_id</code> is <code dir="ltr">SA_MAN</code>, enter the following as the condition:</p>
<p><code dir="ltr">&#39; salary &gt; 4000 and job_id = &#39;&#39;SA_MAN&#39;&#39; &#39;</code></p>
<p><span class="bold">Note:</span> The quotation marks in the preceding example are all single quotation marks.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t56" headers="r1c1-t56">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t56 r1c2-t56">
<p>The name of the propagation. Do not specify an owner.</p>
<p>If the specified propagation does not exist, then the procedure creates it automatically.</p>
<p>If <code dir="ltr">NULL</code> and a propagation exists for the same source queue and destination queue (including database link), then the procedure uses this propagation.</p>
<p>If <code dir="ltr">NULL</code> and no propagation exists for the same source queue and destination queue (including database link), then the procedure creates a propagation automatically with a system-generated name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t56" headers="r1c1-t56">
<p><code dir="ltr">source_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t56 r1c2-t56">
<p>The name of the source queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the source queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a source queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t56" headers="r1c1-t56">
<p><code dir="ltr">destination_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t56 r1c2-t56">
<p>The name of the destination queue, including a database link, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code><code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">@dblink_name</span></code><code dir="ltr">]</code>, if the destination queue is in a remote database. The queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a destination queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema and use a database link named <code dir="ltr">dbs2.net</code>, enter <code dir="ltr">strmadmin.streams_queue@dbs2.net</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
<p>If the database link is omitted, then the procedure uses the global name of the current database, and the source queue and destination queue must be in the same database.</p>
<p><span class="bold">Note:</span> Connection qualifiers are not allowed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t56" headers="r1c1-t56">
<p><code dir="ltr">include_tagged_lcr</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t56 r1c2-t56">
<p>If <code dir="ltr">TRUE</code>, then an LCR is always considered for propagation, regardless of whether it has a non-<code dir="ltr">NULL</code> tag. This setting is appropriate for a full (for example, standby) copy of a database.</p>
<p>If <code dir="ltr">FALSE</code>, then an LCR is considered for propagation only when the LCR contains a <code dir="ltr">NULL</code> tag. A setting of <code dir="ltr">FALSE</code> is often specified in update-anywhere configurations to avoid sending a change back to its source database.</p>
<p><span class="bold">See Also:</span> <a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t56" headers="r1c1-t56">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t56 r1c2-t56">
<p>The global name of the source database. The source database is where the change originated. If <code dir="ltr">NULL</code>, then the procedure does not add a condition regarding the source database to the generated rules.</p>
<p>If you do not include the domain name, then the procedure appends it to the database name automatically. For example, if you specify <code dir="ltr">DBS1</code> and the domain is <code dir="ltr">.NET</code>, then the procedure specifies <code dir="ltr">DBS1.NET</code> automatically.</p>
<p>Oracle recommends that you specify a source database for propagation rules.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t56" headers="r1c1-t56">
<p><code dir="ltr">insert_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t56 r1c2-t56">
<p>Contains the system-generated <code dir="ltr">INSERT</code> rule name. This rule handles inserts and updates that must be converted into inserts.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t56" headers="r1c1-t56">
<p><code dir="ltr">update_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t56 r1c2-t56">
<p>Contains the system-generated <code dir="ltr">UPDATE</code> rule name. This rule handles updates that remain updates.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t56" headers="r1c1-t56">
<p><code dir="ltr">delete_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t56 r1c2-t56">
<p>Contains the system-generated <code dir="ltr">DELETE</code> rule name. This rule handles deletes and updates that must be converted into deletes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t56" headers="r1c1-t56">
<p><code dir="ltr">queue_to_queue</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t56 r1c2-t56">
<p>If <code dir="ltr">TRUE</code> or <code dir="ltr">NULL</code>, then a new propagation created by this procedure is a queue to queue propagation. A queue-to-queue propagation always has its own propagation job and uses a service for automatic failover when the destination queue is a buffered queue in an Oracle Real Application Clusters (Oracle RAC) database.</p>
<p>If <code dir="ltr">FALSE</code>, then a new propagation created by this procedure is a queue-to-dblink propagation. A queue-to-dblink propagation can share a propagation job with other propagations that use the same database link and does not support automatic failover in an Oracle RAC environment.</p>
<p>This procedure cannot change the queue to queue property of an exiting propagation. If the specified propagation exists, then the procedure behaves in the following way for each setting:</p>
<ul>
<li>
<p>If <code dir="ltr">TRUE</code> and the specified propagation is not a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">FALSE</code> and the specified propagation is a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">NULL</code>, then the procedure does not change the queue to queue property of the propagation.</p>
</li>
</ul>
<p><span class="bold">See Also:</span> <a class="olink STRMS155" href="../STRMS/strms_prop.htm#STRMS155"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about queue-to-queue propagations</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CACFCCIJ"></a>Usage Notes</p>
<p>This procedure configures propagation using the current user. Only one propagation is allowed between a particular source queue and destination queue.</p>
<p>Running this procedure generates three rules for the specified propagation: one for <code dir="ltr">INSERT</code> statements, one for <code dir="ltr">UPDATE</code> statements, and one for <code dir="ltr">DELETE</code> statements. For <code dir="ltr">INSERT</code> and <code dir="ltr">DELETE</code> statements, only row LCRs that satisfy the condition specified for the <code dir="ltr">dml_condition</code> parameter are propagated. For <code dir="ltr">UPDATE</code> statements, the following variations are possible:</p>
<ul>
<li>
<p>If both the new and old values in a row LCR satisfy the specified <code dir="ltr">dml_condition</code>, then the row LCR is propagated without any changes.</p>
</li>
<li>
<p>If neither the new or old values in a row LCR satisfy the specified <code dir="ltr">dml_condition</code>, then the row LCR is not propagated.</p>
</li>
<li>
<p>If the old values for a row LCR satisfy the specified <code dir="ltr">dml_condition</code>, but the new values do not, then the update row LCR is converted into a delete row LCR.</p>
</li>
<li>
<p>If the new values for a row LCR satisfy the specified <code dir="ltr">dml_condition</code>, but the old values do not, then the update row LCR is converted to an insert row LCR.</p>
</li>
</ul>
<p>When an update is converted into an insert or a delete, it is called row migration.</p>
<p>A propagation uses the rules for filtering. If the propagation does not have a positive rule set, then the procedure creates a positive rule set automatically, and the rules for propagating changes to the table are added to the positive rule set. A subset rule can be added to positive rule set only, not to a negative rule set. Other rules in an existing positive rule set for the propagation are not affected. Additional rules can be added using either the <code dir="ltr">DBMS_STREAMS_ADM</code> package or the <code dir="ltr">DBMS_RULE_ADM</code> package.</p>
<p>Rules for <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> statements are created automatically when you run this procedure, and these rules are given a system-generated rule name. Each rule has a system-generated rule name that consists of the table name with a sequence number appended to it. The sequence number is used to avoid naming conflicts. If the table name plus the sequence number is too long, then the table name is truncated. The <code dir="ltr">ADD_SUBSET_RULES</code> procedure is overloaded, and the system-generated rule names for <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> statements are returned.</p>
<p>When you create propagation subset rules for a table, you should create an unconditional supplemental log group at the source database with all the columns in the table. Supplemental logging is required if an update must be converted to an insert. The propagation rule must have all the column values to be able to perform this conversion correctly.</p>
<div class="infobox-note">
<p class="notep1">Attention:</p>
Subset rules should only reside in positive rule sets. You should not add subset rules to negative rule sets. Doing so might have unpredictable results because row migration would not be performed on LCRs that are not discarded by the negative rule set.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a> and <a href="#CDEBBFCH">&#34;Propagation Rules for LCRs&#34;</a> for more information about the rules created by this procedure</p>
</li>
<li>
<p><a href="#i1026648">&#34;Propagation User&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11386"></a>Examples</p>
<p>The following is an example of a rule condition created for filtering a row LCR containing an update operation when the <code dir="ltr">dml_condition</code> is <code dir="ltr">region_id&nbsp;=&nbsp;2</code>, the <code dir="ltr">table_name</code> is <code dir="ltr">hr.regions</code>, and the <code dir="ltr">source_database</code> is <code dir="ltr">dbs1.net</code>:</p>
<pre dir="ltr">:dml.get_object_owner()=&#39;HR&#39; AND :dml.get_object_name()=&#39;REGIONS&#39; 
AND :dml.is_null_tag()=&#39;Y&#39; AND :dml.get_source_database_name()=&#39;DBS1.NET&#39; 
AND :dml.get_command_type()=&#39;UPDATE&#39; 
AND (:dml.get_value(&#39;NEW&#39;,&#39;&#34;REGION_ID&#34;&#39;) IS NOT NULL) 
AND (:dml.get_value(&#39;OLD&#39;,&#39;&#34;REGION_ID&#34;&#39;) IS NOT NULL) 
AND (:dml.get_value(&#39;OLD&#39;,&#39;&#34;REGION_ID&#34;&#39;).AccessNumber()=2) 
AND (:dml.get_value(&#39;NEW&#39;,&#39;&#34;REGION_ID&#34;&#39;).AccessNumber()=2)
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS329" class="refsect2"><a id="i1027849"></a>
<h3 class="refsect2">ADD_SUBSET_RULES Procedure<a id="sthref11387"></a><a id="sthref11388"></a><a id="sthref11389"></a><a id="sthref11390"></a><a id="sthref11391"></a><a id="sthref11392"></a><a id="sthref11393"></a><a id="sthref11394"></a><a id="sthref11395"></a></h3>
<p>This procedure adds rules to a rule set of one of the following types of Oracle Streams clients:</p>
<ul>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">capture</code>, this procedure adds capture process rules for capturing changes to a subset of rows in a specified table. See <a href="#i1023683">&#34;Capture Process Rules for Changes in the Redo Log&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">sync_capture</code>, this procedure adds rules for capturing changes to a subset of rows in a specified table. See <a href="#CDEFFFFC">&#34;Synchronous Capture Rules for DML Changes to Tables&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">apply</code> and the <code dir="ltr">streams_name</code> parameter specifies the name of an apply process, this procedure adds apply process rules for applying logical change records (LCRs) in a queue that contain changes to a subset of rows in a specified table. The rules can specify that the LCRs must be from a particular source database. See <a href="#i1023716">&#34;Apply Process Rules for LCRs&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">dequeue</code>, this procedure adds messaging client rules for dequeuing persistent LCRs from a queue that contain changes to a subset of rows in a specified table. The rules can specify that the LCRs must be from a particular source database. See <a href="#i1023717">&#34;Messaging Client Rules for LCRs&#34;</a> for more information about these rules.</p>
</li>
</ul>
<p>This procedure creates the specified capture process, synchronous capture, apply process, or messaging client if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains three <code dir="ltr">OUT</code> parameters, and the other does not.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Currently, messaging clients cannot dequeue buffered messages.</p>
</li>
<li>
<p>The invoking user must be granted the <code dir="ltr">DBA</code> role to create a synchronous capture.</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11396"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_SUBSET_RULES(
   table_name          IN   VARCHAR2,
   dml_condition       IN   VARCHAR2,
   streams_type        IN   VARCHAR2 DEFAULT &#39;apply&#39;,
   streams_name        IN   VARCHAR2 DEFAULT NULL,
   queue_name          IN   VARCHAR2 DEFAULT &#39;streams_queue&#39;,
   include_tagged_lcr  IN   BOOLEAN  DEFAULT FALSE,
   source_database     IN   VARCHAR2 DEFAULT NULL,
   insert_rule_name    OUT  VARCHAR2,
   update_rule_name    OUT  VARCHAR2,
   delete_rule_name    OUT  VARCHAR2);

DBMS_STREAMS_ADM.ADD_SUBSET_RULES(
   table_name          IN   VARCHAR2,
   dml_condition       IN   VARCHAR2,
   streams_type        IN   VARCHAR2 DEFAULT &#39;apply&#39;,
   streams_name        IN   VARCHAR2 DEFAULT NULL,
   queue_name          IN   VARCHAR2 DEFAULT &#39;streams_queue&#39;,
   include_tagged_lcr  IN   BOOLEAN  DEFAULT FALSE,
   source_database     IN   VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11397"></a>Parameters</p>
<div id="ARPLS68755" class="tblformal">
<p class="titleintable"><a id="sthref11398"></a><a id="sthref11399"></a>Table 159-11 ADD_SUBSET_RULES Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_SUBSET_RULES Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_SUBSET_RULES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t60">Parameter</th>
<th class="cellalignment4328" id="r1c2-t60">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t60" headers="r1c1-t60">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t60 r1c2-t60">
<p>The name of the table specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
<p>The specified table must exist in the same database as the capture process, synchronous capture, apply process, or messaging client. Also, the specified table cannot have any LOB, <code dir="ltr">LONG</code>, <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>, or <code dir="ltr">XMLType</code> columns currently or in the future.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t60" headers="r1c1-t60">
<p><code dir="ltr">dml_condition</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t60 r1c2-t60">
<p>The subset condition. Specify this condition similar to the way you specify conditions in a <code dir="ltr">WHERE</code> clause in SQL.</p>
<p>For example, to specify rows in the <code dir="ltr">hr.employees</code> table where the <code dir="ltr">salary</code> is greater than <code dir="ltr">4000</code> and the <code dir="ltr">job_id</code> is <code dir="ltr">SA_MAN</code>, enter the following as the condition:</p>
<p><code dir="ltr">&#39; salary &gt; 4000 and job_id = &#39;&#39;SA_MAN&#39;&#39; &#39;</code></p>
<p><span class="bold">Note:</span> The quotation marks in the preceding example are all single quotation marks.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t60" headers="r1c1-t60">
<p><code dir="ltr">streams_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t60 r1c2-t60">
<p>The type of Oracle Streams client:</p>
<ul>
<li>
<p>Specify <code dir="ltr">capture</code> for a capture process.</p>
</li>
<li>
<p>Specify <code dir="ltr">sync_capture</code> for a synchronous capture.</p>
</li>
<li>
<p>Specify <code dir="ltr">apply</code> for an apply process.</p>
</li>
<li>
<p>Specify <code dir="ltr">dequeue</code> for a messaging client.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t60" headers="r1c1-t60">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t60 r1c2-t60">
<p>The name of the capture process, synchronous capture, apply process, or messaging client. Do not specify an owner.</p>
<p>If <code dir="ltr">NULL</code>, if <code dir="ltr">streams_type</code> is <code dir="ltr">capture</code>, <code dir="ltr">sync_capture</code>, or <code dir="ltr">dequeue</code>, and if one relevant capture process, synchronous capture, or messaging client for the queue exists, then the procedure uses the relevant Oracle Streams client. If no relevant Oracle Streams client exists for the queue, then the procedure creates an Oracle Streams client automatically with a system-generated name. If <code dir="ltr">NULL</code> and multiple Oracle Streams clients of the specified <code dir="ltr">streams_type</code> for the queue exist, then the procedure raises an error.</p>
<p>If <code dir="ltr">NULL</code>, if <code dir="ltr">streams_type</code> is <code dir="ltr">apply</code>, and if one relevant apply process exists, then the procedure uses the relevant apply process. The relevant apply process is identified in one of the following ways:</p>
<ul>
<li>
<p>If one existing apply process has the source database specified in <code dir="ltr">source_database</code> and uses the queue specified in <code dir="ltr">queue_name</code>, then the procedure uses this apply process.</p>
</li>
<li>
<p>If <code dir="ltr">source_database</code> is <code dir="ltr">NULL</code> and one existing apply process is using the queue specified in <code dir="ltr">queue_name</code>, then the procedure uses this apply process.</p>
</li>
</ul>
<p>If <code dir="ltr">NULL</code> and no relevant apply process exists, then the procedure creates an apply process automatically with a system-generated name.</p>
<p>If <code dir="ltr">NULL</code> and multiple relevant apply processes exist, then the procedure raises an error.</p>
<p>Each apply process and messaging client must have a unique name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t60" headers="r1c1-t60">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t60 r1c2-t60">
<p>The name of the local queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter. If the schema is not specified, then the current user is the default.</p>
<p>For capture process or synchronous capture rules, this is the queue into which a capture process or synchronous capture enqueues LCRs. For apply process rules, this is the queue from which an apply process dequeues messages. For messaging client rules, this is the queue from which a messaging client dequeues messages.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t60" headers="r1c1-t60">
<p><code dir="ltr">include_tagged_lcr</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t60 r1c2-t60">
<p>If <code dir="ltr">TRUE</code>, then the Oracle Streams client performs its action regardless of the tag:</p>
<ul>
<li>
<p>A redo entry is always considered for capture by a capture process, regardless of whether the redo entry has a non-<code dir="ltr">NULL</code> tag.</p>
</li>
<li>
<p>A change is always considered for capture by a synchronous capture, regardless of whether the session that makes the change has a non-<code dir="ltr">NULL</code> tag.</p>
</li>
<li>
<p>An LCR is always considered for apply by an apply process or dequeue by a messaging client, regardless of whether redo entry or LCR has a non-<code dir="ltr">NULL</code> tag.</p>
</li>
</ul>
<p>If <code dir="ltr">FALSE</code>, then an Oracle Streams client performs its action only when the tag is <code dir="ltr">NULL</code>:</p>
<ul>
<li>
<p>A redo entry is considered for capture by a capture process only when the redo entry contains a <code dir="ltr">NULL</code> tag.</p>
</li>
<li>
<p>A change is considered for capture by a synchronous capture only when the session that makes the change has a <code dir="ltr">NULL</code> tag.</p>
</li>
<li>
<p>An LCR is considered for apply by an apply process or dequeue by a messaging client only if the LCR contains a <code dir="ltr">NULL</code> tag.</p>
</li>
</ul>
<p>A setting of <code dir="ltr">FALSE</code> is often specified in update-anywhere configurations to avoid sending a change back to its source database.</p>
<p><span class="bold">See Also:</span> <a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t60" headers="r1c1-t60">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t60 r1c2-t60">
<p>The global name of the source database. If <code dir="ltr">NULL</code>, then the procedure does not add a condition regarding the source database to the generated rules.</p>
<p>For capture process rules, specify <code dir="ltr">NULL</code> or the global name of the local database if you are creating a capture process locally at the source database. If you are adding rules to a downstream capture process rule set at a downstream database, then specify the source database of the changes that will be captured.</p>
<p>For synchronous capture rules, specify the name of the local database.</p>
<p>For apply process rules, specify the source database of the changes that will be applied by the apply process. The source database is the database where the changes originated. If an apply process applies captured messages, then the apply process can apply messages from only one capture process at one source database.</p>
<p>For messaging client rules, specify <code dir="ltr">NULL</code> if you do not want the rules created by this procedure to have a condition for the source database. Specify a source database if you want the rules created by this procedure to have a condition for the source database. The source database is part of the information in an LCR, and user-constructed LCRs might or might not have this information.</p>
<p>If you do not include the domain name, then the procedure appends it to the database name automatically. For example, if you specify <code dir="ltr">DBS1</code> and the domain is <code dir="ltr">.NET</code>, then the procedure specifies <code dir="ltr">DBS1.NET</code> automatically.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t60" headers="r1c1-t60">
<p><code dir="ltr">insert_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t60 r1c2-t60">
<p>Contains the system-generated <code dir="ltr">INSERT</code> rule name. This rule handles inserts and updates that must be converted into inserts.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t60" headers="r1c1-t60">
<p><code dir="ltr">update_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t60 r1c2-t60">
<p>Contains the system-generated <code dir="ltr">UPDATE</code> rule name. This rule handles updates that remain updates.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t60" headers="r1c1-t60">
<p><code dir="ltr">delete_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t60 r1c2-t60">
<p>Contains the system-generated <code dir="ltr">DELETE</code> rule name. This rule handles deletes and updates that must be converted into deletes</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11400"></a>Usage Notes</p>
<p>Running this procedure generates three rules for the specified capture process, synchronous capture, apply process, or messaging client: one for <code dir="ltr">INSERT</code> statements, one for <code dir="ltr">UPDATE</code> statements, and one for <code dir="ltr">DELETE</code> statements. For <code dir="ltr">INSERT</code> and <code dir="ltr">DELETE</code> statements, only DML changes that satisfy the condition specified for the <code dir="ltr">dml_condition</code> parameter are captured, applied, or dequeued. For <code dir="ltr">UPDATE</code> statements, the following variations are possible:</p>
<ul>
<li>
<p>If both the new and old values in a DML change satisfy the specified <code dir="ltr">dml_condition</code>, then the DML change is captured, applied, or dequeued without any changes.</p>
</li>
<li>
<p>If neither the new or old values in a DML change satisfy the specified <code dir="ltr">dml_condition</code>, then the DML change is not captured, applied, or dequeued.</p>
</li>
<li>
<p>If the old values for a DML change satisfy the specified <code dir="ltr">dml_condition</code>, but the new values do not, then the DML change is converted into a delete.</p>
</li>
<li>
<p>If the new values for a DML change satisfy the specified <code dir="ltr">dml_condition</code>, but the old values do not, then the DML change is converted to an insert.</p>
</li>
</ul>
<p>When an update is converted into an insert or a delete, it is called row migration.</p>
<p>A capture process, synchronous capture, apply process, or messaging client uses the rules for filtering. If the Oracle Streams client does not have a positive rule set, then this procedure creates a positive rule set automatically, and adds the rules for the table to the positive rule set. A subset rule can be added to positive rule set only, not to a negative rule set. Other rules in an existing rule set for the process are not affected. Additional rules can be added using either the <code dir="ltr">DBMS_STREAMS_ADM</code> package or the <code dir="ltr">DBMS_RULE_ADM</code> package.</p>
<p>Rules for <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> statements are created automatically when you run this procedure, and these rules are given a system-generated rule name. Each rule has a system-generated rule name that consists of the table name with a sequence number appended to it. The sequence number is used to avoid naming conflicts. If the table name plus the sequence number is too long, then the table name is truncated. The <code dir="ltr">ADD_SUBSET_RULES</code> procedure is overloaded, and the system-generated rule names for <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> statements are returned.</p>
<div class="infobox-note">
<p class="notep1">Attention:</p>
Subset rules should only reside in positive rule sets. You should not add subset rules to negative rule sets. Doing so might have unpredictable results because row migration would not be performed on LCRs that are not discarded by the negative rule set.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a></p>
</li>
<li>
<p><a href="#i1024974">&#34;Security Model&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11401"></a>Examples</p>
<p>The following is an example of a rule condition created for filtering DML changes containing an update operation when the <code dir="ltr">dml_condition</code> is <code dir="ltr">region_id&nbsp;=&nbsp;2</code>, the <code dir="ltr">table_name</code> is <code dir="ltr">hr.regions</code>, and the <code dir="ltr">source_database</code> is <code dir="ltr">dbs1.net</code>:</p>
<pre dir="ltr">:dml.get_object_owner()=&#39;HR&#39; AND :dml.get_object_name()=&#39;REGIONS&#39; 
AND :dml.is_null_tag()=&#39;Y&#39; AND :dml.get_source_database_name()=&#39;DBS1.NET&#39; 
AND :dml.get_command_type()=&#39;UPDATE&#39; 
AND (:dml.get_value(&#39;NEW&#39;,&#39;&#34;REGION_ID&#34;&#39;) IS NOT NULL) 
AND (:dml.get_value(&#39;OLD&#39;,&#39;&#34;REGION_ID&#34;&#39;) IS NOT NULL) 
AND (:dml.get_value(&#39;OLD&#39;,&#39;&#34;REGION_ID&#34;&#39;).AccessNumber()=2) 
AND (:dml.get_value(&#39;NEW&#39;,&#39;&#34;REGION_ID&#34;&#39;).AccessNumber()=2)
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS316" class="refsect2"><a id="i997544"></a>
<h3 class="refsect2">ADD_TABLE_PROPAGATION_RULES Procedure<a id="sthref11402"></a><a id="sthref11403"></a><a id="sthref11404"></a><a id="sthref11405"></a></h3>
<p>This procedures adds table rules to the positive rule set for a propagation, or adds table rules to the negative rule set for a propagation, and creates the specified propagation if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains two <code dir="ltr">OUT</code> parameters, and the other does not.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11406"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_TABLE_PROPAGATION_RULES(
   table_name              IN   VARCHAR2,
   streams_name            IN   VARCHAR2  DEFAULT NULL,
   source_queue_name       IN   VARCHAR2,
   destination_queue_name  IN   VARCHAR2,
   include_dml             IN   BOOLEAN   DEFAULT TRUE,
   include_ddl             IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr      IN   BOOLEAN   DEFAULT FALSE,
   source_database         IN   VARCHAR2  DEFAULT NULL,
   dml_rule_name           OUT  VARCHAR2,
   ddl_rule_name           OUT  VARCHAR2,
   inclusion_rule          IN   BOOLEAN   DEFAULT TRUE,
   and_condition           IN   VARCHAR2  DEFAULT NULL,
   queue_to_queue          IN   BOOLEAN   DEFAULT NULL);

DBMS_STREAMS_ADM.ADD_TABLE_PROPAGATION_RULES(
   table_name              IN   VARCHAR2,
   streams_name            IN   VARCHAR2  DEFAULT NULL,
   source_queue_name       IN   VARCHAR2,
   destination_queue_name  IN   VARCHAR2,
   include_dml             IN   BOOLEAN   DEFAULT TRUE,
   include_ddl             IN   BOOLEAN   DEFAULT FALSE,
   include_tagged_lcr      IN   BOOLEAN   DEFAULT FALSE,
   source_database         IN   VARCHAR2  DEFAULT NULL,
   inclusion_rule          IN   BOOLEAN   DEFAULT TRUE,
   and_condition           IN   VARCHAR2  DEFAULT NULL,
   queue_to_queue          IN   BOOLEAN   DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11407"></a>Parameters</p>
<div id="ARPLS68756" class="tblformal">
<p class="titleintable"><a id="sthref11408"></a><a id="sthref11409"></a>Table 159-12 ADD_TABLE_PROPAGATION_RULES Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_TABLE_PROPAGATION_RULES Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_TABLE_PROPAGATION_RULES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t63">Parameter</th>
<th class="cellalignment4328" id="r1c2-t63">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t63" headers="r1c1-t63">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t63 r1c2-t63">
<p>The name of the table specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">table_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t63" headers="r1c1-t63">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t63 r1c2-t63">
<p>The name of the propagation. Do not specify an owner.</p>
<p>If the specified propagation does not exist, then the procedure creates it automatically.</p>
<p>If <code dir="ltr">NULL</code> and a propagation exists for the same source queue and destination queue (including database link), then the procedure uses this propagation.</p>
<p>If <code dir="ltr">NULL</code> and no propagation exists for the same source queue and destination queue (including database link), then the procedure creates a propagation automatically with a system-generated name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t63" headers="r1c1-t63">
<p><code dir="ltr">source_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t63 r1c2-t63">
<p>The name of the source queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the source queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a source queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t63" headers="r1c1-t63">
<p><code dir="ltr">destination_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t63 r1c2-t63">
<p>The name of the destination queue, including a database link, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code><code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">@dblink_name</span></code><code dir="ltr">]</code>, if the destination queue is in a remote database. The queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a destination queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema and use a database link named <code dir="ltr">dbs2.net</code>, enter <code dir="ltr">strmadmin.streams_queue@dbs2.net</code> for this parameter.</p>
<p>If the schema is not specified, then the current user is the default.</p>
<p>If the database link is omitted, then the procedure uses the global name of the current database, and the source queue and destination queue must be in the same database.</p>
<p><span class="bold">Note:</span> Connection qualifiers are not allowed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t63" headers="r1c1-t63">
<p><code dir="ltr">include_dml</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t63 r1c2-t63">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DML changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DML rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t63" headers="r1c1-t63">
<p><code dir="ltr">include_ddl</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t63 r1c2-t63">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a rule for DDL changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DDL rule. <code dir="ltr">NULL</code> is not permitted.</p>
<p>The generated rule evaluates to <code dir="ltr">TRUE</code> for any DDL change that operates on the table or on an object that is part of the table, such as an index or trigger on the table. The rule evaluates to <code dir="ltr">FALSE</code> for any DDL change that either does not refer to the table or refers to the table in a subordinate way. For example, the rule evaluates to <code dir="ltr">FALSE</code> for changes that create synonyms or views based on the table. The rule also evaluates to <code dir="ltr">FALSE</code> for a change to a PL/SQL subprogram that refers to the table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t63" headers="r1c1-t63">
<p><code dir="ltr">include_tagged_lcr</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t63 r1c2-t63">
<p>If <code dir="ltr">TRUE</code>, then the procedure does not add a condition regarding Oracle Streams tags to the generated rules. Therefore, these rules can evaluate to <code dir="ltr">TRUE</code> regardless of whether a logical change record (LCR) has a non-<code dir="ltr">NULL</code> tag. If the rules are added to the positive rule set for the propagation, then an LCR is always considered for propagation, regardless of whether it has a non-<code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">TRUE</code> is appropriate for a full (for example, standby) copy of a database. If the rules are added to the negative rule set for the propagation, then whether an LCR is discarded does not depend on the tag for the LCR.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure adds a condition to each generated rule that causes the rule to evaluate to <code dir="ltr">TRUE</code> only if an LCR has a <code dir="ltr">NULL</code> Oracle Streams tag. If the rules are added to the positive rule set for the propagation, then an LCR is considered for propagation only when the LCR contains a <code dir="ltr">NULL</code> tag. If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">FALSE</code> might be appropriate in update-anywhere configurations to avoid sending a change back to its source database. If the rules are added to the negative rule set for the propagation, then an LCR can be discarded only if it has a <code dir="ltr">NULL</code> tag.</p>
<p>Usually, specify <code dir="ltr">TRUE</code> for this parameter if the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">FALSE</code>.</p>
<p><span class="bold">See Also:</span> <a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t63" headers="r1c1-t63">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t63 r1c2-t63">
<p>The global name of the source database. The source database is where the change originated. If <code dir="ltr">NULL</code>, then the procedure does not add a condition regarding the source database to the generated rules.</p>
<p>If you do not include the domain name, then the procedure appends it to the database name automatically. For example, if you specify <code dir="ltr">DBS1</code> and the domain is <code dir="ltr">.NET</code>, then the procedure specifies <code dir="ltr">DBS1.NET</code> automatically.</p>
<p>Oracle recommends that you specify a source database for propagation rules.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t63" headers="r1c1-t63">
<p><code dir="ltr">dml_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t63 r1c2-t63">
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DML rule name.</p>
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t63" headers="r1c1-t63">
<p><code dir="ltr">ddl_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t63 r1c2-t63">
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DDL rule name.</p>
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t63" headers="r1c1-t63">
<p><code dir="ltr">inclusion_rule</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t63 r1c2-t63">
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">TRUE</code>, then the procedure adds the rules to the positive rule set for the propagation.</p>
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">FALSE</code>, then the procedure adds the rules to the negative rule set for the propagation.</p>
<p>In either case, the system creates the rule set if it does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t63" headers="r1c1-t63">
<p><code dir="ltr">and_condition</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t63 r1c2-t63">
<p>If non-<code dir="ltr">NULL</code>, appends the specified condition to the system-generated rule condition using an <code dir="ltr">AND</code> clause in the following way:</p>
<pre dir="ltr">(<span class="italic">system_condition</span>) AND (<span class="italic">and_condition</span>)
</pre>
<p>The variable in the specified condition must be <code dir="ltr">:lcr</code>. For example, to specify that the table rules generated by the procedure evaluate to <code dir="ltr">TRUE</code> only if the Oracle Streams tag is the hexadecimal equivalent of <code dir="ltr">&#39;02&#39;</code>, specify the following condition:</p>
<pre dir="ltr">:lcr.get_tag() = HEXTORAW(&#39;&#39;02&#39;&#39;)
</pre>
<p>The <code dir="ltr">:lcr</code> in the specified condition is converted to <code dir="ltr">:dml</code> or <code dir="ltr">:ddl</code>, depending on the rule that is being generated. If you are specifying an LCR member subprogram that is dependent on the LCR type (row or DDL), then make sure this procedure only generates the appropriate rule.</p>
<p>Specifically, if you specify an LCR member subprogram that is valid only for row LCRs, then specify <code dir="ltr">TRUE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">FALSE</code> for the <code dir="ltr">include_ddl</code> parameter. If you specify an LCR member subprogram that is valid only for DDL LCRs, then specify <code dir="ltr">FALSE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">TRUE</code> for the <code dir="ltr">include_ddl</code> parameter.</p>
<p><span class="bold">See Also:</span> <a href="t_lcr.htm#BABGGBHF">Chapter 275, &#34;Logical Change Record TYPEs&#34;</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t63" headers="r1c1-t63">
<p><code dir="ltr">queue_to_queue</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t63 r1c2-t63">
<p>If <code dir="ltr">TRUE</code> or <code dir="ltr">NULL</code>, then a new propagation created by this procedure is a queue to queue propagation. A queue-to-queue propagation always has its own propagation job and uses a service for automatic failover when the destination queue is a buffered queue in an Oracle Real Application Clusters (Oracle RAC) database.</p>
<p>If <code dir="ltr">FALSE</code>, then a new propagation created by this procedure is a queue-to-dblink propagation. A queue-to-dblink propagation can share a propagation job with other propagations that use the same database link and does not support automatic failover in an Oracle RAC environment.</p>
<p>This procedure cannot change the queue to queue property of an exiting propagation. If the specified propagation exists, then the procedure behaves in the following way for each setting:</p>
<ul>
<li>
<p>If <code dir="ltr">TRUE</code> and the specified propagation is not a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">FALSE</code> and the specified propagation is a queue to queue propagation, then the procedure raises an error.</p>
</li>
<li>
<p>If <code dir="ltr">NULL</code>, then the procedure does not change the queue to queue property of the propagation.</p>
</li>
</ul>
<p><span class="bold">See Also:</span> <a class="olink STRMS155" href="../STRMS/strms_prop.htm#STRMS155"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about queue-to-queue propagations</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11410"></a>Usage Notes</p>
<p>This procedure configures propagation using the current user. Only one propagation is allowed between a particular source queue and destination queue.</p>
<p>This procedure creates DML and DDL rules automatically based on <code dir="ltr">include_dml</code> and <code dir="ltr">include_ddl</code> parameter values, respectively. Each rule has a system-generated rule name that consists of the table name with a sequence number appended to it. The sequence number is used to avoid naming conflicts. If the table name plus the sequence number is too long, then the table name is truncated. A propagation uses the rules for filtering.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a> and <a href="#CDEBBFCH">&#34;Propagation Rules for LCRs&#34;</a> for more information about the rules created by this procedure</p>
</li>
<li>
<p><a href="#i1024974">&#34;Security Model&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11411"></a>Examples</p>
<p>The following is an example of a table rule condition created for filtering DML statements:</p>
<pre dir="ltr">(((:dml.get_object_owner() = &#39;HR&#39; and :dml.get_object_name() = &#39;LOCATIONS&#39;)) 
and :dml.is_null_tag() = &#39;Y&#39; and :dml.get_source_database_name() = &#39;DBS1.NET&#39; )
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS308" class="refsect2"><a id="i997673"></a>
<h3 class="refsect2">ADD_TABLE_RULES Procedure<a id="sthref11412"></a><a id="sthref11413"></a><a id="sthref11414"></a><a id="sthref11415"></a><a id="sthref11416"></a><a id="sthref11417"></a><a id="sthref11418"></a></h3>
<p>This procedure adds rules to a rule set of one of the following types of Oracle Streams clients:</p>
<ul>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">capture</code>, this procedure adds capture process rules for capturing changes to a specified table. See <a href="#i1023683">&#34;Capture Process Rules for Changes in the Redo Log&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">sync_capture</code>, this procedure adds rules for capturing changes to a specified table. See <a href="#CDEFFFFC">&#34;Synchronous Capture Rules for DML Changes to Tables&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">apply</code> and the <code dir="ltr">streams_name</code> parameter specifies the name of an apply process, this procedure adds apply process rules for applying logical change records (LCRs) in a queue that contain changes to a specified table. The rules can specify that the LCRs must be from a particular source database. See <a href="#i1023716">&#34;Apply Process Rules for LCRs&#34;</a> for more information about these rules.</p>
</li>
<li>
<p>When the <code dir="ltr">streams_type</code> parameter is set to <code dir="ltr">dequeue</code>, this procedure adds messaging client rules for dequeuing persistent LCRs from a queue that contain changes to a specified table. The rules can specify that the LCRs must be from a particular source database. See <a href="#i1023717">&#34;Messaging Client Rules for LCRs&#34;</a> for more information about these rules.</p>
</li>
</ul>
<p>This procedure creates the specified capture process, synchronous capture, apply process, or messaging client if it does not exist.</p>
<p>This procedure is overloaded. One version of this procedure contains two <code dir="ltr">OUT</code> parameters, and the other does not.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Currently, messaging clients cannot dequeue buffered messages.</p>
</li>
<li>
<p>The invoking user must be granted the <code dir="ltr">DBA</code> role to create a synchronous capture.</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11419"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.ADD_TABLE_RULES(
   table_name          IN   VARCHAR2,
   streams_type        IN   VARCHAR2,
   streams_name        IN   VARCHAR2 DEFAULT NULL,
   queue_name          IN   VARCHAR2 DEFAULT &#39;streams_queue&#39;,
   include_dml         IN   BOOLEAN  DEFAULT TRUE,
   include_ddl         IN   BOOLEAN  DEFAULT FALSE,
   include_tagged_lcr  IN   BOOLEAN  DEFAULT FALSE,
   source_database     IN   VARCHAR2 DEFAULT NULL,
   dml_rule_name       OUT  VARCHAR2,
   ddl_rule_name       OUT  VARCHAR2,
   inclusion_rule      IN   BOOLEAN   DEFAULT TRUE,
   and_condition       IN   VARCHAR2  DEFAULT NULL);

DBMS_STREAMS_ADM.ADD_TABLE_RULES(
   table_name          IN   VARCHAR2,
   streams_type        IN   VARCHAR2,
   streams_name        IN   VARCHAR2 DEFAULT NULL,
   queue_name          IN   VARCHAR2 DEFAULT &#39;streams_queue&#39;,
   include_dml         IN   BOOLEAN  DEFAULT TRUE,
   include_ddl         IN   BOOLEAN  DEFAULT FALSE,
   include_tagged_lcr  IN   BOOLEAN  DEFAULT FALSE,
   source_database     IN   VARCHAR2 DEFAULT NULL,
   inclusion_rule      IN   BOOLEAN   DEFAULT TRUE,
   and_condition       IN   VARCHAR2  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11420"></a>Parameters</p>
<div id="ARPLS68757" class="tblformal">
<p class="titleintable"><a id="sthref11421"></a><a id="sthref11422"></a>Table 159-13 ADD_TABLE_RULES Procedure Parameters</p>
<table class="cellalignment4330" title="ADD_TABLE_RULES Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.ADD_TABLE_RULES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t66">Parameter</th>
<th class="cellalignment4328" id="r1c2-t66">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t66" headers="r1c1-t66">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t66 r1c2-t66">
<p>The name of the table specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
<p>You can specify a table that does not yet exist, because Oracle Streams does not validate the existence of the table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t66" headers="r1c1-t66">
<p><code dir="ltr">streams_type</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t66 r1c2-t66">
<p>The type of Oracle Streams client:</p>
<ul>
<li>
<p>Specify <code dir="ltr">capture</code> for a capture process.</p>
</li>
<li>
<p>Specify <code dir="ltr">sync_capture</code> for a synchronous capture.</p>
</li>
<li>
<p>Specify <code dir="ltr">apply</code> for an apply process.</p>
</li>
<li>
<p>Specify <code dir="ltr">dequeue</code> for a messaging client.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t66" headers="r1c1-t66">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t66 r1c2-t66">
<p>The name of the capture process, synchronous capture, apply process, or messaging client. Do not specify an owner.</p>
<p>If <code dir="ltr">NULL</code>, if <code dir="ltr">streams_type</code> is <code dir="ltr">capture</code>, <code dir="ltr">sync_capture</code>, or <code dir="ltr">dequeue</code>, and if one relevant capture process, synchronous capture, or messaging client for the queue exists, then the procedure uses the relevant Oracle Streams client. If no relevant Oracle Streams client exists for the queue, then the procedure creates an Oracle Streams client automatically with a system-generated name. If <code dir="ltr">NULL</code> and multiple Oracle Streams clients of the specified <code dir="ltr">streams_type</code> for the queue exist, then the procedure raises an error.</p>
<p>If <code dir="ltr">NULL</code>, if <code dir="ltr">streams_type</code> is <code dir="ltr">apply</code>, and if one relevant apply process exists, then the procedure uses the relevant apply process. The relevant apply process is identified in one of the following ways:</p>
<ul>
<li>
<p>If one existing apply process has the source database specified in <code dir="ltr">source_database</code> and uses the queue specified in <code dir="ltr">queue_name</code>, then the procedure uses this apply process.</p>
</li>
<li>
<p>If <code dir="ltr">source_database</code> is <code dir="ltr">NULL</code> and one existing apply process is using the queue specified in <code dir="ltr">queue_name</code>, then the procedure uses this apply process.</p>
</li>
</ul>
<p>If <code dir="ltr">NULL</code> and no relevant apply process exists, then the procedure creates an apply process automatically with a system-generated name.</p>
<p>If <code dir="ltr">NULL</code> and multiple relevant apply processes exist, then the procedure raises an error.</p>
<p>Each apply process and messaging client must have a unique name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t66" headers="r1c1-t66">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t66 r1c2-t66">
<p>The name of the local queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the queue, and the queue must be <code dir="ltr">ANYDATA</code> type.</p>
<p>For example, to specify a queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter. If the schema is not specified, then the current user is the default.</p>
<p>For capture process or synchronous capture rules, this is the queue into which a capture process or synchronous capture enqueues LCRs. For apply process rules, this is the queue from which an apply process dequeues messages. For messaging client rules, this is the queue from which a messaging client dequeues messages.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t66" headers="r1c1-t66">
<p><code dir="ltr">include_dml</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t66 r1c2-t66">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a DML rule for DML changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DML rule. <code dir="ltr">NULL</code> is not permitted.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t66" headers="r1c1-t66">
<p><code dir="ltr">include_ddl</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t66 r1c2-t66">
<p>If <code dir="ltr">TRUE</code>, then the procedure creates a DDL rule for DDL changes. If <code dir="ltr">FALSE</code>, then the procedure does not create a DDL rule. <code dir="ltr">NULL</code> is not permitted.</p>
<p>The generated rule evaluates to <code dir="ltr">TRUE</code> for any DDL change that operates on the table or on an object that is part of the table, such as an index or trigger on the table. The rule evaluates to <code dir="ltr">FALSE</code> for any DDL change that either does not refer to the table or refers to the table in a subordinate way. For example, the rule evaluates to <code dir="ltr">FALSE</code> for changes that create synonyms or views based on the table. The rule also evaluates to <code dir="ltr">FALSE</code> for a change to a PL/SQL subprogram that refers to the table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t66" headers="r1c1-t66">
<p><code dir="ltr">include_tagged_lcr</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t66 r1c2-t66">
<p>If <code dir="ltr">TRUE</code>, then the procedure does not add a condition regarding Oracle Streams tags to the generated rules. Therefore, these rules can evaluate to <code dir="ltr">TRUE</code> regardless of whether a redo entry, session, or LCR has a non-<code dir="ltr">NULL</code> tag. If the rules are added to the positive rule set for the Oracle Streams client, then the Oracle Streams client performs its action regardless of the tag:</p>
<ul>
<li>
<p>A redo entry is always considered for capture by a capture process, regardless of whether the redo entry has a non-<code dir="ltr">NULL</code> tag.</p>
</li>
<li>
<p>A change is always considered for capture by a synchronous capture, regardless of whether the session that makes the change has a non-<code dir="ltr">NULL</code> tag.</p>
</li>
<li>
<p>An LCR is always considered for apply by an apply process or dequeue by a messaging client, regardless of whether redo entry or LCR has a non-<code dir="ltr">NULL</code> tag.</p>
</li>
</ul>
<p>If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">TRUE</code> is appropriate for a full (for example, standby) copy of a database. If the rules are added to the negative rule set for the Oracle Streams client, then whether a database change is discarded does not depend on the tag.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure adds a condition to each generated rule that causes the rule to evaluate to <code dir="ltr">TRUE</code> only if a redo entry, session, or LCR has a <code dir="ltr">NULL</code> Oracle Streams tag. If the rules are added to the positive rule set for an Oracle Streams client, then the Oracle Streams client performs its action only when the tag is <code dir="ltr">NULL</code>:</p>
<ul>
<li>
<p>A redo entry is considered for capture by a capture process only when the redo entry contains a <code dir="ltr">NULL</code> tag.</p>
</li>
<li>
<p>A change is considered for capture by a synchronous capture only when the session that makes the change has a <code dir="ltr">NULL</code> tag.</p>
</li>
<li>
<p>An LCR is considered for apply by an apply process or dequeue by a messaging client only if the LCR contains a <code dir="ltr">NULL</code> tag.</p>
</li>
</ul>
<p>If the rules are added to a positive rule set, then setting this parameter to <code dir="ltr">FALSE</code> might be appropriate in update-anywhere configurations to avoid sending a change back to its source database. If the rules are added to the negative rule set for the Oracle Streams client, then a database change can be discarded only if it has a <code dir="ltr">NULL</code> tag.</p>
<p>A setting of <code dir="ltr">FALSE</code> is often specified in update-anywhere configurations to avoid sending a change back to its source database.</p>
<p>Usually, specify <code dir="ltr">TRUE</code> for this parameter if the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">FALSE</code>.</p>
<p><span class="bold">See Also:</span> <a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t66" headers="r1c1-t66">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t66 r1c2-t66">
<p>The global name of the source database. If <code dir="ltr">NULL</code>, then the procedure does not add a condition regarding the source database to the generated rules.</p>
<p>For capture process rules, specify <code dir="ltr">NULL</code> or the global name of the local database if you are creating a capture process locally at the source database. If you are adding rules to a downstream capture process rule set at a downstream database, then specify the source database of the changes that will be captured.</p>
<p>For synchronous capture rules, specify the name of the local database.</p>
<p>For apply process rules, specify the source database of the changes that will be applied by the apply process. The source database is the database where the changes originated. If an apply process applies captured messages, then the apply process can apply messages from only one capture process at one source database.</p>
<p>For messaging client rules, specify <code dir="ltr">NULL</code> if you do not want the rules created by this procedure to have a condition for the source database. Specify a source database if you want the rules created by this procedure to have a condition for the source database. The source database is part of the information in an LCR, and user-constructed LCRs might or might not have this information.</p>
<p>If you do not include the domain name, then the procedure appends it to the database name automatically. For example, if you specify <code dir="ltr">DBS1</code> and the domain is <code dir="ltr">.NET</code>, then the procedure specifies <code dir="ltr">DBS1.NET</code> automatically.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t66" headers="r1c1-t66">
<p><code dir="ltr">dml_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t66 r1c2-t66">
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DML rule name.</p>
<p>If <code dir="ltr">include_dml</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ddl_rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t66 r1c2-t66">
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">TRUE</code>, then this parameter contains the DDL rule name.</p>
<p>If <code dir="ltr">include_ddl</code> is <code dir="ltr">FALSE</code>, then this parameter contains a <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t66" headers="r1c1-t66">
<p><code dir="ltr">inclusion_rule</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t66 r1c2-t66">
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">TRUE</code>, then the procedure adds the rules to the positive rule set for the Oracle Streams client.</p>
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">FALSE</code>, then the procedure adds the rules to the negative rule set for the Oracle Streams client. A synchronous capture cannot have a negative rule set. Specifying <code dir="ltr">FALSE</code> for a synchronous capture raises an error.</p>
<p>In either case, the system creates the rule set if it does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t66" headers="r1c1-t66">
<p><code dir="ltr">and_condition</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t66 r1c2-t66">
<p>If non-<code dir="ltr">NULL</code>, appends the specified condition to the system-generated rule condition using an <code dir="ltr">AND</code> clause in the following way:</p>
<pre dir="ltr">(<span class="italic">system_condition</span>) AND (<span class="italic">and_condition</span>)
</pre>
<p>The variable in the specified condition must be <code dir="ltr">:lcr</code>. For example, to specify that the table rules generated by the procedure evaluate to <code dir="ltr">TRUE</code> only if the Oracle Streams tag is the hexadecimal equivalent of <code dir="ltr">&#39;02&#39;</code>, specify the following condition:</p>
<pre dir="ltr">:lcr.get_tag() = HEXTORAW(&#39;&#39;02&#39;&#39;)
</pre>
<p>The <code dir="ltr">:lcr</code> in the specified condition is converted to <code dir="ltr">:dml</code> or <code dir="ltr">:ddl</code>, depending on the rule that is being generated. If you are specifying an LCR member subprogram that is dependent on the LCR type (row or DDL), then make sure this procedure only generates the appropriate rule.</p>
<p>Specifically, if you specify an LCR member subprogram that is valid only for row LCRs, then specify <code dir="ltr">TRUE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">FALSE</code> for the <code dir="ltr">include_ddl</code> parameter. If you specify an LCR member subprogram that is valid only for DDL LCRs, then specify <code dir="ltr">FALSE</code> for the <code dir="ltr">include_dml</code> parameter and <code dir="ltr">TRUE</code> for the <code dir="ltr">include_ddl</code> parameter.</p>
<p><span class="bold">See Also:</span> <a href="t_lcr.htm#BABGGBHF">Chapter 275, &#34;Logical Change Record TYPEs&#34;</a></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CACBEFFB"></a>Usage Notes</p>
<p>This procedure creates DML and DDL rules automatically based on <code dir="ltr">include_dml</code> and <code dir="ltr">include_ddl</code> parameter values, respectively. Each rule has a system-generated rule name that consists of the table name with a sequence number appended to it. The sequence number is used to avoid naming conflicts. If the table name plus the sequence number is too long, then the table name is truncated. A capture process, synchronous capture, apply process, or messaging client uses the rules for filtering.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1024973">&#34;Operational Notes&#34;</a></p>
</li>
<li>
<p><a href="#i1024974">&#34;Security Model&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11423"></a>Examples</p>
<p>The following is an example of a table rule condition created for DML changes:</p>
<pre dir="ltr">(((:dml.get_object_owner() = &#39;HR&#39; and :dml.get_object_name() = &#39;LOCATIONS&#39;)) 
and :dml.is_null_tag() = &#39;Y&#39; and :dml.get_source_database_name() = &#39;DBS1.NET&#39; )
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS829" class="refsect2"><a id="CDEIHIIC"></a>
<h3 class="refsect2">CLEANUP_INSTANTIATION_SETUP Procedure<a id="sthref11424"></a></h3>
<p>This procedure removes an Oracle Streams replication configuration that was set up by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures in this package. This procedure either remove the configuration directly, or it can generate a script that removes the configuration.</p>
<p>Run this procedure at the capture database. The capture database is the database that captures changes made to the source database.</p>
<div class="infobox-note">
<p class="notep1">Attention:</p>
When the <code dir="ltr">CLEANUP_INSTANTIATION_SETUP</code> procedure is run, the parameter values must match the parameter values specified when the corresponding <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures were run, except for the values of the following parameters: <code dir="ltr">perform_actions</code>, <code dir="ltr">script_name</code>, and <code dir="ltr">script_directory_object</code>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CDEGDHBC">&#34;PRE_INSTANTIATION_SETUP Procedure&#34;</a></p>
</li>
<li>
<p><a href="#CDEBEJFE">&#34;POST_INSTANTIATION_SETUP Procedure&#34;</a></p>
</li>
<li>
<p><a href="#CDEJFABB">&#34;Procedures That Configure an Oracle Streams Environment&#34;</a> for more information about this procedure</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11425"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.CLEANUP_INSTANTIATION_SETUP(
   maintain_mode           IN VARCHAR2,
   tablespace_names        IN DBMS_STREAMS_TABLESPACE_ADM.TABLESPACE_SET,
   source_database         IN VARCHAR2,
   destination_database    IN VARCHAR2,
   perform_actions         IN BOOLEAN   DEFAULT TRUE,
   script_name             IN VARCHAR2  DEFAULT NULL,
   script_directory_object IN VARCHAR2  DEFAULT NULL,
   capture_name            IN VARCHAR2  DEFAULT NULL,
   capture_queue_table     IN VARCHAR2  DEFAULT NULL,
   capture_queue_name      IN VARCHAR2  DEFAULT NULL,
   capture_queue_user      IN VARCHAR2  DEFAULT NULL,
   propagation_name        IN VARCHAR2  DEFAULT NULL,
   apply_name              IN VARCHAR2  DEFAULT NULL,
   apply_queue_table       IN VARCHAR2  DEFAULT NULL,
   apply_queue_name        IN VARCHAR2  DEFAULT NULL,
   apply_queue_user        IN VARCHAR2  DEFAULT NULL,
   bi_directional          IN BOOLEAN   DEFAULT FALSE,
   change_global_name      IN BOOLEAN   DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11426"></a>Parameters</p>
<div id="ARPLS68758" class="tblformal">
<p class="titleintable"><a id="sthref11427"></a><a id="sthref11428"></a>Table 159-14 CLEANUP_INSTANTIATION_SETUP Procedure Parameters</p>
<table class="cellalignment4330" title="CLEANUP_INSTANTIATION_SETUP Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.CLEANUP subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t70">Parameter</th>
<th class="cellalignment4328" id="r1c2-t70">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t70" headers="r1c1-t70">
<p><code dir="ltr">maintain_mode</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t70 r1c2-t70">
<p>Specify one of the following:</p>
<ul>
<li>
<p><code dir="ltr">GLOBAL</code> to clean up the Oracle Streams configuration that maintained the entire database in both the source and destination databases</p>
</li>
<li>
<p><code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code> to cleanup the Oracle Streams configuration that maintained a set of tablespaces at both the source and destination database</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t70" headers="r1c1-t70">
<p><code dir="ltr">tablespace_names</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t70 r1c2-t70">
<p>If <code dir="ltr">maintain_mode</code> is set to <code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code>, then specify the local tablespace set to be cloned at the destination database and maintained by Oracle Streams.</p>
<p>The tablespaces in the tablespace set must exist at the source database, but these tablespaces must not exist at the destination database.</p>
<p>A directory object must exist for each directory that contains the datafiles for the tablespace set. The user who invokes this procedure must have <code dir="ltr">READ</code> privilege on these directory objects.</p>
<p>If <code dir="ltr">maintain_mode</code> is set to <code dir="ltr">GLOBAL</code>, then specify an empty tablespace set.</p>
<p>Regardless of the <code dir="ltr">maintain_mode</code> setting, an error is raised if the <code dir="ltr">tablespace_names</code> parameter is not set or is set to <code dir="ltr">NULL</code>.</p>
<p><span class="bold">See Also:</span> <a href="d_streams_tbl.htm#CDEGDGCI">TABLESPACE_SET Table Type</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t70" headers="r1c1-t70">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t70 r1c2-t70">
<p>The global name of the source database.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t70" headers="r1c1-t70">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t70 r1c2-t70">
<p>The global name of the destination database. A database link from the local database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t70" headers="r1c1-t70">
<p><code dir="ltr">perform_actions</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t70 r1c2-t70">
<p>If <code dir="ltr">TRUE</code>, then this procedure performs the necessary actions to clean up the Oracle Streams configuration directly.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not perform the necessary actions to clean up the Oracle Streams configuration directly.</p>
<p>Specify <code dir="ltr">FALSE</code> when this procedure is generating a script that you can edit and then run. The procedure raises an error if you specify <code dir="ltr">FALSE</code> and either of the following parameters is <code dir="ltr">NULL</code>:</p>
<ul>
<li>
<p><code dir="ltr">script_name</code></p>
</li>
<li>
<p><code dir="ltr">script_directory_object</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t70" headers="r1c1-t70">
<p><code dir="ltr">script_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t70 r1c2-t70">
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then specify the name of the script generated by this procedure. The script contains all of the statements used to clean up the Oracle Streams configuration. If a file with the specified script name exists in the specified directory for the <code dir="ltr">script_directory_object</code> parameter, then the statements are appended to the existing file.</p>
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then this procedure generates the specified script and performs the actions to clean up the Oracle Streams configuration directly.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then this procedure directly performs the actions to clean up the Oracle Streams configuration without generating a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t70" headers="r1c1-t70">
<p><code dir="ltr">script_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t70 r1c2-t70">
<p>The directory object for the directory on the local computer system into which the generated script is placed.</p>
<p>If the <code dir="ltr">script_name</code> parameter is <code dir="ltr">NULL</code>, then this parameter is ignored, and this procedure does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">script_name</code> parameter is non-<code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t70" headers="r1c1-t70">
<p><code dir="ltr">capture_name</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t70 r1c2-t70">
<p>The name of the capture processes configured to capture changes in the Oracle Streams configuration. Do not specify an owner.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure automatically identifies the capture processes with system-generated names created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t70" headers="r1c1-t70">
<p><code dir="ltr">capture_queue_table</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t70 r1c2-t70">
<p>The name of the queue table for each queue used by a capture process, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_table_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue_table</code>. If the schema is not specified, then the current user is the default.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure automatically identifies the capture queue tables with system-generated names created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t70" headers="r1c1-t70">
<p><code dir="ltr">capture_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t70 r1c2-t70">
<p>The name of each queue used by a capture process, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue</code>.</p>
<p>If the schema is not specified, then the queue table owner is the default. The queue owner automatically has privileges to perform all queue operations on the queue.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure automatically identifies the capture queues with system-generated names created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t70" headers="r1c1-t70">
<p><code dir="ltr">capture_queue_user</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t70 r1c2-t70">
<p>The name of the user who has <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges for the queue at the source database. This user is a secure queue user of the queue.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t70" headers="r1c1-t70">
<p><code dir="ltr">propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t70 r1c2-t70">
<p>The name of the propagations configured to propagate changes in the Oracle Streams configuration. Do not specify an owner.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure automatically identifies the propagations with system-generated names created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t70" headers="r1c1-t70">
<p><code dir="ltr">apply_name</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t70 r1c2-t70">
<p>The name of the apply processes configured to apply changes in the Oracle Streams configuration. Do not specify an owner.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure automatically identifies the apply processes with system-generated names created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t70" headers="r1c1-t70">
<p><code dir="ltr">apply_queue_table</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t70 r1c2-t70">
<p>The name of the queue table for each queue used by an apply process, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_table_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue_table</code>. If the schema is not specified, then the current user is the default.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure automatically identifies the apply queue tables with system-generated names created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t70" headers="r1c1-t70">
<p><code dir="ltr">apply_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t70 r1c2-t70">
<p>The name of each queue used by an apply process, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue</code>.</p>
<p>If the schema is not specified, then the queue table owner is the default. The queue owner automatically has privileges to perform all queue operations on the queue.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure automatically identifies the apply queues with system-generated names created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t70" headers="r1c1-t70">
<p><code dir="ltr">apply_queue_user</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t70 r1c2-t70">
<p>The name of the user who has <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges for the queue at the destination database. This user is a secure queue user of the queue.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t70" headers="r1c1-t70">
<p><code dir="ltr">bi_directional</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t70 r1c2-t70">
<p>Specify <code dir="ltr">TRUE</code> if the Oracle Streams replication configuration is bi-directional between the database specified in <code dir="ltr">source_database</code> and the database specified in <code dir="ltr">destination_database</code>.</p>
<p>Specify <code dir="ltr">FALSE</code> if the Oracle Streams replication configuration is one way replication from the current database to the database specified in <code dir="ltr">destination_database</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t70" headers="r1c1-t70">
<p><code dir="ltr">change_global_name</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t70 r1c2-t70">
<p>If <code dir="ltr">TRUE</code>, then the procedure changes the global name of the database specified in <code dir="ltr">destination_database</code> to match the global name of the current database.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not change the global name of the database specified in <code dir="ltr">destination_database</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS888" class="refsect2"><a id="CDEDIEGB"></a>
<h3 class="refsect2">DELETE_COLUMN Procedure<a id="sthref11429"></a><a id="sthref11430"></a></h3>
<p>This procedure either adds or removes a declarative rule-based transformation which deletes a column from a row logical change record (LCR) that satisfies the specified rule.</p>
<p>For the transformation to be performed when the specified rule evaluates to <code dir="ltr">TRUE</code>, the rule must be in the positive rule set of an Oracle Streams client. Oracle Streams clients include capture processes, synchronous captures, propagations, apply processes, and messaging clients.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The <code dir="ltr">DELETE_COLUMN</code> procedure supports the same data types supported by Oracle Streams capture processes.</p>
</li>
<li>
<p>The <code dir="ltr">DELETE_COLUMN</code> procedure is useful when you want to delete a relatively small number of columns in a row LCR. To delete most of the columns in a row LCR and keep a relatively small number of columns, consider using the <code dir="ltr">KEEP_COLUMNS</code> procedure in this package.</p>
</li>
<li>
<p>Declarative transformations can transform row LCRs only. These row LCRs can be captured by a capture process, captured by a synchronous capture, or constructed and enqueued by an application. Therefore, a DML rule must be specified when you run this procedure. If a DDL is specified, then the procedure raises an error.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STRMS" href="../STRMS/toc.htm"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about <a class="olink STRMS151" href="../STRMS/strms_transform.htm#STRMS151">declarative rule-based transformations</a> and about <a class="olink STRMS136" href="../STRMS/strms_capture.htm#STRMS136">the data types supported by Oracle Streams capture processes</a></p>
</li>
<li>
<p><a href="#CACFIFCG">&#34;KEEP_COLUMNS Procedure&#34;</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11431"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.DELETE_COLUMN(
   rule_name     IN  VARCHAR2,
   table_name    IN  VARCHAR2,
   column_name   IN  VARCHAR2,
   value_type    IN  VARCHAR2   DEFAULT &#39;*&#39;,
   step_number   IN  NUMBER     DEFAULT 0,
   operation     IN  VARCHAR2   DEFAULT &#39;ADD&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11432"></a>Parameters</p>
<div id="ARPLS68759" class="tblformal">
<p class="titleintable"><a id="sthref11433"></a><a id="sthref11434"></a>Table 159-15 DELETE_COLUMN Procedure Parameters</p>
<table class="cellalignment4330" title="DELETE_COLUMN Procedure Parameters " summary="This table describes the Parameters of DBMS_STREAMS_ADM.DELETE_COLUMN subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t73">Parameter</th>
<th class="cellalignment4328" id="r1c2-t73">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t73" headers="r1c1-t73">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t73 r1c2-t73">
<p>The name of the rule, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">rule_name</span></code>. If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p>For example, to specify a rule in the <code dir="ltr">hr</code> schema named <code dir="ltr">employees12</code>, enter <code dir="ltr">hr.employees12</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t73" headers="r1c1-t73">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t73 r1c2-t73">
<p>The name of the table from which the column is deleted in the row LCR, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t73" headers="r1c1-t73">
<p><code dir="ltr">column_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t73 r1c2-t73">
<p>The name of the column deleted from each row LCR that satisfies the rule.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t73" headers="r1c1-t73">
<p><code dir="ltr">value_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t73 r1c2-t73">
<p>Specify <code dir="ltr">&#39;NEW&#39;</code> to delete the column from the new values in the row LCR.</p>
<p>Specify <code dir="ltr">&#39;OLD&#39;</code> to delete the column from the old values in the row LCR.</p>
<p>Specify <code dir="ltr">&#39;*&#39;</code> to delete the column from both the old and new values in the row LCR.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t73" headers="r1c1-t73">
<p><code dir="ltr">step_number</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t73 r1c2-t73">
<p>The order of execution of the transformation.</p>
<p><span class="bold">See Also:</span> <a class="olink STRMS145" href="../STRMS/strms_transform.htm#STRMS145"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about transformation ordering</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t73" headers="r1c1-t73">
<p><code dir="ltr">operation</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t73 r1c2-t73">
<p>Specify <code dir="ltr">&#39;ADD&#39;</code> to add the transformation to the rule.</p>
<p>Specify <code dir="ltr">&#39;REMOVE&#39;</code> to remove the transformation from the rule.</p>
<p>See <a href="#CACGIGAE">&#34;Usage Notes&#34;</a> for more information about this parameter.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CACGIGAE"></a>Usage Notes</p>
<p>When <code dir="ltr">&#39;REMOVE&#39;</code> is specified for the <code dir="ltr">operation</code> parameter, all of the delete column declarative rule-based transformations for the specified rule are removed that match the specified <code dir="ltr">table_name</code>, <code dir="ltr">column_name</code>, and <code dir="ltr">step_number</code> parameters. Nulls specified for these parameters act as wildcards. The following table lists the behavior of the <code dir="ltr">DELETE_COLUMN</code> procedure when one or more of these parameters is <code dir="ltr">NULL</code>:</p>
<div class="inftblinformal">
<table class="cellalignment4327" title="Remove Behavior for the DELETE_COLUMN Procedure" summary="This table describes the behavior of the DELETE_COLUMN procedure when the operation parameter is set to REMOVE and various other procedure parameters are set to NULL." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t74">table_name</th>
<th class="cellalignment4328" id="r1c2-t74">column_name</th>
<th class="cellalignment4328" id="r1c3-t74">step_number</th>
<th class="cellalignment4328" id="r1c4-t74">Result</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t74" headers="r1c1-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t74 r1c2-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t74 r1c3-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t74 r1c4-t74">Remove all delete column transformations for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t74" headers="r1c1-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t74 r1c2-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t74 r1c3-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t74 r1c4-t74">Remove all delete column transformations with the specified <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t74" headers="r1c1-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t74 r1c2-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t74 r1c3-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t74 r1c4-t74">Remove all delete column transformations with the specified <code dir="ltr">column_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t74" headers="r1c1-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t74 r1c2-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t74 r1c3-t74"><code dir="ltr">non-NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t74 r1c4-t74">Remove all delete column transformations with the specified <code dir="ltr">table_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t74" headers="r1c1-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t74 r1c2-t74"><code dir="ltr">non-NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t74 r1c3-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t74 r1c4-t74">Remove all delete column transformations with the specified <code dir="ltr">column_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t74" headers="r1c1-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t74 r1c2-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t74 r1c3-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t74 r1c4-t74">Remove all delete column transformations with the specified <code dir="ltr">table_name</code> and <code dir="ltr">column_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t74" headers="r1c1-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t74 r1c2-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t74 r1c3-t74"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t74 r1c4-t74">Remove all delete column transformations with the specified <code dir="ltr">table_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t74" headers="r1c1-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t74 r1c2-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t74 r1c3-t74">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t74 r1c4-t74">Remove all delete column transformations with the specified <code dir="ltr">table_name</code>, <code dir="ltr">column_name</code>, and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68760" class="refsect2"><a id="CDEFEDGF"></a>
<h3 class="refsect2">GET_MESSAGE_TRACKING Function<a id="sthref11435"></a><a id="sthref11436"></a><a id="sthref11437"></a><a id="sthref11438"></a></h3>
<p>Returns the tracking label for the current session.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEGEEFA">SET_MESSAGE_TRACKING Procedure</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11439"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.GET_MESSAGE_TRACKING
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS552" class="refsect2"><a id="i1018767"></a>
<h3 class="refsect2">GET_SCN_MAPPING Procedure<a id="sthref11440"></a><a id="sthref11441"></a></h3>
<p>This procedure gets information about the system change number (SCN) values to use for Oracle Streams capture and apply processes in an Oracle Streams replication environment. This information can be used for the following purposes:</p>
<ul>
<li>
<p>To recover transactions after point-in-time recovery is performed on a source database in a multiple source Oracle Streams environment</p>
</li>
<li>
<p>To run flashback queries for the corresponding SCN at a source database and destination database in an Oracle Streams single source replication environment</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP" href="../STREP/toc.htm"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about <a class="olink STREP121" href="../STREP/man_gen_rep.htm#STREP121">point-in-time recovery</a> and <a class="olink STREP133" href="../STREP/man_gen_rep.htm#STREP133">flashback queries</a> in an Oracle Streams replication environment</div>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11442"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.GET_SCN_MAPPING(
   apply_name             IN  VARCHAR2,
   src_pit_scn            IN  NUMBER,
   dest_instantiation_scn OUT NUMBER,
   dest_start_scn         OUT NUMBER,
   dest_skip_txn_ids      OUT DBMS_UTILITY.NAME_ARRAY);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11443"></a>Parameters</p>
<div id="ARPLS68761" class="tblformal">
<p class="titleintable"><a id="sthref11444"></a><a id="sthref11445"></a>Table 159-16 GET_SCN_MAPPING Procedure Parameters</p>
<table class="cellalignment4330" title="GET_SCN_MAPPING Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.GET_SCN_MAPPING subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t77">Parameter</th>
<th class="cellalignment4328" id="r1c2-t77">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t77" headers="r1c1-t77">
<p><code dir="ltr">apply_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t77 r1c2-t77">
<p>Name of the apply process which applies logical change records (LCRs) from the source database. The procedure raises an error if the specified apply process does not exist.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t77" headers="r1c1-t77">
<p><code dir="ltr">src_pit_scn</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t77 r1c2-t77">
<p>The SCN at the source database.</p>
<p>For point-in-time recovery, specify the point-in-time recovery SCN at the source database.</p>
<p>If the specified SCN is greater than the source commit SCN of the last applied transaction, then <code dir="ltr">NULL</code> is returned for both <code dir="ltr">dest_start_scn</code> and <code dir="ltr">dest_instantiation_scn</code>. In this case, no values can be returned for these parameters because the corresponding transaction has not been applied at the destination database yet.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t77" headers="r1c1-t77">
<p><code dir="ltr">dest_instantiation_scn</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t77 r1c2-t77">
<p>The SCN at the destination database that corresponds to the specified <code dir="ltr">src_pit_scn</code> at the source database.</p>
<p>For point-in-time recovery, use this value for the instantiation SCNs at the source database during recovery.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t77" headers="r1c1-t77">
<p><code dir="ltr">dest_start_scn</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t77 r1c2-t77">
<p>For point in time recovery, the SCN to use for the <code dir="ltr">start_scn</code> parameter for the recovery capture process.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t77" headers="r1c1-t77">
<p><code dir="ltr">dest_skip_txn_ids</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t77 r1c2-t77">
<p>Transaction IDs of transactions that were skipped at the <code dir="ltr">dest_instantiation_scn</code> because the apply process was applying nondependent transactions out of order.</p>
<p>For point in time recovery, these transaction IDs should be ignored by the recovery apply process.</p>
<p>This parameter is relevant only if the <code dir="ltr">commit_serialization</code> for the apply process that applied these transactions was set to <code dir="ltr">DEPENDENT_TRANSACTIONS</code>, and the transactions were applied out of order.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS503" class="refsect2"><a id="CACGBIJI"></a>
<h3 class="refsect2">GET_TAG Function<a id="sthref11446"></a><a id="sthref11447"></a></h3>
<p>This function gets the binary tag for all redo entries generated by the current session.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CACIIBAE">&#34;SET_TAG Procedure&#34;</a></p>
</li>
<li>
<p><a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11448"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.GET_TAG
RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11449"></a>Examples</p>
<p>The following example illustrates how to display the current logical change record (LCR) tag as output:</p>
<pre dir="ltr">SET SERVEROUTPUT ON
DECLARE
   raw_tag RAW(2000);
BEGIN
   raw_tag := DBMS_STREAMS_ADM.GET_TAG();
   DBMS_OUTPUT.PUT_LINE(&#39;Tag Value = &#39; || RAWTOHEX(raw_tag));
END;
/
</pre>
<p>You can also display the value by querying the <code dir="ltr">DUAL</code> view:</p>
<pre dir="ltr">SELECT DBMS_STREAMS_ADM.GET_TAG FROM DUAL; 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68762" class="refsect2"><a id="CACFIFCG"></a>
<h3 class="refsect2">KEEP_COLUMNS Procedure<a id="sthref11450"></a><a id="sthref11451"></a></h3>
<p>This procedure either adds or removes a declarative rule-based transformation which keeps a list of columns in a row logical change record (LCR) that satisfies the specified rule. The transformation deletes columns that are not in the list from the row LCR.</p>
<p>For the transformation to be performed when the specified rule evaluates to <code dir="ltr">TRUE</code>, the rule must be in the positive rule set of an Oracle Streams client. Oracle Streams clients include capture processes, synchronous captures, propagations, apply processes, and messaging clients.</p>
<p>This procedure is overloaded. The <code dir="ltr">column_list</code> parameter is type <code dir="ltr">VARCHAR2</code> and the <code dir="ltr">column_table</code> parameter is type <code dir="ltr">DBMS_UTILITY.LNAME_ARRAY</code>. These parameters enable you to enter the list of columns in different ways and are mutually exclusive.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The <code dir="ltr">KEEP_COLUMNS</code> procedure supports the same data types supported by Oracle Streams capture processes.</p>
</li>
<li>
<p>The <code dir="ltr">KEEP_COLUMNS</code> procedure is useful when you want to keep a relatively small number of columns in a row LCR. To keep most of the columns in a row LCR and delete a relatively small number of columns, consider using the <code dir="ltr">DELETE_COLUMN</code> procedure in this package.</p>
</li>
<li>
<p>Declarative transformations can transform row LCRs only. These row LCRs can be captured by a capture process, captured by a synchronous capture, or constructed and enqueued by an application. Therefore, a DML rule must be specified when you run this procedure. If a DDL is specified, then the procedure raises an error.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STRMS" href="../STRMS/toc.htm"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about <a class="olink STRMS151" href="../STRMS/strms_transform.htm#STRMS151">declarative rule-based transformations</a> and about <a class="olink STRMS136" href="../STRMS/strms_capture.htm#STRMS136">the data types supported by Oracle Streams capture processes</a></p>
</li>
<li>
<p><a href="#CDEDIEGB">&#34;DELETE_COLUMN Procedure&#34;</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11452"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.KEEP_COLUMNS(
   rule_name     IN  VARCHAR2,
   table_name    IN  VARCHAR2,
   column_list   IN  VARCHAR2,
   value_type    IN  VARCHAR2 DEFAULT &#39;*&#39;,
   step_number   IN  NUMBER DEFAULT 0,
   operation     IN  VARCHAR2 DEFAULT &#39;ADD&#39;);

DBMS_STREAMS_ADM.KEEP_COLUMNS(
   rule_name     IN  VARCHAR2,
   table_name    IN  VARCHAR2,
   column_table  IN  DBMS_UTILITY.LNAME_ARRAY,
   value_type    IN  VARCHAR2 DEFAULT &#39;*&#39;,
   step_number   IN  NUMBER DEFAULT 0,
   operation     IN  VARCHAR2 DEFAULT &#39;ADD&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11453"></a>Parameters</p>
<div id="ARPLS68763" class="tblformal">
<p class="titleintable"><a id="sthref11454"></a><a id="sthref11455"></a>Table 159-17 KEEP_COLUMNS Procedure Parameters</p>
<table class="cellalignment4330" title="KEEP_COLUMNS Procedure Parameters " summary="This table describes the Parameters of DBMS_STREAMS_ADM.KEEP_COLUMNS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t81">Parameter</th>
<th class="cellalignment4328" id="r1c2-t81">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t81" headers="r1c1-t81">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t81 r1c2-t81">
<p>The name of the rule, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">rule_name</span></code>. If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p>For example, to specify a rule in the <code dir="ltr">hr</code> schema named <code dir="ltr">employees12</code>, enter <code dir="ltr">hr.employees12</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t81" headers="r1c1-t81">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t81 r1c2-t81">
<p>The name of the table for which the columns are kept in the row LCR, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t81" headers="r1c1-t81">
<p><code dir="ltr">column_list</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t81 r1c2-t81">
<p>The names of the columns kept for each row LCR that satisfies the rule. Specify a comma-delimited list of type <code dir="ltr">VARCHAR2</code>. The transformation removes columns that are not in the list from the row LCR.</p>
<p>If this parameter is set to <code dir="ltr">NULL</code>, and the <code dir="ltr">column_table</code> parameter is also set to <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t81" headers="r1c1-t81">
<p><code dir="ltr">column_table</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t81 r1c2-t81">
<p>The names of the columns kept for each row LCR that satisfies the rule. Specify a PL/SQL associative array of type <code dir="ltr">DBMS_UTILITY.LNAME_ARRAY</code>, where each element is the name of a column. The first schema should be in position 1. The last position must be <code dir="ltr">NULL</code>.</p>
<p>The transformation removes columns that are not in the table from the row LCR.</p>
<p>If this parameter is set to <code dir="ltr">NULL</code>, and the <code dir="ltr">column_list</code> parameter is also set to <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t81" headers="r1c1-t81">
<p><code dir="ltr">value_type</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t81 r1c2-t81">
<p>Specify <code dir="ltr">&#39;NEW&#39;</code> to keep the columns in the new values in the row LCR.</p>
<p>Specify <code dir="ltr">&#39;OLD&#39;</code> to keep the columns in the old values in the row LCR.</p>
<p>Specify <code dir="ltr">&#39;*&#39;</code> to keep the columns in both the old and new values in the row LCR.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t81" headers="r1c1-t81">
<p><code dir="ltr">step_number</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t81 r1c2-t81">
<p>The order of execution of the transformation.</p>
<p><span class="bold">See Also:</span> <a class="olink STRMS145" href="../STRMS/strms_transform.htm#STRMS145"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about transformation ordering</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t81" headers="r1c1-t81">
<p><code dir="ltr">operation</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t81 r1c2-t81">
<p>Specify <code dir="ltr">&#39;ADD&#39;</code> to add the transformation to the rule.</p>
<p>Specify <code dir="ltr">&#39;REMOVE&#39;</code> to remove the transformation from the rule.</p>
<p>See <a href="#CACCGGFH">&#34;Usage Notes&#34;</a> for more information about this parameter.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CACCGGFH"></a>Usage Notes</p>
<p>When <code dir="ltr">&#39;REMOVE&#39;</code> is specified for the <code dir="ltr">operation</code> parameter, all of the keep columns declarative rule-based transformations for the specified rule are removed that match the specified <code dir="ltr">table_name</code>, <code dir="ltr">column_list</code>, <code dir="ltr">column_table</code>, and <code dir="ltr">step_number</code> parameters. Nulls specified for these parameters act as wildcards. The following table lists the behavior of the <code dir="ltr">KEEP_COLUMNS</code> procedure when one or more of these parameters is <code dir="ltr">NULL</code>:</p>
<div class="inftblinformal">
<table class="cellalignment4327" title="Remove Behavior for the KEEP_COLUMNS Procedure" summary="This table describes the behavior of the KEEP_COLUMNS procedure when the operation parameter is set to REMOVE and various other procedure parameters are set to NULL." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t82">table_name</th>
<th class="cellalignment4328" id="r1c2-t82">column_list/column_table</th>
<th class="cellalignment4328" id="r1c3-t82">step_number</th>
<th class="cellalignment4328" id="r1c4-t82">Result</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t82" headers="r1c1-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t82 r1c2-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t82 r1c3-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t82 r1c4-t82">Remove all keep columns transformations for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t82" headers="r1c1-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t82 r1c2-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t82 r1c3-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t82 r1c4-t82">Remove all keep columns transformations with the specified <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t82" headers="r1c1-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t82 r1c2-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t82 r1c3-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t82 r1c4-t82">Remove all keep columns transformations with the specified <code dir="ltr">column_list</code>/<code dir="ltr">column_table</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t82" headers="r1c1-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t82 r1c2-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t82 r1c3-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t82 r1c4-t82">Remove all keep columns transformations with the specified <code dir="ltr">table_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t82" headers="r1c1-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t82 r1c2-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t82 r1c3-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t82 r1c4-t82">Remove all keep columns transformations with the specified <code dir="ltr">column_list</code>/<code dir="ltr">column_table</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t82" headers="r1c1-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t82 r1c2-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t82 r1c3-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t82 r1c4-t82">Remove all keep columns transformations with the specified <code dir="ltr">table_name</code> and <code dir="ltr">column_list</code>/<code dir="ltr">column_table</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t82" headers="r1c1-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t82 r1c2-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t82 r1c3-t82"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t82 r1c4-t82">Remove all keep columns transformations with the specified <code dir="ltr">table_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t82" headers="r1c1-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t82 r1c2-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t82 r1c3-t82">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t82 r1c4-t82">Remove all keep columns transformations with the specified <code dir="ltr">table_name</code>, <code dir="ltr">column_list</code>/<code dir="ltr">column_table</code>, and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS72443" class="refsect2"><a id="CACBEIJI"></a>
<h3 class="refsect2">MAINTAIN_CHANGE_TABLE Procedure<a id="sthref11456"></a><a id="sthref11457"></a><a id="sthref11458"></a></h3>
<p>This procedure configures an Oracle Streams environment that uses change handlers to record in a change table the data manipulation language (DML) changes made to a source table. Optionally, this procedure can also configure one-way replication of the table from the source database to the destination database. This procedure can either configure the environment directly, or it can generate a script that configures the environment.</p>
<p>A change handler is a special type of statement DML handler that tracks table changes and was created by either this <code dir="ltr">MAINTAIN_CHANGE_TABLE</code> procedure or the <code dir="ltr">DBMS_APPLY_ADM.SET_CHANGE_HANDLER</code> procedure. Information about change handlers is stored in the <code dir="ltr">ALL_APPLY_CHANGE_HANDLERS</code> and <code dir="ltr">DBA_APPLY_CHANGE_HANDLERS</code> views.</p>
<p>The change table can reside in the same database as the source table or in a different database.</p>
<p>Run this procedure at the capture database. The capture database is the database that captures changes made to the source database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The environment configured by this procedure does not record or replicate data definition language (DDL) changes made to the source table.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEJFABB">&#34;Procedures That Configure an Oracle Streams Environment&#34;</a> for more information about this procedure</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11459"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MAINTAIN_CHANGE_TABLE(
   change_table_name        IN VARCHAR2,
   source_table_name        IN VARCHAR2,
   column_type_list         IN VARCHAR2,
   extra_column_list        IN VARCHAR2  DEFAULT &#39;command_type, value_type&#39;,
   capture_values           IN VARCHAR2,
   options_string           IN VARCHAR2  DEFAULT NULL,
   script_name              IN VARCHAR2  DEFAULT NULL,
   script_directory_object  IN VARCHAR2  DEFAULT NULL,
   perform_actions          IN BOOLEAN   DEFAULT TRUE,
   capture_name             IN VARCHAR2  DEFAULT NULL,
   propagation_name         IN VARCHAR2  DEFAULT NULL,
   apply_name               IN VARCHAR2  DEFAULT NULL,
   source_database          IN VARCHAR2  DEFAULT NULL,
   destination_database     IN VARCHAR2  DEFAULT NULL,
   keep_change_columns_only IN BOOLEAN   DEFAULT TRUE,
   execute_lcr              IN BOOLEAN   DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11460"></a>Parameters</p>
<div id="ARPLS72444" class="tblformal">
<p class="titleintable"><a id="sthref11461"></a><a id="sthref11462"></a>Table 159-18 MAINTAIN_CHANGE_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="MAINTAIN_CHANGE_TABLE Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MAINTAIN_CHANGE_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t85">Parameter</th>
<th class="cellalignment4328" id="r1c2-t85">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t85" headers="r1c1-t85">
<p><code dir="ltr">change_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t85 r1c2-t85">
<p>The table that records changes to the source table. This table is maintained by Oracle Streams after configuration.</p>
<p>Specify the table as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">table_name</span></code>. For example, <code dir="ltr">hr.jobs_change_table</code>. If the schema is not specified, then the current user is the default.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p>If the specified table exists at the database specified in the <code dir="ltr">destination_database</code> parameter, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t85" headers="r1c1-t85">
<p><code dir="ltr">source_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t85 r1c2-t85">
<p>The table at the source database for which changes are recorded.</p>
<p>Specify the table as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">table_name</span></code>. For example, <code dir="ltr">hr.jobs</code>. If the schema is not specified, then the current user is the default.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t85" headers="r1c1-t85">
<p><code dir="ltr">column_type_list</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t85 r1c2-t85">
<p>A list of the columns in the source table for which changes are recorded. Specify a comma-delimited list of each column and its datatype.</p>
<p>For example, specify the following for the <code dir="ltr">hr.jobs</code> table:</p>
<pre dir="ltr">job_id VARCHAR2(10), job_title VARCHAR2(35), min_salary NUMBER(6), max_salary NUMBER(6)
</pre>
<p>The procedure automatically places columns with names that match the source database columns into an unconditional supplemental log group.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t85" headers="r1c1-t85">
<p><code dir="ltr">extra_column_list</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t85 r1c2-t85">
<p>A comma-delimited list of metadata attributes to include in the change table. The column name for a metadata attribute is in the format of attribute name followed by a <code dir="ltr">$</code> symbol. For example, the <code dir="ltr">source_database_name</code> attribute is stored in the <code dir="ltr">source_database_name$</code> column in the change table.</p>
<p>The following metadata attributes can be included:</p>
<ul>
<li>
<p><code dir="ltr">value_type</code></p>
</li>
<li>
<p><code dir="ltr">source_database_name</code></p>
</li>
<li>
<p><code dir="ltr">command_type</code></p>
</li>
<li>
<p><code dir="ltr">object_owner</code></p>
</li>
<li>
<p><code dir="ltr">object_name</code></p>
</li>
<li>
<p><code dir="ltr">tag</code></p>
</li>
<li>
<p><code dir="ltr">transaction_id</code></p>
</li>
<li>
<p><code dir="ltr">scn</code></p>
</li>
<li>
<p><code dir="ltr">commit_scn</code></p>
</li>
<li>
<p><code dir="ltr">compatible</code></p>
</li>
<li>
<p><code dir="ltr">instance_number</code></p>
</li>
<li>
<p><code dir="ltr">message_number</code></p>
</li>
<li>
<p><code dir="ltr">row_text</code></p>
</li>
<li>
<p><code dir="ltr">row_id</code></p>
</li>
<li>
<p><code dir="ltr">serial#</code></p>
</li>
<li>
<p><code dir="ltr">session#</code></p>
</li>
<li>
<p><code dir="ltr">source_time</code></p>
</li>
<li>
<p><code dir="ltr">thread#</code></p>
</li>
<li>
<p><code dir="ltr">tx_name</code></p>
</li>
<li>
<p><code dir="ltr">username</code></p>
</li>
</ul>
<p>All of these metadata attributes, except for <code dir="ltr">value_type</code> and <code dir="ltr">message_number</code>, are row LCR attributes that can be stored in row LCRs. For information about LCR attributes, see <a class="olink STRMS107" href="../STRMS/strms_capture.htm#STRMS107"><span class="italic">Oracle Streams Concepts and Administration</span></a>.</p>
<p>The <code dir="ltr">value_type$</code> column in the change table contains either <code dir="ltr">OLD</code> or <code dir="ltr">NEW</code>, depending on whether the column value is the original column value or the new column value, respectively.</p>
<p>The <code dir="ltr">message_number$</code> column in the change table contains the identification number of each row LCR within a transaction. The message number increases incrementally for each row LCR within a transaction and shows the order of the row LCRs within a transaction.</p>
<p>The procedure automatically configures the source database to place information about extra attributes, such as <code dir="ltr">serial#</code>, into the redo log so that the information can be captured and recorded.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t85" headers="r1c1-t85">
<p><code dir="ltr">capture_values</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t85 r1c2-t85">
<p>Specify which values to capture when update operations are performed on the source table:</p>
<ul>
<li>
<p><code dir="ltr">old</code> - To capture the original values for an updated column in the source table</p>
</li>
<li>
<p><code dir="ltr">new</code> - To capture the new values for an updated column in the source table</p>
</li>
<li>
<p><code dir="ltr">*</code> - To capture both the original and the new values for an updated column in the source table</p>
</li>
</ul>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> For insert operations, only new column values can be captured. For delete operations, only old column values can be captured.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t85" headers="r1c1-t85">
<p><code dir="ltr">options_string</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t85 r1c2-t85">
<p>String of options passed to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statement that creates the change table. The string is appended to the generated <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statement after the closing parenthesis that defines the columns of the table. The string must be syntactically correct.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t85" headers="r1c1-t85">
<p><code dir="ltr">script_name</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t85 r1c2-t85">
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then specify the name of the script generated by this procedure. The script contains all of the statements used to configure the environment. If a file with the specified script name exists in the specified directory for the <code dir="ltr">script_directory_object</code> parameter, then the procedure appends the statements to the existing file.</p>
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then the procedure generates the specified script and performs the actions to configure the replication environment directly.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then the procedure performs the actions to configure the replication environment directly and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t85" headers="r1c1-t85">
<p><code dir="ltr">script_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t85 r1c2-t85">
<p>The directory object for the directory on the local computer system into which the generated script is placed.</p>
<p>If the <code dir="ltr">script_name</code> parameter is <code dir="ltr">NULL</code>, then the procedure ignores this parameter and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">script_name</code> parameter is non-<code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t85" headers="r1c1-t85">
<p><code dir="ltr">perform_actions</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t85 r1c2-t85">
<p>If <code dir="ltr">TRUE</code>, then the procedure performs the necessary actions to configure the environment directly.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not perform the necessary actions to configure the environment directly.</p>
<p>Specify <code dir="ltr">FALSE</code> when this procedure is generating a script that you can edit and then run. The procedure raises an error if you specify <code dir="ltr">FALSE</code> and either of the following parameters is <code dir="ltr">NULL</code>:</p>
<ul>
<li>
<p><code dir="ltr">script_name</code></p>
</li>
<li>
<p><code dir="ltr">script_directory_object</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t85" headers="r1c1-t85">
<p><code dir="ltr">capture_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t85 r1c2-t85">
<p>The name of each capture process configured to capture changes. Do not specify an owner.</p>
<p>If the specified name matches the name of an existing capture process, then the procedure uses the existing capture process and adds the rules for capturing changes to the database to the positive capture process rule set.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for each capture process it creates.</p>
<p><span class="bold">Note:</span> The capture process name cannot be altered after the capture process is created.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t85" headers="r1c1-t85">
<p><code dir="ltr">propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t85 r1c2-t85">
<p>The name of the propagation configured to propagate changes from the source database to the destination database. Do not specify an owner.</p>
<p>If the specified name matches the name of an existing propagation, then the procedure uses the existing propagation and adds the rules for propagating changes to the positive propagation rule set.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for the propagation.</p>
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">source_database</code> and <code dir="ltr">destination_database</code> are set to the same value, then this procedure raises an error. When the capture process and apply process are in the same database, they can use the same queue, and a propagation is not needed.</p>
<p><span class="bold">Note:</span> The propagation name cannot be altered after the propagation is created.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t85" headers="r1c1-t85">
<p><code dir="ltr">apply_name</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t85 r1c2-t85">
<p>The name of each apply process configured to apply changes. Do not specify an owner.</p>
<p>If the specified name matches the name of an existing apply process, then the procedure uses the existing apply process and adds the rules for applying changes to the positive apply process rule set.</p>
<p>The specified name must not match the name of an existing messaging client at the destination database.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for the apply process. When set to <code dir="ltr">NULL</code>, no apply process that applies changes from the source database can exist on the destination database. If an apply process that applies changes from the source database exists at the destination database, then specify a non-<code dir="ltr">NULL</code> value for this parameter.</p>
<p><span class="bold">Note:</span> The apply process name cannot be altered after the apply process is created.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t85" headers="r1c1-t85">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t85 r1c2-t85">
<p>The global name of the source database.</p>
<p>If the specified global name is the same as the global name of the local database, then the procedure configures a local capture process for the source database.</p>
<p>If the specified global name is different from the global name of the local database, then the procedure configures a downstream capture process at the local database. In this case, a database link from the local database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t85" headers="r1c1-t85">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t85 r1c2-t85">
<p>The global name of the destination database.</p>
<p>If the local database is not the destination database, then a database link from the local database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t85" headers="r1c1-t85">
<p><code dir="ltr">keep_change_columns_only</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t85 r1c2-t85">
<p>If <code dir="ltr">TRUE</code>, then this procedure adds a declarative rule-based transformation which keeps the list of columns specified in the <code dir="ltr">column_type_list</code> parameter. The columns that are not specified in the <code dir="ltr">column_type_list</code> parameter are removed from each row LCR captured by the capture process.</p>
<p>If <code dir="ltr">FALSE</code>, then this procedure does not create a declarative rule-based transformation, and all of the columns in the row LCRs are kept.</p>
<p>Specify <code dir="ltr">FALSE</code> when information about columns that are not included in the <code dir="ltr">column_type_list</code> parameter is needed at the destination database. For example, if the <code dir="ltr">execute_lcr</code> parameter is set to <code dir="ltr">TRUE</code> and the configuration will replicate all of the columns in a source table, but the <code dir="ltr">column_type_list</code> parameter includes a subset of these columns, then the <code dir="ltr">keep_change_columns_only</code> parameter should be set to <code dir="ltr">FALSE</code>.</p>
<p><span class="bold">Note:</span> When this parameter is set to <code dir="ltr">TRUE</code>, a declarative rule-based transformation is always created, even if the <code dir="ltr">column_type_list</code> includes all of the columns in the source table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t85" headers="r1c1-t85">
<p><code dir="ltr">execute_lcr</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t85 r1c2-t85">
<p>If <code dir="ltr">TRUE</code>, then this procedure creates a change handler that executes each row LCR at the destination database.</p>
<p>If <code dir="ltr">FALSE</code>, then the row LCRs are not executed at the destination database.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11463"></a>Usage Notes</p>
<p>The following are usage notes for this procedure:</p>
<p class="subhead2"><a id="ARPLS72445"></a>Types of Oracle Streams Environments Configured by the Procedure</p>
<p>This procedure can configure the following types of Oracle Streams environments:</p>
<ul>
<li>
<p><span class="bold">Local capture and apply on one database:</span> Specify the same global name for the <code dir="ltr">source_database</code> and the <code dir="ltr">destination_database</code> parameter.</p>
</li>
<li>
<p><span class="bold">Local capture and remote apply:</span> Specify the global name of the local database for the <code dir="ltr">source_database</code> parameter and a remote database for the <code dir="ltr">destination_database</code> parameter.</p>
</li>
<li>
<p><span class="bold">Downstream capture and local apply:</span> Specify a remote database for the <code dir="ltr">source_database</code> parameter and the local database for the <code dir="ltr">destination_database</code> parameter.</p>
</li>
<li>
<p><span class="bold">Downstream capture and remote apply:</span> Specify a remote database for the <code dir="ltr">source_database</code> parameter and a remote database for the <code dir="ltr">destination_database</code> parameter.</p>
</li>
</ul>
<p class="subhead2"><a id="ARPLS72446"></a>Optional One-Way Replication With This Procedure</p>
<p>To configure one-way replication of the table, in addition to recording changes to the table, set the <code dir="ltr">execute_lcr</code> parameter to <code dir="ltr">TRUE</code>. The apply process executes each row LCR and applies the change in the row LCR to the replica table at the destination database. In this case, ensure that the source table is instantiated at the destination database before running the procedure. Specifically, the source table must be prepared for instantiation, the instantiation SCN must be set for the replica table at the destination database, and, usually, the source table replica table should be consistent.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP012" href="../STREP/instant.htm#STREP012"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a></div>
<p class="subhead2"><a id="ARPLS72447"></a>Statement DML Handlers, the Change Table, and Row LCR Execution</p>
<p>This procedure configures one or more statement DML handlers that perform the following actions:</p>
<ul>
<li>
<p>Record changes in the change table using the information in row LCRs.</p>
</li>
<li>
<p>Execute row LCRs if the <code dir="ltr">execute_lcr</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
</ul>
<p>The procedure ensures that the row LCRs contain the required attributes to record the changes specified in the <code dir="ltr">capture_type_list</code>, <code dir="ltr">extra_column_list</code>, and <code dir="ltr">capture_values</code> parameters. The procedure adds the statement DML handlers to the apply process specified in the <code dir="ltr">apply_name</code> parameter.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="d_streams_hand.htm#BEIBCJEA">Chapter 162, &#34;DBMS_STREAMS_HANDLER_ADM&#34;</a></div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS825" class="refsect2"><a id="CDEGDDEG"></a>
<h3 class="refsect2">MAINTAIN_GLOBAL Procedure<a id="sthref11464"></a><a id="sthref11465"></a><a id="sthref11466"></a></h3>
<p>This procedure configures an Oracle Streams environment that replicates changes at the database level between two databases. This procedure can either configure the environment directly, or it can generate a script that configures the environment.</p>
<p>Run this procedure at the capture database. The capture database is the database that captures changes made to the source database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>This procedure automatically excludes database objects that are not supported by Oracle Streams from the replication environment by adding rules to the negative rule set of each capture and apply process. Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then do not allow data manipulation language (DML) or data definition language (DDL) changes to the destination database while the <code dir="ltr">MAINTAIN_GLOBAL</code> procedure, or the script generated by the procedure, is running. This restriction does not apply to the source database.</p>
</li>
<li>
<p>A capture process never captures changes in the <code dir="ltr">SYS</code>, <code dir="ltr">SYSTEM</code>, or <code dir="ltr">CTXSYS</code> schemas. This procedure does not configure replication for these schemas.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEJFABB">&#34;Procedures That Configure an Oracle Streams Environment&#34;</a> for more information about this procedure</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11467"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MAINTAIN_GLOBAL(
   source_directory_object      IN VARCHAR2,
   destination_directory_object IN VARCHAR2,
   source_database              IN VARCHAR2,
   destination_database         IN VARCHAR2,
   perform_actions              IN BOOLEAN   DEFAULT TRUE,
   script_name                  IN VARCHAR2  DEFAULT NULL,
   script_directory_object      IN VARCHAR2  DEFAULT NULL,
   dump_file_name               IN VARCHAR2  DEFAULT NULL,
   capture_name                 IN VARCHAR2  DEFAULT NULL,
   capture_queue_table          IN VARCHAR2  DEFAULT NULL,
   capture_queue_name           IN VARCHAR2  DEFAULT NULL,
   capture_queue_user           IN VARCHAR2  DEFAULT NULL,
   propagation_name             IN VARCHAR2  DEFAULT NULL,
   apply_name                   IN VARCHAR2  DEFAULT NULL,
   apply_queue_table            IN VARCHAR2  DEFAULT NULL,
   apply_queue_name             IN VARCHAR2  DEFAULT NULL,
   apply_queue_user             IN VARCHAR2  DEFAULT NULL,
   log_file                     IN VARCHAR2  DEFAULT NULL,
   bi_directional               IN BOOLEAN   DEFAULT FALSE,
   include_ddl                  IN BOOLEAN   DEFAULT FALSE,
   instantiation                IN INTEGER   DEFAULT 
                                             DBMS_STREAMS_ADM.INSTANTIATION_FULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11468"></a>Parameters</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEDCHFF">&#34;Common Parameters for the Configuration Procedures&#34;</a> for descriptions of the procedure parameters</div>
</div>
<!-- class="refsubsect" -->
<div id="ARPLS68764" class="tblformal">
<p class="titleintable"><a id="sthref11469"></a><a id="sthref11470"></a>Table 159-19 MAINTAIN_GLOBAL Procedure Parameters</p>
<table class="cellalignment4330" title="MAINTAIN_GLOBAL Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MAINTAIN_GLOBAL subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t91">Parameter</th>
<th class="cellalignment4328" id="r1c2-t91">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t91" headers="r1c1-t91">
<p><code dir="ltr">source_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t91 r1c2-t91">
<p>The directory object for the directory on the computer system running the source database into which the generated Data Pump export dump file is placed. This file remains in this directory after the procedure completes.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>. In this case, specify <code dir="ltr">NULL</code> for the <code dir="ltr">source_directory_object</code> parameter.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t91" headers="r1c1-t91">
<p><code dir="ltr">destination_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t91 r1c2-t91">
<p>The directory object for the directory on the computer system running the destination database into which the generated Data Pump export dump file is transferred.</p>
<p>If the source database and destination database run on the same computer system, then the source and destination directories must be different.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>. In these cases, specify <code dir="ltr">NULL</code> for the <code dir="ltr">destination_directory_object</code> parameter.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t91" headers="r1c1-t91">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t91 r1c2-t91">
<p>The global name of the source database.</p>
<p>If the specified global name is the same as the global name of the local database, then the procedure configures a local capture process for the source database.</p>
<p>If the specified global name is different from the global name of the local database, then the procedure configures a downstream capture process at the local database. In this case, a database link from the local database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t91" headers="r1c1-t91">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t91 r1c2-t91">
<p>The global name of the destination database.</p>
<p>If the local database is not the destination database, then a database link from the local database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t91" headers="r1c1-t91">
<p><code dir="ltr">dump_file_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t91 r1c2-t91">
<p>The name of the Data Pump export dump file. If a file with the specified file name exists in the specified directory for the <code dir="ltr">source_directory_object</code> or <code dir="ltr">destination_directory_object</code> parameter, then the procedure raises an error.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL</code>, then the export dump file name is generated by the system. In this case, the export dump file name is <code dir="ltr">expat</code><code dir="ltr"><span class="codeinlineitalic">nn</span></code><code dir="ltr">.dmp</code>, where <code dir="ltr"><span class="codeinlineitalic">nn</span></code> is a sequence number. The sequence number is increased to produce an export dump file with a unique name in the source directory.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t91" headers="r1c1-t91">
<p><code dir="ltr">log_file</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t91 r1c2-t91">
<p>The name of the Data Pump export log file. This log file is placed in the same directory as the Data Pump export dump file.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL</code>, then the log file name is the same name as the export dump file name with an extension of&nbsp;<code dir="ltr">.clg</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t91" headers="r1c1-t91">
<p><code dir="ltr">instantiation</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t91 r1c2-t91">
<p>Specify whether to perform instantiation and, if instantiation is performed, the type of instantiation:</p>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL</code> performs a full Data Pump export at the source database and a Data Pump import of the export dump file at the destination database. The instantiation SCN is set for the shared database objects during import. If the <code dir="ltr">instantiation</code> parameter is set to this value, then the user who runs this procedure must have <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_FILE_TRANSFER</code> package.</p>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL_NETWORK</code> performs a full network Data Pump import. A network import means that Data Pump performs the import without using an export dump file. The instantiation SCN is set for the shared database objects during import. If the <code dir="ltr">instantiation</code> parameter is set to this value, then a database link from the destination database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code> does not perform an instantiation. This setting is valid only if the <code dir="ltr">perform_actions</code> parameter is set to <code dir="ltr">FALSE</code>, and the procedure generates a configuration script. In this case, the configuration script does not perform an instantiation and does not set the instantiation SCN for each shared database object. Instead, you must perform the instantiation and ensure that instantiation SCN values are set properly. If you use the RMAN <code dir="ltr">DUPLICATE</code> or <code dir="ltr">CONVERT</code> <code dir="ltr">DATABASE</code> command for database instantiation, then the destination database cannot be the capture database.</p>
<p>If this parameter is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL_NETWORK</code>, then the database objects being instantiated must exist at the source database.</p>
<p>If an instantiated database object does not exist at the destination database, then it is imported at the destination database, including its supplemental logging specifications from the source database and its supporting database objects, such as indexes and triggers. However, if the database object exists at the destination database before instantiation, then it is not imported at the destination database. Therefore, the supplemental logging specifications from the source database are not specified for the database object at the destination database, and the supporting database objects are not imported.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS826" class="refsect2"><a id="CDEDAJEB"></a>
<h3 class="refsect2">MAINTAIN_SCHEMAS Procedure<a id="sthref11471"></a><a id="sthref11472"></a><a id="sthref11473"></a></h3>
<p>This procedure configures an Oracle Streams environment that replicates changes to specified schemas between two databases. This procedure can either configure the environment directly, or it can generate a script that configures the environment.</p>
<p>Run this procedure at the capture database. The capture database is the database that captures changes made to the source database.</p>
<p>This procedure is overloaded. One <code dir="ltr">schema_names</code> parameter is type <code dir="ltr">VARCHAR2</code> and the other <code dir="ltr">schema_names</code> parameter is type <code dir="ltr">DBMS_UTILITY.UNCL_ARRAY</code>. These parameters enable you to enter the list of schemas in different ways and are mutually exclusive.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>This procedure automatically excludes database objects that are not supported by Oracle Streams in the schemas from the replication environment by adding rules to the negative rule set of each capture and apply process. Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then do not allow data manipulation language (DML) or data definition language (DDL) changes to the shared database objects at the destination database while the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure, or the script generated by the procedure, is running. This restriction does not apply to the source database.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEJFABB">&#34;Procedures That Configure an Oracle Streams Environment&#34;</a> for more information about this procedure</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11474"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MAINTAIN_SCHEMAS(
   schema_names                 IN VARCHAR2,
   source_directory_object      IN VARCHAR2,
   destination_directory_object IN VARCHAR2,
   source_database              IN VARCHAR2,
   destination_database         IN VARCHAR2,
   perform_actions              IN BOOLEAN   DEFAULT TRUE,
   script_name                  IN VARCHAR2  DEFAULT NULL,
   script_directory_object      IN VARCHAR2  DEFAULT NULL,
   dump_file_name               IN VARCHAR2  DEFAULT NULL,
   capture_name                 IN VARCHAR2  DEFAULT NULL,
   capture_queue_table          IN VARCHAR2  DEFAULT NULL,
   capture_queue_name           IN VARCHAR2  DEFAULT NULL,
   capture_queue_user           IN VARCHAR2  DEFAULT NULL,
   propagation_name             IN VARCHAR2  DEFAULT NULL,
   apply_name                   IN VARCHAR2  DEFAULT NULL,
   apply_queue_table            IN VARCHAR2  DEFAULT NULL,
   apply_queue_name             IN VARCHAR2  DEFAULT NULL,
   apply_queue_user             IN VARCHAR2  DEFAULT NULL,
   log_file                     IN VARCHAR2  DEFAULT NULL,
   bi_directional               IN BOOLEAN   DEFAULT FALSE,
   include_ddl                  IN BOOLEAN   DEFAULT FALSE,
   instantiation                IN INTEGER   DEFAULT 
                                           DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA);

DBMS_STREAMS_ADM.MAINTAIN_SCHEMAS(
   schema_names                 IN DBMS_UTILITY.UNCL_ARRAY,
   source_directory_object      IN VARCHAR2,
   destination_directory_object IN VARCHAR2,
   source_database              IN VARCHAR2,
   destination_database         IN VARCHAR2,
   perform_actions              IN BOOLEAN   DEFAULT TRUE,
   script_name                  IN VARCHAR2  DEFAULT NULL,
   script_directory_object      IN VARCHAR2  DEFAULT NULL,
   dump_file_name               IN VARCHAR2  DEFAULT NULL,
   capture_name                 IN VARCHAR2  DEFAULT NULL,
   capture_queue_table          IN VARCHAR2  DEFAULT NULL,
   capture_queue_name           IN VARCHAR2  DEFAULT NULL,
   capture_queue_user           IN VARCHAR2  DEFAULT NULL,
   propagation_name             IN VARCHAR2  DEFAULT NULL,
   apply_name                   IN VARCHAR2  DEFAULT NULL,
   apply_queue_table            IN VARCHAR2  DEFAULT NULL,
   apply_queue_name             IN VARCHAR2  DEFAULT NULL,
   apply_queue_user             IN VARCHAR2  DEFAULT NULL,
   log_file                     IN VARCHAR2  DEFAULT NULL,
   bi_directional               IN BOOLEAN   DEFAULT FALSE,
   include_ddl                  IN BOOLEAN   DEFAULT FALSE,
   instantiation                IN INTEGER   DEFAULT 
                                           DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11475"></a>Parameters</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEDCHFF">&#34;Common Parameters for the Configuration Procedures&#34;</a> for descriptions of the procedure parameters that are not in <a href="#CDEJDCCB">Table 159-20</a></div>
<div id="ARPLS68765" class="tblformal">
<p class="titleintable"><a id="sthref11476"></a><a id="CDEJDCCB"></a>Table 159-20 MAINTAIN_SCHEMAS Procedure Parameters</p>
<table class="cellalignment4330" title="MAINTAIN_SCHEMAS Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MAINTAIN_SCHEMAS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t95">Parameter</th>
<th class="cellalignment4328" id="r1c2-t95">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t95" headers="r1c1-t95">
<p><code dir="ltr">schema_names</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t95 r1c2-t95">
<p>The schemas to be configured for replication and maintained by Oracle Streams after configuration. The schemas can be specified in the following ways:</p>
<ul>
<li>
<p>Comma-delimited list of type <code dir="ltr">VARCHAR2</code></p>
</li>
<li>
<p>A PL/SQL associative array of type <code dir="ltr">DBMS_UTILITY.UNCL_ARRAY</code>, where each element is the name of a schema. The first schema should be in position 1. The last position must be <code dir="ltr">NULL</code>.</p>
</li>
</ul>
<p>This procedure raises an error in any of the following cases:</p>
<ul>
<li>
<p>When a specified schema does not exist at the source database</p>
</li>
<li>
<p>When the <code dir="ltr">schema_names</code> parameter is set to <code dir="ltr">NULL</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t95" headers="r1c1-t95">
<p><code dir="ltr">source_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t95 r1c2-t95">
<p>The directory object for the directory on the computer system running the source database into which the generated Data Pump export dump file is placed. This file remains in this directory after the procedure completes.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>. In this case, specify <code dir="ltr">NULL</code> for the <code dir="ltr">source_directory_object</code> parameter.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t95" headers="r1c1-t95">
<p><code dir="ltr">destination_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t95 r1c2-t95">
<p>The directory object for the directory on the computer system running the destination database into which the generated Data Pump export dump file is transferred.</p>
<p>If the source database and destination database run on the same computer system, then the source and destination directories must be different.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>. In this case, specify <code dir="ltr">NULL</code> for the <code dir="ltr">destination_directory_object</code> parameter.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t95" headers="r1c1-t95">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t95 r1c2-t95">
<p>The global name of the source database.</p>
<p>If the specified global name is the same as the global name of the local database, then the procedure configures a local capture process for the source database.</p>
<p>If the specified global name is different from the global name of the local database, then the procedure configures a downstream capture process at the local database. In this case, a database link from the local database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t95" headers="r1c1-t95">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t95 r1c2-t95">
<p>The global name of the destination database.</p>
<p>If the local database is not the destination database, then a database link from the local database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t95" headers="r1c1-t95">
<p><code dir="ltr">dump_file_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t95 r1c2-t95">
<p>The name of the Data Pump export dump file. If a file with the specified file name exists in the specified directory for the <code dir="ltr">source_directory_object</code> or <code dir="ltr">destination_directory_object</code> parameter, then the procedure raises an error.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA</code>, then the export dump file name is generated by the system. In this case, the export dump file name is <code dir="ltr">expat</code><code dir="ltr"><span class="codeinlineitalic">nn</span></code><code dir="ltr">.dmp</code>, where <code dir="ltr"><span class="codeinlineitalic">nn</span></code> is a sequence number. The sequence number is increased to produce an export dump file with a unique name in the source directory.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t95" headers="r1c1-t95">
<p><code dir="ltr">capture_queue_user</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t95 r1c2-t95">
<p>The name of the user who requires <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges for the queue at the source database. This user also is configured as a secure queue user of the queue. The queue user cannot grant these privileges to other users because they are not granted with the <code dir="ltr">GRANT</code> option.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure does not grant any privileges. You can also grant queue privileges to the appropriate users using the <code dir="ltr">DBMS_AQADM</code> package.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t95" headers="r1c1-t95">
<p><code dir="ltr">log_file</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t95 r1c2-t95">
<p>The name of the Data Pump export log file. This log file is placed in the same directory as the Data Pump export dump file.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA</code>, then the log file name is the same name as the export dump file name with an extension of&nbsp;<code dir="ltr">.clg</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t95" headers="r1c1-t95">
<p><code dir="ltr">instantiation</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t95 r1c2-t95">
<p>Specify whether to perform instantiation and, if instantiation is performed, the type of instantiation:</p>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA</code> performs a full Data Pump export at the source database and a Data Pump import of the export dump file at the destination database. The instantiation SCN is set for the shared database objects during import. If the <code dir="ltr">instantiation</code> parameter is set to this value, then the user who runs this procedure must have <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_FILE_TRANSFER</code> package.</p>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA_NETWORK</code> performs a full network Data Pump import. A network import means that Data Pump performs the import without using an export dump file. The instantiation SCN is set for the shared database objects during import. If the <code dir="ltr">instantiation</code> parameter is set to this value, then a database link from the destination database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code> does not perform an instantiation. This setting is valid only if the <code dir="ltr">perform_actions</code> parameter is set to <code dir="ltr">FALSE</code>, and the procedure generates a configuration script. In this case, the configuration script does not perform an instantiation and does not set the instantiation SCN for each shared database object. Instead, you must perform the instantiation and ensure that instantiation SCN values are set properly.</p>
<p>If this parameter is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA_NETWORK</code>, then the database objects being instantiated must exist at the source database, and the tablespaces that contain the schemas must exist at the destination database.</p>
<p>If an instantiated database object does not exist at the destination database, then it is imported at the destination database, including its supplemental logging specifications from the source database and its supporting database objects, such as indexes and triggers. However, if the database object exists at the destination database before instantiation, then it is not imported at the destination database. Therefore, the supplemental logging specifications from the source database are not specified for the database object at the destination database, and the supporting database objects are not imported.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS553" class="refsect2"><a id="i1029845"></a>
<h3 class="refsect2">MAINTAIN_SIMPLE_TABLESPACE Procedure<a id="sthref11477"></a></h3>
<p>This procedure clones a simple tablespace from a source database at a destination database and uses Oracle Streams to maintain this tablespace at both databases. This procedure can either perform these actions directly, or it can generate a script that performs these actions. Run this procedure at the source database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure is deprecated. It is replaced by the <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> procedure.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CDEHIJCD">&#34;Deprecated Subprograms&#34;</a></p>
</li>
<li>
<p><a href="#CDEIFFHH">MAINTAIN_SIMPLE_TTS Procedure</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11478"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MAINTAIN_SIMPLE_TABLESPACE(
   tablespace_name              IN VARCHAR2,
   source_directory_object      IN VARCHAR2,
   destination_directory_object IN VARCHAR2,
   destination_database         IN VARCHAR2,
   setup_streams                IN BOOLEAN   DEFAULT TRUE,
   script_name                  IN VARCHAR2  DEFAULT NULL,
   script_directory_object      IN VARCHAR2  DEFAULT NULL,
   bi_directional               IN BOOLEAN   DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11479"></a>Parameters</p>
<div id="ARPLS68766" class="tblformal">
<p class="titleintable"><a id="sthref11480"></a><a id="sthref11481"></a>Table 159-21 MAINTAIN_SIMPLE_TABLESPACE Procedure Parameters</p>
<table class="cellalignment4330" title="MAINTAIN_SIMPLE_TABLESPACE Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MAINTAIN_SIMPLE_TABLESPACE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t98">Parameter</th>
<th class="cellalignment4328" id="r1c2-t98">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t98" headers="r1c1-t98">
<p><code dir="ltr">tablespace_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t98 r1c2-t98">
<p>The local simple tablespace to be cloned at the destination database and maintained by Oracle Streams.</p>
<p>The tablespace must exist at the source database, but it must not exist at the destination database.</p>
<p>A directory object must exist for the directory that contains the datafile for the tablespace. The user who invokes this procedure must have <code dir="ltr">READ</code> privilege on this directory object. The directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t98" headers="r1c1-t98">
<p><code dir="ltr">source_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t98 r1c2-t98">
<p>The directory object for the directory on the computer system running the source database into which the generated Data Pump export dump file and the datafile for the cloned tablespace are placed. These files remain in this directory after the procedure completes.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t98" headers="r1c1-t98">
<p><code dir="ltr">destination_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t98 r1c2-t98">
<p>The directory object for the directory on the computer system running the destination database into which the generated Data Pump export dump file and the datafile for the cloned tablespace are transferred.</p>
<p>If the source database and destination database run on the same computer system, then the source and destination directories must be different.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t98" headers="r1c1-t98">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t98 r1c2-t98">
<p>The global name of the destination database. A database link from the source database to the destination database with the same name as the global name of the destination database must exist.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t98" headers="r1c1-t98">
<p><code dir="ltr">setup_streams</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t98 r1c2-t98">
<p>If <code dir="ltr">TRUE</code>, then the procedure performs the necessary actions to maintain the tablespace directly.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not perform the necessary actions to maintain the tablespace directly.</p>
<p>Specify <code dir="ltr">FALSE</code> when this procedure is generating a script that you can edit and then run. The procedure raises an error if you specify <code dir="ltr">FALSE</code> and either of the following parameters is <code dir="ltr">NULL</code>:</p>
<ul>
<li>
<p><code dir="ltr">script_name</code></p>
</li>
<li>
<p><code dir="ltr">script_directory_object</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t98" headers="r1c1-t98">
<p><code dir="ltr">script_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t98 r1c2-t98">
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">setup_streams</code> parameter is <code dir="ltr">FALSE</code>, then specify the name of the script generated by this procedure. The script contains all of the statements used to maintain the specified tablespace. If a file with the specified script name exists in the specified directory for the <code dir="ltr">script_directory_object</code> parameter, then the procedure appends the statements to the existing file.</p>
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">setup_streams</code> parameter is <code dir="ltr">TRUE</code>, then this procedure generates the specified script and performs the actions to maintain the specified tablespace directly.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">setup_streams</code> parameter is <code dir="ltr">TRUE</code>, then this procedure does not generate a script and performs the actions to maintain the specified tablespace directly.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">setup_streams</code> parameter is <code dir="ltr">FALSE</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t98" headers="r1c1-t98">
<p><code dir="ltr">script_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t98 r1c2-t98">
<p>The directory object for the directory on the local computer system into which the generated script is placed.</p>
<p>If the <code dir="ltr">script_name</code> parameter is <code dir="ltr">NULL</code>, then the procedure ignores this parameter and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">script_name</code> parameter is non-<code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t98" headers="r1c1-t98">
<p><code dir="ltr">bi_directional</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t98 r1c2-t98">
<p>Specify <code dir="ltr">TRUE</code> to configure bi-directional replication between the current database and the database specified in <code dir="ltr">destination_database</code>. Both databases are configured as source and destination databases, a capture and apply process is configured at both databases, and propagations are configured between the databases to propagate messages.</p>
<p>Specify <code dir="ltr">FALSE</code> to configure one way replication from the current database to the database specified in <code dir="ltr">destination_database</code>. A capture process is configured at the current database, a propagation is configured to propagate messages from the current database to the destination database, and an apply process is configured at the destination database.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11482"></a>Usage Notes</p>
<p>The specified tablespace must be a simple tablespace. A simple tablespace is a single, self-contained tablespace that uses only one datafile. A self-contained tablespace has no references from the tablespace pointing outside of the tablespace. For example, if an index in the tablespace is for a table in a different tablespace, then the tablespace is not self-contained. This procedure cannot be used for a non simple tablespace or a set of tablespaces.</p>
<p class="subhead2"><a id="ARPLS68767"></a>DDL Changes Not Maintained</p>
<p>This procedure does not configure the Oracle Streams environment to maintain DDL changes to the tablespace nor to the database objects in the tablespace. For example, the Oracle Streams environment is not configured to replicate <code dir="ltr">ALTER</code> <code dir="ltr">TABLESPACE</code> statements on the tablespace, nor is it configured to replicate <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statements on tables in the tablespace. You can configure the Oracle Streams environment to maintain DDL changes manually or modify generated scripts to achieve this.</p>
<p class="subhead2"><a id="ARPLS68768"></a>Additional Documentation for this Procedure</p>
<p>The following documentation applies to the <code dir="ltr">MAINTAIN_SIMPLE_TABLESPACE</code> procedure:</p>
<ul>
<li>
<p><a href="#CDEGFEEC">Automatic Platform Conversion</a></p>
</li>
<li>
<p><a class="olink STREP020" href="../STREP/config_simple.htm#STREP020"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a></p>
</li>
</ul>
<p class="subhead2"><a id="ARPLS68769"></a>Requirements for Running this Procedure</p>
<p>Meet the following requirements when run the <code dir="ltr">MAINTAIN_SIMPLE_TABLESPACE</code> procedure:</p>
<ul>
<li>
<p>Run the procedure at the source database.</p>
</li>
<li>
<p>Both databases must be open during configuration. If the procedure is generating a script only, then the database specified in the <code dir="ltr">destination_database</code> parameter does not need to be open when you run the procedure, but both databases must be open when you run the generated script.</p>
</li>
<li>
<p>Grant the user who runs this procedure the <code dir="ltr">DBA</code> role. This user must have the necessary privileges to complete the following actions:</p>
<ul>
<li>
<p>Create <code dir="ltr">ANYDATA</code> queues, capture processes, propagations, and apply processes.</p>
</li>
<li>
<p>Specify supplemental logging</p>
</li>
<li>
<p>Run subprograms in the <code dir="ltr">DBMS_STREAMS_ADM</code> and <code dir="ltr">DBMS_AQADM</code> packages.</p>
</li>
<li>
<p>Access the database specified in the <code dir="ltr">destination_database</code> parameter through a database link. This database link should have the same name as the global name of the destination database.</p>
</li>
<li>
<p>Run subprograms in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package</p>
</li>
<li>
<p>The necessary privileges to run the <code dir="ltr">CLONE_SIMPLE_TABLESPACE</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package at the source database. See <a href="d_streams_tbl.htm#i1000996">CLONE_SIMPLE_TABLESPACE Procedure</a> for the list of required privileges.</p>
</li>
<li>
<p>The necessary privileges to run the <code dir="ltr">ATTACH_SIMPLE_TABLESPACE</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package at the destination database. See <a href="d_streams_tbl.htm#i1000780">ATTACH_SIMPLE_TABLESPACE Procedure</a> for the list of required privileges.</p>
</li>
</ul>
<p>To ensure that the user who runs this procedure has the necessary privileges, you should configure an Oracle Streams administrator at each database, and each database link should be should be created in the Oracle Streams administrator&#39;s schema.</p>
<p>Typically, the <code dir="ltr">DBA</code> role can be revoked from the user, if necessary, after the configuration is complete.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then the corresponding user at the destination database must be able to use a database link to access the source database. This database link should have the same name as the global name of the source database.</p>
</li>
<li>
<p>Each specified directory object must be created using the SQL statement <code dir="ltr">CREATE</code> <code dir="ltr">DIRECTORY</code>, and the user who invokes this procedure must have <code dir="ltr">READ</code> and <code dir="ltr">WRITE</code> privilege on each one.</p>
</li>
<li>
<p>The databases configured by this procedure must be Oracle Database 10<span class="italic">g</span> Release 2 or later databases when this procedure is run under the following conditions:</p>
<ul>
<li>
<p>The procedure is run at an Oracle Database 10<span class="italic">g</span> Release 2 or later database.</p>
</li>
<li>
<p>The <code dir="ltr">setup_streams</code> parameter is set to <code dir="ltr">TRUE</code> to configure the Oracle Streams replication environment directly.</p>
</li>
</ul>
</li>
<li>
<p>The databases configured by this procedure must be Oracle Database 10<span class="italic">g</span> Release 1 or later databases when this procedure is run under the following conditions:</p>
<ul>
<li>
<p>The procedure is run at an Oracle Database 10<span class="italic">g</span> Release 2 or later database.</p>
</li>
<li>
<p>The <code dir="ltr">setup_streams</code> parameter is set to <code dir="ltr">FALSE</code> in this procedure, and the replication environment is configured with a generated script.</p>
</li>
</ul>
<p>If the script configures an Oracle Database 10<span class="italic">g</span> Release 1 database, then the script must be modified so that it does not configure features that are available only in Oracle Database 10<span class="italic">g</span> Release 2 or later, such as queue-to-queue propagation.</p>
</li>
<li>
<p>If the procedure is run at an Oracle Database 10<span class="italic">g</span> Release 1 database, then the databases configured by the procedure must be Oracle Database 10<span class="italic">g</span> Release 1 or later databases.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP200" href="../STREP/prep_rep.htm#STREP200"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about configuring an Oracle Streams administrator</div>
<p class="subhead2"><a id="ARPLS68770"></a>Default Values for Parameters Excluded From the MAINTAIN_SIMPLE_TABLESPACE Procedure</p>
<p>This procedure uses the default values for the parameters in the <code dir="ltr">MAINTAIN_TABLESPACES</code> procedure that do not exist in the <code dir="ltr">MAINTAIN_SIMPLE_TABLESPACE</code> procedure. For example, this procedure creates a capture process at the source database named <code dir="ltr">capture</code>, because that is the default value for the <code dir="ltr">capture_name</code> parameter in the <code dir="ltr">MAINTAIN_TABLESPACES</code> procedure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1016534">MAINTAIN_TABLESPACES Procedure</a></div>
<p class="subhead2"><a id="ARPLS68771"></a>Configuration Progress and Recoverability</p>
<p>When this procedure is run with the <code dir="ltr">setup_streams</code> parameter set to <code dir="ltr">TRUE</code>, metadata about its configuration actions is recorded in the following data dictionary views: <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_PARAMS</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_BLOCKS</code>, and <code dir="ltr">DBA_RECOVERABLE_SCRIPT_ERRORS</code>. If the procedure stops because it encounters an error, then you can use the <code dir="ltr">RECOVER_OPERATION</code> procedure to complete the configuration after you correct the conditions that caused the error.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When this procedure is run with the <code dir="ltr">setup_streams</code> parameter set to <code dir="ltr">FALSE</code>, these views are not populated. Also, the views are not populated when a script generated by this procedure is run.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEIFBGC">&#34;RECOVER_OPERATION Procedure&#34;</a></div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS863" class="refsect2"><a id="CDEIFFHH"></a>
<h3 class="refsect2">MAINTAIN_SIMPLE_TTS Procedure<a id="sthref11483"></a><a id="sthref11484"></a><a id="sthref11485"></a></h3>
<p>This procedure clones a simple tablespace from a source database at a destination database and uses Oracle Streams to maintain this tablespace at both databases. This procedure can either perform these actions directly, or it can generate a script that performs these actions.</p>
<p>Run this procedure at the capture database. The capture database is the database that captures changes made to the source database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>This procedure automatically excludes database objects that are not supported by Oracle Streams in the tablespace from the replication environment by adding rules to the negative rule set of each capture and apply process. Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</p>
</li>
<li>
<p>This procedure replaces the deprecated <code dir="ltr">MAINTAIN_SIMPLE_TABLESPACE</code> procedure.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEJFABB">&#34;Procedures That Configure an Oracle Streams Environment&#34;</a> for more information about this procedure</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11486"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MAINTAIN_SIMPLE_TTS(
   tablespace_name              IN VARCHAR2,
   source_directory_object      IN VARCHAR2,
   destination_directory_object IN VARCHAR2,
   source_database              IN VARCHAR2,
   destination_database         IN VARCHAR2,
   perform_actions              IN BOOLEAN   DEFAULT TRUE,
   script_name                  IN VARCHAR2  DEFAULT NULL,
   script_directory_object      IN VARCHAR2  DEFAULT NULL,
   bi_directional               IN BOOLEAN   DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11487"></a>Parameters</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEDCHFF">&#34;Common Parameters for the Configuration Procedures&#34;</a> for descriptions of the procedure parameters that are not in <a href="#CDEEDBCD">Table 159-22</a></div>
<div id="ARPLS68772" class="tblformal">
<p class="titleintable"><a id="sthref11488"></a><a id="CDEEDBCD"></a>Table 159-22 MAINTAIN_SIMPLE_TTS Procedure Parameters</p>
<table class="cellalignment4330" title="MAINTAIN_SIMPLE_TTS Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MAINTAIN_SIMPLE_TTS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t106">Parameter</th>
<th class="cellalignment4328" id="r1c2-t106">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t106" headers="r1c1-t106">
<p><code dir="ltr">tablespace_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t106 r1c2-t106">
<p>The local simple tablespace to be cloned at the destination database and maintained by Oracle Streams.</p>
<p>The tablespace must exist at the source database, but it must not exist at the destination database.</p>
<p>A directory object must exist for the directory that contains the datafile for the tablespace. The user who invokes this procedure must have <code dir="ltr">READ</code> privilege on this directory object. The directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t106" headers="r1c1-t106">
<p><code dir="ltr">source_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t106 r1c2-t106">
<p>The directory object for the directory on the computer system running the source database into which the generated Data Pump export dump file and the datafile for the cloned tablespace are placed. These files remain in this directory after the procedure completes.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t106" headers="r1c1-t106">
<p><code dir="ltr">destination_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t106 r1c2-t106">
<p>The directory object for the directory on the computer system running the destination database into which the generated Data Pump export dump file and the datafile for the cloned tablespace are transferred.</p>
<p>If the source database and destination database run on the same computer system, then the source and destination directories must be different.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t106" headers="r1c1-t106">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t106 r1c2-t106">
<p>The global name of the source database.</p>
<p>If the specified global name is the same as the global name of the local database, then the procedure configures a local capture process for the source database.</p>
<p>If the specified global name is different from the global name of the local database, then the procedure configures a downstream capture process at the local database. In this case, a database link from the local database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t106" headers="r1c1-t106">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t106 r1c2-t106">
<p>The global name of the destination database.</p>
<p>If the local database is not the destination database, then a database link from the local database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11489"></a>Usage Notes</p>
<p>The specified tablespace must be a simple tablespace. A simple tablespace is a single, self-contained tablespace that uses only one datafile. A self-contained tablespace has no references from the tablespace pointing outside of the tablespace. For example, if an index in the tablespace is for a table in a different tablespace, then the tablespace is not self-contained. This procedure cannot be used for a non simple tablespace or a set of tablespaces.</p>
<p class="subhead2"><a id="ARPLS68773"></a>DDL Changes Not Maintained</p>
<p>This procedure does not configure the Oracle Streams environment to maintain DDL changes to the tablespace nor to the database objects in the tablespace. For example, the Oracle Streams environment is not configured to replicate <code dir="ltr">ALTER</code> <code dir="ltr">TABLESPACE</code> statements on the tablespace, nor is it configured to replicate <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statements on tables in the tablespace. You can configure the Oracle Streams environment to maintain DDL changes manually or modify generated scripts to achieve this.</p>
<p class="subhead2"><a id="CDEDDEBD"></a><a id="ARPLS68774"></a>Additional Privileges Required by the MAINTAIN_SIMPLE_TTS Procedure</p>
<p>In addition to the required privileges described in <a href="#CDEJJJIF">&#34;Requirements for Running These Procedures&#34;</a>, the user who runs the <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> procedure must have the necessary privileges to complete the following actions:</p>
<ul>
<li>
<p>Run subprograms in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package</p>
</li>
<li>
<p>The necessary privileges to run the <code dir="ltr">CLONE_SIMPLE_TABLESPACE</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package at the source database. See <a href="d_streams_tbl.htm#i1000996">CLONE_SIMPLE_TABLESPACE Procedure</a> for the list of required privileges.</p>
</li>
<li>
<p>The necessary privileges to run the <code dir="ltr">ATTACH_SIMPLE_TABLESPACE</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package at the destination database. See <a href="d_streams_tbl.htm#i1000780">ATTACH_SIMPLE_TABLESPACE Procedure</a> for the list of required privileges.</p>
</li>
</ul>
<p class="subhead2"><a id="ARPLS68775"></a>Default Values for Parameters Excluded From the MAINTAIN_SIMPLE_TTS Procedure</p>
<p>This procedure uses the default values for the parameters in the <code dir="ltr">MAINTAIN_TTS</code> procedure that do not exist in the <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> procedure. For example, this procedure automatically generates the capture process name, because <code dir="ltr">NULL</code> is the default value for the <code dir="ltr">capture_name</code> parameter in the <code dir="ltr">MAINTAIN_TTS</code> procedure, and the procedure generates the capture process name when <code dir="ltr">NULL</code> is specified for <code dir="ltr">capture_name</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEFBAEH">MAINTAIN_TTS Procedure</a></div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS827" class="refsect2"><a id="CDEDADAI"></a>
<h3 class="refsect2">MAINTAIN_TABLES Procedure<a id="sthref11490"></a><a id="sthref11491"></a><a id="sthref11492"></a></h3>
<p>This procedure configures an Oracle Streams environment that replicates changes to specified tables between two databases. This procedure can either configure the environment directly, or it can generate a script that configures the environment.</p>
<p>Run this procedure at the capture database. The capture database is the database that captures changes made to the source database.</p>
<p>This procedure is overloaded. One <code dir="ltr">table_names</code> parameter is type <code dir="ltr">VARCHAR2</code> and the other <code dir="ltr">table_names</code> parameter is type <code dir="ltr">DBMS_UTILITY.UNCL_ARRAY</code>. These parameters enable you to enter the list of tables in different ways and are mutually exclusive.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then do not allow data manipulation language (DML) or data definition language (DDL) changes to the shared database objects at the destination database while the <code dir="ltr">MAINTAIN_TABLES</code> procedure, or the script generated by the procedure, is running. This restriction does not apply to the source database.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEJFABB">&#34;Procedures That Configure an Oracle Streams Environment&#34;</a> for more information about this procedure</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11493"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MAINTAIN_TABLES(
   table_names                  IN VARCHAR2,
   source_directory_object      IN VARCHAR2,
   destination_directory_object IN VARCHAR2,
   source_database              IN VARCHAR2,
   destination_database         IN VARCHAR2,
   perform_actions              IN BOOLEAN   DEFAULT TRUE,
   script_name                  IN VARCHAR2  DEFAULT NULL,
   script_directory_object      IN VARCHAR2  DEFAULT NULL,
   dump_file_name               IN VARCHAR2  DEFAULT NULL,
   capture_name                 IN VARCHAR2  DEFAULT NULL,
   capture_queue_table          IN VARCHAR2  DEFAULT NULL,
   capture_queue_name           IN VARCHAR2  DEFAULT NULL,
   capture_queue_user           IN VARCHAR2  DEFAULT NULL,
   propagation_name             IN VARCHAR2  DEFAULT NULL,
   apply_name                   IN VARCHAR2  DEFAULT NULL,
   apply_queue_table            IN VARCHAR2  DEFAULT NULL,
   apply_queue_name             IN VARCHAR2  DEFAULT NULL,
   apply_queue_user             IN VARCHAR2  DEFAULT NULL,
   log_file                     IN VARCHAR2  DEFAULT NULL,
   bi_directional               IN BOOLEAN   DEFAULT FALSE,
   include_ddl                  IN BOOLEAN   DEFAULT FALSE,
   instantiation                IN INTEGER   DEFAULT 
                                           DBMS_STREAMS_ADM.INSTANTIATION_TABLE);

DBMS_STREAMS_ADM.MAINTAIN_TABLES(
   table_names                  IN DBMS_UTILITY.UNCL_ARRAY,
   source_directory_object      IN VARCHAR2,
   destination_directory_object IN VARCHAR2,
   source_database              IN VARCHAR2,
   destination_database         IN VARCHAR2,
   perform_actions              IN BOOLEAN   DEFAULT TRUE,
   script_name                  IN VARCHAR2  DEFAULT NULL,
   script_directory_object      IN VARCHAR2  DEFAULT NULL,
   dump_file_name               IN VARCHAR2  DEFAULT NULL,
   capture_name                 IN VARCHAR2  DEFAULT NULL,
   capture_queue_table          IN VARCHAR2  DEFAULT NULL,
   capture_queue_name           IN VARCHAR2  DEFAULT NULL,
   capture_queue_user           IN VARCHAR2  DEFAULT NULL,
   propagation_name             IN VARCHAR2  DEFAULT NULL,
   apply_name                   IN VARCHAR2  DEFAULT NULL,
   apply_queue_table            IN VARCHAR2  DEFAULT NULL,
   apply_queue_name             IN VARCHAR2  DEFAULT NULL,
   apply_queue_user             IN VARCHAR2  DEFAULT NULL,
   log_file                     IN VARCHAR2  DEFAULT NULL,
   bi_directional               IN BOOLEAN   DEFAULT FALSE,
   include_ddl                  IN BOOLEAN   DEFAULT FALSE,
   instantiation                IN INTEGER   DEFAULT 
                                           DBMS_STREAMS_ADM.INSTANTIATION_TABLE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11494"></a>Parameters</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEDCHFF">&#34;Common Parameters for the Configuration Procedures&#34;</a> for descriptions of the procedure parameters that are not in <a href="#CDEGEFHF">Table 159-23</a></div>
<div id="ARPLS68776" class="tblformal">
<p class="titleintable"><a id="sthref11495"></a><a id="CDEGEFHF"></a>Table 159-23 MAINTAIN_TABLES Procedure Parameters</p>
<table class="cellalignment4330" title="MAINTAIN_TABLES Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MAINTAIN_TABLES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t111">Parameter</th>
<th class="cellalignment4328" id="r1c2-t111">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t111" headers="r1c1-t111">
<p><code dir="ltr">table_names</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t111 r1c2-t111">
<p>The tables to be configured for replication and maintained by Oracle Streams after configuration. The tables can be specified in the following ways:</p>
<ul>
<li>
<p>Comma-delimited list of type <code dir="ltr">VARCHAR2</code></p>
</li>
<li>
<p>A PL/SQL associative array of type <code dir="ltr">DBMS_UTILITY.UNCL_ARRAY</code>, where each element is the name of a table. The first table should be in position 1. The last position must be <code dir="ltr">NULL</code>.</p>
</li>
</ul>
<p>Each table should be specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">table_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
<p>This procedure raises an error in any of the following cases:</p>
<ul>
<li>
<p>When a specified table does not exist at the source database</p>
</li>
<li>
<p>When the <code dir="ltr">table_names</code> parameter is set to <code dir="ltr">NULL</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t111" headers="r1c1-t111">
<p><code dir="ltr">source_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t111 r1c2-t111">
<p>The directory object for the directory on the computer system running the source database into which the generated Data Pump export dump file is placed. This file remain in this directory after the procedure completes.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>. In this case, specify <code dir="ltr">NULL</code> for the <code dir="ltr">source_directory_object</code> parameter.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t111" headers="r1c1-t111">
<p><code dir="ltr">destination_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t111 r1c2-t111">
<p>The directory object for the directory on the computer system running the destination database into which the generated Data Pump export dump file is transferred.</p>
<p>If the source database and destination database run on the same computer system, then the source and destination directories must be different.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>. In this case, specify <code dir="ltr">NULL</code> for the <code dir="ltr">destination_directory_object</code> parameter.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t111" headers="r1c1-t111">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t111 r1c2-t111">
<p>The global name of the source database.</p>
<p>If the specified global name is the same as the global name of the local database, then the procedure configures a local capture process for the source database.</p>
<p>If the specified global name is different from the global name of the local database, then the procedure configures a downstream capture process at the local database. In this case, a database link from the local database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t111" headers="r1c1-t111">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t111 r1c2-t111">
<p>The global name of the destination database.</p>
<p>If the local database is not the destination database, then a database link from the local database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t111" headers="r1c1-t111">
<p><code dir="ltr">dump_file_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t111 r1c2-t111">
<p>The name of the Data Pump export dump file. If a file with the specified file name exists in the specified directory for the <code dir="ltr">source_directory_object</code> or <code dir="ltr">destination_directory_object</code> parameter, then the procedure raises an error.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE</code>, then the export dump file name is generated by the system. In this case, the export dump file name is <code dir="ltr">expat</code><code dir="ltr"><span class="codeinlineitalic">nn</span></code><code dir="ltr">.dmp</code>, where <code dir="ltr"><span class="codeinlineitalic">nn</span></code> is a sequence number. The sequence number is increased to produce an export dump file with a unique name in the source directory.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t111" headers="r1c1-t111">
<p><code dir="ltr">capture_queue_user</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t111 r1c2-t111">
<p>The name of the user who requires <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges for the queue at the source database. This user also is configured as a secure queue user of the queue. The queue user cannot grant these privileges to other users because they are not granted with the <code dir="ltr">GRANT</code> option.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure does not grant any privileges. You can also grant queue privileges to the appropriate users using the <code dir="ltr">DBMS_AQADM</code> package.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t111" headers="r1c1-t111">
<p><code dir="ltr">log_file</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t111 r1c2-t111">
<p>The name of the Data Pump export log file. This log file is placed in the same directory as the Data Pump export dump file.</p>
<p>This parameter is ignored if <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE_NETWORK</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">instantiation</code> is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE</code>, then the log file name is the same name as the export dump file name with an extension of&nbsp;<code dir="ltr">.clg</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t111" headers="r1c1-t111">
<p><code dir="ltr">instantiation</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t111 r1c2-t111">
<p>Specify whether to perform instantiation and, if instantiation is performed, the type of instantiation:</p>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE</code> performs a full Data Pump export at the source database and a Data Pump import of the export dump file at the destination database. If the <code dir="ltr">instantiation</code> parameter is set to this value, then the user who runs this procedure must have <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_FILE_TRANSFER</code> package.</p>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE_NETWORK</code> performs a full network Data Pump import. A network import means that Data Pump performs the import without using an export dump file. If the <code dir="ltr">instantiation</code> parameter is set to this value, then a database link from the destination database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code> does not perform an instantiation. This setting is valid only if the <code dir="ltr">perform_actions</code> parameter is set to <code dir="ltr">FALSE</code>, and the procedure generates a configuration script. In this case, the configuration script does not perform an instantiation and does not set the instantiation SCN for each shared database object. Instead, you must perform the instantiation and ensure that instantiation SCN values are set properly.</p>
<p>If this parameter is set to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE</code> or <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE_NETWORK</code>, then the tables being instantiated must exist at the source database, and the tablespaces that contain the tables must exist at the destination database.</p>
<p>If an instantiated database object does not exist at the destination database, then it is imported at the destination database, including its supplemental logging specifications from the source database and its supporting database objects, such as indexes and triggers. However, if the database object exists at the destination database before instantiation, then it is not imported at the destination database. Therefore, the supplemental logging specifications from the source database are not specified for the database object at the destination database, and the supporting database objects are not imported.</p>
<p>Also, if an instantiated table does not exist at the destination database, then this procedure sets the instantiation SCN for the table. However, if an instantiated table exist at the destination database before instantiation, then this procedure does not set the instantiation SCN for the table. In this case, you must set the instantiation SCN for the table manually after the procedure completes.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS554" class="refsect2"><a id="i1016534"></a>
<h3 class="refsect2">MAINTAIN_TABLESPACES Procedure<a id="sthref11496"></a></h3>
<p>This procedure clones a set of tablespaces from a source database at a destination database and uses Oracle Streams to maintain these tablespaces at both databases. This procedure can either perform these actions directly, or it can generate a script that performs these actions. Run this procedure at the source database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure is deprecated. It is replaced by the <code dir="ltr">MAINTAIN_TTS</code> procedure.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CDEHIJCD">&#34;Deprecated Subprograms&#34;</a></p>
</li>
<li>
<p><a href="#CDEFBAEH">MAINTAIN_TTS Procedure</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11497"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MAINTAIN_TABLESPACES(
   tablespace_names             IN DBMS_STREAMS_TABLESPACE_ADM.TABLESPACE_SET,
   source_directory_object      IN VARCHAR2,
   destination_directory_object IN VARCHAR2,
   destination_database         IN VARCHAR2,
   setup_streams                IN BOOLEAN   DEFAULT TRUE,
   script_name                  IN VARCHAR2  DEFAULT NULL,
   script_directory_object      IN VARCHAR2  DEFAULT NULL,
   dump_file_name               IN VARCHAR2  DEFAULT NULL,
   source_queue_table           IN VARCHAR2  DEFAULT &#39;streams_queue_table&#39;,
   source_queue_name            IN VARCHAR2  DEFAULT &#39;streams_queue&#39;,
   source_queue_user            IN VARCHAR2  DEFAULT NULL,
   destination_queue_table      IN VARCHAR2  DEFAULT &#39;streams_queue_table&#39;,
   destination_queue_name       IN VARCHAR2  DEFAULT &#39;streams_queue&#39;,
   destination_queue_user       IN VARCHAR2  DEFAULT NULL,
   capture_name                 IN VARCHAR2  DEFAULT &#39;capture&#39;,
   propagation_name             IN VARCHAR2  DEFAULT NULL,
   apply_name                   IN VARCHAR2  DEFAULT NULL,
   log_file                     IN VARCHAR2  DEFAULT NULL,
   bi_directional               IN BOOLEAN   DEFAULT FALSE,
   include_ddl                  IN BOOLEAN   DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11498"></a>Parameters</p>
<div id="ARPLS68777" class="tblformal">
<p class="titleintable"><a id="sthref11499"></a><a id="sthref11500"></a>Table 159-24 MAINTAIN_TABLESPACES Procedure Parameters</p>
<table class="cellalignment4330" title="MAINTAIN_TABLESPACES Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MAINTAIN_TABLESPACES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t114">Parameter</th>
<th class="cellalignment4328" id="r1c2-t114">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t114" headers="r1c1-t114">
<p><code dir="ltr">tablespace_names</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t114 r1c2-t114">
<p>The local tablespace set to be cloned at the destination database and maintained by Oracle Streams.</p>
<p>The tablespaces in the tablespace set must exist at the source database, but these tablespaces must not exist at the destination database.</p>
<p>A directory object must exist for each directory that contains the datafiles for the tablespace set. The user who invokes this procedure must have <code dir="ltr">READ</code> privilege on these directory objects. The directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">See Also:</span> <a href="d_streams_tbl.htm#CDEGDGCI">TABLESPACE_SET Table Type</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t114" headers="r1c1-t114">
<p><code dir="ltr">source_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t114 r1c2-t114">
<p>The directory object for the directory on the computer system running the source database into which the generated Data Pump export dump file and the datafiles that comprise the cloned tablespace set are placed. These files remain in this directory after the procedure completes.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t114" headers="r1c1-t114">
<p><code dir="ltr">destination_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t114 r1c2-t114">
<p>The directory object for the directory on the computer system running the destination database into which the generated Data Pump export dump file and the datafiles that comprise the cloned tablespace set are transferred.</p>
<p>If the source database and destination database run on the same computer system, then the source and destination directories must be different.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t114" headers="r1c1-t114">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t114 r1c2-t114">
<p>The global name of the destination database. A database link from the source database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t114" headers="r1c1-t114">
<p><code dir="ltr">setup_streams</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t114 r1c2-t114">
<p>If <code dir="ltr">TRUE</code>, then the procedure performs the necessary actions to maintain the tablespaces directly.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not perform the necessary actions to maintain the tablespaces directly.</p>
<p>Specify <code dir="ltr">FALSE</code> when this procedure is generating a script that you can edit and then run. The procedure raises an error if you specify <code dir="ltr">FALSE</code> and either of the following parameters is <code dir="ltr">NULL</code>:</p>
<ul>
<li>
<p><code dir="ltr">script_name</code></p>
</li>
<li>
<p><code dir="ltr">script_directory_object</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t114" headers="r1c1-t114">
<p><code dir="ltr">script_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t114 r1c2-t114">
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">setup_streams</code> parameter is <code dir="ltr">FALSE</code>, then specify the name of the script generated by this procedure. The script contains all of the statements used to maintain the specified tablespace set. If a file with the specified script name exists in the specified directory for the <code dir="ltr">script_directory_object</code> parameter, then the procedure appends the statements to the existing file.</p>
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">setup_streams</code> parameter is <code dir="ltr">TRUE</code>, then this procedure generates the specified script and performs the actions to maintain the specified tablespace directly.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">setup_streams</code> parameter is <code dir="ltr">TRUE</code>, then this procedure does not generate a script and performs the actions to maintain the specified tablespace set directly.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">setup_streams</code> parameter is <code dir="ltr">FALSE</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t114" headers="r1c1-t114">
<p><code dir="ltr">script_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t114 r1c2-t114">
<p>The directory object for the directory on the local computer system into which the generated script is placed.</p>
<p>If the <code dir="ltr">script_name</code> parameter is <code dir="ltr">NULL</code>, then the procedure ignores this parameter and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">script_name</code> parameter is non-<code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t114" headers="r1c1-t114">
<p><code dir="ltr">dump_file_name</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t114 r1c2-t114">
<p>The name of the Data Pump export dump file that contains the specified tablespace set. If a file with the specified file name exists in the specified directory for the <code dir="ltr">source_directory_object</code> or <code dir="ltr">destination_directory_object</code> parameter, then the procedure raises an error.</p>
<p>If <code dir="ltr">NULL</code>, then the export dump file name is generated by the system. In this case, the export dump file name is <code dir="ltr">expat</code><code dir="ltr"><span class="codeinlineitalic">nn</span></code><code dir="ltr">.dmp</code>, where <code dir="ltr"><span class="codeinlineitalic">nn</span></code> is a sequence number. The sequence number is increased to produce an export dump file with a unique name in the source directory.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t114" headers="r1c1-t114">
<p><code dir="ltr">source_queue_table</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t114 r1c2-t114">
<p>The name of the queue table for the queue at the source database, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_table_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue_table</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t114" headers="r1c1-t114">
<p><code dir="ltr">source_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t114 r1c2-t114">
<p>The name of the queue at the source database that will function as the <code dir="ltr">ANYDATA</code> queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue</code>.</p>
<p>If the schema is not specified, then the queue table owner is the default. The queue owner automatically has privileges to perform all queue operations on the queue.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t114" headers="r1c1-t114">
<p><code dir="ltr">source_queue_user</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t114 r1c2-t114">
<p>The name of the user who requires <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges for the queue at the source database. This user also is configured as a secure queue user of the queue. The queue user cannot grant these privileges to other users because they are not granted with the <code dir="ltr">GRANT</code> option.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure does not grant any privileges. You can also grant queue privileges to the appropriate users using the <code dir="ltr">DBMS_AQADM</code> package.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t114" headers="r1c1-t114">
<p><code dir="ltr">destination_queue_table</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t114 r1c2-t114">
<p>The name of the queue table for the queue at the destination database, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_table_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue_table</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t114" headers="r1c1-t114">
<p><code dir="ltr">destination_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t114 r1c2-t114">
<p>The name of the queue at the destination database that will function as the <code dir="ltr">ANYDATA</code> queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue</code>.</p>
<p>If the schema is not specified, then the queue table owner is the default. The queue owner automatically has privileges to perform all queue operations on the queue.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t114" headers="r1c1-t114">
<p><code dir="ltr">destination_queue_user</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t114 r1c2-t114">
<p>The name of the user who requires <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges for the queue at the destination database. This user also is configured as a secure queue user of the queue. The queue user cannot grant these privileges to other users because they are not granted with the <code dir="ltr">GRANT</code> option.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure does not grant any privileges. You can also grant queue privileges to the appropriate users using the <code dir="ltr">DBMS_AQADM</code> package.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t114" headers="r1c1-t114">
<p><code dir="ltr">capture_name</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t114 r1c2-t114">
<p>The name of each capture process configured to capture changes to the database objects in the tablespace set. Do not specify an owner.</p>
<p>If the specified name matches the name of an existing capture process, then the procedure uses the existing capture process and adds the rules for capturing changes to the database objects in the tablespace set to the positive capture process rule set.</p>
<p><span class="bold">Note:</span> The capture process name cannot be altered after the capture process is created.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t114" headers="r1c1-t114">
<p><code dir="ltr">propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t114 r1c2-t114">
<p>The name of each propagation configured to propagate changes to the database objects in the tablespace set. Do not specify an owner.</p>
<p>If the specified name matches the name of an existing propagation, then the procedure uses the existing propagation and adds the rules for propagating changes to the database objects in the tablespace set to the positive propagation rule set.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for each propagation it creates.</p>
<p><span class="bold">Note:</span> The propagation name cannot be altered after the propagation is created.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t114" headers="r1c1-t114">
<p><code dir="ltr">apply_name</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t114 r1c2-t114">
<p>The name of each apply process configured to apply changes to the database objects in the tablespace set. Do not specify an owner.</p>
<p>If the specified name matches the name of an existing apply process, then the procedure uses the existing apply process and adds the rules for applying changes to the database objects in the tablespace set to the positive apply process rule set.</p>
<p>The specified name must not match the name of an existing messaging client at the destination database.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for each apply process it creates.</p>
<p><span class="bold">Note:</span> The apply process name cannot be altered after the apply process is created.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t114" headers="r1c1-t114">
<p><code dir="ltr">log_file</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t114 r1c2-t114">
<p>The name of the Data Pump export log file. This log file is placed in the same directory as the Data Pump export dump file.</p>
<p>If <code dir="ltr">NULL</code>, then the log file name is the same name as the export dump file name with an extension of&nbsp;<code dir="ltr">.clg</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t114" headers="r1c1-t114">
<p><code dir="ltr">bi_directional</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t114 r1c2-t114">
<p>Specify <code dir="ltr">TRUE</code> to configure bi-directional replication between the current database and the database specified in <code dir="ltr">destination_database</code>. Both databases are configured as source and destination databases, a capture and apply process is configured at both databases, and propagations are configured between the databases to propagate messages.</p>
<p>Specify <code dir="ltr">FALSE</code> to configure one way replication from the current database to the database specified in <code dir="ltr">destination_database</code>. A capture process is configured at the current database, a propagation is configured to propagate messages from the current database to the destination database, and an apply process is configured at the destination database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t114" headers="r1c1-t114">
<p><code dir="ltr">include_ddl</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t114 r1c2-t114">
<p>Specify <code dir="ltr">TRUE</code> to configure an Oracle Streams replication environment that maintains both DML and DDL changes.</p>
<p>Specify <code dir="ltr">FALSE</code> to configure an Oracle Streams replication environment that maintains DML changes only. When this parameter is set to <code dir="ltr">FALSE</code>, DDL changes, such as <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code>, will not be replicated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11501"></a>Usage Notes</p>
<p>The specified set of tablespaces must be self-contained. In this context &#34;self-contained&#34; means that there are no references from inside the set of tablespaces pointing outside of the set of tablespaces. For example, if a partitioned table is partially contained in the set of tablespaces, then the set of tablespaces is not self-contained.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN011" href="../ADMIN/tspaces.htm#ADMIN011"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about self-contained tablespace sets</div>
<p class="subhead2"><a id="ARPLS68778"></a>Additional Documentation for this Procedure</p>
<p>The following documentation applies to the <code dir="ltr">MAINTAIN_TABLESPACES</code> procedure:</p>
<ul>
<li>
<p><a href="#CDEGFEEC">Automatic Platform Conversion</a></p>
</li>
<li>
<p><a class="olink STREP020" href="../STREP/config_simple.htm#STREP020"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a></p>
</li>
</ul>
<p class="subhead2"><a id="ARPLS68779"></a>Requirements for Running this Procedure</p>
<p>Meet the following requirements when run the <code dir="ltr">MAINTAIN_TABLESPACES</code> procedure:</p>
<ul>
<li>
<p>Run the procedure at the source database.</p>
</li>
<li>
<p>Both databases must be open during configuration. If the procedure is generating a script only, then the database specified in the <code dir="ltr">destination_database</code> parameter does not need to be open when you run the procedure, but both databases must be open when you run the generated script.</p>
</li>
<li>
<p>The user who runs this procedure should be granted the <code dir="ltr">DBA</code> role. This user must have the necessary privileges to complete the following actions:</p>
<ul>
<li>
<p>Create <code dir="ltr">ANYDATA</code> queues, capture processes, propagations, and apply processes.</p>
</li>
<li>
<p>Specify supplemental logging</p>
</li>
<li>
<p>Run subprograms in the <code dir="ltr">DBMS_STREAMS_ADM</code> and <code dir="ltr">DBMS_AQADM</code> packages.</p>
</li>
<li>
<p>Access the database specified in the <code dir="ltr">destination_database</code> parameter through a database link. This database link should have the same name as the global name of the destination database.</p>
</li>
<li>
<p>Run subprograms in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package</p>
</li>
<li>
<p>The necessary privileges to run the <code dir="ltr">CLONE_TABLESPACES</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package at the source database. See <a href="d_streams_tbl.htm#i1000997">CLONE_TABLESPACES Procedure</a> for the list of required privileges.</p>
</li>
<li>
<p>The necessary privileges to run the <code dir="ltr">ATTACH_TABLESPACES</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package at the destination database. See <a href="d_streams_tbl.htm#i1000995">ATTACH_TABLESPACES Procedure</a> for the list of required privileges.</p>
</li>
</ul>
<p>To ensure that the user who runs this procedure has the necessary privileges, you should configure an Oracle Streams administrator at each database, and each database link should be should be created in the Oracle Streams administrator&#39;s schema.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then the corresponding user at the destination database must be able to use a database link to access the source database. This database link should have the same name as the global name of the source database.</p>
</li>
<li>
<p>Each specified directory object must be created using the SQL statement <code dir="ltr">CREATE</code> <code dir="ltr">DIRECTORY</code>, and the user who invokes this procedure must have <code dir="ltr">READ</code> and <code dir="ltr">WRITE</code> privilege on each one.</p>
</li>
<li>
<p>The databases configured by this procedure must be Oracle Database 10<span class="italic">g</span> Release 2 or later databases when this procedure is run under the following conditions:</p>
<ul>
<li>
<p>The procedure is run at an Oracle Database 10<span class="italic">g</span> Release 2 or later database.</p>
</li>
<li>
<p>The <code dir="ltr">setup_streams</code> parameter is set to <code dir="ltr">TRUE</code> to configure the Oracle Streams replication environment directly.</p>
</li>
</ul>
</li>
<li>
<p>The databases configured by this procedure must be Oracle Database 10<span class="italic">g</span> Release 1 or later databases when this procedure is run under the following conditions:</p>
<ul>
<li>
<p>The procedure is run at an Oracle Database 10<span class="italic">g</span> Release 2 or later database.</p>
</li>
<li>
<p>The <code dir="ltr">setup_streams</code> parameter is set to <code dir="ltr">FALSE</code> in this procedure, and the replication environment is configured with a generated script.</p>
</li>
</ul>
<p>If the script configures an Oracle Database 10<span class="italic">g</span> Release 1 database, then the script must be modified so that it does not configure features that are available only in Oracle Database 10<span class="italic">g</span> Release 2 or later, such as queue-to-queue propagation.</p>
</li>
<li>
<p>If the procedure is run at an Oracle Database 10<span class="italic">g</span> Release 1 database, then the databases configured by the procedure must be Oracle Database 10<span class="italic">g</span> Release 1 or later databases.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP200" href="../STREP/prep_rep.htm#STREP200"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about configuring an Oracle Streams administrator</div>
</div>
<!-- class="refsubsect" -->
<p class="subhead2"><a id="ARPLS68780"></a>Configuration Progress and Recoverability</p>
<p>When this procedure is run with the <code dir="ltr">setup_streams</code> parameter set to <code dir="ltr">TRUE</code>, metadata about its configuration actions is recorded in the following data dictionary views: <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_PARAMS</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_BLOCKS</code>, and <code dir="ltr">DBA_RECOVERABLE_SCRIPT_ERRORS</code>. If the procedure stops because it encounters an error, then you can use the <code dir="ltr">RECOVER_OPERATION</code> procedure to complete the configuration after you correct the conditions that caused the error.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When this procedure is run with the <code dir="ltr">setup_streams</code> parameter set to <code dir="ltr">FALSE</code>, these views are not populated. Also, the views are not populated when a script generated by this procedure is run.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEIFBGC">&#34;RECOVER_OPERATION Procedure&#34;</a></div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS864" class="refsect2"><a id="CDEFBAEH"></a>
<h3 class="refsect2">MAINTAIN_TTS Procedure<a id="sthref11502"></a><a id="sthref11503"></a><a id="sthref11504"></a></h3>
<p>This procedure clones a set of tablespaces from a source database at a destination database and uses Oracle Streams to maintain these tablespaces at both databases. This procedure can either perform these actions directly, or it can generate a script that performs these actions.</p>
<p>Run this procedure at the capture database. The capture database is the database that captures changes made to the source database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>This procedure automatically excludes database objects that are not supported by Oracle Streams in the tablespaces from the replication environment by adding rules to the negative rule set of each capture and apply process. Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</p>
</li>
<li>
<p>This procedure replaces the deprecated <code dir="ltr">MAINTAIN_TABLESPACES</code> procedure.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEJFABB">&#34;Procedures That Configure an Oracle Streams Environment&#34;</a> for more information about this procedure</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11505"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MAINTAIN_TTS(
   tablespace_names             IN DBMS_STREAMS_TABLESPACE_ADM.TABLESPACE_SET,
   source_directory_object      IN VARCHAR2,
   destination_directory_object IN VARCHAR2,
   source_database              IN VARCHAR2,
   destination_database         IN VARCHAR2,
   perform_actions              IN BOOLEAN   DEFAULT TRUE,
   script_name                  IN VARCHAR2  DEFAULT NULL,
   script_directory_object      IN VARCHAR2  DEFAULT NULL,
   dump_file_name               IN VARCHAR2  DEFAULT NULL,
   capture_name                 IN VARCHAR2  DEFAULT NULL,
   capture_queue_table          IN VARCHAR2  DEFAULT NULL,
   capture_queue_name           IN VARCHAR2  DEFAULT NULL,
   capture_queue_user           IN VARCHAR2  DEFAULT NULL,
   propagation_name             IN VARCHAR2  DEFAULT NULL,
   apply_name                   IN VARCHAR2  DEFAULT NULL,
   apply_queue_table            IN VARCHAR2  DEFAULT NULL,
   apply_queue_name             IN VARCHAR2  DEFAULT NULL,
   apply_queue_user             IN VARCHAR2  DEFAULT NULL,
   log_file                     IN VARCHAR2  DEFAULT NULL,
   bi_directional               IN BOOLEAN   DEFAULT FALSE,
   include_ddl                  IN BOOLEAN   DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11506"></a>Parameters</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEDCHFF">&#34;Common Parameters for the Configuration Procedures&#34;</a> for descriptions of the procedure parameters that are not in <a href="#CDEEEEGB">Table 159-25</a></div>
<div id="ARPLS68781" class="tblformal">
<p class="titleintable"><a id="sthref11507"></a><a id="CDEEEEGB"></a>Table 159-25 MAINTAIN_TTS Procedure Parameters</p>
<table class="cellalignment4330" title="MAINTAIN_TTS Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MAINTAIN_TTS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t122">Parameter</th>
<th class="cellalignment4328" id="r1c2-t122">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t122" headers="r1c1-t122">
<p><code dir="ltr">tablespace_names</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t122 r1c2-t122">
<p>The local tablespace set to be cloned at the destination database and maintained by Oracle Streams.</p>
<p>The tablespaces in the tablespace set must exist at the source database, but these tablespaces must not exist at the destination database.</p>
<p>A directory object must exist for each directory that contains the datafiles for the tablespace set. The user who invokes this procedure must have <code dir="ltr">READ</code> privilege on these directory objects. The directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">See Also:</span> <a href="d_streams_tbl.htm#CDEGDGCI">TABLESPACE_SET Table Type</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t122" headers="r1c1-t122">
<p><code dir="ltr">source_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t122 r1c2-t122">
<p>The directory object for the directory on the computer system running the source database into which the generated Data Pump export dump file and the datafiles that comprise the cloned tablespace set are placed. These files remain in this directory after the procedure completes.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t122" headers="r1c1-t122">
<p><code dir="ltr">destination_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t122 r1c2-t122">
<p>The directory object for the directory on the computer system running the destination database into which the generated Data Pump export dump file and the datafiles that comprise the cloned tablespace set are transferred.</p>
<p>If the source database and destination database run on the same computer system, then the source and destination directories must be different.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle ASM disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t122" headers="r1c1-t122">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t122 r1c2-t122">
<p>The global name of the source database.</p>
<p>If the specified global name is the same as the global name of the local database, then the procedure configures a local capture process for the source database.</p>
<p>If the specified global name is different from the global name of the local database, then the procedure configures a downstream capture process at the local database. In this case, a database link from the local database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t122" headers="r1c1-t122">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t122 r1c2-t122">
<p>The global name of the destination database.</p>
<p>If the local database is not the destination database, then a database link from the local database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t122" headers="r1c1-t122">
<p><code dir="ltr">dump_file_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t122 r1c2-t122">
<p>The name of the Data Pump export dump file that contains the specified tablespace set. If a file with the specified file name exists in the specified directory for the <code dir="ltr">source_directory_object</code> or <code dir="ltr">destination_directory_object</code> parameter, then the procedure raises an error.</p>
<p>If <code dir="ltr">NULL</code>, then the export dump file name is generated by the system. In this case, the export dump file name is <code dir="ltr">expat</code><code dir="ltr"><span class="codeinlineitalic">nn</span></code><code dir="ltr">.dmp</code>, where <code dir="ltr"><span class="codeinlineitalic">nn</span></code> is a sequence number. The sequence number is increased to produce an export dump file with a unique name in the source directory.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t122" headers="r1c1-t122">
<p><code dir="ltr">log_file</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t122 r1c2-t122">
<p>The name of the Data Pump export log file. This log file is placed in the same directory as the Data Pump export dump file.</p>
<p>If <code dir="ltr">NULL</code>, then the log file name is the same name as the export dump file name with an extension of&nbsp;<code dir="ltr">.clg</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11508"></a>Usage Notes</p>
<p>The specified set of tablespaces must be self-contained. In this context &#34;self-contained&#34; means that there are no references from inside the set of tablespaces pointing outside of the set of tablespaces. For example, if a partitioned table is partially contained in the set of tablespaces, then the set of tablespaces is not self-contained.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN011" href="../ADMIN/tspaces.htm#ADMIN011"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about self-contained tablespace sets</div>
<p class="subhead2"><a id="ARPLS68782"></a>Additional Privileges Required by the MAINTAIN_TTS Procedure</p>
<p>In addition to the required privileges described in <a href="#CDEJJJIF">&#34;Requirements for Running These Procedures&#34;</a>, the user who runs the <code dir="ltr">MAINTAIN_TTS</code> procedure must have the necessary privileges to complete the following actions:</p>
<ul>
<li>
<p>Run subprograms in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package</p>
</li>
<li>
<p>The necessary privileges to run the <code dir="ltr">CLONE_TABLESPACES</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package at the source database. See <a href="d_streams_tbl.htm#i1000997">CLONE_TABLESPACES Procedure</a> for the list of required privileges.</p>
</li>
<li>
<p>The necessary privileges to run the <code dir="ltr">ATTACH_TABLESPACES</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACES_ADM</code> package at the destination database. See <a href="d_streams_tbl.htm#i1000995">ATTACH_TABLESPACES Procedure</a> for the list of required privileges.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS866" class="refsect2"><a id="CDECACGG"></a>
<h3 class="refsect2">MERGE_STREAMS Procedure<a id="sthref11509"></a><a id="sthref11510"></a><a id="sthref11511"></a></h3>
<p>This procedure merges a stream that is flowing from one capture process with a stream that is flowing from another capture process.</p>
<p>Typically, this procedure is used to merge two streams that were split using the <code dir="ltr">SPLIT_STREAMS</code> procedure in this package. The <code dir="ltr">SPLIT_STREAMS</code> procedure clones components of the original stream when it splits the streams. Therefore, the information in this section uses the following terminology:</p>
<ul>
<li>
<p>The stream before it was split off has the original queue, original capture process, and original propagation.</p>
</li>
<li>
<p>The stream that was split off by the <code dir="ltr">SPLIT_STREAMS</code> procedure has a cloned queue, cloned capture process, and cloned propagation.</p>
</li>
</ul>
<p>This procedure is called by the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure. The <code dir="ltr">MERGE_STREAMS_JOB</code> procedure determines whether the streams are within a user-specified merge threshold so that the streams can be merged safely. If the streams are not within the merge threshold, then the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure does nothing. Typically, it is best to run the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure instead of running the <code dir="ltr">MERGE_STREAMS</code> procedure directly.</p>
<p>However, you can choose to run the <code dir="ltr">MERGE_STREAMS</code> procedure directly when the following conditions are met:</p>
<ul>
<li>
<p>The problem at the destination of the split stream has been corrected, and the destination queue can accept changes.</p>
</li>
<li>
<p>The cloned capture process used by the split stream is started and is capturing changes.</p>
</li>
<li>
<p>The apply process at the destination database is applying the changes captured by the cloned capture process.</p>
</li>
<li>
<p>The <code dir="ltr">CAPTURE_MESSAGE_CREATE_TIME</code> in the <code dir="ltr">GV$STREAMS_CAPTURE</code> view of the cloned capture process has caught up to, or nearly caught up to, the <code dir="ltr">CAPTURE_MESSAGE_CREATE_TIME</code> of the original capture process. The cloned capture process might never completely catch up to the original capture process. Therefore, you can merge the split stream when the cloned capture process has nearly caught up to the original capture process.</p>
</li>
</ul>
<p>The <code dir="ltr">MERGE_STREAMS</code> procedure performs the following actions:</p>
<ol>
<li>
<p>Stops the cloned capture process.</p>
</li>
<li>
<p>Stops the original capture process.</p>
</li>
<li>
<p>Copies the cloned propagation back to the original propagation. The propagation has the same name as the original propagation after it is copied back.</p>
</li>
<li>
<p>Starts the original capture process from the lower SCN value of these two SCN values:</p>
<ul>
<li>
<p>The acknowledged SCN of the cloned propagation.</p>
</li>
<li>
<p>The lowest acknowledged SCN of the other propagations that propagate changes captured by the original capture process.</p>
</li>
</ul>
<p>When the original capture process is started, it might recapture changes that it already captured, or it might capture changes that were already captured by the cloned capture process. In either case, the relevant apply processes will discard any duplicate changes they receive.</p>
</li>
<li>
<p>Drops the cloned propagation.</p>
</li>
<li>
<p>Drops the cloned capture process.</p>
</li>
<li>
<p>Drops the cloned queue.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABBBGGH">MERGE_STREAMS_JOB Procedure</a></p>
</li>
<li>
<p><a href="#CDEJBFIE">SPLIT_STREAMS Procedure</a></p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11512"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MERGE_STREAMS(
   cloned_propagation_name  IN  VARCHAR2,
   propagation_name         IN  VARCHAR2  DEFAULT NULL,
   queue_name               IN  VARCHAR2  DEFAULT NULL,
   perform_actions          IN  BOOLEAN   DEFAULT TRUE,
   script_name              IN  VARCHAR2  DEFAULT NULL,
   script_directory_object  IN  VARCHAR2  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11513"></a>Parameters</p>
<div id="ARPLS68783" class="tblformal">
<p class="titleintable"><a id="sthref11514"></a><a id="sthref11515"></a>Table 159-26 MERGE_STREAMS Procedure Parameters</p>
<table class="cellalignment4330" title="MERGE_STREAMS Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MERGE_STREAMS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t125">Parameter</th>
<th class="cellalignment4328" id="r1c2-t125">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t125" headers="r1c1-t125">
<p><code dir="ltr">cloned_propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t125 r1c2-t125">
<p>The name of the cloned propagation used by the stream that was split off from the original stream using the <code dir="ltr">SPLIT_STREAMS</code> procedure. The name of the cloned propagation also identifies the cloned queue and capture process used by the cloned propagation.</p>
<p>You must specify an existing propagation name. Do not specify an owner.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t125" headers="r1c1-t125">
<p><code dir="ltr">propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t125 r1c2-t125">
<p>The name of the propagation that is merged back to the original stream.</p>
<p>If <code dir="ltr">NULL</code>, then the name of the original propagation in the original stream is used. Specify <code dir="ltr">NULL</code> only if the streams were split using the <code dir="ltr">SPLIT_STREAMS</code> procedure.</p>
<p>Specify a non-<code dir="ltr">NULL</code> value to use a name that is different from the original propagation name or if you are merging two streams that were not split by the <code dir="ltr">SPLIT_STREAMS</code> procedure. See <a href="#CDEEGACB">&#34;Usage Notes&#34;</a> for more information.</p>
<p>If a non-<code dir="ltr">NULL</code> value is specified, then an error is raised under either of the following conditions:</p>
<ul>
<li>
<p>The queue specified in the <code dir="ltr">queue_name</code> parameter does not exist.</p>
</li>
<li>
<p>The queue specified in the <code dir="ltr">queue_name</code> parameter exists but is not used by a capture process.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t125" headers="r1c1-t125">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t125 r1c2-t125">
<p>The name of the queue that is the source queue for the propagation that is merged back.</p>
<p>If <code dir="ltr">NULL</code>, then the existing, original queue is the source queue for the propagation that is merged back. Specify <code dir="ltr">NULL</code> only if the streams were split using the <code dir="ltr">SPLIT_STREAMS</code> procedure.</p>
<p>Specify a non-<code dir="ltr">NULL</code> value if you are merging two streams that were not split by the <code dir="ltr">SPLIT_STREAMS</code> procedure. Specify the name of the existing queue used by the capture process that will capture changes in the merged stream. See <a href="#CDEEGACB">&#34;Usage Notes&#34;</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t125" headers="r1c1-t125">
<p><code dir="ltr">perform_actions</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t125 r1c2-t125">
<p>If <code dir="ltr">TRUE</code>, then the procedure performs the necessary actions to merge the streams directly.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not perform the necessary actions to merge the streams directly.</p>
<p>Specify <code dir="ltr">FALSE</code> when this procedure is generating a script that you can edit and then run. The procedure raises an error if you specify <code dir="ltr">FALSE</code> and either of the following parameters is <code dir="ltr">NULL</code>:</p>
<ul>
<li>
<p><code dir="ltr">script_name</code></p>
</li>
<li>
<p><code dir="ltr">script_directory_object</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t125" headers="r1c1-t125">
<p><code dir="ltr">script_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t125 r1c2-t125">
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then specify the name of the script generated by this procedure. The script contains all of the statements used to merge the streams. If a file with the specified script name exists in the specified directory for the <code dir="ltr">script_directory_object</code> parameter, then the procedure appends the statements to the existing file.</p>
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then the procedure generates the specified script and performs the actions to split the stream directly.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then the procedure performs the actions to merge the streams directly and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t125" headers="r1c1-t125">
<p><code dir="ltr">script_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t125 r1c2-t125">
<p>The directory object for the directory on the local computer system into which the generated script is placed.</p>
<p>If the <code dir="ltr">script_name</code> parameter is <code dir="ltr">NULL</code>, then the procedure ignores this parameter and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">script_name</code> parameter is non-<code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CDEEGACB"></a>Usage Notes</p>
<p>You can use the <code dir="ltr">MERGE_STREAMS</code> procedure to merge two streams that were not split using the <code dir="ltr">SPLIT_STREAMS</code> procedure. Merging streams in this way can save resources and improve performance when a single database is running two or more capture processes.</p>
<p>The <code dir="ltr">DBA_STREAMS_SPLIT_MERGE</code> view contains information about split and merge operations.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS881" class="refsect2"><a id="BABBBGGH"></a>
<h3 class="refsect2">MERGE_STREAMS_JOB Procedure<a id="sthref11516"></a><a id="sthref11517"></a><a id="sthref11518"></a></h3>
<p>This procedure determines whether the original capture process and the cloned capture process are within the specified merge threshold. If they are within the merge threshold, then this procedure runs the <code dir="ltr">MERGE_STREAMS</code> procedure to merge the two streams.</p>
<p>Typically, this procedure is used to merge two streams that were split using the <code dir="ltr">SPLIT_STREAMS</code> procedure in this package. The <code dir="ltr">SPLIT_STREAMS</code> procedure clones components of the original stream when it splits the streams. Therefore, the information in this section uses the following terminology:</p>
<ul>
<li>
<p>The stream before it was split off has the original queue, original capture process, and original propagation.</p>
</li>
<li>
<p>The stream that was split off by the <code dir="ltr">SPLIT_STREAMS</code> procedure has a cloned queue, cloned capture process, and cloned propagation.</p>
</li>
</ul>
<p>If the <code dir="ltr">auto_merge_threshold</code> parameter was set to a positive number in the <code dir="ltr">SPLIT_STREAMS</code> procedure that split the streams, then a merge job runs the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure automatically according to its schedule. The schedule name is specified for the <code dir="ltr">schedule_name</code> parameter, and the merge job name is specified for the <code dir="ltr">merge_job_name</code> parameter when the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure is run automatically. The merge job and its schedule were created by the <code dir="ltr">SPLIT_STREAMS</code> procedure.</p>
<p>If the <code dir="ltr">auto_merge_threshold</code> parameter was set to <code dir="ltr">NULL</code> or <code dir="ltr">0</code> (zero) in the <code dir="ltr">SPLIT_STREAMS</code> procedure that split the streams, then you can run the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure manually. In this case, it is not run automatically.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CDECACGG">MERGE_STREAMS Procedure</a></p>
</li>
<li>
<p><a href="#CDEJBFIE">SPLIT_STREAMS Procedure</a></p>
</li>
<li>
<p><a class="olink STREP144" href="../STREP/man_gen_rep.htm#STREP144"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for instructions on using the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11519"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.MERGE_STREAMS_JOB(
   cloned_propagation_name        IN VARCHAR2,
   propagation_name               IN VARCHAR2 DEFAULT NULL,
   queue_name                     IN VARCHAR2 DEFAULT NULL,
   merge_threshold                IN NUMBER,
   schedule_name                  IN VARCHAR2 DEFAULT NULL,
   merge_job_name                 IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11520"></a>Parameters</p>
<div id="ARPLS68784" class="tblformal">
<p class="titleintable"><a id="sthref11521"></a><a id="sthref11522"></a>Table 159-27 MERGE_STREAMS_JOB Procedure Parameters</p>
<table class="cellalignment4330" title="MERGE_STREAMS_JOB Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.MERGE_STREAMS_JOB subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t127">Parameter</th>
<th class="cellalignment4328" id="r1c2-t127">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t127" headers="r1c1-t127">
<p><code dir="ltr">cloned_propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t127 r1c2-t127">
<p>The name of the cloned propagation used by the stream that was split off from the original stream using the <code dir="ltr">SPLIT_STREAMS</code> procedure. The name of the cloned propagation also identifies the cloned queue and capture process used by the cloned propagation.</p>
<p>You must specify an existing propagation name. Do not specify an owner.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t127" headers="r1c1-t127">
<p><code dir="ltr">propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t127 r1c2-t127">
<p>The name of the propagation that is merged back to the original stream.</p>
<p>If <code dir="ltr">NULL</code>, then the name of the original propagation in the original stream is used. Specify <code dir="ltr">NULL</code> only if the streams were split using the <code dir="ltr">SPLIT_STREAMS</code> procedure.</p>
<p>Specify a non-<code dir="ltr">NULL</code> value to use a name that is different from the original propagation name or if you are merging two streams that were not split by the <code dir="ltr">SPLIT_STREAMS</code> procedure. See <a href="#BABHFIIF">&#34;Usage Notes&#34;</a> for more information.</p>
<p>If a non-<code dir="ltr">NULL</code> value is specified, then an error is raised under either of the following conditions:</p>
<ul>
<li>
<p>The queue specified in the <code dir="ltr">queue_name</code> parameter does not exist.</p>
</li>
<li>
<p>The queue specified in the <code dir="ltr">queue_name</code> parameter exists but is not used by a capture process.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t127" headers="r1c1-t127">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t127 r1c2-t127">
<p>The name of the queue that is the source queue for the propagation that is merged back.</p>
<p>If <code dir="ltr">NULL</code>, then the existing, original queue is the source queue for the propagation that is merged back. Specify <code dir="ltr">NULL</code> only if the streams were split using the <code dir="ltr">SPLIT_STREAMS</code> procedure.</p>
<p>Specify a non-<code dir="ltr">NULL</code> value if you are merging two streams that were not split by the <code dir="ltr">SPLIT_STREAMS</code> procedure. Specify the name of the existing queue used by the capture process that will capture changes in the merged stream. See <a href="#BABHFIIF">&#34;Usage Notes&#34;</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t127" headers="r1c1-t127">
<p><code dir="ltr">merge_threshold</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t127 r1c2-t127">
<p>The merge threshold in seconds.</p>
<p>The value of the <code dir="ltr">CAPTURE_MESSAGE_CREATE_TIME</code> column for each capture process in the <code dir="ltr">GV$STREAMS_CAPTURE</code> dynamic performance view determines whether the streams are merged.</p>
<p>Specifically, if the difference, in seconds, between the <code dir="ltr">CAPTURE_MESSAGE_CREATE_TIME</code> of the cloned capture process and the original capture process is less than or equal to the value specified for this parameter, then this procedure runs the <code dir="ltr">MERGE_STREAMS</code> procedure to merge the streams. If the difference is greater than the value specified by this parameter, then this procedure does nothing.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t127" headers="r1c1-t127">
<p><code dir="ltr">schedule_name</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t127 r1c2-t127">
<p>The name of the schedule for the merge job.</p>
<p>If <code dir="ltr">NULL</code>, then no schedule name is specified. Typically, you set this parameter to <code dir="ltr">NULL</code> when the <code dir="ltr">auto_merge_threshold</code> parameter was set to <code dir="ltr">NULL</code> or <code dir="ltr">0</code> (zero) in the <code dir="ltr">SPLIT_STREAMS</code> procedure that split the streams.</p>
<p>Specify <code dir="ltr">NULL</code> if you run this procedure manually.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t127" headers="r1c1-t127">
<p><code dir="ltr">merge_job_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t127 r1c2-t127">
<p>The name of the job that merges the streams.</p>
<p>If <code dir="ltr">NULL</code>, then no merge job name is specified. Typically, you set this parameter to <code dir="ltr">NULL</code> when the <code dir="ltr">auto_merge_threshold</code> parameter was set to <code dir="ltr">NULL</code> or <code dir="ltr">0</code> (zero) in the <code dir="ltr">SPLIT_STREAMS</code> procedure that split the streams.</p>
<p>Specify <code dir="ltr">NULL</code> if you run this procedure manually.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABHFIIF"></a>Usage Notes</p>
<p>You can use the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure to merge two streams that were not split using the <code dir="ltr">SPLIT_STREAMS</code> procedure. Merging streams in this way can save resources and improve performance when a single database is running two or more capture processes.</p>
<p>After the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure completes, you can query the <code dir="ltr">DBA_CAPTURE</code> and <code dir="ltr">DBA_PROPAGATION</code> views to determine whether the streams were merged. If the streams were merged, then the cloned capture process and cloned propagation do not appear in these views.</p>
<p>If the streams were merged and the <code dir="ltr">schedule_name</code> and <code dir="ltr">merge_job_name</code> parameters were non-<code dir="ltr">NULL</code>, then the specified schedule and merge job are deleted automatically.</p>
<p>The <code dir="ltr">DBA_STREAMS_SPLIT_MERGE</code> view contains information about split and merge operations.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS830" class="refsect2"><a id="CDEBEJFE"></a>
<h3 class="refsect2">POST_INSTANTIATION_SETUP Procedure<a id="sthref11523"></a><a id="sthref11524"></a><a id="sthref11525"></a></h3>
<p>This procedure performs the actions required after instantiation to configure an Oracle Streams replication environment.</p>
<p>Run this procedure at the capture database. The capture database is the database that captures changes made to the source database.</p>
<p>To complete the Oracle Streams replication configuration, follow these steps:</p>
<ol>
<li>
<p>Run the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure at the source database.</p>
</li>
<li>
<p>Perform any necessary instantiation actions.</p>
</li>
<li>
<p>Run the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure at the source database.</p>
</li>
</ol>
<p>Typically, the Oracle Streams replication environment configured using these steps serves one of the following purposes:</p>
<ul>
<li>
<p>Replicates changes to shared database objects to keep the database objects synchronized at different databases.</p>
</li>
<li>
<p>Replicates changes to database objects during a database maintenance operation, such migrating a database to a different platform. In this case, use the <code dir="ltr">CLEANUP_INSTANTIATION_SETUP</code> procedure to remove the replication environment after the maintenance operation is complete.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Attention:</p>
When the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure is run, the parameter values must match the parameter values specified when the corresponding <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure was run, except for the values of the following parameters: <code dir="ltr">perform_actions</code>, <code dir="ltr">script_name</code>, <code dir="ltr">script_directory_object</code>, and <code dir="ltr">start_processes</code>.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
A capture process never captures changes in the <code dir="ltr">SYS</code>, <code dir="ltr">SYSTEM</code>, or <code dir="ltr">CTXSYS</code> schemas. This procedure does not configure replication for these schemas.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CDEGDHBC">&#34;PRE_INSTANTIATION_SETUP Procedure&#34;</a></p>
</li>
<li>
<p><a href="#CDEIHIIC">&#34;CLEANUP_INSTANTIATION_SETUP Procedure&#34;</a></p>
</li>
<li>
<p><a href="#CDEJFABB">&#34;Procedures That Configure an Oracle Streams Environment&#34;</a> for more information about this procedure</p>
</li>
<li>
<p><a class="olink STREP011" href="../STREP/prep_rep.htm#STREP011"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about setting up an Oracle Streams replication environment</p>
</li>
<li>
<p><a class="olink STRMS165" href="../STRMS/ap_strmnt.htm#STRMS165"><span class="italic">Oracle Streams Concepts and Administration</span></a> for information about completing database maintenance operations</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11526"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.POST_INSTANTIATION_SETUP(
   maintain_mode           IN VARCHAR2,
   tablespace_names        IN DBMS_STREAMS_TABLESPACE_ADM.TABLESPACE_SET,
   source_database         IN VARCHAR2,
   destination_database    IN VARCHAR2,
   perform_actions         IN BOOLEAN         DEFAULT TRUE,
   script_name             IN VARCHAR2        DEFAULT NULL,
   script_directory_object IN VARCHAR2        DEFAULT NULL,
   capture_name            IN VARCHAR2        DEFAULT NULL,
   capture_queue_table     IN VARCHAR2        DEFAULT NULL,
   capture_queue_name      IN VARCHAR2        DEFAULT NULL,
   capture_queue_user      IN VARCHAR2        DEFAULT NULL,
   propagation_name        IN VARCHAR2        DEFAULT NULL,
   apply_name              IN VARCHAR2        DEFAULT NULL,
   apply_queue_table       IN VARCHAR2        DEFAULT NULL,
   apply_queue_name        IN VARCHAR2        DEFAULT NULL,
   apply_queue_user        IN VARCHAR2        DEFAULT NULL,
   bi_directional          IN BOOLEAN         DEFAULT FALSE,
   include_ddl             IN BOOLEAN         DEFAULT FALSE,
   start_processes         IN BOOLEAN         DEFAULT FALSE,
   instantiation_scn       IN NUMBER          DEFAULT NULL,
   exclude_schemas         IN VARCHAR2        DEFAULT NULL,
   exclude_flags           IN BINARY_INTEGER  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11527"></a>Parameters</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEDCHFF">&#34;Common Parameters for the Configuration Procedures&#34;</a> for descriptions of the procedure parameters that are not in <a href="#CDEFHGCE">Table 159-28</a></div>
<div id="ARPLS68785" class="tblformal">
<p class="titleintable"><a id="sthref11528"></a><a id="CDEFHGCE"></a>Table 159-28 POST_INSTANTIATION_SETUP Procedure Parameters</p>
<table class="cellalignment4330" title="POST_INSTANTIATION_SETUP Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.POST_INSTANTIATION_SETUP subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t132">Parameter</th>
<th class="cellalignment4328" id="r1c2-t132">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t132" headers="r1c1-t132">
<p><code dir="ltr">maintain_mode</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t132 r1c2-t132">
<p>Specify one of the following:</p>
<ul>
<li>
<p><code dir="ltr">GLOBAL</code> to maintain the entire database by configuring replication between the local database and the database specified in the <code dir="ltr">destination_database</code> parameter</p>
</li>
<li>
<p><code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code> to maintain a set of tablespaces by configuring replication between the local database and the database specified in the <code dir="ltr">destination_database</code> parameter</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t132" headers="r1c1-t132">
<p><code dir="ltr">tablespace_names</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t132 r1c2-t132">
<p>If <code dir="ltr">maintain_mode</code> is set to <code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code>, then specify the local tablespace set to be cloned at the destination database and maintained by Oracle Streams.</p>
<p>The tablespaces in the tablespace set must exist at the source database, but these tablespaces must not exist at the destination database.</p>
<p>Also, a directory object must exist for each directory that contains the datafiles for the tablespace set. The user who invokes this procedure must have <code dir="ltr">READ</code> privilege on these directory objects.</p>
<p>If <code dir="ltr">maintain_mode</code> is set to <code dir="ltr">GLOBAL</code>, then specify an empty tablespace set.</p>
<p>Regardless of the <code dir="ltr">maintain_mode</code> setting, an error is raised if the <code dir="ltr">tablespace_names</code> parameter is not set or is set to <code dir="ltr">NULL</code>.</p>
<p><span class="bold">See Also:</span> <a href="d_streams_tbl.htm#CDEGDGCI">TABLESPACE_SET Table Type</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t132" headers="r1c1-t132">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t132 r1c2-t132">
<p>The global name of the source database.</p>
<p>If the specified global name is the same as the global name of the local database, then the procedure configures a local capture process for the source database.</p>
<p>If the specified global name is different from the global name of the local database, then the procedure configures a downstream capture process at the local database. In this case, a database link from the local database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t132" headers="r1c1-t132">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t132 r1c2-t132">
<p>The global name of the destination database.</p>
<p>If the local database is not the destination database, then a database link from the local database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t132" headers="r1c1-t132">
<p><code dir="ltr">start_processes</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t132 r1c2-t132">
<p>If <code dir="ltr">TRUE</code>, then the procedure starts each capture process and apply process. Any disabled capture or apply process created by the <code dir="ltr">PRE_INSTANTITAION_SETUP</code> procedure also is started.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not start any capture processes or apply processes.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t132" headers="r1c1-t132">
<p><code dir="ltr">instantiation_scn</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t132 r1c2-t132">
<p>Specify the instantiation SCN for the database objects at the destination database if the instantiation SCN was not set during instantiation. The instantiation SCN is not set automatically during RMAN instantiations, but the correct instantiation SCN value should be determined during an RMAN instantiation. See the <a class="olink STREP138" href="../STREP/config_simple.htm#STREP138"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information.</p>
<p>Specify <code dir="ltr">NULL</code> if the instantiation SCN was set for the database objects at the destination database during instantiation. The instantiation SCN can be set during export/import instantiations.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t132" headers="r1c1-t132">
<p><code dir="ltr">exclude_schemas</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t132 r1c2-t132">
<p>A comma-delimited list of schemas to exclude from the Oracle Streams configuration. Schema rules are added to the negative rule sets of each capture process to exclude these schemas.</p>
<p>Specify an asterisk (<code dir="ltr">*</code>) to exclude all of the schemas in the database.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure does not exclude any schemas in the database.</p>
<p>This parameter is valid only if the <code dir="ltr">MAINTAIN_MODE</code> parameter is set to <code dir="ltr">GLOBAL</code>. If the <code dir="ltr">MAINTAIN_MODE</code> parameter is set to <code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code>, then the procedure ignores this parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t132" headers="r1c1-t132">
<p><code dir="ltr">exclude_flags</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t132 r1c2-t132">
<p>Specify what is excluded from the replication configuration in the schemas specified by the <code dir="ltr">exclude_schemas</code> parameter. This parameter works the same way in the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures. See <a href="#CDEBIAGA">&#34;Usage Notes&#34;</a> for the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure for more information.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11529"></a>Usage Notes</p>
<p>The following sections contain usage notes for this procedure.</p>
<p class="subhead2"><a id="ARPLS68786"></a>Self-Contained Tablespace Sets</p>
<p>If the <code dir="ltr">maintain_mode</code> parameter is set to <code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code>, then the specified set of tablespaces must be self-contained. In this context &#34;self-contained&#34; means that there are no references from inside the set of tablespaces pointing outside of the set of tablespaces. For example, if a partitioned table is partially contained in the set of tablespaces, then the set of tablespaces is not self-contained.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN011" href="../ADMIN/tspaces.htm#ADMIN011"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about self-contained tablespace sets</div>
<p class="subhead2"><a id="ARPLS68787"></a>Destination Database Renamed During RMAN Database Instantiation</p>
<p>If the <code dir="ltr">maintain_mode</code> parameter is set to <code dir="ltr">GLOBAL</code>, then database instantiation is required before running the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure. If the RMAN <code dir="ltr">DUPLICATE</code> or RMAN <code dir="ltr">CONVERT</code> <code dir="ltr">DATABASE</code> command is used for database instantiation, then the global name of the destination database can be renamed to the global name of the source database during instantiation. In this case, before you run the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure, complete the following steps:</p>
<ol>
<li>
<p>Rename the global name of the destination database back to the name specified in the <code dir="ltr">destination_database</code> parameter.</p>
</li>
<li>
<p>At the destination database, drop and re-create any loopback database links that existed on the source and were cloned on the destination database. For example, suppose the source database <code dir="ltr">dbs1.net</code> has a database link that refers to itself. Suppose the destination database is <code dir="ltr">dbs2.net</code>. At the destination database, drop and re-create this database link as a loopback database link that refers to itself (<code dir="ltr">dbs2.net</code>).</p>
</li>
<li>
<p>At the destination database, drop any database links that were cloned from the source database and are from the source database to the destination database. For example, if the source database is <code dir="ltr">dbs1.net</code> and the destination database is <code dir="ltr">dbs2.net</code>, then drop any database links on the destination database that are from <code dir="ltr">dbs1.net</code> to <code dir="ltr">dbs2.net</code>.</p>
</li>
<li>
<p>Create a database link from the destination database to the source database with the same name as the global name of the source database. The database link must be accessible to the Oracle Streams administrator at the destination database.</p>
<p>This database link is required because the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure runs the <code dir="ltr">SET_GLOBAL_INSTANTIATION_SCN</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package at the destination database, and the <code dir="ltr">SET_GLOBAL_INSTANTIATION_SCN</code> procedure requires the database link. The instantiation SCN is set to the value specified in the <code dir="ltr">instantiation_scn</code> parameter of the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
When the RMAN <code dir="ltr">DUPLICATE</code> or <code dir="ltr">CONVERT</code> <code dir="ltr">DATABASE</code> command is used for database instantiation, the destination database cannot be the capture database.</div>
<p class="subhead2"><a id="ARPLS68788"></a>Oracle Streams Components Removed From the Destination Database</p>
<p>If the <code dir="ltr">maintain_mode</code> parameter is set to <code dir="ltr">GLOBAL</code>, then database instantiation is required before running the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure. During database instantiation, Oracle Streams components created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure, such as Oracle Streams clients and queues, can be copied from the source database to the destination database. The <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure removes the Stream components created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure from the destination database.</p>
<p>In some cases, rule sets and rules created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure might not be removed from the destination database. The <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure does not associate these rule sets and rules with any Stream clients in the destination database. Optionally, you can remove these rule sets and rules from the destination database after the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure, or the script generated by the procedure, completes.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure only removes Oracle Streams components that were created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure. It does not remove Oracle Streams components that were created in a different way.</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS831" class="refsect2"><a id="CDEGDHBC"></a>
<h3 class="refsect2">PRE_INSTANTIATION_SETUP Procedure<a id="sthref11530"></a><a id="sthref11531"></a><a id="sthref11532"></a></h3>
<p>This procedure performs the actions required before instantiation to configure an Oracle Streams replication environment.</p>
<p>Run this procedure at the capture database. The capture database is the database that captures changes made to the source database.</p>
<p>To complete the Oracle Streams replication configuration, follow these steps:</p>
<ol>
<li>
<p>Run the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure at the database that will be the source database in the Stream replication environment.</p>
</li>
<li>
<p>Perform any necessary instantiation actions.</p>
</li>
<li>
<p>Run the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure at the source database.</p>
</li>
</ol>
<p>Typically, the Oracle Streams replication environment configured using these steps serves one of the following purposes:</p>
<ul>
<li>
<p>Replicates changes to shared database objects to keep the database objects synchronized at different databases.</p>
</li>
<li>
<p>Replicates changes to database objects during a database maintenance operation, such migrating a database to a different platform. In this case, use the <code dir="ltr">CLEANUP_INSTANTIATION_SETUP</code> procedure to remove the replication environment after the maintenance operation is complete.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>A capture process never captures changes in the <code dir="ltr">SYS</code>, <code dir="ltr">SYSTEM</code>, or <code dir="ltr">CTXSYS</code> schemas. This procedure does not configure replication for these schemas.</p>
</li>
<li>
<p>When the RMAN <code dir="ltr">DUPLICATE</code> or <code dir="ltr">CONVERT</code> <code dir="ltr">DATABASE</code> command is used for database instantiation, the destination database cannot be the capture database.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CDEBEJFE">&#34;POST_INSTANTIATION_SETUP Procedure&#34;</a></p>
</li>
<li>
<p><a href="#CDEIHIIC">&#34;CLEANUP_INSTANTIATION_SETUP Procedure&#34;</a></p>
</li>
<li>
<p><a href="#CDEJFABB">&#34;Procedures That Configure an Oracle Streams Environment&#34;</a> for more information about this procedure</p>
</li>
<li>
<p><a class="olink STREP011" href="../STREP/prep_rep.htm#STREP011"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about setting up an Oracle Streams replication environment</p>
</li>
<li>
<p><a class="olink STRMS165" href="../STRMS/ap_strmnt.htm#STRMS165"><span class="italic">Oracle Streams Concepts and Administration</span></a> for information about completing database maintenance operations</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11533"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.PRE_INSTANTIATION_SETUP(
   maintain_mode           IN VARCHAR2,
   tablespace_names        IN DBMS_STREAMS_TABLESPACE_ADM.TABLESPACE_SET,
   source_database         IN VARCHAR2,
   destination_database    IN VARCHAR2,
   perform_actions         IN BOOLEAN         DEFAULT TRUE,
   script_name             IN VARCHAR2        DEFAULT NULL,
   script_directory_object IN VARCHAR2        DEFAULT NULL,
   capture_name            IN VARCHAR2        DEFAULT NULL,
   capture_queue_table     IN VARCHAR2        DEFAULT NULL,
   capture_queue_name      IN VARCHAR2        DEFAULT NULL,
   capture_queue_user      IN VARCHAR2        DEFAULT NULL,
   propagation_name        IN VARCHAR2        DEFAULT NULL,
   apply_name              IN VARCHAR2        DEFAULT NULL,
   apply_queue_table       IN VARCHAR2        DEFAULT NULL,
   apply_queue_name        IN VARCHAR2        DEFAULT NULL,
   apply_queue_user        IN VARCHAR2        DEFAULT NULL,
   bi_directional          IN BOOLEAN         DEFAULT FALSE,
   include_ddl             IN BOOLEAN         DEFAULT FALSE,
   start_processes         IN BOOLEAN         DEFAULT FALSE,
   exclude_schemas         IN VARCHAR2        DEFAULT NULL,
   exclude_flags           IN BINARY_INTEGER  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11534"></a>Parameters</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEDCHFF">&#34;Common Parameters for the Configuration Procedures&#34;</a> for descriptions of the procedure parameters that are not in <a href="#CDEJGIHJ">Table 159-29</a></div>
<div id="ARPLS68789" class="tblformal">
<p class="titleintable"><a id="sthref11535"></a><a id="CDEJGIHJ"></a>Table 159-29 PRE_INSTANTIATION_SETUP Procedure Parameters</p>
<table class="cellalignment4330" title="PRE_INSTANTIATION_SETUP Procedure Parameters" summary="Parameters of DBMS_STREAMS_ADM.PRE_INSTANTIATION_SETUP subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t139">Parameter</th>
<th class="cellalignment4328" id="r1c2-t139">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t139" headers="r1c1-t139">
<p><code dir="ltr">maintain_mode</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t139 r1c2-t139">
<p>Specify one of the following:</p>
<ul>
<li>
<p><code dir="ltr">GLOBAL</code> to maintain the entire database by configuring replication between the local database and the database specified in the <code dir="ltr">destination_database</code> parameter</p>
</li>
<li>
<p><code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code> to maintain a set of tablespaces by configuring replication between the local database and the database specified in the <code dir="ltr">destination_database</code> parameter</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t139" headers="r1c1-t139">
<p><code dir="ltr">tablespace_names</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t139 r1c2-t139">
<p>If <code dir="ltr">maintain_mode</code> is set to <code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code>, then specify the local tablespace set to be cloned at the destination database and maintained by Oracle Streams.</p>
<p>The tablespaces in the tablespace set must exist at the source database, but these tablespaces must not exist at the destination database.</p>
<p>Also, a directory object must exist for each directory that contains the datafiles for the tablespace set. The user who invokes this procedure must have <code dir="ltr">READ</code> privilege on these directory objects.</p>
<p>If <code dir="ltr">maintain_mode</code> is set to <code dir="ltr">GLOBAL</code>, then specify an empty tablespace set.</p>
<p>Regardless of the <code dir="ltr">maintain_mode</code> setting, an error is raised if the <code dir="ltr">tablespace_names</code> parameter is not set or is set to <code dir="ltr">NULL</code>.</p>
<p><span class="bold">See Also:</span> <a href="d_streams_tbl.htm#CDEGDGCI">TABLESPACE_SET Table Type</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t139" headers="r1c1-t139">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t139 r1c2-t139">
<p>The global name of the source database.</p>
<p>If the specified global name is the same as the global name of the local database, then the procedure configures a local capture process for the source database.</p>
<p>If the specified global name is different from the global name of the local database, then the procedure configures a downstream capture process at the local database. In this case, a database link from the local database to the source database with the same name as the global name of the source database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the global name of the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t139" headers="r1c1-t139">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t139 r1c2-t139">
<p>The global name of the destination database.</p>
<p>If the local database is not the destination database, then a database link from the local database to the destination database with the same name as the global name of the destination database must exist and must be accessible to the user who runs the procedure.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t139" headers="r1c1-t139">
<p><code dir="ltr">capture_queue_table</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t139 r1c2-t139">
<p>The name of the queue table for each queue used by a capture process, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_table_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue_table</code>. If the schema is not specified, then the current user is the default.</p>
<p>If <code dir="ltr">NULL</code>, then the system generates a name for the queue table of each queue used by a capture process, and the current user is the owner of each queue table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t139" headers="r1c1-t139">
<p><code dir="ltr">start_processes</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t139 r1c2-t139">
<p>If <code dir="ltr">TRUE</code>, then the procedure starts each capture process and apply process.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not start any capture processes or apply processes.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t139" headers="r1c1-t139">
<p><code dir="ltr">exclude_schemas</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t139 r1c2-t139">
<p>A comma-delimited list of schemas to exclude from the Oracle Streams configuration. Schema rules are added to the negative rule sets of each capture process to exclude these schemas.</p>
<p>Specify an asterisk (<code dir="ltr">*</code>) to exclude all of the schemas in the database.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure does not exclude any schemas in the database.</p>
<p>This parameter is valid only if the <code dir="ltr">MAINTAIN_MODE</code> parameter is set to <code dir="ltr">GLOBAL</code>. If the <code dir="ltr">MAINTAIN_MODE</code> parameter is set to <code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code>, then the procedure ignores this parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t139" headers="r1c1-t139">
<p><code dir="ltr">exclude_flags</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t139 r1c2-t139">
<p>Specify what to exclude from the replication configuration in the schemas specified by the <code dir="ltr">exclude_schemas</code> parameter. See <a href="#CDEBIAGA">&#34;Usage Notes&#34;</a> for more information.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CDEBIAGA"></a>Usage Notes</p>
<p>The following sections contain usage notes for this procedure.</p>
<p class="subhead2"><a id="ARPLS68790"></a>Self-Contained Tablespace Sets</p>
<p>If the <code dir="ltr">maintain_mode</code> parameter is set to <code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code>, then the specified set of tablespaces must be self-contained. In this context &#34;self-contained&#34; means that there are no references from inside the set of tablespaces pointing outside of the set of tablespaces. For example, if a partitioned table is partially contained in the set of tablespaces, then the set of tablespaces is not self-contained.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN011" href="../ADMIN/tspaces.htm#ADMIN011"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about self-contained tablespace sets</div>
<p class="subhead2"><a id="ARPLS68791"></a>The exclude_flags Parameter</p>
<p>Specify one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.EXCLUDE_FLAGS_FULL</code> to exclude changes to the schemas and all of the database objects in the schemas</p>
</li>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.EXCLUDE_FLAGS_UNSUPPORTED</code> to exclude changes to the database objects that are not supported by Oracle Streams in the schemas</p>
</li>
</ul>
<p>If both of these values are specified, then the procedure raises an error.</p>
<p>In addition to <code dir="ltr">DBMS_STREAMS_ADM.EXCLUDE_FLAGS_FULL</code> or <code dir="ltr">DBMS_STREAMS_ADM.EXCLUDE_FLAGS_UNSUPPORTED</code>, specify one or both of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.EXCLUDE_FLAGS_DML</code> to exclude data manipulation language (DML) changes made to the excluded database objects</p>
</li>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.EXCLUDE_FLAGS_FULL</code> to exclude data definition language (DDL) changes made to the excluded database objects</p>
</li>
</ul>
<p>Use the plus sign (<code dir="ltr">+</code>) to specify more than one of these values. For example, to maintain DML changes to the tables in a schemas specified by the <code dir="ltr">exclude_schemas</code> parameter but exclude DDL changes to these schemas and the database objects in these schemas, specify the following for this parameter:</p>
<pre dir="ltr">DBMS_STREAMS_ADM.EXCLUDE_FLAGS_FULL + 
DBMS_STREAMS_ADM.EXCLUDE_FLAGS_DDL
</pre>
<p>To exclude DML and DDL changes made to unsupported database objects in the schemas specified by the <code dir="ltr">exclude_schemas</code> parameter, specify the following for this parameter:</p>
<pre dir="ltr">DBMS_STREAMS_ADM.EXCLUDE_FLAGS_UNSUPPORTED + 
DBMS_STREAMS_ADM.EXCLUDE_FLAGS_DML +
DBMS_STREAMS_ADM.EXCLUDE_FLAGS_DDL
</pre>
<p>Rules for the excluded database objects are added to the negative rule set of each capture process. Therefore, changes to the excluded database objects will not be captured and replicated.</p>
<p>This parameter is valid only if the <code dir="ltr">maintain_mode</code> parameter is set to <code dir="ltr">GLOBAL</code> and the <code dir="ltr">exclude_schemas</code> parameter is set to a non-<code dir="ltr">NULL</code> value. If the <code dir="ltr">maintain_mode</code> parameter is set to <code dir="ltr">GLOBAL</code> and the <code dir="ltr">exclude_schemas</code> parameter is set to a <code dir="ltr">NULL</code>, then the procedure ignores this parameter. If the <code dir="ltr">maintain_mode</code> parameter is set to <code dir="ltr">TRANSPORTABLE</code> <code dir="ltr">TABLESPACES</code>, then this the procedure ignores this parameter and excludes any database objects in the specified tablespace set that are not supported by Oracle Streams from the Oracle Streams configuration automatically.</p>
<p>Also, if schemas are specified in the <code dir="ltr">exclude_schemas</code> parameter, but the <code dir="ltr">exclude_flags</code> parameter is set to <code dir="ltr">NULL</code>, then the procedure does not add any rules to the negative rule set of any capture process, and the procedure includes the schemas specified in the <code dir="ltr">exclude_schemas</code> parameter in the replication environment.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS505" class="refsect2"><a id="i997810"></a>
<h3 class="refsect2">PURGE_SOURCE_CATALOG Procedure<a id="sthref11536"></a><a id="sthref11537"></a><a id="sthref11538"></a></h3>
<p>This procedure removes all Oracle Streams data dictionary information at the local database for the specified object. You can use this procedure to remove Oracle Streams metadata that is not needed currently and will not be needed in the future.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11539"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.PURGE_SOURCE_CATALOG(
   source_database     IN  VARCHAR2,
   source_object_name  IN  VARCHAR2,
   source_object_type  IN  VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11540"></a>Parameters</p>
<div id="ARPLS68792" class="tblformal">
<p class="titleintable"><a id="sthref11541"></a><a id="sthref11542"></a>Table 159-30 PURGE_SOURCE_CATALOG Procedure Parameters</p>
<table class="cellalignment4330" title="PURGE_SOURCE_CATALOG Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.PURGE_SOURCE_CATALOG subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t141">Parameter</th>
<th class="cellalignment4328" id="r1c2-t141">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t141" headers="r1c1-t141">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t141 r1c2-t141">
<p>The global name of the source database containing the object.</p>
<p>If you do not include the domain name, then the procedure appends it to the database name automatically. For example, if you specify <code dir="ltr">DBS1</code> and the domain is <code dir="ltr">.NET</code>, then the procedure specifies <code dir="ltr">DBS1.NET</code> automatically.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t141" headers="r1c1-t141">
<p><code dir="ltr">source_object_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t141 r1c2-t141">
<p>The name of the object specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t141" headers="r1c1-t141">
<p><code dir="ltr">source_object_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t141 r1c2-t141">
<p>Type of the object. Currently, <code dir="ltr">TABLE</code> is the only possible object type.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11543"></a>Usage Notes</p>
<p>The global name of the source database containing the object must be specified for the <code dir="ltr">source_database</code> parameter. If the current database is not the source database for the object, then the procedure removes data dictionary information about the object from the current database, not the source database.</p>
<p>For example, suppose changes to the <code dir="ltr">hr.employees</code> table at the <code dir="ltr">dbs1.net</code> source database are being applied to the <code dir="ltr">hr.employees</code> table at the <code dir="ltr">dbs2.net</code> destination database. Also, suppose <code dir="ltr">hr.employees</code> at <code dir="ltr">dbs2.net</code> is not a source at all. In this case, specifying <code dir="ltr">dbs2.net</code> as the <code dir="ltr">source_database</code> for this table results in an error. However, specifying <code dir="ltr">dbs1.net</code> as the <code dir="ltr">source_database</code> for this table while running the <code dir="ltr">PURGE_SOURCE_CATALOG</code> procedure at the <code dir="ltr">dbs2.net</code> database removes data dictionary information about the table at <code dir="ltr">dbs2.net</code>.</p>
<p>Do not run this procedure at a database if either of the following conditions are true:</p>
<ul>
<li>
<p>Logical change records (LCRs) captured by the capture process for the object are or might be applied locally without reinstantiating the object.</p>
</li>
<li>
<p>LCRs captured by the capture process for the object are or might be forwarded by the database without reinstantiating the object.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
These conditions do not apply to LCRs that were not created by the capture process. That is, these conditions do not apply to user-created LCRs.</div>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS865" class="refsect2"><a id="CDEIFBGC"></a>
<h3 class="refsect2">RECOVER_OPERATION Procedure</h3>
<p>This procedure provides options for operations that stopped because they encountered an errors. These operations include split and merge operations, Oracle Streams replication configuration operations, and Oracle Streams change table configuration operations. This procedure either rolls forward the operation, rolls back the operation, or purges all of the metadata about the operation.</p>
<p>This procedure only can perform these actions for the following operations:</p>
<ul>
<li>
<p>Split and merge operations using:</p>
<ul>
<li>
<p>The <code dir="ltr">split_threshold</code> and <code dir="ltr">merge_threshold</code> capture process parameters set to non-<code dir="ltr">NULL</code> values to enable automatic split and merge</p>
</li>
<li>
<p><a href="#CDEJBFIE">SPLIT_STREAMS Procedure</a></p>
</li>
<li>
<p><a href="#BABBBGGH">MERGE_STREAMS_JOB Procedure</a></p>
</li>
</ul>
</li>
<li>
<p>Change table configuration operations performed by the <a href="#CACBEIJI">MAINTAIN_CHANGE_TABLE Procedure</a></p>
</li>
<li>
<p>Replication configuration operations performed by the following procedures:</p>
<ul>
<li>
<p><a href="#CDEGDDEG">MAINTAIN_GLOBAL Procedure</a></p>
</li>
<li>
<p><a href="#CDEDAJEB">MAINTAIN_SCHEMAS Procedure</a></p>
</li>
<li>
<p><a href="#i1029845">MAINTAIN_SIMPLE_TABLESPACE Procedure</a></p>
</li>
<li>
<p><a href="#CDEIFFHH">MAINTAIN_SIMPLE_TTS Procedure</a></p>
</li>
<li>
<p><a href="#CDEDADAI">MAINTAIN_TABLES Procedure</a></p>
</li>
<li>
<p><a href="#i1016534">MAINTAIN_TABLESPACES Procedure</a></p>
</li>
<li>
<p><a href="#CDEFBAEH">MAINTAIN_TTS Procedure</a></p>
</li>
<li>
<p><a href="#CDEGDHBC">PRE_INSTANTIATION_SETUP Procedure</a></p>
</li>
<li>
<p><a href="#CDEBEJFE">POST_INSTANTIATION_SETUP Procedure</a></p>
</li>
</ul>
</li>
</ul>
<p>Information about the operation is stored in the following data dictionary views when the operation is in process:</p>
<ul>
<li>
<p><a class="olink REFRN23545" href="../REFRN/GUID-AE694110-3EC9-49E7-BDA9-EFAF283C7D77.htm#REFRN23545"><code dir="ltr">DBA_RECOVERABLE_SCRIPT</code></a></p>
</li>
<li>
<p><a class="olink REFRN23548" href="../REFRN/GUID-A9D0BD9D-44BD-4CC6-966A-1C9740DAD037.htm#REFRN23548"><code dir="ltr">DBA_RECOVERABLE_SCRIPT_PARAMS</code></a></p>
</li>
<li>
<p><a class="olink REFRN23546" href="../REFRN/GUID-0BC6927B-C58D-4252-BA83-43C55FA8A19E.htm#REFRN23546"><code dir="ltr">DBA_RECOVERABLE_SCRIPT_BLOCKS</code></a></p>
</li>
<li>
<p><a class="olink REFRN23547" href="../REFRN/GUID-9CAB8ECE-B0BA-4E13-8242-8A31AE2336B5.htm#REFRN23547"><code dir="ltr">DBA_RECOVERABLE_SCRIPT_ERRORS</code></a></p>
</li>
</ul>
<p>For split and merge operations, the data dictionary views are populated at the database that contains the capture process. For the configuration operations, the data dictionary views are populated at the database where the replication configuration procedure was run.</p>
<p>When the operation completes successfully, metadata about the operation is moved from the <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code> view to the <a class="olink REFRN23755" href="../REFRN/GUID-F0381E5D-7C94-4770-A5B2-C1630025F348.htm#REFRN23755"><code dir="ltr">DBA_RECOVERABLE_SCRIPT_HIST</code></a> view. The other views, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_PARAMS</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_BLOCKS</code>, and <code dir="ltr">DBA_RECOVERABLE_SCRIPT_ERRORS</code>, retain information about the operation until it is purged automatically after 30 days.</p>
<p>When one of these operations encounters an error and stops, metadata about the operation remains in these views. In this case, you can either roll forward, roll back, or purge the metadata about the operation using the <code dir="ltr">RECOVER_OPERATION</code> procedure. If you choose to roll forward the operation, then correct conditions that caused the errors reported in <code dir="ltr">DBA_RECOVERABLE_SCRIPT_ERRORS</code> before proceeding.</p>
<p>For split and merge operations, run the <code dir="ltr">RECOVER_OPERATION</code> procedure at the database that contains the capture process. For the configuration operations, run the <code dir="ltr">RECOVER_OPERATION</code> procedure at the database where the replication configuration procedure was run.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Regarding the configuration operations, the procedure must configure the environment directly (<code dir="ltr">perform_actions</code> <code dir="ltr">=&gt;</code> <code dir="ltr">TRUE</code>), not by generating a script, for information about the operation to be stored in the recoverable views and for the operation to be managed by the <code dir="ltr">RECOVER_OPERATION</code> procedure.</p>
</li>
<li>
<p>To run the <code dir="ltr">RECOVER_OPERATION</code> procedure, both databases must be Oracle Database 10<span class="italic">g</span> Release 2 or later databases.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP149" href="../STREP/man_gen_rep.htm#STREP149"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11544"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.RECOVER_OPERATION(
   script_id       IN  RAW,
   operation_mode  IN  VARCHAR2  DEFAULT &#39;FORWARD&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11545"></a>Parameters</p>
<div id="ARPLS68793" class="tblformal">
<p class="titleintable"><a id="sthref11546"></a><a id="sthref11547"></a>Table 159-31 RECOVER_OPERATION Procedure Parameters</p>
<table class="cellalignment4330" title="RECOVER_OPERATION Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.RECOVER_OPERATION subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t145">Parameter</th>
<th class="cellalignment4328" id="r1c2-t145">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t145" headers="r1c1-t145">
<p><code dir="ltr">script_id</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t145 r1c2-t145">
<p>The operation id of the operation that is being rolled forward, rolled back, or purged. Query the <code dir="ltr">SCRIPT_ID</code> column of the <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code> data dictionary view to determine the operation id.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t145" headers="r1c1-t145">
<p><code dir="ltr">operation_mode</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t145 r1c2-t145">
<p>If <code dir="ltr">FORWARD</code>, then the procedure rolls forward the operation. Specify <code dir="ltr">FORWARD</code> to try to complete the operation.</p>
<p>If <code dir="ltr">ROLLBACK</code>, then the procedure rolls back all of the actions performed in the operation. If the rollback is successful, then this option also moves the metadata about the operation from the <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code> view to the <code dir="ltr">DBA_RECOVERABLE_SCRIPT_HIST</code> view. The other views retain information about the operation for 30 days.</p>
<p>If <code dir="ltr">PURGE</code>, then the procedure moves the metadata about the operation from the <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code> view to the <code dir="ltr">DBA_RECOVERABLE_SCRIPT_HIST</code> view without rolling the operation back. The other views retain information about the operation for 30 days.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS513" class="refsect2"><a id="i1008918"></a>
<h3 class="refsect2">REMOVE_QUEUE Procedure<a id="sthref11548"></a><a id="sthref11549"></a><a id="sthref11550"></a><a id="sthref11551"></a></h3>
<p>This procedure removes the specified <code dir="ltr">ANYDATA</code> queue.</p>
<p>Specifically, this procedure performs the following actions:</p>
<ol>
<li>
<p>Waits until all current enqueue and dequeue transactions commit.</p>
</li>
<li>
<p>Stops the queue, which means that no further enqueues into the queue or dequeues from the queue are allowed.</p>
</li>
<li>
<p>Drops the queue.</p>
</li>
<li>
<p>If the <code dir="ltr">drop_unused_queue_table</code> parameter is set to <code dir="ltr">TRUE</code>, then drops the queue table if it is empty and no other queues are using it.</p>
</li>
<li>
<p>If the <code dir="ltr">cascade</code> parameter is set to <code dir="ltr">TRUE</code>, then drops all of the Oracle Streams clients that are using the queue.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The specified queue must be a <code dir="ltr">ANYDATA</code> queue.</div>
</li>
</ol>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11552"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.REMOVE_QUEUE(
   queue_name               IN  VARCHAR2,
   cascade                  IN  BOOLEAN  DEFAULT FALSE,
   drop_unused_queue_table  IN  BOOLEAN  DEFAULT TRUE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11553"></a>Parameters</p>
<div id="ARPLS68794" class="tblformal">
<p class="titleintable"><a id="sthref11554"></a><a id="sthref11555"></a>Table 159-32 REMOVE_QUEUE Procedure Parameters</p>
<table class="cellalignment4330" title="REMOVE_QUEUE Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.REMOVE_QUEUE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t147">Parameter</th>
<th class="cellalignment4328" id="r1c2-t147">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t147" headers="r1c1-t147">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t147 r1c2-t147">
<p>The name of the queue to remove, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t147" headers="r1c1-t147">
<p><code dir="ltr">cascade</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t147 r1c2-t147">
<p>If <code dir="ltr">TRUE</code>, then the procedure drops any Oracle Streams clients that use the queue.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure raises an error if there are any Oracle Streams clients that use the queue. Before you run this procedure with the <code dir="ltr">cascade</code> parameter set to <code dir="ltr">FALSE</code>, make sure no Oracle Streams clients are using the queue currently.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t147" headers="r1c1-t147">
<p><code dir="ltr">drop_unused_queue_table</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t147 r1c2-t147">
<p>If <code dir="ltr">TRUE</code> and the queue table for the queue is empty, then the procedure drops the queue table. The queue table is not dropped if it contains any messages or if it is used by another queue.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not drop the queue table.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS506" class="refsect2"><a id="CDEFCADF"></a>
<h3 class="refsect2">REMOVE_RULE Procedure<a id="sthref11556"></a><a id="sthref11557"></a><a id="sthref11558"></a><a id="sthref11559"></a><a id="sthref11560"></a></h3>
<p>This procedure removes the specified rule or all rules from the rule set associated with the specified capture process, synchronous capture, apply process, propagation, or messaging client.</p>
<p>If this procedure results in an empty positive rule set for a messaging client, then the procedure drops the messaging client automatically.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If a rule was automatically created by the system, and you want to drop the rule, then you should use this procedure to remove the rule instead of the <code dir="ltr">DBMS_RULE_ADM.DROP_RULE</code> procedure. If you use the <code dir="ltr">DBMS_RULE_ADM.DROP_RULE</code> procedure, then some metadata about the rule might remain.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11561"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.REMOVE_RULE(
   rule_name         IN  VARCHAR2,
   streams_type      IN  VARCHAR2,
   streams_name      IN  VARCHAR2,
   drop_unused_rule  IN  BOOLEAN  DEFAULT TRUE,
   inclusion_rule    IN  BOOLEAN  DEFAULT TRUE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11562"></a>Parameters</p>
<div id="ARPLS68795" class="tblformal">
<p class="titleintable"><a id="sthref11563"></a><a id="sthref11564"></a>Table 159-33 REMOVE_RULE Procedure Parameters</p>
<table class="cellalignment4330" title="REMOVE_RULE Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.REMOVE_RULE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t149">Parameter</th>
<th class="cellalignment4328" id="r1c2-t149">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t149" headers="r1c1-t149">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t149 r1c2-t149">
<p>The name of the rule to remove, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">rule_name</span></code>. If <code dir="ltr">NULL</code>, then the procedure removes all rules from the specified capture process, synchronous capture, apply process, propagation, or messaging client rule set.</p>
<p>For example, to specify a rule in the <code dir="ltr">hr</code> schema named <code dir="ltr">prop_rule1</code>, enter <code dir="ltr">hr.prop_rule1</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t149" headers="r1c1-t149">
<p><code dir="ltr">streams_type</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t149 r1c2-t149">
<p>The type of Oracle Streams client:</p>
<ul>
<li>
<p>Specify <code dir="ltr">capture</code> for a capture process.</p>
</li>
<li>
<p>Specify <code dir="ltr">sync_capture</code> for a synchronous capture.</p>
</li>
<li>
<p>Specify <code dir="ltr">propagation</code> for a propagation.</p>
</li>
<li>
<p>Specify <code dir="ltr">apply</code> for an apply process.</p>
</li>
<li>
<p>Specify <code dir="ltr">dequeue</code> for a messaging client.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t149" headers="r1c1-t149">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t149 r1c2-t149">
<p>The name of the Oracle Streams client, which can be a capture process, synchronous capture, propagation, apply process, or messaging client. Do not specify an owner.</p>
<p>If the specified Oracle Streams client does not exist, but there is metadata in the data dictionary that associates the rule with this client, then the procedure removes the metadata.</p>
<p>If the specified Oracle Streams client does not exist, and there is no metadata in the data dictionary that associates the rule with this client, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t149" headers="r1c1-t149">
<p><code dir="ltr">drop_unused_rule</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t149 r1c2-t149">
<p>If <code dir="ltr">TRUE</code> and the rule is not in any rule set, then the procedure drops the rule from the database.</p>
<p>If <code dir="ltr">TRUE</code> and the rule exists in any rule set, then the procedure does not drop the rule from the database.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not drop the rule from the database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t149" headers="r1c1-t149">
<p><code dir="ltr">inclusion_rule</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t149 r1c2-t149">
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">TRUE</code>, then the procedure removes the rule from the positive rule set for the Oracle Streams client.</p>
<p>If <code dir="ltr">inclusion_rule</code> is <code dir="ltr">FALSE</code>, then the procedure removes the rule from the negative rule set for the Oracle Streams client.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS508" class="refsect2"><a id="i1008310"></a>
<h3 class="refsect2">REMOVE_STREAMS_CONFIGURATION Procedure<a id="sthref11565"></a><a id="sthref11566"></a></h3>
<p>This procedure removes the Oracle Streams configuration at the local database.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11567"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.REMOVE_STREAMS_CONFIGURATION;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CDEFEGCE"></a>Usage Notes</p>
<p>Specifically, this procedure performs the following actions at the local database:</p>
<ul>
<li>
<p>Drops all capture processes</p>
</li>
<li>
<p>If any tables have been prepared for instantiation, then aborts preparation for instantiation for the table using the <code dir="ltr">ABORT_TABLE_INSTANTIATION</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package</p>
</li>
<li>
<p>If any schemas have been prepared for instantiation, then aborts preparation for instantiation for the schema using the <code dir="ltr">ABORT_SCHEMA_INSTANTIATION</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package</p>
</li>
<li>
<p>If the database has been prepared for instantiation, then aborts preparation for instantiation for the database using the <code dir="ltr">ABORT_GLOBAL_INSTANTIATION</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package</p>
</li>
<li>
<p>Drops propagations that were created using either the <code dir="ltr">DBMS_STREAMS_ADM</code> package or the <code dir="ltr">DBMS_PROPAGATION_ADM</code> package. Before a propagation is dropped, its propagation job is disabled. Does not drop propagations that were created using the <code dir="ltr">DBMS_AQADM</code> package.</p>
</li>
<li>
<p>Disables all propagation jobs used by propagations</p>
</li>
<li>
<p>Drops all apply processes. If there are apply errors in the error queue for an apply process, then this procedure deletes these apply errors before it drops the apply process.</p>
</li>
<li>
<p>Removes specifications for DDL handlers used by apply processes, but does not delete the PL/SQL procedures used by these handlers</p>
</li>
<li>
<p>Removes specifications for message handlers used by apply processes, but does not delete the PL/SQL procedures used by these handlers</p>
</li>
<li>
<p>Removes specifications for precommit handlers used by apply processes, but does not delete the PL/SQL procedures used by these handlers</p>
</li>
<li>
<p>Removes the instantiation SCN and ignore SCN for each apply object and schema and for the entire database</p>
</li>
<li>
<p>Removes messaging clients</p>
</li>
<li>
<p>Unsets message notification specifications that were set using the <code dir="ltr">SET_MESSAGE_NOTIFICATION</code> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package</p>
</li>
<li>
<p>Removes specifications for procedure DML handlers and error handlers, but does not delete the PL/SQL procedures used by these handlers</p>
</li>
<li>
<p>Removes update conflict handlers</p>
</li>
<li>
<p>Removes specifications for substitute key columns for apply tables</p>
</li>
<li>
<p>Drops rule sets and rules that were created using the <code dir="ltr">DBMS_STREAMS_ADM</code> package.</p>
</li>
<li>
<p>Drops unused rule sets that were used by capture processes, propagations, apply processes, and messaging clients, and removes the rules in these rule sets. These rules and rule sets are removed regardless of whether they were created using the <code dir="ltr">DBMS_STREAMS_ADM</code> package or the <code dir="ltr">DBMS_RULE_ADM</code> package.</p>
</li>
</ul>
<p>This procedure stops capture processes and apply processes before it drops them.</p>
<p>This procedure does not drop rule sets or rules if they meet both of the following conditions:</p>
<ul>
<li>
<p>The rule sets or rules were created using the <code dir="ltr">DBMS_RULE_ADM</code> package.</p>
</li>
<li>
<p>The rule sets or rules were not used by a capture process, propagation, apply process, or messaging client.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Attention:</p>
Running this procedure is dangerous. You should run this procedure only if you are sure you want to remove the entire Oracle Streams configuration at a database.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Running this procedure repeatedly does not cause errors. If the procedure fails to complete, then you can run it again.</p>
</li>
<li>
<p>This procedure commits multiple times.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="d_cap_a.htm#i997449">STOP_CAPTURE Procedure</a> in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package</p>
</li>
<li>
<p><a href="d_apply.htm#i998119">STOP_APPLY Procedure</a> in the <code dir="ltr">DBMS_APPLY_ADM</code> package</p>
</li>
<li>
<p><a href="#CDEFCADF">REMOVE_RULE Procedure</a> in the <code dir="ltr">DBMS_STREAMS_ADM</code> package</p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS889" class="refsect2"><a id="CDECJDCG"></a>
<h3 class="refsect2">RENAME_COLUMN Procedure<a id="sthref11568"></a><a id="sthref11569"></a></h3>
<p>This procedure either adds or removes a declarative rule-based transformation which renames a column in a row logical change record (LCR) that satisfies the specified rule.</p>
<p>For the transformation to be performed when the specified rule evaluates to <code dir="ltr">TRUE</code>, the rule must be in the positive rule set of an Oracle Streams client. Oracle Streams clients include capture processes, synchronous captures, propagations, apply processes, and messaging clients.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The <code dir="ltr">RENAME_COLUMN</code> procedure supports the same data types supported by Oracle Streams capture processes.</p>
</li>
<li>
<p>Declarative transformations can transform row LCRs only. These row LCRs can be captured by a capture process, captured by a synchronous capture, or constructed and enqueued by an application. Therefore, a DML rule must be specified when you run this procedure. If a DDL is specified, then the procedure raises an error.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS" href="../STRMS/toc.htm"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about <a class="olink STRMS151" href="../STRMS/strms_transform.htm#STRMS151">declarative rule-based transformations</a> and about <a class="olink STRMS136" href="../STRMS/strms_capture.htm#STRMS136">the data types supported by Oracle Streams capture processes</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11570"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.RENAME_COLUMN(
   rule_name         IN  VARCHAR2,
   table_name        IN  VARCHAR2,
   from_column_name  IN  VARCHAR2,
   to_column_name    IN  VARCHAR2,
   value_type        IN  VARCHAR2  DEFAULT &#39;*&#39;,
   step_number       IN  NUMBER    DEFAULT 0,
   operation         IN  VARCHAR2  DEFAULT &#39;ADD&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11571"></a>Parameters</p>
<div id="ARPLS68796" class="tblformal">
<p class="titleintable"><a id="sthref11572"></a><a id="sthref11573"></a>Table 159-34 RENAME_COLUMN Procedure Parameters</p>
<table class="cellalignment4330" title="RENAME_COLUMN Procedure Parameters " summary="This table describes the Parameters of DBMS_STREAMS_ADM.RENAME_COLUMN subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t155">Parameter</th>
<th class="cellalignment4328" id="r1c2-t155">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t155" headers="r1c1-t155">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t155 r1c2-t155">
<p>The name of the rule, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">rule_name</span></code>. If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p>For example, to specify a rule in the <code dir="ltr">hr</code> schema named <code dir="ltr">employees12</code>, enter <code dir="ltr">hr.employees12</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t155" headers="r1c1-t155">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t155 r1c2-t155">
<p>The name of the table in which the column is renamed in the row LCR, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t155" headers="r1c1-t155">
<p><code dir="ltr">from_column_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t155 r1c2-t155">
<p>The name of the column to be renamed in each row LCR that satisfies the rule.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t155" headers="r1c1-t155">
<p><code dir="ltr">to_column_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t155 r1c2-t155">
<p>The new name of the column in each row LCR that satisfies the rule.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t155" headers="r1c1-t155">
<p><code dir="ltr">value_type</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t155 r1c2-t155">
<p>Specify <code dir="ltr">&#39;NEW&#39;</code> to rename the column in the new values in the row&nbsp;LCR.</p>
<p>Specify <code dir="ltr">&#39;OLD&#39;</code> to rename the column in the old values in the row&nbsp;LCR.</p>
<p>Specify <code dir="ltr">&#39;*&#39;</code> to rename the column in both the old and new values in the row LCR.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t155" headers="r1c1-t155">
<p><code dir="ltr">step_number</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t155 r1c2-t155">
<p>The order of execution of the transformation.</p>
<p><span class="bold">See Also:</span> <a class="olink STRMS145" href="../STRMS/strms_transform.htm#STRMS145"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about transformation ordering</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t155" headers="r1c1-t155">
<p><code dir="ltr">operation</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t155 r1c2-t155">
<p>Specify <code dir="ltr">&#39;ADD&#39;</code> to add the transformation to the rule.</p>
<p>Specify <code dir="ltr">&#39;REMOVE&#39;</code> to remove the transformation from the rule.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11574"></a>Usage Notes</p>
<p>When <code dir="ltr">&#39;REMOVE&#39;</code> is specified for the <code dir="ltr">operation</code> parameter, all of the rename column declarative rule-based transformations for the specified rule are removed that match the specified <code dir="ltr">table_name</code>, <code dir="ltr">column_name</code>, and <code dir="ltr">step_number</code> parameters. Nulls specified for these parameters act as wildcards. The following table lists the behavior of the <code dir="ltr">RENAME_COLUMN</code> procedure when one or more of these parameters is <code dir="ltr">NULL</code>:</p>
<div class="inftblhruleinformalwide">
<table class="cellalignment4327" title="Remove Behavior for the RENAME_COLUMN Procedure" summary="This table describes the behavior of the RENAME_COLUMN procedure when the operation parameter is set to REMOVE and various other procedure parameters are set to NULL." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t156">table_name</th>
<th class="cellalignment4328" id="r1c2-t156">from_column_name</th>
<th class="cellalignment4328" id="r1c3-t156">to_column_name</th>
<th class="cellalignment4328" id="r1c4-t156">step_number</th>
<th class="cellalignment4328" id="r1c5-t156">Result</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t156" headers="r1c1-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t156 r1c2-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t156 r1c3-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t156 r1c4-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t156 r1c5-t156">Remove all rename column transformations for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t156" headers="r1c1-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t156 r1c2-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t156 r1c3-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t156 r1c4-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t156 r1c5-t156">Remove all rename column transformations with the specified <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t156" headers="r1c1-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t156 r1c2-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t156 r1c3-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t156 r1c4-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t156 r1c5-t156">Remove all rename column transformations with the specified <code dir="ltr">to_column_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t156" headers="r1c1-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t156 r1c2-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t156 r1c3-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t156 r1c4-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t156 r1c5-t156">Remove all rename column transformations with the specified <code dir="ltr">table_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t156" headers="r1c1-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t156 r1c2-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t156 r1c3-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t156 r1c4-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t156 r1c5-t156">Remove all rename column transformations with the specified column_name for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t156" headers="r1c1-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t156 r1c2-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t156 r1c3-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t156 r1c4-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t156 r1c5-t156">Remove all rename column transformations with the specified <code dir="ltr">table_name</code> and column_name for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t156" headers="r1c1-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t156 r1c2-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t156 r1c3-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t156 r1c4-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t156 r1c5-t156">Remove all rename column transformations with the specified <code dir="ltr">table_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t156" headers="r1c1-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t156 r1c2-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t156 r1c3-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t156 r1c4-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t156 r1c5-t156">Remove all rename column transformations with the specified <code dir="ltr">table_name</code>, column_name, and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t156" headers="r1c1-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r10c1-t156 r1c2-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r10c1-t156 r1c3-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r10c1-t156 r1c4-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r10c1-t156 r1c5-t156">Remove all rename column transformations with the specified <code dir="ltr">table_name</code>, column_name, and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t156" headers="r1c1-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r11c1-t156 r1c2-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r11c1-t156 r1c3-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r11c1-t156 r1c4-t156"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r11c1-t156 r1c5-t156">Remove all rename column transformations with the specified <code dir="ltr">table_name</code>, column_name, and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t156" headers="r1c1-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r12c1-t156 r1c2-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r12c1-t156 r1c3-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r12c1-t156 r1c4-t156">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r12c1-t156 r1c5-t156">Remove all rename column transformations with the specified <code dir="ltr">table_name</code>, column_name, and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformalwide" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS890" class="refsect2"><a id="CDEDCHCG"></a>
<h3 class="refsect2">RENAME_SCHEMA Procedure<a id="sthref11575"></a><a id="sthref11576"></a></h3>
<p>This procedure either adds or removes a declarative rule-based transformation which renames a schema in a row logical change record (LCR) that satisfies the specified rule.</p>
<p>For the transformation to be performed when the specified rule evaluates to <code dir="ltr">TRUE</code>, the rule must be in the positive rule set of an Oracle Streams client. Oracle Streams clients include capture processes, synchronous captures, propagations, apply processes, and messaging clients.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Declarative transformations can transform row LCRs only. These row LCRs can be captured by a capture process, captured by a synchronous capture, or constructed and enqueued by an application. Therefore, a DML rule must be specified when you run this procedure. If a DDL is specified, then the procedure raises an error.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS151" href="../STRMS/strms_transform.htm#STRMS151"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about declarative rule-based transformations</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11577"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.RENAME_SCHEMA(
   rule_name         IN  VARCHAR2,
   from_schema_name  IN  VARCHAR2,
   to_schema_name    IN  VARCHAR2,
   step_number       IN  NUMBER    DEFAULT 0,
   operation         IN  VARCHAR2  DEFAULT &#39;ADD&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11578"></a>Parameters</p>
<div id="ARPLS68797" class="tblformal">
<p class="titleintable"><a id="sthref11579"></a><a id="sthref11580"></a>Table 159-35 RENAME_SCHEMA Procedure Parameters</p>
<table class="cellalignment4330" title="RENAME_SCHEMA Procedure Parameters " summary="This table describes the Parameters of DBMS_STREAMS_ADM.RENAME_SCHEMA subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t159">Parameter</th>
<th class="cellalignment4328" id="r1c2-t159">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t159" headers="r1c1-t159">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t159 r1c2-t159">
<p>The name of the rule, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">rule_name</span></code>. If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p>For example, to specify a rule in the <code dir="ltr">hr</code> schema named <code dir="ltr">employees12</code>, enter <code dir="ltr">hr.employees12</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t159" headers="r1c1-t159">
<p><code dir="ltr">from_schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t159 r1c2-t159">
<p>The name of the schema to be renamed in each row LCR that satisfies the rule.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t159" headers="r1c1-t159">
<p><code dir="ltr">to_schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t159 r1c2-t159">
<p>The new name of the schema in each row LCR that satisfies the rule.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t159" headers="r1c1-t159">
<p><code dir="ltr">step_number</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t159 r1c2-t159">
<p>The order of execution of the transformation.</p>
<p><span class="bold">See Also:</span> <a class="olink STRMS145" href="../STRMS/strms_transform.htm#STRMS145"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about transformation ordering</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t159" headers="r1c1-t159">
<p><code dir="ltr">operation</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t159 r1c2-t159">
<p>Specify <code dir="ltr">&#39;ADD&#39;</code> to add the transformation to the rule.</p>
<p>Specify <code dir="ltr">&#39;REMOVE&#39;</code> to remove the transformation from the rule.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11581"></a>Usage Notes</p>
<p>When <code dir="ltr">&#39;REMOVE&#39;</code> is specified for the <code dir="ltr">operation</code> parameter, all of the rename schema declarative rule-based transformations for the specified rule are removed that match the specified <code dir="ltr">from_schema_name</code>, <code dir="ltr">to_schema_name</code>, and <code dir="ltr">step_number</code> parameters. Nulls specified for these parameters act as wildcards. The following table lists the behavior of the <code dir="ltr">RENAME_SCHEMA</code> procedure when one or more of these parameters is <code dir="ltr">NULL</code>:</p>
<div class="inftblinformal">
<table class="cellalignment4327" title="Remove Behavior for the RENAME_SCHEMA Procedure" summary="This table describes the behavior of the RENAME_SCHEMA procedure when the operation parameter is set to REMOVE and various other procedure parameters are set to NULL." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t160">from_schema_name</th>
<th class="cellalignment4328" id="r1c2-t160">to_schema_name</th>
<th class="cellalignment4328" id="r1c3-t160">step_number</th>
<th class="cellalignment4328" id="r1c4-t160">Result</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t160" headers="r1c1-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t160 r1c2-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t160 r1c3-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t160 r1c4-t160">Remove all rename schema transformations for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t160" headers="r1c1-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t160 r1c2-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t160 r1c3-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t160 r1c4-t160">Remove all rename schema transformations with the specified <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t160" headers="r1c1-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t160 r1c2-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t160 r1c3-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t160 r1c4-t160">Remove all rename schema transformations with the specified <code dir="ltr">to_schema_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t160" headers="r1c1-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t160 r1c2-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t160 r1c3-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t160 r1c4-t160">Remove all rename schema transformations with the specified <code dir="ltr">from_schema_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t160" headers="r1c1-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t160 r1c2-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t160 r1c3-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t160 r1c4-t160">Remove all rename schema transformations with the specified <code dir="ltr">to_schema_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t160" headers="r1c1-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t160 r1c2-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t160 r1c3-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t160 r1c4-t160">Remove all rename schema transformations with the specified <code dir="ltr">from_schema_name</code> and to_schema_name for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t160" headers="r1c1-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t160 r1c2-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t160 r1c3-t160"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t160 r1c4-t160">Remove all rename schema transformations with the specified <code dir="ltr">from_schema_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t160" headers="r1c1-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t160 r1c2-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t160 r1c3-t160">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t160 r1c4-t160">Remove all rename schema transformations with the specified <code dir="ltr">from_schema_name</code>, <code dir="ltr">to_schema_name</code>, and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS891" class="refsect2"><a id="CDEFFCJI"></a>
<h3 class="refsect2">RENAME_TABLE Procedure<a id="sthref11582"></a><a id="sthref11583"></a></h3>
<p>This procedure either adds or removes a declarative rule-based transformation which renames a table in a row logical change record (row LCR) that satisfies the specified rule.</p>
<p>For the transformation to be performed when the specified rule evaluates to <code dir="ltr">TRUE</code>, the rule must be in the positive rule set of an Oracle Streams client. Oracle Streams clients include capture processes, synchronous captures, propagations, apply processes, and messaging clients.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Declarative transformations can transform row LCRs only. These row LCRs can be captured by a capture process, captured by a synchronous capture, or constructed and enqueued by an application. Therefore, a DML rule must be specified when you run this procedure. If a DDL is specified, then the procedure raises an error.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS151" href="../STRMS/strms_transform.htm#STRMS151"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about declarative rule-based transformations</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11584"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.RENAME_TABLE(
   rule_name        IN  VARCHAR2,
   from_table_name  IN  VARCHAR2,
   to_table_name    IN  VARCHAR2,
   step_number      IN  NUMBER    DEFAULT 0,
   operation        IN  VARCHAR2  DEFAULT &#39;ADD&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11585"></a>Parameters</p>
<div id="ARPLS68798" class="tblformal">
<p class="titleintable"><a id="sthref11586"></a><a id="sthref11587"></a>Table 159-36 RENAME_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="RENAME_TABLE Procedure Parameters " summary="This table describes the Parameters of DBMS_STREAMS_ADM.RENAME_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t163">Parameter</th>
<th class="cellalignment4328" id="r1c2-t163">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t163" headers="r1c1-t163">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t163 r1c2-t163">
<p>The name of the rule, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">rule_name</span></code>. If <code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p>For example, to specify a rule in the <code dir="ltr">hr</code> schema named <code dir="ltr">employees12</code>, enter <code dir="ltr">hr.employees12</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t163" headers="r1c1-t163">
<p><code dir="ltr">from_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t163 r1c2-t163">
<p>The name of the table to be renamed in each row LCR that satisfies the rule, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">hr.employees</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t163" headers="r1c1-t163">
<p><code dir="ltr">to_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t163 r1c2-t163">
<p>The new name of the table in each row LCR that satisfies the rule, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">object_name</span></code>. For example, <code dir="ltr">humres.staff</code>.</p>
<p>The transformation can rename the table only, the schema only, or the table and the schema. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t163" headers="r1c1-t163">
<p><code dir="ltr">step_number</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t163 r1c2-t163">
<p>The order of execution of the transformation.</p>
<p><span class="bold">See Also:</span> <a class="olink STRMS145" href="../STRMS/strms_transform.htm#STRMS145"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about transformation ordering</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t163" headers="r1c1-t163">
<p><code dir="ltr">operation</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t163 r1c2-t163">
<p>Specify <code dir="ltr">&#39;ADD&#39;</code> to add the transformation to the rule.</p>
<p>Specify <code dir="ltr">&#39;REMOVE&#39;</code> to remove the transformation from the rule.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CDEBCEID"></a>Usage Notes</p>
<p>When <code dir="ltr">&#39;REMOVE&#39;</code> is specified for the <code dir="ltr">operation</code> parameter, all of the rename table declarative rule-based transformations for the specified rule are removed that match the specified <code dir="ltr">from_table_name</code>, <code dir="ltr">to_table_name</code>, and <code dir="ltr">step_number</code> parameters. Nulls specified for these parameters act as wildcards. The following table lists the behavior of the <code dir="ltr">RENAME_TABLE</code> procedure when one or more of these parameters is <code dir="ltr">NULL</code>:</p>
<div class="inftblinformal">
<table class="cellalignment4327" title="Remove Behavior for the RENAME_TABLE Procedure" summary="This table describes the behavior of the RENAME_TABLE procedure when the operation parameter is set to REMOVE and various other procedure parameters are set to NULL." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t164">from_table_name</th>
<th class="cellalignment4328" id="r1c2-t164">to_table_name</th>
<th class="cellalignment4328" id="r1c3-t164">step_number</th>
<th class="cellalignment4328" id="r1c4-t164">Result</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t164" headers="r1c1-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t164 r1c2-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t164 r1c3-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r2c1-t164 r1c4-t164">Remove all rename table transformations for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t164" headers="r1c1-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t164 r1c2-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t164 r1c3-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r3c1-t164 r1c4-t164">Remove all rename table transformations with the specified <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t164" headers="r1c1-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t164 r1c2-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t164 r1c3-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r4c1-t164 r1c4-t164">Remove all rename table transformations with the specified <code dir="ltr">to_table_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t164" headers="r1c1-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t164 r1c2-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t164 r1c3-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r5c1-t164 r1c4-t164">Remove all rename table transformations with the specified <code dir="ltr">from_table_name</code> and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t164" headers="r1c1-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t164 r1c2-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t164 r1c3-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r6c1-t164 r1c4-t164">Remove all rename table transformations with the specified <code dir="ltr">to_table_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t164" headers="r1c1-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t164 r1c2-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t164 r1c3-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r7c1-t164 r1c4-t164">Remove all rename table transformations with the specified <code dir="ltr">from_table_name</code> and <code dir="ltr">to_table_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t164" headers="r1c1-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t164 r1c2-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t164 r1c3-t164"><code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r8c1-t164 r1c4-t164">Remove all rename table transformations with the specified <code dir="ltr">from_table_name</code> for the specified rule.</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t164" headers="r1c1-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t164 r1c2-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t164 r1c3-t164">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment4329" headers="r9c1-t164 r1c4-t164">Remove all rename table transformations with the specified <code dir="ltr">from_table_name</code>, <code dir="ltr">to_table_name</code>, and <code dir="ltr">step_number</code> for the specified rule.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS519" class="refsect2"><a id="i1012479"></a>
<h3 class="refsect2">SET_MESSAGE_NOTIFICATION Procedure<a id="sthref11588"></a><a id="sthref11589"></a></h3>
<p>This procedure sets a notification for messages that can be dequeued by a specified Oracle Streams messaging client from a specified queue. A notification is sent when a message is enqueued into the specified queue and the specified messaging client can dequeue the message because the message satisfies its rule sets.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Currently, messaging clients cannot dequeue buffered messages.</p>
</li>
<li>
<p>The <code dir="ltr">DBMS_AQ</code> package can also configure notifications. The <code dir="ltr">DBMS_AQ</code> package provides some notification features that are not available in <code dir="ltr">DBMS_STREAMS_ADM</code> package, such as buffered message notifications and notification grouping by time.</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11590"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.SET_MESSAGE_NOTIFICATION(
   streams_name          IN  VARCHAR2,
   notification_action   IN  VARCHAR2,
   notification_type     IN  VARCHAR2     DEFAULT &#39;PROCEDURE&#39;,
   notification_context  IN  ANYDATA      DEFAULT NULL,
   include_notification  IN  BOOLEAN      DEFAULT TRUE,
   queue_name            IN  VARCHAR2     DEFAULT &#39;streams_queue&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11591"></a>Parameters</p>
<div id="ARPLS68799" class="tblformal">
<p class="titleintable"><a id="sthref11592"></a><a id="sthref11593"></a>Table 159-37 SET_MESSAGE_NOTIFICATION Procedure Parameters</p>
<table class="cellalignment4330" title="SET_MESSAGE_NOTIFICATION Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.SET_MESSAGE_NOTIFICATION subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t166">Parameter</th>
<th class="cellalignment4328" id="r1c2-t166">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t166" headers="r1c1-t166">
<p><code dir="ltr">streams_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t166 r1c2-t166">
<p>The name of the Oracle Streams messaging client. Do not specify an owner.</p>
<p>For example, if the user <code dir="ltr">strmadmin</code> is the messaging client, then specify <code dir="ltr">strmadmin.</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t166" headers="r1c1-t166">
<p><code dir="ltr">notification_action</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t166 r1c2-t166">
<p>The action to be performed on message notification. Specify one of the following:</p>
<ul>
<li>
<p>For URL notifications, specify a URL without the prefix <code dir="ltr">http://</code>.</p>
<p>For example, to specify the URL <code dir="ltr">http://www.company.com:8080</code>, enter the following:</p>
<pre dir="ltr">www.company.com:8080
</pre></li>
<li>
<p>For email notifications, specify an email address.</p>
<p>For example, to specify an the email address <code dir="ltr">xyz@company.com</code>, enter the following:</p>
<pre dir="ltr">xyz@company.com
</pre></li>
<li>
<p>For PL/SQL procedure notifications, specify an existing user-defined PL/SQL procedure in the form <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">procedure_name</span></code>. If the <code dir="ltr"><span class="codeinlineitalic">schema_name</span></code> is not specified, then the user who invokes the <code dir="ltr">SET_MESSAGE_NOTIFICATION</code> procedure is the default. The procedure must be a <code dir="ltr">PLSQLCALLBACK</code> data structure.</p>
<p>For example, to specify a procedure named <code dir="ltr">notify_orders</code> in the <code dir="ltr">oe</code> schema, enter the following:</p>
<pre dir="ltr">oe.notify_orders
</pre></li>
</ul>
<p><span class="bold">See Also:</span> <a href="#i1030325">Examples</a> for more information about message notification procedures</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t166" headers="r1c1-t166">
<p><code dir="ltr">notification_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t166 r1c2-t166">
<p>The type of notification. Specify one of the following:</p>
<ul>
<li>
<p><code dir="ltr">HTTP</code> if you specified a URL for <code dir="ltr">notification_action</code></p>
</li>
<li>
<p><code dir="ltr">MAIL</code> if you specified an email address for <code dir="ltr">notification_action</code></p>
</li>
<li>
<p><code dir="ltr">PROCEDURE</code> if you specified a user-defined procedure for <code dir="ltr">notification_action</code></p>
</li>
</ul>
<p>The type must match the specification for the <code dir="ltr">notification_action</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t166" headers="r1c1-t166">
<p><code dir="ltr">notification_context</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t166 r1c2-t166">
<p>The context of the notification. The context must be specified using <code dir="ltr">RAW</code> datatype information. For example, to specify the hexidecimal equivalent of <code dir="ltr">&#39;FF&#39;</code>, enter the following:</p>
<pre dir="ltr">ANYDATA.ConvertRaw(HEXTORAW(&#39;FF&#39;))
</pre>
<p>The notification context is passed the PL/SQL procedure in procedure notifications and is not relevant for mail or HTTP notifications.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t166" headers="r1c1-t166">
<p><code dir="ltr">include_notification</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t166 r1c2-t166">
<p>If <code dir="ltr">TRUE</code>, then the procedure adds this notification for the specified <code dir="ltr">streams_name</code> and <code dir="ltr">queue_name</code>. That is, specifying <code dir="ltr">TRUE</code> turns on the notification for the <code dir="ltr">streams_name</code> and <code dir="ltr">queue_name</code>.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure removes this notification for the specified <code dir="ltr">streams_name</code> and <code dir="ltr">queue_name</code>. That is, specifying <code dir="ltr">FALSE</code> turns off the notification for the <code dir="ltr">streams_name</code> and <code dir="ltr">queue_name</code>. If you specify <code dir="ltr">FALSE</code>, then this procedure ignores any specified values for the <code dir="ltr">notification_action</code> or <code dir="ltr">notification_context</code> parameters.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t166" headers="r1c1-t166">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t166 r1c2-t166">
<p>The name of a local <code dir="ltr">ANYDATA</code> queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. The current database must contain the queue. The specified queue must be a <code dir="ltr">ANYDATA</code> queue.</p>
<p>For example, to specify a queue named <code dir="ltr">streams_queue</code> in the <code dir="ltr">strmadmin</code> schema, enter <code dir="ltr">strmadmin.streams_queue</code> for this parameter. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11594"></a>Usage Notes</p>
<p>You can specify one of the following types of notifications:</p>
<ul>
<li>
<p>An email address to which message notifications are sent. When a relevant message is enqueued into the queue, an email with the message properties is mailed to the specified email address.</p>
</li>
<li>
<p>A PL/SQL procedure to be invoked on a notification. When a relevant message is enqueued into the queue, the specified PL/SQL procedure is invoked with the message properties. This PL/SQL procedure can dequeue the message.</p>
</li>
<li>
<p>An HTTP URL to which the notification is posted. When a relevant message is enqueued into the queue, a notification with the message properties is posted to the specified URL specified.</p>
</li>
</ul>
<p>A client does not need to be connected to the database to receive a notification.</p>
<p>If you register for email notifications, then you should use the <code dir="ltr">DBMS_AQELM</code> package to set the host name and port name for the SMTP server that will be used by the database to send email notifications. If required, then you should set the send-from email address, which is set by the database as the <code dir="ltr">sent</code> <code dir="ltr">from</code> field. You need a Java-enabled database to use this feature.</p>
<p>If you register for HTTP notifications, you might want to use the <code dir="ltr">DBMS_AQELM</code> package to set the host name and port number for the proxy server and a list of no-proxy domains that will be used by the database to post HTTP notifications.</p>
<p>Each notification is an <code dir="ltr">AQXmlNotification</code>, which includes of the following:</p>
<ul>
<li>
<p><code dir="ltr">notification_options</code>, which includes the following:</p>
<ul>
<li>
<p><code dir="ltr">destination</code> - The destination queue from which the message was dequeued</p>
</li>
<li>
<p><code dir="ltr">consumer_name</code> - The name of the messaging client that dequeued the message</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">message_set</code> - The set of message properties</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>The documentation for the <code dir="ltr">DBMS_AQELM</code> package for more information on email notifications and HTTP notifications</p>
</li>
<li>
<p><a class="olink ADQUE" href="../ADQUE/toc.htm"><span class="italic">Oracle Database Advanced Queuing User&#39;s Guide</span></a> and <a class="olink ADXDB" href="../ADXDB/toc.htm"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a> for more information about message notifications and XML</p>
</li>
<li>
<p><a class="olink STRMS006" href="../STRMS/strms_rules.htm#STRMS006"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about how rules are used in Oracle Streams</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i1030325"></a>Examples</p>
<p>If you use a message notification procedure, then this PL/SQL procedure must have the following signature:</p>
<pre dir="ltr">PROCEDURE procedure_name(
  context  IN  ANYDATA,
  reginfo  IN  SYS.AQ$_REG_INFO,
  descr    IN  SYS.AQ$_DESCRIPTOR);
</pre>
<p>Here, <code dir="ltr"><span class="codeinlineitalic">procedure_name</span></code> stands for the name of the procedure. The procedure is a <code dir="ltr">PLSQLCALLBACK</code> data structure that specifies the user-defined PL/SQL procedure to be invoked on message notification.</p>
<p>The following is a simple example of a notification procedure that dequeues a message of type <code dir="ltr">oe.user_msg</code> using the message identifier and consumer name sent by the notification. To complete the example, first create the type:</p>
<pre dir="ltr">CREATE TYPE oe.user_msg AS OBJECT(
  object_name    VARCHAR2(30),
  object_owner   VARCHAR2(30),
  message        VARCHAR2(50));
/
</pre>
<p>Next, create the procedure:</p>
<pre dir="ltr">CREATE OR REPLACE PROCEDURE oe.notification_dequeue(
  context  ANYDATA, 
  reginfo  SYS.AQ$_REG_INFO, 
  descr    SYS.AQ$_DESCRIPTOR)
AS 
  dequeue_options     DBMS_AQ.DEQUEUE_OPTIONS_T; 
  message_properties  DBMS_AQ.MESSAGE_PROPERTIES_T; 
  message_handle      RAW(16); 
  message             ANYDATA; 
  oe_message          oe.user_msg; 
  rc                  PLS_INTEGER; 
BEGIN 
  -- Get the message identifier and consumer name from the descriptor 
  dequeue_options.msgid := descr.msg_id; 
  dequeue_options.consumer_name := descr.consumer_name; 
  -- Dequeue the message 
  DBMS_AQ.DEQUEUE( 
    queue_name         =&gt; descr.queue_name, 
    dequeue_options    =&gt; dequeue_options, 
    message_properties =&gt; message_properties, 
    payload            =&gt; message, 
    msgid              =&gt; message_handle);
  rc := message.getobject(oe_message); 
  COMMIT; 
END; 
/
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS401" href="../ARPLS/d_aq.htm#ARPLS401"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about <code dir="ltr">PLSQLCALLBACK</code> data structures</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68800" class="refsect2"><a id="CDEGEEFA"></a>
<h3 class="refsect2">SET_MESSAGE_TRACKING Procedure</h3>
<p>Sets the tracking label for logical change records (LCRs) produced by the current session. This procedure affects only the current session. Any LCRs produced by the current session are tracked, including captured LCRs and persistent LCRs.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The tracking label set by this procedure does not track non-LCR messages.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEFEDGF">GET_MESSAGE_TRACKING Function</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11595"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.SET_MESSAGE_TRACKING(
   tracking_label IN VARCHAR2  DEFAULT &#39;Streams_tracking&#39;,
   actions        IN NUMBER    DEFAULT DBMS_STREAMS_ADM.ACTION_MEMORY);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11596"></a>Parameters</p>
<div id="ARPLS68801" class="tblformal">
<p class="titleintable"><a id="sthref11597"></a><a id="sthref11598"></a>Table 159-38 SET_MESSAGE_TRACKING Procedure Parameters</p>
<table class="cellalignment4330" title="SET_MESSAGE_TRACKING Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.SET_MESSAGE_TRACKING subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t171">Parameter</th>
<th class="cellalignment4328" id="r1c2-t171">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t171" headers="r1c1-t171">
<p><code dir="ltr">tracking_label</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t171 r1c2-t171">
<p>The label used to track the LCRs produced by the session.</p>
<p>Set this parameter to <code dir="ltr">NULL</code> to stop message tracking in the current session.</p>
<p>The size limit for a label is 4,000 bytes.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t171" headers="r1c1-t171">
<p><code dir="ltr">actions</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t171 r1c2-t171">
<p>When <code dir="ltr">DBMS_STREAMS_ADM.ACTION_MEMORY</code> is specified, the LCRs are tracked in memory, and the <code dir="ltr">V$STREAMS_MESSAGE_TRACKING</code> dynamic performance view is populated with information about the LCRs.</p>
<p>Currently, <code dir="ltr">DBMS_STREAMS_ADM.ACTION_MEMORY</code> is the only valid setting for this parameter.</p>
<p>The value specified for this parameter is an enumerated constant. Enumerated constants must be prefixed with the package name.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS591" class="refsect2"><a id="CDEECBGG"></a>
<h3 class="refsect2">SET_RULE_TRANSFORM_FUNCTION Procedure<a id="sthref11599"></a><a id="sthref11600"></a><a id="sthref11601"></a><a id="sthref11602"></a><a id="sthref11603"></a><a id="sthref11604"></a><a id="sthref11605"></a><a id="sthref11606"></a></h3>
<p>This procedure sets or removes the transformation function name for a custom rule-based transformation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11607"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.SET_RULE_TRANSFORM_FUNCTION(
   rule_name           IN  VARCHAR2,
   transform_function  IN  VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11608"></a>Parameters</p>
<div id="ARPLS68802" class="tblformal">
<p class="titleintable"><a id="sthref11609"></a><a id="sthref11610"></a>Table 159-39 SET_RULE_TRANSFORM_FUNCTION Procedure Parameters</p>
<table class="cellalignment4330" title="SET_RULE_TRANSFORM_FUNCTION Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.SET_RULE_TRANSFORM_FUNCTION subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t172">Parameter</th>
<th class="cellalignment4328" id="r1c2-t172">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t172" headers="r1c1-t172">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t172 r1c2-t172">
<p>The name of the rule whose rule-based transformation function you are setting or removing, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">rule_name</span></code>.</p>
<p>For example, to specify a rule in the <code dir="ltr">hr</code> schema named <code dir="ltr">prop_rule1</code>, enter <code dir="ltr">hr.prop_rule1</code>. If the schema is not specified, then the current user is the default.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t172" headers="r1c1-t172">
<p><code dir="ltr">transform_function</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t172 r1c2-t172">
<p>Either the name of the transformation function to be used in the rule-based transformation for the rule or <code dir="ltr">NULL</code>.</p>
<p>If you specify a transformation function name, then specify an existing function in one of the following forms:</p>
<ul>
<li>
<p><code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">function_name</span></code></p>
</li>
<li>
<p><code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">package_name.function_name</span></code></p>
</li>
</ul>
<p>If the function is in a package, then you must specify the <code dir="ltr"><span class="codeinlineitalic">package_name</span></code>. For example, to specify a function in the <code dir="ltr">transform_pkg</code> package in the <code dir="ltr">hr</code> schema named <code dir="ltr">executive_to_management</code>, enter <code dir="ltr">hr.transform_pkg.executive_to_management</code>. An error is returned if the specified procedure does not exist.</p>
<p>If the <code dir="ltr"><span class="codeinlineitalic">schema_name</span></code> is not specified, then the user who invokes the rule-based transformation function is the default.</p>
<p>If you specify <code dir="ltr">NULL</code>, then the <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure removes the current custom rule-based transformation from the rule.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11611"></a>Usage Notes</p>
<p>The following sections contain usage notes for this procedure:</p>
<ul>
<li>
<p><a href="#CDEJFBHD">Transformation Function Signature</a></p>
</li>
<li>
<p><a href="#CDEIBHBB">Rule Action Context</a></p>
</li>
<li>
<p><a href="#CDEHFFJC">User Who Calls the Transformation Function</a></p>
</li>
<li>
<p><a href="#CDEJJEFH">Function Verification</a></p>
</li>
</ul>
<p class="subhead2"><a id="CDEJFBHD"></a><a id="ARPLS68803"></a>Transformation Function Signature</p>
<p>A custom rule-based transformation function always operates on one message, but it can return one message or many messages. A custom rule-based transformation function that returns one message is a one-to-one transformation function. A one-to-one transformation function must have the following signature:</p>
<pre dir="ltr">FUNCTION <span class="italic">user_function</span> (
   <span class="italic">parameter_name</span>   IN  ANYDATA)
RETURN ANYDATA;
</pre>
<p>Here, <code dir="ltr"><span class="codeinlineitalic">user_function</span></code> stands for the name of the function and <code dir="ltr"><span class="codeinlineitalic">parameter_name</span></code> stands for the name of the parameter passed to the function. The parameter passed to the function is an <code dir="ltr">ANYDATA</code> encapsulation of a message, and the function must return an <code dir="ltr">ANYDATA</code> encapsulation of a message.</p>
<p>A custom rule-based transformation function that can return multiple messages is a one-to-many transformation function. A one-to-many transformation function must have the following signature:</p>
<pre dir="ltr">FUNCTION <span class="italic">user_function</span> (
   <span class="italic">parameter_name</span>  IN  ANYDATA)
RETURN STREAMS$_ANYDATA_ARRAY;
</pre>
<p>Here, <code dir="ltr"><span class="codeinlineitalic">user_function</span></code> stands for the name of the function and <code dir="ltr"><span class="codeinlineitalic">parameter_name</span></code> stands for the name of the parameter passed to the function. The parameter passed to the function is an <code dir="ltr">ANYDATA</code> encapsulation of a message, and the function must return an array that contains zero or more <code dir="ltr">ANYDATA</code> encapsulations of a message. If the array contains zero <code dir="ltr">ANYDATA</code> encapsulations of a message, then the original message is discarded.</p>
<p>The <code dir="ltr">STREAMS$_ANYDATA_ARRAY</code> type is an Oracle-supplied type that has the following definition:</p>
<pre dir="ltr">CREATE OR REPLACE TYPE SYS.STREAMS$_ANYDATA_ARRAY
   AS VARRAY(2147483647) of ANYDATA
/
</pre>
<p>The following restrictions apply to custom rule-based transformations that use one-to-many functions:</p>
<ul>
<li>
<p>Rules that are associated with one-to-many functions are supported for Oracle Streams capture processes only. These rules must not be added to rule sets used by other Oracle Streams clients, including propagations, apply processes, and messaging clients.</p>
</li>
<li>
<p>One-to-many functions only can operate on row logical change records (row LCRs). They cannot operate on DDL LCRs.</p>
</li>
<li>
<p>Row LCRs returned by a one-to-many function cannot contain piecewise LOB, <code dir="ltr">LONG</code>, or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> operations.</p>
</li>
<li>
<p>The one-to-many function must return row LCRs in the correct order. The order of row LCRs in the array (starting from index 1) is the order that the row LCRs will be executed in the transaction.</p>
</li>
</ul>
<p>When an apply process dequeues row LCRs that are the result of a transformation by a one-to-many function, the apply process uses the instantiation SCN of the LCR passed to the one-to-many function for all of row LCRs.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>An error is raised if a one-to-one or one-to-many transformation function returns <code dir="ltr">NULL</code>.</p>
</li>
<li>
<p>Only one custom rule-based transformation can be specified for a particular rule. You cannot specify both a one-to-one and a one-to-many transformation function for the same rule.</p>
</li>
<li>
<p>For any LCR constructed and returned by a custom rule-based transformation, the <code dir="ltr">source_database_name</code>, <code dir="ltr">transaction_id</code>, and <code dir="ltr">scn</code> parameter values must match the values in the original LCR. Oracle automatically specifies the values in the original LCR for these parameters, even if an attempt is made to construct LCRs with different values.</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="CDEIBHBB"></a><a id="ARPLS68804"></a>Rule Action Context</p>
<p>This procedure modifies the specified rule&#39;s action context to specify the transformation. A rule&#39;s action context is optional information associated with a rule that is interpreted by the client of the rules engine after the rule evaluates to <code dir="ltr">TRUE</code> for a message. The client of the rules engine can be a user-created application or an internal feature of Oracle, such as Oracle Streams. The Oracle Streams clients include capture processes, synchronous captures, propagations, apply processes, and messaging clients. The information in an action context is an object of type <code dir="ltr">SYS.RE$NV_LIST</code>, which consists of a list of name-value pairs.</p>
<p><a id="sthref11612"></a><a id="sthref11613"></a>A custom rule-based transformation in Oracle Streams always consists of the following name-value pair in an action context:</p>
<ul>
<li>
<p>If the function is a one-to-one transformation function, then the name is <code dir="ltr">STREAMS$_TRANSFORM_FUNCTION</code>. If the function is a one-to-many transformation function, then the name is <code dir="ltr">STREAMS$_ARRAY_TRANS_FUNCTION</code>.</p>
</li>
<li>
<p>The value is a <code dir="ltr">ANYDATA</code> instance containing a PL/SQL function name specified as a <code dir="ltr">VARCHAR2</code>. This function performs the transformation.</p>
</li>
</ul>
<p class="subhead2"><a id="CDEHFFJC"></a><a id="ARPLS68805"></a>User Who Calls the Transformation Function</p>
<p>The user that calls the transformation function must have <code dir="ltr">EXECUTE</code> privilege on the function. The following list describes which user calls the transformation function:</p>
<ul>
<li>
<p>If a transformation is specified for a rule used by a capture process, then the user who calls the transformation function is the capture user for the capture process.</p>
</li>
<li>
<p>If a transformation is specified for a rule used by a synchronous capture, then the user who calls the transformation function is the capture user for the synchronous capture.</p>
</li>
<li>
<p>If a transformation is specified for a rule used by a propagation, then the user who calls the transformation function is the owner of the source queue for the propagation.</p>
</li>
<li>
<p>If a transformation is specified on a rule used by an apply process, then the user who calls the transformation function is the apply user for the apply process.</p>
</li>
<li>
<p>If a transformation is specified on a rule used by a messaging client, then the user who calls the transformation function is the user who invokes the messaging client.</p>
</li>
</ul>
<p class="subhead2"><a id="CDEJJEFH"></a><a id="ARPLS68806"></a>Function Verification</p>
<p>This procedure does not verify that the specified transformation function exists. If the function does not exist, then an error is raised when an Oracle Streams client tries to invoke the transformation function.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS504" class="refsect2"><a id="CACIIBAE"></a>
<h3 class="refsect2">SET_TAG Procedure<a id="sthref11614"></a><a id="sthref11615"></a></h3>
<p>This procedure sets the binary tag for all redo entries subsequently generated by the current session. Each redo entry generated by DML or DDL statements in the current session will have this tag. This procedure affects only the current session.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CACGBIJI">&#34;GET_TAG Function&#34;</a></p>
</li>
<li>
<p><a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about tags</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11616"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.SET_TAG(
   tag  IN RAW  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11617"></a>Parameters</p>
<div id="ARPLS72448" class="tblformal">
<p class="titleintable"><a id="sthref11618"></a><a id="sthref11619"></a>Table 159-40 SET_TAG Procedure Parameters</p>
<table class="cellalignment4330" title="SET_TAG Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS.SET_TAG subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t175">Parameter</th>
<th class="cellalignment4328" id="r1c2-t175">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t175" headers="r1c1-t175">
<p><code dir="ltr">tag</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t175 r1c2-t175">
<p>The binary tag for all subsequent redo entries generated by the current session. A raw value is a sequence of bytes, and a byte is a sequence of bits.</p>
<p>By default, the tag for a session is <code dir="ltr">NULL</code>.</p>
<p>The size limit for a tag value is 2000 bytes.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11620"></a>Usage Notes</p>
<p>To set the tag to the hexadecimal value of <code dir="ltr">&#39;17&#39;</code> in the current session, run the following procedure:</p>
<pre dir="ltr">EXEC DBMS_STREAMS_ADM.SET_TAG(tag =&gt; HEXTORAW(&#39;17&#39;));
</pre>
<p>The following are considerations for the <code dir="ltr">SET_TAG</code> procedure:</p>
<ul>
<li>
<p>This procedure is not transactional. That is, the effects of <code dir="ltr">SET_TAG</code> cannot be rolled back.</p>
</li>
<li>
<p>If the <code dir="ltr">SET_TAG</code> procedure is run to set a non-<code dir="ltr">NULL</code> session tag before a data dictionary build has been performed on the database, then the redo entries for a transaction that started before the dictionary build might not include the specified tag value for the session. Therefore, perform a data dictionary build before using the <code dir="ltr">SET_TAG</code> procedure in a session. A data dictionary build happens when the <code dir="ltr">DBMS_CAPTURE_ADM.BUILD</code> procedure is run. The <code dir="ltr">BUILD</code> procedure can be run automatically when a capture process is created.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="d_cap_a.htm#i1003124">BUILD Procedure</a></div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS507" class="refsect2"><a id="i997937"></a>
<h3 class="refsect2">SET_UP_QUEUE Procedure<a id="sthref11621"></a><a id="sthref11622"></a><a id="sthref11623"></a><a id="sthref11624"></a><a id="sthref11625"></a></h3>
<p>This procedure creates a queue table and a <code dir="ltr">ANYDATA</code> queue.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11626"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.SET_UP_QUEUE(
   queue_table     IN  VARCHAR2  DEFAULT &#39;streams_queue_table&#39;,
   storage_clause  IN  VARCHAR2  DEFAULT NULL,
   queue_name      IN  VARCHAR2  DEFAULT &#39;streams_queue&#39;,
   queue_user      IN  VARCHAR2  DEFAULT NULL,
   comment         IN  VARCHAR2  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11627"></a>Parameters</p>
<div id="ARPLS68807" class="tblformal">
<p class="titleintable"><a id="sthref11628"></a><a id="sthref11629"></a>Table 159-41 SET_UP_QUEUE Procedure Parameters</p>
<table class="cellalignment4330" title="SET_UP_QUEUE Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.SET_UP_QUEUE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t177">Parameter</th>
<th class="cellalignment4328" id="r1c2-t177">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t177" headers="r1c1-t177">
<p><code dir="ltr">queue_table</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t177 r1c2-t177">
<p>The name of the queue table specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_table_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue_table</code>. If the schema is not specified, then the current user is the default.</p>
<p>If the queue table owner is not specified, then the procedure specifies the user who runs this procedure automatically as the queue table owner.</p>
<p>Queue table names can be a maximum of 24 bytes.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t177" headers="r1c1-t177">
<p><code dir="ltr">storage_clause</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t177 r1c2-t177">
<p>The storage clause for queue table</p>
<p>The storage parameter is included in the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statement when the queue table is created. You can specify any valid table storage clause.</p>
<p>If a tablespace is not specified here, then the procedure creates the queue table and all its related objects in the default user tablespace of the user who runs this procedure. If a tablespace is specified here, then the procedure creates the queue table and all its related objects in the tablespace specified in the storage clause.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure uses the storage characteristics of the tablespace in which the queue table is created.</p>
<p><span class="bold">See Also:</span> <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about storage clauses</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t177" headers="r1c1-t177">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t177 r1c2-t177">
<p>The name of the queue that will function as the <code dir="ltr">ANYDATA</code> queue, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">queue_name</span></code>. For example, <code dir="ltr">strmadmin.streams_queue</code>.</p>
<p>If the schema is not specified, then the procedure uses the queue table owner. The owner of the queue table must also be the owner of the queue. The queue owner automatically has privileges to perform all queue operations on the queue.</p>
<p>If the schema is not specified for this parameter, and the queue table owner is not specified in <code dir="ltr">queue_table</code>, then the current user is the default.</p>
<p>Queue names can be a maximum of 24 bytes.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t177" headers="r1c1-t177">
<p><code dir="ltr">queue_user</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t177 r1c2-t177">
<p>The name of the user who requires <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges for the queue. This user also is configured as a secure queue user of the queue. The queue user cannot grant these privileges to other users because they are not granted with the <code dir="ltr">GRANT</code> option.</p>
<p>If <code dir="ltr">NULL</code>, then the procedure does not grant any privileges. You can also grant queue privileges to the appropriate users using the <code dir="ltr">DBMS_AQADM</code> package.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t177" headers="r1c1-t177">
<p><code dir="ltr">comment</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t177 r1c2-t177">
<p>The comment for the queue</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CDEHJBDI"></a>Usage Notes</p>
<p>Set up includes the following actions:</p>
<ul>
<li>
<p>If the specified queue table does not exist, then this procedure runs the <code dir="ltr">CREATE_QUEUE_TABLE</code> procedure in the <code dir="ltr">DBMS_AQADM</code> package to create the queue table with the specified storage clause. If this procedure creates the queue table, then it creates a multiple consumer <code dir="ltr">ANYDATA</code> queue that is both a secure queue and a transactional queue.</p>
<p>Also, if the database is Oracle Database 10<span class="italic">g</span> release&nbsp;2 or later, the <code dir="ltr">sort_list</code> setting in <code dir="ltr">CREATE_QUEUE_TABLE</code> is set to <code dir="ltr">commit_time</code>. If the database is a release before Oracle Database 10<span class="italic">g</span> release&nbsp;2, the <code dir="ltr">sort_list</code> setting in <code dir="ltr">CREATE_QUEUE_TABLE</code> is set to <code dir="ltr">enq_time</code>.</p>
</li>
<li>
<p>If the specified queue table exists, then the queue uses the properties of the existing queue table.</p>
</li>
<li>
<p>If the specified queue name does not exist, then this procedure runs the <code dir="ltr">CREATE_QUEUE</code> procedure in the <code dir="ltr">DBMS_AQADM</code> package to create the queue.</p>
</li>
<li>
<p>This procedure starts the queue.</p>
</li>
<li>
<p>If a queue user is specified, then this procedure configures this user as a secure queue user of the queue and grants <code dir="ltr">ENQUEUE</code> and <code dir="ltr">DEQUEUE</code> privileges on the queue to the specified queue user.</p>
<p>To configure the queue user as a secure queue user, this procedure creates an Advanced Queuing agent with the same name as the user name, if one does not exist. If an agent with this name exists and is associated with the queue user only, then it is used. <code dir="ltr">SET_UP_QUEUE</code> then runs the <code dir="ltr">ENABLE_DB_ACCESS</code> procedure in the <code dir="ltr">DBMS_AQADM</code> package, specifying the agent and the user.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>To enqueue messages into and dequeue messages from a queue, a queue user must have <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_STREAMS_MESSAGING</code> package or the <code dir="ltr">DBMS_AQ</code> package. The <code dir="ltr">SET_UP_QUEUE</code> procedure does not grant this privilege.</p>
</li>
<li>
<p>If the agent that <code dir="ltr">SET_UP_QUEUE</code> tries to create exists and is associated with a user other than the user specified by <code dir="ltr">queue_user</code>, then the procedure raises an error. In this case, rename or remove the existing agent, and retry <code dir="ltr">SET_UP_QUEUE</code>.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS141" href="../STRMS/strms_adqueue.htm#STRMS141"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about secure queue users</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS867" class="refsect2"><a id="CDEJBFIE"></a>
<h3 class="refsect2">SPLIT_STREAMS Procedure<a id="sthref11630"></a><a id="sthref11631"></a><a id="sthref11632"></a></h3>
<p>This procedure splits one stream flowing from a capture process off from all of the other streams flowing from the capture process.</p>
<p>This procedure is intended for an Oracle Streams replication environment in which a capture process captures changes that are propagated to two or more destination databases. When one destination of a propagation stops accepting the captured changes, the changes remain in the capture process&#39;s queue. The queue can grow and begin to spill messages to the hard disk, degrading the performance of the Oracle Streams environment. A destination might stop accepting changes for several reasons. For example, the destination database might be down.</p>
<p>Specifically, this procedure performs the following actions:</p>
<ol>
<li id="CDEEIIDD">
<p>Creates a new queue at the database running the capture process. The new queue is called the cloned queue because it is a clone of the queue used by the original stream. The new queue will be used by the new, cloned capture process, and it will be the source queue for the new, cloned propagation.</p>
</li>
<li id="CDEDIBGI">
<p>Creates a new propagation that propagates messages from the source queue created in Step <a href="#CDEEIIDD">1</a> to the existing destination queue. The new propagation is called the cloned propagation because it is a clone of the propagation used by the original stream. The cloned propagation uses the same rule set as the original propagation.</p>
</li>
<li>
<p>Stops the capture process.</p>
</li>
<li id="CDECBEEA">
<p>Queries the acknowledge SCN for the original propagation. The acknowledged SCN is the last SCN acknowledged by the apply process that applies the changes sent by the propagation.</p>
</li>
<li>
<p>Creates a new capture process. The new capture process is called the cloned capture process because it is a clone of the capture process used by the original stream. The procedure sets the start SCN for the cloned capture process to the value of the acknowledged SCN queried in Step <a href="#CDECBEEA">4</a>. The cloned capture process uses the same rule set as the original capture process.</p>
</li>
<li>
<p>Drops the original propagation.</p>
</li>
<li>
<p>Starts the original capture process with the start SCN set to the acknowledged SCN queried in Step <a href="#CDECBEEA">4</a>.</p>
</li>
<li>
<p>If the <code dir="ltr">auto_merge_threshold</code> parameter is set to a positive number, then creates an Oracle Scheduler job to run the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure at set intervals according to its schedule. When the two streams are within the specified merge threshold, the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure runs the <code dir="ltr">MERGE_STREAMS</code> procedure to merge the streams automatically.</p>
</li>
</ol>
<p>After the <code dir="ltr">SPLIT_STREAMS</code> procedure has finished running, the cloned capture process is disabled. When the problem at the destination database is solved, and the destination queue can accept changes, you should start the cloned capture process using the <code dir="ltr">START_CAPTURE</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package.</p>
<p>The <code dir="ltr">DBA_STREAMS_SPLIT_MERGE</code> view contains the name of each cloned component and information about the split and merge operation.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the original capture process is a downstream capture process, then you must configure the cloned capture process to read the redo log from the source database before you start the cloned capture process.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CDECACGG">&#34;MERGE_STREAMS Procedure&#34;</a></p>
</li>
<li>
<p><a href="#BABBBGGH">&#34;MERGE_STREAMS_JOB Procedure&#34;</a></p>
</li>
<li>
<p><a class="olink STREP144" href="../STREP/man_gen_rep.htm#STREP144"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for instructions on using the <code dir="ltr">SPLIT_STREAMS</code> procedure</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11633"></a>Syntax</p>
<pre dir="ltr">DBMS_STREAMS_ADM.SPLIT_STREAMS(
   propagation_name         IN      VARCHAR2,
   cloned_propagation_name  IN      VARCHAR2  DEFAULT NULL,
   cloned_queue_name        IN      VARCHAR2  DEFAULT NULL,
   cloned_capture_name      IN      VARCHAR2  DEFAULT NULL,
   perform_actions          IN      BOOLEAN   DEFAULT TRUE,
   script_name              IN      VARCHAR2  DEFAULT NULL,
   script_directory_object  IN      VARCHAR2  DEFAULT NULL,
   auto_merge_threshold     IN      NUMBER    DEFAULT NULL,
   schedule_name            IN OUT  VARCHAR2,
   merge_job_name           IN OUT  VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11634"></a>Parameters</p>
<div id="ARPLS68808" class="tblformal">
<p class="titleintable"><a id="sthref11635"></a><a id="sthref11636"></a>Table 159-42 SPLIT_STREAMS Procedure Parameters</p>
<table class="cellalignment4330" title="SPLIT_STREAMS Procedure Parameters" summary="This table describes the Parameters of DBMS_STREAMS_ADM.SPLIT_STREAMS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t182">Parameter</th>
<th class="cellalignment4328" id="r1c2-t182">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t182" headers="r1c1-t182">
<p><code dir="ltr">propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t182 r1c2-t182">
<p>The name of the propagation that cannot send messages to its destination queue. The specified propagation is the propagation for the stream that is being split off from the other streams. You must specify an existing propagation name. Do not specify an owner.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t182" headers="r1c1-t182">
<p><code dir="ltr">cloned_propagation_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t182 r1c2-t182">
<p>The name of the new propagation created by this procedure for the stream that is split off. If <code dir="ltr">NULL</code>, then the system generates a propagation name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t182" headers="r1c1-t182">
<p><code dir="ltr">cloned_queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t182 r1c2-t182">
<p>The name of the new queue created by this procedure for the stream that is split off. If <code dir="ltr">NULL</code>, then the system generates a queue name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t182" headers="r1c1-t182">
<p><code dir="ltr">cloned_capture_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t182 r1c2-t182">
<p>The name of the new capture process created by this procedure for the stream that is split off. If <code dir="ltr">NULL</code>, then the system generates a capture process name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t182" headers="r1c1-t182">
<p><code dir="ltr">perform_actions</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t182 r1c2-t182">
<p>If <code dir="ltr">TRUE</code>, then the procedure performs the necessary actions to split the stream directly.</p>
<p>If <code dir="ltr">FALSE</code>, then the procedure does not perform the necessary actions to split the stream directly.</p>
<p>Specify <code dir="ltr">FALSE</code> when this procedure is generating a script that you can edit and then run. The procedure raises an error if you specify <code dir="ltr">FALSE</code> and either of the following parameters is <code dir="ltr">NULL</code>:</p>
<ul>
<li>
<p><code dir="ltr">script_name</code></p>
</li>
<li>
<p><code dir="ltr">script_directory_object</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t182" headers="r1c1-t182">
<p><code dir="ltr">script_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t182 r1c2-t182">
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then specify the name of the script generated by this procedure. The script contains all of the statements used to split the stream. If a file with the specified script name exists in the specified directory for the <code dir="ltr">script_directory_object</code> parameter, then the procedure appends the statements to the existing file.</p>
<p>If non-<code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then the procedure generates the specified script and performs the actions to split the stream directly.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">TRUE</code>, then the procedure performs the actions to split the stream directly and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">perform_actions</code> parameter is <code dir="ltr">FALSE</code>, then the procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t182" headers="r1c1-t182">
<p><code dir="ltr">script_directory_object</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t182 r1c2-t182">
<p>The directory object for the directory on the local computer system into which the generated script is placed.</p>
<p>If the <code dir="ltr">script_name</code> parameter is <code dir="ltr">NULL</code>, then the procedure ignores this parameter and does not generate a script.</p>
<p>If <code dir="ltr">NULL</code> and the <code dir="ltr">script_name</code> parameter is non-<code dir="ltr">NULL</code>, then the procedure raises an error.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Oracle Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t182" headers="r1c1-t182">
<p><code dir="ltr">auto_merge_threshold</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t182 r1c2-t182">
<p>If a positive number is specified, then the stream that was split off is automatically merged back into all of the other streams flowing from the capture process by an Oracle Scheduler job. The job runs the <code dir="ltr">MERGE_STREAMS_JOB</code> procedure at set intervals according to its schedule. The value of the <code dir="ltr">CAPTURE_MESSAGE_CREATE_TIME</code> column for each capture process in the <code dir="ltr">GV$STREAMS_CAPTURE</code> dynamic performance view determines when the streams are merged. Specifically, if the difference, in seconds, between <code dir="ltr">CAPTURE_MESSAGE_CREATE_TIME</code> of the cloned capture process and the original capture process is less than or equal to the value specified for the <code dir="ltr">auto_merge_threshold</code> parameter, then the two streams are merged automatically. The cloned capture process must be started before the split stream can be merged back with the original stream.</p>
<p>If <code dir="ltr">NULL</code> or <code dir="ltr">0</code> (zero) is specified, then the split stream is not merged back with the original stream automatically. To merge the split stream with the original stream, run the <code dir="ltr">MERGE_STREAM</code> procedure manually when the <code dir="ltr">CAPTURE_MESSAGE_CREATE_TIME</code> of the cloned capture process catches up to, or nearly catches up to, the <code dir="ltr">CAPTURE_MESSAGE_CREATE_TIME</code> of the original capture process.</p>
<p>The <code dir="ltr">CAPTURE_MESSAGE_CREATE_TIME</code> records the time when a captured change was recorded in the redo log.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t182" headers="r1c1-t182">
<p><code dir="ltr">schedule_name</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t182 r1c2-t182">
<p>The Oracle Scheduler schedule name, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">schedule_name</span></code>. For example, <code dir="ltr">strmadmin.merge_schedule</code>. If the schema is not specified, then the current user is the default.</p>
<p>If <code dir="ltr">auto_merge_threshold</code> is a non-<code dir="ltr">NULL</code> positive number, then the schedule is used by the job that will automatically merge the streams at the appropriate time. You can specify a schedule name to adhere to naming conventions or to track the schedule more easily.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">auto_merge_threshold</code> is a non-<code dir="ltr">NULL</code> positive number, then the system generates a schedule name.</p>
<p>If <code dir="ltr">auto_merge_threshold</code> is <code dir="ltr">NULL</code> or <code dir="ltr">0</code> (zero), then this parameter must be <code dir="ltr">NULL</code>.</p>
<p>If this procedure creates a schedule, the schedule starts when the procedure completes. You can modify the schedule to control how often the merge job is run.</p>
<p>If an existing schedule name is specified, an error is raised.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t182" headers="r1c1-t182">
<p><code dir="ltr">merge_job_name</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t182 r1c2-t182">
<p>The Oracle Scheduler job name, specified as <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">schema_name</span></code><code dir="ltr">.]</code><code dir="ltr"><span class="codeinlineitalic">merge_job_name</span></code>. For example, <code dir="ltr">strmadmin.merge_job</code>. If the schema is not specified, then the current user is the default.</p>
<p>If <code dir="ltr">auto_merge_threshold</code> is a non-<code dir="ltr">NULL</code> positive number, then the job will automatically merge the streams at the appropriate time. Specify a merge job name to adhere to naming conventions or to track the job more easily.</p>
<p>If <code dir="ltr">NULL</code> and <code dir="ltr">auto_merge_threshold</code> is a non-<code dir="ltr">NULL</code> positive number, then the system generates a job name.</p>
<p>If <code dir="ltr">auto_merge_threshold</code> is <code dir="ltr">NULL</code> or <code dir="ltr">0</code> (zero), then this parameter must be <code dir="ltr">NULL</code>.</p>
<p>If an existing job name is specified, an error is raised.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN035" href="../ADMIN/schedadmin.htm#ADMIN035"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about Oracle Scheduler</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_streams.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_streams_adv.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>