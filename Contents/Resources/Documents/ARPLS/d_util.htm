<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2375"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_UTILITY"></a><title>DBMS_UTILITY</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:53Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_types.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_warn.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">178/290</span> <!-- End Header -->
<div id="ARPLS73195" class="chapter"><a id="CHDGHICD"></a>
<h1 class="chapter"><span class="secnum">174</span> DBMS_UTILITY</h1>
<p>The <a id="sthref12132"></a>DBMS_UTILITY package provides various utility subprograms.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDBAEAD">Using DBMS_UTILITY</a></p>
<ul>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
<li>
<p>Exceptions</p>
</li>
</ul>
</li>
<li>
<p><a href="#BABDIFFD">Data Structures</a></p>
<ul>
<li>
<p>Record Types</p>
</li>
<li>
<p>Table Types</p>
</li>
</ul>
</li>
<li>
<p><a href="#i996767">Summary of DBMS_UTILITY Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDBAEAD"></a>
<div id="ARPLS73196" class="refsect1">
<h2 class="refsect1">Using DBMS_UTILITY</h2>
<ul>
<li>
<p><a href="#i1003189">Security Model</a></p>
</li>
<li>
<p><a href="#BABIFIDB">Constants</a></p>
</li>
<li>
<p><a href="#BABGEIIF">Exceptions</a></p>
</li>
</ul>
<div id="ARPLS73197" class="refsect2"><a id="i1003189"></a>
<h3 class="refsect2">Security Model</h3>
<p><code dir="ltr">DBMS_UTILITY</code> runs with the privileges of the calling user for the <a href="#i997271">NAME_RESOLVE Procedure</a> and the <a href="#i1002332">COMPILE_SCHEMA Procedure</a>. This is necessary so that the SQL works correctly.</p>
<p>The package does not run as <code dir="ltr">SYS</code>. The privileges are checked using <code dir="ltr">DBMS_DDL</code>.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS73198" class="refsect2"><a id="BABIFIDB"></a>
<h3 class="refsect2">Constants</h3>
<p>The <code dir="ltr">DBMS_UTILITY</code> package uses the constants shown in <a href="#BABHCEHG">Table 174-1, &#34;DBMS_UTILITY Constants&#34;</a>.</p>
<div id="ARPLS73199" class="tblformal">
<p class="titleintable"><a id="sthref12133"></a><a id="BABHCEHG"></a>Table 174-1 DBMS_UTILITY Constants</p>
<table class="cellalignment4330" title="DBMS_UTILITY Constants" summary="This table describes constants supported by DBMS_UTILITY subprograms." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t2">Name</th>
<th class="cellalignment4328" id="r1c2-t2">Type</th>
<th class="cellalignment4328" id="r1c3-t2">Value</th>
<th class="cellalignment4328" id="r1c4-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t2" headers="r1c1-t2">
<p><code dir="ltr">INV_ERROR_ON_RESTRICTIONS</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t2 r1c2-t2">
<p><code dir="ltr">PLS_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t2 r1c3-t2">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t2 r1c4-t2">
<p>This constant is the only legal value for the <code dir="ltr">p_option_flags</code> parameter of the INVALIDATE subprogram</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73200" class="refsect2"><a id="BABGEIIF"></a>
<h3 class="refsect2">Exceptions</h3>
<p>The following table lists the exceptions raised by <code dir="ltr">DBMS_UTILITY</code>.</p>
<div id="ARPLS73201" class="tblformal">
<p class="titleintable"><a id="sthref12134"></a><a id="sthref12135"></a>Table 174-2 Exceptions Raised by DBMS_UTILITY</p>
<table class="cellalignment4330" title="Exceptions Raised by DBMS_UTILITY" summary="This table describes exceptions raised by DBMS_UTILITY subprograms." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t3">Exception</th>
<th class="cellalignment4328" id="r1c2-t3">Error Code</th>
<th class="cellalignment4328" id="r1c3-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">INV_NOT_EXIST_OR_NO_PRIV</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c2-t3">
<p>-24237</p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c3-t3">
<p>Raised by the <code dir="ltr">INVALIDATE</code> subprogram when the <code dir="ltr">object_id</code> argument is <code dir="ltr">NULL</code> or invalid, or when the caller does not have <code dir="ltr">CREATE</code> privileges on the object being invalidated</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">INV_MALFORMED_SETTINGS</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c2-t3">
<p>-24238</p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c3-t3">
<p>Raised by the <code dir="ltr">INVALIDATE</code> subprogram if a compiler setting is specified more than once in the <code dir="ltr">p_plsql_object_settings</code> parameter</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">INV_RESTRICTED_OBJECT</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c2-t3">
<p>-24239</p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c3-t3">
<p>Raised by the <code dir="ltr">INVALIDATE</code> subprogram when different combinations of conditions pertaining to the <code dir="ltr">p_object_id</code> parameter are contravened</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="BABDIFFD"></a>
<div id="ARPLS73202" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Data Structures</h2>
<p>The <code dir="ltr">DBMS_UTILITY</code> package defines a single <code dir="ltr">RECORD</code> type and <code dir="ltr">TABLE</code> types.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12136"></a>Record Types</p>
<ul>
<li>
<p><a href="#BABIJGCI">INSTANCE_RECORD Record Type</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12137"></a>Table Types</p>
<ul>
<li>
<p><a href="#BABIEDJD">DBLINK_ARRAY TABLE Type</a></p>
</li>
<li>
<p><a href="#BABCHBDA">INDEX_TABLE_TYPE Table Type</a></p>
</li>
<li>
<p><a href="#BABBJFEI">INSTANCE_TABLE Table Type</a></p>
</li>
<li>
<p><a href="#BABIAHAI">LNAME_ARRAY Table Type</a></p>
</li>
<li>
<p><a href="#BABGJIHI">NAME_ARRAY Table Type</a></p>
</li>
<li>
<p><a href="#BABBAECG">NUMBER_ARRAY Table Type</a></p>
</li>
<li>
<p><a href="#BABFACEJ">UNCL_ARRAY Table Type</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div id="ARPLS73203" class="refsect2"><a id="BABIJGCI"></a>
<h3 class="refsect2"><a id="sthref12138"></a>INSTANCE_RECORD Record Type</h3>
<p>This type describes a list of active instance number-name pairs.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12139"></a>Syntax</p>
<pre dir="ltr">  TYPE INSTANCE_RECORD IS RECORD (
       inst_number   NUMBER,
       inst_name     VARCHAR2(60));
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12140"></a>Fields</p>
<div id="ARPLS73204" class="tblformal">
<p class="titleintable"><a id="sthref12141"></a><a id="sthref12142"></a>Table 174-3 INSTANCE_RECORD Record Type Fields</p>
<table class="cellalignment4330" title="INSTANCE_RECORD Record Type Fields" summary="This table describes the fields of the INSTANCE_RECORD Record Type" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Field</th>
<th class="cellalignment4328" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">inst_number</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p>Active instance number</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">inst_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<p>Instance name</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73205" class="refsect2"><a id="BABIEDJD"></a>
<h3 class="refsect2"><a id="sthref12143"></a>DBLINK_ARRAY TABLE Type</h3>
<p>This type stores a list of database links.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12144"></a>Syntax</p>
<pre dir="ltr">TYPE DBLINK_ARRAY IS TABLE OF VARCHAR2(128) INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73206" class="refsect2"><a id="BABCHBDA"></a>
<h3 class="refsect2"><a id="sthref12145"></a>INDEX_TABLE_TYPE Table Type</h3>
<p>This type describes the order in which generated objects are returned to a user.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12146"></a>Syntax</p>
<pre dir="ltr">TYPE INDEX_TABLE_TYPE IS TABLE OF BINARY_INTEGER INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73207" class="refsect2"><a id="BABBJFEI"></a>
<h3 class="refsect2"><a id="sthref12147"></a>INSTANCE_TABLE Table Type</h3>
<p>This type describes a table of <a href="#BABIJGCI">INSTANCE_RECORD Record Type</a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12148"></a>Syntax</p>
<pre dir="ltr">TYPE INSTANCE_TABLE IS TABLE OF INSTANCE_RECORD INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12149"></a>Usage Notes</p>
<p>The starting index of <code dir="ltr">INSTANCE_TABLE</code> Is 1; <code dir="ltr">INSTANCE_TABLE</code> Is Dense.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73208" class="refsect2"><a id="BABIAHAI"></a>
<h3 class="refsect2"><a id="sthref12150"></a>LNAME_ARRAY Table Type</h3>
<p>This type stores lists of <code dir="ltr">LONG</code> <code dir="ltr">NAME</code> including fully qualified attribute names.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12151"></a>Syntax</p>
<pre dir="ltr">TYPE LNAME_ARRAY IS TABLE OF VARCHAR2(4000) INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73209" class="refsect2"><a id="BABGJIHI"></a>
<h3 class="refsect2"><a id="sthref12152"></a>NAME_ARRAY Table Type</h3>
<p>This type stores lists of <code dir="ltr">NAME</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12153"></a>Syntax</p>
<pre dir="ltr">TYPE NAME_ARRAY IS TABLE OF VARCHAR2(30) INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73210" class="refsect2"><a id="BABBAECG"></a>
<h3 class="refsect2"><a id="sthref12154"></a>NUMBER_ARRAY Table Type</h3>
<p>This type describes the order in which generated objects are returned to users.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12155"></a>Syntax</p>
<pre dir="ltr">TYPE NUMBER_ARRAY IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73211" class="refsect2"><a id="BABFACEJ"></a>
<h3 class="refsect2"><a id="sthref12156"></a>UNCL_ARRAY Table Type</h3>
<p>This type stores lists of &#34;<code dir="ltr">user</code>&#34;.&#34;<code dir="ltr">name</code>&#34;.&#34;<code dir="ltr">column</code>&#34;<code dir="ltr">@link</code></p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12157"></a>Syntax</p>
<pre dir="ltr">TYPE UNCL_ARRAY IS TABLE OF VARCHAR2(227) INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i996767"></a>
<div id="ARPLS73212" class="refsect1">
<h2 class="refsect1">Summary of DBMS_UTILITY Subprograms</h2>
<div id="ARPLS73213" class="tblformal">
<p class="titleintable"><a id="sthref12158"></a><a id="sthref12159"></a>Table 174-4 <span class="bolditalic">DBMS_UTILITY Package Subprograms</span></p>
<table class="cellalignment4330" title="DBMS_UTILITY Package Subprograms" summary="This table lists the DBMS_UTILITY subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><a href="#CIHGBJBF">ACTIVE_INSTANCES Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p>Returns the active instance</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t5" headers="r1c1-t5">
<p><a href="#BABDDBFI">ANALYZE_DATABASE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c2-t5">
<p>Analyzes all the tables, clusters and indexes in a database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t5" headers="r1c1-t5">
<p><a href="#i1002400">ANALYZE_PART_OBJECT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t5 r1c2-t5">
<p>Analyzes the given tables and indexes</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t5" headers="r1c1-t5">
<p><a href="#BABGDEAI">ANALYZE_SCHEMA Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t5 r1c2-t5">
<p>Analyzes all the tables, clusters and indexes in a schema</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t5" headers="r1c1-t5">
<p><a href="#i1004667">CANONICALIZE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t5 r1c2-t5">
<p>Canonicalizes a given string</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t5" headers="r1c1-t5">
<p><a href="#i1002468">COMMA_TO_TABLE Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t5 r1c2-t5">
<p>Converts a comma-delimited list of names into a PL/SQL table of names</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t5" headers="r1c1-t5">
<p><a href="#i1002332">COMPILE_SCHEMA Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t5 r1c2-t5">
<p>Compiles all procedures, functions, packages, views and triggers in the specified schema</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t5" headers="r1c1-t5">
<p><a href="#i1004185">CREATE_ALTER_TYPE_ERROR_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r9c1-t5 r1c2-t5">
<p>Creates an error table to be used in the <code dir="ltr">EXCEPTION</code> clause of the <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t5" headers="r1c1-t5">
<p><a href="#i1002512">CURRENT_INSTANCE Function</a></p>
</td>
<td class="cellalignment4329" headers="r10c1-t5 r1c2-t5">
<p>Returns the current connected instance number</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t5" headers="r1c1-t5">
<p><a href="#i1002531">DATA_BLOCK_ADDRESS_BLOCK Function</a></p>
</td>
<td class="cellalignment4329" headers="r11c1-t5 r1c2-t5">
<p>Gets the block number part of a data block address</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t5" headers="r1c1-t5">
<p><a href="#i1002627">DATA_BLOCK_ADDRESS_FILE Function</a></p>
</td>
<td class="cellalignment4329" headers="r12c1-t5 r1c2-t5">
<p>Gets the file number part of a data block address</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t5" headers="r1c1-t5">
<p><a href="#i1002631">DB_VERSION Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r13c1-t5 r1c2-t5">
<p>Returns version information for the database</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t5" headers="r1c1-t5">
<p><a href="#i1002666">EXEC_DDL_STATEMENT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r14c1-t5 r1c2-t5">
<p>Executes the DDL statement in <code dir="ltr">parse_string</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t5" headers="r1c1-t5">
<p><a href="#BJEIAEBB">EXPAND_SQL_TEXT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r15c1-t5 r1c2-t5">
<p>Recursively replaces any view references in the input SQL query with the corresponding view subquery</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t5" headers="r1c1-t5">
<p><a href="#i997163">FORMAT_CALL_STACK Function</a></p>
</td>
<td class="cellalignment4329" headers="r16c1-t5 r1c2-t5">
<p>Formats the current call stack</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t5" headers="r1c1-t5">
<p><a href="#i1003874">FORMAT_ERROR_BACKTRACE Function</a></p>
</td>
<td class="cellalignment4329" headers="r17c1-t5 r1c2-t5">
<p>Formats the backtrace from the point of the current error to the exception handler where the error has been caught</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t5" headers="r1c1-t5">
<p><a href="#i1002463">FORMAT_ERROR_STACK Function</a></p>
</td>
<td class="cellalignment4329" headers="r18c1-t5 r1c2-t5">
<p>Formats the current error stack</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t5" headers="r1c1-t5">
<p><a href="#i1003768">GET_CPU_TIME Function</a></p>
</td>
<td class="cellalignment4329" headers="r19c1-t5 r1c2-t5">
<p>Returns the current CPU time in 100th&#39;s of a second</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t5" headers="r1c1-t5">
<p><a href="#i1004023">GET_DEPENDENCY Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r20c1-t5 r1c2-t5">
<p>Shows the dependencies on the object passed in.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t5" headers="r1c1-t5">
<p><a href="#BABHABJA">GET_ENDIANNESS Function</a></p>
</td>
<td class="cellalignment4329" headers="r21c1-t5 r1c2-t5">
<p>Gets the endianness of the database platform</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r22c1-t5" headers="r1c1-t5">
<p><a href="#i1003646">GET_HASH_VALUE Function</a></p>
</td>
<td class="cellalignment4329" headers="r22c1-t5 r1c2-t5">
<p>Computes a hash value for the given string</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r23c1-t5" headers="r1c1-t5">
<p><a href="#i997189">GET_PARAMETER_VALUE Function</a></p>
</td>
<td class="cellalignment4329" headers="r23c1-t5 r1c2-t5">
<p>Gets the value of specified init.ora parameter</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r24c1-t5" headers="r1c1-t5">
<p><a href="#BABDBIHF">GET_SQL_HASH Function</a></p>
</td>
<td class="cellalignment4329" headers="r24c1-t5 r1c2-t5">
<p>Computes a hash value for the given string using MD5 algorithm</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r25c1-t5" headers="r1c1-t5">
<p><a href="#i1002765">GET_TIME Function</a></p>
</td>
<td class="cellalignment4329" headers="r25c1-t5 r1c2-t5">
<p>Returns the current time in 100th&#39;s of a second</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r26c1-t5" headers="r1c1-t5">
<p><a href="#BJEFCEEF">GET_TZ_TRANSITIONS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r26c1-t5 r1c2-t5">
<p>Returns timezeone transitions by <code dir="ltr">regionid</code> from the <code dir="ltr">timezone.dat</code> file</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r27c1-t5" headers="r1c1-t5">
<p><a href="#BABFDACJ">INVALIDATE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r27c1-t5 r1c2-t5">
<p>Invalidates a database object and (optionally) modifies its PL/SQL compiler parameter settings</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r28c1-t5" headers="r1c1-t5">
<p><a href="#BJEDEHEI">IS_BIT_SET Function</a></p>
</td>
<td class="cellalignment4329" headers="r28c1-t5 r1c2-t5">
<p>Checks the bit setting for the given bit in the given <code dir="ltr">RAW</code> value</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r29c1-t5" headers="r1c1-t5">
<p><a href="#i1002749">IS_CLUSTER_DATABASE Function</a></p>
</td>
<td class="cellalignment4329" headers="r29c1-t5 r1c2-t5">
<p>Determines if the database is running in cluster database mode</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r30c1-t5" headers="r1c1-t5">
<p><a href="#i1002839">MAKE_DATA_BLOCK_ADDRESS Function</a></p>
</td>
<td class="cellalignment4329" headers="r30c1-t5 r1c2-t5">
<p>Creates a data block address given a file number and a block number</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r31c1-t5" headers="r1c1-t5">
<p><a href="#i997271">NAME_RESOLVE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r31c1-t5 r1c2-t5">
<p>Resolves the given name</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r32c1-t5" headers="r1c1-t5">
<p><a href="#BJEFIFBJ">NAME_TOKENIZE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r32c1-t5 r1c2-t5">
<p>Calls the parser to parse the given name</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r33c1-t5" headers="r1c1-t5">
<p><a href="#BABICAFJ">OLD_CURRENT_SCHEMA Function</a></p>
</td>
<td class="cellalignment4329" headers="r33c1-t5 r1c2-t5">
<p>Returns the session value from <code dir="ltr">SYS_CONTEXT</code> (&#39;<code dir="ltr">USERENV</code>&#39;, &#39;<code dir="ltr">CURRENT_SCHEMA</code>&#39;)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r34c1-t5" headers="r1c1-t5">
<p><a href="#BABFFEIB">OLD_CURRENT_USER Function</a></p>
</td>
<td class="cellalignment4329" headers="r34c1-t5 r1c2-t5">
<p>Returns the session value from <code dir="ltr">SYS_CONTEXT</code> (&#39;<code dir="ltr">USERENV</code>&#39;, &#39;<code dir="ltr">CURRENT_USER</code>&#39;)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r35c1-t5" headers="r1c1-t5">
<p><a href="#i997419">PORT_STRING Function</a></p>
</td>
<td class="cellalignment4329" headers="r35c1-t5 r1c2-t5">
<p>Returns a string that uniquely identifies the version of Oracle and the operating system</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r36c1-t5" headers="r1c1-t5">
<p><a href="#BABEBJAI">SQLID_TO_SQLHASH Function</a></p>
</td>
<td class="cellalignment4329" headers="r36c1-t5 r1c2-t5">
<p>Converts a SQL ID into a hash value</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r37c1-t5" headers="r1c1-t5">
<p><a href="#i1002844">TABLE_TO_COMMA Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r37c1-t5 r1c2-t5">
<p>Converts a PL/SQL table of names into a comma-delimited list of names</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r38c1-t5" headers="r1c1-t5">
<p><a href="#i1005273">VALIDATE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r38c1-t5 r1c2-t5">
<p>Makes invalid database objects valid</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r39c1-t5" headers="r1c1-t5">
<p><a href="#BABCAEFB">WAIT_ON_PENDING_DML Function</a></p>
</td>
<td class="cellalignment4329" headers="r39c1-t5 r1c2-t5">
<p>Waits until all transactions (other than the caller&#39;s own) that have locks on the listed tables and began prior to the specified SCN have either committed or been rolled back</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS73214" class="refsect2"><a id="CIHGBJBF"></a>
<h3 class="refsect2"><a id="sthref12160"></a>ACTIVE_INSTANCES Procedure</h3>
<p>This procedure returns the active instance.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12161"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.ACTIVE_INSTANCES (
   instance_table   OUT INSTANCE_TABLE,
   instance_count   OUT NUMBER); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12162"></a>Parameters</p>
<div id="ARPLS73215" class="tblformal">
<p class="titleintable"><a id="sthref12163"></a><a id="sthref12164"></a>Table 174-5 ACTIVE_INSTANCES Procedure Parameters</p>
<table class="cellalignment4330" title="ACTIVE_INSTANCES Procedure Parameters" summary="This table describes the Parameters of DBMS_UTILITY.ACTIVE_INSTANCES subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t6">Procedure</th>
<th class="cellalignment4328" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">instance_table</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c2-t6">
<p>Contains a list of the active instance numbers and names. When no instance is up, the list is empty.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t6" headers="r1c1-t6">
<p><code dir="ltr">instance_count</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c2-t6">
<p>Number of active instances</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73216" class="refsect2"><a id="BABDDBFI"></a>
<h3 class="refsect2"><a id="sthref12165"></a>ANALYZE_DATABASE Procedure</h3>
<p>This procedure analyzes all the tables, clusters and indexes in a database.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12166"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.ANALYZE_DATABASE (
   method             IN  VARCHAR2,
   estimate_rows      IN  NUMBER DEFAULT NULL,
   estimate_percent   IN  NUMBER DEFAULT NULL,
   method_opt         IN  VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12167"></a>Parameters</p>
<div id="ARPLS73217" class="tblformal">
<p class="titleintable"><a id="sthref12168"></a><a id="sthref12169"></a>Table 174-6 ANALYZE_DATABASE Procedure Parameters</p>
<table class="cellalignment4330" title="ANALYZE_DATABASE Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.ANALYZE_PART_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t7">Parameter</th>
<th class="cellalignment4328" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">method</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t7 r1c2-t7">
<p>One of <code dir="ltr">ESTIMATE</code>, <code dir="ltr">COMPUTE</code> or <code dir="ltr">DELETE</code>. If <code dir="ltr">ESTIMATE</code> then either <code dir="ltr">estimate_rows</code> or <code dir="ltr">estimate_percent</code> must be nonzero.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">estimate_rows</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t7 r1c2-t7">
<p>Number of rows to estimate</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t7" headers="r1c1-t7">
<p><code dir="ltr">estimate_percent</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t7 r1c2-t7">
<p>Percentage of rows to estimate. If <code dir="ltr">estimate_rows</code> is specified ignore this parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t7" headers="r1c1-t7">
<p><code dir="ltr">method_opt</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t7 r1c2-t7">
<p>Method options of the following format:</p>
<p>[ <code dir="ltr">FOR</code> <code dir="ltr">TABLE</code> ]</p>
<p>[ <code dir="ltr">FOR</code> <code dir="ltr">ALL</code> [<code dir="ltr">INDEXED</code>] <code dir="ltr">COLUMNS</code>] [<code dir="ltr">SIZE</code> <code dir="ltr">n</code>]</p>
<p>[ <code dir="ltr">FOR</code> <code dir="ltr">ALL</code> <code dir="ltr">INDEXES</code> ]</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12170"></a>Exceptions</p>
<p><code dir="ltr">ORA</code>-<code dir="ltr">20000</code>: Insufficient privileges for some object in this database</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73218" class="refsect2"><a id="i1002400"></a>
<h3 class="refsect2"><a id="sthref12171"></a>ANALYZE_PART_OBJECT Procedure</h3>
<p>This procedure is equivalent to SQL:</p>
<pre dir="ltr">&#34;ANALYZE TABLE|INDEX [&lt;schema&gt;.]&lt;object_name&gt; PARTITION &lt;pname&gt; [&lt;command_type&gt;] [&lt;command_opt&gt;] [&lt;sample_clause&gt;] 
</pre>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12172"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.ANALYZE_PART_OBJECT (
   schema        IN VARCHAR2 DEFAULT NULL,
   object_name   IN VARCHAR2 DEFAULT NULL,
   object_type   IN CHAR     DEFAULT &#39;T&#39;,
   command_type  IN CHAR     DEFAULT &#39;E&#39;,
   command_opt   IN VARCHAR2 DEFAULT NULL,
   sample_clause IN VARCHAR2 DEFAULT &#39;sample 5 percent &#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12173"></a>Parameters</p>
<div id="ARPLS73219" class="tblformal">
<p class="titleintable"><a id="sthref12174"></a><a id="sthref12175"></a>Table 174-7 ANALYZE_PART_OBJECT Procedure Parameters</p>
<table class="cellalignment4330" title="ANALYZE_PART_OBJECT Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.ANALYZE_PART_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Parameter</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">schema</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>Schema of the <code dir="ltr">object_name</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t8 r1c2-t8">
<p>Name of object to be analyzed, must be partitioned</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t8" headers="r1c1-t8">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t8 r1c2-t8">
<p>Type of object, must be <code dir="ltr">T</code> (table) or <code dir="ltr">I</code> (index)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t8" headers="r1c1-t8">
<p><code dir="ltr">command_type</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t8 r1c2-t8">
<p>Must be <code dir="ltr">V</code> (validate structure)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t8" headers="r1c1-t8">
<p><code dir="ltr">command_opt</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t8 r1c2-t8">
<p>Other options for the command type.</p>
<p>For <code dir="ltr">C</code>, <code dir="ltr">E</code> it can be <code dir="ltr">FOR</code> table, <code dir="ltr">FOR</code> all <code dir="ltr">LOCAL</code> indexes, <code dir="ltr">FOR</code> all columns or combination of some of the &#39;for&#39; options of analyze statistics (table). For <code dir="ltr">V</code>, it can be <code dir="ltr">CASCADE</code> when <code dir="ltr">object_type</code> is T.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t8" headers="r1c1-t8">
<p><code dir="ltr">sample_clause</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t8 r1c2-t8">
<p>Sample clause to use when <code dir="ltr">command_type</code> is &#39;<code dir="ltr">E</code>&#39;</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12176"></a>Usage Notes</p>
<p>For each partition of the object, run in parallel using job queues.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73220" class="refsect2"><a id="BABGDEAI"></a>
<h3 class="refsect2"><a id="sthref12177"></a>ANALYZE_SCHEMA Procedure</h3>
<p>This procedure analyzes all the tables, clusters and indexes in a schema.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12178"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.ANALYZE_SCHEMA (
   schema             IN  VARCHAR2,
   method             IN  VARCHAR2,
   estimate_rows      IN  NUMBER DEFAULT NULL,
   estimate_percent   IN  NUMBER DEFAULT NULL,
   method_opt         IN  VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12179"></a>Parameters</p>
<div id="ARPLS73221" class="tblformal">
<p class="titleintable"><a id="sthref12180"></a><a id="sthref12181"></a>Table 174-8 ANALYZE_SCHEMA Procedure Parameters</p>
<table class="cellalignment4330" title="ANALYZE_SCHEMA Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.ANALYZE_PART_OBJECT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t9">Parameter</th>
<th class="cellalignment4328" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">schema</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c2-t9">
<p>Name of the schema</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t9" headers="r1c1-t9">
<p><code dir="ltr">method</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c2-t9">
<p>One of <code dir="ltr">ESTIMATE</code>, <code dir="ltr">COMPUTE</code> or <code dir="ltr">DELETE</code>. If <code dir="ltr">ESTIMATE</code> then either <code dir="ltr">estimate_rows</code> or <code dir="ltr">estimate_percent</code> must be nonzero.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t9" headers="r1c1-t9">
<p><code dir="ltr">estimate_rows</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t9 r1c2-t9">
<p>Number of rows to estimate</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t9" headers="r1c1-t9">
<p><code dir="ltr">estimate_percent</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t9 r1c2-t9">
<p>Percentage of rows to estimate. If <code dir="ltr">estimate_rows</code> is specified ignore this parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t9" headers="r1c1-t9">
<p><code dir="ltr">method_opt</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t9 r1c2-t9">
<p>Method options of the following format:</p>
<p>[ <code dir="ltr">FOR</code> <code dir="ltr">TABLE</code> ]</p>
<p>[ <code dir="ltr">FOR</code> <code dir="ltr">ALL</code> [<code dir="ltr">INDEXED</code>] <code dir="ltr">COLUMNS</code>] [<code dir="ltr">SIZE</code> <code dir="ltr">n</code>]</p>
<p>[ <code dir="ltr">FOR</code> <code dir="ltr">ALL</code> <code dir="ltr">INDEXES</code> ]</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12182"></a>Exceptions</p>
<p><code dir="ltr">ORA</code>-<code dir="ltr">20000</code>: Insufficient privileges for some object in this schema</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73222" class="refsect2"><a id="i1004667"></a>
<h3 class="refsect2"><a id="sthref12183"></a>CANONICALIZE Procedure</h3>
<p>This procedure canonicalizes the given string. The procedure handles a single reserved or key word (such as &#39;table&#39;), and strips off white spaces for a single identifier so that &#39; table &#39; becomes TABLE.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12184"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.CANONICALIZE(
   name           IN    VARCHAR2,
   canon_name     OUT   VARCHAR2,
   canon_len      IN    BINARY_INTEGER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12185"></a>Parameters</p>
<div id="ARPLS73223" class="tblformal">
<p class="titleintable"><a id="sthref12186"></a><a id="sthref12187"></a>Table 174-9 CANONICALIZE Procedure Parameters</p>
<table class="cellalignment4330" title="CANONICALIZE Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.CANONICALIZE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t10">Parameter</th>
<th class="cellalignment4328" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t10 r1c2-t10">
<p>String to be canonicalized</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t10" headers="r1c1-t10">
<p><code dir="ltr">canon_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t10 r1c2-t10">
<p>Canonicalized string</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t10" headers="r1c1-t10">
<p><code dir="ltr">canon_len</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t10 r1c2-t10">
<p>Length of the string (in bytes) to canonicalize</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12188"></a>Return Values</p>
<p>Returns the first <code dir="ltr">canon_len</code> bytes in <code dir="ltr">canon_name</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12189"></a>Usage Notes</p>
<ul>
<li>
<p>If <code dir="ltr">name</code> is NULL, <code dir="ltr">canon_name</code> becomes NULL.</p>
</li>
<li>
<p>If <code dir="ltr">name</code> is not a dotted name, and if <code dir="ltr">name</code> begins and ends with a double quote, remove both quotes. Alternatively, convert to upper case with NLS_UPPER. Note that this case does not include a name with special characters, such as a space, but is not doubly quoted.</p>
</li>
<li>
<p>If name is a dotted name (such as a.&#34;b&#34;.c), for each component in the dotted name in the case in which the component begins and ends with a double quote, no transformation will be performed on this component. Alternatively, convert to upper case with NLS_UPPER and apply begin and end double quotes to the capitalized form of this component. In such a case, each canonicalized component will be concatenated together in the input position, separated by &#34;.&#34;.</p>
</li>
<li>
<p>Any other character after a[.b]* will be ignored.</p>
</li>
<li>
<p>The procedure does not handle cases like &#39;A B.&#39;</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i1005256"></a>Examples</p>
<ul>
<li>
<p><code dir="ltr">a</code> becomes <code dir="ltr">A</code></p>
</li>
<li>
<p><code dir="ltr">&#34;a&#34;</code> becomes <code dir="ltr">a</code></p>
</li>
<li>
<p><code dir="ltr">&#34;a&#34;.b</code> becomes <code dir="ltr">&#34;a&#34;.&#34;B&#34;</code></p>
</li>
<li>
<p><code dir="ltr">&#34;a&#34;.b,c.f</code> becomes <code dir="ltr">&#34;a&#34;.&#34;B&#34;</code> with<code dir="ltr">&#34;,c.f&#34;</code> ignored.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73224" class="refsect2"><a id="i1002468"></a>
<h3 class="refsect2"><a id="sthref12190"></a>COMMA_TO_TABLE Procedures</h3>
<p>These procedures converts a comma-delimited list of names into a PL/SQL table of names. The second version supports fully-qualified attribute names.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12191"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.COMMA_TO_TABLE ( 
   list   IN  VARCHAR2,
   tablen OUT BINARY_INTEGER,
   tab    OUT uncl_array); 

DBMS_UTILITY.COMMA_TO_TABLE ( 
   list   IN  VARCHAR2,
   tablen OUT BINARY_INTEGER,
   tab    OUT lname_array);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12192"></a>Parameters</p>
<div id="ARPLS73225" class="tblformal">
<p class="titleintable"><a id="sthref12193"></a><a id="sthref12194"></a>Table 174-10 COMMA_TO_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="COMMA_TO_TABLE Procedure Parameters" summary="This table describes the Parameters of DBMS_UTILITY.COMMA_TO_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t11">Parameter</th>
<th class="cellalignment4328" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">list</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t11 r1c2-t11">
<p>Comma separated list of list of &#39;names&#39;, where a name should have the following format for the first overloading: <code dir="ltr">a [. b [. c ]][ @ d ]</code></p>
<p>and the following format for the second overloading: <code dir="ltr">a [. b]*</code></p>
<p>where <code dir="ltr">a</code>, <code dir="ltr">b</code>, <code dir="ltr">c</code>, <code dir="ltr">d</code> are simple identifiers (quoted or unquoted).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr">tablen</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t11 r1c2-t11">
<p>Number of tables in the PL/SQL table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t11" headers="r1c1-t11">
<p><code dir="ltr">tab</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t11 r1c2-t11">
<p>PL/SQL table which contains list of names</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12195"></a>Return Values</p>
<p>A PL/SQL table is returned, with values <code dir="ltr">1..n</code> and <code dir="ltr">n+1</code> <code dir="ltr">is</code> <code dir="ltr">null</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12196"></a>Usage Notes</p>
<ul>
<li>
<p>The <code dir="ltr">list</code> must be a non-empty comma-delimited list: Anything other than a comma-delimited list is rejected. Commas inside double quotes do not count.</p>
</li>
<li>
<p>Entries in the comma-delimited list cannot include multibyte characters.</p>
</li>
<li>
<p>The values in <code dir="ltr">tab</code> are copied from the original list, with no transformations.</p>
</li>
<li>
<p>The procedure fails if the string between separators is longer than 30 bytes.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73226" class="refsect2"><a id="i1002332"></a>
<h3 class="refsect2"><a id="sthref12197"></a>COMPILE_SCHEMA Procedure</h3>
<p>This procedure compiles all procedures, functions, packages, views and triggers in the specified schema.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12198"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.COMPILE_SCHEMA (
   schema          IN VARCHAR2,
   compile_all     IN BOOLEAN DEFAULT TRUE,
   reuse_settings  IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12199"></a>Parameters</p>
<div id="ARPLS73227" class="tblformal">
<p class="titleintable"><a id="sthref12200"></a><a id="sthref12201"></a>Table 174-11 COMPILE_SCHEMA Procedure Parameters</p>
<table class="cellalignment4330" title="COMPILE_SCHEMA Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.COMPILE_SCHEMA subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t12">Parameter</th>
<th class="cellalignment4328" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">schema</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t12 r1c2-t12">
<p>Name of the schema</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">compile_all</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t12 r1c2-t12">
<p>If <code dir="ltr">TRUE</code>, will compile everything within the schema regardless of whether it is <code dir="ltr">VALID</code></p>
<p>If <code dir="ltr">FALSE</code>, will compile only <code dir="ltr">INVALID</code> objects</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t12" headers="r1c1-t12">
<p><code dir="ltr">reuse_settings</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t12 r1c2-t12">
<p>Indicates whether the session settings in the objects should be reused, or whether the current session settings should be adopted instead</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12202"></a>Exceptions</p>
<div id="ARPLS73228" class="tblformal">
<p class="titleintable"><a id="sthref12203"></a><a id="sthref12204"></a>Table 174-12 COMPILE_SCHEMA Procedure Exceptions</p>
<table class="cellalignment4330" title="COMPILE_SCHEMA Procedure Exceptions " summary="This table describes Exceptions raised by the COMPILE_SCHEMA subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t13">Exception</th>
<th class="cellalignment4328" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ORA-20000</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t13 r1c2-t13">
<p>Insufficient privileges for some object in this schema</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ORA-20001</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t13 r1c2-t13">
<p>Cannot recompile <code dir="ltr">SYS</code> objects</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ORA-20002</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t13 r1c2-t13">
<p>Maximum iterations exceeded. Some objects may not have been recompiled.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12205"></a>Usage Notes</p>
<ul>
<li>
<p>Note that this subprogram is a wrapper for the<a href="u_recomp.htm#i999769">RECOMP_SERIAL Procedure</a> included with the <a href="u_recomp.htm#BABCFAFA">UTL_RECOMP</a> package.</p>
</li>
<li>
<p>After calling this procedure, you should select from view <code dir="ltr">ALL_OBJECTS</code> for items with status of <code dir="ltr">INVALID</code> to see if all objects were successfully compiled.</p>
</li>
<li>
<p>To see the errors associated with <code dir="ltr">INVALID</code> objects, you may use the Enterprise Manager command:</p>
<pre dir="ltr">SHOW ERRORS &lt;type&gt; &lt;schema&gt;.&lt;name&gt;
</pre></li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73229" class="refsect2"><a id="i1004185"></a>
<h3 class="refsect2"><a id="sthref12206"></a>CREATE_ALTER_TYPE_ERROR_TABLE Procedure</h3>
<p>This procedure creates an error table to be used in the <code dir="ltr">EXCEPTION</code> clause of the <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12207"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.CREATE_ALTER_TYPE_ERROR_TABLE(
   schema_name     IN     VARCHAR2,
   table_name      IN     VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12208"></a>Parameters</p>
<div id="ARPLS73230" class="tblformal">
<p class="titleintable"><a id="sthref12209"></a><a id="sthref12210"></a>Table 174-13 CREATE_ALTER_TYPE_ERROR_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="CREATE_ALTER_TYPE_ERROR_TABLE Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.CREATE_ALTER_TYPE_ERROR_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t14">Parameter</th>
<th class="cellalignment4328" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t14 r1c2-t14">
<p>Name of the schema</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t14" headers="r1c1-t14">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t14 r1c2-t14">
<p>Name of the table created</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12211"></a>Exceptions</p>
<p>An error is returned if the table already exists.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73231" class="refsect2"><a id="i1002512"></a>
<h3 class="refsect2"><a id="sthref12212"></a>CURRENT_INSTANCE Function</h3>
<p>This function returns the current connected instance number. It returns <code dir="ltr">NULL</code> when connected instance is down.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12213"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.CURRENT_INSTANCE
   RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73232" class="refsect2"><a id="i1002531"></a>
<h3 class="refsect2"><a id="sthref12214"></a>DATA_BLOCK_ADDRESS_BLOCK Function</h3>
<p>This function gets the block number part of a data block address.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12215"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.DATA_BLOCK_ADDRESS_BLOCK (
   dba NUMBER) 
  RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12216"></a>Parameters</p>
<div id="ARPLS73233" class="tblformal">
<p class="titleintable"><a id="sthref12217"></a><a id="sthref12218"></a>Table 174-14 DATA_BLOCK_ADDRESS_BLOCK Function Parameters</p>
<table class="cellalignment4330" title="DATA_BLOCK_ADDRESS_BLOCK Function Parameters " summary="This table describes the Parameters of DBMS_UTILITY.DATA_BLOCK_ADDRESS_BLOCK subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t15">Parameter</th>
<th class="cellalignment4328" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t15" headers="r1c1-t15">
<p><code dir="ltr">dba</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t15 r1c2-t15">
<p>Data block address</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12219"></a>Pragmas</p>
<pre dir="ltr">pragma restrict_references(data_block_address_block, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12220"></a>Return Values</p>
<p>Block offset of the block.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12221"></a>Usage Notes</p>
<p>This function should not be used with datablocks which belong to bigfile tablespaces.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73234" class="refsect2"><a id="i1002627"></a>
<h3 class="refsect2"><a id="sthref12222"></a>DATA_BLOCK_ADDRESS_FILE Function</h3>
<p>This function gets the file number part of a data block address.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12223"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.DATA_BLOCK_ADDRESS_FILE (
   dba NUMBER) 
  RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12224"></a>Parameters</p>
<div id="ARPLS73235" class="tblformal">
<p class="titleintable"><a id="sthref12225"></a><a id="sthref12226"></a>Table 174-15 DATA_BLOCK_ADDRESS_FILE Function Parameters</p>
<table class="cellalignment4330" title="DATA_BLOCK_ADDRESS_FILE Function Parameters " summary="This table describes the Parameters of DBMS_UTILITY.DATA_BLOCK_ADDRESS_FILE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t16">Parameter</th>
<th class="cellalignment4328" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">dba</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t16 r1c2-t16">
<p>Data block address</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12227"></a>Pragmas</p>
<pre dir="ltr">pragma restrict_references (data_block_address_file, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12228"></a>Return Values</p>
<p>File that contains the block.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12229"></a>Usage Notes</p>
<p>This function should not be used with datablocks which belong to bigfile tablespaces.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73236" class="refsect2"><a id="i1002631"></a>
<h3 class="refsect2"><a id="sthref12230"></a>DB_VERSION Procedure</h3>
<p>This procedure returns version information for the database.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12231"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.DB_VERSION (
   version       OUT VARCHAR2,
   compatibility OUT VARCHAR2); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12232"></a>Parameters</p>
<div id="ARPLS73237" class="tblformal">
<p class="titleintable"><a id="sthref12233"></a><a id="sthref12234"></a>Table 174-16 DB_VERSION Procedure Parameters</p>
<table class="cellalignment4330" title="DB_VERSION Procedure Parameters" summary="This table describes the Parameters of DBMS_UTILITY.DB_VERSION subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t17">Parameter</th>
<th class="cellalignment4328" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t17" headers="r1c1-t17">
<p><code dir="ltr">version</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t17 r1c2-t17">
<p>A string which represents the internal software version of the database (for example, 7.1.0.0.0).</p>
<p>The length of this string is variable and is determined by the database version.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t17" headers="r1c1-t17">
<p><code dir="ltr">compatibility</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t17 r1c2-t17">
<p>The compatibility setting of the database determined by the &#34;compatible&#34; <code dir="ltr">init</code>.<code dir="ltr">ora</code> parameter.</p>
<p>If the parameter is not specified in the <code dir="ltr">init.ora</code> file, then <code dir="ltr">NULL</code> is returned.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73238" class="refsect2"><a id="i1002666"></a>
<h3 class="refsect2"><a id="sthref12235"></a>EXEC_DDL_STATEMENT Procedure</h3>
<p>This procedure executes the DDL statement in <code dir="ltr">parse_string</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12236"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.EXEC_DDL_STATEMENT (
   parse_string IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12237"></a>Parameters</p>
<div id="ARPLS73239" class="tblformal">
<p class="titleintable"><a id="sthref12238"></a><a id="sthref12239"></a>Table 174-17 EXEC_DDL_STATEMENT Procedure Parameters</p>
<table class="cellalignment4330" title="EXEC_DDL_STATEMENT Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.EXEC_DDL_STATEMENT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t18">Parameter</th>
<th class="cellalignment4328" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t18" headers="r1c1-t18">
<p><code dir="ltr">parse_string</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t18 r1c2-t18">
<p>DDL statement to be executed</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73973" class="refsect2"><a id="BJEIAEBB"></a>
<h3 class="refsect2"><a id="sthref12240"></a>EXPAND_SQL_TEXT Procedure</h3>
<p>This procedure recursively replaces any view references in the input SQL query with the corresponding view subquery.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12241"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.EXPAND_SQL_TEXT (
   input_sql_text     IN           CLOB,
   output_sql_text    OUT NOCOPY   CLOB);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12242"></a>Parameters</p>
<div id="ARPLS73974" class="tblformal">
<p class="titleintable"><a id="sthref12243"></a><a id="sthref12244"></a>Table 174-18 EXPAND_SQL_TEXT Procedure Parameters</p>
<table class="cellalignment4330" title="EXPAND_SQL_TEXT Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.EXPAND_SQL_TEXT subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t19">Parameter</th>
<th class="cellalignment4328" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t19" headers="r1c1-t19">
<p><code dir="ltr">input_sql_text</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t19 r1c2-t19">
<p>Input SQL query text</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t19" headers="r1c1-t19">
<p><code dir="ltr">output_sql_text</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t19 r1c2-t19">
<p>View-expanded query text</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12245"></a>Exceptions</p>
<div id="ARPLS73975" class="tblformal">
<p class="titleintable"><a id="sthref12246"></a><a id="sthref12247"></a>Table 174-19 EXPAND_SQL_TEXT&nbsp; Procedure Exceptions</p>
<table class="cellalignment4330" title="EXPAND_SQL_TEXT&nbsp; Procedure Exceptions" summary="This table describes exceptions raised by the DBMS_UTILITY.EXPAND_SQL_TEXTsubprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t20">Exception</th>
<th class="cellalignment4328" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ORA-00942</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t20 r1c2-t20">
<p>Current user does not have select privileges on all the views and tables recursively referenced in the <code dir="ltr">input_sql_text</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ORA-24251</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t20 r1c2-t20">
<p><code dir="ltr">input_sql_text</code> is not a <code dir="ltr">SELECT</code> statement</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ORA-00900</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t20 r1c2-t20">
<p>Input is not valid</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ORA-29477</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t20 r1c2-t20">
<p>Input LOB size exceeds maximum size of 4GB -1</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12248"></a>Usage Notes</p>
<p>The expanded and merged SQL statement text is copied to output_sql_text on successful completion. The resulting query text only contains references to underlying tables and is semantically equivalent with some caveats:</p>
<ul>
<li>
<p>If there are invoker rights functions called from any of the views, they may be called as a different user in the resulting query text if the view owner is different from the user who will eventually compile/run the expanded SQL text.</p>
</li>
<li>
<p>The VPD policy expands differently if there is a function supplied to generate the dynamic <code dir="ltr">WHERE</code> clause. This function would return differently, for example, if the userid caused the expansion to be different.</p>
</li>
<li>
<p>If there are references to remote objects, results are undetermined.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73240" class="refsect2"><a id="i997163"></a>
<h3 class="refsect2"><a id="sthref12249"></a>FORMAT_CALL_STACK Function</h3>
<p>This function formats the current call stack. This can be used on any stored procedure or trigger to access the call stack. This can be useful for debugging.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12250"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.FORMAT_CALL_STACK 
  RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12251"></a>Pragmas</p>
<pre dir="ltr">pragma restrict_references(format_call_stack,WNDS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12252"></a>Return Values</p>
<p>This returns the call stack, up to 2000 bytes.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73241" class="refsect2"><a id="i1003874"></a>
<h3 class="refsect2"><a id="sthref12253"></a>FORMAT_ERROR_BACKTRACE Function</h3>
<p>This function displays the call stack at the point where an exception was raised, even if the subprogram is called from an exception handler in an outer scope. The output is similar to the output of the <code dir="ltr">SQLERRM</code> function, but not subject to the same size limitation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12254"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.FORMAT_ERROR_BACKTRACE 
  RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12255"></a>Return Values</p>
<p>The backtrace string. A <code dir="ltr">NULL</code> string is returned if no error is currently being handled.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12256"></a>Examples</p>
<pre dir="ltr">CREATE OR REPLACE PROCEDURE Log_Errors ( i_buff in varchar2 ) IS
  g_start_pos integer := 1;
  g_end_pos  integer;

  FUNCTION Output_One_Line RETURN BOOLEAN IS
  BEGIN
    g_end_pos := Instr ( i_buff, Chr(10), g_start_pos );

    CASE g_end_pos &gt; 0
      WHEN true THEN
        DBMS_OUTPUT.PUT_LINE ( Substr ( i_buff, g_start_pos,
g_end_pos-g_start_pos ) );
        g_start_pos := g_end_pos+1;
        RETURN TRUE;

      WHEN FALSE THEN
        DBMS_OUTPUT.PUT_LINE ( Substr ( i_buff, g_start_pos,
(Length(i_buff)-g_start_pos)+1 ) );
        RETURN FALSE;
    END CASE;
  END Output_One_Line;

BEGIN
  WHILE Output_One_Line() LOOP NULL; 
  END LOOP;
END Log_Errors;
/

Set Doc Off
Set Feedback off
Set Echo Off

CREATE OR REPLACE PROCEDURE P0 IS
  e_01476 EXCEPTION; pragma exception_init ( e_01476, -1476 );
BEGIN
  RAISE e_01476;
END P0;
/
Show Errors

CREATE OR REPLACE PROCEDURE P1 IS
BEGIN
  P0();
END P1;
/
SHOW ERRORS

CREATE OR REPLACE PROCEDURE P2 IS
BEGIN
  P1();
END P2;
/
SHOW ERRORS

CREATE OR REPLACE PROCEDURE P3 IS
BEGIN
  P2();
END P3;
/
SHOW ERRORS

CREATE OR REPLACE PROCEDURE P4 IS
  BEGIN P3(); END P4;
/
CREATE OR REPLACE PROCEDURE P5 IS
  BEGIN P4(); END P5;
/
SHOW ERRORS

CREATE OR REPLACE PROCEDURE Top_Naive IS
BEGIN
  P5();
END Top_Naive;
/
SHOW ERRORS

CREATE OR REPLACE PROCEDURE Top_With_Logging IS
  -- NOTE: SqlErrm in principle gives the same info as Format_Error_Stack.
  -- But SqlErrm is subject to some length limits,
  -- while Format_Error_Stack is not.
BEGIN
  P5();
EXCEPTION
  WHEN OTHERS THEN
    Log_Errors ( &#39;Error_Stack...&#39; || Chr(10) ||
      DBMS_UTILITY.FORMAT_ERROR_STACK() );
    Log_Errors ( &#39;Error_Backtrace...&#39; || Chr(10) ||
      DBMS_UTILITY.FORMAT_ERROR_BACKTRACE() );
    DBMS_OUTPUT.PUT_LINE ( &#39;----------&#39; );
END Top_With_Logging;
/
SHOW ERRORS

--------------------------------------------------------------------------------

Set ServerOutput On
call Top_Naive()
  /*
  ERROR at line 1:
  ORA-01476: divisor is equal to zero
  ORA-06512: at &#34;U.P0&#34;, line 4
  ORA-06512: at &#34;U.P1&#34;, line 3
  ORA-06512: at &#34;U.P2&#34;, line 3
  ORA-06512: at &#34;U.P3&#34;, line 3
  ORA-06512: at &#34;U.P4&#34;, line 2
  ORA-06512: at &#34;U.P5&#34;, line 2
  ORA-06512: at &#34;U.TOP_NAIVE&#34;, line 3
  */
  ;

Set ServerOutput On
call Top_With_Logging()
  /*
  Error_Stack...
  ORA-01476: divisor is equal to zero
  Error_Backtrace...
  ORA-06512: at &#34;U.P0&#34;, line 4
  ORA-06512: at &#34;U.P1&#34;, line 3
  ORA-06512: at &#34;U.P2&#34;, line 3
  ORA-06512: at &#34;U.P3&#34;, line 3
  ORA-06512: at &#34;U.P4&#34;, line 2
  ORA-06512: at &#34;U.P5&#34;, line 2
  ORA-06512: at &#34;U.TOP_WITH_LOGGING&#34;, line 6
  ----------
  */
  ;

/*
  ORA-06512:
  Cause:
    Backtrace message as the stack is
    unwound by unhandled exceptions.
  Action:
    Fix the problem causing the exception
    or write an exception handler for this condition.
    Or you may need to contact your application administrator
    or database administrator.
*/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73242" class="refsect2"><a id="i1002463"></a>
<h3 class="refsect2"><a id="sthref12257"></a>FORMAT_ERROR_STACK Function</h3>
<p>This function formats the current error stack. This can be used in exception handlers to look at the full error stack.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12258"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.FORMAT_ERROR_STACK 
  RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12259"></a>Return Values</p>
<p>This returns the error stack, up to 2000 bytes.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73243" class="refsect2"><a id="i1003768"></a>
<h3 class="refsect2"><a id="sthref12260"></a>GET_CPU_TIME Function</h3>
<p>This function returns a measure of current CPU processing time in hundredths of a second. The difference between the times returned from two calls measures the CPU processing time (not the total elapsed time) between those two points.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12261"></a>Syntax</p>
<pre dir="ltr">  DBMS_UTILITY.GET_CPU_TIME
   RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12262"></a>Return Values</p>
<p>Time is the number of 100th&#39;s of a second from some arbitrary epoch.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12263"></a>Usage Notes</p>
<p>The amount of work performed is calculated by measuring the difference between a start point and end point for a particular operation.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73244" class="refsect2"><a id="i1004023"></a>
<h3 class="refsect2"><a id="sthref12264"></a>GET_DEPENDENCY Procedure</h3>
<p>This procedure shows the dependencies on the object passed in.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12265"></a>Syntax</p>
<pre dir="ltr">  DBMS_UTILITY.GET_DEPENDENCY
   type      IN     VARCHAR2,
   schema    IN     VARCHAR2,
   name      IN     VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12266"></a>Parameters</p>
<div id="ARPLS73245" class="tblformal">
<p class="titleintable"><a id="sthref12267"></a><a id="sthref12268"></a>Table 174-20 GET_DEPENDENCY Procedure Parameters</p>
<table class="cellalignment4330" title="GET_DEPENDENCY Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.GET_DEPENDENCY subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t21">Parameter</th>
<th class="cellalignment4328" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t21" headers="r1c1-t21">
<p><code dir="ltr">type</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t21 r1c2-t21">
<p>Type of the object, for example if the object is a table give the type as &#39;<code dir="ltr">TABLE</code>&#39;</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t21" headers="r1c1-t21">
<p><code dir="ltr">schema</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t21 r1c2-t21">
<p>Schema name of the object</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t21" headers="r1c1-t21">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t21 r1c2-t21">
<p>Name of the object</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12269"></a>Usage Notes</p>
<p>This procedure uses the <a href="d_output.htm#BABJCAJA">DBMS_OUTPUT</a>package to display results, and so you must declare <code dir="ltr">SET SERVEROUTPUT ON</code> if you wish to view dependencies. Alternatively, any application that checks the <code dir="ltr">DBMS_OUTPUT</code> output buffers can invoke this subprogram and then retrieve the output by means of <code dir="ltr">DBMS_OUTPUT</code> subprograms such as <code dir="ltr">GET_LINES</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73246" class="refsect2"><a id="BABHABJA"></a>
<h3 class="refsect2"><a id="sthref12270"></a>GET_ENDIANNESS Function</h3>
<p>This function gets the endianness of the database platform.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12271"></a>Syntax</p>
<pre dir="ltr">  DBMS_UTILITY.GET_ENDIANNESS
   RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12272"></a>Return Values</p>
<p>A <code dir="ltr">NUMBER</code> value indicating the endianness of the database platform: 1 for big-endian or 2 for little-endian.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73247" class="refsect2"><a id="i1003646"></a>
<h3 class="refsect2"><a id="sthref12273"></a>GET_HASH_VALUE Function</h3>
<p>This function computes a hash value for the given string.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12274"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.GET_HASH_VALUE (
   name      VARCHAR2, 
   base      NUMBER, 
   hash_size NUMBER)
  RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12275"></a>Parameters</p>
<div id="ARPLS73248" class="tblformal">
<p class="titleintable"><a id="sthref12276"></a><a id="sthref12277"></a>Table 174-21 GET_HASH_VALUE Function Parameters</p>
<table class="cellalignment4330" title="GET_HASH_VALUE Function Parameters " summary="This table describes the Parameters of DBMS_UTILITY.GET_HASH_VALUE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t22">Parameter</th>
<th class="cellalignment4328" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t22" headers="r1c1-t22">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t22 r1c2-t22">
<p>String to be hashed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t22" headers="r1c1-t22">
<p><code dir="ltr">base</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t22 r1c2-t22">
<p>Base value for the returned hash value at which to start</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t22" headers="r1c1-t22">
<p><code dir="ltr">hash_size</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t22 r1c2-t22">
<p>Desired size of the hash table</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12278"></a>Pragmas</p>
<pre dir="ltr">pragma restrict_references(get_hash_value, WNDS, RNDS, WNPS, RNPS);    
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12279"></a>Return Values</p>
<p>A hash value based on the input string. For example, to get a hash value on a string where the hash value should be between 1000 and 3047, use 1000 as the base value and 2048 as the <code dir="ltr">hash_size</code> value. Using a power of 2 for the <code dir="ltr">hash_size</code> parameter works best.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73249" class="refsect2"><a id="i997189"></a>
<h3 class="refsect2"><a id="sthref12280"></a>GET_PARAMETER_VALUE Function</h3>
<p>This function gets the value of specified <code dir="ltr">init.ora</code> parameter.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12281"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.GET_PARAMETER_VALUE (
   parnam     IN        VARCHAR2,
   intval     IN OUT    BINARY_INTEGER,
   strval     IN OUT    VARCHAR2,
   listno     IN        BINARY_INTEGER DEFAULT 1)
  RETURN BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12282"></a>Parameters</p>
<div id="ARPLS73250" class="tblformal">
<p class="titleintable"><a id="sthref12283"></a><a id="sthref12284"></a>Table 174-22 GET_PARAMETER_VALUE Function Parameters</p>
<table class="cellalignment4330" title="GET_PARAMETER_VALUE Function Parameters " summary="This table describes the Parameters of DBMS_UTILITY.GET_PARAMETER_VALUE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t23">Parameter</th>
<th class="cellalignment4328" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t23" headers="r1c1-t23">
<p><code dir="ltr">parnam</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t23 r1c2-t23">
<p>Parameter name</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t23" headers="r1c1-t23">
<p><code dir="ltr">intval</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t23 r1c2-t23">
<p>Value of an integer parameter or the value length of a string parameter</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t23" headers="r1c1-t23">
<p><code dir="ltr">strval</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t23 r1c2-t23">
<p>Value of a string parameter</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t23" headers="r1c1-t23">
<p><code dir="ltr">listno</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t23 r1c2-t23">
<p>List item number. If retrieving parameter values for a parameter that can be specified multiple times to accumulate values, use this parameter to get each individual parameter.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12285"></a>Return Values</p>
<p>Parameter type:</p>
<ul>
<li>
<p>0 if parameter is an <code dir="ltr">INTEGER</code>/<code dir="ltr">BOOLEAN</code> parameter</p>
</li>
<li>
<p>1 if parameter is a string/file parameter</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12286"></a>Usage Notes</p>
<ul>
<li>
<p>To execute the this function, you must have the <code dir="ltr">SELECT</code> privilege on the V$PARAMETER dynamic view.</p>
</li>
<li>
<p>When using <code dir="ltr">DBMS_UTILITY.GET_PARAMETER_VALUE</code>, only the first parameter setting of <code dir="ltr">/dir1</code> is returned when <code dir="ltr">init.ora</code> is set as follows:</p>
<pre dir="ltr">utl_file_dir = /dir1
utl_file_dir = /dir2
</pre>
<p>However, the full comma-delimited string is returned if you are using:</p>
<pre dir="ltr">utl_file_dir = /dir1, /dir2
</pre></li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12287"></a>Examples</p>
<pre dir="ltr">DECLARE
  parnam VARCHAR2(256);
  intval BINARY_INTEGER;
  strval VARCHAR2(256);
  partyp BINARY_INTEGER;
BEGIN
  partyp := dbms_utility.get_parameter_value(&#39;max_dump_file_size&#39;,
                                              intval, strval);
  dbms_output.put(&#39;parameter value is: &#39;);
  IF partyp = 1 THEN
    dbms_output.put_line(strval);
  ELSE
    dbms_output.put_line(intval);
  END IF;
  IF partyp = 1 THEN
    dbms_output.put(&#39;parameter value length is: &#39;);
    dbms_output.put_line(intval);
  END IF;
  dbms_output.put(&#39;parameter type is: &#39;);
  IF partyp = 1 THEN
    dbms_output.put_line(&#39;string&#39;);
  ELSE
    dbms_output.put_line(&#39;integer&#39;);
  END IF;
END;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73251" class="refsect2"><a id="BABDBIHF"></a>
<h3 class="refsect2"><a id="sthref12288"></a>GET_SQL_HASH Function</h3>
<p>This function computes a hash value for the given string using MD5 algorithm.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12289"></a>Syntax</p>
<pre dir="ltr">Dbms_utility.get_sql_hash (
   name          IN   VARCHAR2,    
   hash          OUT  RAW,    
   pre10ihash    OUT  NUMBER) 
  RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12290"></a>Pragmas</p>
<p>Pragma Restrict_references(<code dir="ltr">Get_sql_hash</code>, <code dir="ltr">Wnds</code>, <code dir="ltr">Rnds</code>, <code dir="ltr">Wnps</code>, <code dir="ltr">Rnps</code>);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12291"></a>Parameters</p>
<div id="ARPLS73252" class="tblformal">
<p class="titleintable"><a id="sthref12292"></a><a id="sthref12293"></a>Table 174-23 GET_SQL_HASH Procedure Parameters</p>
<table class="cellalignment4330" title="GET_SQL_HASH Procedure Parameters" summary="This table describes the parameters of the DBMS_UTILITY.GET_SQL_HASH subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t24">Parameter</th>
<th class="cellalignment4328" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t24" headers="r1c1-t24">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t24 r1c2-t24">
<p>String to be hashed</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t24" headers="r1c1-t24">
<p><code dir="ltr">hash</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t24 r1c2-t24">
<p>Optional field to store all 16 bytes of returned hash value</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t24" headers="r1c1-t24">
<p><code dir="ltr">pre10ihash</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t24 r1c2-t24">
<p>Optional field to store the pre 10i database version hash value</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12294"></a>Return Values</p>
<p>A hash value (last 4 bytes) based on the input string. the MD5 hash algorithm computes a 16 byte hash value, but we only return the last 4 bytes so that we can return an actual number. one could use an optional raw parameter to get all 16 bytes and to store the pre 10<span class="italic">i</span> hash value of 4 bytes in the pre10<span class="italic">i</span> hash optional parameter.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73253" class="refsect2"><a id="i1002765"></a>
<h3 class="refsect2"><a id="sthref12295"></a>GET_TIME Function</h3>
<p>This function determines the current time in 100th&#39;s of a second. This subprogram is primarily used for determining elapsed time. The subprogram is called twice &ndash; at the beginning and end of some process &ndash; and then the first (earlier) number is subtracted from the second (later) number to determine the time elapsed.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12296"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.GET_TIME 
  RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12297"></a>Return Values</p>
<p>Time is the number of 100th&#39;s of a second from the point in time at which the subprogram is invoked.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12298"></a>Usage Notes</p>
<p>Numbers are returned in the range -2147483648 to 2147483647 depending on platform and machine, and your application must take the sign of the number into account in determining the interval. For instance, in the case of two negative numbers, application logic must allow that the first (earlier) number will be larger than the second (later) number which is closer to zero. By the same token, your application should also allow that the first (earlier) number be negative and the second (later) number be positive.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73976" class="refsect2"><a id="BJEFCEEF"></a>
<h3 class="refsect2"><a id="sthref12299"></a>GET_TZ_TRANSITIONS Procedure</h3>
<p>This procedure returns time zone transitions by <code dir="ltr">regionid</code> from the <code dir="ltr">timezone.dat</code> file.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12300"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.GET_TZ_TRANSITIONS 
   regionid      IN     NUMBER,
   transitions   OUT    MAXRAW);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12301"></a>Parameters</p>
<div id="ARPLS73977" class="tblformal">
<p class="titleintable"><a id="sthref12302"></a><a id="sthref12303"></a>Table 174-24 GET_TZ_TRANSITIONS Procedure Parameters</p>
<table class="cellalignment4330" title="GET_TZ_TRANSITIONS Procedure Parameters" summary="This table describes the parameters of the DBMS_UTILITY.GET_SQL_HASH subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t25">Parameter</th>
<th class="cellalignment4328" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t25" headers="r1c1-t25">
<p><code dir="ltr">regionid</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t25 r1c2-t25">
<p>Number corresponding to the region</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t25" headers="r1c1-t25">
<p><code dir="ltr">transitions</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t25 r1c2-t25">
<p>Raw bytes from the <code dir="ltr">timezone.dat</code> file</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12304"></a>Exceptions</p>
<div id="ARPLS73978" class="tblformal">
<p class="titleintable"><a id="sthref12305"></a><a id="sthref12306"></a>Table 174-25 GET_TZ_TRANSITIONS&nbsp; Procedure Exceptions</p>
<table class="cellalignment4330" title="GET_TZ_TRANSITIONS&nbsp; Procedure Exceptions" summary="This table describes exceptions raised by the DBMS_UTILITY.INVALIDATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t26">Exception</th>
<th class="cellalignment4328" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t26" headers="r1c1-t26">
<p><code dir="ltr">ORA-6502: PL/SQL: NUMERIC OR VALUE ERROR</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t26 r1c2-t26">
<p>For an invalid <code dir="ltr">regionid</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73254" class="refsect2"><a id="BABFDACJ"></a>
<h3 class="refsect2"><a id="sthref12307"></a>INVALIDATE Procedure</h3>
<p>This procedure invalidates a database object and (optionally) modifies its PL/SQL compiler parameter settings. It also invalidates any objects that (directly or indirectly) depend on the object being invalidated.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12308"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.INVALIDATE ( 
   p_object_id              NUMBER,
   p_plsql_object_settings  VARCHAR2 DEFAULT NULL,
   p_option_flags           PLS_INTEGER DEFAULT 0);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12309"></a>Parameters</p>
<div id="ARPLS73255" class="tblformal">
<p class="titleintable"><a id="sthref12310"></a><a id="sthref12311"></a>Table 174-26 INVALIDATE Procedure Parameters</p>
<table class="cellalignment4330" title="INVALIDATE Procedure Parameters" summary="This table describes the parameters of the DBMS_UTILITY.INVALIDATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t27">Parameter</th>
<th class="cellalignment4328" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t27" headers="r1c1-t27">
<p><code dir="ltr">p_object_id</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t27 r1c2-t27">
<p>ID number of object to be invalidated. This is the same as the value of the <code dir="ltr">OBJECT_ID</code> column from <code dir="ltr">ALL_OBJECTS</code>. If the <code dir="ltr">object_id</code> argument is <code dir="ltr">NULL</code> or invalid then the exception <code dir="ltr">inv_not_exist_or_no_priv</code> is raised. The caller of this procedure must have create privileges on the object being invalidated else the <code dir="ltr">inv_not_exist_or_no_priv</code> exception is raised.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t27" headers="r1c1-t27">
<p><code dir="ltr">p_plsql_object_settings</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t27 r1c2-t27">
<p>Optional parameter that ignored if the object specified by <code dir="ltr">p_object_id</code> is not a PL/SQL object. If no value is specified for this parameter then the PL/SQL compiler settings are left unchanged, that is, equivalent to <code dir="ltr">REUSE</code> <code dir="ltr">SETTINGS</code>. If a value is provided, it must specify the values of the PL/SQL compiler settings separated by one or more spaces. Each setting can be specified only once else <code dir="ltr">inv_malformed_settings</code> exception will be raised. The setting values are changed only for the object specified by <code dir="ltr">p_object_id</code> and do not affect dependent objects that may be invalidated. The setting names and values are case insensitive. If a setting is omitted and <code dir="ltr">REUSE</code> <code dir="ltr">SETTINGS</code> is specified, then if a value was specified for the compiler setting in an earlier compilation of this library unit, Oracle Database uses that earlier value. If a setting is omitted and <code dir="ltr">REUSE</code> <code dir="ltr">SETTINGS</code> was not specified or no value has been specified for the parameter in an earlier compilation, then the database will obtain the value for that setting from the session environment.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t27" headers="r1c1-t27">
<p><code dir="ltr">p_option_flags</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t27 r1c2-t27">
<p>Optional parameter defaults to zero (no flags). Option flags supported by invalidate.</p>
<ul>
<li>
<p><code dir="ltr">inv_error_on_restrictions</code> (see <a href="#BABIFIDB">Constants</a> ): The subprogram imposes various restrictions on the objects that can be invalidated. For example, the object specified by p_object_id cannot be a table. By default, invalidate quietly returns on these conditions (and does not raise an exception). If the caller sets this flag, the exception <code dir="ltr">inv_restricted_object</code> is raised.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12312"></a>Exceptions</p>
<div id="ARPLS73256" class="tblformal">
<p class="titleintable"><a id="sthref12313"></a><a id="sthref12314"></a>Table 174-27 INVALIDATE Exceptions</p>
<table class="cellalignment4330" title="INVALIDATE Exceptions" summary="This table describes exceptions raised by the DBMS_UTILITY.INVALIDATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t28">Exception</th>
<th class="cellalignment4328" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t28" headers="r1c1-t28">
<p><code dir="ltr">INV_NOT_EXIST_OR_NO_PRIV</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t28 r1c2-t28">
<p>Raised when the <code dir="ltr">object_id</code> argument is <code dir="ltr">NULL</code> or invalid, or when the caller does not have <code dir="ltr">CREATE</code> privileges on the object being invalidated</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t28" headers="r1c1-t28">
<p><code dir="ltr">INV_MALFORMED_SETTINGS</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t28 r1c2-t28">
<p>Raised if a compiler setting is specified more than once in the <code dir="ltr">p_plsql_object_settings</code> parameter</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t28" headers="r1c1-t28">
<p><code dir="ltr">INV_RESTRICTED_OBJECT</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t28 r1c2-t28">
<p>Raised when different combinations of conditions pertaining to the <code dir="ltr">p_object_id</code> parameter are contravened</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12315"></a>Usage Notes</p>
<p>The object type (<code dir="ltr">object_type</code> column from <code dir="ltr">ALL_OBJECTS</code>) of the object specified by <code dir="ltr">p_object_id</code> must be a <code dir="ltr">PROCEDURE</code>, <code dir="ltr">FUNCTION</code>, <code dir="ltr">PACKAGE</code>, <code dir="ltr">PACKAGE</code> <code dir="ltr">BODY</code>, <code dir="ltr">TRIGGER</code>, <code dir="ltr">TYPE</code>, <code dir="ltr">TYPE</code> <code dir="ltr">BODY</code>, <code dir="ltr">LIBRARY</code>, <code dir="ltr">VIEW</code>, <code dir="ltr">OPERATOR</code>, <code dir="ltr">SYNONYM</code>, or <code dir="ltr">JAVA</code> <code dir="ltr">CLASS</code>. If the object is not one of these types and the flag <code dir="ltr">inv_error_on_restrictions</code> is specified in <code dir="ltr">p_option_flags</code> then the exception <code dir="ltr">inv_restricted_object</code> is raised, else no action is taken.</p>
<p>If the object specified by <code dir="ltr">p_object_id</code> is the package specification of <code dir="ltr">STANDARD</code>, <code dir="ltr">DBMS_STANDARD</code>, or specification or body of <code dir="ltr">DBMS_UTILITY</code> and the flag <code dir="ltr">inv_error_on_restrictions</code> is specified in <code dir="ltr">p_option_flags</code> then the exception <code dir="ltr">inv_restricted_object</code> is raised, else no action is taken.</p>
<p>If the object specified by <code dir="ltr">p_object_id</code> is an object type specification and there exist tables which depend on the type and the flag <code dir="ltr">inv_error_on_restrictions</code> is specified in <code dir="ltr">p_option_flags</code> then the exception <code dir="ltr">inv_restricted_object</code> is raised, else no action is taken.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12316"></a>Examples</p>
<p class="subhead2"><a id="ARPLS73257"></a>Example 1</p>
<pre dir="ltr">DBMS_UTILITY.INVALIDATE (1232, &#39;PLSQL_OPTIMIZE_LEVEL = 2 REUSE SETTINGS&#39;);
</pre>
<p>Assume that the <code dir="ltr">object_id</code> 1232 refers to the procedure <code dir="ltr">remove_emp</code> in the <code dir="ltr">HR</code> schema. Then the above call will mark the remove_emp procedure invalid and change it&#39;s <code dir="ltr">PLSQL_OPTIMIZE_LEVEL</code> compiler setting to 2. The values of other compiler settings will remain unchanged since <code dir="ltr">REUSE</code> <code dir="ltr">SETTINGS</code> is specified.</p>
<p>Objects that depend on <code dir="ltr">hr</code>.<code dir="ltr">remove_emp</code> will also get marked invalid. Their compiler parameters will not be changed.</p>
<p class="subhead2"><a id="ARPLS73258"></a>Example 2</p>
<pre dir="ltr">DBMS_UTILITY.INVALIDATE (40775, &#39;plsql_code_type = native&#39;);
</pre>
<p>Assume that the <code dir="ltr">object_id</code> 40775 refers to the type body <code dir="ltr">leaf_category_typ</code> in the <code dir="ltr">OE</code> schema. Then the above call will mark the type body invalid and change its <code dir="ltr">PLSQL_CODE_TYPE</code> compiler setting to <code dir="ltr">NATIVE</code>. The values of other compiler settings will be picked up from the current session environment since <code dir="ltr">REUSE</code> <code dir="ltr">SETTINGS</code> has not been specified.</p>
<p>Since no objects can depend on bodies, there are no cascaded invalidations.</p>
<p class="subhead2"><a id="ARPLS73259"></a>Example 3</p>
<pre dir="ltr">DBMS_UTILITY.INVALIDATE (40796);
</pre>
<p>Assume that the <code dir="ltr">object_id</code> 40796 refers to the view <code dir="ltr">oc_orders</code> in the <code dir="ltr">OE</code> schema. Then the above call will mark the <code dir="ltr">oc_orders</code> view invalid.</p>
<p>Objects that depend on <code dir="ltr">oe</code>.<code dir="ltr">oc_orders</code> will also get marked invalid.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73979" class="refsect2"><a id="BJEDEHEI"></a>
<h3 class="refsect2"><a id="sthref12317"></a>IS_BIT_SET Function</h3>
<p>This function checks the bit setting for the given bit in the given <code dir="ltr">RAW</code> value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12318"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.IS_BIT_SET (
   r     IN    RAW,   n     IN    NUMBER)
 RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12319"></a>Parameters</p>
<div id="ARPLS73980" class="tblformal">
<p class="titleintable"><a id="sthref12320"></a><a id="sthref12321"></a>Table 174-28 IS_BET_SET Function Parameters</p>
<table class="cellalignment4330" title="IS_BET_SET Function Parameters" summary="This table describes the parameters of the DBMS_UTILITY.INVALIDATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t29">Parameter</th>
<th class="cellalignment4328" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t29" headers="r1c1-t29">
<p><code dir="ltr">r</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t29 r1c2-t29">
<p><code dir="ltr">RAW</code> source</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t29" headers="r1c1-t29">
<p><code dir="ltr">n</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t29 r1c2-t29">
<p>Bit in <code dir="ltr">r</code> to check</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12322"></a>Return Values</p>
<p>This function returns 1 if bit n in raw r is set, zero otherwise. Bits are numbered high to low with the lowest bit being bit number 1.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73260" class="refsect2"><a id="i1002749"></a>
<h3 class="refsect2"><a id="sthref12323"></a>IS_CLUSTER_DATABASE Function</h3>
<p>This function finds out if this database is running in cluster database mode.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12324"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.IS_CLUSTER_DATABASE 
  RETURN BOOLEAN;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12325"></a>Return Values</p>
<p>This function returns <code dir="ltr">TRUE</code> if this instance was started in cluster database mode; <code dir="ltr">FALSE</code> otherwise.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73261" class="refsect2"><a id="i1002839"></a>
<h3 class="refsect2"><a id="sthref12326"></a>MAKE_DATA_BLOCK_ADDRESS Function</h3>
<p>This function creates a data block address given a file number and a block number. A data block address is the internal structure used to identify a block in the database. This function is useful when accessing certain fixed tables that contain data block addresses.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12327"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.MAKE_DATA_BLOCK_ADDRESS (
   file  NUMBER, 
   block NUMBER) 
  RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12328"></a>Parameters</p>
<div id="ARPLS73262" class="tblformal">
<p class="titleintable"><a id="sthref12329"></a><a id="sthref12330"></a>Table 174-29 MAKE_DATA_BLOCK_ADDRESS Function Parameters</p>
<table class="cellalignment4330" title="MAKE_DATA_BLOCK_ADDRESS Function Parameters " summary="This table describes the Parameters of DBMS_UTILITY.MAKE_DATA_BLOCK_ADDRESS subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t30">Parameter</th>
<th class="cellalignment4328" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t30" headers="r1c1-t30">
<p><code dir="ltr">file</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t30 r1c2-t30">
<p>File that contains the block</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t30" headers="r1c1-t30">
<p><code dir="ltr">block</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t30 r1c2-t30">
<p>Offset of the block within the file in terms of block increments</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12331"></a>Pragmas</p>
<pre dir="ltr">pragma restrict_references (make_data_block_address, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12332"></a>Return Values</p>
<p>Data block address.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73263" class="refsect2"><a id="i997271"></a>
<h3 class="refsect2"><a id="sthref12333"></a>NAME_RESOLVE Procedure</h3>
<p>This procedure resolves the given name, including synonym translation and authorization checking as necessary.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12334"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.NAME_RESOLVE (
   name          IN  VARCHAR2, 
   context       IN  NUMBER,
   schema        OUT VARCHAR2, 
   part1         OUT VARCHAR2, 
   part2         OUT VARCHAR2,
   dblink        OUT VARCHAR2, 
   part1_type    OUT NUMBER, 
   object_number OUT NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12335"></a>Parameters</p>
<div id="ARPLS73264" class="tblformal">
<p class="titleintable"><a id="sthref12336"></a><a id="sthref12337"></a>Table 174-30 NAME_RESOLVE Procedure Parameters</p>
<table class="cellalignment4330" title="NAME_RESOLVE Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.NAME_RESOLVE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t31">Parameter</th>
<th class="cellalignment4328" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t31" headers="r1c1-t31">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t31 r1c2-t31">
<p>Name of the object.</p>
<p>This can be of the form [[a.]b.]c[@d], where a, b, c are SQL identifier and d is a dblink. No syntax checking is performed on the dblink. If a dblink is specified, or if the name resolves to something with a dblink, then object is not resolved, but the <code dir="ltr">schema</code>, <code dir="ltr">part1</code>, <code dir="ltr">part2</code> and <code dir="ltr">dblink</code> <code dir="ltr">OUT</code> parameters are filled in.</p>
<p>a, b and c may be delimited identifiers, and may contain Globalization Support (NLS) characters (single and multibyte).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t31" headers="r1c1-t31">
<p><code dir="ltr">context</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t31 r1c2-t31">
<p>Must be an integer between 0 and 9.</p>
<ul>
<li>
<p>0 - table</p>
</li>
<li>
<p>1 - PL/SQL (for 2 part names)</p>
</li>
<li>
<p>2 - sequences</p>
</li>
<li>
<p>3 - trigger</p>
</li>
<li>
<p>4 - Java Source</p>
</li>
<li>
<p>5 - Java resource</p>
</li>
<li>
<p>6 - Java class</p>
</li>
<li>
<p>7 - type</p>
</li>
<li>
<p>8 - Java shared data</p>
</li>
<li>
<p>9 - index</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t31" headers="r1c1-t31">
<p><code dir="ltr">schema</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t31 r1c2-t31">
<p>Schema of the object: c. If no schema is specified in <code dir="ltr">name</code>, then the <code dir="ltr">schema</code> is determined by resolving the name.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t31" headers="r1c1-t31">
<p><code dir="ltr">part1</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t31 r1c2-t31">
<p>First part of the name. The type of this name is specified <code dir="ltr">part1_type</code> (synonym or package).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t31" headers="r1c1-t31">
<p><code dir="ltr">part2</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t31 r1c2-t31">
<p>If this is non-<code dir="ltr">NULL</code>, then this is a subprogram name. If part1 is non-<code dir="ltr">NULL</code>, then the subprogram is within the package indicated by part1. If part1 is <code dir="ltr">NULL</code>, then the subprogram is a top-level subprogram.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t31" headers="r1c1-t31">
<p><code dir="ltr">dblink</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t31 r1c2-t31">
<p>If this is non-<code dir="ltr">NULL</code>, then a database link was either specified as part of <code dir="ltr">name</code> or <code dir="ltr">name</code> was a synonym which resolved to something with a database link. In this case, if further name translation is desired, then you must call the <code dir="ltr">DBMS_UTILITY.NAME_RESOLVE</code> procedure on this remote node.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t31" headers="r1c1-t31">
<p><code dir="ltr">part1_type</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t31 r1c2-t31">
<p>Type of <code dir="ltr">part1</code> is:</p>
<ul>
<li>
<p>5 - synonym</p>
</li>
<li>
<p>7 - procedure (top level)</p>
</li>
<li>
<p>8 - function (top level)</p>
</li>
<li>
<p>9 - package</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t31" headers="r1c1-t31">
<p><code dir="ltr">object_number</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t31 r1c2-t31">
<p>Object identifier</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12338"></a>Exceptions</p>
<p>All errors are handled by raising exceptions. A wide variety of exceptions are possible, based on the various syntax error that are possible when specifying object names.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73265" class="refsect2"><a id="BJEFIFBJ"></a>
<h3 class="refsect2"><a id="sthref12339"></a>NAME_TOKENIZE Procedure</h3>
<p>This procedure calls the parser to parse the given name as</p>
<p>a [. b [. c ]][@ dblink ]</p>
<p>It strips double quotes, or converts to uppercase if there are no quotes. It ignores comments of all sorts, and does no semantic analysis. Missing values are left as <code dir="ltr">NULL</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12340"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.NAME_TOKENIZE ( 
   name    IN  VARCHAR2,
   a       OUT VARCHAR2,
   b       OUT VARCHAR2,
   c       OUT VARCHAR2,
   dblink  OUT VARCHAR2, 
   nextpos OUT BINARY_INTEGER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12341"></a>Parameters</p>
<div id="ARPLS73435" class="tblformal">
<p class="titleintable"><a id="sthref12342"></a><a id="sthref12343"></a>Table 174-31 NAME_RESOLVE Procedure Parameters</p>
<table class="cellalignment4330" title="NAME_RESOLVE Procedure Parameters " summary="This table describes the Parameters of DBMS_UTILITY.NAME_RESOLVE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t32">Parameter</th>
<th class="cellalignment4328" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t32" headers="r1c1-t32">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t32 r1c2-t32">
<p>Input name, consisting of SQL identifiers (for example, scott.foo@dblink)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t32" headers="r1c1-t32">
<p><code dir="ltr">a</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t32 r1c2-t32">
<p>Output for the first token of the name</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t32" headers="r1c1-t32">
<p><code dir="ltr">b</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t32 r1c2-t32">
<p>Output for the second token of the name (if applicable)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t32" headers="r1c1-t32">
<p><code dir="ltr">c</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t32 r1c2-t32">
<p>Output for the third token of the name (if applicable)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t32" headers="r1c1-t32">
<p><code dir="ltr">dblink</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t32 r1c2-t32">
<p>Output for the <code dir="ltr">dblink</code> of the name</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t32" headers="r1c1-t32">
<p><code dir="ltr">nextpos</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t32 r1c2-t32">
<p>Next position after parsing the input name</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73266" class="refsect2"><a id="BABICAFJ"></a>
<h3 class="refsect2"><a id="sthref12344"></a>OLD_CURRENT_SCHEMA Function</h3>
<p>This function returns the session value from <code dir="ltr">sys_context</code> (&#39;<code dir="ltr">userenv</code>&#39;, &#39;<code dir="ltr">current_schema</code>&#39;).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12345"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.OLD_CURRENT_SCHEMA 
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73267" class="refsect2"><a id="BABFFEIB"></a>
<h3 class="refsect2"><a id="sthref12346"></a>OLD_CURRENT_USER Function</h3>
<p>This function returns the session value from <code dir="ltr">sys_context</code> (&#39;<code dir="ltr">userenv</code>&#39;, &#39;<code dir="ltr">current_user</code>&#39;).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12347"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.OLD_CURRENT_USER 
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73268" class="refsect2"><a id="i997419"></a>
<h3 class="refsect2"><a id="sthref12348"></a>PORT_STRING Function</h3>
<p>This function returns a string that identifies the operating system and the <code dir="ltr">TWO</code> <code dir="ltr">TASK</code> <code dir="ltr">PROTOCOL</code> version of the database. For example, &#34;<code dir="ltr">VAX/VMX-7</code>.<code dir="ltr">1</code>.<code dir="ltr">0</code>.<code dir="ltr">0</code>&#34;</p>
<p>The maximum length is port-specific.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12349"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.PORT_STRING 
   RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12350"></a>Pragmas</p>
<pre dir="ltr"><a id="i997456"></a>
pragma restrict_references(port_string, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73269" class="refsect2"><a id="BABEBJAI"></a>
<h3 class="refsect2"><a id="sthref12351"></a>SQLID_TO_SQLHASH Function</h3>
<p>This function converts a SQL ID into a hash value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12352"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.SQLID_TO_SQLHASH (
   sql_id    IN   VARCHAR2) 
 RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12353"></a>Parameters</p>
<div id="ARPLS73270" class="tblformal">
<p class="titleintable"><a id="sthref12354"></a><a id="sthref12355"></a>Table 174-32 SQLID_TO_SQLHASH Function Parameters</p>
<table class="cellalignment4330" title="SQLID_TO_SQLHASH Function Parameters " summary="This table describes the Parameters of DBMS_UTILITY.SQLID_TO_SQLHASH subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t33">Parameter</th>
<th class="cellalignment4328" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t33" headers="r1c1-t33">
<p><code dir="ltr">sql_id</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t33 r1c2-t33">
<p>SQL ID of a SQL statement. Must be <code dir="ltr">VARCHAR2</code><code dir="ltr">(13)</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73271" class="refsect2"><a id="i1002844"></a>
<h3 class="refsect2"><a id="sthref12356"></a>TABLE_TO_COMMA Procedures</h3>
<p>This procedure converts a PL/SQL table of names into a comma-delimited list of names. This takes a PL/SQL table, <code dir="ltr">1..n</code>, terminated with <code dir="ltr">n+1</code> <code dir="ltr">null</code>. The second version supports fully-qualified attribute names.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12357"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.TABLE_TO_COMMA ( 
   tab    IN  UNCL_ARRAY, 
   tablen OUT BINARY_INTEGER,
   list   OUT VARCHAR2);

DBMS_UTILITY.TABLE_TO_COMMA ( 
   tab    IN  lname_array,
   tablen OUT BINARY_INTEGER,
   list   OUT VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12358"></a>Parameters</p>
<div id="ARPLS73272" class="tblformal">
<p class="titleintable"><a id="sthref12359"></a><a id="sthref12360"></a>Table 174-33 TABLE_TO_COMMA Procedure Parameters</p>
<table class="cellalignment4330" title="TABLE_TO_COMMA Procedure Parameters" summary="This table describes the Parameters of DBMS_UTILITY.TABLE_TO_COMMA subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t34">Parameter</th>
<th class="cellalignment4328" id="r1c2-t34">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t34" headers="r1c1-t34">
<p><code dir="ltr">tab</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t34 r1c2-t34">
<p>PL/SQL table which contains list of table names</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t34" headers="r1c1-t34">
<p><code dir="ltr">tablen</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t34 r1c2-t34">
<p>Number of tables in the PL/SQL table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t34" headers="r1c1-t34">
<p><code dir="ltr">list</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t34 r1c2-t34">
<p>Comma separated list of tables</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12361"></a>Return Values</p>
<p>A comma-delimited list and the number of elements found in the table.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73273" class="refsect2"><a id="i1005273"></a>
<h3 class="refsect2"><a id="sthref12362"></a>VALIDATE Procedure</h3>
<p>This procedure makes invalid database objects valid.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12363"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.VALIDATE(
    object_id       NUMBER);

DBMS_UTILITY.VALIDATE(
   owner          VARCHAR2, 
   objname        VARCHAR2, 
   namespace      NUMBER,   edition_name   := SYS_CONTEXT (&#39;USERENV&#39;, &#39;CURRENT_EDITION&#39;));
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12364"></a>Parameters</p>
<div id="ARPLS73274" class="tblformal">
<p class="titleintable"><a id="sthref12365"></a><a id="sthref12366"></a>Table 174-34 VALIDATE Procedure Parameters</p>
<table class="cellalignment4330" title="VALIDATE Procedure Parameters" summary="This table describes the Parameters of DBMS_UTILITY.VALIDATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t35">Parameter</th>
<th class="cellalignment4328" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t35" headers="r1c1-t35">
<p><code dir="ltr">owner</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t35 r1c2-t35">
<p>Name of the user who owns the object. Same as the <code dir="ltr">OWNER</code> field in <code dir="ltr">ALL_OBJECTS</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t35" headers="r1c1-t35">
<p><code dir="ltr">objname</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t35 r1c2-t35">
<p>Name of the object to be validated. Same as the <code dir="ltr">OBJECT_NAME</code> field in <code dir="ltr">ALL_OBJECTS</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t35" headers="r1c1-t35">
<p><code dir="ltr">namespace</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t35 r1c2-t35">
<p>Namespace of the object. Same as the namespace field in <code dir="ltr">obj$</code>. Equivalent numeric values are as follows:</p>
<ul>
<li>
<p>1 = <code dir="ltr">TABLE</code>/<code dir="ltr">PROCEDURE</code>/<code dir="ltr">TYPE</code></p>
</li>
<li>
<p>2 = <code dir="ltr">BODY</code></p>
</li>
<li>
<p>3 = <code dir="ltr">TRIGGER</code></p>
</li>
<li>
<p>4 = <code dir="ltr">INDEX</code></p>
</li>
<li>
<p>5 = <code dir="ltr">CLUSTER</code></p>
</li>
<li>
<p>8 = <code dir="ltr">LOB</code></p>
</li>
<li>
<p>9 = <code dir="ltr">DIRECTORY</code></p>
</li>
<li>
<p>10 = <code dir="ltr">QUEUE</code></p>
</li>
<li>
<p>11 = <code dir="ltr">REPLICATION</code> <code dir="ltr">OBJECT</code> <code dir="ltr">GROUP</code></p>
</li>
<li>
<p>12 = <code dir="ltr">REPLICATION</code> <code dir="ltr">PROPAGATOR</code></p>
</li>
<li>
<p>13 = <code dir="ltr">JAVA</code> <code dir="ltr">SOURCE</code></p>
</li>
<li>
<p>14 = <code dir="ltr">JAVA</code> <code dir="ltr">RESOURCE</code></p>
</li>
<li>
<p>58 = (Data Mining) <code dir="ltr">MODEL</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t35" headers="r1c1-t35">
<p><code dir="ltr">edition_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t35 r1c2-t35">
<p>[Note: Currently not operable. Reserved for future use]</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12367"></a>Usage Notes</p>
<ul>
<li>
<p>No errors are raised if the object does not exist or is already valid or is an object that cannot be validated.</p>
</li>
<li>
<p>If the object being validated is not actual in the specified edition, the subprogram automatically switches into the edition in which the object is actual prior to validation. That is, a call to VALIDATE will not actualize the object in the specified edition.</p>
</li>
<li>
<p>The <a href="#BABFDACJ">INVALIDATE Procedure</a> invalidates a database object and optionally changes its PL/SQL compiler parameter settings. The object to be invalidated is specified by its <code dir="ltr">object_id</code>. The subprogram automatically switches to the edition in which the object is actual prior to invalidation. That is, a call to <code dir="ltr">INVALIDATE</code> will not actualize the object in the current edition.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73275" class="refsect2"><a id="BABCAEFB"></a>
<h3 class="refsect2"><a id="sthref12368"></a>WAIT_ON_PENDING_DML Function</h3>
<p>This function waits until all transactions (other than the caller&#39;s own) that have locks on the listed tables and began prior to the specified <code dir="ltr">scn</code> have either committed or been rolled back.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12369"></a>Syntax</p>
<pre dir="ltr">DBMS_UTILITY.WAIT_ON_PENDING_DML (
    tables     IN       VARCHAR2,
    timeout    IN       BINARY_INTEGER,
    scn        IN OUT   NUMBER)
  RETURN BOOLEAN;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12370"></a>Parameters</p>
<div id="ARPLS73276" class="tblformal">
<p class="titleintable"><a id="sthref12371"></a><a id="sthref12372"></a>Table 174-35 WAIT_ON_PENDING_DML Function Parameters</p>
<table class="cellalignment4330" title="WAIT_ON_PENDING_DML Function Parameters" summary="This table describes the Parameters of DBMS_UTILITY.WAIT_ON_PENDING_DML subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t36">Parameter</th>
<th class="cellalignment4328" id="r1c2-t36">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t36" headers="r1c1-t36">
<p><code dir="ltr">tables</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t36 r1c2-t36">
<p>Comma-separated list of one or more table names. The list must be valid for <a href="#i1002468">COMMA_TO_TABLE Procedures</a>, and each item valid to the <a href="#i997271">NAME_RESOLVE Procedure</a>. Neither column specifiers nor DBLINK (database link) specifiers are allowed in the names, and each name must resolve to an existing table in the local database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t36" headers="r1c1-t36">
<p><code dir="ltr">timeout</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t36 r1c2-t36">
<p>Maximum number of seconds to wait, totalled across all tables/transactions. A <code dir="ltr">NULL</code> or negative value will cause a very long wait.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t36" headers="r1c1-t36">
<p><code dir="ltr">scn</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t36 r1c2-t36">
<p>SCN prior to which transactions must have begun to be considered relevant to this request. If the value is <code dir="ltr">NULL</code> or not recognized as a meaningful scn on input, the most current SCN across all instances will be used and will be set into the passed argument as an output. If a meaningful value is passed in, its value will be preserved in the output.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref12373"></a>Return Values</p>
<p><code dir="ltr">TRUE</code> if all relevant transactions have committed or been rolled back, <code dir="ltr">FALSE</code> if the timeout occurred prior to all relevant transactions committing or being rolled back</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_types.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_warn.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>