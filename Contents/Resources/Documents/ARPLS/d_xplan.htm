<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2403"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_XPLAN"></a><title>DBMS_XPLAN</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:37:2Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_xmltranslations.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_xslpro.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">206/290</span> <!-- End Header -->
<div id="ARPLS378" class="chapter"><a id="CACFJGHG"></a>
<h1 class="chapter"><span class="secnum">202</span> DBMS_XPLAN</h1>
<p>The <code dir="ltr"><a id="sthref15967"></a></code><code dir="ltr">DBMS_XPLAN</code> package provides an easy way to display the output of the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> command in several, predefined formats. You can also use the <code dir="ltr">DBMS_XPLAN</code> package to display the plan of a statement stored in the Automatic Workload Repository (AWR) or stored in a SQL tuning set. It further provides a way to display the SQL execution plan and SQL execution runtime statistics for cached SQL cursors based on the information stored in the <code dir="ltr">V$SQL_PLAN</code> and <code dir="ltr">V$SQL_PLAN_STATISTICS_ALL</code> fixed views. Finally, it displays plans from a SQL plan baseline.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>For more information on the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> command, the AWR, and SQL tuning set, see <a class="olink TGSQL" href="../TGSQL/toc.htm"><span class="italic">Oracle Database SQL Tuning Guide</span></a>.</p>
</li>
<li>
<p>For more information on the <code dir="ltr">V$SQL_PLAN</code> and <code dir="ltr">V$SQL_PLAN_STATISTICS</code> fixed views, see <a class="olink REFRN" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference.</span></a></p>
</li>
</ul>
</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CACIBCCD">Using DBMS_XPLAN</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Examples</p>
</li>
</ul>
</li>
<li>
<p><a href="#i996786">Summary of DBMS_XPLAN Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CACIBCCD"></a>
<div id="ARPLS70122" class="refsect1">
<h2 class="refsect1">Using DBMS_XPLAN</h2>
<ul>
<li>
<p><a href="#i999189">Overview</a></p>
</li>
<li>
<p><a href="#i999214">Security Model</a></p>
</li>
<li>
<p><a href="#i999234">Examples</a></p>
</li>
</ul>
<div id="ARPLS70123" class="refsect2"><a id="i999189"></a>
<h3 class="refsect2">Overview</h3>
<p>The <code dir="ltr">DBMS_XPLAN</code> package supplies five table functions:</p>
<ul>
<li>
<p><code dir="ltr">DISPLAY</code> - to format and display the contents of a plan table.</p>
</li>
<li>
<p><code dir="ltr">DISPLAY_AWR</code> - to format and display the contents of the execution plan of a stored SQL statement in the AWR.</p>
</li>
<li>
<p><code dir="ltr">DISPLAY_CURSOR</code> - to format and display the contents of the execution plan of any loaded cursor.</p>
</li>
<li>
<p><code dir="ltr">DISPLAY_SQL_PLAN_BASELINE</code> - to display one or more execution plans for the SQL statement identified by SQL handle</p>
</li>
<li>
<p><code dir="ltr">DISPLAY_SQLSET</code> - to format and display the contents of the execution plan of statements stored in a SQL tuning set.</p>
</li>
</ul>
</div>
<!-- class="refsect2" -->
<div id="ARPLS70124" class="refsect2"><a id="i999214"></a>
<h3 class="refsect2">Security Model</h3>
<p>This package runs with the privileges of the calling user, not the package owner (<code dir="ltr">SYS</code>). The table function <code dir="ltr">DISPLAY_CURSOR</code> requires <code dir="ltr">SELECT</code> or <code dir="ltr">READ</code> privileges on the following fixed views: <code dir="ltr">V$SQL_PLAN</code>, <code dir="ltr">V$SESSION</code> and <code dir="ltr">V$SQL_PLAN_STATISTICS_ALL.</code></p>
<p>Using the <a href="#i999706">DISPLAY_AWR Function</a> requires the user to have <code dir="ltr">SELECT</code> or <code dir="ltr">READ</code> privileges on <code dir="ltr">DBA_HIST_SQL_PLAN</code>, <code dir="ltr">DBA_HIST_SQLTEXT</code>, and <code dir="ltr">V$DATABASE</code>.</p>
<p>Using the <a href="#CHDCBBAB">DISPLAY_SQLSET Function</a>requires the user to have the <code dir="ltr">SELECT</code> or <code dir="ltr">READ</code> privilege on <code dir="ltr">ALL_SQLSET_STATEMENTS</code> and <code dir="ltr">ALL_SQLSET_PLANS</code>.</p>
<p>Using <a href="#BABFBBGC">DISPLAY_SQL_PLAN_BASELINE Function</a> requires the user to have the <code dir="ltr">SELECT</code> or <code dir="ltr">READ</code> privilege on <code dir="ltr">DBA_SQL_PLAN_BASELINES</code> as well as the privileges to execute the SQL statement for which the user is trying to get the plan.</p>
<p>All these privileges are automatically granted as part of the <code dir="ltr">SELECT_CATALOG</code> role.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS70125" class="refsect2"><a id="i999234"></a>
<h3 class="refsect2">Examples</h3>
<p class="subhead2"><a id="i999156"></a><a id="ARPLS70126"></a>Displaying a Plan Table Using DBMS_XPLAN.DISPLAY</p>
<p>Execute an explain plan command on a <code dir="ltr">SELECT</code> statement:</p>
<pre dir="ltr">EXPLAIN PLAN FOR
SELECT * FROM emp e, dept d
   WHERE e.deptno = d.deptno
   AND e.ename=&#39;benoit&#39;;
</pre>
<p>Display the plan using the <code dir="ltr">DBMS_XPLAN.DISPLAY</code> table function</p>
<pre dir="ltr">SET LINESIZE 130
SET PAGESIZE 0
SELECT * FROM table(DBMS_XPLAN.DISPLAY);
</pre>
<p>This query produces the following output:</p>
<pre dir="ltr">Plan hash value: 3693697075
---------------------------------------------------------------------------
| Id  | Operation          | Name | Rows  | Bytes | Cost (%CPU)| Time     |
---------------------------------------------------------------------------
|   0 | SELECT STATEMENT   |      |     1 |    57 |     6  (34)| 00:00:01 |
|*  1 |  HASH JOIN         |      |     1 |    57 |     6  (34)| 00:00:01 |
|*  2 |   TABLE ACCESS FULL| EMP  |     1 |    37 |     3  (34)| 00:00:01 |
|   3 |   TABLE ACCESS FULL| DEPT |     4 |    80 |     3  (34)| 00:00:01 |
---------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------
   1 - access(&#34;E&#34;.&#34;DEPTNO&#34;=&#34;D&#34;.&#34;DEPTNO&#34;)
   2 - filter(&#34;E&#34;.&#34;ENAME&#34;=&#39;benoit&#39;)

15 rows selected.
</pre>
<p class="subhead2"><a id="ARPLS70127"></a>Displaying a Cursor Execution Plan Using DBMS_XPLAN.DISPLAY_CURSOR</p>
<p>By default, the table function <code dir="ltr">DISPLAY_CURSOR</code> formats the execution plan for the last SQL statement executed by the session. For example:</p>
<pre dir="ltr">SELECT ename  FROM  emp e, dept d 
   WHERE   e.deptno = d.deptno  
   AND   e.empno=7369;

ENAME
----------
SMITH
</pre>
<p>To display the execution plan of the last executed statement for that session:</p>
<pre dir="ltr">SET PAGESIZE 0
SELECT * FROM table(DBMS_XPLAN.DISPLAY_CURSOR);
</pre>
<p>This query produces the following output:</p>
<pre dir="ltr">Plan hash value: 3693697075, SQL hash value: 2096952573, child number: 0
------------------------------------------------------------------
SELECT ename FROM emp e, dept d WHERE e.deptno = d.deptno
AND e.empno=7369

---------------------------------------------------------------------------
| Id  | Operation          | Name | Rows  | Bytes | Cost (%CPU)| Time     |
---------------------------------------------------------------------------
|   0 | SELECT STATEMENT   |      |       |       |            |          |
|*  1 |  HASH JOIN         |      |     1 |    16 |     6  (34)| 00:00:01 |
|*  2 |   TABLE ACCESS FULL| EMP  |     1 |    13 |     3  (34)| 00:00:01 |
|   3 |   TABLE ACCESS FULL| DEPT |     4 |    12 |     3  (34)| 00:00:01 |
---------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------
   1 - access(&#34;E&#34;.&#34;DEPTNO&#34;=&#34;D&#34;.&#34;DEPTNO&#34;)
   2 - filter(&#34;E&#34;.&#34;EMPNO&#34;=7369)

21 rows selected.
</pre>
<p>You can also use the table function <code dir="ltr">DISPLAY_CURSOR</code> to display the execution plan for any loaded cursor stored in the cursor cache. In that case, you must supply a reference to the child cursor to the table function. This includes the SQL ID of the statement and optionally the child number.</p>
<p>Run a query with a distinctive comment:</p>
<pre dir="ltr">SELECT /* TOTO */ ename, dname 
FROM dept d join emp e USING (deptno);
</pre>
<p>Get <code dir="ltr">sql_id</code> and <code dir="ltr">child_number</code> for the preceding statement:</p>
<pre dir="ltr">SELECT sql_id, child_number
FROM v$sql 
WHERE sql_text LIKE &#39;%TOTO%&#39;;

SQL_ID         CHILD_NUMBER
----------     -----------------------------
gwp663cqh5qbf   0
</pre>
<p>Display the execution plan for the cursor:</p>
<pre dir="ltr">SELECT * FROM table(DBMS_XPLAN.DISPLAY_CURSOR(&#39;gwp663cqh5qbf&#39;,0));

Plan hash value: 3693697075, SQL ID: gwp663cqh5qbf, child number: 0
--------------------------------------------------------
SELECT /* TOTO */ ename, dname 
FROM dept d JOIN emp e USING (deptno);

----------------------------------------------------------------------------
| Id  | Operation           | Name | Rows  | Bytes | Cost (%CPU)| Time     |
----------------------------------------------------------------------------
|   0 | SELECT STATEMENT    |      |       |       |     7 (100)|          |
|   1 |  SORT GROUP BY      |      |     4 |    64 |     7  (43)| 00:00:01 |
|*  2 |   HASH JOIN         |      |    14 |   224 |     6  (34)| 00:00:01 |
|   3 |    TABLE ACCESS FULL| DEPT |     4 |    44 |     3  (34)| 00:00:01 |
|   4 |    TABLE ACCESS FULL| EMP  |    14 |    70 |     3  (34)| 00:00:01 |
----------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------
   2 - access(&#34;E&#34;.&#34;DEPTNO&#34;=&#34;D&#34;.&#34;DEPTNO&#34;)
</pre>
<p>Instead of issuing two queries, one to the get the sql_id and child_number pair and one to display the plan, you can combine these in a single query:</p>
<p>Display the execution plan of all cursors matching the string &#39;TOTO&#39;:</p>
<pre dir="ltr">SELECT t.*
FROM v$sql s, table(DBMS_XPLAN.DISPLAY_CURSOR(s.sql_id, s.child_number)) t WHERE sql_text LIKE &#39;%TOTO%&#39;;
</pre>
<p class="subhead2"><a id="ARPLS70128"></a>Displaying a Plan Table with Parallel Information</p>
<p>By default, only relevant information is reported by the display and <code dir="ltr">display_cursor</code> table functions. In <a href="#i999156">Displaying a Plan Table Using DBMS_XPLAN.DISPLAY</a>, the query does not execute in parallel. Hence, information related to the parallelization of the plan is not reported. As shown in the following example, parallel information is reported only if the query executes in parallel.</p>
<pre dir="ltr">ALTER TABLE emp PARALLEL;
EXPLAIN PLAN for
SELECT * FROM emp e, dept d
   WHERE e.deptno = d.deptno
   AND e.ename    =&#39;hermann&#39;
   ORDER BY e.empno;
</pre>
<p>Display the plan using the <code dir="ltr">DBMS_XPLAN.DISPLAY</code> table function</p>
<pre dir="ltr">SET LINESIZE 130
SET PAGESIZE 0
SELECT * FROM table(DBMS_XPLAN.DISPLAY);
Plan hash value: 3693697345
</pre>
<pre dir="ltr">-------------------------------------------------------------------------------------------------------------
| Id | Operation          | Name    | Rows | Bytes | Cost (%CPU)| Time     | TQ    |INOUT |PQ Distrib   |
-------------------------------------------------------------------------------------------------------------
| 0  | SELECT STATEMENT   |         | 1    | 117   | 6 (50)     | 00:00:01 |       |      |             |
| 1  | PX COORDINATOR     |         |      |       |            |          |       |      |             |
| 2  | PX SEND QC (ORDER) |:TQ10003 | 1    | 117   | 6 (50)     | 00:00:01 | Q1,03 | P-&gt;S | QC (ORDER)  |
| 3  | SORT ORDER BY      |         | 1    | 117   | 6 (50)     | 00:00:01 | Q1,03 | PCWP |             |
| 4  | PX RECEIVE         |         | 1    | 117   | 5 (40)     | 00:00:01 | Q1,03 | PCWP |             |
| 5  | PX SEND RANGE      |:TQ10002 | 1    | 117   | 5 (40)     | 00:00:01 | Q1,02 | P-&gt;P | RANGE       |
|* 6 | HASH JOIN          |         | 1    | 117   | 5 (40)     | 00:00:01 | Q1,02 | PCWP |             |
| 7  | PX RECEIVE         |         | 1    | 87    | 2 (50)     | 00:00:01 | Q1,02 | PCWP |             |
| 8  | PX SEND HASH       |:TQ10001 | 1    | 87    | 2 (50)     | 00:00:01 | Q1,01 | P-&gt;P | HASH        |
| 9  | PX BLOCK ITERATOR  |         | 1    | 87    | 2 (50)     | 00:00:01 | Q1,01 | PCWC |             |
|* 10| TABLE ACCESS FULL  | EMP     | 1    | 87    | 2 (50)     | 00:00:01 | Q1,01 | PCWP |             |
| 11 | BUFFER SORT        |         |      |       |            |          | Q1,02 | PCWC |             |
| 12 | PX RECEIVE         |         | 4    | 120   | 3 (34)     | 00:00:01 | Q1,02 | PCWP |             |
| 13 | PX SEND HASH       |:TQ10000 | 4    | 120   | 3 (34)     | 00:00:01 |       | S-&gt;P | HASH        |
| 14 | TABLE ACCESS FULL  | DEPT    | 4    | 120   | 3 (34)     | 00:00:01 |       |      |             |
-------------------------------------------------------------------------------------------------------------
Predicate Information (identified by operation id):
---------------------------------------------------
6 - access(&#34;E&#34;.&#34;DEPTNO&#34;=&#34;D&#34;.&#34;DEPTNO&#34;)
10 - filter(&#34;E&#34;.&#34;ENAME&#34;=&#39;hermann&#39;)
---------------------------------------------------
</pre>
<p>When the query is parallel, information related to parallelism is reported: table queue number (<code dir="ltr">TQ</code> column), table queue type (<code dir="ltr">INOUT</code>) and table queue distribution method (<code dir="ltr">PQ Distrib</code>).</p>
<p>By default, if several plans in the plan table match the <code dir="ltr">statement_id</code> parameter passed to the display table function (default value is <code dir="ltr">NULL</code>), only the plan corresponding to the last <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> command is displayed. Hence, there is no need to purge the plan table after each <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code>. However, you should purge the plan table regularly to ensure good performance in the execution of the <code dir="ltr">DISPLAY</code> table function. If no plan table is created, Oracle uses a global temporary table to store any plan information for individual users and preserves its content throughout the lifespan of a session. Note that you cannot truncate the content of a global temporary table.</p>
<p>For ease of use, you can define a view on top of the display table function and then use that view to display the output of the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> command:</p>
<p class="subhead2"><a id="ARPLS70129"></a>Using a View to Display Last Explain Plan</p>
<pre dir="ltr"># define plan view
CREATE VIEW PLAN AS SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

# display the output of the last explain plan command
SELECT * FROM PLAN;
</pre></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i996786"></a>
<div id="ARPLS70130" class="refsect1">
<h2 class="refsect1">Summary of DBMS_XPLAN Subprograms</h2>
<div id="ARPLS70131" class="tblformal">
<p class="titleintable"><a id="sthref15968"></a><a id="sthref15969"></a>Table 202-1 <span class="bolditalic">DBMS_XPLAN Package Subprograms</span></p>
<table class="cellalignment4330" title=" DBMS_XPLAN Package Subprograms " summary="This table lists the DBMS_XPLAN subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t3">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#BABJIACA">DIFF_PLAN Function</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t3 r1c2-t3">
<p>Compares plans</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#CACICEDJ">DISPLAY Function</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t3 r1c2-t3">
<p>Displays the contents of the plan table</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#i999706">DISPLAY_AWR Function</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t3 r1c2-t3">
<p>Displays the contents of an execution plan stored in the AWR</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#i998364">DISPLAY_CURSOR Function</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t3 r1c2-t3">
<p>Displays the execution plan of any cursor in the cursor cache</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#BABFAEEG">DISPLAY_PLAN Function</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t3 r1c2-t3">
<p>Displays the contents of the plan table in a variety of formats with <code dir="ltr">CLOB</code> output type</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#BABFBBGC">DISPLAY_SQL_PLAN_BASELINE Function</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t3 r1c2-t3">
<p>Displays one or more execution plans for the specified SQL handle of a SQL plan baseline</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#CHDCBBAB">DISPLAY_SQLSET Function</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t3 r1c2-t3">
<p>Displays the execution plan of a given statement stored in a SQL tuning set</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS74741" class="refsect2"><a id="BABJIACA"></a>
<h3 class="refsect2"><a id="sthref15970"></a>DIFF_PLAN Function</h3>
<p>This function compares plans.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15971"></a>Syntax</p>
<pre dir="ltr">DBMS_XPLAN.DIFF_PLAN(
   plan1    IN   SPC_SRC,
   plan2    IN   SPC_SRC)
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15972"></a>Parameters</p>
<div id="ARPLS74742" class="tblformal">
<p class="titleintable"><a id="sthref15973"></a><a id="sthref15974"></a>Table 202-2 DIFF_PLAN Function Parameters</p>
<table class="cellalignment4330" title="DIFF_PLAN Function Parameters" summary="This table describes the Parameters of DBMS_XPLAN.DIFF_PLAN subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Parameter</th>
<th class="cellalignment4328" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">plan_1</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p>First plan</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">plan_2</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<p>Second plan</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70132" class="refsect2"><a id="CACICEDJ"></a>
<h3 class="refsect2"><a id="sthref15975"></a>DISPLAY Function</h3>
<p>This table function displays the contents of the plan table.</p>
<p>In addition, you can use this table function to display any plan (with or without statistics) stored in a table as long as the columns of this table are named the same as columns of the plan table (or <code dir="ltr">V$SQL_PLAN_STATISTICS_ALL</code> if statistics are included). You can apply a predicate on the specified table to select rows of the plan to display.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15976"></a>Syntax</p>
<pre dir="ltr">DBMS_XPLAN.DISPLAY(
   table_name    IN  VARCHAR2  DEFAULT &#39;PLAN_TABLE&#39;,
   statement_id  IN  VARCHAR2  DEFAULT  NULL, 
   format        IN  VARCHAR2  DEFAULT  &#39;TYPICAL&#39;,
   filter_preds  IN  VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15977"></a>Parameters</p>
<div id="ARPLS70133" class="tblformal">
<p class="titleintable"><a id="sthref15978"></a><a id="sthref15979"></a>Table 202-3 DISPLAY Function Parameters</p>
<table class="cellalignment4330" title="DISPLAY Function Parameters" summary="This table describes the Parameters of DBMS_XPLAN.DISPLAY subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5">Parameter</th>
<th class="cellalignment4328" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p>Specifies the table name where the plan is stored. This parameter defaults to <code dir="ltr">PLAN_TABLE,</code> which is the default plan table for the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> command. If <code dir="ltr">NULL</code> is specified it also defaults to <code dir="ltr">PLAN_TABLE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">statement_id</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c2-t5">
<p>Specifies the <code dir="ltr">statement_id</code> of the plan to be displayed. This parameter defaults to <code dir="ltr">NULL,</code> which is the default when the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> command is executed without a <code dir="ltr">set</code> <code dir="ltr">statement_id</code> clause.If no <code dir="ltr">statement_id</code> is specified, the function shows you the plan of the most recent explained statement.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">format</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t5 r1c2-t5">
<p>Controls the level of details for the plan. It accepts four values:</p>
<ul>
<li>
<p><code dir="ltr">BASIC</code>: Displays the minimum information in the plan&mdash;the operation ID, the operation name and its option.</p>
</li>
<li>
<p><code dir="ltr">TYPICAL</code>: This is the default. Displays the most relevant information in the plan (operation id, name and option, #rows, #bytes and optimizer cost). Pruning, parallel and predicate information are only displayed when applicable. Excludes only <code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> information (see below).</p>
</li>
<li>
<p><code dir="ltr">SERIAL</code>: Like <code dir="ltr">TYPICAL</code> except that the parallel information is not displayed, even if the plan executes in parallel.</p>
</li>
<li>
<p><code dir="ltr">ALL</code>: Maximum user level. Includes information displayed with the <code dir="ltr">TYPICAL</code> level with additional information (<code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and information about <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> if the operation is distributed).</p>
</li>
</ul>
<p>For finer control on the display output, the following keywords can be added to the above three standard format options to customize their default behavior. Each keyword either represents a logical group of plan table columns (such as <code dir="ltr">PARTITION</code>) or logical additions to the base plan table output (such as <code dir="ltr">PREDICATE</code>). Format keywords must be separated by either a comma or a space:</p>
<ul>
<li>
<p><code dir="ltr">ROWS</code> - if relevant, shows the number of rows estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">BYTES</code> - if relevant, shows the number of bytes estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">COST</code> - if relevant, shows optimizer cost information</p>
</li>
<li>
<p><code dir="ltr">PARTITION</code> - if relevant, shows partition pruning information</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> - if relevant, shows PX information (distribution method and table queue information)</p>
</li>
<li>
<p><code dir="ltr">PREDICATE</code> - if relevant, shows the predicate section</p>
</li>
<li>
<p><code dir="ltr">PROJECTION</code> -if relevant, shows the projection section</p>
</li>
<li>
<p><code dir="ltr">ALIAS</code> - if relevant, shows the &#34;Query Block Name / Object Alias&#34; section</p>
</li>
<li>
<p><code dir="ltr">REMOTE</code> - if relevant, shows the information for distributed query (for example, remote from serial distribution and remote SQL)</p>
</li>
<li>
<p><code dir="ltr">NOTE</code> - if relevant, shows the note section of the explain plan</p>
</li>
</ul>
<p>Format keywords can be prefixed by the sign &#39;<code dir="ltr">-</code>&#39; to exclude the specified information. For example, &#39;<code dir="ltr">-PROJECTION</code>&#39; excludes projection information.</p>
<p>If the target plan table (see <code dir="ltr">table_name</code> parameter) also stores plan statistics columns (for example, it is a table used to capture the content of the fixed view <code dir="ltr">V$SQL_PLAN_STATISTICS_ALL</code>), additional format keywords can be used to specify which class of statistics to display when using the <a href="#CACICEDJ">DISPLAY Function</a>. These additional format keywords are <code dir="ltr">IOSTATS</code>, <code dir="ltr">MEMSTATS</code>, <code dir="ltr">ALLSTATS</code> and <code dir="ltr">LAST</code> (see the <a href="#i998364">DISPLAY_CURSOR Function</a> or the <a href="#CHDCBBAB">DISPLAY_SQLSET Function</a> for a full description of these four keywords).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t5" headers="r1c1-t5">
<p><code dir="ltr">filter_preds</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t5 r1c2-t5">
<p>SQL filter predicate(s) to restrict the set of rows selected from the table where the plan is stored. When value is <code dir="ltr">NULL</code> (the default), the plan displayed corresponds to the last executed explain plan. For example: <code dir="ltr">filter_preds=&gt;&#39;plan_id = 10&#39;</code></p>
<p>Can reference any column of the table where the plan is stored and can contain any SQL construct (for example, sub-query, function calls (see <code dir="ltr"><span class="codeinlinebold">WARNING</span></code> under Usage Notes)</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15980"></a>Usage Notes</p>
<p>Here are some ways you might use variations on the <code dir="ltr">format</code> parameter:</p>
<ul>
<li>
<p>Use &#39;<code dir="ltr">ALL -PROJECTION -NOTE</code>&#39; to display everything except the projection and note sections.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">TYPICAL PROJECTION</code>&#39; to display using the typical format with the additional projection section (which is normally excluded under the typical format). Since typical is default, using simply &#39;<code dir="ltr">PROJECTION</code>&#39; is equivalent.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">-BYTES -COST -PREDICATE</code>&#39; to display using the typical format but excluding optimizer cost and byte estimates as well as the predicate section.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">BASIC ROWS</code>&#39; to display basic information with the additional number of rows estimated by the optimizer.</p>
<div class="infoboxnotewarn">
<p class="notep1">WARNING:</p>
<p class="warnsp">Application developers should expose the <code dir="ltr">filter_preds</code> parameter to end-users only after careful consideration because this could expose the application to SQL injection. Indeed, <code dir="ltr">filter_preds</code> can potentially reference any table or execute any server function for which the database user invoking the table function has privileges.</p>
</div>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15981"></a>Examples</p>
<p>To display the result of the last <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> command stored in the plan table:</p>
<pre dir="ltr">SELECT * FROM table (DBMS_XPLAN.DISPLAY);
</pre>
<p>To display from other than the default plan table, &#34;<code dir="ltr">my_plan_table</code>&#34;:</p>
<pre dir="ltr">SELECT * FROM table (DBMS_XPLAN.DISPLAY(&#39;my_plan_table&#39;));
</pre>
<p>To display the minimum plan information:</p>
<pre dir="ltr">SELECT * FROM table (DBMS_XPLAN.DISPLAY(&#39;plan_table&#39;, null, &#39;basic&#39;));
</pre>
<p>To display the plan for a statement identified by &#39;<code dir="ltr">foo</code>&#39;, such as <code dir="ltr">statement_id=&#39;foo&#39;</code>:</p>
<pre dir="ltr">SELECT * FROM table (DBMS_XPLAN.DISPLAY(&#39;plan_table&#39;, &#39;foo&#39;));
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70134" class="refsect2"><a id="i999706"></a>
<h3 class="refsect2"><a id="sthref15982"></a>DISPLAY_AWR Function</h3>
<p>This table function displays the contents of an execution plan stored in the AWR.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15983"></a>Syntax</p>
<pre dir="ltr">DBMS_XPLAN.DISPLAY_AWR( 
   sql_id            IN      VARCHAR2,
   plan_hash_value   IN      NUMBER DEFAULT NULL,
   db_id             IN      NUMBER DEFAULT NULL,
   format            IN      VARCHAR2 DEFAULT TYPICAL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15984"></a>Parameters</p>
<div id="ARPLS70135" class="tblformal">
<p class="titleintable"><a id="sthref15985"></a><a id="sthref15986"></a>Table 202-4 DISPLAY_AWR Table Function Parameters</p>
<table class="cellalignment4330" title="DISPLAY_AWR Table Function Parameters " summary="This table describes the Parameters of DBMS_XPLAN.DISPLAY_AWR subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t7">Parameter</th>
<th class="cellalignment4328" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">sql_id</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t7 r1c2-t7">
<p>Specifies the <code dir="ltr">SQL_ID</code> of the SQL statement. You can retrieve the appropriate value for the SQL statement of interest by querying the column <code dir="ltr">SQL_ID</code> in <code dir="ltr">DBA_HIST_SQLTEXT</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">plan_hash_value</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t7 r1c2-t7">
<p>Specifies the <code dir="ltr">PLAN_HASH_VALUE</code> of a SQL statement. This parameter is optional. If omitted, the table function returns all stored execution plans for a given <code dir="ltr">SQL_ID</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t7" headers="r1c1-t7">
<p><code dir="ltr">db_id</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t7 r1c2-t7">
<p>Specifies the <code dir="ltr">database_id</code> for which the plan of the SQL statement, identified by <code dir="ltr">SQL_ID</code> should be displayed. If not supplied, the <code dir="ltr">database_id</code> of the local database is used, as shown in <code dir="ltr">V$DATABASE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t7" headers="r1c1-t7">
<p><code dir="ltr">format</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t7 r1c2-t7">
<p>Controls the level of details for the plan. It accepts four values:</p>
<ul>
<li>
<p><code dir="ltr">BASIC</code>: Displays the minimum information in the plan&mdash;the operation ID, the operation name and its option.</p>
</li>
<li>
<p><code dir="ltr">TYPICAL</code>: This is the default. Displays the most relevant information in the plan (operation id, name and option, #rows, #bytes and optimizer cost). Pruning, parallel and predicate information are only displayed when applicable. Excludes only <code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> information (see below).</p>
</li>
<li>
<p><code dir="ltr">SERIAL</code>: Like <code dir="ltr">TYPICAL</code> except that the parallel information is not displayed, even if the plan executes in parallel.</p>
</li>
<li>
<p><code dir="ltr">ALL</code>: Maximum user level. Includes information displayed with the <code dir="ltr">TYPICAL</code> level with additional information (<code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and information about <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> if the operation is distributed).</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t7" headers="r1c1-t7">&nbsp;</td>
<td class="cellalignment4329" headers="r6c1-t7 r1c2-t7">
<p>For finer control on the display output, the following keywords can be added to the above three standard format options to customize their default behavior. Each keyword either represents a logical group of plan table columns (such as <code dir="ltr">PARTITION</code>) or logical additions to the base plan table output (such as <code dir="ltr">PREDICATE</code>). Format keywords must be separated by either a comma or a space:</p>
<ul>
<li>
<p><code dir="ltr">ROWS</code> - if relevant, shows the number of rows estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">BYTES</code> - if relevant, shows the number of bytes estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">COST</code> - if relevant, shows optimizer cost information</p>
</li>
<li>
<p><code dir="ltr">PARTITION</code> - if relevant, shows partition pruning information</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> - if relevant, shows PX information (distribution method and table queue information)</p>
</li>
<li>
<p><code dir="ltr">PREDICATE</code> - if relevant, shows the predicate section</p>
</li>
<li>
<p><code dir="ltr">PROJECTION</code> -if relevant, shows the projection section</p>
</li>
<li>
<p><code dir="ltr">ALIAS</code> - if relevant, shows the &#34;Query Block Name / Object Alias&#34; section</p>
</li>
<li>
<p><code dir="ltr">REMOTE</code> - if relevant, shows the information for distributed query (for example, remote from serial distribution and remote SQL)</p>
</li>
<li>
<p><code dir="ltr">NOTE</code> - if relevant, shows the note section of the explain plan</p>
</li>
</ul>
<p>Format keywords can be prefixed by the sign &#39;<code dir="ltr">-</code>&#39; to exclude the specified information. For example, &#39;<code dir="ltr">-PROJECTION</code>&#39; excludes projection information.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15987"></a>Usage Notes</p>
<ul>
<li>
<p>To use the <code dir="ltr">DISPLAY_AWR</code> functionality, the calling user must have <code dir="ltr">SELECT</code> or <code dir="ltr">READ</code> privilege on <code dir="ltr">DBA_HIST_SQL_PLAN</code>, <code dir="ltr">DBA_HIST_SQLTEXT</code>, and <code dir="ltr">V$DATABASE</code>, otherwise it shows an appropriate error message.</p>
</li>
<li>
<p>Here are some ways you might use variations on the <code dir="ltr">format</code> parameter:</p>
<ul>
<li>
<p>Use &#39;<code dir="ltr">ALL -PROJECTION -NOTE</code>&#39; to display everything except the projection and note sections.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">TYPICAL PROJECTION</code>&#39; to display using the typical format with the additional projection section (which is normally excluded under the typical format). Since typical is default, using simply &#39;<code dir="ltr">PROJECTION</code>&#39; is equivalent.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">-BYTES -COST -PREDICATE</code>&#39; to display using the typical format but excluding optimizer cost and byte estimates as well as the predicate section.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">BASIC ROWS</code>&#39; to display basic information with the additional number of rows estimated by the optimizer.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15988"></a>Examples</p>
<p>To display the different execution plans associated with the SQL ID &#39;<code dir="ltr">atfwcg8anrykp</code>&#39;:</p>
<pre dir="ltr">SELECT * FROM table(DBMS_XPLAN.DISPLAY_AWR(&#39;atfwcg8anrykp&#39;));
</pre>
<p>To display all execution plans of all stored SQL statements containing the string &#39;<code dir="ltr">TOTO</code>&#39;:</p>
<pre dir="ltr">SELECT tf.* FROM DBA_HIST_SQLTEXT ht, table
    (DBMS_XPLAN.DISPLAY_AWR(ht.sql_id,null, null,  &#39;ALL&#39; )) tf 
 WHERE ht.sql_text like &#39;%TOTO%&#39;;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70136" class="refsect2"><a id="i998364"></a>
<h3 class="refsect2"><a id="sthref15989"></a>DISPLAY_CURSOR Function</h3>
<p>This table function displays the explain plan of any cursor loaded in the cursor cache. In addition to the explain plan, various plan statistics (such as. I/O, memory and timing) can be reported (based on the <code dir="ltr">V$SQL_PLAN_STATISTICS_ALL VIEWS</code>).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15990"></a>Syntax</p>
<pre dir="ltr">DBMS_XPLAN.DISPLAY_CURSOR(
   sql_id            IN  VARCHAR2  DEFAULT  NULL,
   cursor_child_no   IN  NUMBER    DEFAULT  0, 
   format            IN  VARCHAR2  DEFAULT  &#39;TYPICAL&#39;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15991"></a>Parameters</p>
<div id="ARPLS70137" class="tblformal">
<p class="titleintable"><a id="sthref15992"></a><a id="sthref15993"></a>Table 202-5 DISPLAY_CURSOR Function Parameters</p>
<table class="cellalignment4330" title="DISPLAY_CURSOR Function Parameters " summary="This table describes the Parameters of DBMS_XPLAN.DISPLAYCURSOR subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Parameter</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">sql_id</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>Specifies the <code dir="ltr">SQL_ID</code> of the SQL statement in the cursor cache. You can retrieve the appropriate value by querying the column <code dir="ltr">SQL_ID</code> in <code dir="ltr">V$SQL</code> or <code dir="ltr">V$SQLAREA</code>. Alternatively, you could choose the column <code dir="ltr">PREV_SQL_ID</code> for a specific session out of <code dir="ltr">V$SESSION</code>. This parameter defaults to <code dir="ltr">NULL</code> in which case the plan of the last cursor executed by the session is displayed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">cursor_child_no</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t8 r1c2-t8">
<p>Child number of the cursor to display. If not supplied, the execution plan of all cursors matching the supplied <code dir="ltr">sql_id</code> parameter are displayed. The <code dir="ltr">child_number</code> can be specified only if <code dir="ltr">sql_id</code> is specified.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t8" headers="r1c1-t8">
<p><code dir="ltr">format</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t8 r1c2-t8">
<p>Controls the level of details for the plan. It accepts five values:</p>
<ul>
<li>
<p><code dir="ltr">BASIC</code>: Displays the minimum information in the plan&mdash;the operation ID, the operation name and its option.</p>
</li>
<li>
<p><code dir="ltr">TYPICAL</code>: This is the default. Displays the most relevant information in the plan (operation id, name and option, #rows, #bytes and optimizer cost). Pruning, parallel and predicate information are only displayed when applicable. Excludes only <code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> information (see below).</p>
</li>
<li>
<p><code dir="ltr">SERIAL</code>: Like <code dir="ltr">TYPICAL</code> except that the parallel information is not displayed, even if the plan executes in parallel.</p>
</li>
<li>
<p><code dir="ltr">ALL</code>: Maximum user level. Includes information displayed with the <code dir="ltr">TYPICAL</code> level with additional information (<code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and information about <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> if the operation is distributed).</p>
</li>
<li>
<p><code dir="ltr">ADAPTIVE</code>:</p>
<p>- Displays the final plan, or the current plan if the execution has not completed. This section includes notes about runtime optimizations that affect the plan, such as switching from a Nested Loops join to a Hash join.</p>
<p>- Plan lineage. This section shows the plans that were run previously due to automatic reoptimization. It also shows the default plan, if the plan changed due to dynamic plans.</p>
<p>- Recommended plan. In reporting mode, the plan is chosen based on execution statistics displayed. Note that displaying the recommended plan for automatic reoptimization requires re-compiling the query with the optimizer adjustments collected in the child cursor. Displaying the recommended plan for a dynamic plan does not require this.</p>
<p>- Dynamic plans. This summarizes the portions of the plan that differ from the default plan chosen by the optimizer.</p>
</li>
</ul>
<p>For finer control on the display output, the following keywords can be added to the above three standard format options to customize their default behavior. Each keyword either represents a logical group of plan table columns (such as <code dir="ltr">PARTITION</code>) or logical additions to the base plan table output (such as <code dir="ltr">PREDICATE</code>).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t8" headers="r1c1-t8">&nbsp;</td>
<td class="cellalignment4329" headers="r5c1-t8 r1c2-t8">
<p>Format keywords must be separated by either a comma or a space:</p>
<ul>
<li>
<p><code dir="ltr">ROWS</code> - if relevant, shows the number of rows estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">BYTES</code> - if relevant, shows the number of bytes estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">COST</code> - if relevant, shows optimizer cost information</p>
</li>
<li>
<p><code dir="ltr">PARTITION</code> - if relevant, shows partition pruning information</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> - if relevant, shows PX information (distribution method and table queue information)</p>
</li>
<li>
<p><code dir="ltr">PREDICATE</code> - if relevant, shows the predicate section</p>
</li>
<li>
<p><code dir="ltr">PROJECTION</code> -if relevant, shows the projection section</p>
</li>
<li>
<p><code dir="ltr">ALIAS</code> - if relevant, shows the &#34;Query Block Name / Object Alias&#34; section</p>
</li>
<li>
<p><code dir="ltr">REMOTE</code> - if relevant, shows the information for distributed query (for example, remote from serial distribution and remote SQL)</p>
</li>
<li>
<p><code dir="ltr">NOTE</code> - if relevant, shows the note section of the explain plan</p>
</li>
<li>
<p><code dir="ltr">IOSTATS</code> - assuming that basic plan statistics are collected when SQL statements are executed (either by using the <code dir="ltr">gather_plan_statistics</code> hint or by setting the parameter statistics_level to ALL), this format shows IO statistics for <code dir="ltr">ALL</code> (or only for the <code dir="ltr">LAST</code> as shown below) executions of the cursor.</p>
</li>
<li>
<p><code dir="ltr">MEMSTATS</code> - Assuming that PGA memory management is enabled (that is, <code dir="ltr">pga_aggregate_target</code> parameter is set to a non 0 value), this format allows to display memory management statistics (for example, execution mode of the operator, how much memory was used, number of bytes spilled to disk, and so on). These statistics only apply to memory intensive operations like hash-joins, sort or some bitmap operators.</p>
</li>
<li>
<p><code dir="ltr">ALLSTATS</code> - A shortcut for <code dir="ltr">&#39;IOSTATS MEMSTATS&#39;</code></p>
</li>
<li>
<p><code dir="ltr">LAST</code> - By default, plan statistics are shown for all executions of the cursor. The keyword <code dir="ltr">LAST</code> can be specified to see only the statistics for the last execution.</p>
</li>
</ul>
<p>The following two formats are deprecated but supported for backward compatibility:</p>
<ul>
<li>
<p><code dir="ltr">RUNSTATS_TOT</code> - Same as <code dir="ltr">IOSTATS,</code> that is, displays IO statistics for all executions of the specified cursor.</p>
</li>
<li>
<p><code dir="ltr">RUNSTATS_LAST</code> - Same as <code dir="ltr">IOSTATS</code> <code dir="ltr">LAST</code>, that is, displays the runtime statistics for the last execution of the cursor</p>
</li>
</ul>
<p>Format keywords can be prefixed by the sign &#39;<code dir="ltr">-</code>&#39; to exclude the specified information. For example, &#39;<code dir="ltr">-PROJECTION</code>&#39; excludes projection information.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15994"></a>Usage Notes</p>
<ul>
<li>
<p>To use the <code dir="ltr">DISPLAY_CURSOR</code> functionality, the calling user must have <code dir="ltr">SELECT</code> or <code dir="ltr">READ</code> privilege on the fixed views <code dir="ltr">V$SQL_PLAN_STATISTICS_ALL</code>, <code dir="ltr">V$SQL</code> and <code dir="ltr">V$SQL_PLAN</code>, otherwise it shows an appropriate error message.</p>
</li>
<li>
<p>Here are some ways you might use variations on the <code dir="ltr">format</code> parameter:</p>
<ul>
<li>
<p>Use &#39;<code dir="ltr">ALL -PROJECTION -NOTE</code>&#39; to display everything except the projection and note sections.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">TYPICAL PROJECTION</code>&#39; to display using the typical format with the additional projection section (which is normally excluded under the typical format). Since typical is default, using simply &#39;<code dir="ltr">PROJECTION</code>&#39; is equivalent.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">-BYTES -COST -PREDICATE</code>&#39; to display using the typical format but excluding optimizer cost and byte estimates as well as the predicate section.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">BASIC ROWS</code>&#39; to display basic information with the additional number of rows estimated by the optimizer.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15995"></a>Examples</p>
<p>To display the execution plan of the last <code dir="ltr">SQL</code> statement executed by the current session:</p>
<pre dir="ltr">SELECT * FROM table (
   DBMS_XPLAN.DISPLAY_CURSOR);
</pre>
<p>To display the execution plan of all children associated with the SQL ID &#39;<code dir="ltr">atfwcg8anrykp</code>&#39;:</p>
<pre dir="ltr">SELECT * FROM table (
   DBMS_XPLAN.DISPLAY_CURSOR(&#39;atfwcg8anrykp&#39;));
</pre>
<p>To display runtime statistics for the cursor included in the preceding statement:</p>
<pre dir="ltr">SELECT * FROM table (
   DBMS_XPLAN.DISPLAY_CURSOR(&#39;atfwcg8anrykp&#39;, NULL, &#39;ALLSTATS LAST&#39;);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS72977" class="refsect2"><a id="BABFAEEG"></a>
<h3 class="refsect2"><a id="sthref15996"></a>DISPLAY_PLAN Function</h3>
<p>This table function displays the contents of the plan table in a variety of formats with <code dir="ltr">CLOB</code> output type.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15997"></a>Syntax</p>
<pre dir="ltr">DBMS_XPLAN.DISPLAY_PLAN (
   table_name       IN    VARCHAR2   DEFAULT &#39;PLAN_TABLE&#39;,
   statement_id     IN    VARCHAR2   DEFAULT NULL,
   format           IN    VARCHAR2   DEFAULT &#39;TYPICAL&#39;,
   filter_preds     IN    VARCHAR2   DEFAULT NULL,
   type             IN    VARCHAR2   DEFAULT &#39;TEXT&#39;)
  RETURN CLOB;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref15998"></a>Parameters</p>
<div id="ARPLS72978" class="tblformal">
<p class="titleintable"><a id="sthref15999"></a><a id="sthref16000"></a>Table 202-6 DISPLAY_PLAN Function Parameters</p>
<table class="cellalignment4330" title="DISPLAY_PLAN Function Parameters " summary="This table describes the Parameters of DBMS_XPLAN.DISPLAY_PLAN subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t9">Parameter</th>
<th class="cellalignment4328" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c2-t9">
<p>Specifies the table name where the plan is stored. This parameter defaults to <code dir="ltr">PLAN_TABLE,</code> which is the default plan table for the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> command. If <code dir="ltr">NULL</code> is specified it also defaults to <code dir="ltr">PLAN_TABLE</code>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t9" headers="r1c1-t9">
<p><code dir="ltr">statement_id</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c2-t9">
<p>Specifies the <code dir="ltr">statement_id</code> of the plan to be displayed. This parameter defaults to <code dir="ltr">NULL,</code> which is the default when the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> command is executed without a <code dir="ltr">set</code> <code dir="ltr">statement_id</code> clause.If no <code dir="ltr">statement_id</code> is specified, the function shows you the plan of the most recent explained statement.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t9" headers="r1c1-t9">
<p><code dir="ltr">filter_preds</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t9 r1c2-t9">
<p>SQL filter predicate(s) to restrict the set of rows selected from the table where the plan is stored. When value is <code dir="ltr">NULL</code> (the default), the plan displayed corresponds to the last executed explain plan. For example: <code dir="ltr">filter_preds=&gt;&#39;plan_id = 10&#39;</code></p>
<p>Can reference any column of the table where the plan is stored and can contain any SQL construct (for example, sub-query, function calls (see <code dir="ltr"><span class="codeinlinebold">WARNING</span></code> under Usage Notes)</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t9" headers="r1c1-t9">
<p><code dir="ltr">format</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t9 r1c2-t9">
<p>Controls the level of details for the plan. It accepts five values:</p>
<ul>
<li>
<p><code dir="ltr">BASIC</code>: Displays the minimum information in the plan&mdash;the operation ID, the operation name and its option.</p>
</li>
<li>
<p><code dir="ltr">TYPICAL</code>: This is the default. Displays the most relevant information in the plan (operation id, name and option, #rows, #bytes and optimizer cost). Pruning, parallel and predicate information are only displayed when applicable. Excludes only <code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> information (see below).</p>
</li>
<li>
<p><code dir="ltr">SERIAL</code>: Like <code dir="ltr">TYPICAL</code> except that the parallel information is not displayed, even if the plan executes in parallel.</p>
</li>
<li>
<p><code dir="ltr">ALL</code>: Maximum user level. Includes information displayed with the <code dir="ltr">TYPICAL</code> level with additional information (<code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and information about <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> if the operation is distributed).</p>
</li>
<li>
<p><code dir="ltr">ADAPTIVE</code>: Displays the default plan, and for each dynamic subplan (if stipulated):</p>
<p>- A list of the rowsources from the original which may be replaced, and the rowsources to replace them</p>
<p>- If outline display is specified in the format argument, the hints for each option in the dynamic subplan are displayed</p>
</li>
</ul>
<p>For finer control on the display output, the following keywords can be added to the above three standard format options to customize their default behavior. Each keyword either represents a logical group of plan table columns (such as <code dir="ltr">PARTITION</code>) or logical additions to the base plan table output (such as <code dir="ltr">PREDICATE</code>). Format keywords must be separated by either a comma or a space:</p>
<ul>
<li>
<p><code dir="ltr">ROWS</code> - if relevant, shows the number of rows estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">BYTES</code> - if relevant, shows the number of bytes estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">COST</code> - if relevant, shows optimizer cost information</p>
</li>
<li>
<p><code dir="ltr">PARTITION</code> - if relevant, shows partition pruning information</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> - if relevant, shows PX information (distribution method and table queue information)</p>
</li>
<li>
<p><code dir="ltr">PREDICATE</code> - if relevant, shows the predicate section</p>
</li>
<li>
<p><code dir="ltr">PROJECTION</code> -if relevant, shows the projection section</p>
</li>
<li>
<p><code dir="ltr">ALIAS</code> - if relevant, shows the &#34;Query Block Name / Object Alias&#34; section</p>
</li>
<li>
<p><code dir="ltr">REMOTE</code> - if relevant, shows the information for distributed query (for example, remote from serial distribution and remote SQL)</p>
</li>
<li>
<p><code dir="ltr">NOTE</code> - if relevant, shows the note section of the explain plan</p>
</li>
</ul>
<p>Format keywords can be prefixed by the sign &#39;<code dir="ltr">-</code>&#39; to exclude the specified information. For example, &#39;<code dir="ltr">-PROJECTION</code>&#39; excludes projection information.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t9" headers="r1c1-t9">&nbsp;</td>
<td class="cellalignment4329" headers="r6c1-t9 r1c2-t9">
<p>If the target plan table (see <code dir="ltr">table_name</code> parameter) also stores plan statistics columns (for example, it is a table used to capture the content of the fixed view <code dir="ltr">V$SQL_PLAN_STATISTICS_ALL</code>), additional format keywords can be used to specify which class of statistics to display when using the <a href="#CACICEDJ">DISPLAY Function</a>. These additional format keywords are <code dir="ltr">IOSTATS</code>, <code dir="ltr">MEMSTATS</code>, <code dir="ltr">ALLSTATS</code> and <code dir="ltr">LAST</code> (see the <a href="#i998364">DISPLAY_CURSOR Function</a> or the <a href="#CHDCBBAB">DISPLAY_SQLSET Function</a> for a full description of these four keywords).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t9" headers="r1c1-t9">
<p><code dir="ltr">type</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t9 r1c2-t9">
<p>Output type, one of: <code dir="ltr">&#39;TEXT&#39;</code>, <code dir="ltr">&#39;ACTIVE&#39;</code>, <code dir="ltr">&#39;HTML&#39;</code>, or <code dir="ltr">&#39;XML&#39;</code> (see Usage Notes regarding type ACTIVE). &#39;</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16001"></a>Return Values</p>
<p>Returns the requested report as <code dir="ltr">CLOB</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16002"></a>Usage Notes</p>
<p>Active reports have a rich, interactive user interface akin to that found in Enterprise Manager while not requiring any EM installation. The report file built is in HTML format, so it can be interpreted by most modern browsers. The code powering the active report is downloaded transparently by the web browser when the report is first viewed, hence viewing it requires outside connectivity.</p>
</div>
<!-- class="refsubsect" -->
<div class="infoboxnotewarn">
<p class="notep1">WARNING:</p>
<p class="warnsp">Application developers should expose the <code dir="ltr">filter_preds</code> parameter to end-users only after careful consideration because this could expose the application to SQL injection. Indeed, <code dir="ltr">filter_preds</code> can potentially reference any table or execute any server function for which the database user invoking the table function has privileges.</p>
</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS70138" class="refsect2"><a id="BABFBBGC"></a>
<h3 class="refsect2"><a id="sthref16003"></a>DISPLAY_SQL_PLAN_BASELINE Function</h3>
<p>This table function displays one or more execution plans for the specified SQL handle of a SQL plan baseline.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16004"></a>Syntax</p>
<pre dir="ltr">DBMS_XPLAN.DISPLAY_SQL_PLAN_BASELINE (
   sql_handle      IN VARCHAR2 := NULL,
   plan_name       IN VARCHAR2 := NULL,
   format          IN VARCHAR2 := &#39;TYPICAL&#39;)
 RETURN dbms_xplan_type_table;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16005"></a>Parameters</p>
<div id="ARPLS70139" class="tblformal">
<p class="titleintable"><a id="sthref16006"></a><a id="sthref16007"></a>Table 202-7 DISPLAY_SQL_PLAN_BASELINE Function Parameters</p>
<table class="cellalignment4330" title="DISPLAY_SQL_PLAN_BASELINE Function Parameters " summary="This table describes the Parameters of DBMS_XPLAN.DISPLAY_SQL_PLAN_BASELINE subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t11">Parameter</th>
<th class="cellalignment4328" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">sql_handle</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t11 r1c2-t11">
<p>SQL statement handle. It identifies a SQL statement whose plan(s) are to be displayed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr">plan_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t11 r1c2-t11">
<p>Plan name. It identifies a specific plan. Default NULL means all plans associated with identified SQL statement are explained and displayed.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t11" headers="r1c1-t11">
<p><code dir="ltr">format</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t11 r1c2-t11">
<p>Format string determines what information stored in the plan displayed. One of three format values (&#39;BASIC&#39;, &#39;TYPICAL&#39;, &#39;ALL&#39;) can be used, each representing a common use case.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16008"></a>Return Values</p>
<p>A PL/SQL type table</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16009"></a>Usage Notes</p>
<p>This procedure uses plan information stored in the plan baseline to explain and display the plans.It is possible that the <code dir="ltr">plan_id</code> stored in the SQL management base may not match with the <code dir="ltr">plan_id</code> of the generated plan. A mismatch between stored <code dir="ltr">plan_id</code> and generated <code dir="ltr">plan_id</code> means that it is a non-reproducible plan. Such a plan is deemed invalid and is bypassed by the optimizer during SQL compilation.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16010"></a>Examples</p>
<p class="subhead2"><a id="ARPLS70140"></a>Display all plans of a SQL statement identified by the SQL handle &#39;SYS_SQL_b1d49f6074ab95af&#39; using TYPICAL format</p>
<pre dir="ltr">SET LINESIZE 150
SET PAGESIZE 2000
SELECT t.*
  FROM TABLE(DBMS_XPLAN.DISPLAY_SQL_PLAN_BASELINE(
                 &#39;SYS_SQL_b1d49f6074ab95af&#39;)) t;
</pre>
<p class="subhead2"><a id="ARPLS70141"></a>Display all plans of one or more SQL statements containing the string &#39;HR2&#39; using BASIC format</p>
<pre dir="ltr">SET LINESIZE 150
SET PAGESIZE 2000
SELECT t.*
   FROM (SELECT DISTINCT sql_handle FROM dba_sql_plan_baselines
         WHERE sql_text like &#39;%HR2%&#39;) pb,
        TABLE(DBMS_XPLAN.DISPLAY_SQL_PLAN_BASELINE(pb.sql_handle, NULL,
                                                   &#39;BASIC&#39;)) t;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70142" class="refsect2"><a id="CHDCBBAB"></a>
<h3 class="refsect2"><a id="sthref16011"></a>DISPLAY_SQLSET Function</h3>
<p>This table function displays the execution plan of a given statement stored in a SQL tuning set.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16012"></a>Syntax</p>
<pre dir="ltr">DBMS_XPLAN.DISPLAY_SQLSET(
   sqlset_name      IN  VARCHAR2, 
   sql_id           IN  VARCHAR2,
   plan_hash_value  IN NUMBER := NULL,
   format           IN  VARCHAR2  := &#39;TYPICAL&#39;, 
   sqlset_owner     IN  VARCHAR2  := NULL)
  RETURN DBMS_XPLAN_TYPE_TABLE PIPELINED;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16013"></a>Parameters</p>
<div id="ARPLS70143" class="tblformal">
<p class="titleintable"><a id="sthref16014"></a><a id="sthref16015"></a>Table 202-8 DISPLAY_SQLSET Function Parameters</p>
<table class="cellalignment4330" title="DISPLAY_SQLSET Function Parameters " summary="This table describes the Parameters of DBMS_XPLAN.DISPLAYCURSOR subprogram." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t12">Parameter</th>
<th class="cellalignment4328" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">sqlset_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t12 r1c2-t12">
<p>Name of the SQL Tuning Set</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">sql_id</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t12 r1c2-t12">
<p>Specifies the sql_id value for a SQL statement having its plan stored in the SQL tuning set. You can find all stored SQL statements by querying table function <code dir="ltr">DBMS_SQLTUNE.SELECT_SQLSET</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t12" headers="r1c1-t12">
<p><code dir="ltr">plan_hash_value</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t12 r1c2-t12">
<p>Optional parameter. Identifies a specific stored execution plan for a SQL statement. If suppressed, all stored execution plans are shown.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t12" headers="r1c1-t12">
<p><code dir="ltr">format</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t12 r1c2-t12">
<p>Controls the level of details for the plan. It accepts four values:</p>
<ul>
<li>
<p><code dir="ltr">BASIC</code>: Displays the minimum information in the plan&mdash;the operation ID, the operation name and its option.</p>
</li>
<li>
<p><code dir="ltr">TYPICAL</code>: This is the default. Displays the most relevant information in the plan (operation id, name and option, #rows, #bytes and optimizer cost). Pruning, parallel and predicate information are only displayed when applicable. Excludes only <code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> information (see below).</p>
</li>
<li>
<p><code dir="ltr">SERIAL</code>: Like <code dir="ltr">TYPICAL</code> except that the parallel information is not displayed, even if the plan executes in parallel.</p>
</li>
<li>
<p><code dir="ltr">ALL</code>: Maximum user level. Includes information displayed with the <code dir="ltr">TYPICAL</code> level with additional information (<code dir="ltr">PROJECTION</code>, <code dir="ltr">ALIAS</code> and information about <code dir="ltr">REMOTE</code> <code dir="ltr">SQL</code> if the operation is distributed).</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t12" headers="r1c1-t12">&nbsp;</td>
<td class="cellalignment4329" headers="r6c1-t12 r1c2-t12">
<p>For finer control on the display output, the following keywords can be added to the above three standard format options to customize their default behavior. Each keyword either represents a logical group of plan table columns (such as <code dir="ltr">PARTITION</code>) or logical additions to the base plan table output (such as <code dir="ltr">PREDICATE</code>). Format keywords must be separated by either a comma or a space:</p>
<ul>
<li>
<p><code dir="ltr">ROWS</code> - if relevant, shows the number of rows estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">BYTES</code> - if relevant, shows the number of bytes estimated by the optimizer</p>
</li>
<li>
<p><code dir="ltr">COST</code> - if relevant, shows optimizer cost information</p>
</li>
<li>
<p><code dir="ltr">PARTITION</code> - if relevant, shows partition pruning information</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> - if relevant, shows PX information (distribution method and table queue information)</p>
</li>
<li>
<p><code dir="ltr">PREDICATE</code> - if relevant, shows the predicate section</p>
</li>
<li>
<p><code dir="ltr">PROJECTION</code> -if relevant, shows the projection section</p>
</li>
<li>
<p><code dir="ltr">ALIAS</code> - if relevant, shows the &#34;Query Block Name / Object Alias&#34; section</p>
</li>
<li>
<p><code dir="ltr">REMOTE</code> - if relevant, shows the information for distributed query (for example, remote from serial distribution and remote SQL)</p>
</li>
<li>
<p><code dir="ltr">NOTE</code> - if relevant, shows the note section of the explain plan</p>
</li>
<li>
<p><code dir="ltr">IOSTATS</code> - assuming that basic plan statistics are collected when SQL statements are executed (either by using the <code dir="ltr">gather_plan_statistics</code> hint or by setting the parameter statistics_level to ALL), this format shows IO statistics for <code dir="ltr">ALL</code> (or only for the <code dir="ltr">LAST</code> as shown below) executions of the cursor.</p>
</li>
<li>
<p><code dir="ltr">MEMSTATS</code> - Assuming that PGA memory management is enabled (that is, <code dir="ltr">pga_aggregate_target</code> parameter is set to a non 0 value), this format allows to display memory management statistics (for example, execution mode of the operator, how much memory was used, number of bytes spilled to disk, and so on). These statistics only apply to memory intensive operations like hash-joins, sort or some bitmap operators.</p>
</li>
<li>
<p><code dir="ltr">ALLSTATS</code> - A shortcut for <code dir="ltr">&#39;IOSTATS MEMSTATS&#39;</code></p>
</li>
<li>
<p><code dir="ltr">LAST</code> - By default, plan statistics are shown for all executions of the cursor. The keyword <code dir="ltr">LAST</code> can be specified to see only the statistics for the last execution.</p>
</li>
</ul>
<p>The following two formats are deprecated but supported for backward compatibility:</p>
<ul>
<li>
<p><code dir="ltr">RUNSTATS_TOT</code> - Same as <code dir="ltr">IOSTATS,</code> that is, displays IO statistics for all executions of the specified cursor.</p>
</li>
<li>
<p><code dir="ltr">RUNSTATS_LAST</code> - Same as <code dir="ltr">IOSTATS</code> <code dir="ltr">LAST</code>, that is, displays the runtime statistics for the last execution of the cursor</p>
</li>
</ul>
<p>Format keywords can be prefixed by the sign &#39;<code dir="ltr">-</code>&#39; to exclude the specified information. For example, &#39;<code dir="ltr">-PROJECTION</code>&#39; excludes projection information.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t12" headers="r1c1-t12">
<p><code dir="ltr">sqlset_owner</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t12 r1c2-t12">
<p>The owner of the SQL tuning set. The default is the current user.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16016"></a>Usage Notes</p>
<p>Here are some ways you might use variations on the <code dir="ltr">format</code> parameter:</p>
<ul>
<li>
<p>Use &#39;<code dir="ltr">ALL -PROJECTION -NOTE</code>&#39; to display everything except the projection and note sections.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">TYPICAL PROJECTION</code>&#39; to display using the typical format with the additional projection section (which is normally excluded under the typical format). Since typical is default, using simply &#39;<code dir="ltr">PROJECTION</code>&#39; is equivalent.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">-BYTES -COST -PREDICATE</code>&#39; to display using the typical format but excluding optimizer cost and byte estimates as well as the predicate section.</p>
</li>
<li>
<p>Use &#39;<code dir="ltr">BASIC ROWS</code>&#39; to display basic information with the additional number of rows estimated by the optimizer.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16017"></a>Examples</p>
<p>To display the execution plan for the SQL statement associated with SQL ID &#39;<code dir="ltr">gwp663cqh5qbf</code>&#39; and <code dir="ltr">PLAN</code> <code dir="ltr">HASH</code> <code dir="ltr">3693697075</code> in the SQL Tuning Set called &#39;<code dir="ltr">OLTP_optimization_0405</code>&#34;:</p>
<pre dir="ltr">SELECT * FROM table (
   DBMS_XPLAN.DISPLAY_SQLSET(
       &#39;OLTP_optimization_0405&#39;,&#39;gwp663cqh5qbf&#39;, 3693697075));
</pre>
<p>To display all execution plans of the SQL ID &#39;<code dir="ltr">atfwcg8anrykp</code>&#39; stored in the SQL tuning set:</p>
<pre dir="ltr">SELECT * FROM table (
   DBMS_XPLAN.DISPLAY_SQLSET(
      &#39;OLTP_optimization_0405&#39;,&#39;gwp663cqh5qbf&#39;));
</pre>
<p>To display runtime statistics for the SQL statement included in the preceding statement:</p>
<pre dir="ltr">SELECT * FROM table (
   DBMS_XPLAN.DISPLAY_SQLSET(
      &#39;OLTP_optimization_0405&#39;, &#39;gwp663cqh5qbf&#39;, NULL, &#39;ALLSTATS LAST&#39;);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_xmltranslations.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_xslpro.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>