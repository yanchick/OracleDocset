<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2366"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_SYNC_REFRESH"></a><title>DBMS_SYNC_REFRESH</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:53Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_streams_tbl.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_tdb.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">169/290</span> <!-- End Header -->
<div id="ARPLS73623" class="chapter"><a id="CEGDBEEG"></a>
<h1 class="chapter"><span class="secnum">165</span> DBMS_SYNC_REFRESH</h1>
<p>The <code dir="ltr">DBMS_SYNC_REFRESH</code> package provides an interface to perform a synchronous refresh of materialized views.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DWHSG029" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG029"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information on using <code dir="ltr">DBMS_SYNC_REFRESH</code></div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CEGDBCFH">Using DBMS_SYNC_REFRESH</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
</ul>
</li>
<li>
<p><a href="#CEGDJEDG">Summary of DBMS_SYNC_REFRESH Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CEGDBCFH"></a>
<div id="ARPLS73624" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Using DBMS_SYNC_REFRESH</h2>
<ul>
<li>
<p><a href="#CEGFHDED">Overview</a></p>
</li>
<li>
<p><a href="#CEGHBHDA">Security Model</a></p>
</li>
</ul>
<div id="ARPLS73625" class="refsect2"><a id="CEGFHDED"></a>
<h3 class="refsect2">Overview</h3>
<p>Synchronous refresh is a refresh method introduced in Oracle Database Release 12<span class="italic">c</span>, which enables you to keep a set of tables and the materialized views defined on them to be always in sync.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DWHSG029" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG029"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information about using synchronous refresh</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS73626" class="refsect2"><a id="CEGHBHDA"></a>
<h3 class="refsect2">Security Model</h3>
<p>The execute privilege for this package is granted to <code dir="ltr">PUBLIC</code>, so all users can execute the procedures in this package to perform synchronous refresh on objects owned by them. The database administrator can perform synchronous refresh operations on all tables and materialized views in the database.</p>
<p>In general, if a user without the <code dir="ltr">DBA</code> privilege wants to use synchronous refresh on another user&#39;s table, he must complete privileges to read from and write to that table, that it, the user must have the <code dir="ltr">SELECT</code> or <code dir="ltr">READ</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> privileges on that table or materialized view. A couple of exceptions are:</p>
<ul>
<li>
<p><code dir="ltr">PURGE_REFRESH_STATS</code> and <code dir="ltr">ALTER_REFRESH_STATS_RETENTION</code> Functions</p>
<p>These two functions implement the purge policy and can be used to change the default retention period. These functions can be only be executed by the database administrator.</p>
</li>
<li>
<p>The <code dir="ltr">CAN_SYNCREF_TABLE</code> Function</p>
<p>This is an advisory function which examines the eligibility for sync refresh of all the materialized views associated with a specified table. Hence, this function requires the <code dir="ltr">SELECT</code> or <code dir="ltr">READ</code> privilege on all materialized views associated with the specified table.</p>
</li>
</ul>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="CEGDJEDG"></a>
<div id="ARPLS73627" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Summary of DBMS_SYNC_REFRESH Subprograms</h2>
<div id="ARPLS74619" class="tblformal">
<p class="titleintable"><a id="sthref11797"></a><a id="sthref11798"></a>Table 165-1 DBMS_SYNC_REFRESH Package Subprograms</p>
<table class="cellalignment4330" title="DBMS_SYNC_REFRESH Package Subprograms" summary="DBMS_SYNC_REFRESH Package Subprograms" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t4">Subprogram</th>
<th class="cellalignment4328" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#CEGGFBJJ">ABORT_REFRESH Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t4 r1c2-t4">
<p>Aborts a refresh.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#CEGHHFCD">ALTER_REFRESH_STATS_RETENTION Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t4 r1c2-t4">
<p>Alters the refresh history retention value, specified in days.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#CEGIICHJ">CAN_SYNCREF_TABLE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t4 r1c2-t4">
<p>Advises on whether a table and its dependent materialized views are eligible for synchronous refresh.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#CEGIFEAI">EXECUTE_REFRESH Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t4 r1c2-t4">
<p>Executes synchronous refresh on the synchronous refresh groups.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#CEGBFFJJ">GET_ALL_GROUP_IDS Function</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t4 r1c2-t4">
<p>Returns the group IDs of all the synchronous refresh groups in the database.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#CEGCHJFH">GET_GROUP_ID Function</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t4 r1c2-t4">
<p>Returns the group ID of a table or materialized view.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#CEGJGDED">GET_GROUP_ID_LIST Function</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t4 r1c2-t4">
<p>Returns the group IDs of the tables in a given list of objects (tables or materialized views).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#CEGIAICG">PREPARE_REFRESH Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r9c1-t4 r1c2-t4">
<p>Prepares the sync refresh groups for refresh.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#CEGDIFBF">PREPARE_STAGING_LOG Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r10c1-t4 r1c2-t4">
<p>Validates and collects statistics on the data in the staging log.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#CEGCDFJD">PURGE_REFRESH_STATS Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r11c1-t4 r1c2-t4">
<p>Purges the refresh history of sync refreshes that took place within a time specified by a timestamp parameter.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t4" headers="r1c1-t4">
<p><a href="#CEGEBACE">REGISTER_MVIEWS</a></p>
</td>
<td class="cellalignment4329" headers="r12c1-t4 r1c2-t4">
<p>Registers materialized views for synchronous refresh.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t4" headers="r1c1-t4">
<p><a href="#CEGDCBAA">REGISTER_PARTITION_OPERATION Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r13c1-t4 r1c2-t4">
<p>Registers a partition maintenance operation on a partition of a base table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t4" headers="r1c1-t4">
<p><a href="#CEGBFFCD">UNREGISTER_MVIEWS</a></p>
</td>
<td class="cellalignment4329" headers="r14c1-t4 r1c2-t4">
<p>Unregisters materialized views from synchronous refresh.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t4" headers="r1c1-t4">
<p><a href="#CEGIGCFF">UNREGISTER_PARTITION_OPERATION Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r15c1-t4 r1c2-t4">
<p>Unregisters a partition maintenance operation on a partition of a base table.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS74620" class="refsect2"><a id="CEGGFBJJ"></a>
<h3 class="refsect2">ABORT_REFRESH Procedure</h3>
<p>This procedure undoes all the changes made by <code dir="ltr">PREPARE_REFRESH</code> or <code dir="ltr">EXECUTE_REFRESH</code> for the specified sync refresh groups. It helps you to recover to a state where the tables and materialized views are usable and consistent in case they encounter unexpected errors.</p>
<p>This procedure is overloaded.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11799"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.ABORT_REFRESH (
   group_id      IN NUMBER);

DBMS_SYNC_REFRESH.ABORT_REFRESH (
   group_id_list IN DBMS_UTILITY.NUMBER_ARRAY);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11800"></a>Parameters</p>
<div id="ARPLS74621" class="tblformal">
<p class="titleintable"><a id="sthref11801"></a><a id="sthref11802"></a>Table 165-2 ABORT_REFRESH Procedure Parameters</p>
<table class="cellalignment4330" title="ABORT_REFRESH Procedure Parameters" summary="This table describes the parameters for DBMS_SYNC_REFRESH.ABORT_REFRESH." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t5">Parameter</th>
<th class="cellalignment4328" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">group_id</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t5 r1c2-t5">
<p>The group ID of a sync refresh group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">group_id_list</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t5 r1c2-t5">
<p>An array of group IDs of the sync refresh groups to be aborted for sync refresh.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11803"></a>Usage Notes</p>
<p>If called after <code dir="ltr">PREPARE_REFRESH</code>, this procedure drops the outside tables created by it and unlocks the tables and materialized views in the sync refresh group.</p>
<p>If called after <code dir="ltr">EXECUTE_REFRESH</code> fails, this procedure restores the state of tables to before <code dir="ltr">EXECUTE_REFRESH</code> by undoing any partition exchanges which successfully finished.</p>
<p>This procedure releases the locks placed on the tables in the sync refresh group which were placed on them by the <code dir="ltr">PREPARE_REFRESH</code> procedure. See <a href="#CEGIAICG">&#34;PREPARE_REFRESH Procedure&#34;</a> for a description of these locks.</p>
<p><code dir="ltr">ABORT_REFRESH</code> will work only if a <code dir="ltr">PREPARE_REFRESH</code> or <code dir="ltr">EXECUTE_REFRESH</code> statement has failed. It cannot be used after successful runs of those commands, and throws an error in such cases.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74622" class="refsect2"><a id="CEGHHFCD"></a>
<h3 class="refsect2">ALTER_REFRESH_STATS_RETENTION Procedure</h3>
<p>This procedure alters the refresh history retention value, specified in days. It is intended for use in conjunction with <code dir="ltr">PURGE_REFRESH_HISTORY</code>. It also requires the <code dir="ltr">SYSDBA</code> privilege in addition to the privilege to execute it.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11804"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.ALTER_REFRESH_STATS_RETENTION (
   retention   IN NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11805"></a>Parameters</p>
<div id="ARPLS74623" class="tblformal">
<p class="titleintable"><a id="sthref11806"></a><a id="sthref11807"></a>Table 165-3 ALTER_REFRESH_STATS_RETENTION Procedure Parameters</p>
<table class="cellalignment4330" title="ALTER_REFRESH_STATS_RETENTION Procedure Parameters" summary="This table describes the parameters for DBMS_SYNC_REFRESH.ALTER_REFRESH_STATS_RETENTION." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t6">Parameter</th>
<th class="cellalignment4328" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">retention</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c2-t6">
<p>The retention time in days. The refresh history will be retained for at least these many number of days. The valid range is 1 to 365,000.</p>
<p>You can use the following values for special purposes:</p>
<ul>
<li>
<p>-1 - Refresh history is never purged by <code dir="ltr">PREPARE_REFRESH</code>.</p>
</li>
<li>
<p>0 - Old refresh history is never saved. <code dir="ltr">PREPARE_REFRESH</code> will delete all refresh history.</p>
</li>
<li>
<p><code dir="ltr">NULL</code> - Change refresh history retention to default value.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74624" class="refsect2"><a id="CEGIICHJ"></a>
<h3 class="refsect2">CAN_SYNCREF_TABLE Procedure</h3>
<p>This procedure advises on whether a table and its dependent materialized views are eligible for sync refresh. It provides an explanation of its analysis. If not eligible, you can examine the reasons and take appropriate action if possible.</p>
<p>This procedure lists all of the table&#39;s dependent materialized views and whether they qualify for sync refresh. Note that a materialized view may qualify for sync refresh even though the base table may not.</p>
<p>The eligibility rules for materialized views for synchronous refresh are discussed in detail in <a class="olink DWHSG029" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG029"><span class="italic">Oracle Database Data Warehousing Guide.</span></a></p>
<p>You can invoke <code dir="ltr">CAN_SYNCREF_TABLE</code> in two ways. The first is to use a table, while the second is to create a <code dir="ltr">VARRAY</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11808"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.CAN_SYNCREF_TABLE (
    schema_name    IN VARCHAR2,
    table_name     IN VARCHAR2,
    statement_id   IN VARCHAR2);

DBMS_SYNC_REFRESH.CAN_SYNCREF_TABLE (
    schema_name    IN VARCHAR2,
    table_name     IN VARCHAR2,
    output_array   IN OUT Sys.CanSyncRefTypeArray);
</pre>
<p>Note that only one of <code dir="ltr">statement_id</code> or <code dir="ltr">output_array</code> need be provided to <code dir="ltr">CAN_SYNCREF_TABLE</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11809"></a>Parameters</p>
<div id="ARPLS74625" class="tblformal">
<p class="titleintable"><a id="sthref11810"></a><a id="sthref11811"></a>Table 165-4 CAN_SYNCREF_TABLE Procedure Parameters</p>
<table class="cellalignment4330" title="CAN_SYNCREF_TABLE Procedure Parameters" summary="This table describes the parameters for DBMS_SYNC_REFRESH.CAN_SYNCREF_TABLE." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t7">Parameter</th>
<th class="cellalignment4328" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t7 r1c2-t7">
<p>The name of the schema of the base table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t7 r1c2-t7">
<p>The name of the base table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t7" headers="r1c1-t7">
<p><code dir="ltr">statement_id</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t7 r1c2-t7">
<p>A string (<code dir="ltr">VARCHAR2(30)</code>) to identify the rows pertaining to an invocation of <code dir="ltr">CAN_SYNCREF_TABLE</code> when the output is directed to a table named <code dir="ltr">SYNCREF_TABLE</code> in the user&#39;s schema.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t7" headers="r1c1-t7">
<p><code dir="ltr">output_array</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t7 r1c2-t7">
<p>The output array into which <code dir="ltr">CAN_SYNCREF_TABLE</code> records the information on the eligibility of the base table and its dependent materialized views for synchronous refresh.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11812"></a>Using SYNCREF_TABLE</p>
<p>The output of <code dir="ltr">CAN_SYNCREF_TABLE</code> can be directed to a table named <code dir="ltr">SYNCREF_TABLE</code>. The user is responsible for creating the <code dir="ltr">SYNCREF_TABLE</code>; it can be dropped when it is no longer needed. Its structure is as follows:</p>
<pre dir="ltr">CREATE TABLE SYNCREF_TABLE (
   statement_id    VARCHAR2(30),
   schema_name     VARCHAR2(30),
   table_name      VARCHAR2(30),
   mv_schema_name  VARCHAR2(30),
   mv_name         VARCHAR2(30),
   eligible        VARCHAR2(1),
   seq_num         NUMBER,
   msg_number      NUMBER,
   message         VARCHAR2(4000));
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11813"></a>Using a VARRAY</p>
<p>You can save the output of <code dir="ltr">CAN_SYNCREF_TABLE</code> in a PL/SQL <code dir="ltr">VARRAY</code>. The elements of this array are of type <code dir="ltr">CanSyncRefMessage</code>, which is predefined in the <code dir="ltr">SYS</code> schema, as shown in the following:</p>
<pre dir="ltr">TYPE CanSyncRefMessage IS OBJECT (
   schema_name     VARCHAR2(30),
   table_name      VARCHAR2(30),
   mv_schema_name  VARCHAR2(30),
   mv_name         VARCHAR2(30),
   eligible        VARCHAR2(1),
   seq_num         NUMBER,
   msg_number      NUMBER,
   message         VARCHAR2(4000));
</pre>
<p>The array type <code dir="ltr">CanSyncRefArrayType</code>, which is a varray of <code dir="ltr">CanSyncRefMessage</code> objects, is predefined in the <code dir="ltr">SYS</code> schema as follows:</p>
<pre dir="ltr">TYPE CanSyncRefArrayType AS VARRAY(256) OF CanSyncRefMessage;
</pre>
<p>Each <code dir="ltr">CanSyncRefMessage</code> record provides a message concerning the eligibility of the base table or a dependent materialized view for synchronous refresh. The semantics of the fields is the same as that of the corresponding fields in the <code dir="ltr">SYNCREF_TABLE</code>. However, the <code dir="ltr">SYNCREF_TABLE</code> has a <code dir="ltr">statement_id</code> field which is absent in <code dir="ltr">CanSyncRefMessage</code> because no <code dir="ltr">statement_id</code> is supplied (because it is not required) when <code dir="ltr">CAN_SYNCREF_TABLE</code> is called with a <code dir="ltr">VARRAY</code> parameter.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74626" class="refsect2"><a id="CEGIFEAI"></a>
<h3 class="refsect2">EXECUTE_REFRESH Procedure</h3>
<p>This procedure executes sync refresh on the sync refresh groups prepared by <code dir="ltr">DBMS_SYNC_REFRESH.PREPARE_REFRESH</code>. These groups are identified by their group IDs. Note this procedure will only perform the refresh on those materialized views that have been registered for synch refresh; any other materialized views will become stale once this procedure completes.</p>
<p>For more information on how to monitor the status of the two synchronous refresh operations, <code dir="ltr">PREPARE_REFRESH</code> and <code dir="ltr">EXECUTE_REFRESH</code> and how to troubleshoot errors that might occur using the information in the catalog views, refer to &#34;Trouble-Shooting Synchronous Refresh Operations&#34; in <a class="olink DWHSG029" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG029"><span class="italic">Oracle Database Data Warehousing Guide.</span></a></p>
<p>This procedure is overloaded.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11814"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.EXECUTE_REFRESH (
   group_id   IN NUMBER);

DBMS_SYNC_REFRESH.EXECUTE_REFRESH (
   group_id_list  IN DBMS_UTILITY.NUMBER_ARRAY);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11815"></a>Parameters</p>
<div id="ARPLS74627" class="tblformal">
<p class="titleintable"><a id="sthref11816"></a><a id="sthref11817"></a>Table 165-5 EXECUTE_REFRESH Procedure Parameters</p>
<table class="cellalignment4330" title="EXECUTE_REFRESH Procedure Parameters" summary="This table describes the parameters for DBMS_SYNC_REFRESH.EXECUTE_REFRESH." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Parameter</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">group_id</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>The group ID of a sync refresh group.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">group_id_list</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t8 r1c2-t8">
<p>An array of group IDs of the sync refresh groups to be executed for sync refresh.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11818"></a>Usage Notes</p>
<p>This procedure also releases the locks placed on the tables in the sync refresh group that were placed on them by the <code dir="ltr">PREPARE_REFRESH</code> procedure. See <a href="#CEGIAICG">&#34;PREPARE_REFRESH Procedure&#34;</a> for a description of these locks and <a class="olink REFRN23873" href="../REFRN/GUID-FB7B44F7-83C9-4619-AB7B-70B8BA77AED9.htm#REFRN23873"><span class="italic">Oracle Database Reference</span></a> for information regarding the status of the refresh operation after <code dir="ltr">DBMS_SYNC_REFRESH.EXECUTE_REFRESH</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74628" class="refsect2"><a id="CEGBFFJJ"></a>
<h3 class="refsect2">GET_ALL_GROUP_IDS Function</h3>
<p>This function returns the group IDs of all the sync refresh groups in the database.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11819"></a>Syntax</p>
<pre dir="ltr">FUNCTION DBMS_SYNC_REFRESH.GET_ALL_GROUP_IDS
           RETURN DBMS_UTILITY.NUMBER_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11820"></a>Parameters</p>
<div id="ARPLS74629" class="tblformal">
<p class="titleintable"><a id="sthref11821"></a><a id="sthref11822"></a>Table 165-6 GET_ALL_GROUP_IDS Function Parameter</p>
<table class="cellalignment4330" title="GET_ALL_GROUP_IDS Function Parameter" summary="This table describes the parameters for DBMS_SYNC_REFRESH.GET_ALL_GROUP_IDS." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t9">Parameter</th>
<th class="cellalignment4328" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">get_all_group_ids</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c2-t9">
<p>Returns the group IDs of all the sync refresh groups in the database.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74630" class="refsect2"><a id="CEGCHJFH"></a>
<h3 class="refsect2">GET_GROUP_ID Function</h3>
<p>This function returns the group ID of a materialized view. The group ID identifies the sync refresh group the table belongs to. A sync refresh group is a group of related tables and their dependent materialized views which must be all refreshed together jointly to ensure consistency and correctness.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11823"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.GET_GROUP_ID (
   object_name_list   IN VARCHAR2)
RETURN DBMS_UTILITY.NUMBER_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11824"></a>Parameters</p>
<div id="ARPLS74631" class="tblformal">
<p class="titleintable"><a id="sthref11825"></a><a id="sthref11826"></a>Table 165-7 GET_GROUP_ID Function Parameter</p>
<table class="cellalignment4330" title="GET_GROUP_ID Function Parameter" summary="This table describes the parameters for DBMS_SYNC_REFRESH.GET_GROUP_ID." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t10">Parameter</th>
<th class="cellalignment4328" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">object_name_list</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t10 r1c2-t10">
<p>The name of the materialized view. The name can be schema-qualified.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74632" class="refsect2"><a id="CEGJGDED"></a>
<h3 class="refsect2">GET_GROUP_ID_LIST Function</h3>
<p>This function returns the group IDs of the tables in a given list of objects (materialized views).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11827"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.GET_GROUP_ID_LIST (
   object_name_list   IN VARCHAR2)
RETURN DBMS_UTILITY.NUMBER_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11828"></a>Parameters</p>
<div id="ARPLS74633" class="tblformal">
<p class="titleintable"><a id="sthref11829"></a><a id="sthref11830"></a>Table 165-8 GET_GROUP_ID_LIST Function Parameter</p>
<table class="cellalignment4330" title="GET_GROUP_ID_LIST Function Parameter" summary="This table describes the parameters for DBMS_SYNC_REFRESH.GET_GROUP_ID_LIST." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t11">Parameter</th>
<th class="cellalignment4328" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">object_name_list</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t11 r1c2-t11">
<p>A comma-separated list of object names (materialized views). Each name can be schema-qualified.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74634" class="refsect2"><a id="CEGIAICG"></a>
<h3 class="refsect2">PREPARE_REFRESH Procedure</h3>
<p>This procedure prepares for refresh the sync refresh groups identified by the group ID in the input. A sync refresh group consists of a set of related tables and all materialized views dependent on those base tables. Note this procedure will only prepare for refresh those dependent materialized views that have been registered for synchronous refresh.</p>
<p>For more information on how to monitor the status of the two synchronous refresh operations, <code dir="ltr">PREPARE_REFRESH</code> and <code dir="ltr">EXECUTE_REFRESH</code> and how to troubleshoot errors that might occur using the information in the catalog views, refer to &#34;Trouble-Shooting Synchronous Refresh Operations&#34; in <a class="olink DWHSG029" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG029"><span class="italic">Oracle Database Data Warehousing Guide.</span></a></p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11831"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.PREPARE_REFRESH (
   group_id   IN NUMBER)
RETURN DBMS_UTILITY.NUMBER_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11832"></a>Parameters</p>
<div id="ARPLS74635" class="tblformal">
<p class="titleintable"><a id="sthref11833"></a><a id="sthref11834"></a>Table 165-9 PREPARE_REFRESH Procedure Parameters</p>
<table class="cellalignment4330" title="PREPARE_REFRESH Procedure Parameters" summary="This table describes the parameters for the DBMS_SYNC_REFRESH.PREPARE_REFRESH." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t12">Parameter</th>
<th class="cellalignment4328" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">group_id</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t12 r1c2-t12">
<p>The group ID of the sync refresh group to be prepared for sync refresh.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11835"></a>Usage Notes</p>
<p>This procedure plans the three phases of the sync refresh operation and executes the steps associated with the prepare phase itself. These steps include identifying the partitions of the fact tables and materialized views that have been changed, and computing their new values as a result of the changes. The new values of the partitions are stored in tables called outside tables that are exchanged into their corresponding partitions at the time of the <code dir="ltr">EXECUTE_REFRESH</code>.</p>
<p>Before running this procedure, the user must run <code dir="ltr">PREPARE_STAGING_LOG</code> on all tables in the group. This is required even for staging logs that do not have changes in them. The user must also register any partition operations on the tables in the group using the <code dir="ltr">REGISTER_PARTITION_OPERATION</code>.</p>
<p>One of the side effects of this procedure is that the tables being prepared are locked in this sense: the staging logs of the tables will be locked to prevent any DMLs from occurring and the registration of partition operations will be disabled. These locks will be in effect until you issue an <code dir="ltr">EXECUTE_REFRESH</code> statement. Alternatively, you can issue an <code dir="ltr">ABORT_REFRESH</code> operation to release these locks. Another side effect of this procedure is that it purges from the catalog records of earlier sync refresh operations; if they are older than the retention period, they are purged.</p>
<p>The degree of parallelism of the prepare refresh job is inherited from the session parameters which you can control with an <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code> statement.</p>
<p>The group ID of a table can be found using <code dir="ltr">GET_GROUP_ID(table_name)</code>. The group IDs of a list of tables can be found with <code dir="ltr">GET_GROUP_ID_LIST(table_name_list)</code>. The group IDs of all the lists of tables can be retrieved with <code dir="ltr">GET_ALL_GROUP_IDS</code>.</p>
<p>By default, synchronous refresh does not maintain global indexes belonging to the tables and materialized views in the sync refresh group. If you wish to do so, you can set event 31904, level 64 before executing <code dir="ltr">PREPARE_REFRESH</code>. This will cause the partition exchange DDL statements generated by <code dir="ltr">PREPARE_REFRESH</code> to have the <code dir="ltr">UPDATE</code> <code dir="ltr">INDEXES</code> clause appended to them, and when they are executed by <code dir="ltr">EXECUTE_REFRESH</code>, the global indexes will be maintained.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74636" class="refsect2"><a id="CEGDIFBF"></a>
<h3 class="refsect2">PREPARE_STAGING_LOG Procedure</h3>
<p>This procedure collects statistics on the data in the staging log of the base table and validates the data in the log. It can be run in several different modes ranging from the enforced mode in which strict checking of the data is done to trusted mode in which no checking is done. You should run this procedure after loading the staging log and before running <code dir="ltr">PREPARE_REFRESH</code>.</p>
<p>In the enforced mode, which is the default, this procedure will fill in the missing values of the columns of the rows being deleted or updated. An error is thrown if any violations of the staging-log rules are found. You can query the view <code dir="ltr">USER_SR_STLOG_EXCEPTIONS</code> to get details on the exceptions.</p>
<p>The notion of the staging log key is described in <a class="olink DWHSG029" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG029"><span class="italic">Oracle Database Data Warehousing Guide.</span></a></p>
<p>In the enforced mode, this procedure processes each delete/update row in the staging log as follows:</p>
<ul>
<li>
<p>It verifies the existence of the row in the base table using the key.</p>
</li>
<li>
<p>For the rows being deleted (<code dir="ltr">DMLTYPE$$</code> is <code dir="ltr">&#39;D&#39;</code>), it verifies a row with this key exists in the base table; if non-null non-key values are supplied in the staging log, it verifies the values match the corresponding columns in the base table; else an exception is logged in the exceptions table. If the values of any of the non-key columns are missing, it fills in those values from the row in the base table.</p>
</li>
<li>
<p>For the rows being updated (<code dir="ltr">DMLTYPE$$</code> is <code dir="ltr">&#39;UO&#39;</code> or <code dir="ltr">&#39;UN&#39;</code>), it verifies a row with this key exists in the base table. In the old values row (<code dir="ltr">DMLTYPE$$</code> is <code dir="ltr">&#39;UO&#39;</code>), it makes the same check and does the same processing as with rows being deleted. In the new values row (<code dir="ltr">DMLTYPE$$</code> is <code dir="ltr">&#39;UN&#39;</code>), it checks that at least the value of one the columns differs from its old value; else an exception is logged.</p>
</li>
<li>
<p>In the new values row (<code dir="ltr">DMLTYPE$$</code> is <code dir="ltr">&#39;UN&#39;</code>), a null value in a column is interpreted as having the same value as the old value of the column except if the old value is non-null and the new value is null in which case, the new value of the column is interpreted as being null. This requires that the user must provide the old value of columns which are being updated to <code dir="ltr">NULL</code>.</p>
</li>
</ul>
<p>In the default enforced mode, this procedure verifies that each key is specified for at most once for a delete or update operation. This means that the user, when doing the change consolidation, must consolidate delete-insert of the same row into an update operation with rows <code dir="ltr">&#39;UO&#39;</code> and <code dir="ltr">&#39;UN</code>;&#39; multiple updates must be consolidated into a single update; and null changes such as an insert-update-delete of the same row must not appear in the staging log.</p>
<p>The checking done in the enforced mode can be time-consuming. If you are confident in the integrity of the data, you can choose a lower level of checking. You can choose to:</p>
<ul>
<li>
<p>trust all the insert rows (<code dir="ltr">DMLTYPE$$</code> is <code dir="ltr">&#39;I&#39;)</code> by choosing the <code dir="ltr">psl_mode</code> of <code dir="ltr">DBMS_SYNC_REFRESH.INSERT_TRUSTED</code></p>
</li>
<li>
<p>trust all the delete rows (<code dir="ltr">DMLTYPE$$</code> is <code dir="ltr">&#39;D&#39;</code>) by choosing the <code dir="ltr">psl_mode</code> of <code dir="ltr">DBMS_SYNC_REFRESH.DELETE_TRUSTED</code></p>
</li>
<li>
<p>trust all the update rows (<code dir="ltr">DMLTYPE$$</code> is <code dir="ltr">&#39;UO</code>&#39; or <code dir="ltr">&#39;UN&#39;</code>) by choosing the <code dir="ltr">psl_mode</code> of <code dir="ltr">DBMS_SYNC_REFRESH.UPDATE_TRUSTED</code></p>
</li>
<li>
<p>trust all three types of DMLs by choosing the <code dir="ltr">psl_mode</code> of <code dir="ltr">DBMS_SYNC_REFRESH.TRUSTED</code>.</p>
</li>
</ul>
<p>In addition, you can specify the <code dir="ltr">psl_mode</code> as a bitmask of the flags described above. For example, <code dir="ltr">DBMS_SYNC_REFRESH.INSERT_TRUSTED</code> + <code dir="ltr">DBMS_SYNC_REFRESH_DELETE_TRUSTED</code> will treat inserts and deletes to be trusted but not updates.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11836"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.PREPARE_STAGING_LOG (
   schema_name      IN VARCHAR2,
   base_table_name  IN VARCHAR2,
   psl_mode         IN NUMBER DEFAULT
   DBMS_SYNC_REFRESH.ENFORCED);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11837"></a>Parameters</p>
<div id="ARPLS74637" class="tblformal">
<p class="titleintable"><a id="sthref11838"></a><a id="sthref11839"></a>Table 165-10 PREPARE_STAGING_LOG Procedure Parameters</p>
<table class="cellalignment4330" title="PREPARE_STAGING_LOG Procedure Parameters" summary="This table describes the parameters in DBMS_SYNC_REFRESH.PREPARE_STAGING_LOG." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t13">Parameter</th>
<th class="cellalignment4328" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t13 r1c2-t13">
<p>The name of the schema of the base table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">base_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t13 r1c2-t13">
<p>The name of the base table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t13" headers="r1c1-t13">
<p><code dir="ltr">psl_mode</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t13 r1c2-t13">
<p>The mode in which staging log preparation should be done. The possible values are:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_SYNC_REFRESH.ENFORCED</code> (the default)</p>
</li>
<li>
<p><code dir="ltr">DBMS_SYNC_REFRESH.INSERT_TRUSTED</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_SYNC_REFRESH.DELETE_TRUSTED</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_SYNC_REFRESH.UPDATE_TRUSTED</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_SYNC_REFRESH.TRUSTED</code></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74638" class="refsect2"><a id="CEGCDFJD"></a>
<h3 class="refsect2">PURGE_REFRESH_STATS Procedure</h3>
<p>This procedure purges the refresh history of sync refreshes that took place before the value specified by the <code dir="ltr">BEFORE_TIMESTAMP</code> parameter. This procedure requires the <code dir="ltr">SYSDBA</code> privilege in addition to the privilege to execute it.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11840"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.PURGE_REFRESH_STATS (
   before_timestamp IN TIMESTAMP WITH TIME ZONE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11841"></a>Parameters</p>
<div id="ARPLS74639" class="tblformal">
<p class="titleintable"><a id="sthref11842"></a><a id="sthref11843"></a>Table 165-11 PURGE_REFRESH_STATS Procedure Parameter</p>
<table class="cellalignment4330" title="PURGE_REFRESH_STATS Procedure Parameter" summary="This table describes the parameters for DBMS_SYNC_REFRESH.PURGE_REFRESH_STATS." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t14">Parameter</th>
<th class="cellalignment4328" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">before_timestamp</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t14 r1c2-t14">
<p>Records of sync refreshes saved before this timestamp are purged. If <code dir="ltr">NULL</code>, it uses the purging policy used by automatic purge. The automatic purge deletes all history older than (current time - refresh - history retention). The refresh history retention value can be changed using <code dir="ltr">ALTER_REFRESH_STATS_RETENTION</code>. The default is 31 days.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74938" class="refsect2"><a id="CEGEBACE"></a>
<h3 class="refsect2">REGISTER_MVIEWS</h3>
<p>This procedure registers a list of materialized views for synchronous refresh. It checks each materialized view in the list for eligibility and places it in the sync refresh group it belongs to. A sync refresh group is a set of related tables and materialized views defined on top of them. Two tables are considered related if there is a referential constraint between them.</p>
<p>The eligibility rules of materialized views for synchronous refresh are described in detail in <a class="olink DWHSG029" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG029"><span class="italic">Oracle Database Data Warehousing Guide.</span></a> The principal requirements are that the materialized view must be partitioned and its partition key must be derivable from the partition key of its fact table. The materialized view definition must specify the <code dir="ltr">USING</code> <code dir="ltr">TRUSTED</code> <code dir="ltr">CONSTRAINTS</code> clause because sync refresh trusts the foreign key and primary key relationships to perform various refresh optimizations. The materialized view&#39;s refresh policy must be specified as <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code>.</p>
<p>You have an option to register only some of the materialized views associated with a table, and leave some unregistered. Oracle Corporation does not recommend this, and in such a case, the user has to maintain the unregistered ones using the PCT or complete refresh methods.</p>
<p>A staging table must have been created for each base table of each materialized view in the materialized view list (<code dir="ltr">mv_list</code>), or else an error is thrown.</p>
<p>If any of the materialized views are not eligible for sync refresh, an error is thrown and the registration of all materialized views in the materialized view list fails.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11844"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.REGISTER_MVIEWS (
   mv_list   IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11845"></a>Parameter</p>
<div id="ARPLS74939" class="tblformal">
<p class="titleintable"><a id="sthref11846"></a><a id="sthref11847"></a>Table 165-12 REGISTER_MVIEWS Procedure Parameter</p>
<table class="cellalignment4330" title="REGISTER_MVIEWS Procedure Parameter" summary="This table describes REGISTER_MVIEW parameters" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t15">Parameter</th>
<th class="cellalignment4328" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t15" headers="r1c1-t15">
<p><code dir="ltr">mv_list</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t15 r1c2-t15">
<p>A comma-delimited list of materialized views to register. These names are optionally schema-qualified.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74640" class="refsect2"><a id="CEGDCBAA"></a>
<h3 class="refsect2">REGISTER_PARTITION_OPERATION Procedure</h3>
<p>This procedure registers a partition-maintenance operation (PMOP) on a partition of a base table.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11848"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.REGISTER_PARTITION_OPERATION (
   partition_op                IN VARCHAR2,
   schema_name                 IN VARCHAR2,
   base_table_name             IN VARCHAR2,
   partition_name              IN VARCHAR2,
   outside_partn_table_schema  IN VARCHAR2,
   outside_partn_table_name    IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11849"></a>Parameters</p>
<div id="ARPLS74641" class="tblformal">
<p class="titleintable"><a id="sthref11850"></a><a id="sthref11851"></a>Table 165-13 REGISTER_PARTITION_OPERATION Procedure Parameters</p>
<table class="cellalignment4330" title="REGISTER_PARTITION_OPERATION Procedure Parameters" summary="This table describes the parameters for DBMS_SYNC_REFRESH.REGISTER_PARTITION_OPERATION." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t16">Parameter</th>
<th class="cellalignment4328" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">partition_op</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t16 r1c2-t16">
<p>The name of the partition operation (<code dir="ltr">DROP</code>, <code dir="ltr">EXCHANGE</code>, or <code dir="ltr">TRUNCATE</code>).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t16" headers="r1c1-t16">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t16 r1c2-t16">
<p>The name of the schema of the base table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t16" headers="r1c1-t16">
<p><code dir="ltr">base_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t16 r1c2-t16">
<p>The name of the base table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t16" headers="r1c1-t16">
<p><code dir="ltr">partition_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t16 r1c2-t16">
<p>The name of the partition to be changed; either exchanged with the outside partition table or dropped or truncated.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t16" headers="r1c1-t16">
<p><code dir="ltr">outside_partn_table_schema</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t16 r1c2-t16">
<p>The name of the schema of the outside partition table (required for <code dir="ltr">EXCHANGE</code> only).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t16" headers="r1c1-t16">
<p><code dir="ltr">outside_partn_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t16 r1c2-t16">
<p>The name of the outside partition table (required for <code dir="ltr">EXCHANGE</code> only).</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11852"></a>Usage Notes</p>
<p>The three kinds of change operations that may be specified on partitions are <code dir="ltr">DROP</code>, <code dir="ltr">TRUNCATE</code>, and <code dir="ltr">EXCHANGE</code>.</p>
<p>If <code dir="ltr">DROP</code> is specified, then the partition will be dropped from the base table at the time of <code dir="ltr">EXECUTE_REFRESH</code>. If <code dir="ltr">TRUNCATE</code> is specified, then the data from the partition will be deleted but the partition itself will not be dropped. These operations provide a more efficient way of specifying the deletes of all the rows in a partition than specifying them individually in the staging log.</p>
<p>If <code dir="ltr">EXCHANGE</code> is specified, then the contents of the outside table is exchanged with contents of the specified partition of <code dir="ltr">EXECUTE_REFRESH</code>. This provides an alternative method to the user of providing the changes to the base tables instead of populating the staging log.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74940" class="refsect2"><a id="CEGBFFCD"></a>
<h3 class="refsect2">UNREGISTER_MVIEWS</h3>
<p>This procedure unregisters a list of materialized views from synchronous refresh. Once a materialized view is unregistered, it can be maintained by the user with any of the traditional refresh methods, such as complete or PCT, refresh.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11853"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.UNREGISTER_MVIEWS (
   mv_list   IN VARCHAR20;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11854"></a>Parameter</p>
<div id="ARPLS74941" class="tblformal">
<p class="titleintable"><a id="sthref11855"></a><a id="sthref11856"></a>Table 165-14 UNREGISTER_MVIEWS Parameter</p>
<table class="cellalignment4330" title="UNREGISTER_MVIEWS Parameter" summary="This table describes UNREGISTER_MVIEWS parameters" dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t17">Parameter</th>
<th class="cellalignment4328" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t17" headers="r1c1-t17">
<p><code dir="ltr">mv_list</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t17 r1c2-t17">
<p>A comma-delimited list of materialized views to unregister. These names are optionally schema-qualified.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS74642" class="refsect2"><a id="CEGIGCFF"></a>
<h3 class="refsect2">UNREGISTER_PARTITION_OPERATION Procedure</h3>
<p>This procedure unregisters a partition-maintenance operation (PMOP) that had been previously registered with <code dir="ltr">REGISTER_PARTITION_OPERATION</code> on a base table. The three kinds of change operations that can be specified on partitions are <code dir="ltr">DROP</code>, <code dir="ltr">TRUNCATE</code>, and <code dir="ltr">EXCHANGE</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11857"></a>Syntax</p>
<pre dir="ltr">DBMS_SYNC_REFRESH.UNREGISTER_PARTITION_OPERATION (
   partition_op     IN VARCHAR2,
   schema_name      IN VARCHAR2,
   base_table_name  IN VARCHAR2,
   partition_name   IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref11858"></a>Parameters</p>
<div id="ARPLS74643" class="tblformal">
<p class="titleintable"><a id="sthref11859"></a><a id="sthref11860"></a>Table 165-15 UNREGISTER_PARTITION_OPERATION Procedure Parameters</p>
<table class="cellalignment4330" title="UNREGISTER_PARTITION_OPERATION Procedure Parameters" summary="This table describes the parameters for DBMS_SYNC_REFRESH.UNREGISTER_PARTITION_OPERATION." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t18">Parameter</th>
<th class="cellalignment4328" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t18" headers="r1c1-t18">
<p><code dir="ltr">partition_op</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t18 r1c2-t18">
<p>The name of the partition operation (<code dir="ltr">DROP</code>, <code dir="ltr">EXCHANGE</code>, or <code dir="ltr">TRUNCATE</code>).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t18" headers="r1c1-t18">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t18 r1c2-t18">
<p>The name of the schema of the base table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t18" headers="r1c1-t18">
<p><code dir="ltr">base_table_name</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t18 r1c2-t18">
<p>The name of the base table.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t18" headers="r1c1-t18">
<p><code dir="ltr">partition_name</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t18 r1c2-t18">
<p>The name of the partition to be changed; either exchanged with the outside partition table or dropped or truncated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_streams_tbl.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_tdb.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>