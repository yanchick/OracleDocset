<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2225"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_AQ"></a><title>DBMS_AQ</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1086"/>
<meta name="dcterms.created" content="2016-09-02T5:36:8Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference"/>
<meta name="dcterms.identifier" content="E41829-07"/>
<meta name="dcterms.isVersionOf" content="ARPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_apply.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_aqadm.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41829-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">28/290</span> <!-- End Header -->
<div id="ARPLS004" class="chapter"><a id="CBAFIAGC"></a>
<h1 class="chapter"><span class="secnum">24</span> DBMS_AQ</h1>
<p>The <code dir="ltr">DBMS_AQ</code> package provides an interface to Oracle Streams Advanced Queuing (AQ).</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<ul>
<li>
<p><a class="olink ADQUE1000" href="../ADQUE/aq_opers.htm#ADQUE1000"><span class="italic">Oracle Database Advanced Queuing User&#39;s Guide</span></a></p>
</li>
<li>
<p><a href="t_aq.htm#CBACJJJG">Oracle Database Advanced Queuing (AQ) Types</a> for information about <code dir="ltr">TYPE</code>s to use with <code dir="ltr">DBMS_AQ.</code></p>
</li>
</ul>
</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CBACFFBB">Using DBMS_AQ</a></p>
<ul>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
<li>
<p>Data Structures</p>
</li>
<li>
<p>Operational Notes</p>
</li>
</ul>
</li>
<li>
<p><a href="#i996982">Summary of DBMS_AQ Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CBACFFBB"></a>
<div id="ARPLS65274" class="refsect1">
<h2 class="refsect1">Using DBMS_AQ</h2>
<p>This section contains the following topics.</p>
<ul>
<li>
<p><a href="#CHDIFIEF">Security Model</a></p>
</li>
<li>
<p><a href="#i1001411">Constants</a></p>
</li>
<li>
<p><a href="#i996823">Data Structures</a></p>
</li>
<li>
<p><a href="#i1001373">Operational Notes</a></p>
</li>
</ul>
<div id="ARPLS74793" class="refsect2"><a id="CHDIFIEF"></a>
<h3 class="refsect2">Security Model</h3>
<p>Initially, only <code dir="ltr">SYS</code> and <code dir="ltr">SYSTEM</code> have execution privilege for the procedures in <code dir="ltr">DBMS_AQ</code> and <code dir="ltr">DBMS_AQADM</code>.</p>
<p class="subhead2"><a id="ARPLS74794"></a>Queue Security</p>
<p>To enqueue or dequeue, users need <code dir="ltr">EXECUTE</code> rights on <code dir="ltr">DBMS_AQ</code> and either <code dir="ltr">ENQUEUE</code> or <code dir="ltr">DEQUEUE</code> privileges on target queues, or <code dir="ltr">ENQUEUE_ANY</code>/<code dir="ltr">DEQUEUE_ANY</code> system privileges. Users who have been granted <code dir="ltr">EXECUTE</code> rights to <code dir="ltr">DBMS_AQ</code> and <code dir="ltr">DBMS_AQADM</code> are able to create, manage, and use queues in their own schemas. The <code dir="ltr">MANAGE_ANY</code> AQ system privilege is used to create and manage queues in other schemas.</p>
<p>As a database user, you do not need any explicit object-level or system-level privileges to enqueue or dequeue to queues in your own schema other than the <code dir="ltr">EXECUTE</code> right on <code dir="ltr">DBMS_AQ</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADQUE2564" href="../ADQUE/manage.htm#ADQUE2564"><span class="italic">Oracle Database Advanced Queuing User&#39;s Guide</span></a> for more information on queue privileges and access control.</div>
<p class="subhead2"><a id="ARPLS74795"></a>OCI Applications and Queue Access</p>
<p>For an Oracle Call Interface (OCI) application to access a queue, the session user must be granted either the object privilege of the queue he intends to access or the <code dir="ltr">ENQUEUE ANY QUEUE</code> or <code dir="ltr">DEQUEUE ANY QUEUE</code> system privileges. The <code dir="ltr">EXECUTE</code> right of <code dir="ltr">DBMS_AQ</code> is not checked against the session user&#39;s rights.</p>
<p class="subhead2"><a id="ARPLS74796"></a>Security Required for Propagation</p>
<p>Propagation jobs are owned by <code dir="ltr">SYS</code>, but the propagation occurs in the security context of the queue table owner. Previously propagation jobs were owned by the user scheduling propagation, and propagation occurred in the security context of the user setting up the propagation schedule. The queue table owner must be granted <code dir="ltr">EXECUTE</code> privileges on the <code dir="ltr">DBMS_AQADM</code> package. Otherwise, the Oracle Database snapshot processes do not propagate and generate trace files with the error identifier <code dir="ltr">SYS.DBMS_AQADM</code> not defined. Private database links owned by the queue table owner can be used for propagation. The username specified in the connection string must have <code dir="ltr">EXECUTE</code> access on the <code dir="ltr">DBMS_AQ</code> and <code dir="ltr">DBMS_AQADM</code> packages on the remote database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="d_aqadm.htm#CACIJAJC">Chapter 25, &#34;DBMS_AQADM.&#34;</a></p>
</li>
<li>
<p><a class="olink ADQUE2567" href="../ADQUE/manage.htm#ADQUE2567"><span class="italic">Oracle Database Advanced Queuing User&#39;s Guide</span></a> for more information on security required for propagation.</p>
</li>
</ul>
</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS65275" class="refsect2"><a id="i1001411"></a>
<h3 class="refsect2">Constants</h3>
<p>The DBMS_AQ package uses the constants shown in <a href="#CBAFHFJI">Table 24-1</a>.</p>
<p>When using enumerated constants such as <code dir="ltr">BROWSE</code>, <code dir="ltr">LOCKED</code>, or <code dir="ltr">REMOVE</code>, the PL/SQL constants must be specified with the scope of the packages defining it. All types associated with the operational interfaces have to be prepended with <code dir="ltr">DBMS_AQ</code>. For example: <code dir="ltr">DBMS_AQ.BROWSE</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">sequence_deviation</code> attribute has no effect in releases prior to Oracle Streams AQ 10g Release 1 (10.1) if <code dir="ltr">message_grouping</code> parameter of <code dir="ltr">DBMS_AQADM</code> subprograms is set to <code dir="ltr">TRANSACTIONAL</code>. The sequence deviation feature is deprecated in Oracle Streams AQ 10g Release 2 (10.2).</div>
<div id="ARPLS65276" class="tblformal">
<p class="titleintable"><a id="sthref797"></a><a id="CBAFHFJI"></a>Table 24-1 Enumerated Constants</p>
<table class="cellalignment4330" title="Enumerated Constants" summary="This table lists the PL/SQL enumerated constants that require the prefix, DBMS_AQ." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t6">Parameter</th>
<th class="cellalignment4328" id="r1c2-t6">Options</th>
<th class="cellalignment4328" id="r1c3-t6">Type</th>
<th class="cellalignment4328" id="r1c4-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">VISIBILITY</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c2-t6">
<p><code dir="ltr">IMMEDIATE</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r2c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c2-t6">
<p><code dir="ltr">ON_COMMIT</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r3c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t6" headers="r1c1-t6">
<p><code dir="ltr">DEQUEUE_MODE</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t6 r1c2-t6">
<p><code dir="ltr">BROWSE</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r4c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r5c1-t6 r1c2-t6">
<p><code dir="ltr">LOCKED</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r5c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r6c1-t6 r1c2-t6">
<p><code dir="ltr">REMOVE</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r6c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r7c1-t6 r1c2-t6">
<p><code dir="ltr">REMOVE_NODATA</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r7c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t6" headers="r1c1-t6">
<p><code dir="ltr">NAVIGATION</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t6 r1c2-t6">
<p><code dir="ltr">FIRST_MESSAGE</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r8c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r9c1-t6 r1c2-t6">
<p><code dir="ltr">NEXT_MESSAGE</code></p>
</td>
<td class="cellalignment4329" headers="r9c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r9c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t6" headers="r1c1-t6">
<p><code dir="ltr">STATE</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t6 r1c2-t6">
<p><code dir="ltr">WAITING</code></p>
</td>
<td class="cellalignment4329" headers="r10c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r10c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r11c1-t6 r1c2-t6">
<p><code dir="ltr">READY</code></p>
</td>
<td class="cellalignment4329" headers="r11c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r11c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r12c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r12c1-t6 r1c2-t6">
<p><code dir="ltr">PROCESSED</code></p>
</td>
<td class="cellalignment4329" headers="r12c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r12c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r13c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r13c1-t6 r1c2-t6">
<p><code dir="ltr">EXPIRED</code></p>
</td>
<td class="cellalignment4329" headers="r13c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r13c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r14c1-t6" headers="r1c1-t6">
<p><code dir="ltr">SEQUENCE_DEVIATION</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t6 r1c2-t6">
<p><code dir="ltr">BEFORE</code></p>
</td>
<td class="cellalignment4329" headers="r14c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r14c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r15c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r15c1-t6 r1c2-t6">
<p><code dir="ltr">TOP</code></p>
</td>
<td class="cellalignment4329" headers="r15c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r15c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r16c1-t6" headers="r1c1-t6">
<p><code dir="ltr">WAIT</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t6 r1c2-t6">
<p><code dir="ltr">FOREVER</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t6 r1c3-t6">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r16c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r17c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r17c1-t6 r1c2-t6">
<p><code dir="ltr">NO_WAIT</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t6 r1c3-t6">
<p><code dir="ltr">BINARY_INTEGER</code></p>
</td>
<td class="cellalignment4329" headers="r17c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r18c1-t6" headers="r1c1-t6">
<p><code dir="ltr">DELAY</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t6 r1c2-t6">
<p><code dir="ltr">NO_DELAY</code></p>
</td>
<td class="cellalignment4329" headers="r18c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r18c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r19c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXPIRATION</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t6 r1c2-t6">
<p><code dir="ltr">NEVER</code></p>
</td>
<td class="cellalignment4329" headers="r19c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r19c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r20c1-t6" headers="r1c1-t6">
<p><code dir="ltr">NAMESPACE</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t6 r1c2-t6">
<p><code dir="ltr">NAMESPACE_AQ</code></p>
</td>
<td class="cellalignment4329" headers="r20c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r20c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r21c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r21c1-t6 r1c2-t6">
<p><code dir="ltr">NAMESPACE_ANONYMOUS</code></p>
</td>
<td class="cellalignment4329" headers="r21c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment4329" headers="r21c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r22c1-t6" headers="r1c1-t6">
<p><code dir="ltr">NTFN_GROUPING_CLASS</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t6 r1c2-t6">
<p><code dir="ltr">NFTN_GROUPING_CLASS_TIME</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t6 r1c3-t6">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r22c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r23c1-t6" headers="r1c1-t6">
<p><code dir="ltr">NTFN_GROUPING_TYPE</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t6 r1c2-t6">
<p><code dir="ltr">NTFN_GROUPING_TYPE_SUMMARY</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t6 r1c3-t6">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r23c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r24c1-t6" headers="r1c1-t6">
<p>.</p>
</td>
<td class="cellalignment4329" headers="r24c1-t6 r1c2-t6">
<p><code dir="ltr">NTFN_GROUPING_TYPE_LAST</code></p>
</td>
<td class="cellalignment4329" headers="r24c1-t6 r1c3-t6">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r24c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r25c1-t6" headers="r1c1-t6">
<p><code dir="ltr">NTFN_GROUPING_REPEAT_COUNT</code></p>
</td>
<td class="cellalignment4329" headers="r25c1-t6 r1c2-t6">
<p><code dir="ltr">NTFN_GROUPING_FOREVER</code></p>
</td>
<td class="cellalignment4329" headers="r25c1-t6 r1c3-t6">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment4329" headers="r25c1-t6 r1c4-t6">&nbsp;</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS080" class="refsect2"><a id="i996823"></a>
<h3 class="refsect2">Data Structures</h3>
<div id="ARPLS65277" class="tblformal">
<p class="titleintable"><a id="sthref798"></a><a id="sthref799"></a>Table 24-2 DBMS_AQ Data Structures</p>
<table class="cellalignment4330" title=" DBMS_AQ Data Structures" summary="This table lists DBMS_AQ Data Structures." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t7">Data Structures</th>
<th class="cellalignment4328" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t7" headers="r1c1-t7">
<p><a href="#CBADCCHA">Object Name</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t7 r1c2-t7">
<p>Names database objects</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t7" headers="r1c1-t7">
<p><a href="#i996875">Type Name</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t7 r1c2-t7">
<p>Defines queue types</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t7" headers="r1c1-t7">
<p><a href="#i999766">Oracle Database Advanced Queuing PL/SQL Callback</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t7 r1c2-t7">
<p>Specifies the user-defined PL/SQL procedure, defined in the database to be invoked on message notification</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="ARPLS081" class="refsect3"><a id="CBADCCHA"></a>
<h4 class="refsect3">Object Name</h4>
<p>The <code dir="ltr">object_name</code> data structure names database objects. It applies to queues, queue tables, agent names, and object types.</p>
<p class="subhead2"><a id="ARPLS65278"></a>Syntax</p>
<pre dir="ltr">object_name := VARCHAR2;
object_name := [<span class="italic">schema_name</span>.]<span class="italic">name</span>;
</pre>
<p class="subhead2"><a id="ARPLS65279"></a>Usage Notes</p>
<p>Names for objects are specified by an optional schema name and a name. If the schema name is not specified, the current schema is assumed. The name must follow object name guidelines in <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> with regard to reserved characters. Schema names, agent names, and object type names can be up to 30 bytes long. Queue names and queue table names can be up to 24 bytes long.</p>
</div>
<!-- class="refsect3" -->
<div id="ARPLS082" class="refsect3"><a id="i996875"></a>
<h4 class="refsect3">Type Name</h4>
<p>The <code dir="ltr">type_name</code> data structure defines queue types.</p>
<p class="subhead2"><a id="ARPLS65280"></a>Syntax</p>
<pre dir="ltr">type_name := VARCHAR2;
type_name := <span class="italic">object_type</span> | &#34;RAW&#34;;
</pre>
<p class="subhead2"><a id="ARPLS65281"></a>Attributes</p>
<div id="ARPLS65282" class="tblformal">
<p class="titleintable"><a id="sthref800"></a><a id="sthref801"></a>Table 24-3 Type Name Attributes</p>
<table class="cellalignment4330" title="Type Name Attributes" summary="This table lists Type Name attributes." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t8">Attribute</th>
<th class="cellalignment4328" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr"><span class="codeinlineitalic">object_type</span></code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t8 r1c2-t8">
<p>Maximum number of attributes in the object type is limited to 900.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">&#34;RAW&#34;</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t8 r1c2-t8">
<p>To store payload of type <code dir="ltr">RAW</code>, Oracle Database Advanced Queuing creates a queue table with a <code dir="ltr">LOB</code> column as the payload repository. The theoretical maximum size of the message payload is the maximum amount of data that can be stored in a <code dir="ltr">LOB</code> column. However, the maximum size of the payload is determined by which programmatic environment you use to access Oracle Database Advanced Queuing. For PL/SQL, Java and precompilers the limit is 32K; for the OCI the limit is 4G. Because the PL/SQL enqueue and dequeue interfaces accept <code dir="ltr">RAW</code> buffers as the payload parameters you will be limited to 32K bytes. In OCI, the maximum size of your <code dir="ltr">RAW</code> data will be limited to the maximum amount of contiguous memory (as an <code dir="ltr">OCIRaw</code> is simply an array of bytes) that the OCI Object Cache can allocate. Typically, this will be at least 32K bytes and much larger in many cases.</p>
<p>Because <code dir="ltr">LOB</code> columns are used for storing <code dir="ltr">RAW</code> payload, the Oracle Database Advanced Queuing administrator can choose the <code dir="ltr">LOB</code> tablespace and configure the <code dir="ltr">LOB</code> storage by constructing a <code dir="ltr">LOB</code> storage string in the <code dir="ltr">storage_clause</code> parameter during queue table creation time.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS401" class="refsect3"><a id="i999766"></a>
<h4 class="refsect3">Oracle Database Advanced Queuing PL/SQL Callback</h4>
<p>The <code dir="ltr">plsqlcallback</code> data structure specifies the user-defined PL/SQL procedure, defined in the database to be invoked on message notification.</p>
<p class="subhead2"><a id="ARPLS65283"></a>Syntax</p>
<p>If a notification message is expected for a <code dir="ltr">RAW</code> payload enqueue, then the PL/SQL callback must have the following signature:</p>
<pre dir="ltr">procedure plsqlcallback(
  context  IN  RAW, 
  reginfo  IN  SYS.AQ$_REG_INFO, 
  descr    IN  SYS.AQ$_DESCRIPTOR, 
  payload  IN  RAW,
  payloadl IN  NUMBER);
</pre>
<p class="subhead2"><a id="ARPLS65284"></a>Attributes</p>
<div id="ARPLS65285" class="tblformal">
<p class="titleintable"><a id="sthref802"></a><a id="sthref803"></a>Table 24-4 Oracle Database Advanced Queuing PL/SQL Callback Attributes</p>
<table class="cellalignment4330" title="Oracle Database Advanced Queuing PL/SQL Callback Attributes" summary="This table lists Oracle Streams AQ PL/SQL Callback attributes." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t9">Attribute</th>
<th class="cellalignment4328" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">context</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t9 r1c2-t9">
<p>Specifies the context for the callback function that was passed by <code dir="ltr">dbms_aq.register</code>. See <a href="t_aq.htm#i997071">AQ$_REG_INFO Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t9" headers="r1c1-t9">
<p><code dir="ltr">reginfo</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t9 r1c2-t9">
<p>See <a href="t_aq.htm#i997071">AQ$_REG_INFO Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t9" headers="r1c1-t9">
<p><code dir="ltr">descr</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t9 r1c2-t9">
<p>See <a href="t_aq.htm#i996954">AQ$_DESCRIPTOR Type</a></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t9" headers="r1c1-t9">
<p><code dir="ltr">payload</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t9 r1c2-t9">
<p>If a notification message is expected for a raw payload enqueue then this contains the raw payload that was enqueued into a non persistent queue. In case of a persistent queue with raw payload this parameter will be null.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t9" headers="r1c1-t9">
<p><code dir="ltr">payloadl</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t9 r1c2-t9">
<p>Specifies the length of <code dir="ltr">payload</code>. If <code dir="ltr">payload</code> is null, <code dir="ltr">payload1</code> = 0.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>If the notification message is expected for an ADT payload enqueue, the PL/SQL callback must have the following signature:</p>
<pre dir="ltr">procedure plsqlcallback(
  context  IN RAW, 
  reginfo  IN SYS.AQ$_REG_INFO, 
  descr    IN SYS.AQ$_DESCRIPTOR, 
  payload  IN VARCHAR2,
  payloadl IN NUMBER);
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS65286" class="refsect2"><a id="i1001373"></a>
<h3 class="refsect2">Operational Notes</h3>
<ul>
<li>
<p><a href="#i1001379">DBMS_AQ and DBMS_AQADM Java Classes</a></p>
</li>
</ul>
<div id="ARPLS65287" class="refsect3"><a id="i1001379"></a>
<h4 class="refsect3">DBMS_AQ and DBMS_AQADM Java Classes</h4>
<p>Java interfaces are available for <code dir="ltr">DBMS_AQ</code> and <code dir="ltr">DBMS_AQADM</code>. The Java interfaces are provided in the <code dir="ltr">$ORACLE_HOME/rdbms/jlib/aqapi</code>.<code dir="ltr">jar</code>. Users are required to have <code dir="ltr">EXECUTE</code> privileges on the <code dir="ltr">DBMS_AQIN</code> package to use these interfaces.</p>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i996982"></a>
<div id="ARPLS096" class="refsect1">
<h2 class="refsect1">Summary of DBMS_AQ Subprograms</h2>
<div id="ARPLS65288" class="tblformal">
<p class="titleintable"><a id="sthref804"></a><a id="sthref805"></a>Table 24-5 DBMS_AQ Package Subprograms</p>
<table class="cellalignment4330" title="DBMS_AQ Package Subprograms" summary="This table lists the DBMS_AQ subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t10">Subprograms</th>
<th class="cellalignment4328" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t10" headers="r1c1-t10">
<p><a href="#i1001600">BIND_AGENT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r2c1-t10 r1c2-t10">
<p>Creates an entry for an Oracle Database Advanced Queuing agent in the LDAP directory</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t10" headers="r1c1-t10">
<p><a href="#i1000252">DEQUEUE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r3c1-t10 r1c2-t10">
<p>Dequeues a message from the specified queue</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t10" headers="r1c1-t10">
<p><a href="#i1000850">DEQUEUE_ARRAY Function</a></p>
</td>
<td class="cellalignment4329" headers="r4c1-t10 r1c2-t10">
<p>Dequeues an array of messages from the specified queue</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t10" headers="r1c1-t10">
<p><a href="#i1001648">ENQUEUE Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r5c1-t10 r1c2-t10">
<p>Adds a message to the specified queue</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t10" headers="r1c1-t10">
<p><a href="#i1001754">ENQUEUE_ARRAY Function</a></p>
</td>
<td class="cellalignment4329" headers="r6c1-t10 r1c2-t10">
<p>Adds an array of messages to the specified queue</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t10" headers="r1c1-t10">
<p><a href="#i997325">LISTEN Procedures</a></p>
</td>
<td class="cellalignment4329" headers="r7c1-t10 r1c2-t10">
<p>Listen to one or more queues on behalf of a list of agents</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t10" headers="r1c1-t10">
<p><a href="#i1001949">POST Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r8c1-t10 r1c2-t10">
<p>Posts to a anonymous subscription which allows all clients who are registered for the subscription to get notifications</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r9c1-t10" headers="r1c1-t10">
<p><a href="#i997366">REGISTER Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r9c1-t10 r1c2-t10">
<p>Registers for message notifications</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r10c1-t10" headers="r1c1-t10">
<p><a href="#i1001993">UNBIND_AGENT Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r10c1-t10 r1c2-t10">
<p>Removes an entry for an Oracle Database Advanced Queuing agent from the LDAP directory</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r11c1-t10" headers="r1c1-t10">
<p><a href="#CBACHAFB">UNREGISTER Procedure</a></p>
</td>
<td class="cellalignment4329" headers="r11c1-t10 r1c2-t10">
<p>Unregisters a subscription which turns off notification</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">DBMS_AQ</code> does not have a purity level defined; therefore, you cannot call any procedure in this package from other procedures that have <code dir="ltr">RNDS</code>, <code dir="ltr">WNDS</code>, <code dir="ltr">RNPS</code> or <code dir="ltr">WNPS</code> constraints defined.</div>
<div id="ARPLS103" class="refsect2"><a id="i1001600"></a>
<h3 class="refsect2">BIND_AGENT Procedure</h3>
<p>This procedure creates an entry for an Oracle Database Advanced Queuing agent in the LDAP server.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref806"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.BIND_AGENT(
   agent        IN SYS.AQ$_AGENT,
   certificate  IN VARCHAR2 default NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref807"></a>Parameters</p>
<div id="ARPLS65289" class="tblformal">
<p class="titleintable"><a id="sthref808"></a><a id="sthref809"></a>Table 24-6 BIND_AGENT Procedure Parameters</p>
<table class="cellalignment4330" title="BIND_AGENT Procedure Parameters" summary="This table describes the parameters of DBMS_AQ.BIND_AGENT." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t12">Parameter</th>
<th class="cellalignment4328" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">agent</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t12 r1c2-t12">
<p>Agent that is to be registered in LDAP server.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">certificate</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t12 r1c2-t12">
<p>Location (LDAP distinguished name) of the &#34;organizationalperson&#34; entry in LDAP whose digital certificate (attribute <code dir="ltr">usercertificate</code>) is to be used for this agent. Example: &#34;cn=OE, cn=ACME, cn=com&#34; is a distinguished name for a OrganizationalPerson OE whose certificate will be used with the specified agent.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref810"></a>Usage Notes</p>
<p>In the LDAP server, digital certificates are stored as an attribute (<code dir="ltr">usercertificate</code>) of the <code dir="ltr">OrganizationalPerson</code> entity. The distinguished name for this <code dir="ltr">OrganizationalPerson</code> must be specified when binding the agent.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS098" class="refsect2"><a id="i1000252"></a>
<h3 class="refsect2">DEQUEUE Procedure</h3>
<p>This procedure dequeues a message from the specified queue.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref811"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.DEQUEUE (
   queue_name          IN      VARCHAR2,
   dequeue_options     IN      dequeue_options_t,
   message_properties  OUT     message_properties_t,
   payload             OUT     &#34;&lt;ADT_1&gt;&#34;
   msgid               OUT     RAW);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref812"></a>Parameters</p>
<div id="ARPLS65290" class="tblformal">
<p class="titleintable"><a id="sthref813"></a><a id="sthref814"></a>Table 24-7 DEQUEUE Procedure Parameters</p>
<table class="cellalignment4330" title="DEQUEUE Procedure Parameters " summary="This table describes the parameters of DBMS_AQ.DEQUEUE." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t13">Parameter</th>
<th class="cellalignment4328" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t13 r1c2-t13">
<p>Specifies the name of the queue.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">dequeue_options</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t13 r1c2-t13">
<p>See <a href="t_aq.htm#CBABBDGH">DEQUEUE_OPTIONS_T Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t13" headers="r1c1-t13">
<p><code dir="ltr">message_properties</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t13 r1c2-t13">
<p>See <a href="t_aq.htm#i997396">MESSAGE_PROPERTIES_T Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t13" headers="r1c1-t13">
<p><code dir="ltr">payload</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t13 r1c2-t13">
<p>Not interpreted by Oracle Database Advanced Queuing. The payload must be specified according to the specification in the associated queue table. For the definition of <code dir="ltr"><span class="codeinlineitalic">type_name</span></code> refer to <a href="#i996875">Type Name</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t13" headers="r1c1-t13">
<p><code dir="ltr">msgid</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t13 r1c2-t13">
<p>System generated identification of the message.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref815"></a>Usage Notes</p>
<p>The search criteria for messages to be dequeued is determined by the following parameters in <code dir="ltr">dequeue_options</code>:</p>
<ul>
<li>
<p><code dir="ltr">consumer_name</code></p>
</li>
<li>
<p><code dir="ltr">msgid</code></p>
<p><code dir="ltr">Msgid</code> uniquely identifies the message to be dequeued. Only messages in the <code dir="ltr">READY</code> state are dequeued unless <code dir="ltr">msgid</code> is specified.</p>
</li>
<li>
<p><code dir="ltr">correlation</code></p>
<p>Correlation identifiers are application-defined identifiers that are not interpreted by Oracle Database Advanced Queuing.</p>
</li>
<li>
<p><code dir="ltr">deq_condition</code></p>
<p>Dequeue condition is an expression based on the message properties, the message data properties and PL/SQL functions. A <code dir="ltr">deq_condition</code> is specified as a Boolean expression using syntax similar to the <code dir="ltr">WHERE</code> clause of a SQL query. This Boolean expression can include conditions on message properties, user data properties (object payloads only), and PL/SQL or SQL functions (as specified in the where clause of a SQL query). Message properties include <code dir="ltr">priority,</code> <code dir="ltr">corrid</code> and other columns in the queue table.</p>
<p>To specify dequeue conditions on a message payload (object payload), use attributes of the object type in clauses. You must prefix each attribute with <code dir="ltr">tab.user_data</code> as a qualifier to indicate the specific column of the queue table that stores the payload.</p>
<p>Example: <code dir="ltr">tab.user_data.orderstatus=&#39;EXPRESS&#39;</code></p>
</li>
</ul>
<p>The dequeue order is determined by the values specified at the time the queue table is created unless overridden by the <code dir="ltr">msgid</code> and correlation ID in <code dir="ltr">dequeue_options</code>.</p>
<p>The database-consistent read mechanism is applicable for queue operations. For example, a <code dir="ltr">BROWSE</code> call may not see a message that is enqueued after the beginning of the browsing transaction.</p>
<p>The default <code dir="ltr">NAVIGATION</code> parameter during dequeue is <code dir="ltr">NEXT_MESSAGE</code>. This means that subsequent dequeues will retrieve the messages from the queue based on the snapshot obtained in the first dequeue. In particular, a message that is enqueued after the first dequeue command will be processed only after processing all the remaining messages in the queue. This is usually sufficient when all the messages have already been enqueued into the queue, or when the queue does not have a priority-based ordering. However, applications must use the <code dir="ltr">FIRST_MESSAGE</code> navigation option when the first message in the queue needs to be processed by every dequeue command. This usually becomes necessary when a higher priority message arrives in the queue while messages already-enqueued are being processed.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
It may be more efficient to use the <code dir="ltr">FIRST_MESSAGE</code> navigation option when messages are concurrently enqueued. If the <code dir="ltr">FIRST_MESSAGE</code> option is not specified, Oracle Database Advanced Queuing continually generates the snapshot as of the first dequeue command, leading to poor performance. If the <code dir="ltr">FIRST_MESSAGE</code> option is specified, then Oracle Database Advanced Queuing uses a new snapshot for every dequeue command.</div>
<p>Messages enqueued in the same transaction into a queue that has been enabled for message grouping will form a group. If only one message is enqueued in the transaction, then this will effectively form a group of one message. There is no upper limit to the number of messages that can be grouped in a single transaction.</p>
<p>In queues that have not been enabled for message grouping, a dequeue in <code dir="ltr">LOCKED</code> or <code dir="ltr">REMOVE</code> mode locks only a single message. By contrast, a dequeue operation that seeks to dequeue a message that is part of a group will lock the entire group. This is useful when all the messages in a group need to be processed as an atomic unit.</p>
<p>When all the messages in a group have been dequeued, the dequeue returns an error indicating that all messages in the group have been processed. The application can then use the <code dir="ltr">NEXT_TRANSACTION</code> to start dequeuing messages from the next available group. In the event that no groups are available, the dequeue will time out after the specified <code dir="ltr">WAIT</code> period.</p>
<p class="subhead2"><a id="ARPLS65291"></a>Using Secure Queues</p>
<p>For secure queues, you must specify <code dir="ltr">consumer_name</code> in the <code dir="ltr">dequeue_options</code> parameter. See <a href="t_aq.htm#CBABBDGH">DEQUEUE_OPTIONS_T Type</a> for more information about <code dir="ltr">consumer_name</code>.</p>
<p>When you use secure queues, the following are required:</p>
<ul>
<li>
<p>You must have created a valid Oracle Database Advanced Queuing agent using <code dir="ltr">DBMS_AQADM.CREATE_AQ_AGENT</code>. See <a href="d_aqadm.htm#i1015539">CREATE_AQ_AGENT Procedure</a> .</p>
</li>
<li>
<p>You must map the Oracle Database Advanced Queuing agent to a database user with dequeue privileges on the secure queue. Use <code dir="ltr">DBMS_AQADM.ENABLE_DB_ACCESS</code> to do this. See <a href="d_aqadm.htm#i1015894">ENABLE_DB_ACCESS Procedure</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS" href="../STRMS/toc.htm"><span class="italic">Oracle Streams Concepts and Administration</span></a> for information about secure queues</div>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS65292" class="refsect2"><a id="i1000850"></a>
<h3 class="refsect2"><a id="sthref816"></a>DEQUEUE_ARRAY Function</h3>
<p>This function dequeues an array of messages and returns them in the form of an array of payloads, an array of message properties and an array of message IDs. This function returns the number of messages successfully dequeued.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref817"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.DEQUEUE_ARRAY (
   queue_name                IN   VARCHAR2,
   dequeue_options           IN   dequeue_options_t,
   array_size                IN   pls_integer,
   message_properties_array  OUT  message_properties_array_t,
   payload_array             OUT  &#34;&lt;COLLECTION_1&gt;&#34;,
   msgid_array               OUT  msgid_array_t,
   error_array               OUT  error_array_t)
RETURN pls_integer;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref818"></a>Parameters</p>
<div id="ARPLS65293" class="tblformal">
<p class="titleintable"><a id="sthref819"></a><a id="sthref820"></a>Table 24-8 DEQUEUE_ARRAY Function Parameters</p>
<table class="cellalignment4330" title="DEQUEUE_ARRAY Function Parameters" summary="This table describes the parameters of DBMS_AQ.DEQUEUE_ARRAY." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t16">Parameter</th>
<th class="cellalignment4328" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t16 r1c2-t16">
<p>The queue name from which messages are dequeued (same as single-row dequeue).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t16" headers="r1c1-t16">
<p><code dir="ltr">dequeue_options</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t16 r1c2-t16">
<p>The set of options which will be applied to all messages in the array (same as single-row dequeue).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t16" headers="r1c1-t16">
<p><code dir="ltr">array_size</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t16 r1c2-t16">
<p>The number of elements to dequeue.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t16" headers="r1c1-t16">
<p><code dir="ltr">message_properties_array</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t16 r1c2-t16">
<p>A record containing an array corresponding to each message property. Each payload element has a corresponding set of message properties. See <a href="t_aq.htm#i1003324">MESSAGE_PROPERTIES_ARRAY_T Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t16" headers="r1c1-t16">
<p><code dir="ltr">payload_array</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t16 r1c2-t16">
<p>An array of dequeued payload data. &#34;&lt;COLLECTION_1&gt;&#34; can be an associative array, varray or nested table in its PL/SQL representation.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t16" headers="r1c1-t16">
<p><code dir="ltr">msgid_array</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t16 r1c2-t16">
<p>An array of message IDs of the dequeued messages. See <a href="t_aq.htm#CBADGHGH">MSGID_ARRAY_T Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t16" headers="r1c1-t16">
<p><code dir="ltr">error_array</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t16 r1c2-t16">
<p>Currently not implemented</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref821"></a>Usage Notes</p>
<p>A nonzero wait time, as specified in <code dir="ltr">dequeue_options</code>, is recognized only when there are no messages in the queue. If the queue contains messages that are eligible for dequeue, then the <code dir="ltr">DEQUEUE_ARRAY</code> function will dequeue up to <code dir="ltr">array_size</code> messages and return immediately.</p>
<p>Dequeue by <code dir="ltr">message_id</code> is not supported. See <a href="#i1000252">DEQUEUE Procedure</a> for more information on the <code dir="ltr">navigation</code> parameter. Existing <code dir="ltr">NAVIGATION</code> modes are supported. In addition, two new <code dir="ltr">NAVIGATION</code> modes are supported for queues enabled for message grouping:</p>
<ul>
<li>
<p><code dir="ltr">FIRST_MESSAGE_MULTI_GROUP</code></p>
</li>
<li>
<p><code dir="ltr">NEXT_MESSAGE_MULTI_GROUP</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="t_aq.htm#i1003249">ENQUEUE_OPTIONS_T Type</a></div>
</li>
</ul>
<p>For transaction grouped queues and <code dir="ltr">ONE_GROUP</code> navigation, messages are dequeued from a single transaction group only, subject to the <code dir="ltr">array_size</code> limit. In <code dir="ltr">MULTI_GROUP</code> navigation, messages are dequeued across multiple transaction groups, still subject to the <code dir="ltr">array_size</code> limit. ORA-25235 is returned to indicate the end of a transaction group.</p>
<p><code dir="ltr">DEQUEUE_ARRAY</code> is not supported for buffered messages, but you can still use this procedure on individual buffered messages by setting <code dir="ltr">array_size</code> to one message.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS097" class="refsect2"><a id="i1001648"></a>
<h3 class="refsect2">ENQUEUE Procedure</h3>
<p>This procedure adds a message to the specified queue.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref822"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.ENQUEUE (
   queue_name          IN      VARCHAR2,
   enqueue_options     IN      enqueue_options_t,
   message_properties  IN      message_properties_t,
   payload             IN       &#34;&lt;ADT_1&gt;&#34;,
   msgid               OUT     RAW);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref823"></a>Parameters</p>
<div id="ARPLS65294" class="tblformal">
<p class="titleintable"><a id="sthref824"></a><a id="sthref825"></a>Table 24-9 ENQUEUE Procedure Parameters</p>
<table class="cellalignment4330" title="ENQUEUE Procedure Parameters" summary="This table describes the parameters of DBMS_AQ.ENQUEUE." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t18">Parameter</th>
<th class="cellalignment4328" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t18" headers="r1c1-t18">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t18 r1c2-t18">
<p>Specifies the name of the queue to which this message should be enqueued. The queue cannot be an exception queue.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t18" headers="r1c1-t18">
<p><code dir="ltr">enqueue_options</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t18 r1c2-t18">
<p>See <a href="t_aq.htm#i1003249">ENQUEUE_OPTIONS_T Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t18" headers="r1c1-t18">
<p><code dir="ltr">message_properties</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t18 r1c2-t18">
<p>See <a href="t_aq.htm#i997396">MESSAGE_PROPERTIES_T Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t18" headers="r1c1-t18">
<p><code dir="ltr">payload</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t18 r1c2-t18">
<p>Not interpreted by Oracle Database Advanced Queuing. The payload must be specified according to the specification in the associated queue table. <code dir="ltr">NULL</code> is an acceptable parameter. For the definition of <code dir="ltr"><span class="codeinlineitalic">type_name</span></code> refer to <a href="#i996875">Type Name</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t18" headers="r1c1-t18">
<p><code dir="ltr">msgid</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t18 r1c2-t18">
<p>System generated identification of the message. This is a globally unique identifier that can be used to identify the message at dequeue time.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref826"></a>Usage Notes</p>
<p>The <code dir="ltr">sequence_deviation</code> parameter in <code dir="ltr">enqueue_options</code> can be used to change the order of processing between two messages. The identity of the other message, if any, is specified by the <code dir="ltr">enqueue_options</code> parameter <code dir="ltr">relative_msgid</code>. The relationship is identified by the <code dir="ltr">sequence_deviation</code> parameter.</p>
<p>Specifying <code dir="ltr">sequence_deviation</code> for a message introduces some restrictions for the delay and priority values that can be specified for this message. The delay of this message must be less than or equal to the delay of the message before which this message is to be enqueued. The priority of this message must be greater than or equal to the priority of the message before which this message is to be enqueued.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">sequence_deviation</code> attribute has no effect in releases prior to Oracle Streams AQ 10g Release 1 (10.1) if <code dir="ltr">message_grouping</code> parameter of <code dir="ltr">DBMS_AQADM</code> subprograms is set to <code dir="ltr">TRANSACTIONAL</code>. The sequence deviation feature is deprecated in Oracle Streams AQ 10g Release 2 (10.2).</div>
<p>If a message is enqueued to a multiconsumer queue with no recipient, and if the queue has no subscribers (or rule-based subscribers that match this message), then Oracle error <code dir="ltr">ORA</code>_<code dir="ltr">24033</code> is raised. This is a warning that the message will be discarded because there are no recipients or subscribers to whom it can be delivered.</p>
<p class="subhead2"><a id="ARPLS65295"></a>Using Secure Queues</p>
<p>For secure queues, you must specify the <code dir="ltr">sender_id</code> in the <code dir="ltr">messages_properties</code> parameter. See <a href="t_aq.htm#i997396">MESSAGE_PROPERTIES_T Type</a> for more information about <code dir="ltr">sender_id</code>.</p>
<p>When you use secure queues, the following are required:</p>
<ul>
<li>
<p>You must have created a valid Oracle Database Advanced Queuing agent using <code dir="ltr">DBMS_AQADM.CREATE_AQ_AGENT</code>. See <a href="d_aqadm.htm#i1015539">CREATE_AQ_AGENT Procedure</a> .</p>
</li>
<li>
<p>You must map <code dir="ltr">sender_id</code> to a database user with enqueue privileges on the secure queue. Use <code dir="ltr">DBMS_AQADM.ENABLE_DB_ACCESS</code> to do this. See <a href="d_aqadm.htm#i1015894">ENABLE_DB_ACCESS Procedure</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS" href="../STRMS/toc.htm"><span class="italic">Oracle Streams Concepts and Administration</span></a> for information about secure queues</div>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS65296" class="refsect2"><a id="i1001754"></a>
<h3 class="refsect2"><a id="sthref827"></a>ENQUEUE_ARRAY Function</h3>
<p>This function enqueues an array of payloads using a corresponding array of message properties. The output will be an array of message IDs of the enqueued messages.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref828"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.ENQUEUE_ARRAY (
   queue_name                IN   VARCHAR2,
   enqueue_options           IN   enqueue_options_t,
   array_size                IN   pls_integer,
   message_properties_array  IN   message_properties_array_t,
   payload_array             IN   &#34;&lt;COLLECTION_1&gt;&#34;,
   msgid_array               OUT  msgid_array_t,
   error_array               OUT  error_array_t)
RETURN pls_integer;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref829"></a>Parameters</p>
<div id="ARPLS65297" class="tblformal">
<p class="titleintable"><a id="sthref830"></a><a id="sthref831"></a>Table 24-10 ENQUEUE_ARRAY Function Parameters</p>
<table class="cellalignment4330" title="ENQUEUE_ARRAY Function Parameters" summary="This table describes the parameters of DBMS_AQ.ENQUEUE_ARRAY." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t21">Parameter</th>
<th class="cellalignment4328" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t21" headers="r1c1-t21">
<p><code dir="ltr">queue_name</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t21 r1c2-t21">
<p>The queue name in which messages are enqueued (same as single-row enqueue).</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t21" headers="r1c1-t21">
<p><code dir="ltr">enqueue_options</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t21 r1c2-t21">
<p>See <a href="t_aq.htm#i1003249">ENQUEUE_OPTIONS_T Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t21" headers="r1c1-t21">
<p><code dir="ltr">array_size</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t21 r1c2-t21">
<p>The number of elements to enqueue.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t21" headers="r1c1-t21">
<p><code dir="ltr">message_properties_array</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t21 r1c2-t21">
<p>A record containing an array corresponding to each message property. For each property, the user must allocate <code dir="ltr">array_size</code> elements. See <a href="t_aq.htm#i1003324">MESSAGE_PROPERTIES_ARRAY_T Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t21" headers="r1c1-t21">
<p><code dir="ltr">payload_array</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t21 r1c2-t21">
<p>An array of payload data. &#34;&lt;<code dir="ltr">COLLECTION_1</code>&gt;&#34; can be an associative array, <code dir="ltr">VARRAY</code>, or nested table in its PL/SQL representation.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r7c1-t21" headers="r1c1-t21">
<p><code dir="ltr">msgid_array</code></p>
</td>
<td class="cellalignment4329" headers="r7c1-t21 r1c2-t21">
<p>An array of message IDs for the enqueued messages. If an error occurs for a particular message, then its corresponding message ID is null. See <a href="t_aq.htm#CBADGHGH">MSGID_ARRAY_T Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r8c1-t21" headers="r1c1-t21">
<p><code dir="ltr">error_array</code></p>
</td>
<td class="cellalignment4329" headers="r8c1-t21 r1c2-t21">
<p>Currently not implemented</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref832"></a>Usage Notes</p>
<p><code dir="ltr">ENQUEUE_ARRAY</code> is not supported for buffered messages, but you can still use this procedure on individual buffered messages by setting <code dir="ltr">array_size</code> to one message.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS099" class="refsect2"><a id="i997325"></a>
<h3 class="refsect2">LISTEN Procedures</h3>
<p>This procedure listens on one or more queues on behalf of a list of agents. The address field of the agent indicates the queue the agent wants to monitor. Only local queues are supported as addresses. Protocol is reserved for future use.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref833"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.LISTEN (
   agent_list            IN    AQ$_AGENT_LIST_T,
   wait                  IN    BINARY_INTEGER DEFAULT DBMS_AQ.FOREVER, 
   agent                 OUT   SYS.AQ$_AGENT);
</pre>
<pre dir="ltr">DBMS_AQ.LISTEN (
   agent_list             IN   AQ$_AGENT_LIST_T,
   wait                   IN   BINARY_INTEGER DEFAULT FOREVER, 
   listen_delivery_mode   IN   PLS_INTEGER DEFAULT DBMS_AQ.PERSISTENT,
   agent                  OUT  SYS.AQ$_AGENT,
   message_delivery_mode  OUT  PLS_INTEGER);
</pre>
<pre dir="ltr">TYPE aq$_agent_list_t IS TABLE of aq$_agent INDEXED BY BINARY_INTEGER;
TYPE aq$_agent_list_t IS TABLE of aq$_agent INDEXED BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref834"></a>Parameters</p>
<div id="ARPLS65298" class="tblformal">
<p class="titleintable"><a id="sthref835"></a><a id="sthref836"></a>Table 24-11 LISTEN Procedure Parameters</p>
<table class="cellalignment4330" title="LISTEN Procedure Parameters" summary="This table describes the parameters of DBMS_AQ.LISTEN." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t22">Parameter</th>
<th class="cellalignment4328" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t22" headers="r1c1-t22">
<p><code dir="ltr">agent_list</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t22 r1c2-t22">
<p>List of agents to listen for</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t22" headers="r1c1-t22">
<p><code dir="ltr">wait</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t22 r1c2-t22">
<p>Time out for the listen call in seconds. By default, the call will block forever.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r4c1-t22" headers="r1c1-t22">
<p><code dir="ltr">listen_delivery_mode</code></p>
</td>
<td class="cellalignment4329" headers="r4c1-t22 r1c2-t22">
<p>The caller specifies whether it is interested in persistent, buffered messages or both types of messages, specifying a delivery mode of <code dir="ltr">DBMS_AQ.PERSISTENT</code> or <code dir="ltr">DBMS_AQ.BUFFERED</code> or <code dir="ltr">DBMS_AQ.PERSISTENT_OR_BUFFERED</code></p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r5c1-t22" headers="r1c1-t22">
<p><code dir="ltr">agent</code></p>
</td>
<td class="cellalignment4329" headers="r5c1-t22 r1c2-t22">
<p>Agent with a message available for consumption</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r6c1-t22" headers="r1c1-t22">
<p><code dir="ltr">message_delivery_mode</code></p>
</td>
<td class="cellalignment4329" headers="r6c1-t22 r1c2-t22">
<p>Returns the message type along with the queue and consumer for which there is a message</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref837"></a>Usage Notes</p>
<p>If agent-address is a multiconsumer queue, then agent-name is mandatory. For single-consumer queues, agent-name must not be specified.</p>
<p>This procedure takes a list of agents as an argument. You specify the queue to be monitored in the address field of each agent listed. You also must specify the name of the agent when monitoring multiconsumer queues. For single-consumer queues, an agent name must not be specified. Only local queues are supported as addresses. Protocol is reserved for future use.</p>
<p>This is a blocking call that returns when there is a message ready for consumption for an agent in the list. If there are messages for more than one agent, only the first agent listed is returned. If there are no messages found when the wait time expires, an error is raised.</p>
<p>A successful return from the <code dir="ltr">LISTEN</code> call is only an indication that there is a message for one of the listed agents in one the specified queues. The interested agent must still dequeue the relevant message.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot call <code dir="ltr">LISTEN</code> on nonpersistent queues.</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS102" class="refsect2"><a id="i1001949"></a>
<h3 class="refsect2">POST Procedure</h3>
<p>This procedure posts to a list of anonymous subscriptions that allows all clients who are registered for the subscriptions to get notifications.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref838"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.POST (
  post_list       IN  SYS.AQ$_POST_INFO_LIST,
  post_count      IN  NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref839"></a>Parameters</p>
<div id="ARPLS65299" class="tblformal">
<p class="titleintable"><a id="sthref840"></a><a id="sthref841"></a>Table 24-12 POST Procedure Parameters</p>
<table class="cellalignment4330" title="POST Procedure Parameters" summary="This table describes the parameters of DBMS_AQ.POST." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t24">Parameter</th>
<th class="cellalignment4328" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t24" headers="r1c1-t24">
<p><code dir="ltr">post_list</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t24 r1c2-t24">
<p>Specifies the list of anonymous subscriptions to which you want to post. It is a list of <a href="t_aq.htm#i997038">AQ$_POST_INFO_LIST Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t24" headers="r1c1-t24">
<p><code dir="ltr">post_count</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t24 r1c2-t24">
<p>Specifies the number of entries in the <code dir="ltr">post_list.</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref842"></a>Usage Notes</p>
<p>This procedure is used to post to anonymous subscriptions which allows all clients who are registered for the subscriptions to get notifications. Several subscriptions can be posted to at one time.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS100" class="refsect2"><a id="i997366"></a>
<h3 class="refsect2">REGISTER Procedure</h3>
<p>This procedure registers an e-mail address, user-defined PL/SQL procedure, or HTTP URL for message notification.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref843"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.REGISTER (
   reg_list     IN  SYS.AQ$_REG_INFO_LIST,
   count        IN  NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref844"></a>Parameters</p>
<div id="ARPLS65300" class="tblformal">
<p class="titleintable"><a id="sthref845"></a><a id="sthref846"></a>Table 24-13 REGISTER Procedure Parameters</p>
<table class="cellalignment4330" title="REGISTER Procedure Parameters" summary="This table describes the parameters of DBMS_AQ.REGISTER." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t25">Parameter</th>
<th class="cellalignment4328" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t25" headers="r1c1-t25">
<p><code dir="ltr">reg_list</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t25 r1c2-t25">
<p>Specifies the list of subscriptions to which you want to register for message notifications. It is a list of <a href="t_aq.htm#i997071">AQ$_REG_INFO Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t25" headers="r1c1-t25">
<p><code dir="ltr">count</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t25 r1c2-t25">
<p>Specifies the number of entries in the <code dir="ltr">reg_list</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref847"></a>Usage Notes</p>
<ul>
<li>
<p>This procedure is used to register for notifications. You can specify an e-mail address to which message notifications are sent, register a procedure to be invoked on a notification, or register an HTTP URL to which the notification is posted. Interest in several subscriptions can be registered at one time.</p>
</li>
<li>
<p>The procedure can also be used to register for grouping notifications using five grouping attributes:</p>
<ul>
<li>
<p>Class &ndash; grouping criterion (currently only <code dir="ltr">TIME</code> criterion is supported)</p>
</li>
<li>
<p>Value &ndash; the value of the grouping criterion (currently only time in seconds for criterion <code dir="ltr">TIME</code>)</p>
</li>
<li>
<p>Type &ndash; summary or last, also contains count of notifications received in group (for AQ namespace only, not for <code dir="ltr">DBCHANGE</code> namespace)</p>
</li>
<li>
<p>Repeat count &ndash; how many times to perform grouping (Default is <code dir="ltr">FOREVER</code>)</p>
</li>
<li>
<p>Start time &ndash; when to start grouping (Default is current time)</p>
</li>
</ul>
</li>
<li>
<p>If you register for e-mail notifications, you should set the host name and port name for the SMTP server that will be used by the database to send e-mail notifications. If required, you should set the send-from e-mail address, which is set by the database as the <code dir="ltr">sent</code> <code dir="ltr">from</code> field. You need a Java-enabled database to use this feature.</p>
</li>
<li>
<p>If you register for HTTP notifications, you may want to set the host name and port number for the proxy server and a list of no-proxy domains that will be used by the database to post HTTP notifications.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="d_aqelm.htm#CACFDHHH">Chapter 26, &#34;DBMS_AQELM&#34;</a> for more information on e-mail and HTTP notifications</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS104" class="refsect2"><a id="i1001993"></a>
<h3 class="refsect2">UNBIND_AGENT Procedure</h3>
<p>This procedure removes the entry for an Oracle Database Advanced Queuing agent from the LDAP server.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref848"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.UNBIND_AGENT(
   agent    IN SYS.AQ$_AGENT);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref849"></a>Parameters</p>
<div id="ARPLS65301" class="tblformal">
<p class="titleintable"><a id="sthref850"></a><a id="sthref851"></a>Table 24-14 BIND_AGENT Procedure Parameters</p>
<table class="cellalignment4330" title="BIND_AGENT Procedure Parameters" summary="This table describes the parameters of DBMS_AQ.UNBIND_AGENT." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t27">Parameter</th>
<th class="cellalignment4328" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t27" headers="r1c1-t27">
<p><code dir="ltr">agent</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t27 r1c2-t27">
<p>Agent that is to be removed from the LDAP server</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS101" class="refsect2"><a id="CBACHAFB"></a>
<h3 class="refsect2">UNREGISTER Procedure</h3>
<p>This procedure unregisters a subscription which turns off notifications.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref852"></a>Syntax</p>
<pre dir="ltr">DBMS_AQ.UNREGISTER (
   reg_list     IN  SYS.AQ$_REG_INFO_LIST,
   reg_count    IN  NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref853"></a>Parameters</p>
<div id="ARPLS65302" class="tblformal">
<p class="titleintable"><a id="sthref854"></a><a id="sthref855"></a>Table 24-15 UNREGISTER Procedure Parameters</p>
<table class="cellalignment4330" title="UNREGISTER Procedure Parameters" summary="This table describes the parameters of DBMS_AQ.UNREGISTER." dir="ltr">
<thead>
<tr class="cellalignment4321">
<th class="cellalignment4328" id="r1c1-t28">Parameter</th>
<th class="cellalignment4328" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r2c1-t28" headers="r1c1-t28">
<p><code dir="ltr">reg_list</code></p>
</td>
<td class="cellalignment4329" headers="r2c1-t28 r1c2-t28">
<p>Specifies the list of subscriptions to which you want to register for message notifications. It is a list of <a href="t_aq.htm#i997071">AQ$_REG_INFO Type</a>.</p>
</td>
</tr>
<tr class="cellalignment4321">
<td class="cellalignment4329" id="r3c1-t28" headers="r1c1-t28">
<p><code dir="ltr">reg_count</code></p>
</td>
<td class="cellalignment4329" headers="r3c1-t28 r1c2-t28">
<p>Specifies the number of entries in the <code dir="ltr">reg_list</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref856"></a>Usage Notes</p>
<p>This procedure is used to unregister a subscription which turns off notifications. Several subscriptions can be unregistered from at one time.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4320">
<tr>
<td class="cellalignment4329">
<table class="cellalignment4325">
<tr>
<td class="cellalignment4324"><a href="d_apply.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4324"><a href="d_aqadm.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4332">
<table class="cellalignment4323">
<tr>
<td class="cellalignment4324"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4324"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4324"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4324"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4324"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4324"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>