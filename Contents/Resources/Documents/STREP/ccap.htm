<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-104190"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Configuring%20Implicit%20Capture"></a><title>Configuring Implicit Capture</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1044"/>
<meta name="dcterms.created" content="2015-02-12T7:14:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Streams Replication Administrator&#39;s Guide"/>
<meta name="dcterms.identifier" content="E53118-02"/>
<meta name="dcterms.isVersionOf" content="STREP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="config_add.htm" title="Previous" type="text/html"/>
<link rel="Next" href="cprop.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53118-02.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/28</span> <!-- End Header -->
<div id="STREP204" class="chapter"><a id="BEHECDFJ"></a>
<h1 class="chapter"><span class="secnum">5</span> Configuring Implicit Capture</h1>
<p><a id="sthref249"></a><a id="sthref250"></a><a id="sthref251"></a>Implicit capture means that a capture process or a synchronous capture captures and enqueues database changes automatically. A capture process captures changes in the redo log, while a synchronous capture captures data manipulation language (DML) changes with an internal mechanism. Both capture processes and synchronous captures reformat the captured changes into logical change records (LCRs) and enqueue the LCRs into an <code dir="ltr">ANYDATA</code> queue.</p>
<p>The following topics describe configuring implicit capture:</p>
<ul>
<li>
<p><a href="#i1006171">Configuring a Capture Process</a></p>
</li>
<li>
<p><a href="#BEHCGJFF">Configuring Synchronous Capture</a></p>
</li>
</ul>
<p>Each task described in this chapter should be completed by an Oracle Streams administrator that has been granted the appropriate privileges, unless specified otherwise.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STRMS002" href="../STRMS/strms_capture.htm#STRMS002"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about implicit capture</p>
</li>
<li>
<p><a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a></p>
</li>
</ul>
</div>
<a id="i1006171"></a>
<div id="STREP209" class="sect1">
<h2 class="sect1">Configuring a Capture Process<a id="sthref252"></a><a id="sthref253"></a><a id="sthref254"></a><a id="sthref255"></a></h2>
<p>You can create a capture process that captures changes either locally at the source database or remotely at a downstream database. A downstream capture process runs on a downstream database, and redo data from the source database is copied to the downstream database. A downstream capture process captures changes in the copied redo data at the downstream database.</p>
<p>You can use any of the following procedures to create a local capture process:</p>
<ul>
<li>
<p><a class="olink ARPLS308" href="../ARPLS/d_streams_adm.htm#ARPLS308"><code dir="ltr">DBMS_STREAMS_ADM.ADD_TABLE_RULES</code></a></p>
</li>
<li>
<p><a class="olink ARPLS329" href="../ARPLS/d_streams_adm.htm#ARPLS329"><code dir="ltr">DBMS_STREAMS_ADM.ADD_SUBSET_RULES</code></a></p>
</li>
<li>
<p><a class="olink ARPLS309" href="../ARPLS/d_streams_adm.htm#ARPLS309"><code dir="ltr">DBMS_STREAMS_ADM.ADD_SCHEMA_RULES</code></a></p>
</li>
<li>
<p><a class="olink ARPLS310" href="../ARPLS/d_streams_adm.htm#ARPLS310"><code dir="ltr">DBMS_STREAMS_ADM.ADD_GLOBAL_RULES</code></a></p>
</li>
<li>
<p><a class="olink ARPLS311" href="../ARPLS/d_cap_a.htm#ARPLS311"><code dir="ltr">DBMS_CAPTURE_ADM.CREATE_CAPTURE</code></a></p>
</li>
</ul>
<p>Each of the procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package creates a capture process with the specified name if it does not already exist, creates either a positive rule set or negative rule set for the capture process if the capture process does not have such a rule set, and can add table rules, schema rules, or global rules to the rule set.</p>
<p>The <code dir="ltr">CREATE_CAPTURE</code> procedure creates a capture process, but does not create a rule set or rules for the capture process. However, the <code dir="ltr">CREATE_CAPTURE</code> procedure enables you to specify an existing rule set to associate with the capture process, either as a positive or a negative rule set, a first SCN, and a start SCN for the capture process. Also, to create a capture process that performs downstream capture, you must use the <code dir="ltr">CREATE_CAPTURE</code> procedure.</p>
<p>The following sections describe configuring a capture process:</p>
<ul>
<li>
<p><a href="#BEHHDJHB">Preparing to Configure a Capture Process</a></p>
</li>
<li>
<p><a href="#i1006814">Configuring a Local Capture Process</a></p>
</li>
<li>
<p><a href="#BEHEJAAB">Configuring a Downstream Capture Process</a></p>
</li>
<li>
<p><a href="#BEHHBAJJ">After Configuring a Capture Process</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Caution:</p>
When a capture process is started or restarted, it might need to scan redo log files with a <code dir="ltr">FIRST_CHANGE#</code> value that is lower than start SCN. Removing required redo log files before they are scanned by a capture process causes the capture process to abort. You can query the <code dir="ltr">DBA_CAPTURE</code> data dictionary view to determine the first SCN, start SCN, and required checkpoint SCN for a capture process. A capture process needs the redo log file that includes the required checkpoint SCN, and all subsequent redo log files. See <a class="olink STRMS211" href="../STRMS/strms_adcapture.htm#STRMS211"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about the first SCN and start SCN for a capture process.</div>
<div class="infobox-note">
<p class="notep1"><a id="sthref256"></a><a id="sthref257"></a><a id="sthref258"></a><a id="sthref259"></a>Note:</p>
<ul>
<li>
<p>You can configure an entire Oracle Streams environment, including capture processes, using procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package or Oracle Enterprise Manager Cloud Control. See <a href="config_simple.htm#CACFECJJ">Chapter 2, &#34;Simple Oracle Streams Replication Configuration&#34;</a>.</p>
</li>
<li>
<p>After creating a capture process, avoid changing the <code dir="ltr">DBID</code> or global name of the source database for the capture process. If you change either the <code dir="ltr">DBID</code> or global name of the source database, then the capture process must be dropped and re-created. See <a href="man_gen_rep.htm#i1019206">&#34;Changing the DBID or Global Name of a Source Database&#34;</a>.</p>
</li>
<li>
<p>To configure downstream capture, the source database must be an Oracle Database 10<span class="italic">g</span> Release 1 or later database.</p>
</li>
</ul>
</div>
<a id="BEHHDJHB"></a>
<div id="STREP294" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Preparing to Configure a Capture Process<a id="sthref260"></a><a id="sthref261"></a><a id="sthref262"></a></h3>
<p>The following tasks must be completed before you configure a capture process:</p>
<ul>
<li>
<p>Complete the following tasks in <a href="prep_rep.htm#CACGBCIB">&#34;Tasks to Complete Before Configuring Oracle Streams Replication&#34;</a>.</p>
<ul>
<li>
<p><a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a></p>
</li>
<li>
<p><a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a></p>
</li>
<li>
<p><a href="prep_rep.htm#CACCBEBG">&#34;Ensuring That Each Source Database Is In ARCHIVELOG Mode&#34;</a></p>
</li>
<li>
<p><a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a></p>
</li>
<li>
<p><a href="prep_rep.htm#BABBFJEB">&#34;Configuring the Oracle Streams Pool&#34;</a></p>
</li>
<li>
<p><a href="prep_rep.htm#i1008208">&#34;Specifying Supplemental Logging&#34;</a></p>
</li>
</ul>
</li>
<li>
<p>If you plan to create a real-time or an archived-log downstream capture process that uses redo transport services to transfer archived redo log files to the downstream database automatically, then complete the steps in <a href="prep_rep.htm#i1014093">&#34;Configuring Log File Transfer to a Downstream Capture Database&#34;</a>.</p>
</li>
<li>
<p>If you plan to create a real-time downstream capture process, then complete the steps in <a href="prep_rep.htm#BEHEGACH">&#34;Adding Standby Redo Logs for Real-Time Downstream Capture&#34;</a>.</p>
</li>
<li>
<p>Create an <code dir="ltr">ANYDATA</code> queue to associate with the capture process, if one does not exist. See <a href="cprop.htm#i1006170">&#34;Creating an ANYDATA Queue&#34;</a> for instructions. The examples in this chapter assume that the queue used by the capture process is <code dir="ltr">strmadmin.streams_queue</code>. Create the queue on the same database that will run the capture process.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1006814"></a>
<div id="STREP295" class="sect2">
<h3 class="sect2">Configuring a Local Capture Process</h3>
<p>The following sections describe using the <code dir="ltr">DBMS_STREAMS_ADM</code> package and the <code dir="ltr">DBMS_CAPTURE_ADM</code> package to create a local capture process.</p>
<p>This section contains the following examples:</p>
<ul>
<li>
<p><a href="#i1006212">Configuring a Local Capture Process Using DBMS_STREAMS_ADM</a></p>
</li>
<li>
<p><a href="#BEHCAEIJ">Configuring a Local Capture Process Using DBMS_CAPTURE_ADM</a></p>
</li>
<li>
<p><a href="#i1008099">Configuring a Local Capture Process with Non-NULL Start SCN</a></p>
</li>
</ul>
<a id="i1006212"></a>
<div id="STREP296" class="sect3">
<h4 class="sect3">Configuring a Local Capture Process Using DBMS_STREAMS_ADM</h4>
<p>To configure a local capture process using the <code dir="ltr">DBMS_STREAMS_ADM</code> package, complete the following steps:</p>
<ol>
<li>
<p>Complete the tasks in <a href="#BEHHDJHB">&#34;Preparing to Configure a Capture Process&#34;</a>.</p>
</li>
<li>
<p>In SQL*Plus, connect to the source database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Run the <code dir="ltr">ADD_TABLE_RULES</code> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to create a local capture process:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name         =&gt; &#39;hr.employees&#39;,
    streams_type       =&gt; &#39;capture&#39;,
    streams_name       =&gt; &#39;strm01_capture&#39;,
    queue_name         =&gt; &#39;strmadmin.streams_queue&#39;,
    include_dml        =&gt; TRUE,
    include_ddl        =&gt; TRUE,
    include_tagged_lcr =&gt; FALSE,
    source_database    =&gt; NULL,
    inclusion_rule     =&gt; TRUE);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a capture process named <code dir="ltr">strm01_capture</code>. The capture process is created only if it does not already exist. If a new capture process is created, then this procedure also sets the start SCN to the point in time of creation.</p>
</li>
<li>
<p>Associates the capture process with the existing queue <code dir="ltr">strmadmin.streams_queue</code>.</p>
</li>
<li>
<p>Creates a positive rule set and associates it with the capture process, if the capture process does not have a positive rule set. The rule set is a positive rule set because the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">TRUE</code>. The rule set uses the <code dir="ltr">SYS.STREAMS$_EVALUATION_CONTEXT</code> evaluation context. The rule set name is system generated.</p>
</li>
<li>
<p>Creates two rules. One rule evaluates to <code dir="ltr">TRUE</code> for data manipulation language (DML) changes to the <code dir="ltr">hr.employees</code> table, and the other rule evaluates to <code dir="ltr">TRUE</code> for data definition language (DDL) changes to the <code dir="ltr">hr.employees</code> table. The rule names are system generated.</p>
</li>
<li>
<p>Adds the two rules to the positive rule set associated with the capture process. The rules are added to the positive rule set because the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p>Specifies that the capture process captures a change in the redo log only if the change has a <code dir="ltr">NULL</code> tag, because the <code dir="ltr">include_tagged_lcr</code> parameter is set to&nbsp;<code dir="ltr">FALSE</code>. This behavior is accomplished through the system-created rules for the capture process.</p>
</li>
<li>
<p>Creates a capture process that captures local changes to the source database because the <code dir="ltr">source_database</code> parameter is set to <code dir="ltr">NULL</code>. For a local capture process, you can also specify the global name of the local database for this parameter.</p>
</li>
<li>
<p>Prepares the <code dir="ltr">hr.employees</code> table for instantiation.</p>
</li>
<li>
<p>Enables supplemental logging for any primary key, unique key, bitmap index, and foreign key columns in the <code dir="ltr">hr.employees</code> table.</p>
</li>
</ul>
</li>
<li>
<p>If necessary, complete the steps described in <a href="#BEHHBAJJ">&#34;After Configuring a Capture Process&#34;</a>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STRMS006" href="../STRMS/strms_rules.htm#STRMS006"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about rules</p>
</li>
<li>
<p><a href="rep_tags.htm#g1014437">Chapter 10, &#34;Oracle Streams Tags&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BEHCAEIJ"></a>
<div id="STREP297" class="sect3">
<h4 class="sect3">Configuring a Local Capture Process Using DBMS_CAPTURE_ADM<a id="sthref263"></a></h4>
<p>To configure a local capture process using the <code dir="ltr">DBMS_CAPTURE_ADM</code> package, complete the following steps:</p>
<ol>
<li>
<p>Complete the tasks in <a href="#BEHHDJHB">&#34;Preparing to Configure a Capture Process&#34;</a>.</p>
</li>
<li>
<p>In SQL*Plus, connect to the source database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Create the rule set that will be used by the capture process if it does not exist. In this example, assume that the rule set is <code dir="ltr">strmadmin.strm01_rule_set</code>. Optionally, you can also add rules to the rule set. See <a class="olink STRMS012" href="../STRMS/strms_mrules.htm#STRMS012"><span class="italic">Oracle Streams Concepts and Administration</span></a> for instructions.</p>
</li>
<li>
<p>Run the <code dir="ltr">CREATE_CAPTURE</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package to create a local capture process:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.CREATE_CAPTURE(
    queue_name         =&gt; &#39;strmadmin.streams_queue&#39;,
    capture_name       =&gt; &#39;strm02_capture&#39;,
    rule_set_name      =&gt; &#39;strmadmin.strm01_rule_set&#39;,
    start_scn          =&gt; NULL,
    source_database    =&gt; NULL,
    first_scn          =&gt; NULL);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a capture process named <code dir="ltr">strm02_capture</code>. A capture process with the same name must not exist.</p>
</li>
<li>
<p>Associates the capture process with the existing queue <code dir="ltr">strmadmin.streams_queue</code>.</p>
</li>
<li>
<p>Associates the capture process with the existing rule set <code dir="ltr">strmadmin.strm01_rule_set</code>. This rule set is the positive rule set for the capture process.</p>
</li>
<li>
<p>Creates a capture process that captures local changes to the source database because the <code dir="ltr">source_database</code> parameter is set to <code dir="ltr">NULL</code>. For a local capture process, you can also specify the global name of the local database for this parameter.</p>
</li>
<li>
<p>Specifies that the Oracle database determines the start SCN and first SCN for the capture process because both the <code dir="ltr">start_scn</code> parameter and the <code dir="ltr">first_scn</code> parameter are set to <code dir="ltr">NULL</code>.</p>
</li>
<li>
<p>If no other capture processes that capture local changes are running on the local database, then the <code dir="ltr">BUILD</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package is run automatically. Running this procedure extracts the data dictionary to the redo log, and a LogMiner data dictionary is created when the capture process is started for the first time.</p>
</li>
</ul>
</li>
<li>
<p>If necessary, complete the steps described in <a href="#BEHHBAJJ">&#34;After Configuring a Capture Process&#34;</a>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS006" href="../STRMS/strms_rules.htm#STRMS006"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about rules</div>
</div>
<!-- class="sect3" -->
<a id="i1008099"></a>
<div id="STREP298" class="sect3">
<h4 class="sect3">Configuring a Local Capture Process with Non-NULL Start SCN</h4>
<p>This example runs the <code dir="ltr">CREATE_CAPTURE</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package to create a local capture process with a start SCN set to <code dir="ltr">223525</code>. This example assumes that there is at least one local capture process at the database, and that this capture process has taken at least one checkpoint. You can always specify a start SCN for a new capture process that is equal to or greater than the current SCN of the source database. To specify a start SCN that is lower than the current SCN of the database, the specified start SCN must be higher than the lowest first SCN for an existing local capture process that has been started successfully at least once and has taken at least one checkpoint.</p>
<p>You can determine the first SCN for existing capture processes, and whether these capture processes have taken a checkpoint, by running the following query:</p>
<pre dir="ltr">SELECT CAPTURE_NAME, FIRST_SCN, MAX_CHECKPOINT_SCN FROM DBA_CAPTURE;  
</pre>
<p>Your output looks similar to the following:</p>
<pre dir="ltr">CAPTURE_NAME                    FIRST_SCN MAX_CHECKPOINT_SCN
------------------------------ ---------- ------------------
CAPTURE_SIMP                       223522             230825
</pre>
<p>These results show that the <code dir="ltr">capture_simp</code> capture process has a first SCN of <code dir="ltr">223522</code>. Also, this capture process has taken a checkpoint because the <code dir="ltr">MAX_CHECKPOINT_SCN</code> value is non-<code dir="ltr">NULL</code>. Therefore, the start SCN for the new capture process can be set to <code dir="ltr">223522</code> or higher.</p>
<p>To configure a local capture process with a non-<code dir="ltr">NULL</code> start SCN, complete the following steps:</p>
<ol>
<li>
<p>Complete the tasks in <a href="#BEHHDJHB">&#34;Preparing to Configure a Capture Process&#34;</a>.</p>
</li>
<li>
<p>In SQL*Plus, connect to the source database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Create the rule set that will be used by the capture process if it does not exist. In this example, assume that the rule set is <code dir="ltr">strmadmin.strm01_rule_set</code>. Optionally, you can also add rules to the rule set. See <a class="olink STRMS012" href="../STRMS/strms_mrules.htm#STRMS012"><span class="italic">Oracle Streams Concepts and Administration</span></a> for instructions.</p>
</li>
<li>
<p>Run the following procedure to create the capture process:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.CREATE_CAPTURE(
    queue_name         =&gt; &#39;strmadmin.streams_queue&#39;,
    capture_name       =&gt; &#39;strm03_capture&#39;,
    rule_set_name      =&gt; &#39;strmadmin.strm01_rule_set&#39;,
    start_scn          =&gt; 223525,
    source_database    =&gt; NULL,
    first_scn          =&gt; NULL);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a capture process named <code dir="ltr">strm03_capture</code>. A capture process with the same name must not exist.</p>
</li>
<li>
<p>Associates the capture process with the existing queue <code dir="ltr">strmadmin.streams_queue</code>.</p>
</li>
<li>
<p>Associates the capture process with the existing rule set <code dir="ltr">strmadmin.strm01_rule_set</code>. This rule set is the positive rule set for the capture process.</p>
</li>
<li>
<p>Specifies <code dir="ltr">223525</code> as the start SCN for the capture process. The new capture process uses the same LogMiner data dictionary as one of the existing capture processes. Oracle Streams automatically chooses which LogMiner data dictionary to share with the new capture process. Because the <code dir="ltr">first_scn</code> parameter was set to <code dir="ltr">NULL</code>, the first SCN for the new capture process is the same as the first SCN of the existing capture process whose LogMiner data dictionary was shared. In this example, the existing capture process is <code dir="ltr">capture_simp</code>.</p>
</li>
<li>
<p>Creates a capture process that captures local changes to the source database because the <code dir="ltr">source_database</code> parameter is set to <code dir="ltr">NULL</code>. For a local capture process, you can also specify the global name of the local database for this parameter.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If no local capture process exists when the procedure in this example is run, then the <code dir="ltr">DBMS_CAPTURE_ADM.BUILD</code> procedure is run automatically during capture process creation to extract the data dictionary into the redo log. The first time the new capture process is started, it uses this redo data to create a LogMiner data dictionary. In this case, a specified <code dir="ltr">start_scn</code> parameter value must be equal to or higher than the current database&nbsp;SCN.</div>
</li>
<li>
<p>If necessary, complete the steps described in <a href="#BEHHBAJJ">&#34;After Configuring a Capture Process&#34;</a>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STRMS211" href="../STRMS/strms_adcapture.htm#STRMS211"><span class="italic">Oracle Streams Concepts and Administration</span></a></p>
</li>
<li>
<p><a class="olink ARPLS311" href="../ARPLS/d_cap_a.htm#ARPLS311"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about setting the <code dir="ltr">first_scn</code> and <code dir="ltr">start_scn</code> parameters in the <code dir="ltr">CREATE_CAPTURE</code> procedure</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEHEJAAB"></a>
<div id="STREP299" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring a Downstream Capture Process</h3>
<p>This section describes configuring a real-time or archived-log downstream capture process.</p>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#BEHFDAGE">Configuring a Real-Time Downstream Capture Process</a></p>
</li>
<li>
<p><a href="#BEHFHAJH">Configuring an Archived-Log Downstream Capture Process</a></p>
</li>
</ul>
<a id="BEHFDAGE"></a>
<div id="STREP207" class="sect3">
<h4 class="sect3">Configuring a Real-Time Downstream Capture Process</h4>
<p>To create a capture process that performs downstream capture, you must use the <code dir="ltr">CREATE_CAPTURE</code> procedure. The example in this section describes creating a real-time downstream capture process that uses a database link to the source database. However, a real-time downstream capture process might not use a database link.</p>
<p>This example assumes the following:</p>
<ul>
<li>
<p>The source database is <code dir="ltr">dbs1.example.com</code> and the downstream database is <code dir="ltr">dbs2.example.com</code>.</p>
</li>
<li>
<p>The capture process that will be created at <code dir="ltr">dbs2.example.com</code> uses the <code dir="ltr">strmadmin.streams_queue</code>.</p>
</li>
<li>
<p>The capture process will capture DML changes to the <code dir="ltr">hr.departments</code> table.</p>
</li>
</ul>
<p>This section contains an example that runs the <code dir="ltr">CREATE_CAPTURE</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package to create a real-time downstream capture process at the <code dir="ltr">dbs2.example.com</code> downstream database that captures changes made to the <code dir="ltr">dbs1.example.com</code> source database. The capture process in this example uses a database link to <code dir="ltr">dbs1.example.com</code> for administrative purposes. The name of the database link must match the global name of the source database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can configure multiple real-time downstream capture processes that captures changes from the same source database, but you cannot configure real-time downstream capture for multiple source databases at one downstream database.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS129" href="../STRMS/strms_capture.htm#STRMS129"><span class="italic">Oracle Streams Concepts and Administration</span></a> for conceptual information about real-time downstream capture</div>
<p>Complete the following steps:</p>
<ol>
<li>
<p>Complete the tasks in <a href="#BEHHDJHB">&#34;Preparing to Configure a Capture Process&#34;</a>. Ensure that you complete the tasks <a href="prep_rep.htm#i1014093">&#34;Configuring Log File Transfer to a Downstream Capture Database&#34;</a> and <a href="prep_rep.htm#BEHEGACH">&#34;Adding Standby Redo Logs for Real-Time Downstream Capture&#34;</a>.</p>
</li>
<li>
<p>In SQL*Plus, connect to the downstream database <code dir="ltr">dbs2.example.com</code> as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li id="BEHDFBDF">
<p>Create the database link from <code dir="ltr">dbs2.example.com</code> to <code dir="ltr">dbs1.example.com</code>. For example, if the user <code dir="ltr">strmadmin</code> is the Oracle Streams administrator on both databases, then create the following database link:</p>
<pre dir="ltr">CREATE DATABASE LINK dbs1.example.com CONNECT TO strmadmin 
   IDENTIFIED BY <span class="italic">password</span>
   USING &#39;dbs1.example.com&#39;;
</pre>
<p><a id="sthref264"></a>This example assumes that an Oracle Streams administrator exists at the source database <code dir="ltr">dbs1.example.com</code>. If no Oracle Streams administrator exists at the source database, then the Oracle Streams administrator at the downstream database should connect to a user who allows remote access by an Oracle Streams administrator. You can enable remote access for a user by specifying the user as the grantee when you run the <code dir="ltr">GRANT_REMOTE_ADMIN_ACCESS</code> procedure in the <code dir="ltr">DBMS_STREAMS_AUTH</code> package at the source database.</p>
</li>
<li>
<p>Run the <code dir="ltr">CREATE_CAPTURE</code> procedure to create the capture process:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.CREATE_CAPTURE(
    queue_name         =&gt; &#39;strmadmin.streams_queue&#39;,
    capture_name       =&gt; &#39;real_time_capture&#39;,
    rule_set_name      =&gt; NULL,
    start_scn          =&gt; NULL,
    source_database    =&gt; &#39;dbs1.example.com&#39;,
    use_database_link  =&gt; TRUE,
    first_scn          =&gt; NULL,
    logfile_assignment =&gt; &#39;implicit&#39;);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a capture process named <code dir="ltr">real_time_capture</code> at the downstream database <code dir="ltr">dbs2.example.com</code>. A capture process with the same name must not exist.</p>
</li>
<li>
<p>Associates the capture process with an existing queue on <code dir="ltr">dbs2.example.com</code> named <code dir="ltr">streams_queue</code> and owned by <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>Specifies that the source database of the changes that the capture process will capture is <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>Specifies that the capture process uses a database link with the same name as the source database global name to perform administrative actions at the source database.</p>
</li>
<li>
<p>Specifies that the capture process accepts redo data implicitly from <code dir="ltr">dbs1.example.com</code>. Therefore, the capture process scans the standby redo log at <code dir="ltr">dbs2.example.com</code> for changes that it must capture. If the capture process falls behind, then it scans the archived redo log files written from the standby redo log.</p>
</li>
</ul>
<p>This step does not associate the capture process <code dir="ltr">real_time_capture</code> with any rule set. A rule set will be created and associated with the capture process in a later step.</p>
<p>If no other capture process at <code dir="ltr">dbs2.example.com</code> is capturing changes from the <code dir="ltr">dbs1.example.com</code> source database, then the <code dir="ltr">DBMS_CAPTURE_ADM.BUILD</code> procedure is run automatically at <code dir="ltr">dbs1.example.com</code> using the database link. Running this procedure extracts the data dictionary at <code dir="ltr">dbs1.example.com</code> to the redo log, and a LogMiner data dictionary for <code dir="ltr">dbs1.example.com</code> is created at <code dir="ltr">dbs2.example.com</code> when the capture process <code dir="ltr">real_time_capture</code> is started for the first time at <code dir="ltr">dbs2.example.com</code>.</p>
<p>If multiple capture processes at <code dir="ltr">dbs2.example.com</code> are capturing changes from the <code dir="ltr">dbs1.example.com</code> source database, then the new capture process <code dir="ltr">real_time_capture</code> uses the same LogMiner data dictionary for <code dir="ltr">dbs1.example.com</code> as one of the existing archived-log capture process. Oracle Streams automatically chooses which LogMiner data dictionary to share with the new capture process.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
During the creation of a downstream capture process, if the <code dir="ltr">first_scn</code> parameter is set to <code dir="ltr">NULL</code> in the <code dir="ltr">CREATE_CAPTURE</code> procedure, then the <code dir="ltr">use_database_link</code> parameter must be set to <code dir="ltr">TRUE</code>. Otherwise, an error is raised.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS123" href="../STRMS/strms_capture.htm#STRMS123"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about SCN values related to a capture process</div>
</li>
<li>
<p>Set the <code dir="ltr">downstream_real_time_mine</code> capture process parameter to <code dir="ltr">Y</code>:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.SET_PARAMETER(
    capture_name =&gt; &#39;real_time_capture&#39;,
    parameter    =&gt; &#39;downstream_real_time_mine&#39;,
    value        =&gt; &#39;Y&#39;);
END;
/
</pre></li>
<li>
<p>Create the positive rule set for the capture process and add a rule to it:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name          =&gt;  &#39;hr.departments&#39;,
    streams_type        =&gt;  &#39;capture&#39;,
    streams_name        =&gt;  &#39;real_time_capture&#39;,
    queue_name          =&gt;  &#39;strmadmin.streams_queue&#39;,
    include_dml         =&gt;  TRUE,
    include_ddl         =&gt;  FALSE,
    include_tagged_lcr  =&gt;  FALSE,
    source_database     =&gt;  &#39;dbs1.example.com&#39;,
    inclusion_rule      =&gt;  TRUE);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a rule set at <code dir="ltr">dbs2.example.com</code> for capture process <code dir="ltr">real_time_capture</code>. The rule set has a system-generated name. The rule set is the positive rule set for the capture process because the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p>Creates a rule that captures data manipulation language (DML) changes to the <code dir="ltr">hr.departments</code> table, and adds the rule to the positive rule set for the capture process. The rule has a system-generated name. The rule is added to the positive rule set for the capture process because the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p>Prepares the <code dir="ltr">hr.departments</code> table at <code dir="ltr">dbs1.example.com</code> for instantiation using the database link created in Step <a href="#BEHDFBDF">3</a>.</p>
</li>
<li>
<p>Enables supplemental logging for any primary key, unique key, bitmap index, and foreign key columns in the table at <code dir="ltr">dbs1.example.com</code>.</p>
</li>
</ul>
</li>
<li>
<p>Connect to the source database <code dir="ltr">dbs1.example.com</code> as an administrative user with the necessary privileges to switch log files.</p>
</li>
<li>
<p>Archive the current log file at the source database:</p>
<pre dir="ltr">ALTER SYSTEM ARCHIVE LOG CURRENT;
</pre>
<p>Archiving the current log file at the source database starts real time mining of the source database redo log.</p>
<p>If the capture process appears to be waiting for redo data for an inordinately long time, then check the alert log for errors. See <a class="olink STRMS1036" href="../STRMS/strms_trcapture.htm#STRMS1036"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information.</p>
</li>
<li>
<p>If necessary, complete the steps described in <a href="#BEHHBAJJ">&#34;After Configuring a Capture Process&#34;</a>.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BEHFHAJH"></a>
<div id="STREP300" class="sect3">
<h4 class="sect3">Configuring an Archived-Log Downstream Capture Process</h4>
<p>This section describes configuring an archived-log downstream capture process that either assigns log files implicitly or explicitly.</p>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#BEHFEJFD">Configuring an Archived-Log Downstream Capture Process that Assigns Logs Implicitly</a></p>
</li>
<li>
<p><a href="#i1011654">Configuring an Archived-Log Downstream Capture Process that Assigns Logs Explicitly</a></p>
</li>
</ul>
<a id="BEHFEJFD"></a>
<div id="STREP301" class="sect4">
<h5 class="sect4">Configuring an Archived-Log Downstream Capture Process that Assigns Logs Implicitly</h5>
<p>To create a capture process that performs downstream capture, you must use the <code dir="ltr">CREATE_CAPTURE</code> procedure. The example in this section describes creating an archived-log downstream capture process that uses a database link to the source database for administrative purposes. The name of the database link must match the global name of the source database.</p>
<p>This example assumes the following:</p>
<ul>
<li>
<p>The source database is <code dir="ltr">dbs1.example.com</code> and the downstream database is <code dir="ltr">dbs2.example.com</code>.</p>
</li>
<li>
<p>The capture process that will be created at <code dir="ltr">dbs2.example.com</code> uses the <code dir="ltr">streams_queue</code> owned by <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>The capture process will capture data manipulation language (DML) changes made to the <code dir="ltr">hr.departments</code> table at <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>The capture process assigns log files implicitly. That is, the downstream capture process automatically scans all redo log files added by redo transport services or added manually from the source database to the downstream database.</p>
</li>
</ul>
<p>Complete the following steps:</p>
<ol>
<li>
<p>Complete the tasks in <a href="#BEHHDJHB">&#34;Preparing to Configure a Capture Process&#34;</a>. Ensure that you complete the task <a href="prep_rep.htm#i1014093">&#34;Configuring Log File Transfer to a Downstream Capture Database&#34;</a>.</p>
</li>
<li>
<p>In SQL*Plus, connect to the downstream database <code dir="ltr">dbs2.example.com</code> as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Create the database link from <code dir="ltr">dbs2.example.com</code> to <code dir="ltr">dbs1.example.com</code>. For example, if the user <code dir="ltr">strmadmin</code> is the Oracle Streams administrator on both databases, then create the following database link:</p>
<pre dir="ltr">CREATE DATABASE LINK dbs1.example.com CONNECT TO strmadmin
   IDENTIFIED BY <span class="italic">password</span>
   USING &#39;dbs1.example.com&#39;;
</pre>
<p><a id="sthref265"></a>This example assumes that an Oracle Streams administrator exists at the source database <code dir="ltr">dbs1.example.com</code>. If no Oracle Streams administrator exists at the source database, then the Oracle Streams administrator at the downstream database should connect to a user who allows remote access by an Oracle Streams administrator. You can enable remote access for a user by specifying the user as the grantee when you run the <code dir="ltr">GRANT_REMOTE_ADMIN_ACCESS</code> procedure in the <code dir="ltr">DBMS_STREAMS_AUTH</code> package at the source database.</p>
</li>
<li>
<p>Run the <code dir="ltr">CREATE_CAPTURE</code> procedure to create the capture process:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.CREATE_CAPTURE(
    queue_name         =&gt; &#39;strmadmin.streams_queue&#39;,
    capture_name       =&gt; &#39;strm04_capture&#39;,
    rule_set_name      =&gt; NULL,
    start_scn          =&gt; NULL,
    source_database    =&gt; &#39;dbs1.example.com&#39;,
    use_database_link  =&gt; TRUE,
    first_scn          =&gt; NULL,
    logfile_assignment =&gt; &#39;implicit&#39;);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a capture process named <code dir="ltr">strm04_capture</code> at the downstream database <code dir="ltr">dbs2.example.com</code>. A capture process with the same name must not exist.</p>
</li>
<li>
<p>Associates the capture process with an existing queue on <code dir="ltr">dbs2.example.com</code> named <code dir="ltr">streams_queue</code> and owned by <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>Specifies that the source database of the changes that the capture process will capture is <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>Specifies that the capture process accepts new redo log files implicitly from <code dir="ltr">dbs1.example.com</code>. Therefore, the capture process scans any new log files copied from <code dir="ltr">dbs1.example.com</code> to <code dir="ltr">dbs2.example.com</code> for changes that it must capture.</p>
</li>
</ul>
<p>This step does not associate the capture process <code dir="ltr">strm04_capture</code> with any rule set. A rule set will be created and associated with the capture process in the next step.</p>
<p>If no other capture process at <code dir="ltr">dbs2.example.com</code> is capturing changes from the <code dir="ltr">dbs1.example.com</code> source database, then the <code dir="ltr">DBMS_CAPTURE_ADM.BUILD</code> procedure is run automatically at <code dir="ltr">dbs1.example.com</code> using the database link. Running this procedure extracts the data dictionary at <code dir="ltr">dbs1.example.com</code> to the redo log, and a LogMiner data dictionary for <code dir="ltr">dbs1.example.com</code> is created at <code dir="ltr">dbs2.example.com</code> when the capture process is started for the first time at <code dir="ltr">dbs2.example.com</code>.</p>
<p>If multiple capture processes at <code dir="ltr">dbs2.example.com</code> are capturing changes from the <code dir="ltr">dbs1.example.com</code> source database, then the new capture process uses the same LogMiner data dictionary for <code dir="ltr">dbs1.example.com</code> as one of the existing capture process. Oracle Streams automatically chooses which LogMiner data dictionary to share with the new capture process.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
During the creation of a downstream capture process, if the <code dir="ltr">first_scn</code> parameter is set to <code dir="ltr">NULL</code> in the <code dir="ltr">CREATE_CAPTURE</code> procedure, then the <code dir="ltr">use_database_link</code> parameter must be set to <code dir="ltr">TRUE</code>. Otherwise, an error is raised.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STRMS211" href="../STRMS/strms_adcapture.htm#STRMS211"><span class="italic">Oracle Streams Concepts and Administration</span></a></p>
</li>
<li>
<p><a class="olink SQLRF00802" href="../SQLRF/statements_1006.htm#SQLRF00802"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the <code dir="ltr">ALTER</code> <code dir="ltr">DATABASE</code> statement</p>
</li>
<li>
<p><a class="olink SBYDB" href="../SBYDB/toc.htm"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> for more information registering redo log files</p>
</li>
</ul>
</div>
</li>
<li>
<p>Create the positive rule set for the capture process and add a rule to it:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name          =&gt;  &#39;hr.departments&#39;,
    streams_type        =&gt;  &#39;capture&#39;,
    streams_name        =&gt;  &#39;strm04_capture&#39;,
    queue_name          =&gt;  &#39;strmadmin.streams_queue&#39;,
    include_dml         =&gt;  TRUE,
    include_ddl         =&gt;  FALSE,
    include_tagged_lcr  =&gt;  FALSE,
    source_database     =&gt;  &#39;dbs1.example.com&#39;,
    inclusion_rule      =&gt;  TRUE);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a rule set at <code dir="ltr">dbs2.example.com</code> for capture process <code dir="ltr">strm04_capture</code>. The rule set has a system-generated name. The rule set is a positive rule set for the capture process because the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p>Creates a rule that captures DML changes to the <code dir="ltr">hr.departments</code> table, and adds the rule to the rule set for the capture process. The rule has a system-generated name. The rule is added to the positive rule set for the capture process because the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
</ul>
</li>
<li>
<p>If necessary, complete the steps described in <a href="#BEHHBAJJ">&#34;After Configuring a Capture Process&#34;</a>.</p>
</li>
</ol>
</div>
<!-- class="sect4" -->
<a id="i1011654"></a>
<div id="STREP302" class="sect4">
<h5 class="sect4">Configuring an Archived-Log Downstream Capture Process that Assigns Logs Explicitly</h5>
<p>To create a capture process that performs downstream capture, you must use the <code dir="ltr">CREATE_CAPTURE</code> procedure. This section describes creating an archived-log downstream capture process that assigns redo log files explicitly. That is, you must use the <code dir="ltr">DBMS_FILE_TRANSFER</code> package, FTP, or some other method to transfer redo log files from the source database to the downstream database, and then you must register these redo log files with the downstream capture process manually.</p>
<p>In this example, assume the following:</p>
<ul>
<li>
<p>The source database is <code dir="ltr">dbs1.example.com</code> and the downstream database is <code dir="ltr">dbs2.example.com</code>.</p>
</li>
<li>
<p>The capture process that will be created at <code dir="ltr">dbs2.example.com</code> uses the <code dir="ltr">streams_queue</code> owned by <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>The capture process will capture data manipulation language (DML) changes made to the <code dir="ltr">hr.departments</code> table at <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>The capture process does not use a database link to the source database for administrative actions.</p>
</li>
</ul>
<p>Complete the following steps:</p>
<ol>
<li>
<p>Complete the tasks in <a href="#BEHHDJHB">&#34;Preparing to Configure a Capture Process&#34;</a>. Because in this example you are transferring and registering archived redo log files explicitly at the downstream database, you do not need to complete the task <a href="prep_rep.htm#i1014093">&#34;Configuring Log File Transfer to a Downstream Capture Database&#34;</a>.</p>
</li>
<li id="BEHJFCHE">
<p>In SQL*Plus, connect to the source database <code dir="ltr">dbs1.example.com</code> as the Oracle Streams administrator.</p>
<p>If you do not use a database link from the downstream database to the source database, then an Oracle Streams administrator must exist at the source database.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li id="i1012036">
<p>If there is no capture process at <code dir="ltr">dbs2.example.com</code> that captures changes from <code dir="ltr">dbs1.example.com</code>, then perform a build of the <code dir="ltr">dbs1.example.com</code> data dictionary in the redo log. This step is optional if a capture process at <code dir="ltr">dbs2.example.com</code> is already configured to capture changes from the <code dir="ltr">dbs1.example.com</code> source database.</p>
<pre dir="ltr">SET SERVEROUTPUT ON
DECLARE
  scn  NUMBER;
BEGIN
  DBMS_CAPTURE_ADM.BUILD(
    first_scn =&gt; scn);
  DBMS_OUTPUT.PUT_LINE(&#39;First SCN Value = &#39; || scn);
END;
/
First SCN Value = 409391
</pre>
<p>This procedure displays the valid first SCN value for the capture process that will be created at <code dir="ltr">dbs2.example.com</code>. Make a note of the SCN value returned because you will use it when you create the capture process at <code dir="ltr">dbs2.example.com</code>.</p>
<p>If you run this procedure to build the data dictionary in the redo log, then when the capture process is first started at <code dir="ltr">dbs2.example.com</code>, it will create a LogMiner data dictionary using the data dictionary information in the redo log.</p>
</li>
<li>
<p>Prepare the <code dir="ltr">hr.departments</code> table for instantiation:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.PREPARE_TABLE_INSTANTIATION(
     table_name           =&gt;  &#39;hr.departments&#39;,
     supplemental_logging =&gt;  &#39;keys&#39;);
END;
/
</pre>
<p>Primary key supplemental logging is required for the <code dir="ltr">hr.departments</code> table because this example creates a capture processes that captures changes to this table. Specifying <code dir="ltr">keys</code> for the <code dir="ltr">supplemental_logging</code> parameter in the <code dir="ltr">PREPARE_TABLE_INSTANTIATION</code> procedure enables supplemental logging for any primary key, unique key, bitmap index, and foreign key columns in the table.</p>
</li>
<li id="BEHIFFJD">
<p>Determine the current SCN of the source database:</p>
<pre dir="ltr">SET SERVEROUTPUT ON SIZE 1000000

DECLARE
  iscn  NUMBER;         -- Variable to hold instantiation SCN value
BEGIN
  iscn := DBMS_FLASHBACK.GET_SYSTEM_CHANGE_NUMBER();
  DBMS_OUTPUT.PUT_LINE(&#39;Current SCN: &#39; || iscn);
END;
/
</pre>
<p>You can use the returned SCN as the instantiation SCN for destination databases that will apply changes to the <code dir="ltr">hr.departments</code> table that were captured by the capture process being created. In this example, assume the returned SCN is <code dir="ltr">1001656</code>.</p>
</li>
<li>
<p>Connect to the downstream database <code dir="ltr">dbs2.example.com</code> as the Oracle Streams administrator.</p>
</li>
<li>
<p>Run the <code dir="ltr">CREATE_CAPTURE</code> procedure to create the capture process and specify the value obtained in Step <a href="#i1012036">3</a> for the <code dir="ltr">first_scn</code> parameter:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.CREATE_CAPTURE(
    queue_name         =&gt; &#39;strmadmin.streams_queue&#39;,
    capture_name       =&gt; &#39;strm05_capture&#39;,
    rule_set_name      =&gt; NULL,
    start_scn          =&gt; NULL,
    source_database    =&gt; &#39;dbs1.example.com&#39;,
    use_database_link  =&gt; FALSE,
    first_scn          =&gt; 409391, -- Use value from Step <a href="#i1012036">3</a>
    logfile_assignment =&gt; &#39;explicit&#39;);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a capture process named <code dir="ltr">strm05_capture</code> at the downstream database <code dir="ltr">dbs2.example.com</code>. A capture process with the same name must not exist.</p>
</li>
<li>
<p>Associates the capture process with an existing queue on <code dir="ltr">dbs2.example.com</code> named <code dir="ltr">streams_queue</code> and owned by <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>Specifies that the source database of the changes that the capture process will capture is <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>Specifies that the first SCN for the capture process is <code dir="ltr">409391</code>. This value was obtained in Step <a href="#i1012036">3</a>. The first SCN is the lowest SCN for which a capture process can capture changes. Because a first SCN is specified, the capture process creates a new LogMiner data dictionary when it is first started, regardless of whether there are existing LogMiner data dictionaries for the same source database.</p>
</li>
<li>
<p>Specifies that new redo log files from <code dir="ltr">dbs1.example.com</code> must be assigned to the capture process explicitly. After a redo log file has been transferred to the computer running the downstream database, you assign the log file to the capture process explicitly using the following statement:</p>
<pre dir="ltr">ALTER DATABASE REGISTER LOGICAL LOGFILE <span class="italic">file_name</span> FOR <span class="italic">capture_process</span>;
</pre>
<p>Here, <code dir="ltr"><span class="codeinlineitalic">file_name</span></code> is the name of the redo log file and <code dir="ltr"><span class="codeinlineitalic">capture_process</span></code> is the name of the capture process that will use the redo log file at the downstream database. You must add redo log files manually if the <code dir="ltr">logfile_assignment</code> parameter is set to <code dir="ltr">explicit</code>.</p>
</li>
</ul>
<p>This step does not associate the capture process <code dir="ltr">strm05_capture</code> with any rule set. A rule set will be created and associated with the capture process in the next step.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STRMS123" href="../STRMS/strms_capture.htm#STRMS123"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information about SCN values related to a capture process</p>
</li>
<li>
<p><a class="olink SQLRF00802" href="../SQLRF/statements_1006.htm#SQLRF00802"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the <code dir="ltr">ALTER</code> <code dir="ltr">DATABASE</code> statement</p>
</li>
<li>
<p><a class="olink SBYDB" href="../SBYDB/toc.htm"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> for more information registering redo log files</p>
</li>
</ul>
</div>
</li>
<li>
<p>Create the positive rule set for the capture process and add a rule to it:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name          =&gt;  &#39;hr.departments&#39;,
    streams_type        =&gt;  &#39;capture&#39;,
    streams_name        =&gt;  &#39;strm05_capture&#39;,
    queue_name          =&gt;  &#39;strmadmin.streams_queue&#39;,
    include_dml         =&gt;  TRUE,
    include_ddl         =&gt;  FALSE,
    include_tagged_lcr  =&gt;  FALSE,
    source_database     =&gt;  &#39;dbs1.example.com&#39;,
    inclusion_rule      =&gt;  TRUE);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a rule set at <code dir="ltr">dbs2.example.com</code> for capture process <code dir="ltr">strm05_capture</code>. The rule set has a system-generated name. The rule set is a positive rule set for the capture process because the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p>Creates a rule that captures DML changes to the <code dir="ltr">hr.departments</code> table, and adds the rule to the rule set for the capture process. The rule has a system-generated name. The rule is added to the positive rule set for the capture process because the <code dir="ltr">inclusion_rule</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
</ul>
</li>
<li>
<p>After the redo log file at the source database <code dir="ltr">dbs1.example.com</code> that contains the first SCN for the downstream capture process is archived, transfer the archived redo log file to the computer running the downstream database. The <code dir="ltr">BUILD</code> procedure in Step <a href="#i1012036">3</a> determined the first SCN for the downstream capture process. If the redo log file is not yet archived, then you can run the <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> <code dir="ltr">SWITCH</code> <code dir="ltr">LOGFILE</code> statement on the database to archive it.</p>
<p>You can run the following query at <code dir="ltr">dbs1.example.com</code> to identify the archived redo log file that contains the first SCN for the downstream capture process:</p>
<pre dir="ltr">COLUMN NAME HEADING &#39;Archived Redo Log|File Name&#39; FORMAT A50
COLUMN FIRST_CHANGE# HEADING &#39;First SCN&#39; FORMAT 999999999

SELECT NAME, FIRST_CHANGE# FROM V$ARCHIVED_LOG
  WHERE FIRST_CHANGE# IS NOT NULL AND DICTIONARY_BEGIN = &#39;YES&#39;;
</pre>
<pre dir="ltr"></pre>
<p>Transfer the archived redo log file with a <code dir="ltr">FIRST_CHANGE#</code> that matches the first SCN returned in Step <a href="#i1012036">3</a> to the computer running the downstream capture process.</p>
</li>
<li>
<p>Connect to the downstream database <code dir="ltr">dbs2.example.com</code> as an administrative user.</p>
</li>
<li>
<p>Assign the transferred redo log file to the capture process. For example, if the redo log file is <code dir="ltr">/oracle/logs_from_dbs1/1_10_486574859.dbf</code>, then issue the following statement:</p>
<pre dir="ltr">ALTER DATABASE REGISTER LOGICAL LOGFILE 
   &#39;/oracle/logs_from_dbs1/1_10_486574859.dbf&#39; FOR &#39;strm05_capture&#39;;
</pre></li>
<li>
<p>If necessary, complete the steps described in <a href="#BEHHBAJJ">&#34;After Configuring a Capture Process&#34;</a>.</p>
</li>
</ol>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEHHBAJJ"></a>
<div id="STREP303" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">After Configuring a Capture Process</h3>
<p>If you plan to configure propagations and apply processes that process logical change records (LCRs) captured by the new capture process, then perform the configuration in the following order:</p>
<ol>
<li>
<p>Create all of the queues that will be required propagations and apply processes in the replication environment. See <a href="cprop.htm#i1006170">&#34;Creating an ANYDATA Queue&#34;</a>.</p>
</li>
<li>
<p>Create all of the propagations that will propagate LCRs captured by the new capture process. See <a href="cprop.htm#BABIDDBA">&#34;Creating Oracle Streams Propagations Between ANYDATA Queues&#34;</a>.</p>
</li>
<li>
<p>Create all of the apply processes that will dequeue and process LCRs captured by the new capture process. See <a href="capply.htm#CHDCACFH">Chapter 7, &#34;Configuring Implicit Apply&#34;</a>. Configure each apply process to apply captured LCRs.</p>
</li>
<li id="BEHFAEAD">
<p>Instantiate the tables for which the new capture process captures changes at all destination databases. See <a href="instant.htm#g1012655">Chapter 8, &#34;Instantiation and Oracle Streams Replication&#34;</a> for detailed information about instantiation.</p>
</li>
<li>
<p>Use the <code dir="ltr">START_APPLY</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package to start the apply processes that will process LCRs captured by the new capture process.</p>
</li>
<li>
<p>Use the <code dir="ltr">START_CAPTURE</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package to start the new capture process.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
Other configuration steps might be required for your Oracle Streams environment. For example, some Oracle Streams environments include transformations, apply handlers, and conflict resolution.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEHCGJFF"></a>
<div id="STREP208" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Configuring Synchronous Capture<a id="sthref266"></a></h2>
<p>You can use any of the following procedures to create a synchronous capture:</p>
<ul>
<li>
<p><a class="olink ARPLS308" href="../ARPLS/d_streams_adm.htm#ARPLS308"><code dir="ltr">DBMS_STREAMS_ADM.ADD_TABLE_RULES</code></a></p>
</li>
<li>
<p><a class="olink ARPLS329" href="../ARPLS/d_streams_adm.htm#ARPLS329"><code dir="ltr">DBMS_STREAMS_ADM.ADD_SUBSET_RULES</code></a></p>
</li>
<li>
<p><a class="olink ARPLS302" href="../ARPLS/d_cap_a.htm#ARPLS302"><code dir="ltr">DBMS_CAPTURE_ADM.CREATE_SYNC_CAPTURE</code></a></p>
</li>
</ul>
<p>Both of the procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package create a synchronous capture with the specified name if it does not already exist, create a positive rule set for the synchronous capture if it does not exist, and can add table rules or subset rules to the rule set.</p>
<p>The <code dir="ltr">CREATE_SYNC_CAPTURE</code> procedure creates a synchronous capture, but does not create a rule set or rules for the synchronous capture. However, the <code dir="ltr">CREATE_SYNC_CAPTURE</code> procedure enables you to specify an existing rule set to associate with the synchronous capture, and it enables you to specify a capture user other than the default capture user.</p>
<p>The following sections describe configuring a synchronous capture:</p>
<ul>
<li>
<p><a href="#BEHEIDCJ">Preparing to Configure a Synchronous Capture</a></p>
</li>
<li>
<p><a href="#BEHDDFGD">Configuring a Synchronous Capture Using the DBMS_STREAMS_ADM Package</a></p>
</li>
<li>
<p><a href="#BEHBCIFG">Configuring a Synchronous Capture Using the DBMS_CAPTURE_ADM Package</a></p>
</li>
<li>
<p><a href="#BEHBDCBA">After Configuring a Synchronous Capture</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STRMS168" href="../STRMS/strms_capture.htm#STRMS168"><span class="italic">Oracle Streams Concepts and Administration</span></a></p>
</li>
<li>
<p><a href="config_simple.htm#CACCGDDC">&#34;Example That Configures Two-Database Replication with Synchronous Captures&#34;</a></p>
</li>
</ul>
</div>
<a id="BEHEIDCJ"></a>
<div id="STREP304" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Preparing to Configure a Synchronous Capture<a id="sthref267"></a></h3>
<p>The following tasks must be completed before you configure a synchronous capture:</p>
<ul>
<li>
<p>Complete the following tasks in <a href="prep_rep.htm#CACGBCIB">&#34;Tasks to Complete Before Configuring Oracle Streams Replication&#34;</a>.</p>
<ul>
<li>
<p><a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a></p>
</li>
<li>
<p><a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a></p>
</li>
<li>
<p><a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a></p>
</li>
<li>
<p><a href="prep_rep.htm#BABBFJEB">&#34;Configuring the Oracle Streams Pool&#34;</a></p>
</li>
</ul>
</li>
<li>
<p>Create <code dir="ltr">ANYDATA</code> queues to associate with the synchronous capture, if they do not exist. See <a href="cprop.htm#i1006170">&#34;Creating an ANYDATA Queue&#34;</a> for instructions. The queue must be a commit-time queue. The examples in this chapter assume that the queue used by synchronous capture is <code dir="ltr">strmadmin.streams_queue</code>. Create the queue in the same database that will run the synchronous capture.</p>
</li>
<li>
<p>Create <code dir="ltr">ANYDATA</code> queues to associate with the propagations that will propagate logical change records (LCRs) captured by the synchronous capture and apply processes that will dequeue and process LCRs captured by the synchronous capture, if they do not exist. See <a href="cprop.htm#i1006170">&#34;Creating an ANYDATA Queue&#34;</a> for instructions.</p>
</li>
<li>
<p>Create all of the propagations that will propagate LCRs captured by the new synchronous capture. See <a href="cprop.htm#BABIDDBA">&#34;Creating Oracle Streams Propagations Between ANYDATA Queues&#34;</a>.</p>
</li>
<li>
<p>Create all of the apply processes that will dequeue and process LCRs captured by the new synchronous capture. See <a href="capply.htm#CHDCEDIG">&#34;Creating an Apply Process for Persistent LCRs with DBMS_APPLY_ADM&#34;</a>. Configure each apply process to apply persistent LCRs by setting the <code dir="ltr">apply_captured</code> parameter to <code dir="ltr">FALSE</code> in the <code dir="ltr">DBMS_APPLY_ADM.CREATE_APPLY</code> procedure. Do not start the apply process until after the instantiation performed in <a href="#BEHBDCBA">&#34;After Configuring a Synchronous Capture&#34;</a> is complete.</p>
</li>
<li>
<p>Ensure that the Oracle Streams administrator is granted <code dir="ltr">DBA</code> role. The Oracle Streams administrator must be granted <code dir="ltr">DBA</code> role to create a synchronous capture.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BEHDDFGD"></a>
<div id="STREP305" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring a Synchronous Capture Using the DBMS_STREAMS_ADM Package</h3>
<p>When you run the <code dir="ltr">ADD_TABLE_RULES</code> or <code dir="ltr">ADD_SUBSET_RULES</code> procedure to create a synchronous capture, set the <code dir="ltr">streams_type</code> parameter in these procedures to <code dir="ltr">sync_capture</code>. A rule created by the <code dir="ltr">ADD_TABLE_RULES</code> procedure instructs the synchronous capture to capture all data manipulation language (DML) changes to the table. A rule created by the <code dir="ltr">ADD_SUBSET_RULES</code> procedure instructs the synchronous capture to capture a subset of the DML changes to the table.</p>
<p>This example assumes the following:</p>
<ul>
<li>
<p>The source database is <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>The synchronous capture that will be created uses the <code dir="ltr">strmadmin.streams_queue</code> queue.</p>
</li>
<li>
<p>The synchronous capture that will be created captures the results of DML changes made to the <code dir="ltr">hr.departments</code> table.</p>
</li>
<li>
<p>The capture user for the synchronous capture that will be created is the Oracle Streams administrator <code dir="ltr">strmadmin</code>.</p>
</li>
</ul>
<p>Complete the following steps to create a synchronous capture using the <code dir="ltr">DBMS_STREAMS_ADM</code> package:</p>
<ol>
<li>
<p>Complete the tasks in <a href="#BEHEIDCJ">&#34;Preparing to Configure a Synchronous Capture&#34;</a>.</p>
</li>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">dbs1.example.com</code> database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Run the <code dir="ltr">ADD_TABLE_RULES</code> or <code dir="ltr">ADD_SUBSET_RULES</code> procedure to create a synchronous capture. For example:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name   =&gt; &#39;hr.departments&#39;,
    streams_type =&gt; &#39;sync_capture&#39;,
    streams_name =&gt; &#39;sync_capture&#39;,
    queue_name   =&gt; &#39;strmadmin.streams_queue&#39;);
END;
/
</pre>
<p>This procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a synchronous capture named <code dir="ltr">sync_capture</code> at the source database.</p>
</li>
<li>
<p>Enables the synchronous capture. A synchronous capture cannot be disabled.</p>
</li>
<li>
<p>Associates the synchronous capture with the existing <code dir="ltr">strmadmin.streams_queue</code> queue.</p>
</li>
<li>
<p>Creates a positive rule set for the synchronous capture. The rule set has a system-generated name.</p>
</li>
<li>
<p>Creates a rule that captures DML changes to the <code dir="ltr">hr.departments</code> table, and adds the rule to the positive rule set for the synchronous capture. The rule has a system-generated name.</p>
</li>
<li>
<p>Configures the user who runs the procedure as the capture user for the synchronous capture. In this case, this user is <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>Prepares the specified table for instantiation by running the <code dir="ltr">DBMS_CAPTURE_ADM.PREPARE_SYNC_INSTANTIATION</code> function for the table automatically.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
When the <code dir="ltr">ADD_TABLE_RULES</code> or the <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds rules to a synchronous capture rule set, the procedure must obtain an exclusive lock on the specified table. If there are outstanding transactions on the specified table, then the procedure waits until it can obtain a lock.</div>
</li>
<li>
<p>If necessary, complete the steps described in <a href="#BEHBDCBA">&#34;After Configuring a Synchronous Capture&#34;</a>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BEHBCIFG"></a>
<div id="STREP306" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring a Synchronous Capture Using the DBMS_CAPTURE_ADM Package<a id="sthref268"></a></h3>
<p>This section contains an example that runs procedures in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package and <code dir="ltr">DBMS_STREAMS_ADM</code> package to configure a synchronous capture.</p>
<p>This example assumes the following:</p>
<ul>
<li>
<p>The source database is <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>The synchronous capture that will be created uses the <code dir="ltr">strmadmin.streams_queue</code> queue.</p>
</li>
<li>
<p>The synchronous capture that will be created uses an existing rule set named <code dir="ltr">sync01_rule_set</code> in the <code dir="ltr">strmadmin</code> schema.</p>
</li>
<li>
<p>The synchronous capture that will be created captures the results of a subset of the DML changes made to the <code dir="ltr">hr.departments</code> table.</p>
</li>
<li>
<p>The capture user for the synchronous capture that will be created is <code dir="ltr">hr</code>. The <code dir="ltr">hr</code> user must have privileges to enqueue into the <code dir="ltr">streams_queue</code>.</p>
</li>
</ul>
<p>Complete the following steps to create a synchronous capture using the <code dir="ltr">DBMS_CAPTURE_ADM</code> package:</p>
<ol>
<li>
<p>Complete the tasks in <a href="#BEHEIDCJ">&#34;Preparing to Configure a Synchronous Capture&#34;</a>.</p>
</li>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">dbs1.example.com</code> database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Create the rule set that will be used by the synchronous capture if it does not exist. In this example, assume that the rule set is <code dir="ltr">strmadmin.sync01_rule_set</code>. See <a class="olink STRMS012" href="../STRMS/strms_mrules.htm#STRMS012"><span class="italic">Oracle Streams Concepts and Administration</span></a> for instructions.</p>
</li>
<li>
<p>Run the <code dir="ltr">CREATE_SYNC_CAPTURE</code> procedure to create a synchronous capture. For example:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.CREATE_SYNC_CAPTURE(
    queue_name    =&gt; &#39;strmadmin.streams_queue&#39;,
    capture_name  =&gt; &#39;sync01_capture&#39;,
    rule_set_name =&gt; &#39;strmadmin.sync01_rule_set&#39;,
    capture_user  =&gt; &#39;hr&#39;);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Creates a synchronous capture named <code dir="ltr">sync01_capture</code>. A synchronous capture with the same name must not exist.</p>
</li>
<li>
<p>Enables the synchronous capture. A synchronous capture cannot be disabled.</p>
</li>
<li>
<p>Associates the synchronous capture with the existing queue <code dir="ltr">strmadmin.streams_queue</code>.</p>
</li>
<li>
<p>Associates the synchronous capture with the existing rule set <code dir="ltr">strmadmin.sync01_rule_set</code>.</p>
</li>
<li>
<p>Configures <code dir="ltr">hr</code> as the capture user for the synchronous capture.</p>
</li>
</ul>
</li>
<li>
<p>Run the <code dir="ltr">ADD_TABLE_RULES</code> or <code dir="ltr">ADD_SUBSET_RULES</code> procedure to add a rule to the synchronous capture rule set. For example, run the <code dir="ltr">ADD_SUBSET_RULES</code> procedure to instruct the synchronous capture to capture a subset of the DML changes to the <code dir="ltr">hr.departments</code> table:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_SUBSET_RULES(
    table_name          =&gt; &#39;hr.departments&#39;,
    dml_condition       =&gt; &#39;department_id=1700&#39;,
    streams_type        =&gt; &#39;sync_capture&#39;,
    streams_name        =&gt; &#39;sync01_capture&#39;,
    queue_name          =&gt; &#39;strmadmin.streams_queue&#39;,
    include_tagged_lcr  =&gt;  FALSE);
END;
/
</pre>
<p>Running this procedure performs the following actions:</p>
<ul>
<li>
<p>Adds subset rules to the rule set for the synchronous capture named <code dir="ltr">sync01_capture</code> at the source database <code dir="ltr">dbs1.example.com</code>. The subset rules instruct the synchronous capture to capture changes to rows with <code dir="ltr">department_id</code> equal to <code dir="ltr">1700</code>. The synchronous capture does not capture changes to other rows in the table.</p>
</li>
<li>
<p>Prepares the <code dir="ltr">hr.departments</code> table for instantiation by running the <code dir="ltr">DBMS_CAPTURE_ADM.PREPARE_SYNC_INSTANTIATION</code> function for the table automatically.</p>
</li>
<li>
<p>Specifies that the synchronous capture captures a change only if the session that makes the change has a <code dir="ltr">NULL</code> tag, because the <code dir="ltr">include_tagged_lcr</code> parameter is set to&nbsp;<code dir="ltr">FALSE</code>. This behavior is accomplished through the system-created rules for the synchronous capture.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
When the <code dir="ltr">CREATE_SYNC_CAPTURE</code> procedure creates a synchronous capture, the procedure must obtain an exclusive lock on each table for which it will capture changes. The rules in the specified rule set for the synchronous capture determine these tables. Similarly, when the <code dir="ltr">ADD_TABLE_RULES</code> or the <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds rules to a synchronous capture rule set, the procedure must obtain an exclusive lock on the specified table. In these cases, if there are outstanding transactions on a table for which the synchronous capture will capture changes, then the procedure waits until it can obtain a lock.</div>
</li>
<li>
<p>If necessary, complete the steps described in <a href="#BEHBDCBA">&#34;After Configuring a Synchronous Capture&#34;</a>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BEHBDCBA"></a>
<div id="STREP307" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">After Configuring a Synchronous Capture</h3>
<p>If you configured propagations and apply processes that process logical change records (LCRs captured) by the new synchronous capture, then complete the following steps:</p>
<ol>
<li>
<p>Instantiate the tables for which the new synchronous capture captures changes at all destination databases. See <a href="instant.htm#g1012655">Chapter 8, &#34;Instantiation and Oracle Streams Replication&#34;</a> for detailed information about instantiation.</p>
</li>
<li>
<p>Use the <code dir="ltr">START_APPLY</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package to start the apply processes that will process LCRs captured by the new synchronous capture.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
Other configuration steps might be required for your Oracle Streams environment. For example, some Oracle Streams environments include transformations, apply handlers, and conflict resolution.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment91">
<tr>
<td class="cellalignment98">
<table class="cellalignment96">
<tr>
<td class="cellalignment95"><a href="config_add.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment95"><a href="cprop.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment100">
<table class="cellalignment94">
<tr>
<td class="cellalignment95"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment95"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment95"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment95"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment95"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment95"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>