<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-104248"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Migrating%20Advanced%20Replication%20to%20Oracle%20Streams"></a><title>Migrating Advanced Replication to Oracle Streams</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1044"/>
<meta name="dcterms.created" content="2015-02-12T7:14:20Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Streams Replication Administrator&#39;s Guide"/>
<meta name="dcterms.identifier" content="E53118-02"/>
<meta name="dcterms.isVersionOf" content="STREP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ptrep_ap.htm" title="Previous" type="text/html"/>
<link rel="Next" href="index.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53118-02.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">27/28</span> <!-- End Header -->
<div id="STREP125" class="appendix"><a id="g728498"></a> <a id="i634625"></a>
<h1 class="appendix"><span class="secnum">A</span> Migrating Advanced Replication to Oracle Streams</h1>
<p><a id="sthref799"></a><a id="sthref800"></a><a id="sthref801"></a>Database administrators who have been using Advanced Replication to maintain replicated database objects at different sites can migrate their Advanced Replication environment to an Oracle Streams environment. This chapter provides a conceptual overview of the steps in this process and documents each step with procedures and examples.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i634816">Overview of the Migration Process</a></p>
</li>
<li>
<p><a href="#i634879">Preparing to Generate the Migration Script</a></p>
</li>
<li>
<p><a href="#i634886">Generating and Modifying the Migration Script</a></p>
</li>
<li>
<p><a href="#i634945">Performing the Migration for Advanced Replication to Oracle Streams</a></p>
</li>
<li>
<p><a href="#i635010">Re-creating Master Sites to Retain Materialized View Groups</a></p>
</li>
<li>
<p><a href="#CHDHCFEA">Example Advanced Replication to Oracle Streams Migration Script</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN" href="../REPLN/toc.htm"><span class="italic">Oracle Database Advanced Replication</span></a> and <a class="olink REPMA" href="../REPMA/toc.htm"><span class="italic">Oracle Database Advanced Replication Management API Reference</span></a> for more information about Advanced Replication</div>
<a id="i634816"></a>
<div id="STREP569" class="sect1">
<h2 class="sect1">Overview of the Migration Process</h2>
<p>The following sections provide a conceptual overview of the migration process:</p>
<ul>
<li>
<p><a href="#i634839">Migration Script Generation and Use</a></p>
</li>
<li>
<p><a href="#i634846">Modification of the Migration Script</a></p>
</li>
<li>
<p><a href="#i634860">Actions Performed by the Generated Script</a></p>
</li>
<li>
<p><a href="#i634872">Migration Script Errors</a></p>
</li>
<li>
<p><a href="#i634875">Manual Migration of Updatable Materialized Views</a></p>
</li>
<li>
<p><a href="#i673539">Advanced Replication Elements that Cannot Be Migrated to Oracle Streams</a></p>
</li>
</ul>
<a id="i634839"></a>
<div id="STREP570" class="sect2">
<h3 class="sect2">Migration Script Generation and Use</h3>
<p>You can use the procedure <code dir="ltr">DBMS_REPCAT.STREAMS_MIGRATION</code> to generate a SQL*Plus script that migrates an existing Advanced Replication environment to an Oracle Streams environment. When you run the <code dir="ltr">DBMS_REPCAT.STREAMS_MIGRATION</code> procedure at a master definition site in a multimaster replication environment, it generates a SQL*Plus script in a file at a location that you specify. Once the script is generated, you run it at each master site in your Advanced Replication environment to set up an Oracle Streams environment for each master site. To successfully generate the Oracle Streams environment for your replication groups, the replication groups for which you run the script must have the same master sites. If replication groups have different master sites, then you can generate multiple scripts to migrate each replication group to Oracle Streams.</p>
<p>At times, you must stop, or quiesce, all replication activity for a replication group so that you can perform certain administrative tasks. You do not need to quiesce the replication groups when you run the <code dir="ltr">DBMS_REPCAT.STREAMS_MIGRATION</code> procedure. However, you must quiesce the replication groups being migrated to Oracle Streams when you run the generated script at the master sites. Because you have quiesced the replication groups to run the script at the master sites, you do not have to stop any existing capture processes, propagation jobs, or apply processes at these sites.</p>
</div>
<!-- class="sect2" -->
<a id="i634846"></a>
<div id="STREP571" class="sect2">
<h3 class="sect2">Modification of the Migration Script</h3>
<p>The generated migration script uses comments to indicate Advanced Replication elements that cannot be converted to Oracle Streams. It also provides suggestions for modifying the script to convert these elements to Oracle Streams. You can use these suggestions to edit the script before you run it. You can also customize the migration script in other ways to meet your needs.</p>
<p>The script sets all parameters when it runs PL/SQL procedures and functions. When you generate the script, it sets default values for parameters that typically do not need to be changed. However, you can change these default parameters by editing the script if necessary. The parameters with default settings include the following:</p>
<ul>
<li>
<p><code dir="ltr">include_dml</code></p>
</li>
<li>
<p><code dir="ltr">include_ddl</code></p>
</li>
<li>
<p><code dir="ltr">include_tagged_lcr</code></p>
</li>
</ul>
<p>The beginning of the script has a list of variables for names that are used by the procedures and functions in the script. When you generate the script, it sets these variables to default values that you should not need to change. However, you can change the default settings for these variables if necessary. The variables specify names of queues, capture processes, propagations, and apply processes.</p>
</div>
<!-- class="sect2" -->
<a id="i634860"></a>
<div id="STREP572" class="sect2">
<h3 class="sect2">Actions Performed by the Generated Script</h3>
<p>The migration script performs the following actions:</p>
<ul>
<li>
<p>Prints warnings in comments if the replication groups contain features that cannot be converted to Oracle Streams.</p>
</li>
<li>
<p>Creates <code dir="ltr">ANYDATA</code> queues, if needed, using the <code dir="ltr">DBMS_STREAMS_ADM.SET_UP_QUEUE</code> procedure.</p>
</li>
<li>
<p>Configures propagation between all master sites using the <code dir="ltr">DBMS_STREAMS_ADMIN.ADD_TABLE_PROPAGATION_RULES</code> procedure for each table.</p>
</li>
<li>
<p>Configures capture at each master site using the <code dir="ltr">DBMS_STREAMS_ADMIN.ADD_TABLE_RULES</code> procedure for each table.</p>
</li>
<li>
<p>Configures apply for changes from all the other master sites using the <code dir="ltr">DBMS_STREAMS_ADMIN.ADD_TABLE_RULES</code> procedure for each table.</p>
</li>
<li>
<p>Sets the instantiation SCN for each replicated object at each site where changes to the object are applied.</p>
</li>
<li>
<p>Creates the necessary supplemental log groups at source databases.</p>
</li>
<li>
<p>Sets key columns, if any.</p>
</li>
<li>
<p>Configures conflict resolution if it was configured for the Advanced Replication environment being migrated.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i634872"></a>
<div id="STREP573" class="sect2">
<h3 class="sect2">Migration Script Errors</h3>
<p>If Oracle encounters an error while running the migration script, then the migration script exits immediately. If this happens, then you must modify the script to run any commands that have not already been executed successfully.</p>
</div>
<!-- class="sect2" -->
<a id="i634875"></a>
<div id="STREP574" class="sect2">
<h3 class="sect2">Manual Migration of Updatable Materialized Views</h3>
<p>You cannot migrate updatable materialized views using the migration script. You must migrate updatable materialized views from an Advanced Replication environment to an Oracle Streams environment manually.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i635010">&#34;Re-creating Master Sites to Retain Materialized View Groups&#34;</a></div>
</div>
<!-- class="sect2" -->
<a id="i673539"></a>
<div id="STREP575" class="sect2">
<h3 class="sect2">Advanced Replication Elements that Cannot Be Migrated to Oracle Streams</h3>
<p>Oracle Streams does not support the following:</p>
<ul>
<li>
<p>Replication of changes to tables with columns of the following data types: <code dir="ltr">BFILE</code>, <code dir="ltr">ROWID</code>, and user-defined types (including object types, <code dir="ltr">REF</code>s, varrays, and nested tables)</p>
</li>
<li>
<p>Synchronous replication</p>
</li>
</ul>
<p>If your current Advanced Replication environment uses these features, then these elements of the environment cannot be migrated to Oracle Streams. In this case, you might decide not to migrate the environment to Oracle Streams now, or you might decide to modify the environment so that it can be migrated to Oracle Streams.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i634879"></a>
<div id="STREP576" class="sect1">
<h2 class="sect1">Preparing to Generate the Migration Script</h2>
<p>Before generating the migration script, ensure that all the following conditions are met:</p>
<ul>
<li>
<p>All the replication groups must have the same master site(s).</p>
</li>
<li>
<p>The master site that generates the migration script must be running Oracle Database 10<span class="italic">g</span> or later.</p>
</li>
<li>
<p>The other master sites that run the script, but do not generate the script, must be running Oracle9<span class="italic">i</span> Release 2 (9.2) or later.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i634886"></a>
<div id="STREP577" class="sect1">
<h2 class="sect1">Generating and Modifying the Migration Script</h2>
<p>To generate the migration script, use the procedure <code dir="ltr">DBMS_REPCAT.STREAMS_MIGRATION</code> in the <code dir="ltr">DBMS_REPCAT</code> package. The syntax for this procedure is as follows:</p>
<pre dir="ltr">DBMS_REPCAT.STREAMS_MIGRATION ( 
     gnames              IN   DBMS_UTILITY.NAME_ARRAY, 
     file_location       IN   VARCHAR2, 
     filename            IN   VARCHAR2);
</pre>
<p>Parameters for the <code dir="ltr">DBMS_REPCAT.STREAMS_MIGRATION</code> procedure include the following:</p>
<ul>
<li>
<p><code dir="ltr">gnames</code>: List of replication groups to migrate to Oracle Streams. The replication groups listed must all contain the same master sites. An error is raised if the replication groups have different masters.</p>
</li>
<li>
<p><code dir="ltr">file_location</code>: Directory location of the migration script.</p>
</li>
<li>
<p><code dir="ltr">filename</code>: Name of the migration script.</p>
</li>
</ul>
<p>This procedure generates a script for setting up an Oracle Streams environment for the given replication groups. The script can be customized and run at each master site.</p>
<a id="i637459"></a>
<div id="STREP578" class="sect2">
<h3 class="sect2">Example Advanced Replication Environment to be Migrated to Oracle Streams</h3>
<p><a href="#i636980">Figure A-1</a> shows the Advanced Replication environment that will be migrated to Oracle Streams in this example.</p>
<div id="STREP579" class="figure">
<p class="titleinfigure"><a id="i636980"></a>Figure A-1 Advanced Replication Environment to be Migrated to Oracle Streams</p>
<img width="395" height="254" src="img/strep101.gif" alt="Description of Figure A-1 follows"/><br/>
<a id="sthref802" href="img_text/strep101.htm">Description of &#34;Figure A-1 Advanced Replication Environment to be Migrated to Oracle Streams&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>This Advanced Replication environment has the following characteristics:</p>
<ul>
<li>
<p>The <code dir="ltr">orc1.example.com</code> database is the master definition site for a three-way master configuration that also includes <code dir="ltr">orc2.example.com</code> and <code dir="ltr">orc3.example.com</code>.</p>
</li>
<li>
<p>The <code dir="ltr">orc1.example.com</code> database is the master site for the <code dir="ltr">mv1.example.com</code> materialized view site.</p>
</li>
<li>
<p>The environment replicates changes to the database objects in the <code dir="ltr">hr</code> schema between the three master sites and between the master site and the materialized view site. A single replication group named <code dir="ltr">hr_repg</code> contains the replicated objects.</p>
</li>
<li>
<p>Conflict resolution is configured for the <code dir="ltr">hr.countries</code> table in the multimaster environment. The latest time stamp conflict resolution method resolves conflicts on this table.</p>
</li>
<li>
<p>The materialized views at the <code dir="ltr">mv1.example.com</code> site are updatable.</p>
</li>
</ul>
<p>You can configure this Advanced Replication environment by completing the tasks described in the following sections of the <a class="olink REPMA" href="../REPMA/toc.htm"><span class="italic">Oracle Database Advanced Replication Management API Reference</span></a>:</p>
<ul>
<li>
<p><a class="olink REPMA125" href="../REPMA/rarrepsite.htm#REPMA125">Set up the three master sites</a>.</p>
</li>
<li>
<p><a class="olink REPMA119" href="../REPMA/rarrepsite.htm#REPMA119">Set up the materialized view sites (to set up <code dir="ltr">mv1.example.com</code> only)</a>.</p>
</li>
<li>
<p><a class="olink REPMA003" href="../REPMA/rarmastergroup.htm#REPMA003">Create the <code dir="ltr">hr_repg</code> master group for the three master sites with <code dir="ltr">orc1.example.com</code> as the master definition site.</a></p>
</li>
<li>
<p><a class="olink REPMA112" href="../REPMA/rarconflictres.htm#REPMA112">Configure time stamp conflict resolution for the <code dir="ltr">hr.countries</code> table.</a></p>
</li>
<li>
<p><a class="olink REPMA005" href="../REPMA/rarmviewgroup.htm#REPMA005">Create the materialized view group at <code dir="ltr">mv1.example.com</code> based on the <code dir="ltr">hr_repg</code> master group at <code dir="ltr">orc1.example.com</code>.</a></p>
</li>
</ul>
<p>To generate the migration script for this Advanced Replication environment, complete the following steps:</p>
<ol>
<li>
<p><a href="#i673195">Create the Oracle Streams Administrator at All Master Sites</a></p>
</li>
<li>
<p><a href="#CHDCBBAB">Make a Directory Location Accessible</a></p>
</li>
<li>
<p><a href="#CHDBCBEA">Generate the Migration Script</a></p>
</li>
<li>
<p><a href="#CHDJADHE">Verify the Generated Migration Script Creation and Modify Script</a></p>
</li>
</ol>
<a id="i673195"></a>
<dl>
<dd><a id="STREP625"></a><a id="sthref803"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Create the Oracle Streams Administrator at All Master Sites</dt>
<dd>
<p>Complete the following steps to create the Oracle Streams administrator at each master site for the replication groups being migrated to Oracle Streams. For the sample environment described in <a href="#i637459">&#34;Example Advanced Replication Environment to be Migrated to Oracle Streams&#34;</a>, complete these steps at <code dir="ltr">orc1.example.com</code>, <code dir="ltr">orc2.example.com</code>, and <code dir="ltr">orc3.example.com</code>:</p>
<ol>
<li>
<p>Connect as an administrative user who can create users, grant privileges, and create tablespaces.</p>
</li>
<li>
<p>Either create a tablespace for the Oracle Streams administrator or use an existing tablespace. For example, the following statement creates a new tablespace for the Oracle Streams administrator:</p>
<pre dir="ltr">CREATE TABLESPACE streams_tbs DATAFILE &#39;/usr/oracle/dbs/streams_tbs.dbf&#39; 
  SIZE 25 M REUSE AUTOEXTEND ON MAXSIZE UNLIMITED;
</pre></li>
<li>
<p>Create a new user to act as the Oracle Streams administrator or use an existing user. For example, to create a user named <code dir="ltr">strmadmin</code> and specify that this user uses the <code dir="ltr">streams_tbs</code> tablespace, run the following statement:</p>
<pre dir="ltr">CREATE USER strmadmin IDENTIFIED BY <span class="italic">password</span>
   DEFAULT TABLESPACE streams_tbs
   QUOTA UNLIMITED ON streams_tbs;

GRANT DBA TO strmadmin;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The migration script assumes that the user name of the Oracle Streams administrator is <code dir="ltr">strmadmin</code>. If your Oracle Streams administrator has a different user name, then edit the migration script to replace all instances of <code dir="ltr">strmadmin</code> with the user name of your Oracle Streams administrator.</p>
</li>
<li>
<p>Ensure that you grant <code dir="ltr">DBA</code> role to the Oracle Streams administrator.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Grant any additional privileges required by the Oracle Streams administrator at each master site. The necessary privileges depend on your specific Oracle Streams environment.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a> for information about addition privileges that might be required for an Oracle Streams administrator</div>
</li>
</ol>
</dd>
<dd><a id="STREP626"></a><a id="CHDCBBAB"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Make a Directory Location Accessible</dt>
<dd>
<p>The directory specified by the <code dir="ltr">file_location</code> parameter in the <code dir="ltr">DBMS_REPCAT.STREAMS_MIGRATION</code> procedure must be accessible to PL/SQL. If you do not have directory object that is accessible to the Oracle Streams administrator at the master definition site currently, then connect as the Oracle Streams administrator, and create a directory object using the SQL statement <code dir="ltr">CREATE</code> <code dir="ltr">DIRECTORY</code>.</p>
<p>A directory object is similar to an alias for the directory. For example, to create a directory object called <code dir="ltr">MIG2STR_DIR</code> for the <code dir="ltr">/usr/scripts</code> directory on your computer system, run the following procedure:</p>
<pre dir="ltr">CONNECT strmadmin@orc1.example.com
Enter password: <span class="italic">password</span>

CREATE DIRECTORY MIG2STR_DIR AS &#39;/usr/scripts&#39;;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF01207" href="../SQLRF/statements_5008.htm#SQLRF01207"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the <code dir="ltr">CREATE</code> <code dir="ltr">DIRECTORY</code> statement</div>
</dd>
<dd><a id="STREP627"></a><a id="CHDBCBEA"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Generate the Migration Script</dt>
<dd>
<p>To generate the migration script, run the <code dir="ltr">DBMS_REPCAT.STREAMS_MIGRATION</code> procedure at the master definition site and specify the appropriate parameters. For example, the following procedure generates a script that migrates an Advanced Replication environment with one replication group named <code dir="ltr">hr_repg</code>. The script name is <code dir="ltr">rep2streams.sql</code>, and it is generated into the <code dir="ltr">/usr/scripts</code> directory on the local computer system. This directory is represented by the directory object <code dir="ltr">MIG2STR_DIR</code>.</p>
<pre dir="ltr">CONNECT strmadmin@orc1.example.com
Enter password: <span class="italic">password</span>

DECLARE
  rep_groups DBMS_UTILITY.NAME_ARRAY;
  BEGIN
    rep_groups(1) := &#39;HR_REPG&#39;;
    DBMS_REPCAT.STREAMS_MIGRATION(
      gnames         =&gt;  rep_groups,
      file_location  =&gt;  &#39;MIG2STR_DIR&#39;,
      filename       =&gt;  &#39;rep2streams.sql&#39;);
END;
/
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDHCFEA">&#34;Example Advanced Replication to Oracle Streams Migration Script&#34;</a> to view the script generated in this example</div>
</dd>
<dd><a id="STREP628"></a><a id="CHDJADHE"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Verify the Generated Migration Script Creation and Modify Script</dt>
<dd>
<p>After generating the migration script, verify that the script was created viewing the script in the specified directory. If necessary, you can modify it to support the following:</p>
<ul>
<li>
<p>If your environment requires conflict resolution that used the additive, average, priority group, or site priority Advanced Replication conflict resolution methods, then configure user-defined conflict resolution methods to resolve conflicts. Oracle Streams does not provide prebuilt conflict resolution methods that are equivalent to these methods.</p>
<p>However, the migration script supports the following conflict resolution methods automatically: overwrite, discard, maximum, and minimum. The script converts an earliest time stamp method to a minimum method automatically, and it converts a latest time stamp method to a maximum method automatically. If you use a time stamp conflict resolution method, then the script assumes that any triggers necessary to populate the time stamp column in a table already exist.</p>
</li>
<li>
<p>Unique conflict resolution.</p>
</li>
<li>
<p>Delete conflict resolution.</p>
</li>
<li>
<p>Multiple conflict resolution methods to be executed in a specified order when a conflict occurs. Oracle Streams allows only one conflict resolution method to be specified for each column list.</p>
</li>
<li>
<p>Procedural replication.</p>
</li>
<li>
<p>Replication of data definition language (DDL) changes for nontable objects, including the following:</p>
<ul>
<li>
<p>Functions</p>
</li>
<li>
<p>Indexes</p>
</li>
<li>
<p>Indextypes</p>
</li>
<li>
<p>Operators</p>
</li>
<li>
<p>Packages</p>
</li>
<li>
<p>Package bodies</p>
</li>
<li>
<p>Procedures</p>
</li>
<li>
<p>Synonyms</p>
</li>
<li>
<p>Triggers</p>
</li>
<li>
<p>Types</p>
</li>
<li>
<p>Type bodies</p>
</li>
<li>
<p>Views</p>
</li>
</ul>
</li>
</ul>
<p>Because changes to these objects were being replicated by Advanced Replication at all sites, the migration script does not need to take any action to migrate these objects. You can add DDL rules to the Oracle Streams environment to support the future modification and creation of these types of objects.</p>
<p>For example, to specify that a capture process named <code dir="ltr">streams_capture</code> at the <code dir="ltr">orc1.example.com</code> database captures DDL changes to all of the database objects in the <code dir="ltr">hr</code> schema, add the following to the script:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.ADD_SCHEMA_RULES(
    schema_name        =&gt; &#39;hr&#39;,
    streams_type       =&gt; &#39;capture&#39;,
    streams_name       =&gt; &#39;streams_capture&#39;,
    queue_name         =&gt; &#39;strmadmin.streams_queue&#39;,
    include_dml        =&gt; FALSE,
    include_ddl        =&gt; TRUE,
    include_tagged_lcr =&gt; FALSE,
    source_database    =&gt; &#39;orc1.example.com&#39;);
END;
/
</pre>
<p>Notice that the <code dir="ltr">include_ddl</code> parameter is set to <code dir="ltr">TRUE</code>. By setting this parameter to <code dir="ltr">TRUE</code>, this procedure adds a schema rule for DDL changes to the <code dir="ltr">hr</code> schema to the rule set for the capture process. This rule instructs the capture process to capture DDL changes to the <code dir="ltr">hr</code> schema and its objects. For the DDL changes to be replicated, you must add similar rules to the appropriate propagations and apply processes.</p>
</dd>
</dl>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="conflict.htm#g1013001">Chapter 9, &#34;Oracle Streams Conflict Resolution&#34;</a></p>
</li>
<li>
<p><a class="olink STRMS155" href="../STRMS/strms_prop.htm#STRMS155"><span class="italic">Oracle Streams Concepts and Administration</span></a> for information about queue-to-queue propagations</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i634945"></a>
<div id="STREP580" class="sect1">
<h2 class="sect1">Performing the Migration for Advanced Replication to Oracle Streams</h2>
<p>This section explains how to perform the migration from an Advanced Replication environment to an Oracle Streams environment.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i634965">Before Executing the Migration Script</a></p>
</li>
<li>
<p><a href="#i634980">Executing the Migration Script</a></p>
</li>
<li>
<p><a href="#i637983">After Executing the Script</a></p>
</li>
</ul>
<a id="i634965"></a>
<div id="STREP581" class="sect2">
<h3 class="sect2">Before Executing the Migration Script</h3>
<p>Complete the following steps before executing the migration script:</p>
<ol>
<li>
<p><a href="#i638144">Set Initialization Parameters That Are Relevant to Oracle Streams</a></p>
</li>
<li>
<p><a href="#CHDBEJFE">Enable Archive Logging at All Sites</a></p>
</li>
<li>
<p><a href="#CHDIBJJI">Create Database Links</a></p>
</li>
<li>
<p><a href="#CHDBHHCJ">Quiesce Each Replication Group That You Are Migrating to Oracle Streams</a></p>
</li>
</ol>
<a id="i638144"></a>
<dl>
<dd><a id="STREP629"></a><a id="sthref804"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Set Initialization Parameters That Are Relevant to Oracle Streams</dt>
<dd>
<p>At each replication database, set initialization parameters that are relevant to Oracle Streams and restart the database if necessary.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a> for information about initialization parameters that are important to Oracle Streams</div>
</dd>
<dd><a id="STREP630"></a><a id="CHDBEJFE"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Enable Archive Logging at All Sites</dt>
<dd>
<p>Ensure that each master site is running in <code dir="ltr">ARCHIVELOG</code> mode, because a capture process requires <code dir="ltr">ARCHIVELOG</code> mode. In the sample environment, <code dir="ltr">orc1.example.com</code>, <code dir="ltr">orc2.example.com</code>, and <code dir="ltr">orc3.example.com</code> must be running in <code dir="ltr">ARCHIVELOG</code> mode. You can check the log mode for a database by querying the <code dir="ltr">LOG_MODE</code> column in the <code dir="ltr">V$DATABASE</code> dynamic performance view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN008" href="../ADMIN/archredo.htm#ADMIN008"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about running a database in <code dir="ltr">ARCHIVELOG</code> mode</div>
</dd>
<dd><a id="STREP631"></a><a id="CHDIBJJI"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Create Database Links</dt>
<dd>
<p>Create a database link from the Oracle Streams administrator at each master site to the Oracle Streams administrator at the other master sites. For the sample environment described in <a href="#i637459">&#34;Example Advanced Replication Environment to be Migrated to Oracle Streams&#34;</a>, create the following database links:</p>
<pre dir="ltr">CONNECT strmadmin@orc1.example.com
Enter password: <span class="italic">password</span>

CREATE DATABASE LINK orc2.example.com CONNECT TO strmadmin 
   IDENTIFIED BY <span class="italic">password</span> USING &#39;orc2.example.com&#39;;

CREATE DATABASE LINK orc3.example.com CONNECT TO strmadmin 
   IDENTIFIED BY <span class="italic">password</span> USING &#39;orc3.example.com&#39;;


CONNECT strmadmin@orc2.example.com
Enter password: <span class="italic">password</span>

CREATE DATABASE LINK orc1.example.com CONNECT TO strmadmin 
   IDENTIFIED BY <span class="italic">password</span> USING &#39;orc1.example.com&#39;;

CREATE DATABASE LINK orc3.example.com CONNECT TO strmadmin 
   IDENTIFIED BY <span class="italic">password</span> USING &#39;orc3.example.com&#39;;


CONNECT strmadmin@orc3.example.com
Enter password: <span class="italic">password</span>

CREATE DATABASE LINK orc1.example.com CONNECT TO strmadmin 
   IDENTIFIED BY <span class="italic">password</span> USING &#39;orc1.example.com&#39;;

CREATE DATABASE LINK orc2.example.com CONNECT TO strmadmin 
   IDENTIFIED BY <span class="italic">password</span> USING &#39;orc2.example.com&#39;;
</pre></dd>
<dd><a id="STREP632"></a><a id="CHDBHHCJ"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Quiesce Each Replication Group That You Are Migrating to Oracle Streams</dt>
<dd>
<p>Run the <code dir="ltr">DBMS_REPCAT.SUSPEND_MASTER_ACTIVITY</code> procedure at the master definition site for each replication group that you are migrating to Oracle Streams.</p>
<p>In the sample environment, <code dir="ltr">orc1.example.com</code> is the master definition site, and <code dir="ltr">hr_repg</code> is the replication group being migrated to Oracle Streams. So, connect to <code dir="ltr">orc1.example.com</code> as the replication administrator and run the <code dir="ltr">SUSPEND_MASTER_ACTIVITY</code> procedure:</p>
<pre dir="ltr">CONNECT repadmin@orc1.example.com
Enter password: <span class="italic">password</span>

BEGIN
   DBMS_REPCAT.SUSPEND_MASTER_ACTIVITY (
      gname =&gt; &#39;hr_repg&#39;);
END;
/
</pre>
<p>Do not proceed until the master group is quiesced. You can check the status of a master group by querying the <code dir="ltr">STATUS</code> column in the <code dir="ltr">DBA_REPGROUP</code> data dictionary view.</p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="i634980"></a>
<div id="STREP582" class="sect2">
<h3 class="sect2">Executing the Migration Script</h3>
<p>Perform the following steps to migrate:</p>
<ol>
<li>
<p><a href="#i637754">Connect as the Oracle Streams Administrator and Run the Script at Each Site</a></p>
</li>
<li>
<p><a href="#CHDHFJBC">Verify That Oracle Streams Configuration Completed Successfully at All Sites</a></p>
</li>
</ol>
<a id="i637754"></a>
<dl>
<dd><a id="STREP633"></a><a id="sthref805"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect as the Oracle Streams Administrator and Run the Script at Each Site</dt>
<dd>
<p>In the sample environment, connect in SQL*Plus as the Oracle Streams administrator <code dir="ltr">strmadmin</code> in SQL*Plus at <code dir="ltr">orc1.example.com</code>, <code dir="ltr">orc2.example.com</code>, and <code dir="ltr">orc3.example.com</code> and execute the migration script <code dir="ltr">rep2streams.sql</code>:</p>
<pre dir="ltr">CONNECT strmadmin@orc1.example.com
Enter password: <span class="italic">password</span>

SET ECHO ON
SPOOL rep2streams.out
@rep2streams.sql

CONNECT strmadmin@orc2.example.com
Enter password: <span class="italic">password</span>

SET ECHO ON
SPOOL rep2streams.out
@rep2streams.sql

CONNECT strmadmin@orc3.example.com
Enter password: <span class="italic">password</span>

SET ECHO ON
SPOOL rep2streams.out
@rep2streams.sql
</pre></dd>
<dd><a id="STREP634"></a><a id="CHDHFJBC"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Verify That Oracle Streams Configuration Completed Successfully at All Sites</dt>
<dd>
<p>Check the spool file at each site to ensure that there are no errors. If there are errors, then you should modify the script to execute the steps that were not completed successfully, and then rerun the script. In the sample environment, the spool file is <code dir="ltr">rep2streams.out</code> at each master site.</p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="i637983"></a>
<div id="STREP583" class="sect2">
<h3 class="sect2">After Executing the Script</h3>
<p>Perform the following steps to complete the migration process:</p>
<ol>
<li>
<p><a href="#i673135">Drop Replication Groups You Migrated at Each Site</a></p>
</li>
<li>
<p><a href="#CHDGBGDA">Start the Apply Processes at Each Site</a></p>
</li>
<li>
<p><a href="#CHDDDDGC">Start the Capture Process at Each Site</a></p>
</li>
</ol>
<a id="i673135"></a>
<dl>
<dd><a id="STREP635"></a><a id="sthref806"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Drop Replication Groups You Migrated at Each Site</dt>
<dd>
<p>To drop a replication group that you successfully migrated to Oracle Streams, connect as the replication administrator to the master definition site, and run the <code dir="ltr">DBMS_REPCAT.DROP_MASTER_REPGROUP</code> procedure.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Ensure that the <code dir="ltr">drop_contents</code> parameter is set to <code dir="ltr">FALSE</code> in the <code dir="ltr">DROP_MASTER_REPGROUP</code> procedure. If it is set to <code dir="ltr">TRUE</code>, then the replicated database objects are dropped.</div>
<pre dir="ltr">CONNECT repadmin@orc1.example.com
Enter password: <span class="italic">password</span>

BEGIN
   DBMS_REPCAT.DROP_MASTER_REPGROUP (
     gname         =&gt; &#39;hr_repg&#39;,
     drop_contents =&gt; FALSE,
     all_sites     =&gt; TRUE);
END;
/
</pre>
<p>To ensure that the migrated replication groups are dropped at each database, query the <code dir="ltr">GNAME</code> column in the <code dir="ltr">DBA_REPGROUP</code> data dictionary view. The migrated replication groups should not appear in the query output at any database.</p>
<p>If you no longer need the replication administrator, then you can drop this user also.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Do not resume any Advanced Replication activity once Oracle Streams is set up.</div>
</dd>
<dd><a id="STREP636"></a><a id="CHDGBGDA"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Start the Apply Processes at Each Site</dt>
<dd>
<p>You can view the names of the apply processes at each site by running the following query while connected as the Oracle Streams administrator:</p>
<pre dir="ltr">SELECT APPLY_NAME FROM DBA_APPLY;
</pre>
<p>When you know the names of the apply processes, you can start each one by running the <code dir="ltr">START_APPLY</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package while connected as the Oracle Streams administrator. For example, the following procedure starts an apply process named <code dir="ltr">apply_from_orc2</code> at <code dir="ltr">orc1.example.com</code>:</p>
<pre dir="ltr">CONNECT strmadmin@orc1.example.com
Enter password: <span class="italic">password</span>

BEGIN
  DBMS_APPLY_ADM.START_APPLY(
    apply_name =&gt; &#39;apply_from_orc2&#39;);
END;
/
</pre>
<p>Ensure that you start each apply process at every database in the new Oracle Streams environment.</p>
</dd>
<dd><a id="STREP637"></a><a id="CHDDDDGC"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Start the Capture Process at Each Site</dt>
<dd>
<p>You can view the name of the capture process at each site by running the following query while connected as the Oracle Streams administrator:</p>
<pre dir="ltr">SELECT CAPTURE_NAME FROM DBA_CAPTURE;
</pre>
<p>When you know the name of the capture process, you can start each one by running the <code dir="ltr">START_CAPTURE</code> procedure in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package while connected as the Oracle Streams administrator. For example, the following procedure starts a capture process named <code dir="ltr">streams_capture</code> at <code dir="ltr">orc1.example.com</code>:</p>
<pre dir="ltr">CONNECT strmadmin@orc1.example.com
Enter password: <span class="italic">password</span>

BEGIN
  DBMS_CAPTURE_ADM.START_CAPTURE(
    capture_name =&gt; &#39;streams_capture&#39;);
END;
/
</pre>
<p>Ensure that you start each capture process at every database in the new Oracle Streams environment.</p>
</dd>
</dl>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i635010"></a>
<div id="STREP584" class="sect1">
<h2 class="sect1">Re-creating Master Sites to Retain Materialized View Groups</h2>
<p>If one or more materialized view groups used a master group that you migrated to Oracle Streams, then you must re-create the master group to retain these materialized view groups. Therefore, each database acting as the master site for a materialized view group must become the master definition site for a one-master configuration of a replication group that contains the tables used by the materialized views in the materialized view group.</p>
<p>Use the replication management APIs to create a replication group similar to the original replication group that was migrated to Oracle Streams. That is, the new replication group should have the same replication group name, objects, conflict resolution methods, and key columns. To retain the existing materialized view groups, you must re-create each master group at each master site that contained a master group for a materialized view group, re-create the master replication objects in the master group, regenerate replication support for the master group, and resume replication activity for the master group.</p>
<p>For example, consider the following Advanced Replication environment:</p>
<ul>
<li>
<p>Two master sites, <code dir="ltr">mdb1.example.com</code> and <code dir="ltr">mdb2.example.com</code>, have the replication group <code dir="ltr">rg1</code>. The <code dir="ltr">mdb1.example.com</code> database is the master definition site, and the objects in the <code dir="ltr">rg1</code> replication group are replicated between <code dir="ltr">mdb1.example.com</code> and <code dir="ltr">mdb2.example.com</code>.</p>
</li>
<li>
<p>The <code dir="ltr">rg1</code> replication group at <code dir="ltr">mdb1.example.com</code> is the master group to the <code dir="ltr">mvg1</code> materialized view group at <code dir="ltr">mv1.example.com</code>.</p>
</li>
<li>
<p>The <code dir="ltr">rg1</code> replication group at <code dir="ltr">mdb2.example.com</code> is the master group to the <code dir="ltr">mvg2</code> materialized view group at <code dir="ltr">mv2.example.com</code>.</p>
</li>
</ul>
<p>If the <code dir="ltr">rg1</code> replication group is migrated to Oracle Streams at both <code dir="ltr">mdb1.example.com</code> and <code dir="ltr">mdb2.example.com</code>, and you want to retain the materialized view groups <code dir="ltr">mvg1</code> at <code dir="ltr">mv1.example.com</code> and <code dir="ltr">mvg2</code> at <code dir="ltr">mv2.example.com</code>, then you must re-create the <code dir="ltr">rg1</code> replication group at <code dir="ltr">mdb1.example.com</code> and <code dir="ltr">mdb2.example.com</code> after the migration to Oracle Streams. You configure both <code dir="ltr">mdb1.example.com</code> and <code dir="ltr">mdb2.example.com</code> to be the master definition site for the <code dir="ltr">rg1</code> replication group in a one-master environment.</p>
<p>It is not necessary to drop or re-create materialized view groups at the materialized view sites. If a new master replication group resembles the original replication group, then the materialized view groups are not affected. Do not refresh these materialized view groups until generation of replication support for each master object is complete (Step <a href="#i639301">3</a> in the task in this section). Similarly, do not push the deferred transaction queue at any materialized view site with updatable materialized views until generation of replication support for each master object is complete.</p>
<p>For the sample environment described in <a href="#i637459">&#34;Example Advanced Replication Environment to be Migrated to Oracle Streams&#34;</a>, only the <code dir="ltr">hr_repg</code> replication group at <code dir="ltr">orc1.example.com</code> was the master group to a materialized view group at <code dir="ltr">mv1.example.com</code>. To retain this materialized view group at <code dir="ltr">mv1.example.com</code>, complete the following steps while connected as the replication administrator:</p>
<ol>
<li>
<p>Create the master group <code dir="ltr">hr_repg</code> at <code dir="ltr">orc1.example.com</code>.</p>
<pre dir="ltr">CONNECT repadmin@orc1.example.com
Enter password: <span class="italic">password</span>

BEGIN
   DBMS_REPCAT.CREATE_MASTER_REPGROUP (
      gname =&gt; &#39;hr_repg&#39;);
END;
/
</pre></li>
<li>
<p>Add the tables in the hr schema to the <code dir="ltr">hr_repg</code> master group. These tables are master tables to the materialized views at <code dir="ltr">mv1.example.com</code>.</p>
<pre dir="ltr">BEGIN
   DBMS_REPCAT.CREATE_MASTER_REPOBJECT (
      gname               =&gt; &#39;hr_repg&#39;,
      type                =&gt; &#39;TABLE&#39;,
      oname               =&gt; &#39;countries&#39;,
      sname               =&gt; &#39;hr&#39;,
      use_existing_object =&gt; TRUE,
      copy_rows           =&gt; FALSE);
END;
/

BEGIN
   DBMS_REPCAT.CREATE_MASTER_REPOBJECT (
      gname               =&gt; &#39;hr_repg&#39;,
      type                =&gt; &#39;TABLE&#39;,
      oname               =&gt; &#39;departments&#39;,
      sname               =&gt; &#39;hr&#39;,
      use_existing_object =&gt; TRUE,
      copy_rows           =&gt; FALSE);
END;
/

BEGIN
   DBMS_REPCAT.CREATE_MASTER_REPOBJECT (
      gname               =&gt; &#39;hr_repg&#39;,
      type                =&gt; &#39;TABLE&#39;,
      oname               =&gt; &#39;employees&#39;,
      sname               =&gt; &#39;hr&#39;,
      use_existing_object =&gt; TRUE,
      copy_rows           =&gt; FALSE);
END;
/

BEGIN
   DBMS_REPCAT.CREATE_MASTER_REPOBJECT (
      gname               =&gt; &#39;hr_repg&#39;,
      type                =&gt; &#39;TABLE&#39;,
      oname               =&gt; &#39;jobs&#39;,
      sname               =&gt; &#39;hr&#39;,
      use_existing_object =&gt; TRUE,
      copy_rows           =&gt; FALSE);
END;
/

BEGIN
   DBMS_REPCAT.CREATE_MASTER_REPOBJECT (
      gname               =&gt; &#39;hr_repg&#39;,
      type                =&gt; &#39;TABLE&#39;,
      oname               =&gt; &#39;job_history&#39;,
      sname               =&gt; &#39;hr&#39;,
      use_existing_object =&gt; TRUE,
      copy_rows           =&gt; FALSE);
END;
/

BEGIN
   DBMS_REPCAT.CREATE_MASTER_REPOBJECT (
      gname               =&gt; &#39;hr_repg&#39;,
      type                =&gt; &#39;TABLE&#39;,
      oname               =&gt; &#39;locations&#39;,
      sname               =&gt; &#39;hr&#39;,
      use_existing_object =&gt; TRUE,
      copy_rows           =&gt; FALSE);
END;
/

BEGIN
   DBMS_REPCAT.CREATE_MASTER_REPOBJECT (
      gname               =&gt; &#39;hr_repg&#39;,
      type                =&gt; &#39;TABLE&#39;,
      oname               =&gt; &#39;regions&#39;,
      sname               =&gt; &#39;hr&#39;,
      use_existing_object =&gt; TRUE,
      copy_rows           =&gt; FALSE);
END;
/
</pre></li>
<li id="i639301">
<p>Generate replication support for each object in the <code dir="ltr">hr_repg</code> master group.</p>
<pre dir="ltr">BEGIN 
    DBMS_REPCAT.GENERATE_REPLICATION_SUPPORT (
      sname             =&gt; &#39;hr&#39;,
      oname             =&gt; &#39;countries&#39;, 
      type              =&gt; &#39;TABLE&#39;); 
END;
/

BEGIN 
    DBMS_REPCAT.GENERATE_REPLICATION_SUPPORT (
      sname             =&gt; &#39;hr&#39;,
      oname             =&gt; &#39;departments&#39;, 
      type              =&gt; &#39;TABLE&#39;); 
END;
/

BEGIN 
    DBMS_REPCAT.GENERATE_REPLICATION_SUPPORT (
      sname             =&gt; &#39;hr&#39;,
      oname             =&gt; &#39;employees&#39;, 
      type              =&gt; &#39;TABLE&#39;); 
END;
/

BEGIN 
    DBMS_REPCAT.GENERATE_REPLICATION_SUPPORT (
      sname             =&gt; &#39;hr&#39;,
      oname             =&gt; &#39;jobs&#39;, 
      type              =&gt; &#39;TABLE&#39;); 
END;
/

BEGIN 
    DBMS_REPCAT.GENERATE_REPLICATION_SUPPORT (
      sname             =&gt; &#39;hr&#39;,
      oname             =&gt; &#39;job_history&#39;, 
      type              =&gt; &#39;TABLE&#39;); 
END;
/

BEGIN 
    DBMS_REPCAT.GENERATE_REPLICATION_SUPPORT (
      sname             =&gt; &#39;hr&#39;,
      oname             =&gt; &#39;locations&#39;, 
      type              =&gt; &#39;TABLE&#39;); 
END;
/

BEGIN 
    DBMS_REPCAT.GENERATE_REPLICATION_SUPPORT (
      sname             =&gt; &#39;hr&#39;,
      oname             =&gt; &#39;regions&#39;, 
      type              =&gt; &#39;TABLE&#39;); 
END;
/
</pre></li>
<li>
<p>Resume master activity for the <code dir="ltr">hr_repg</code> master group.</p>
<pre dir="ltr">BEGIN 
   DBMS_REPCAT.RESUME_MASTER_ACTIVITY (
      gname =&gt; &#39;hr_repg&#39;); 
END;
/
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
A materialized view log should exist for each table you added to the <code dir="ltr">hr_repg</code> master group, unless you deleted these logs manually after you migrated the replication group to Oracle Streams. If these materialized view logs do not exist, then you must create them.</div>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CHDHCFEA"></a>
<div id="STREP585" class="sect1">
<h2 class="sect1">Example Advanced Replication to Oracle Streams Migration Script</h2>
<p>The following is an example script generated for the environment:</p>
<pre dir="ltr">The following is an example script generated for the environment:
----------------------------------------------------------
-- Migration Script Generated on 12-JUN-05 by user STRMADMIN. --
----------------------------------------------------------
 
----------------------------------------------------------
--  ************** Notes and Assumptions ************** --
--
-- 1. The Oracle Streams Administrator is &#34;strmadmin&#34;.
--    The user &#34;strmadmin&#34; must be created and granted the
--    required privileges before running the script.
--
-- 2. Names of queue tables, queues, capture processes
--    propagation jobs, and apply processes will be the
--    same at all sites. If the DBA wants different names,
--    he must edit the script manually before running it
--    at each master site.
--
-- 3. Archive logging must be enabled at all sites before
--    running the script.
--
-- 4. Users must set up database links for queue to queue
--    propagation, if needed.
--
-- 5. Repgroups must be quiesced before running the script.
----------------------------------------------------------
 
set pagesize 1000
set echo on
set serveroutput on
whenever sqlerror exit sql.sqlcode;
 
--
-- Raise error if Repgroups are not Quiesced.
--
declare
  repgroup_status VARCHAR2(10);
begin
  select status into repgroup_status
    from dba_repcat
   where gname = &#39;HR_REPG&#39;;
 
   if (repgroup_status != &#39;QUIESCED&#39;) THEN
     raise_application_error(-20000,
       &#39;ORA-23310: object group &#34;HR_REPG&#34; is not quiesced.&#39;);
   end if;
exception when no_data_found then
  null;
end;
/
 
-------------------------------
-- Queue Owner
-------------------------------
-- streams queue owner at ORC1.EXAMPLE.COM
define QUEUE_OWNER_ORC1 = strmadmin
 
-- streams queue owner at ORC2.EXAMPLE.COM
define QUEUE_OWNER_ORC2 = strmadmin
 
-- streams queue owner at ORC3.EXAMPLE.COM
define QUEUE_OWNER_ORC3 = strmadmin
 
-------------------------------
-- Queue Table
-------------------------------
-- streams queue table at ORC1.EXAMPLE.COM
define QUEUE_TABLE_ORC1 = streams_queue_table
 
-- streams queue table at ORC2.EXAMPLE.COM
define QUEUE_TABLE_ORC2 = streams_queue_table
 
-- streams queue table at ORC3.EXAMPLE.COM
define QUEUE_TABLE_ORC3 = streams_queue_table
 
-------------------------------
-- Queue
-------------------------------
-- streams queue at ORC1.EXAMPLE.COM
define QUEUE_ORC1 = streams_queue
 
-- streams queue at ORC2.EXAMPLE.COM
define QUEUE_ORC2 = streams_queue
 
-- streams queue at ORC3.EXAMPLE.COM
define QUEUE_ORC3 = streams_queue
 
-------------------------------
-- Propagation names
-------------------------------
-- propagation process to ORC1.EXAMPLE.COM
define PROP_ORC1 = prop_to_ORC1
 
-- propagation process to ORC2.EXAMPLE.COM
define PROP_ORC2 = prop_to_ORC2
 
-- propagation process to ORC3.EXAMPLE.COM
define PROP_ORC3 = prop_to_ORC3
 
-------------------------------
-- Capture Process
-------------------------------
-- capture process to be used or created at the local site
define CAPTURE_NAME = streams_capture
 
-------------------------------
-- Apply processes
-------------------------------
-- apply process for applying LCRs from ORC1.EXAMPLE.COM
define APPLY_ORC1 = apply_from_ORC1
 
-- apply process for applying LCRs from ORC2.EXAMPLE.COM
define APPLY_ORC2 = apply_from_ORC2
 
-- apply process for applying LCRs from ORC3.EXAMPLE.COM
define APPLY_ORC3 = apply_from_ORC3
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- DEPT_LOCATION_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_MANAGER_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- INSERT_TIME of type TRIGGER belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_EMPLOYEE_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- LOC_COUNTRY_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- DEPT_LOCATION_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_MANAGER_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- INSERT_TIME of type TRIGGER belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_EMPLOYEE_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- LOC_COUNTRY_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- DEPT_LOCATION_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_MANAGER_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- INSERT_TIME of type TRIGGER belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_EMPLOYEE_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- LOC_COUNTRY_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- DEPT_LOCATION_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_MANAGER_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- INSERT_TIME of type TRIGGER belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_EMPLOYEE_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- LOC_COUNTRY_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- DEPT_LOCATION_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_MANAGER_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- INSERT_TIME of type TRIGGER belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_EMPLOYEE_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- LOC_COUNTRY_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- DEPT_LOCATION_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_MANAGER_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- INSERT_TIME of type TRIGGER belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_EMPLOYEE_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- LOC_COUNTRY_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- DEPT_LOCATION_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- EMP_MANAGER_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- INSERT_TIME of type TRIGGER belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_DEPARTMENT_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_EMPLOYEE_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- JHIST_JOB_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
--
-- ** WARNING ** --
-- Oracle Streams does not support the repobject
-- LOC_COUNTRY_IX of type INDEX belonging to repgroup HR_REPG.
-- The user can add DDL rules to the Oracle Streams environment
-- to support creation or any future modifications
-- of this type of object.
--
 
-------------------------------
-- Setup Queue
-------------------------------
 
variable local_db          varchar2(128);
variable local_queue_table varchar2(30);
variable local_queue       varchar2(30);
variable local_queue_owner varchar2(30);
 
-- get the local database name
declare
  global_name varchar2(128);
begin
  select global_name into :local_db from global_name;
  dbms_output.put_line(&#39;The local database name is: &#39; || :local_db);
end;
/
 
-- get the local queue table and queue name
begin
  if :local_db = &#39;ORC1.EXAMPLE.COM&#39; then
    :local_queue_table := &#39;&amp;QUEUE_TABLE_ORC1&#39;;
    :local_queue := &#39;&amp;QUEUE_ORC1&#39;;
    :local_queue_owner := &#39;&amp;QUEUE_OWNER_ORC1&#39;;
 
  elsif :local_db = &#39;ORC2.EXAMPLE.COM&#39; then
    :local_queue_table := &#39;&amp;QUEUE_TABLE_ORC2&#39;;
    :local_queue := &#39;&amp;QUEUE_ORC2&#39;;
    :local_queue_owner := &#39;&amp;QUEUE_OWNER_ORC2&#39;;
 
  elsif :local_db = &#39;ORC3.EXAMPLE.COM&#39; then
    :local_queue_table := &#39;&amp;QUEUE_TABLE_ORC3&#39;;
    :local_queue := &#39;&amp;QUEUE_ORC3&#39;;
    :local_queue_owner := &#39;&amp;QUEUE_OWNER_ORC3&#39;;
 
  end if;
 
  dbms_output.put_line(&#39;The local queue owner is: &#39; || :local_queue_owner);
  dbms_output.put_line(&#39;The local queue table is: &#39; || :local_queue_table);
  dbms_output.put_line(&#39;The local queue name  is: &#39; || :local_queue);
end;
/
 
begin
  dbms_streams_adm.set_up_queue(
    queue_table =&gt; :local_queue_table,
    storage_clause =&gt; NULL,
    queue_name =&gt; :local_queue,
    queue_user =&gt; :local_queue_owner,
    comment =&gt; &#39;streams_comment&#39;);
end;
/
 
-------------------------------
-- Set Instantiation SCN
-------------------------------
 
variable flashback_scn number;
 
begin
  select dbms_flashback.get_system_change_number into :flashback_scn
    from dual;
  dbms_output.put_line(&#39;local flashback SCN is: &#39; || :flashback_scn);
end;
/
 
--
-- Setup instantiation SCN for ORC1.EXAMPLE.COM
--
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;COUNTRIES&#34; at
  -- ORC1.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC1.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;DEPARTMENTS&#34; at
  -- ORC1.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC1.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;EMPLOYEES&#34; at
  -- ORC1.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC1.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;JOBS&#34; at
  -- ORC1.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC1.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;JOB_HISTORY&#34; at
  -- ORC1.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC1.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;LOCATIONS&#34; at
  -- ORC1.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC1.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;REGIONS&#34; at
  -- ORC1.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC1.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
--
-- Setup instantiation SCN for ORC2.EXAMPLE.COM
--
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;COUNTRIES&#34; at
  -- ORC2.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC2.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;DEPARTMENTS&#34; at
  -- ORC2.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC2.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;EMPLOYEES&#34; at
  -- ORC2.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC2.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;JOBS&#34; at
  -- ORC2.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC2.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;JOB_HISTORY&#34; at
  -- ORC2.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC2.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;LOCATIONS&#34; at
  -- ORC2.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC2.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;REGIONS&#34; at
  -- ORC2.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC2.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
--
-- Setup instantiation SCN for ORC3.EXAMPLE.COM
--
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;COUNTRIES&#34; at
  -- ORC3.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC3.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;DEPARTMENTS&#34; at
  -- ORC3.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC3.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;EMPLOYEES&#34; at
  -- ORC3.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC3.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;JOBS&#34; at
  -- ORC3.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC3.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;JOB_HISTORY&#34; at
  -- ORC3.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC3.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;LOCATIONS&#34; at
  -- ORC3.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC3.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Set instantiation SCN for &#34;HR&#34;.&#34;REGIONS&#34; at
  -- ORC3.EXAMPLE.COM
  --
  if (:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_apply_adm.set_table_instantiation_scn@ORC3.EXAMPLE.COM(
      source_object_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
      source_database_name =&gt; :local_db,
      instantiation_scn =&gt; :flashback_scn,
      apply_database_link =&gt; NULL);
  end if;
end;
/
 
-------------------------------
-- Setup Propagation
-------------------------------
 
--
-- Propagation from local queue to ORC1.EXAMPLE.COM
--
begin
  if :local_db != &#39;ORC1.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;COUNTRIES&#34; from local queue to ORC1
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC1&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC1&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC1&#39; ||
        &#39;@ORC1.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC1.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;DEPARTMENTS&#34; from local queue to ORC1
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC1&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC1&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC1&#39; ||
        &#39;@ORC1.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC1.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;EMPLOYEES&#34; from local queue to ORC1
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC1&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC1&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC1&#39; ||
        &#39;@ORC1.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC1.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;JOBS&#34; from local queue to ORC1
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC1&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC1&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC1&#39; ||
        &#39;@ORC1.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC1.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;JOB_HISTORY&#34; from local queue to ORC1
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC1&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC1&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC1&#39; ||
        &#39;@ORC1.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC1.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;LOCATIONS&#34; from local queue to ORC1
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC1&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC1&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC1&#39; ||
        &#39;@ORC1.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC1.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;REGIONS&#34; from local queue to ORC1
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC1&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC1&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC1&#39; ||
        &#39;@ORC1.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
--
-- Propagation from local queue to ORC2.EXAMPLE.COM
--
begin
  if :local_db != &#39;ORC2.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;COUNTRIES&#34; from local queue to ORC2
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC2&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC2&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC2&#39; ||
        &#39;@ORC2.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC2.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;DEPARTMENTS&#34; from local queue to ORC2
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC2&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC2&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC2&#39; ||
        &#39;@ORC2.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC2.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;EMPLOYEES&#34; from local queue to ORC2
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC2&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC2&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC2&#39; ||
        &#39;@ORC2.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC2.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;JOBS&#34; from local queue to ORC2
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC2&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC2&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC2&#39; ||
        &#39;@ORC2.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC2.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;JOB_HISTORY&#34; from local queue to ORC2
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC2&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC2&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC2&#39; ||
        &#39;@ORC2.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC2.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;LOCATIONS&#34; from local queue to ORC2
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC2&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC2&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC2&#39; ||
        &#39;@ORC2.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC2.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;REGIONS&#34; from local queue to ORC2
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC2&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC2&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC2&#39; ||
        &#39;@ORC2.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
--
-- Propagation from local queue to ORC3.EXAMPLE.COM
--
begin
  if :local_db != &#39;ORC3.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;COUNTRIES&#34; from local queue to ORC3
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC3&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC3&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC3&#39; ||
        &#39;@ORC3.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC3.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;DEPARTMENTS&#34; from local queue to ORC3
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC3&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC3&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC3&#39; ||
        &#39;@ORC3.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC3.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;EMPLOYEES&#34; from local queue to ORC3
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC3&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC3&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC3&#39; ||
        &#39;@ORC3.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC3.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;JOBS&#34; from local queue to ORC3
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC3&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC3&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC3&#39; ||
        &#39;@ORC3.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC3.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;JOB_HISTORY&#34; from local queue to ORC3
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC3&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC3&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC3&#39; ||
        &#39;@ORC3.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC3.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;LOCATIONS&#34; from local queue to ORC3
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC3&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC3&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC3&#39; ||
        &#39;@ORC3.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
begin
  if :local_db != &#39;ORC3.EXAMPLE.COM&#39; then
    --
    -- HR_REPG: Propagate &#34;REGIONS&#34; from local queue to ORC3
    --
    dbms_streams_adm.add_table_propagation_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
      streams_name =&gt; &#39;&amp;PROP_ORC3&#39;,
      source_queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      destination_queue_name =&gt; &#39;&amp;QUEUE_OWNER_ORC3&#39; ||
        &#39;.&#39; || &#39;&amp;QUEUE_ORC3&#39; ||
        &#39;@ORC3.EXAMPLE.COM&#39;,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; :local_db);
  end if;
end;
/
 
-------------------------------
-- Setup Capture
-------------------------------
begin
  --
  -- HR_REPG : Add &#34;COUNTRIES&#34;
  --
  dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
    streams_type =&gt; &#39;CAPTURE&#39;,
    streams_name =&gt; &#39;&amp;CAPTURE_NAME&#39;,
    queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
    include_dml =&gt; TRUE,
    include_ddl =&gt; FALSE,
    include_tagged_lcr =&gt; FALSE,
    source_database =&gt; :local_db);
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;DEPARTMENTS&#34;
  --
  dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
    streams_type =&gt; &#39;CAPTURE&#39;,
    streams_name =&gt; &#39;&amp;CAPTURE_NAME&#39;,
    queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
    include_dml =&gt; TRUE,
    include_ddl =&gt; FALSE,
    include_tagged_lcr =&gt; FALSE,
    source_database =&gt; :local_db);
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;EMPLOYEES&#34;
  --
  dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
    streams_type =&gt; &#39;CAPTURE&#39;,
    streams_name =&gt; &#39;&amp;CAPTURE_NAME&#39;,
    queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
    include_dml =&gt; TRUE,
    include_ddl =&gt; FALSE,
    include_tagged_lcr =&gt; FALSE,
    source_database =&gt; :local_db);
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;JOBS&#34;
  --
  dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
    streams_type =&gt; &#39;CAPTURE&#39;,
    streams_name =&gt; &#39;&amp;CAPTURE_NAME&#39;,
    queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
    include_dml =&gt; TRUE,
    include_ddl =&gt; FALSE,
    include_tagged_lcr =&gt; FALSE,
    source_database =&gt; :local_db);
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;JOB_HISTORY&#34;
  --
  dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
    streams_type =&gt; &#39;CAPTURE&#39;,
    streams_name =&gt; &#39;&amp;CAPTURE_NAME&#39;,
    queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
    include_dml =&gt; TRUE,
    include_ddl =&gt; FALSE,
    include_tagged_lcr =&gt; FALSE,
    source_database =&gt; :local_db);
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;LOCATIONS&#34;
  --
  dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
    streams_type =&gt; &#39;CAPTURE&#39;,
    streams_name =&gt; &#39;&amp;CAPTURE_NAME&#39;,
    queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
    include_dml =&gt; TRUE,
    include_ddl =&gt; FALSE,
    include_tagged_lcr =&gt; FALSE,
    source_database =&gt; :local_db);
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;REGIONS&#34;
  --
  dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
    streams_type =&gt; &#39;CAPTURE&#39;,
    streams_name =&gt; &#39;&amp;CAPTURE_NAME&#39;,
    queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
    include_dml =&gt; TRUE,
    include_ddl =&gt; FALSE,
    include_tagged_lcr =&gt; FALSE,
    source_database =&gt; :local_db);
end;
/
 
-------------------------------
-- Setup Apply
-------------------------------
--
-- Setup Apply from ORC1.EXAMPLE.COM
--
 
begin
  --
  -- HR_REPG : Add &#34;COUNTRIES&#34; to apply rules for apply from
  -- ORC1.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC1&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC1.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;DEPARTMENTS&#34; to apply rules for apply from
  -- ORC1.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC1&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC1.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;EMPLOYEES&#34; to apply rules for apply from
  -- ORC1.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC1&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC1.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;JOBS&#34; to apply rules for apply from
  -- ORC1.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC1&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC1.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;JOB_HISTORY&#34; to apply rules for apply from
  -- ORC1.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC1&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC1.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;LOCATIONS&#34; to apply rules for apply from
  -- ORC1.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC1&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC1.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;REGIONS&#34; to apply rules for apply from
  -- ORC1.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC1.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC1&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC1.EXAMPLE.COM&#39;);
  end if;
end;
/
 
--
-- Setup Apply from ORC2.EXAMPLE.COM
--
 
begin
  --
  -- HR_REPG : Add &#34;COUNTRIES&#34; to apply rules for apply from
  -- ORC2.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC2&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC2.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;DEPARTMENTS&#34; to apply rules for apply from
  -- ORC2.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC2&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC2.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;EMPLOYEES&#34; to apply rules for apply from
  -- ORC2.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC2&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC2.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;JOBS&#34; to apply rules for apply from
  -- ORC2.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC2&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC2.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;JOB_HISTORY&#34; to apply rules for apply from
  -- ORC2.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC2&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC2.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;LOCATIONS&#34; to apply rules for apply from
  -- ORC2.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC2&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC2.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;REGIONS&#34; to apply rules for apply from
  -- ORC2.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC2.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC2&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC2.EXAMPLE.COM&#39;);
  end if;
end;
/
 
--
-- Setup Apply from ORC3.EXAMPLE.COM
--
 
begin
  --
  -- HR_REPG : Add &#34;COUNTRIES&#34; to apply rules for apply from
  -- ORC3.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;COUNTRIES&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC3&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC3.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;DEPARTMENTS&#34; to apply rules for apply from
  -- ORC3.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC3&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC3.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;EMPLOYEES&#34; to apply rules for apply from
  -- ORC3.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC3&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC3.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;JOBS&#34; to apply rules for apply from
  -- ORC3.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOBS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC3&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC3.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;JOB_HISTORY&#34; to apply rules for apply from
  -- ORC3.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;JOB_HISTORY&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC3&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC3.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;LOCATIONS&#34; to apply rules for apply from
  -- ORC3.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;LOCATIONS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC3&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC3.EXAMPLE.COM&#39;);
  end if;
end;
/
 
begin
  --
  -- HR_REPG : Add &#34;REGIONS&#34; to apply rules for apply from
  -- ORC3.EXAMPLE.COM
  --
  if(:local_db != &#39;ORC3.EXAMPLE.COM&#39;) then
    dbms_streams_adm.add_table_rules(
      table_name =&gt; &#39;&#34;HR&#34;.&#34;REGIONS&#34;&#39;,
      streams_type =&gt; &#39;APPLY&#39;,
      streams_name =&gt; &#39;&amp;APPLY_ORC3&#39;,
      queue_name =&gt; :local_queue_owner || &#39;.&#39; || :local_queue,
      include_dml =&gt; TRUE,
      include_ddl =&gt; FALSE,
      include_tagged_lcr =&gt; FALSE,
      source_database =&gt; &#39;ORC3.EXAMPLE.COM&#39;);
  end if;
end;
/
 
-------------------------------
-- Add Supplemental Log Groups
-------------------------------
--
-- ** NOTE ** --
-- The primary key columns must be supplementally logged.
--
alter database add supplemental log data (primary key) columns;
 
--
-- ** NOTE ** --
-- The unique key columns must be supplementally logged.
--
alter database add supplemental log data (unique index) columns;
 
--
-- ** NOTE ** --
-- All the columns in a column group that is assigned an Oracle Streams
-- supported update conflict handler must be supplementally logged.
--
 
-- Supplementally log columns in column group &#39;COUNTRIES_TIMESTAMP_CG&#39;
-- that is assigned the LATEST TIMESTAMP update conflict resolution method.
alter table &#34;HR&#34;.&#34;COUNTRIES&#34; add supplemental log group COUNTRIES_LogGrp1 (
&#34;COUNTRY_NAME&#34;
,&#34;REGION_ID&#34;
,&#34;TIMESTAMP&#34;
);
 
-------------------------------
-- Setup Conflict Resolution
-------------------------------
--
-- ** WARNING ** --
-- Oracle Streams does not support LATEST TIMESTAMP
-- conflict resolution method.
-- Changing LATEST TIMESTAMP to MAXIMUM as
-- they handle the conflicts in a similar manner.
--
declare
  cols dbms_utility.name_array;
begin
  cols(1) := &#39;COUNTRY_NAME&#39;;
  cols(2) := &#39;REGION_ID&#39;;
  cols(3) := &#39;TIMESTAMP&#39;;
  dbms_apply_adm.set_update_conflict_handler(
    object_name =&gt; &#39;HR.COUNTRIES&#39;,
    method_name =&gt; &#39;MAXIMUM&#39;,
    resolution_column =&gt; &#39;TIMESTAMP&#39;,
    column_list =&gt; cols);
end;
/
 
-------------------------------
-- Verify Oracle Streams Setup
-------------------------------
 
-- Verify creation of queues
select * from dba_queues
 where name = upper(:local_queue)
   and owner = upper(:local_queue_owner)
   and queue_table = upper(:local_queue_table)
 order by name;
 
-- Verify creation of capture_process
select * from dba_capture
 where capture_name = upper(&#39;&amp;CAPTURE_NAME&#39;);
 
-- Verify creation of apply processes
select * from dba_apply
 where apply_name IN (
       upper(&#39;&amp;APPLY_ORC1&#39;),
       upper(&#39;&amp;APPLY_ORC2&#39;),
       upper(&#39;&amp;APPLY_ORC3&#39;) )
 order by apply_name;
 
-- Verify propagation processes
select * from dba_propagation
 where propagation_name IN (
       upper(&#39;&amp;PROP_ORC1&#39;),
       upper(&#39;&amp;PROP_ORC2&#39;),
       upper(&#39;&amp;PROP_ORC3&#39;) )
 order by propagation_name;
 
-- Verify Oracle Streams rules
select * from dba_streams_table_rules
 where streams_name = upper(&#39;&amp;CAPTURE_NAME&#39;);
 
select * from dba_streams_table_rules
 where streams_name IN (
       upper(&#39;&amp;APPLY_ORC1&#39;),
       upper(&#39;&amp;APPLY_ORC2&#39;),
       upper(&#39;&amp;APPLY_ORC3&#39;) )
 order by source_database;
 
select * from dba_streams_table_rules
 where streams_name IN (
       upper(&#39;&amp;PROP_ORC1&#39;),
       upper(&#39;&amp;PROP_ORC2&#39;),
       upper(&#39;&amp;PROP_ORC3&#39;) )
 order by source_database;
 
-- Do not resume Repcat activity once Oracle Streams is set up.
-- Drop all the repgroups that have been migrated to Oracle Streams.
-- Start apply and capture processes at all sites.
</pre></div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment91">
<tr>
<td class="cellalignment98">
<table class="cellalignment96">
<tr>
<td class="cellalignment95"><a href="ptrep_ap.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment95"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment100">
<table class="cellalignment94">
<tr>
<td class="cellalignment95"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment95"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment95"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment95"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment95"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment95"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>