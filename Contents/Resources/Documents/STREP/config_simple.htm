<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-104193"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Simple%20Oracle%20Streams%20Replication%20Configuration"></a><title>Simple Oracle Streams Replication Configuration</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1044"/>
<meta name="dcterms.created" content="2015-02-12T7:14:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Streams Replication Administrator&#39;s Guide"/>
<meta name="dcterms.identifier" content="E53118-02"/>
<meta name="dcterms.isVersionOf" content="STREP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="prep_rep.htm" title="Previous" type="text/html"/>
<link rel="Next" href="config_flex.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53118-02.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/28</span> <!-- End Header -->
<div id="STREP056" class="chapter"><a id="CACFECJJ"></a>
<h1 class="chapter"><span class="secnum">2</span> Simple Oracle Streams Replication Configuration</h1>
<p><a id="sthref132"></a><a id="sthref133"></a>This chapter describes simple methods for configuring Oracle Streams replication.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#CACIAHGH">Configuring Replication Using the Setup Streams Replication Wizard</a></p>
</li>
<li>
<p><a href="#CACJHHAA">Configuring Replication Using the DBMS_STREAMS_ADM Package</a></p>
</li>
</ul>
<a id="CACIAHGH"></a>
<div id="STREP252" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Configuring Replication Using the Setup Streams Replication Wizard<a id="sthref134"></a></h2>
<p>The Oracle Streams tool in Oracle Enterprise Manager Cloud Control includes a Setup Streams Replication Wizard that configures an Oracle Streams replication environment. Using this wizard, you can configure an Oracle Streams replication environment with any of the following characteristics:</p>
<ul>
<li>
<p>Replicate changes to the entire source database, selected schemas in the source database, selected tablespaces in the source database, selected tables in the source database, or subsets of tables in the source database</p>
</li>
<li>
<p>Maintain data manipulation language (DML) changes, data definition language (DDL) changes, or both.</p>
</li>
<li>
<p>One-way or bi-directional replication</p>
</li>
<li>
<p>Local capture or downstream capture</p>
</li>
</ul>
<p>The wizard walks you through the process of configuring your replication environment, and you can run the wizard multiple times to configure a replication environment with more than two databases. There are some limits to the types of replication environments that can be configured with the wizard. For example, the wizard currently cannot configure synchronous capture.</p>
<p>You can choose to configure the Oracle Streams replication environment immediately, or you can use the wizard to generate a script. When you generate a script, you can review the script, and edit the script if necessary, before running the script to configure the replication environment.</p>
<p>To open the wizard, complete the following steps in Oracle Enterprise Manager Cloud Control:</p>
<ol>
<li>
<p>Review the decisions described in <a href="prep_rep.htm#CACJBCAE">&#34;Decisions to Make Before Configuring Oracle Streams Replication&#34;</a>. Make these decisions about the Oracle Streams replication environment before proceeding.</p>
</li>
<li>
<p>Complete the tasks to prepare for the Oracle Streams replication environment. See <a href="prep_rep.htm#CACGBCIB">&#34;Tasks to Complete Before Configuring Oracle Streams Replication&#34;</a>.</p>
<p>The wizard completes some tasks automatically, but you must complete the following tasks manually:</p>
<ul>
<li>
<p>Configure an Oracle Streams administrator at both databases. See <a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a>. If you have not done so already, you must click the <span class="bold">Streams Administrator user</span> link after you open the Streams page in Step <a href="#CIADJFEB">6</a> to configure the Oracle Streams administrator to manage Oracle Streams using Oracle Enterprise Manager Cloud Control.</p>
</li>
<li>
<p>Configure network connectivity between the two databases. See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a>.</p>
</li>
<li>
<p>Ensure that any database that will be a source database is in <code dir="ltr">ARCHIVELOG</code> mode. If you are configuring bi-directional replication, then both databases must be in <code dir="ltr">ARCHIVELOG</code> mode. See <a href="prep_rep.htm#CACCBEBG">&#34;Ensuring That Each Source Database Is In ARCHIVELOG Mode&#34;</a>.</p>
</li>
<li>
<p>Ensure that the initialization parameters are set properly at both databases. See <a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a>.</p>
</li>
<li>
<p>Configure the Oracle Streams pool properly at both databases. See <a href="prep_rep.htm#BABBFJEB">&#34;Configuring the Oracle Streams Pool&#34;</a>.</p>
</li>
</ul>
</li>
<li>
<p>In Oracle Enterprise Manager Cloud Control, log in to the database as the Oracle Streams administrator. Log in to a database that will be a source database in the replication environment.</p>
</li>
<li>
<p>Go to the Database Home page.</p>
</li>
<li>
<p>Click <span class="bold">Data Movement</span> to open the Data Movement subpage.</p>
</li>
<li id="CIADJFEB">
<p>Click <span class="bold">Setup</span> in the <span class="bold">Streams</span> section to open the Streams page.</p>
<img width="885" height="484" src="img/strep_setup.gif" alt="Description of strep_setup.gif follows"/><br/>
<a id="sthref135" href="img_text/strep_setup.htm">Description of the illustration strep_setup.gif</a><br/>
<br/></li>
<li>
<p>In the Setup Streams Replication section, select the option for the type of replication environment you want to configure.</p>
</li>
<li id="CACBGEIB">
<p>In the Host Credentials section, enter the username and password for the host computer that runs the source database.</p>
</li>
<li>
<p>Click Continue to open the Setup Streams Replication wizard.</p>
<p>Here is the first wizard page when you select Replicate Tables on the Streams page.</p>
<img width="846" height="322" src="img/strep_wizard.gif" alt="Description of strep_wizard.gif follows"/><br/>
<a id="sthref136" href="img_text/strep_wizard.htm">Description of the illustration strep_wizard.gif</a><br/>
<br/></li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
By default, the Setup Streams Replication Wizard configures one-way replication. To configure bi-directional replication, open the Advanced Options section on the Replication Options page and select <span class="bold">Setup Bi-directional replication</span>. If bi-directional replication is configured, then conflict resolution might be required.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>The Oracle Enterprise Manager Cloud Control online help for examples that configure an Oracle Streams replication environment with the wizard</p>
</li>
<li>
<p><a href="prep_rep.htm#BABFCICA">&#34;Decide Which Type of Replication Environment to Configure&#34;</a></p>
</li>
<li>
<p><a href="conflict.htm#g1013001">Chapter 9, &#34;Oracle Streams Conflict Resolution&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CACJHHAA"></a>
<div id="STREP020" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Configuring Replication Using the DBMS_STREAMS_ADM Package<a id="sthref137"></a><a id="sthref138"></a><a id="sthref139"></a><a id="sthref140"></a><a id="sthref141"></a><a id="sthref142"></a><a id="sthref143"></a><a id="sthref144"></a></h2>
<p>You can configure an Oracle Streams replication environment using procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package.</p>
<p>The following sections contain information about these procedures, instructions for preparing to run one of these procedures, and examples that illustrate common scenarios:</p>
<ul>
<li>
<p><a href="#CIAGICDC">The Oracle Streams Replication Configuration Procedures</a></p>
</li>
<li>
<p><a href="#CIAFGEGA">Important Considerations for the Configuration Procedures</a></p>
</li>
<li>
<p><a href="#CACHFABG">Creating the Required Directory Objects</a></p>
</li>
<li>
<p><a href="#CIABHACH">Examples That Configure Two-Database Replication with Local Capture</a></p>
</li>
<li>
<p><a href="#CIAFJECH">Examples That Configure Two-Database Replication with Downstream Capture</a></p>
</li>
<li>
<p><a href="#CACCGDDC">Example That Configures Two-Database Replication with Synchronous Captures</a></p>
</li>
<li>
<p><a href="#CIAFABEC">Example That Configures Hub-and-Spoke Replication</a></p>
</li>
<li>
<p><a href="#CIAGFIGG">Monitoring Oracle Streams Configuration Progress</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS305" href="../ARPLS/d_streams_adm.htm#ARPLS305"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about these procedures</div>
<a id="CIAGICDC"></a>
<div id="STREP606" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">The Oracle Streams Replication Configuration Procedures</h3>
<p>The easiest way to configure an Oracle Streams replication environment is by running one of the following configuration procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package:</p>
<ul>
<li>
<p><a class="olink ARPLS825" href="../ARPLS/d_streams_adm.htm#ARPLS825"><code dir="ltr">MAINTAIN_GLOBAL</code></a> configures an Oracle Streams environment that replicates changes at the database level between two databases.</p>
</li>
<li>
<p><a class="olink ARPLS826" href="../ARPLS/d_streams_adm.htm#ARPLS826"><code dir="ltr">MAINTAIN_SCHEMAS</code></a> configures an Oracle Streams environment that replicates changes to specified schemas between two databases.</p>
</li>
<li>
<p><a class="olink ARPLS863" href="../ARPLS/d_streams_adm.htm#ARPLS863"><code dir="ltr">MAINTAIN_SIMPLE_TTS</code></a> clones a simple tablespace from a source database at a destination database and uses Oracle Streams to maintain this tablespace at both databases.</p>
</li>
<li>
<p><a class="olink ARPLS827" href="../ARPLS/d_streams_adm.htm#ARPLS827"><code dir="ltr">MAINTAIN_TABLES</code></a> configures an Oracle Streams environment that replicates changes to specified tables between two databases.</p>
</li>
<li>
<p><a class="olink ARPLS864" href="../ARPLS/d_streams_adm.htm#ARPLS864"><code dir="ltr">MAINTAIN_TTS</code></a> clones a set of tablespaces from a source database at a destination database and uses Oracle Streams to maintain these tablespaces at both databases.</p>
</li>
<li>
<p><a class="olink ARPLS831" href="../ARPLS/d_streams_adm.htm#ARPLS831"><code dir="ltr">PRE_INSTANTIATION_SETUP</code></a> and <a class="olink ARPLS830" href="../ARPLS/d_streams_adm.htm#ARPLS830"><code dir="ltr">POST_INSTANTIATION_SETUP</code></a> configure an Oracle Streams environment that replicates changes either at the database level or to specified tablespaces between two databases. These procedures must be used together, and instantiation actions must be performed manually, to complete the Oracle Streams replication configuration. Typically, these procedures are used to perform database maintenance operations with little or no down time. See <a class="olink STRMS165" href="../STRMS/ap_strmnt.htm#STRMS165"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information.</p>
</li>
</ul>
<p>These procedures configure two databases at a time, and they require you to specify one database as the source database and the other database as the destination database. They can configure a replication environment with more than two databases by running them multiple times.</p>
<p><a href="#CIHHABAI">Table 2-1</a> describes the required parameters for these procedures.</p>
<div id="STREP607" class="tblformalwide">
<p class="titleintable"><a id="sthref145"></a><a id="CIHHABAI"></a>Table 2-1 Required Parameters for the Oracle Streams Replication Configuration Procedures</p>
<table class="cellalignment103" title="Required Parameters for the Oracle Streams Replication Configuration Procedures" summary="This table lists each required parameter, the procedures in which the parameter is required, and a desription of the parameter." dir="ltr">
<thead>
<tr class="cellalignment92">
<th class="cellalignment104" id="r1c1-t5">Parameter</th>
<th class="cellalignment104" id="r1c2-t5">Procedure</th>
<th class="cellalignment104" id="r1c3-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment92">
<td class="cellalignment98" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">source_directory_object</code></p>
</td>
<td class="cellalignment98" headers="r2c1-t5 r1c2-t5">
<p>All procedures</p>
</td>
<td class="cellalignment98" headers="r2c1-t5 r1c3-t5">
<p>The directory object for the directory on the computer system running the source database into which the generated Data Pump export dump file is placed.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">destination_directory_object</code></p>
</td>
<td class="cellalignment98" headers="r3c1-t5 r1c2-t5">
<p>All procedures</p>
</td>
<td class="cellalignment98" headers="r3c1-t5 r1c3-t5">
<p>The directory object for the directory on the computer system running the destination database into which the generated Data Pump export dump file is transferred. The dump file is used to instantiate the replicated database objects at the destination database.</p>
<p><span class="bold">Note:</span> The specified directory object cannot point to an Automatic Storage Management (ASM) disk group.</p>
</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">source_database</code></p>
</td>
<td class="cellalignment98" headers="r4c1-t5 r1c2-t5">
<p>All procedures</p>
</td>
<td class="cellalignment98" headers="r4c1-t5 r1c3-t5">
<p>The global name of the source database. The specified database must contain the database objects to be replicated.</p>
</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r5c1-t5" headers="r1c1-t5">
<p><code dir="ltr">destination_database</code></p>
</td>
<td class="cellalignment98" headers="r5c1-t5 r1c2-t5">
<p>All procedures</p>
</td>
<td class="cellalignment98" headers="r5c1-t5 r1c3-t5">
<p>The global name of the destination database. The database objects to be replicated are optional at the destination database. If they do not exist at the destination database, then they are instantiated by Data Pump export/import.</p>
<p>If the local database is not the destination database, then a database link from the local database to the destination database, with the same name as the global name of the destination database, must exist and must be accessible to the user who runs the procedure.</p>
</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r6c1-t5" headers="r1c1-t5">
<p><code dir="ltr">schema_names</code></p>
</td>
<td class="cellalignment98" headers="r6c1-t5 r1c2-t5">
<p><code dir="ltr">MAINTAIN_SCHEMAS</code> only</p>
</td>
<td class="cellalignment98" headers="r6c1-t5 r1c3-t5">
<p>The schemas to be configured for replication.</p>
</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r7c1-t5" headers="r1c1-t5">
<p><code dir="ltr">tablespace_name</code></p>
</td>
<td class="cellalignment98" headers="r7c1-t5 r1c2-t5">
<p><code dir="ltr">MAINTAIN_SIMPLE_TTS</code> only</p>
</td>
<td class="cellalignment98" headers="r7c1-t5 r1c3-t5">
<p>The tablespace to be configured for replication.</p>
</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r8c1-t5" headers="r1c1-t5">
<p><code dir="ltr">table_names</code></p>
</td>
<td class="cellalignment98" headers="r8c1-t5 r1c2-t5">
<p><code dir="ltr">MAINTAIN_TABLES</code> only</p>
</td>
<td class="cellalignment98" headers="r8c1-t5 r1c3-t5">
<p>The tables to be configured for replication.</p>
</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r9c1-t5" headers="r1c1-t5">
<p><code dir="ltr">tablespace_names</code></p>
</td>
<td class="cellalignment98" headers="r9c1-t5 r1c2-t5">
<p><code dir="ltr">MAINTAIN_TTS</code> only</p>
</td>
<td class="cellalignment98" headers="r9c1-t5 r1c3-t5">
<p>The tablespaces to be configured for replication.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<p>In addition, each of these procedures has several optional parameters. The <code dir="ltr">bi_directional</code> parameter is an important optional parameter. If you want changes to the replicated database objects to be captured at each database and sent to the other database, then the <code dir="ltr">bi_directional</code> parameter must be set to <code dir="ltr">TRUE</code>. The default setting for this parameter is <code dir="ltr">FALSE</code>. When the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">FALSE</code>, the procedures configure a one-way replication environment, where the changes made at the destination database are not captured.</p>
<p>These procedures perform several tasks to configure an Oracle Streams replication environment. These tasks include:</p>
<ul>
<li>
<p>Configure supplemental logging for the replicated database objects at the source database.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then configure supplemental logging for the replicated database objects at the destination database.</p>
</li>
<li>
<p>Instantiate the database objects at the destination database. If the database objects do not exist at the destination database, then the procedures use Data Pump export/import to instantiate them at the destination database.</p>
</li>
<li>
<p>Configure a capture process to capture changes to the replicated database objects at the source database. This capture process can be a local capture process or a downstream capture process. If the procedure is run at the database specified in the <code dir="ltr">source_database</code> parameter, then the procedure configures a local capture process on this database. If the procedure is run at a database other than the database specified in the <code dir="ltr">source_database</code> parameter, then the procedure configures a downstream capture process on the database that runs the procedure.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then configure a capture process to capture changes to the replicated database objects at the destination database. This capture process must be a local capture process.</p>
</li>
<li>
<p>Configure one or more queues at each database to store captured changes.</p>
</li>
<li>
<p>Configure a propagation to send changes made to the database objects at the source database to the destination database.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then configure a propagation to send changes made to the database objects at the destination database to the source database</p>
</li>
<li>
<p>Configure an apply process at the destination database to apply changes from the source database.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then configure an apply process at the source database to apply changes from the destination database.</p>
</li>
<li>
<p>Configure rule sets and rules for each capture process, propagation, and apply process. The rules instruct the Oracle Streams clients to replicate changes to the specified database objects.</p>
</li>
<li>
<p>Set the instantiation SCN for the replicated database objects at the destination database.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then set the instantiation SCN for the replicated database objects at the source database.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
To view all of the actions performed by one of these procedures in detail, use the procedure to generate a script, and view the script in a text editor. You can use the <code dir="ltr">perform_actions</code>, <code dir="ltr">script_name</code>, and <code dir="ltr">script_directory_object</code> parameters to generate a script.</div>
<p>These procedures always configure tags for a hub-and-spoke replication environment. The following are important considerations about these procedures and tags:</p>
<ul>
<li>
<p>If you are configuring a two-database replication environment, then you can use these procedures to configure it. These procedures configure tags in a two-database environment to avoid change cycling. If you plan to expand the replication environment beyond two databases in the future, then it is important to understand how the tags are configured. If the expanded database environment is not a hub-and-spoke environment, then you might need to modify the tags to avoid change cycling.</p>
</li>
<li>
<p>If you are configuring a replication environment that involves three or more databases, then these procedures can only be used to configure a hub-and-spoke replication environment. These procedures configure tags in a hub-and-spoke environment to avoid change cycling.</p>
</li>
<li>
<p>If you are configuring an n-way replication environment, then do not use these procedures to configure it. Change cycling might result if you do so.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Currently, these configuration procedures configure only capture processes to capture changes. You cannot use these procedures to configure a replication environment that uses synchronous captures. You can configure a synchronous capture using the <a class="olink ARPLS308" href="../ARPLS/d_streams_adm.htm#ARPLS308"><code dir="ltr">ADD_TABLE_RULES</code></a> and <a class="olink ARPLS329" href="../ARPLS/d_streams_adm.htm#ARPLS329"><code dir="ltr">ADD_SUBSET_RULES</code></a> procedures in the <a class="olink ARPLS305" href="../ARPLS/d_streams_adm.htm#ARPLS305"><code dir="ltr">DBMS_STREAMS_ADM</code></a> package.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ARPLS878" href="../ARPLS/d_streams_adm.htm#ARPLS878"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package</p>
</li>
<li>
<p><a href="rep_tags.htm#g1014437">Chapter 10, &#34;Oracle Streams Tags&#34;</a></p>
</li>
<li>
<p><a href="prep_rep.htm#BABFCICA">&#34;Decide Which Type of Replication Environment to Configure&#34;</a></p>
</li>
<li>
<p><a class="olink STRMS" href="../STRMS/toc.htm"><span class="italic">Oracle Streams Concepts and Administration</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CIAFGEGA"></a>
<div id="STREP258" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Important Considerations for the Configuration Procedures</h3>
<p>This section describes important considerations for the configuration procedures. It also discusses several procedure parameters related to these considerations.</p>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#CIAJCEFJ">Local or Downstream Capture for the Source Database</a></p>
</li>
<li>
<p><a href="#CACGFCIG">Perform Configuration Actions Directly or With a Script</a></p>
</li>
<li>
<p><a href="#CIAJBBDC">Oracle Streams Components Configured by These Procedures</a></p>
</li>
<li>
<p><a href="#CIAFJGAG">One-Way or Bi-Directional Replication</a></p>
</li>
<li>
<p><a href="#CIAJGGBA">Data Definition Language (DDL) Changes</a></p>
</li>
<li>
<p><a href="#CACBGGGB">Instantiation</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS305" href="../ARPLS/d_streams_adm.htm#ARPLS305"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about all of the parameters in these procedures</div>
<a id="CIAJCEFJ"></a>
<div id="STREP259" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Local or Downstream Capture for the Source Database<a id="sthref146"></a><a id="sthref147"></a><a id="sthref148"></a><a id="sthref149"></a><a id="sthref150"></a></h4>
<p>These procedures can either configure local capture or downstream capture for the database specified in the <code dir="ltr">source_database</code> parameter. The database that captures changes made to the source database is called the capture database. See <a href="prep_rep.htm#CACJGEFE">&#34;Decide Whether to Configure Local or Downstream Capture for the Source Database&#34;</a> for more information.</p>
<p>The database on which the procedure is run is configured as the capture database for changes made to the source database. Therefore, to configure local capture at the source database, run the procedure at the source database. To configure downstream capture at the destination database, run the procedure at the database specified in the <code dir="ltr">destination_database</code> parameter. To configure downstream capture at the at a third database, run the procedure at a database that is not specified in the <code dir="ltr">source_database</code> or <code dir="ltr">destination_database</code> parameter.</p>
<p>If the source database or a third database is the capture database, then these procedures configure a propagation to send changes from the capture database to the destination database. If the destination database is the capture database and you are not configuring bi-directional replication, then this propagation between databases is not needed. In this case, the propagation is not configured if the <code dir="ltr">capture_queue_name</code> and <code dir="ltr">apply_queue_name</code> parameters have the same value. If these values are different, then a propagation is configured between the two queues within the destination database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>When these procedures configure downstream capture, they always configure archived-log downstream capture. These procedures do not configure real-time downstream capture. However, you can configure redo transport services for real-time downstream capture before running a procedure, and then set the <code dir="ltr">downstream_real_time_mine</code> capture process parameter to <code dir="ltr">Y</code> after the procedure completes. You can also modify the scripts generated by these procedures to configure real-time downstream capture.</p>
</li>
<li>
<p>If these procedures configure bi-directional replication, then the capture process for the destination database always is a local capture process. That is, these procedures always configure the capture process for changes made to the destination database to run on the destination database.</p>
</li>
<li>
<p>Synchronous capture cannot be configured with the configuration procedures.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="prep_rep.htm#CACDCDJG">&#34;Decide Whether Changes Are Allowed at One Database or at Multiple Databases&#34;</a> and <a href="#CIAFJGAG">&#34;One-Way or Bi-Directional Replication&#34;</a> for more information about bi-directional replication</p>
</li>
<li>
<p><a href="#CIAJBBDC">&#34;Oracle Streams Components Configured by These Procedures&#34;</a></p>
</li>
<li>
<p><a class="olink STRMS129" href="../STRMS/strms_capture.htm#STRMS129"><span class="italic">Oracle Streams Concepts and Administration</span></a> for information about local capture and downstream capture</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CACGFCIG"></a>
<div id="STREP260" class="sect3">
<h4 class="sect3">Perform Configuration Actions Directly or With a Script<a id="sthref151"></a></h4>
<p>These procedures can configure the Oracle Streams replication environment directly, or they can generate a script that configures the environment. Using a procedure to configure replication directly is simpler than running a script, and the environment is configured immediately. However, you might choose to generate a script for the following reasons:</p>
<ul>
<li>
<p>You want to review the actions performed by the procedure before configuring the environment.</p>
</li>
<li>
<p>You want to modify the script to customize the configuration.</p>
</li>
</ul>
<p>For example, you might want an apply process to use apply handlers for customized processing of the changes to certain tables before applying these changes. In this case, you can use the procedure to generate a script and modify the script to add the apply handlers.</p>
<p>You also might want to maintain DML changes for several tables, but you might want to maintain DDL changes for a subset of these tables. In this case, you can generate a script by running the <code dir="ltr">MAINTAIN_TABLES</code> procedure with the <code dir="ltr">include_ddl</code> parameter set to <code dir="ltr">FALSE</code>. You can modify the script to maintain DDL changes for the appropriate tables.</p>
<p>The <code dir="ltr">perform_actions</code> parameter controls whether the procedure configures the replication environment directly:</p>
<ul>
<li>
<p>To configure an Oracle Streams replication environment directly when you run one of these procedures, set the <code dir="ltr">perform_actions</code> parameter to <code dir="ltr">TRUE</code>. The default value for this parameter is <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p>To generate a configuration script when you run one of these procedures, set the <code dir="ltr">perform_actions</code> parameter to <code dir="ltr">FALSE</code>, and use the <code dir="ltr">script_name</code> and <code dir="ltr">script_directory_object</code> parameters to specify the name and location of the configuration script.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">script_directory_object</code> parameter cannot point to an Automatic Storage Management (ASM) disk group.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="prep_rep.htm#BABBHGIH">&#34;Decide Whether the Replication Environment Will Use Apply Handlers&#34;</a></p>
</li>
<li>
<p><a href="#CIAJGGBA">&#34;Data Definition Language (DDL) Changes&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CIAJBBDC"></a>
<div id="STREP210" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Oracle Streams Components Configured by These Procedures</h4>
<p>These procedures configure the following Oracle Streams clients:</p>
<ul>
<li>
<p>These procedures configure a capture process that captures changes to the source database. If bi-directional replication is configured, then these procedures also configure a capture process that captures changes to the destination database.</p>
</li>
<li>
<p>If the capture database and the destination database are different databases, then these procedures configure a propagation that sends changes from the capture database to the destination database.</p>
</li>
<li>
<p>If the capture database and the destination database are the same database, then the queue names determine whether a propagation is created:</p>
<ul>
<li>
<p>If the <code dir="ltr">capture_queue_name</code> and <code dir="ltr">apply_queue_name</code> parameters specify different queue names, then a propagation is created between the two queues within the destination database.</p>
</li>
<li>
<p>If the <code dir="ltr">capture_queue_name</code> and <code dir="ltr">apply_queue_name</code> parameters specify the same queue name, then a propagation is not created, and the downstream capture process and the apply process use the same queue. This configuration is possible only if the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">FALSE</code> to configure a single source replication environment.</p>
</li>
</ul>
</li>
<li>
<p>If bi-directional replication is configured, then these procedures configure a propagation that sends changes from the destination database to the source database.</p>
</li>
<li>
<p>These procedures configure an apply process that applies changes at the destination database. These changes originated at the source database. If bi-directional replication is configured, then these procedures also configure an apply process that applies changes to the source database. These changes originated at the destination database.</p>
</li>
</ul>
<p>By default, the <code dir="ltr">capture_queue_name</code> and <code dir="ltr">apply_queue_name</code> parameters are set to <code dir="ltr">NULL</code>. When these parameters are set to <code dir="ltr">NULL</code>, these procedures configure a separate queue for each capture process and apply process. The Oracle Streams replication environment might operate more efficiently if each Oracle Streams client has its own separate queue.</p>
<p>However, two Oracle Streams clients share a queue in the following configurations:</p>
<ul>
<li>
<p>The configuration described previously in this section in which the downstream capture process and the apply process at the destination database share a queue.</p>
</li>
<li>
<p>A configuration in which all of the following conditions are met:</p>
<ul>
<li>
<p>The capture database is the source database or a third database.</p>
</li>
<li>
<p>The <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p>The same queue name is specified for the <code dir="ltr">capture_queue_name</code> and <code dir="ltr">apply_queue_name</code> parameters.</p>
</li>
</ul>
<p>In this case, the local capture process and the apply process at the destination database share the same queue. If the source database is the capture database, then the local capture process and the apply process at the source database also share the same queue.</p>
</li>
</ul>
<p>Also, the <code dir="ltr">capture_name</code> and <code dir="ltr">capture_queue_name</code> parameters must be set to <code dir="ltr">NULL</code> when both of the following conditions are met:</p>
<ul>
<li>
<p>The destination database is the capture database.</p>
</li>
<li>
<p>The <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>.</p>
</li>
</ul>
<p>When both of these conditions are met, these procedure configure two capture processes at the destination database, and these capture processes must have different names. One capture process is the downstream capture process for the source database, while the other capture process is the local capture process that captures changes made to the destination database. When the <code dir="ltr">capture_name</code> and <code dir="ltr">capture_queue_name</code> parameters are set to <code dir="ltr">NULL</code>, the system generates a different name for the capture processes. These procedures raise an error if both conditions are met and either the <code dir="ltr">capture_name</code> parameter or the <code dir="ltr">capture_queue_name</code> parameter is set to a non-<code dir="ltr">NULL</code> value.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIAFJGAG">&#34;One-Way or Bi-Directional Replication&#34;</a></p>
</li>
<li>
<p><a href="#CIAJCEFJ">&#34;Local or Downstream Capture for the Source Database&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CIAFJGAG"></a>
<div id="STREP261" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">One-Way or Bi-Directional Replication<a id="sthref152"></a><a id="sthref153"></a></h4>
<p>These procedures set up either a one-way (or single-source) Oracle Streams configuration with the database specified in the <code dir="ltr">source_database</code> parameter as the source database, or a bi-directional Oracle Streams configuration with both databases acting as source and destination databases. See <a href="prep_rep.htm#CACDCDJG">&#34;Decide Whether Changes Are Allowed at One Database or at Multiple Databases&#34;</a> for more information.</p>
<p>The <code dir="ltr">bi_directional</code> parameter in each procedure controls whether the Oracle Streams configuration is single source or bi-directional:</p>
<ul>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is <code dir="ltr">FALSE</code>, then a capture process captures changes made to the source database and an apply process at the destination database applies these changes. If the destination database is not the capture database, then a propagation sends the captured changes to the destination database. The default value for this parameter is <code dir="ltr">FALSE</code>.</p>
</li>
<li>
<p>If the <code dir="ltr">bi_directional</code> parameter is <code dir="ltr">TRUE</code>, then a separate capture process captures changes made to each database, propagations send these changes to the other database, and each database applies changes from the other database.</p>
</li>
</ul>
<p>When a replication environment is not bi-directional, and no changes are allowed at the destination database, Oracle Streams keeps the shared database objects synchronized at the databases. However, when a replication environment is not bi-directional, and independent changes are allowed at the destination database, the shared database objects might diverge between the databases. Independent changes can be made by users, by applications, or by replication with a third database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>You might need to configure conflict resolution if bi-directional replication is configured.</p>
</li>
<li>
<p>If you set the <code dir="ltr">bi_directional</code> parameter to <code dir="ltr">TRUE</code> when you run one of these procedures, then do not allow data manipulation language (DML) or data definition language (DDL) changes to the shared database objects at the destination database while the procedure, or the script generated by the procedure, is running. This restriction does not apply if a procedure is configuring a single-source replication environment.</p>
</li>
<li>
<p>These procedures do not configure the replicated tables to be read-only at the destination database. If you set the <code dir="ltr">bi_directional</code> parameter to <code dir="ltr">FALSE</code> when you run one of these procedures, and the replicated tables should be read only at the destination database, then configure privileges at the destination databases accordingly. However, the apply user for the apply process must be able to make DML changes to the replicated database objects. See <a class="olink DBSEG004" href="../DBSEG/authorization.htm#DBSEG004"><span class="italic">Oracle Database Security Guide</span></a> for information about configuring privileges.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="conflict.htm#g1013001">Chapter 9, &#34;Oracle Streams Conflict Resolution&#34;</a></p>
</li>
<li>
<p><a href="#CIAJBBDC">&#34;Oracle Streams Components Configured by These Procedures&#34;</a></p>
</li>
</ul>
</div>
<a id="CIAHFFCA"></a>
<div id="STREP262" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Change Cycling and Tags<a id="sthref154"></a><a id="sthref155"></a></h5>
<p>Change cycling happens when a change is sent back to the database where it originated. Typically, change cycling should be avoided because it can result in each change going through endless loops back to the database where it originated. Such loops can result in unintended data in the database and tax the networking and computer resources of an environment.</p>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then these procedures configure bi-directional replication. To prevent change cycling in a bi-directional Oracle Streams replication environment, these procedures configure the environment in the following way:</p>
<ul>
<li>
<p>The apply process at each database applies each change with an apply tag that is unique to the environment. An apply tag is an Oracle Streams tag that is part of each redo record created by the apply process. For example, if a procedure configures databases <code dir="ltr">sfdb.net</code> and <code dir="ltr">nydb.net</code> for bi-directional replication, then the apply tag for the apply process at <code dir="ltr">sfdb.net</code> might be the hexidecimal equivalent of <code dir="ltr">&#39;1&#39;</code>, and the apply tag for the apply process at <code dir="ltr">nydb.net</code> might be the hexidecimal equivalent of <code dir="ltr">&#39;2&#39;</code>. In this case, an applied change with a tag that is the hexidecimal equivalent of <code dir="ltr">&#39;1&#39;</code> originated at the <code dir="ltr">nydb.net</code> database, while an applied change with a tag that is the hexidecimal equivalent of <code dir="ltr">&#39;2&#39;</code> originated at the <code dir="ltr">sfdb.net</code> database.</p>
</li>
<li>
<p>The capture process at each database captures all changes to the shared database objects, regardless of tags in the redo records for the changes to these database objects.</p>
</li>
<li>
<p>Each propagation sends all changes made to the shared database objects to the other database in the bi-directional replication environment, except for changes that originated at the other database. Continuing the example, the propagation at <code dir="ltr">sfdb.net</code> sends all changes to <code dir="ltr">nydb.net</code>, except for changes with a tag value that is the hexidecimal equivalent of <code dir="ltr">&#39;1&#39;</code>, because these changes originated at <code dir="ltr">nydb.net</code>. Similarly, the propagation at <code dir="ltr">nydb.net</code> sends all changes to <code dir="ltr">sfdb.net</code>, except for changes with a tag value that is the hexidecimal equivalent of <code dir="ltr">&#39;2&#39;</code>. A change that is not propagated because of its tag value is discarded.</p>
</li>
</ul>
<p>These procedures cannot be used to configure multi-directional replication where changes can be cycled back to a source database by a third database in the environment. For example, these procedures cannot be used to configure an Oracle Streams replication environment with three databases where each database shares changes with the other two databases in the environment. Such an environment is sometimes called an &#34;n-way&#34; replication environment. If these procedures were used to configure this type of a three way replication environment, then changes made at a source database would be cycled back to the same source database. In a valid three way replication environment, a particular change is made only once at each database.</p>
<p>These procedures can configure an Oracle Streams replication environment that includes more than two databases, if changes made at a source database cannot cycle back to the same source database. For example, a procedure can be run multiple times to configure an environment in which a primary database shares changes with multiple secondary databases. Such an environment is sometimes called a &#34;hub-and-spoke&#34; replication environment.</p>
<p>You can configure the Oracle Streams environment manually to replicate changes in a multiple source environment where each source database shares changes with the other source databases, or you can modify generated scripts to achieve this.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="rep_tags.htm#g1014437">Chapter 10, &#34;Oracle Streams Tags&#34;</a></p>
</li>
<li>
<p><a href="#CIAFABEC">&#34;Example That Configures Hub-and-Spoke Replication&#34;</a> for an example that configures a hub-and-spoke replication environment</p>
</li>
<li>
<p><a class="olink STREX004" href="../STREX/repmultdemo.htm#STREX004"><span class="italic">Oracle Streams Extended Examples</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CIAJGGBA"></a>
<div id="STREP263" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Data Definition Language (DDL) Changes<a id="sthref156"></a></h4>
<p>The <code dir="ltr">include_ddl</code> parameter controls whether the procedure configures Oracle Streams replication to maintain DDL changes:</p>
<ul>
<li>
<p>To configure an Oracle Streams replication environment that does not maintain DDL changes, set the <code dir="ltr">include_ddl</code> parameter to <code dir="ltr">FALSE</code> when you run one of these procedures. The default value for this parameter is <code dir="ltr">FALSE</code>.</p>
</li>
<li>
<p>To configure an Oracle Streams replication environment that maintains DDL changes, set the <code dir="ltr">include_ddl</code> parameter to <code dir="ltr">TRUE</code> when you run one of these procedures.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> procedure does not include the <code dir="ltr">include_ddl</code> parameter. An Oracle Streams replication environment configured by the <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> procedure only maintains DML changes.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="prep_rep.htm#CACIGHCH">&#34;Decide Whether to Maintain DDL Changes&#34;</a></div>
</div>
<!-- class="sect3" -->
<a id="CACBGGGB"></a>
<div id="STREP264" class="sect3">
<h4 class="sect3">Instantiation<a id="sthref157"></a><a id="sthref158"></a></h4>
<p>The <code dir="ltr">MAINTAIN_GLOBAL</code>, <code dir="ltr">MAINTAIN_SCHEMAS</code>, and <code dir="ltr">MAINTAIN_TABLES</code> procedures provide options for instantiation. Instantiation is the process of preparing database objects for instantiation at a source database, optionally copying the database objects from a source database to a destination database, and setting the instantiation SCN for each instantiated database object.</p>
<p>When you run one of these three procedures, you can choose to perform the instantiation in one of the following ways:</p>
<ul>
<li>
<p><span class="bold">Data Pump Export Dump File Instantiation:</span> This option performs a Data Pump export of the shared database objects at the source database and a Data Pump import of the export dump file at the destination database. The instantiation SCN is set for each shared database object during import.</p>
<p>To specify this instantiation option, set the <code dir="ltr">instantiation</code> parameter to one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL</code> if you run the <code dir="ltr">MAINTAIN_GLOBAL</code> procedure</p>
</li>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA</code> if you run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure</p>
</li>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE</code> if you run the <code dir="ltr">MAINTAIN_TABLES</code> procedure</p>
</li>
</ul>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then the procedure also sets the instantiation SCN for each shared database object at the source database.</p>
<p>When you use this option, you must create directory objects to hold the Data Pump files. See <a href="#CACHFABG">&#34;Creating the Required Directory Objects&#34;</a>.</p>
</li>
<li>
<p><span class="bold">Data Pump Network Import Instantiation:</span> This option performs a network Data Pump import of the shared database objects. A network import means that Data Pump performs the import without using an export dump file. Therefore, directory objects do not need to be created for instantiation purposes when you use this option. The instantiation SCN is set for each shared database object during import.</p>
<p>To specify this instantiation option, set the <code dir="ltr">instantiation</code> parameter to one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_FULL_NETWORK</code> if you run the <code dir="ltr">MAINTAIN_GLOBAL</code> procedure</p>
</li>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA_NETWORK</code> if you run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure</p>
</li>
<li>
<p><code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_TABLE_NETWORK</code> if you run the <code dir="ltr">MAINTAIN_TABLES</code> procedure</p>
</li>
</ul>
<p>If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then the procedure also sets the instantiation SCN for each shared database object at the source database.</p>
</li>
<li>
<p><span class="bold">Generate a Configuration Script with No Instantiation Specified:</span> This option does not perform an instantiation. This setting is valid only if the <code dir="ltr">perform_actions</code> parameter is set to <code dir="ltr">FALSE</code>, and the procedure generates a configuration script. In this case, the configuration script does not perform an instantiation and does not set the instantiation SCN for each shared database object. Instead, you must perform the instantiation and ensure that instantiation SCN values are set properly.</p>
<p>To specify this instantiation option, set the <code dir="ltr">instantiation</code> parameter to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code> in each procedure.</p>
</li>
</ul>
<p>When one of these procedures performs a table instantiation, the tablespace that contains the table must exist at the destination database. When one of these procedures performs a schema instantiation, the tablespace that contains the schema must exist at the destination database.</p>
<p>When these procedures perform a dump file or network instantiation and an instantiated database object does not exist at the destination database, the database object is imported at the destination database, including its supplemental logging specifications from the source database and its supporting database objects, such as indexes and triggers. However, if the database object already exists at the destination database before instantiation, then it is not imported at the destination database. Therefore, the supplemental logging specifications from the source database are not specified for the database object at the destination database, and the supporting database objects are not imported.</p>
<p>The <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures do not perform an instantiation. You must perform any required instantiation actions manually after running <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and before running <code dir="ltr">POST_INSTANTIATION_SETUP</code>. You also must perform any required instantiation actions manually if you use the <code dir="ltr">MAINTAIN_GLOBAL</code>, <code dir="ltr">MAINTAIN_SCHEMAS</code>, and <code dir="ltr">MAINTAIN_TABLES</code> procedures and set the <code dir="ltr">instantiation</code> parameter to <code dir="ltr">DBMS_STREAMS_ADM.INSTANTIATION_NONE</code>.</p>
<p>In these cases, you can use any instantiation method. For example, you can use Recovery Manager (RMAN) to perform a database instantiation using the RMAN <code dir="ltr">DUPLICATE</code> or <code dir="ltr">CONVERT</code> <code dir="ltr">DATABASE</code> command or a tablespace instantiation using the RMAN <code dir="ltr">TRANSPORT</code> <code dir="ltr">TABLESPACE</code> command. If the <code dir="ltr">bi_directional</code> parameter is set to <code dir="ltr">TRUE</code>, then ensure that the instantiation SCN values are set properly at the source database and the destination database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> and <code dir="ltr">MAINTAIN_TTS</code> procedures do not provide these instantiation options. These procedures always perform an instantiation by cloning the tablespace or tablespace set, transferring the files required for instantiation to the destination database, and attaching the tablespace or tablespace set at the destination database.</p>
</li>
<li>
<p>If one of these procedures performs an instantiation, then the database objects, tablespace, or tablespaces set being configured for replication must exist at the source database.</p>
</li>
<li>
<p>If the RMAN <code dir="ltr">DUPLICATE</code> or <code dir="ltr">CONVERT</code> <code dir="ltr">DATABASE</code> command is used for database instantiation, then the destination database cannot be the capture database.</p>
</li>
<li>
<p>When the <code dir="ltr">MAINTAIN_TABLES</code> procedure performs a dump file or network instantiation and the instantiated table already exist at the destination database before instantiation, the procedure does not set the instantiation SCN for the table. In this case, you must set the instantiation SCN for the table manually after the procedure completes.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="instant.htm#g1012655">Chapter 8, &#34;Instantiation and Oracle Streams Replication&#34;</a></p>
</li>
<li>
<p><a href="#CACGFCIG">&#34;Perform Configuration Actions Directly or With a Script&#34;</a></p>
</li>
<li>
<p><a href="#CIAFJGAG">&#34;One-Way or Bi-Directional Replication&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACHFABG"></a>
<div id="STREP265" class="sect2">
<h3 class="sect2">Creating the Required Directory Objects<a id="sthref159"></a><a id="sthref160"></a></h3>
<p>A directory object is similar to an alias for a directory on a file system. The following directory objects might be required when you run one of these procedures:</p>
<ul>
<li>
<p>A script directory object is required if you decided to generate a configuration script. The configuration script is placed in this directory on the computer system where the procedure is run. Use the <code dir="ltr">script_directory_object</code> parameter when you run one of these procedures to specify the script directory object.</p>
</li>
<li>
<p>A source directory object is required if you decided to perform a Data Pump export dump file instantiation, and you will use one of the following procedures: <code dir="ltr">MAINTAIN_GLOBAL</code>, <code dir="ltr">MAINTAIN_SCHEMAS</code>, <code dir="ltr">MAINTAIN_SIMPLE_TTS</code>, <code dir="ltr">MAINTAIN_TABLES</code>, or <code dir="ltr">MAINTAIN_TTS</code>. The Data Pump export dump file and log file are placed in this directory on the computer system running the source database. Use the <code dir="ltr">source_directory_object</code> parameter when you run one of these procedures to specify the source directory object. This directory object is not required if you will use the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures.</p>
</li>
<li>
<p>A destination directory object is required if you decided to perform a Data Pump export dump file instantiation, and you will use one of the following procedures: <code dir="ltr">MAINTAIN_GLOBAL</code>, <code dir="ltr">MAINTAIN_SCHEMAS</code>, <code dir="ltr">MAINTAIN_SIMPLE_TTS</code>, <code dir="ltr">MAINTAIN_TABLES</code>, or <code dir="ltr">MAINTAIN_TTS</code>. The Data Pump export dump file is transferred from the computer system running the source database to the computer system running the destination database and placed in this directory on the computer system running the destination database. Use the <code dir="ltr">destination_directory_object</code> parameter when you run one of these procedures to specify the destination directory object. This directory object is not required if you will use the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures.</p>
</li>
</ul>
<p>Each directory object must be created using the SQL statement <code dir="ltr">CREATE</code> <code dir="ltr">DIRECTORY</code>, and the user who invokes one of the procedures must have <code dir="ltr">READ</code> and <code dir="ltr">WRITE</code> privilege on each directory object.</p>
<p>For example, complete the following steps to create a directory object named <code dir="ltr">db_dir</code> that corresponds to the <code dir="ltr">/usr/db_files</code> directory:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Create the directory object:</p>
<pre dir="ltr">CREATE DIRECTORY db_dir AS &#39;/usr/db_files&#39;;
</pre></li>
</ol>
<p>The user who creates the directory object automatically has <code dir="ltr">READ</code> and <code dir="ltr">WRITE</code> privilege on the directory object. When you are configuring an Oracle Streams replication environment, typically the Oracle Streams administrator creates the directory objects.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The directory objects cannot point to an Automatic Storage Management (ASM) disk group.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CACGFCIG">&#34;Perform Configuration Actions Directly or With a Script&#34;</a></p>
</li>
<li>
<p><a href="#CACBGGGB">&#34;Instantiation&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CIABHACH"></a>
<div id="STREP598" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Examples That Configure Two-Database Replication with Local Capture</h3>
<p>Each of the following examples configures a two-database replication environment that uses one or more local capture processes:</p>
<ul>
<li>
<p><a href="#CACGFIJH">Configuring Two-Database Global Replication with Local Capture</a></p>
</li>
<li>
<p><a href="#CIAJEFAJ">Configuring Two-Database Schema Replication with Local Capture</a></p>
</li>
<li>
<p><a href="#CACICGDG">Configuring Two-Database Table Replication with Local Capture</a></p>
</li>
</ul>
<a id="CACGFIJH"></a>
<div id="STREP138" class="sect3">
<h4 class="sect3">Configuring Two-Database Global Replication with Local Capture<a id="sthref161"></a><a id="sthref162"></a><a id="sthref163"></a><a id="sthref164"></a></h4>
<p>You can use the following procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to configure replication at the database level:</p>
<ul>
<li>
<p><a class="olink ARPLS825" href="../ARPLS/d_streams_adm.htm#ARPLS825"><code dir="ltr">MAINTAIN_GLOBAL</code></a></p>
</li>
<li>
<p><a class="olink ARPLS831" href="../ARPLS/d_streams_adm.htm#ARPLS831"><code dir="ltr">PRE_INSTANTIATION_SETUP</code></a> and <a class="olink ARPLS830" href="../ARPLS/d_streams_adm.htm#ARPLS830"><code dir="ltr">POST_INSTANTIATION_SETUP</code></a></p>
</li>
</ul>
<p>The <code dir="ltr">MAINTAIN_GLOBAL</code> procedure automatically excludes database objects that are not supported by Oracle Streams from the replication environment. The <a class="olink ARPLS831" href="../ARPLS/d_streams_adm.htm#ARPLS831"><code dir="ltr">PRE_INSTANTIATION_SETUP</code></a> and <a class="olink ARPLS830" href="../ARPLS/d_streams_adm.htm#ARPLS830"><code dir="ltr">POST_INSTANTIATION_SETUP</code></a> procedures do not automatically exclude database objects. Instead, these procedures enable you to specify which database objects to exclude from the replication environment. Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</p>
<p>The following table lists the decisions that were made about the Oracle Streams replication environment configured in this example.</p>
<div class="inftblinformal">
<table class="cellalignment103" summary="This table lists the decision made for the example in this section." dir="ltr">
<thead>
<tr class="cellalignment92">
<th class="cellalignment104" id="r1c1-t24">Decision</th>
<th class="cellalignment104" id="r1c2-t24">Assumption for This Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment92">
<td class="cellalignment98" id="r2c1-t24" headers="r1c1-t24"><a href="prep_rep.htm#BABFCICA">Decide Which Type of Replication Environment to Configure</a></td>
<td class="cellalignment98" headers="r2c1-t24 r1c2-t24">This example configures bi-directional replication in a two database environment where both databases are read/write.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r3c1-t24" headers="r1c1-t24"><a href="prep_rep.htm#CACJGEFE">Decide Whether to Configure Local or Downstream Capture for the Source Database</a></td>
<td class="cellalignment98" headers="r3c1-t24 r1c2-t24">This example configures local capture for each source database.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r4c1-t24" headers="r1c1-t24"><a href="prep_rep.htm#CACDCDJG">Decide Whether Changes Are Allowed at One Database or at Multiple Databases</a></td>
<td class="cellalignment98" headers="r4c1-t24 r1c2-t24">This example allows changes to the replicate database objects at both databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r5c1-t24" headers="r1c1-t24"><a href="prep_rep.htm#BABIADHG">Decide Whether the Replication Environment Will Have Nonidentical Replicas</a></td>
<td class="cellalignment98" headers="r5c1-t24 r1c2-t24">This example configures identical shared database objects at the databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r6c1-t24" headers="r1c1-t24"><a href="prep_rep.htm#BABBHGIH">Decide Whether the Replication Environment Will Use Apply Handlers</a></td>
<td class="cellalignment98" headers="r6c1-t24 r1c2-t24">This example does not configure apply handlers.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r7c1-t24" headers="r1c1-t24"><a href="prep_rep.htm#CACIGHCH">Decide Whether to Maintain DDL Changes</a></td>
<td class="cellalignment98" headers="r7c1-t24 r1c2-t24">This example maintains DDL changes.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r8c1-t24" headers="r1c1-t24"><a href="prep_rep.htm#BABICDIH">Decide How to Configure the Replication Environment</a></td>
<td class="cellalignment98" headers="r8c1-t24 r1c2-t24">This example uses the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures to configure the environment.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>In this example, the procedures will configure the replication environment directly. Configuration scripts will not be generated. An RMAN database instantiation will be performed.</p>
<p>As noted in the previous table, this example uses the <a class="olink ARPLS831" href="../ARPLS/d_streams_adm.htm#ARPLS831"><code dir="ltr">PRE_INSTANTIATION_SETUP</code></a> and <a class="olink ARPLS830" href="../ARPLS/d_streams_adm.htm#ARPLS830"><code dir="ltr">POST_INSTANTIATION_SETUP</code></a> procedures to configure database replication. The replication configuration will exclude all database objects that are not supported by Oracle Streams. In this example, the source database is <code dir="ltr">dbs1.example.com</code>, and the destination database is <code dir="ltr">dbs2.example.com</code>.</p>
<p><a href="#CIACBDEB">Figure 2-1</a> provides an overview of the replication environment created in this example.</p>
<div id="STREP266" class="figure">
<p class="titleinfigure"><a id="CIACBDEB"></a>Figure 2-1 Sample Oracle Streams Environment That Replicates an Entire Database</p>
<img width="501" height="569" src="img/strep048.gif" alt="Description of Figure 2-1 follows"/><br/>
<a id="sthref165" href="img_text/strep048.htm">Description of &#34;Figure 2-1 Sample Oracle Streams Environment That Replicates an Entire Database&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
A capture process never captures changes in the <code dir="ltr">SYS</code>, <code dir="ltr">SYSTEM</code>, or <code dir="ltr">CTXSYS</code> schemas. Changes to these schemas are not maintained by Oracle Streams in the replication configuration described in this section.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS172" href="../STRMS/strms_otmon.htm#STRMS172"><span class="italic">Oracle Streams Concepts and Administration</span></a> for instructions on determining which database objects are not supported by Oracle Streams</div>
<p>Complete the following steps to use the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures to configure the replication environment:</p>
<ol>
<li id="CACFIABG">
<p>Complete the required tasks before running the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure. See <a href="prep_rep.htm#CACGBCIB">&#34;Tasks to Complete Before Configuring Oracle Streams Replication&#34;</a> for instructions.</p>
<p>For this configuration, the following tasks must be completed:</p>
<ul>
<li>
<p>Configure an Oracle Streams administrator at both databases. See <a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a>.</p>
</li>
<li>
<p>Configure network connectivity and database links:</p>
<ul>
<li>
<p>Configure network connectivity between the source database <code dir="ltr">dbs1.example.com</code> and the destination database <code dir="ltr">dbs2.example.com</code>.</p>
</li>
<li>
<p>Create a database link from the source database <code dir="ltr">dbs1.example.com</code> to the destination database <code dir="ltr">dbs2.example.com</code>.</p>
</li>
</ul>
<p>See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a>.</p>
</li>
<li>
<p>Ensure that both databases are in <code dir="ltr">ARCHIVELOG</code> mode. See <a href="prep_rep.htm#CACCBEBG">&#34;Ensuring That Each Source Database Is In ARCHIVELOG Mode&#34;</a>.</p>
</li>
<li>
<p>Ensure that the initialization parameters are set properly at both databases. See <a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a>.</p>
</li>
<li>
<p>Configure the Oracle Streams pool properly at both databases. See <a href="prep_rep.htm#BABBFJEB">&#34;Configuring the Oracle Streams Pool&#34;</a>.</p>
</li>
</ul>
<p>A database link is required from the destination database to the source database. However, because RMAN will be used for database instantiation, this database link must be created after instantiation. This database link is required because the replication environment will be bi-directional and because RMAN will be used for database instantiation.</p>
</li>
<li>
<p>In SQL*Plus, connect to the source database <code dir="ltr">dbs1.example.com</code> as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Run the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> procedure:</p>
<pre dir="ltr">DECLARE
  empty_tbs  DBMS_STREAMS_TABLESPACE_ADM.TABLESPACE_SET; 
BEGIN
  DBMS_STREAMS_ADM.PRE_INSTANTIATION_SETUP(
    maintain_mode        =&gt; &#39;GLOBAL&#39;,
    tablespace_names     =&gt; empty_tbs,
    source_database      =&gt; &#39;dbs1.example.com&#39;,
    destination_database =&gt; &#39;dbs2.example.com&#39;,
    perform_actions      =&gt; TRUE,
    bi_directional       =&gt; TRUE,
    include_ddl          =&gt; TRUE,
    start_processes      =&gt; TRUE,
    exclude_schemas      =&gt; &#39;*&#39;,
    exclude_flags        =&gt; DBMS_STREAMS_ADM.EXCLUDE_FLAGS_UNSUPPORTED + 
                            DBMS_STREAMS_ADM.EXCLUDE_FLAGS_DML + 
                            DBMS_STREAMS_ADM.EXCLUDE_FLAGS_DDL);
END;
/
</pre>
<p>Notice that the <code dir="ltr">start_processes</code> parameter is set to <code dir="ltr">TRUE</code>. Therefore, each capture process and apply process created during the configuration is started automatically.</p>
<p>Also, notice the values specified for the <code dir="ltr">exclude_schemas</code> and <code dir="ltr">exclude_flags</code> parameters. The asterisk (<code dir="ltr">*</code>) specified for <code dir="ltr">exclude_schemas</code> indicates that certain database objects in every schema in the database might be excluded from the replication environment. The value specified for the <code dir="ltr">exclude_flags</code> parameter indicates that DML and DDL changes for all unsupported database objects are excluded from the replication environment. Rules are placed in the negative rule sets for the capture processes to exclude these database objects.</p>
<p>Because the procedure is run at the source database, local capture is configured at the source database.</p>
<p>Because this procedure configures a bi-directional replication environment, do not allow DML or DDL changes to the shared database objects at the destination database while the procedure is running.</p>
<p>The procedure does not specify the <code dir="ltr">apply_name</code> parameter. Therefore, the default, <code dir="ltr">NULL</code>, is specified for this parameter. When the <code dir="ltr">apply_name</code> parameter is set to <code dir="ltr">NULL</code>, no apply process that applies changes from the source database can exist on the destination database. If an apply process that applies changes from the source database exists at the destination database, then specify a non-<code dir="ltr">NULL</code> value for the <code dir="ltr">apply_name</code> parameter.</p>
<p>To monitor the progress of the configuration operation, follow the instructions in <a href="#CIAGFIGG">&#34;Monitoring Oracle Streams Configuration Progress&#34;</a>.</p>
<p>If this procedure encounters an error and stops, then see <a href="man_gen_rep.htm#CEGICHAA">&#34;Recovering from Operation Errors&#34;</a> for information about either recovering from the error or rolling back the configuration operation.</p>
</li>
<li id="CACHEAHC">
<p>Perform the instantiation. You can use any of the methods described in <a href="instant.htm#g1012655">Chapter 8, &#34;Instantiation and Oracle Streams Replication&#34;</a> to complete the instantiation. This example uses the RMAN <code dir="ltr">DUPLICATE</code> command to perform the instantiation by performing the following steps:</p>
<ol>
<li>
<p>Create a backup of the source database if one does not exist. RMAN requires a valid backup for duplication. In this example, create a backup of <code dir="ltr">dbs1.example.com</code> if one does not exist.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A backup of the source database is not necessary if you use the <code dir="ltr">FROM</code> <code dir="ltr">ACTIVE</code> <code dir="ltr">DATABASE</code> option when you run the RMAN <code dir="ltr">DUPLICATE</code> command. For large databases, the <code dir="ltr">FROM</code> <code dir="ltr">ACTIVE</code> <code dir="ltr">DATABASE</code> option requires significant network resources. This example does not use this option.</div>
</li>
<li>
<p>In SQL*Plus, connect to the source database <code dir="ltr">dbs1.example.com</code> as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li id="CACCGFAF">
<p>Determine the until SCN for the RMAN <code dir="ltr">DUPLICATE</code> command:</p>
<pre dir="ltr">SET SERVEROUTPUT ON SIZE 1000000
DECLARE
  until_scn NUMBER;
BEGIN
  until_scn:= DBMS_FLASHBACK.GET_SYSTEM_CHANGE_NUMBER;
      DBMS_OUTPUT.PUT_LINE(&#39;Until SCN: &#39; || until_scn);
END;
/
</pre>
<p>Make a note of the until SCN returned. You will use this number in Step <a href="#CACJGAFD">h</a>. For this example, assume that the returned until SCN is&nbsp;<code dir="ltr">45442631</code>.</p>
</li>
<li>
<p>In SQL*Plus, connect to the source database <code dir="ltr">dbs1.example.com</code> as an administrative user.</p>
</li>
<li id="CACEDHCC">
<p>Archive the current online redo log:</p>
<pre dir="ltr">ALTER SYSTEM ARCHIVE LOG CURRENT;
</pre></li>
<li>
<p>Prepare your environment for database duplication, which includes preparing the destination database as an auxiliary instance for duplication. See <a class="olink BRADV010" href="../BRADV/rcmdupdb.htm#BRADV010"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a> for instructions.</p>
</li>
<li>
<p>Start the RMAN client, and connect to the source database <code dir="ltr">dbs1.example.com</code> as <code dir="ltr">TARGET</code> and to the destination database <code dir="ltr">dbs2.example.com</code> as <code dir="ltr">AUXILIARY</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RCMRF114" href="../RCMRF/rcmsynta010.htm#RCMRF114"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> for more information about the RMAN <code dir="ltr">CONNECT</code> command</div>
</li>
<li id="CACJGAFD">
<p>Use the RMAN <code dir="ltr">DUPLICATE</code> command with the <code dir="ltr">OPEN</code> <code dir="ltr">RESTRICTED</code> option to instantiate the source database at the destination database. The <code dir="ltr">OPEN</code> <code dir="ltr">RESTRICTED</code> option is required. This option enables a restricted session in the duplicate database by issuing the following SQL statement: <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> <code dir="ltr">ENABLE</code> <code dir="ltr">RESTRICTED</code> <code dir="ltr">SESSION</code>. RMAN issues this statement immediately before the duplicate database is opened.</p>
<p>You can use the <code dir="ltr">UNTIL</code> <code dir="ltr">SCN</code> clause to specify an SCN for the duplication. Use the until SCN determined in Step <a href="#CACCGFAF">c</a> for this clause. Archived redo logs must be available for the until SCN specified and for higher SCN values. Therefore, Step <a href="#CACEDHCC">e</a> archived the redo log containing the until SCN.</p>
<p>Ensure that you use <code dir="ltr">TO</code> <code dir="ltr"><span class="codeinlineitalic">database_name</span></code> in the <code dir="ltr">DUPLICATE</code> command to specify the name of the duplicate database. In this example, the duplicate database is <code dir="ltr">dbs2.example.com</code>. Therefore, the <code dir="ltr">DUPLICATE</code> command for this example includes <code dir="ltr">TO</code> <code dir="ltr">dbs2.example.com</code>.</p>
<p>The following is an example of an RMAN <code dir="ltr">DUPLICATE</code> command:</p>
<pre dir="ltr">RMAN&gt; RUN
      { 
        SET UNTIL SCN 45442631;
        ALLOCATE AUXILIARY CHANNEL dbs2 DEVICE TYPE sbt; 
        DUPLICATE TARGET DATABASE TO dbs2 
        NOFILENAMECHECK
        OPEN RESTRICTED;
      }
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RCMRF126" href="../RCMRF/rcmsynta020.htm#RCMRF126"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> for more information about the RMAN <code dir="ltr">DUPLICATE</code> command</div>
</li>
<li>
<p>In SQL*Plus, connect to the destination database as an administrative user.</p>
</li>
<li>
<p>Rename the global name. After an RMAN database instantiation, the destination database has the same global name as the source database. Rename the global name of the destination database back to its original name with the following statement:</p>
<pre dir="ltr">ALTER DATABASE RENAME GLOBAL_NAME TO dbs2.example.com;
</pre></li>
<li>
<p>In SQL*Plus, connect to the destination database <code dir="ltr">dbs2.example.com</code> as the Oracle Streams administrator.</p>
</li>
<li>
<p>Drop the database link from the source database to the destination database that was cloned from the source database:</p>
<pre dir="ltr">DROP DATABASE LINK dbs2.example.com;
</pre></li>
</ol>
</li>
<li>
<p>While still connected to the destination database as the Oracle Streams administrator, create a database link from the destination database to the source database:</p>
<pre dir="ltr">CREATE DATABASE LINK dbs1.example.com CONNECT TO strmadmin 
  IDENTIFIED BY <span class="italic">password</span> USING &#39;dbs1.example.com&#39;;
</pre>
<p>See Step <a href="#CACFIABG">1</a> for information about why this database link is required.</p>
</li>
<li>
<p>In SQL*Plus, connect to the source database <code dir="ltr">dbs1.example.com</code> as the Oracle Streams administrator.</p>
</li>
<li>
<p>Run the <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedure:</p>
<pre dir="ltr">DECLARE
  empty_tbs  DBMS_STREAMS_TABLESPACE_ADM.TABLESPACE_SET; 
BEGIN
  DBMS_STREAMS_ADM.POST_INSTANTIATION_SETUP(
    maintain_mode        =&gt; &#39;GLOBAL&#39;,
    tablespace_names     =&gt; empty_tbs,
    source_database      =&gt; &#39;dbs1.example.com&#39;,
    destination_database =&gt; &#39;dbs2.example.com&#39;,
    perform_actions      =&gt; TRUE,
    bi_directional       =&gt; TRUE,
    include_ddl          =&gt; TRUE,
    start_processes      =&gt; TRUE,
    instantiation_scn    =&gt; 45442630,
    exclude_schemas      =&gt; &#39;*&#39;,
    exclude_flags        =&gt; DBMS_STREAMS_ADM.EXCLUDE_FLAGS_UNSUPPORTED + 
                            DBMS_STREAMS_ADM.EXCLUDE_FLAGS_DML + 
                            DBMS_STREAMS_ADM.EXCLUDE_FLAGS_DDL);
END;
/
</pre>
<p>The parameter values specified in both the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures must match, except for the values of the following parameters: <code dir="ltr">perform_actions</code>, <code dir="ltr">script_name</code>, <code dir="ltr">script_directory_object</code>, and <code dir="ltr">start_processes</code>.</p>
<p>Also, notice that the <code dir="ltr">instantiation_scn</code> parameter is set to <code dir="ltr">45442630</code>. The RMAN <code dir="ltr">DUPLICATE</code> command duplicates the database up to one less than the SCN value specified in the <code dir="ltr">UNTIL</code> <code dir="ltr">SCN</code> clause. Therefore, you should subtract one from the until SCN value that you specified when you ran the <code dir="ltr">DUPLICATE</code> command in Step <a href="#CACHEAHC">4</a><a href="#CACJGAFD">h</a>. In this example, the until SCN was set to <code dir="ltr">45442631</code>. Therefore, the <code dir="ltr">instantiation_scn</code> parameter should be set to 45442631 - 1, or <code dir="ltr">45442630</code>.</p>
<p>If the instantiation SCN was set for the shared database objects at the destination database during instantiation, then the <code dir="ltr">instantiation_scn</code> parameter should be set to <code dir="ltr">NULL</code>. For example, the instantiation SCN might be set during a full database export/import.</p>
<p>Because this procedure configures a bi-directional replication environment, do not allow DML or DDL changes to the shared database objects at the destination database while the procedure is running.</p>
<p>To monitor the progress of the configuration operation, follow the instructions in <a href="#CIAGFIGG">&#34;Monitoring Oracle Streams Configuration Progress&#34;</a>.</p>
<p>If this procedure encounters an error and stops, then see <a href="man_gen_rep.htm#CEGICHAA">&#34;Recovering from Operation Errors&#34;</a> for information about either recovering from the error or rolling back the configuration operation.</p>
</li>
<li>
<p>At the destination database, connect as an administrative user in SQL*Plus and use the <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> statement to disable the <code dir="ltr">RESTRICTED</code> <code dir="ltr">SESSION</code>:</p>
<pre dir="ltr">ALTER SYSTEM DISABLE RESTRICTED SESSION;
</pre></li>
<li>
<p>Configure conflict resolution for the shared database objects if necessary.</p>
<p>Typically, conflicts are possible in a bi-directional replication environment. If conflicts are possible in the environment created by the <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures, then configure conflict resolution before you allow users to make changes to the shared database objects.</p>
<p>See <a href="conflict.htm#g1013001">Chapter 9, &#34;Oracle Streams Conflict Resolution&#34;</a> for more information.</p>
</li>
</ol>
<p>The bi-directional replication environment configured in this example has the following characteristics:</p>
<ul>
<li>
<p>Database supplemental logging is configured at both databases.</p>
</li>
<li>
<p>The <code dir="ltr">dbs1.example.com</code> database has two queues and queue tables with system-generated names. One queue is for the local capture process, and one queue is for the apply process.</p>
</li>
<li>
<p>The <code dir="ltr">dbs2.example.com</code> database has two queues and queue tables with system-generated names. One queue is for the local capture process, and one queue is for the apply process.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs1.example.com</code> database, a capture process with a system-generated name captures DML and DDL changes to all of the database objects in the database that are supported by Oracle Streams.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs2.example.com</code> database, a capture process with a system-generated name captures DML and DDL changes to all of the database objects in the database that are supported by Oracle Streams.</p>
</li>
<li>
<p>A propagation running on the <code dir="ltr">dbs1.example.com</code> database with a system-generated name sends the captured changes from a queue at the <code dir="ltr">dbs1.example.com</code> database to a queue at the <code dir="ltr">dbs2.example.com</code> database.</p>
</li>
<li>
<p>A propagation running on the <code dir="ltr">dbs2.example.com</code> database with a system-generated name sends the captured changes from a queue at the <code dir="ltr">dbs2.example.com</code> database to a queue at the <code dir="ltr">dbs1.example.com</code> database.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs1.example.com</code> database, an apply process with a system-generated name dequeues the changes from its queue and applies them to the database objects.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs2.example.com</code> database, an apply process with a system-generated name dequeues the changes from its queue and applies them to the database objects.</p>
</li>
<li>
<p>Tags are used to avoid change cycling. Specifically, each apply process uses an apply tag so that redo records for changes applied by the apply process include the tag. Each apply process uses an apply tag that is unique in the replication environment. Each propagation discards changes that have the tag of the apply process running on the same database. See <a href="#CIAHFFCA">&#34;Change Cycling and Tags&#34;</a> for more information.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CIAJEFAJ"></a>
<div id="STREP599" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring Two-Database Schema Replication with Local Capture<a id="sthref166"></a><a id="sthref167"></a></h4>
<p>This example configures an Oracle Streams replication environment that replicates data manipulation language (DML) changes to all of the tables in the <code dir="ltr">hr</code> schema. This example configures a two-database replication environment with local capture processes to capture changes. This example uses the global database names <code dir="ltr">db1.example.com</code> and <code dir="ltr">db2.example.com</code>. However, you can substitute databases in your environment to complete the example.</p>
<p>The following table lists the decisions that were made about the Oracle Streams replication environment configured in this example.</p>
<div class="inftblinformal">
<table class="cellalignment103" summary="This table lists the decision made for the example in this section." dir="ltr">
<thead>
<tr class="cellalignment92">
<th class="cellalignment104" id="r1c1-t30">Decision</th>
<th class="cellalignment104" id="r1c2-t30">Assumption for This Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment92">
<td class="cellalignment98" id="r2c1-t30" headers="r1c1-t30"><a href="prep_rep.htm#BABFCICA">Decide Which Type of Replication Environment to Configure</a></td>
<td class="cellalignment98" headers="r2c1-t30 r1c2-t30">This example provides instructions for configuring either one-way or bi-directional replication. To configure bi-directional replication, you must complete additional steps and set the <code dir="ltr">bi_directional</code> parameter to <code dir="ltr">TRUE</code> when you run the configuration procedure.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r3c1-t30" headers="r1c1-t30"><a href="prep_rep.htm#CACJGEFE">Decide Whether to Configure Local or Downstream Capture for the Source Database</a></td>
<td class="cellalignment98" headers="r3c1-t30 r1c2-t30">This example configures local capture for the source database.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r4c1-t30" headers="r1c1-t30"><a href="prep_rep.htm#CACDCDJG">Decide Whether Changes Are Allowed at One Database or at Multiple Databases</a></td>
<td class="cellalignment98" headers="r4c1-t30 r1c2-t30">This example lets you choose whether to allow changes at one database or both databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r5c1-t30" headers="r1c1-t30"><a href="prep_rep.htm#BABIADHG">Decide Whether the Replication Environment Will Have Nonidentical Replicas</a></td>
<td class="cellalignment98" headers="r5c1-t30 r1c2-t30">This example configures identical shared database objects at the databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r6c1-t30" headers="r1c1-t30"><a href="prep_rep.htm#BABBHGIH">Decide Whether the Replication Environment Will Use Apply Handlers</a></td>
<td class="cellalignment98" headers="r6c1-t30 r1c2-t30">This example does not configure apply handlers.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r7c1-t30" headers="r1c1-t30"><a href="prep_rep.htm#CACIGHCH">Decide Whether to Maintain DDL Changes</a></td>
<td class="cellalignment98" headers="r7c1-t30 r1c2-t30">This example maintains DDL changes.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r8c1-t30" headers="r1c1-t30"><a href="prep_rep.htm#BABICDIH">Decide How to Configure the Replication Environment</a></td>
<td class="cellalignment98" headers="r8c1-t30 r1c2-t30">This example uses the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure the environment.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>The database objects being configured for replication might or might not exist at the destination database when you run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure. If the database objects do not exist at the destination database, then the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure instantiates them at the destination database using a Data Pump export/import. During instantiation, the instantiation SCN is set for these database objects. If the database objects already exist at the destination database, then the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure retains the existing database objects and sets the instantiation SCN for them. In this example, the <code dir="ltr">hr</code> schema exists at both the <code dir="ltr">db1.example.com</code> database and the <code dir="ltr">db2.example.com</code> database before the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure is run.</p>
<p>In this example, the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure will configure the replication environment directly. A configuration script will not be generated. A Data Pump export dump file instantiation will be performed.</p>
<p><a href="#CIAIDHEG">Figure 2-2</a> provides an overview of the environment created in this example. The additional components required for bi-directional replication are shown in gray, and their actions are indicated by dashed lines.</p>
<div id="STREP608" class="figure">
<p class="titleinfigure"><a id="CIAIDHEG"></a>Figure 2-2 Two-Database Replication Environment with Local Capture Processes</p>
<img width="656" height="612" src="img/strep509.gif" alt="Description of Figure 2-2 follows"/><br/>
<a id="sthref168" href="img_text/strep509.htm">Description of &#34;Figure 2-2 Two-Database Replication Environment with Local Capture Processes&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>Complete the following steps to use the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure the environment:</p>
<ol>
<li>
<p>Complete the following tasks to prepare for the two-database replication environment:</p>
<ol>
<li>
<p>Configure network connectivity so that the <code dir="ltr">db1.example.com</code> database can communicate with the <code dir="ltr">db2.example.com</code> database.</p>
<p>See <a class="olink ADMQS004" href="../ADMQS/GUID-C6DD213A-D37E-4905-983D-F9DCA8AE286A.htm#ADMQS004"><span class="italic">Oracle Database 2 Day DBA</span></a> for information about configuring network connectivity between databases.</p>
</li>
<li>
<p>Configure an Oracle Streams administrator at each database that will participate in the replication environment. See <a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a> for instructions. This example assumes that the Oracle Streams administrator is <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>Create a database link from the <code dir="ltr">db1.example.com</code> database to the <code dir="ltr">db2.example.com</code> database.</p>
<p>The database link should be created in the Oracle Streams administrator&#39;s schema. Also, the database link should connect to the Oracle Streams administrator at the other database. Both the name and the service name of the database link must be <code dir="ltr">db2.example.com</code>. See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a> for instructions.</p>
</li>
<li>
<p>Configure the <code dir="ltr">db1.example.com</code> database to run in <code dir="ltr">ARCHIVELOG</code> mode. For a capture process to capture changes generated at a source database, the source database must be running in <code dir="ltr">ARCHIVELOG</code> mode. See <a class="olink ADMIN008" href="../ADMIN/archredo.htm#ADMIN008"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about configuring a database to run in <code dir="ltr">ARCHIVELOG</code> mode.</p>
</li>
</ol>
</li>
<li>
<p>To configure a bi-directional replication environment, complete the following steps. If you are configuring a one-way replication environment, then these steps are not required, and you can move on to Step <a href="#CIAGDJBF">3</a>.</p>
<ol>
<li>
<p>Create a database link from the <code dir="ltr">db2.example.com</code> database to the <code dir="ltr">db1.example.com</code> database.</p>
<p>The database link should be created in the Oracle Streams administrator&#39;s schema. Also, the database link should connect to the Oracle Streams administrator at the other database. Both the name and the service name of the database link must be <code dir="ltr">db1.example.com</code>. See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a> for instructions.</p>
</li>
<li>
<p>Configure the <code dir="ltr">db2.example.com</code> database to run in <code dir="ltr">ARCHIVELOG</code> mode. For a capture process to capture changes generated at a source database, the source database must be running in <code dir="ltr">ARCHIVELOG</code> mode. See <a class="olink ADMIN008" href="../ADMIN/archredo.htm#ADMIN008"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about configuring a database to run in <code dir="ltr">ARCHIVELOG</code> mode.</p>
</li>
</ol>
</li>
<li id="CIAGDJBF">
<p>Set initialization parameters properly at each database that will participate in the Oracle Streams replication environment. See <a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a><a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a> for instructions.</p>
</li>
<li>
<p>Create the following required directory objects:</p>
<ul>
<li>
<p>A source directory object at the source database. This example assumes that this directory object is <code dir="ltr">source_directory</code>.</p>
</li>
<li>
<p>A destination directory object at the destination database. This example assumes that this directory object is <code dir="ltr">dest_directory</code>.</p>
</li>
</ul>
<p>See <a href="#CACHFABG">&#34;Creating the Required Directory Objects&#34;</a> for instructions.</p>
</li>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">db1.example.com</code> database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure replication of the <code dir="ltr">hr</code> schema between the <code dir="ltr">db1.example.com</code> database and the <code dir="ltr">db2.example.com</code> database.</p>
<p>Ensure that the <code dir="ltr">bi_directional</code> parameter is set properly for the replication environment that you are configuring. Either set this parameter to <code dir="ltr">FALSE</code> for one-way replication, or set it to <code dir="ltr">TRUE</code> for bi-directional replication.</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.MAINTAIN_SCHEMAS(
    schema_names                 =&gt; &#39;hr&#39;,
    source_directory_object      =&gt; &#39;source_directory&#39;,
    destination_directory_object =&gt; &#39;dest_directory&#39;,
    source_database              =&gt; &#39;db1.example.com&#39;,
    destination_database         =&gt; &#39;db2.example.com&#39;,
    bi_directional               =&gt; FALSE); -- Set to TRUE for bi-directional
END;
/
</pre>
<p>The <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure can take some time to run because it is performing many configuration tasks. Do not allow data manipulation language (DML) or data definition language (DDL) changes to the replicated database objects at the destination database while the procedure is running.</p>
<p>When a configuration procedure is run, information about its progress is recorded in the following data dictionary views: <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_PARAMS</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_BLOCKS</code>, and <code dir="ltr">DBA_RECOVERABLE_SCRIPT_ERRORS</code>. If the procedure stops because it encounters an error, then see <a class="olink STREP149" href="../STREP/man_gen_rep.htm#STREP149"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for instructions about using the <code dir="ltr">RECOVER_OPERATION</code> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to recover from these errors.</p>
</li>
<li>
<p>If you configured bi-directional replication, then configure latest time conflict resolution for all of the tables in the <code dir="ltr">hr</code> schema at both databases. This schema includes the <code dir="ltr">countries</code>, <code dir="ltr">departments</code>, <code dir="ltr">employees</code>, <code dir="ltr">jobs</code>, <code dir="ltr">job_history</code>, <code dir="ltr">locations</code>, and <code dir="ltr">regions</code> tables. See <a href="conflict.htm#g1013001">Chapter 9, &#34;Oracle Streams Conflict Resolution&#34;</a> for instructions.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The Oracle Enterprise Manager Cloud Control online help for an example that configures this replication environment using Oracle Enterprise Manager Cloud Control</div>
</div>
<!-- class="sect3" -->
<a id="CACICGDG"></a>
<div id="STREP271" class="sect3">
<h4 class="sect3">Configuring Two-Database Table Replication with Local Capture<a id="sthref169"></a><a id="sthref170"></a></h4>
<p>You can use the <a class="olink ARPLS827" href="../ARPLS/d_streams_adm.htm#ARPLS827"><code dir="ltr">MAINTAIN_TABLES</code></a> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to configure table replication. The example in this section uses this procedure to configure an Oracle Streams replication environment that maintains specific tables in the <code dir="ltr">hr</code> schema. The source database is <code dir="ltr">dbs1.example.com</code>, and the destination database is <code dir="ltr">dbs2.example.com</code>.</p>
<p>The following table lists the decisions that were made about the Oracle Streams replication environment configured in this example.</p>
<div class="inftblinformal">
<table class="cellalignment103" summary="This table lists the decision made for the example in this section." dir="ltr">
<thead>
<tr class="cellalignment92">
<th class="cellalignment104" id="r1c1-t32">Decision</th>
<th class="cellalignment104" id="r1c2-t32">Assumption for This Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment92">
<td class="cellalignment98" id="r2c1-t32" headers="r1c1-t32"><a href="prep_rep.htm#BABFCICA">Decide Which Type of Replication Environment to Configure</a></td>
<td class="cellalignment98" headers="r2c1-t32 r1c2-t32">This example configures one-way replication in a two database environment where the source database is read/write and the destination database is read-only.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r3c1-t32" headers="r1c1-t32"><a href="prep_rep.htm#CACJGEFE">Decide Whether to Configure Local or Downstream Capture for the Source Database</a></td>
<td class="cellalignment98" headers="r3c1-t32 r1c2-t32">This example configures local capture for the source database.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r4c1-t32" headers="r1c1-t32"><a href="prep_rep.htm#CACDCDJG">Decide Whether Changes Are Allowed at One Database or at Multiple Databases</a></td>
<td class="cellalignment98" headers="r4c1-t32 r1c2-t32">This example configures a replication environment that allows changes only at the source database.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r5c1-t32" headers="r1c1-t32"><a href="prep_rep.htm#BABIADHG">Decide Whether the Replication Environment Will Have Nonidentical Replicas</a></td>
<td class="cellalignment98" headers="r5c1-t32 r1c2-t32">This example configures identical shared database objects at the databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r6c1-t32" headers="r1c1-t32"><a href="prep_rep.htm#BABBHGIH">Decide Whether the Replication Environment Will Use Apply Handlers</a></td>
<td class="cellalignment98" headers="r6c1-t32 r1c2-t32">This example does not configure apply handlers.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r7c1-t32" headers="r1c1-t32"><a href="prep_rep.htm#CACIGHCH">Decide Whether to Maintain DDL Changes</a></td>
<td class="cellalignment98" headers="r7c1-t32 r1c2-t32">This example maintains DDL changes for a subset of the shared database objects.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r8c1-t32" headers="r1c1-t32"><a href="prep_rep.htm#BABICDIH">Decide How to Configure the Replication Environment</a></td>
<td class="cellalignment98" headers="r8c1-t32 r1c2-t32">This example uses the <code dir="ltr">MAINTAIN_TABLES</code> procedure to configure the environment.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>The replication environment maintains the following DML and DDL changes for the shared database objects:</p>
<ul>
<li>
<p>The replication environment will maintain DML changes to the following tables in the <code dir="ltr">hr</code> schema:</p>
<ul>
<li>
<p><code dir="ltr">departments</code></p>
</li>
<li>
<p><code dir="ltr">employees</code></p>
</li>
<li>
<p><code dir="ltr">countries</code></p>
</li>
<li>
<p><code dir="ltr">regions</code></p>
</li>
<li>
<p><code dir="ltr">locations</code></p>
</li>
<li>
<p><code dir="ltr">jobs</code></p>
</li>
<li>
<p><code dir="ltr">job_history</code></p>
</li>
</ul>
</li>
<li>
<p>The replication environment will maintain DDL changes to the following tables in the <code dir="ltr">hr</code> schema:</p>
<ul>
<li>
<p><code dir="ltr">departments</code></p>
</li>
<li>
<p><code dir="ltr">employees</code></p>
</li>
</ul>
</li>
</ul>
<p>The replication environment does not maintain DDL changes to the following tables in the <code dir="ltr">hr</code> schema:</p>
<ul>
<li>
<p><code dir="ltr">countries</code></p>
</li>
<li>
<p><code dir="ltr">regions</code></p>
</li>
<li>
<p><code dir="ltr">locations</code></p>
</li>
<li>
<p><code dir="ltr">jobs</code></p>
</li>
<li>
<p><code dir="ltr">job_history</code></p>
</li>
</ul>
<p>In this example, the <code dir="ltr">MAINTAIN_TABLES</code> procedure will not configure the replication environment directly. Instead, a configuration script will be generated, and this script will be modified so that DDL changes to the following tables are maintained: <code dir="ltr">departments</code> and <code dir="ltr">employees</code>. A Data Pump network import instantiation will be performed.</p>
<p>Ensure that you do not try to replicate tables that are not supported by Oracle Streams.</p>
<p><a href="#CIAJDEBI">Figure 2-3</a> provides an overview of the replication environment created in this example.</p>
<div id="STREP272" class="figure">
<p class="titleinfigure"><a id="CIAJDEBI"></a>Figure 2-3 Sample Oracle Streams Environment That Replicates Tables</p>
<img width="482" height="569" src="img/strep051.gif" alt="Description of Figure 2-3 follows"/><br/>
<a id="sthref171" href="img_text/strep051.htm">Description of &#34;Figure 2-3 Sample Oracle Streams Environment That Replicates Tables&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS172" href="../STRMS/strms_otmon.htm#STRMS172"><span class="italic">Oracle Streams Concepts and Administration</span></a> for instructions on determining which database objects are not supported by Oracle Streams</div>
<p>Complete the following steps to use the <code dir="ltr">MAINTAIN_TABLES</code> procedure to configure the environment:</p>
<ol>
<li>
<p>Complete the required tasks before running the <code dir="ltr">MAINTAIN_TABLES</code> procedure. See <a href="prep_rep.htm#CACGBCIB">&#34;Tasks to Complete Before Configuring Oracle Streams Replication&#34;</a> for instructions.</p>
<p>For this configuration, the following tasks must be completed:</p>
<ul>
<li>
<p>Configure an Oracle Streams administrator at both databases. See <a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a>.</p>
</li>
<li>
<p>Configure network connectivity and database links:</p>
<ul>
<li>
<p>Configure network connectivity between the source database <code dir="ltr">dbs1.example.com</code> and the destination database <code dir="ltr">dbs2.example.com</code>.</p>
</li>
<li>
<p>Create a database link from the source database <code dir="ltr">dbs1.example.com</code> to the destination database <code dir="ltr">dbs2.example.com</code>.</p>
</li>
<li>
<p>Because the <code dir="ltr">MAINTAIN_TABLES</code> procedure will perform a Data Pump network import instantiation, create a database link from the destination database <code dir="ltr">dbs2.example.com</code> to the source database <code dir="ltr">dbs1.example.com</code>.</p>
</li>
</ul>
<p>See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a>.</p>
</li>
<li>
<p>Ensure that the source database <code dir="ltr">dbs1.example.com</code> is in <code dir="ltr">ARCHIVELOG</code> mode. See <a href="prep_rep.htm#CACCBEBG">&#34;Ensuring That Each Source Database Is In ARCHIVELOG Mode&#34;</a>.</p>
</li>
<li>
<p>Ensure that the initialization parameters are set properly at both databases. See <a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a>.</p>
</li>
<li>
<p>Configure the Oracle Streams pool properly at both databases. See <a href="prep_rep.htm#BABBFJEB">&#34;Configuring the Oracle Streams Pool&#34;</a>.</p>
</li>
</ul>
</li>
<li>
<p>Create a script directory object at the source database. This example assumes that this directory object is <code dir="ltr">script_directory</code>.</p>
<p>See <a href="#CACHFABG">&#34;Creating the Required Directory Objects&#34;</a> for instructions.</p>
</li>
<li>
<p>In SQL*Plus, connect to the source database <code dir="ltr">dbs1.example.com</code> as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Run the <code dir="ltr">MAINTAIN_TABLES</code> procedure:</p>
<pre dir="ltr">DECLARE
  tables DBMS_UTILITY.UNCL_ARRAY;
  BEGIN
    tables(1) := &#39;hr.departments&#39;;
    tables(2) := &#39;hr.employees&#39;;
    tables(3) := &#39;hr.countries&#39;;
    tables(4) := &#39;hr.regions&#39;;
    tables(5) := &#39;hr.locations&#39;;
    tables(6) := &#39;hr.jobs&#39;;
    tables(7) := &#39;hr.job_history&#39;;
    DBMS_STREAMS_ADM.MAINTAIN_TABLES(
      table_names                  =&gt; tables,
      source_directory_object      =&gt; NULL,
      destination_directory_object =&gt; NULL,
      source_database              =&gt; &#39;dbs1.example.com&#39;,
      destination_database         =&gt; &#39;dbs2.example.com&#39;,
      perform_actions              =&gt; FALSE,
      script_name                  =&gt; &#39;configure_rep.sql&#39;,
      script_directory_object      =&gt; &#39;script_directory&#39;,
      bi_directional               =&gt; FALSE,
      include_ddl                  =&gt; FALSE,
      instantiation      =&gt; DBMS_STREAMS_ADM.INSTANTIATION_TABLE_NETWORK);
END;
/
</pre>
<p>The <code dir="ltr">configure_rep.sql</code> script generated by the procedure uses default values for the parameters that are not specified in the procedure call. The script uses system-generated names for the <code dir="ltr">ANYDATA</code> queues, queue tables, capture process, propagation, and apply process it creates. You can specify different names by using additional parameters available in the <code dir="ltr">MAINTAIN_TABLES</code> procedure. Notice that the <code dir="ltr">include_ddl</code> parameter is set to <code dir="ltr">FALSE</code>. Therefore, the script does not configure the replication environment to maintain DDL changes to the tables.</p>
<p>The procedure does not specify the <code dir="ltr">apply_name</code> parameter. Therefore, the default, <code dir="ltr">NULL</code>, is specified for this parameter. When the <code dir="ltr">apply_name</code> parameter is set to <code dir="ltr">NULL</code>, no apply process that applies changes from the source database can exist on the destination database. If an apply process that applies changes from the source database exists at the destination database, then specify a non-<code dir="ltr">NULL</code> value for the <code dir="ltr">apply_name</code> parameter.</p>
</li>
<li>
<p>Modify the <code dir="ltr">configure_rep.sql</code> script:</p>
<ol>
<li>
<p>Navigate to the directory that corresponds with the <code dir="ltr">script_directory</code> directory object on the computer system running the source database.</p>
</li>
<li>
<p>Open the <code dir="ltr">configure_rep.sql</code> script in a text editor. Consider making a backup of this script before modifying it.</p>
</li>
<li id="CACIHCBI">
<p>In the script, find the <code dir="ltr">ADD_TABLE_RULES</code> and <code dir="ltr">ADD_TABLE_PROPAGATION_RULES</code> procedure calls that create the table rules for the <code dir="ltr">hr.departments</code> and <code dir="ltr">hr.employees</code> tables. For example, the procedure calls for the capture process look similar to the following:</p>
<pre dir="ltr">dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;, 
    streams_type =&gt; &#39;CAPTURE&#39;, 
    streams_name =&gt; &#39;&#34;DBS1$CAP&#34;&#39;, 
    queue_name =&gt; &#39;&#34;STRMADMIN&#34;.&#34;DBS1$CAPQ&#34;&#39;, 
    include_dml =&gt; TRUE,
    <span class="bold">include_ddl =&gt; FALSE,</span>
    include_tagged_lcr =&gt; TRUE,
    source_database =&gt; &#39;DBS1.EXAMPLE.COM&#39;, 
    inclusion_rule =&gt; TRUE,
    and_condition =&gt; get_compatible);

dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;, 
    streams_type =&gt; &#39;CAPTURE&#39;, 
    streams_name =&gt; &#39;&#34;DBS1$CAP&#34;&#39;, 
    queue_name =&gt; &#39;&#34;STRMADMIN&#34;.&#34;DBS1$CAPQ&#34;&#39;, 
    include_dml =&gt; TRUE,
    <span class="bold">include_ddl =&gt; FALSE,</span>
    include_tagged_lcr =&gt; TRUE,
    source_database =&gt; &#39;DBS1.EXAMPLE.COM&#39;, 
    inclusion_rule =&gt; TRUE,
    and_condition =&gt; get_compatible);
</pre></li>
<li>
<p>In the procedure calls that you found in Step <a href="#CACIHCBI">c</a>, change the setting of the <code dir="ltr">include_ddl</code> parameter to <code dir="ltr">TRUE</code>. For example, the procedure calls for the capture process should look similar to the following after the modification:</p>
<pre dir="ltr">dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;DEPARTMENTS&#34;&#39;, 
    streams_type =&gt; &#39;CAPTURE&#39;, 
    streams_name =&gt; &#39;&#34;DBS1$CAP&#34;&#39;, 
    queue_name =&gt; &#39;&#34;STRMADMIN&#34;.&#34;DBS1$CAPQ&#34;&#39;, 
    include_dml =&gt; TRUE,
    <span class="bold">include_ddl =&gt; TRUE,</span>
    include_tagged_lcr =&gt; TRUE,
    source_database =&gt; &#39;DBS1.EXAMPLE.COM&#39;, 
    inclusion_rule =&gt; TRUE,
    and_condition =&gt; get_compatible);

dbms_streams_adm.add_table_rules(
    table_name =&gt; &#39;&#34;HR&#34;.&#34;EMPLOYEES&#34;&#39;, 
    streams_type =&gt; &#39;CAPTURE&#39;, 
    streams_name =&gt; &#39;&#34;DBS1$CAP&#34;&#39;, 
    queue_name =&gt; &#39;&#34;STRMADMIN&#34;.&#34;DBS1$CAPQ&#34;&#39;, 
    include_dml =&gt; TRUE,
    <span class="bold">include_ddl =&gt; TRUE,</span>
    include_tagged_lcr =&gt; TRUE,
    source_database =&gt; &#39;DBS1.EXAMPLE.COM&#39;, 
    inclusion_rule =&gt; TRUE,
    and_condition =&gt; get_compatible);
</pre>
<p>Remember to change the procedure calls for all capture processes, propagations, and apply processes.</p>
</li>
<li>
<p>Save and close the <code dir="ltr">configure_rep.sql</code> script.</p>
</li>
</ol>
</li>
<li>
<p>In SQL*Plus, connect to the source database <code dir="ltr">dbs1.example.com</code> as the Oracle Streams administrator.</p>
</li>
<li>
<p>At the source database, run the configuration script:</p>
<pre dir="ltr">SET ECHO ON
SPOOL configure_rep.out
@configure_rep.sql
</pre>
<p>The script prompts you to supply information about the database names and the Oracle Streams administrators. When this configuration script completes, the Oracle Streams single-source replication environment is configured. The script also starts the queues, capture process, propagations, and apply process.</p>
</li>
</ol>
<p>The resulting single-source replication environment has the following characteristics:</p>
<ul>
<li>
<p>At the source database, supplemental logging is configured for the shared database objects.</p>
</li>
<li>
<p>The source database <code dir="ltr">dbs1.example.com</code> has a queue and queue table with system-generated names.</p>
</li>
<li>
<p>The destination database <code dir="ltr">dbs2.example.com</code> has a queue and queue table with system-generated names.</p>
</li>
<li>
<p>At the source database, a capture process with a system-generated name captures DML changes to all of the tables in the <code dir="ltr">hr</code> schema and DDL changes to the <code dir="ltr">hr.departments</code> and <code dir="ltr">hr.employees</code> tables.</p>
</li>
<li>
<p>A propagation running on the source database with a system-generated name sends the captured changes from the queue at the source database to the queue at the destination database.</p>
</li>
<li>
<p>At the destination database, an apply process with a system-generated name dequeues the changes from the queue and applies them to the tables at the destination database.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIAFJECH"></a>
<div id="STREP601" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Examples That Configure Two-Database Replication with Downstream Capture<a id="sthref172"></a><a id="sthref173"></a></h3>
<p>Each of the following examples configures a two-database replication environment that uses a downstream capture process:</p>
<ul>
<li>
<p><a href="#i1015381">Configuring Tablespace Replication with Downstream Capture at Destination</a></p>
</li>
<li>
<p><a href="#CIAFFGIH">Configuring Schema Replication with Downstream Capture at Destination</a></p>
</li>
<li>
<p><a href="#CACHEGGE">Configuring Schema Replication with Downstream Capture at Third Database</a></p>
</li>
</ul>
<a id="i1015381"></a>
<div id="STREP267" class="sect3">
<h4 class="sect3">Configuring Tablespace Replication with Downstream Capture at Destination<a id="sthref174"></a><a id="sthref175"></a><a id="sthref176"></a><a id="sthref177"></a><a id="sthref178"></a><a id="sthref179"></a><a id="sthref180"></a><a id="sthref181"></a><a id="sthref182"></a><a id="sthref183"></a></h4>
<p>You can use the following procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to configure tablespace replication:</p>
<ul>
<li>
<p><a class="olink ARPLS863" href="../ARPLS/d_streams_adm.htm#ARPLS863"><code dir="ltr">MAINTAIN_SIMPLE_TTS</code></a></p>
</li>
<li>
<p><a class="olink ARPLS864" href="../ARPLS/d_streams_adm.htm#ARPLS864"><code dir="ltr">MAINTAIN_TTS</code></a></p>
</li>
<li>
<p><a class="olink ARPLS831" href="../ARPLS/d_streams_adm.htm#ARPLS831"><code dir="ltr">PRE_INSTANTIATION_SETUP</code></a> and <a class="olink ARPLS830" href="../ARPLS/d_streams_adm.htm#ARPLS830"><code dir="ltr">POST_INSTANTIATION_SETUP</code></a></p>
</li>
</ul>
<p>You can use the <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> procedure to configure Oracle Streams replication for a simple tablespace, and you can use the <code dir="ltr">MAINTAIN_TTS</code> procedure to configure Oracle Streams replication for a set of self-contained tablespaces. These procedures use transportable tablespaces, Data Pump, the <code dir="ltr">DBMS_STREAMS_TABLESPACE_ADM</code> package, and the <code dir="ltr">DBMS_FILE_TRANSFER</code> package to configure the environment.</p>
<p>A self-contained tablespace has no references from the tablespace pointing outside of the tablespace. For example, if an index in the tablespace is for a table in a different tablespace, then the tablespace is not self-contained. A simple tablespace is a self-contained tablespace that uses only one data file. When there are multiple tablespaces in a tablespace set, a self-contained tablespace set has no references from inside the set of tablespaces pointing outside of the set of tablespaces.</p>
<p>These procedures clone the tablespace or tablespaces being configured for replication from the source database to the destination database. The <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> procedure uses the <code dir="ltr">CLONE_SIMPLE_TABLESPACE</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACE_ADM</code> package, and the <code dir="ltr">MAINTAIN_TTS</code> procedure uses the <code dir="ltr">CLONE_TABLESPACES</code> procedure in the <code dir="ltr">DBMS_STREAMS_TABLESPACE_ADM</code> package. When a tablespace is cloned, it is made read-only automatically until the clone operation is complete.</p>
<p>The example in this section uses the <code dir="ltr">MAINTAIN_TTS</code> procedure to configure an Oracle Streams replication environment that maintains the following tablespaces using Oracle Streams:</p>
<ul>
<li>
<p><code dir="ltr">tbs1</code></p>
</li>
<li>
<p><code dir="ltr">tbs2</code></p>
</li>
</ul>
<p>The source database is <code dir="ltr">dbs1.example.com</code>, and the destination database is <code dir="ltr">dbs2.example.com</code>.</p>
<p>The following table lists the decisions that were made about the Oracle Streams replication environment configured in this example.</p>
<div class="inftblinformal">
<table class="cellalignment103" summary="This table lists the decision made for the example in this section." dir="ltr">
<thead>
<tr class="cellalignment92">
<th class="cellalignment104" id="r1c1-t34">Decision</th>
<th class="cellalignment104" id="r1c2-t34">Assumption for This Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment92">
<td class="cellalignment98" id="r2c1-t34" headers="r1c1-t34"><a href="prep_rep.htm#BABFCICA">Decide Which Type of Replication Environment to Configure</a></td>
<td class="cellalignment98" headers="r2c1-t34 r1c2-t34">This example configures one-way replication in a two database environment where the source database is read/write and the destination database is read-only.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r3c1-t34" headers="r1c1-t34"><a href="prep_rep.htm#CACJGEFE">Decide Whether to Configure Local or Downstream Capture for the Source Database</a></td>
<td class="cellalignment98" headers="r3c1-t34 r1c2-t34">This example configures a downstream capture process running on the destination database (<code dir="ltr">dbs2.example.com</code>) that captures changes made to the source database (<code dir="ltr">dbs1.example.com</code>). The downstream capture process will be an archived-log downstream capture process.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r4c1-t34" headers="r1c1-t34"><a href="prep_rep.htm#CACDCDJG">Decide Whether Changes Are Allowed at One Database or at Multiple Databases</a></td>
<td class="cellalignment98" headers="r4c1-t34 r1c2-t34">This example configures a replication environment that allows changes only at the source database.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r5c1-t34" headers="r1c1-t34"><a href="prep_rep.htm#BABIADHG">Decide Whether the Replication Environment Will Have Nonidentical Replicas</a></td>
<td class="cellalignment98" headers="r5c1-t34 r1c2-t34">This example configures identical shared database objects at the databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r6c1-t34" headers="r1c1-t34"><a href="prep_rep.htm#BABBHGIH">Decide Whether the Replication Environment Will Use Apply Handlers</a></td>
<td class="cellalignment98" headers="r6c1-t34 r1c2-t34">This example does not configure apply handlers.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r7c1-t34" headers="r1c1-t34"><a href="prep_rep.htm#CACIGHCH">Decide Whether to Maintain DDL Changes</a></td>
<td class="cellalignment98" headers="r7c1-t34 r1c2-t34">This example maintains DDL changes to the tablespaces and the database objects in the tablespaces.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r8c1-t34" headers="r1c1-t34"><a href="prep_rep.htm#BABICDIH">Decide How to Configure the Replication Environment</a></td>
<td class="cellalignment98" headers="r8c1-t34 r1c2-t34">This example uses the <code dir="ltr">MAINTAIN_TTS</code> procedure to configure the environment.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>In this example, the <code dir="ltr">MAINTAIN_TTS</code> procedure will configure the replication environment directly. A configuration script will not be generated. In addition, this example makes the following assumptions:</p>
<ul>
<li>
<p>The tablespaces <code dir="ltr">tbs1</code> and <code dir="ltr">tbs2</code> make a self-contained tablespace set at the source database <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>The data files for the tablespace set are both in the <code dir="ltr">/orc/dbs</code> directory at the source database <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>The <code dir="ltr">dbs2.example.com</code> database does not contain the tablespace set currently.</p>
</li>
</ul>
<p>The <code dir="ltr">MAINTAIN_SIMPLE_TTS</code> and <code dir="ltr">MAINTAIN_TTS</code> procedures automatically exclude database objects that are not supported by Oracle Streams from the replication environment by adding rules to the negative rule set of each capture and apply process. The <code dir="ltr">PRE_INSTANTIATION_SETUP</code> and <code dir="ltr">POST_INSTANTIATION_SETUP</code> procedures enable you to specify which database objects to exclude from the replication environment.</p>
<p>Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</p>
<p><a href="#CIACHFGI">Figure 2-4</a> provides an overview of the replication environment created in this example.</p>
<div id="STREP268" class="figure">
<p class="titleinfigure"><a id="CIACHFGI"></a>Figure 2-4 Sample Oracle Streams Environment That Replicates Tablespaces</p>
<img width="501" height="443" src="img/strep049.gif" alt="Description of Figure 2-4 follows"/><br/>
<a id="sthref184" href="img_text/strep049.htm">Description of &#34;Figure 2-4 Sample Oracle Streams Environment That Replicates Tablespaces&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS172" href="../STRMS/strms_otmon.htm#STRMS172"><span class="italic">Oracle Streams Concepts and Administration</span></a> for instructions on determining which database objects are not supported by Oracle Streams</div>
<p>Complete the following steps to use the <code dir="ltr">MAINTAIN_TTS</code> procedure to configure the environment:</p>
<ol>
<li>
<p>Complete the required tasks before running the <code dir="ltr">MAINTAIN_TTS</code> procedure. See <a href="prep_rep.htm#CACGBCIB">&#34;Tasks to Complete Before Configuring Oracle Streams Replication&#34;</a> for instructions.</p>
<p>For this configuration, the following tasks must be completed:</p>
<ul>
<li>
<p>Configure an Oracle Streams administrator at both databases. See <a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a>.</p>
</li>
<li>
<p>Configure network connectivity and database links:</p>
<ul>
<li>
<p>Configure network connectivity between the source database <code dir="ltr">dbs1.example.com</code> and the destination database <code dir="ltr">dbs2.example.com</code>.</p>
</li>
<li>
<p>Create a database link from the source database <code dir="ltr">dbs1.example.com</code> to the destination database <code dir="ltr">dbs2.example.com</code>.</p>
</li>
<li>
<p>Because downstream capture will be configured at the destination database, create a database link from the destination database <code dir="ltr">dbs2.example.com</code> to the source database <code dir="ltr">dbs1.example.com</code>.</p>
</li>
</ul>
<p>See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a>.</p>
</li>
<li>
<p>Ensure that both databases are in <code dir="ltr">ARCHIVELOG</code> mode. See <a href="prep_rep.htm#CACCBEBG">&#34;Ensuring That Each Source Database Is In ARCHIVELOG Mode&#34;</a>.</p>
</li>
<li>
<p>Ensure that the initialization parameters are set properly at both databases. See <a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a>.</p>
</li>
<li>
<p>Configure the Oracle Streams pool properly at both databases. See <a href="prep_rep.htm#BABBFJEB">&#34;Configuring the Oracle Streams Pool&#34;</a>.</p>
</li>
<li>
<p>Because the destination database will be the capture database for changes made to the source database, configure log file copying from the source database <code dir="ltr">dbs1.example.com</code> to the destination database <code dir="ltr">dbs2.example.com</code>. The capture process will be an archived-log downstream capture process. See <a href="prep_rep.htm#i1014093">&#34;Configuring Log File Transfer to a Downstream Capture Database&#34;</a>.</p>
</li>
</ul>
</li>
<li>
<p>Create the following required directory objects:</p>
<ul>
<li>
<p>A source directory object at the source database. This example assumes that this directory object is <code dir="ltr">source_directory</code>.</p>
</li>
<li>
<p>A destination directory object at the destination database. This example assumes that this directory object is <code dir="ltr">dest_directory</code>.</p>
</li>
</ul>
<p>See <a href="#CACHFABG">&#34;Creating the Required Directory Objects&#34;</a> for instructions.</p>
</li>
<li>
<p>In SQL*Plus, connect to the database that contains the tablespace set as the Oracle Streams administrator. In this example, connect to the <code dir="ltr">dbs1.example.com</code> database.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Create a directory object for the directory that contains the data files for the tablespaces in the tablespace set. For example, the following statement creates a directory object named <code dir="ltr">tbs_directory</code> that corresponds to the <code dir="ltr">/orc/dbs</code> directory:</p>
<pre dir="ltr">CREATE DIRECTORY tbs_directory AS &#39;/orc/dbs&#39;;
</pre>
<p>If the data files are in multiple directories, then a directory object must exist for each of these directories, and the user who runs the <code dir="ltr">MAINTAIN_TTS</code> procedure in Step <a href="#i1017815">6</a> must have <code dir="ltr">READ</code> privilege on these directory objects. In this example, the Oracle Streams administrator has this privilege because this user creates the directory object.</p>
</li>
<li>
<p>In SQL*Plus, connect to the destination database <code dir="ltr">dbs2.example.com</code> as the Oracle Streams administrator.</p>
</li>
<li id="i1017815">
<p>Run the <code dir="ltr">MAINTAIN_TTS</code> procedure:</p>
<pre dir="ltr">DECLARE
  t_names  DBMS_STREAMS_TABLESPACE_ADM.TABLESPACE_SET;
BEGIN
  -- Tablespace names
  t_names(1) := &#39;TBS1&#39;;
  t_names(2) := &#39;TBS2&#39;;
  DBMS_STREAMS_ADM.MAINTAIN_TTS(
     tablespace_names             =&gt; t_names,
     source_directory_object      =&gt; &#39;source_directory&#39;,
     destination_directory_object =&gt; &#39;dest_directory&#39;,
     source_database              =&gt; &#39;dbs1.example.com&#39;,
     destination_database         =&gt; &#39;dbs2.example.com&#39;,
     perform_actions              =&gt; TRUE,
     capture_name                 =&gt; &#39;capture_tts&#39;,
     capture_queue_table          =&gt; &#39;streams_queue_table&#39;,
     capture_queue_name           =&gt; &#39;streams_queue&#39;,
     apply_name                   =&gt; &#39;apply_tts&#39;,
     apply_queue_table            =&gt; &#39;streams_queue_table&#39;,
     apply_queue_name             =&gt; &#39;streams_queue&#39;);
     bi_directional               =&gt; FALSE,
     include_ddl                  =&gt; TRUE);
END;
/
</pre>
<p>When this procedure completes, the Oracle Streams single-source replication environment is configured.</p>
<p>Because the procedure is run at the destination database, downstream capture is configured at the destination database for changes to the source database. When you use a configuration procedure to configure downstream capture, the parameters that specify the queue and queue table names are important. In such a configuration, it is more efficient for the capture process and apply process to use the same queue at the downstream capture database to avoid propagating changes between queues. To improve efficiency in this sample configuration, notice that <code dir="ltr">streams_queue</code> is specified for both the <code dir="ltr">capture_queue_name</code> and <code dir="ltr">apply_queue_name</code> parameters. Also, <code dir="ltr">streams_queue_table</code> is specified for both the <code dir="ltr">capture_queue_table</code> and <code dir="ltr">apply_queue_table</code> parameters.</p>
<p>To monitor the progress of the configuration operation, follow the instructions in <a href="#CIAGFIGG">&#34;Monitoring Oracle Streams Configuration Progress&#34;</a>.</p>
<p>If this procedure encounters an error and stops, then see <a href="man_gen_rep.htm#CEGICHAA">&#34;Recovering from Operation Errors&#34;</a> for information about either recovering from the error or rolling back the configuration operation.</p>
</li>
</ol>
<p>The resulting single-source replication environment has the following characteristics:</p>
<ul>
<li>
<p>Supplemental logging is configured for the shared database objects at the source database <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>The <code dir="ltr">dbs1.example.com</code> database has a queue named <code dir="ltr">streams_queue</code> which uses a queue table named <code dir="ltr">streams_queue_table</code>. This queue is for the apply process.</p>
</li>
<li>
<p>The <code dir="ltr">dbs2.example.com</code> database has a queue named <code dir="ltr">streams_queue</code> which uses a queue table named <code dir="ltr">streams_queue_table</code>. This queue is shared by the downstream capture process and the apply process.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs2.example.com</code> database, an archived-log downstream capture process named <code dir="ltr">capture_tts</code> captures changes made to the source database. Specifically, this downstream capture process captures DML changes made to the tables in the <code dir="ltr">tbs1</code> and <code dir="ltr">tbs2</code> tablespaces and DDL changes to these tablespaces and the database objects in them.</p>
<p>If the capture process is not enabled after an inordinately long time, then check the alert log for errors. See <a class="olink STRMS1036" href="../STRMS/strms_trcapture.htm#STRMS1036"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs2.example.com</code> database, an apply process named <code dir="ltr">apply_tts</code> dequeues the changes from its queue and applies them to the shared database objects.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CIAFFGIH"></a>
<div id="STREP602" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring Schema Replication with Downstream Capture at Destination<a id="sthref185"></a><a id="sthref186"></a></h4>
<p>This example configures an Oracle Streams replication environment that replicates data manipulation language (DML) changes to all of the tables in the <code dir="ltr">hr</code> schema. This example configures a two-database replication environment with a downstream capture process at the destination database. This example uses the global database names <code dir="ltr">src.example.com</code> and <code dir="ltr">dest.example.com</code>. However, you can substitute databases in your environment to complete the example. See <a href="prep_rep.htm#BABFCICA">&#34;Decide Which Type of Replication Environment to Configure&#34;</a> for more information about two-database replication environments.</p>
<p>In this example, the downstream capture process runs on the destination database <code dir="ltr">dest.example.com</code>. Therefore, the resources required to capture changes are freed at the source database <code dir="ltr">src.example.com</code>. This example configures a real-time downstream capture process, not an archived-log downstream capture process. The advantage of real-time downstream capture is that it reduces the amount of time required to capture the changes made at the source database. The time is reduced because the real-time downstream capture process does not need to wait for the redo log file to be archived before it can capture data from it.</p>
<p>The following table lists the decisions that were made about the Oracle Streams replication environment configured in this example.</p>
<div class="inftblinformal">
<table class="cellalignment103" summary="This table lists the decision made for the example in this section." dir="ltr">
<thead>
<tr class="cellalignment92">
<th class="cellalignment104" id="r1c1-t36">Decision</th>
<th class="cellalignment104" id="r1c2-t36">Assumption for This Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment92">
<td class="cellalignment98" id="r2c1-t36" headers="r1c1-t36"><a href="prep_rep.htm#BABFCICA">Decide Which Type of Replication Environment to Configure</a></td>
<td class="cellalignment98" headers="r2c1-t36 r1c2-t36">This example configures one-way replication in a two database environment where the source database is read/write and the destination database is read-only.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r3c1-t36" headers="r1c1-t36"><a href="prep_rep.htm#CACJGEFE">Decide Whether to Configure Local or Downstream Capture for the Source Database</a></td>
<td class="cellalignment98" headers="r3c1-t36 r1c2-t36">This example configures a downstream capture process running on the destination database (<code dir="ltr">dest.example.com</code>) that captures changes made to the source database (<code dir="ltr">src.example.com</code>). The downstream capture process will be a real-time downstream capture process.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r4c1-t36" headers="r1c1-t36"><a href="prep_rep.htm#CACDCDJG">Decide Whether Changes Are Allowed at One Database or at Multiple Databases</a></td>
<td class="cellalignment98" headers="r4c1-t36 r1c2-t36">This example configures a replication environment that allows changes only at the source database.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r5c1-t36" headers="r1c1-t36"><a href="prep_rep.htm#BABIADHG">Decide Whether the Replication Environment Will Have Nonidentical Replicas</a></td>
<td class="cellalignment98" headers="r5c1-t36 r1c2-t36">This example configures identical shared database objects at the databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r6c1-t36" headers="r1c1-t36"><a href="prep_rep.htm#BABBHGIH">Decide Whether the Replication Environment Will Use Apply Handlers</a></td>
<td class="cellalignment98" headers="r6c1-t36 r1c2-t36">This example does not configure apply handlers.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r7c1-t36" headers="r1c1-t36"><a href="prep_rep.htm#CACIGHCH">Decide Whether to Maintain DDL Changes</a></td>
<td class="cellalignment98" headers="r7c1-t36 r1c2-t36">This example maintains DDL changes to the tablespaces and the database objects in the tablespaces.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r8c1-t36" headers="r1c1-t36"><a href="prep_rep.htm#BABICDIH">Decide How to Configure the Replication Environment</a></td>
<td class="cellalignment98" headers="r8c1-t36 r1c2-t36">This example uses the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure the environment.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>The database objects being configured for replication might or might not exist at the destination database when you run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure. If the database objects do not exist at the destination database, then the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure instantiates them at the destination database using a Data Pump export/import. During instantiation, the instantiation SCN is set for these database objects. If the database objects already exist at the destination database, then the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure retains the existing database objects and sets the instantiation SCN for them. In this example, the <code dir="ltr">hr</code> schema exists at both the <code dir="ltr">src.example.com</code> database and the <code dir="ltr">dest.example.com</code> database before the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure is run.</p>
<p>In this example, the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure will configure the replication environment directly. A configuration script will not be generated. A Data Pump export dump file instantiation will be performed.</p>
<p><a href="#CIAEAAEE">Figure 2-5</a> provides an overview of the environment created in this example.</p>
<div id="STREP609" class="figure">
<p class="titleinfigure"><a id="CIAEAAEE"></a>Figure 2-5 Two-Database Replication Environment with a Downstream Capture Process</p>
<img width="503" height="489" src="img/strep506.gif" alt="Description of Figure 2-5 follows"/><br/>
<a id="sthref187" href="img_text/strep506.htm">Description of &#34;Figure 2-5 Two-Database Replication Environment with a Downstream Capture Process&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>Complete the following steps to use the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure the environment:</p>
<ol>
<li>
<p>Complete the following tasks to prepare for the two-database replication environment:</p>
<ol>
<li>
<p>Configure network connectivity so that the <code dir="ltr">src.example.com</code> database and the <code dir="ltr">dest.example.com</code> database can communicate with each other.</p>
<p>See <a class="olink ADMQS004" href="../ADMQS/GUID-C6DD213A-D37E-4905-983D-F9DCA8AE286A.htm#ADMQS004"><span class="italic">Oracle Database 2 Day DBA</span></a> for information about configuring network connectivity between databases.</p>
</li>
<li>
<p>Configure an Oracle Streams administrator at each database that will participate in the replication environment. See <a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a> for instructions. This example assumes that the Oracle Streams administrator is <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>Create a database link from the source database to the destination database and from the destination database to the source database. In this example, create the following database links:</p>
<ul>
<li>
<p>From the <code dir="ltr">src.example.com</code> database to the <code dir="ltr">dest.example.com</code> database. Both the name and the service name of the database link must be <code dir="ltr">dest.example.com</code>.</p>
</li>
<li>
<p>From the <code dir="ltr">dest.example.com</code> database to the <code dir="ltr">src.example.com</code> database. Both the name and the service name of the database link must be <code dir="ltr">src.example.com</code>.</p>
</li>
</ul>
<p>The database link from the <code dir="ltr">dest.example.com</code> database to the <code dir="ltr">src.example.com</code> database is necessary because the <code dir="ltr">src.example.com</code> database is the source database for the downstream capture process at the <code dir="ltr">dest.example.com</code> database. This database link simplifies the creation and configuration of the capture process.</p>
<p>Each database link should be created in the Oracle Streams administrator&#39;s schema. Also, each database link should connect to the Oracle Streams administrator at the other database. See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a> for instructions.</p>
</li>
<li>
<p>Set initialization parameters properly at each database that will participate in the Oracle Streams replication environment. See <a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a> for instructions.</p>
</li>
<li>
<p>Configure both databases to run in <code dir="ltr">ARCHIVELOG</code> mode. For a downstream capture process to capture changes generated at a source database, both the source database and the downstream capture database must be running in <code dir="ltr">ARCHIVELOG</code> mode. In this example, the <code dir="ltr">src.example.com</code> and <code dir="ltr">dest.example.com</code> databases must be running in <code dir="ltr">ARCHIVELOG</code> mode. See <a class="olink ADMIN008" href="../ADMIN/archredo.htm#ADMIN008"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about configuring a database to run in <code dir="ltr">ARCHIVELOG</code> mode.</p>
</li>
<li>
<p>Because the destination database (<code dir="ltr">dest.example.com</code>) will be the capture database for changes made to the source database, configure log file copying from the source database <code dir="ltr">src.example.com</code> to the destination database <code dir="ltr">dest.example.com</code>. See <a href="prep_rep.htm#i1014093">&#34;Configuring Log File Transfer to a Downstream Capture Database&#34;</a>.</p>
</li>
<li>
<p>Because this example configures a real-time downstream capture process, add standby redo logs at the downstream database. See <a href="prep_rep.htm#BEHEGACH">&#34;Adding Standby Redo Logs for Real-Time Downstream Capture&#34;</a>.</p>
</li>
</ol>
</li>
<li>
<p>Create the following required directory objects:</p>
<ul>
<li>
<p>A source directory object at the source database. This example assumes that this directory object is <code dir="ltr">source_directory</code>.</p>
</li>
<li>
<p>A destination directory object at the destination database. This example assumes that this directory object is <code dir="ltr">dest_directory</code>.</p>
</li>
</ul>
<p>See <a href="#CACHFABG">&#34;Creating the Required Directory Objects&#34;</a> for instructions.</p>
</li>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">dest.example.com</code> database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>While still connected to the <code dir="ltr">dest.example.com</code> database as the Oracle Streams administrator, run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure replication between the <code dir="ltr">src.example.com</code> database and the <code dir="ltr">dest.example.com</code> database:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.MAINTAIN_SCHEMAS(
    schema_names                 =&gt; &#39;hr&#39;,
    source_directory_object      =&gt; &#39;source_directory&#39;,
    destination_directory_object =&gt; &#39;dest_directory&#39;,
    source_database              =&gt; &#39;src.example.com&#39;,
    destination_database         =&gt; &#39;dest.example.com&#39;,
    capture_name                 =&gt; &#39;capture&#39;,
    capture_queue_table          =&gt; &#39;streams_queue_qt&#39;,
    capture_queue_name           =&gt; &#39;streams_queue&#39;,
    apply_name                   =&gt; &#39;apply&#39;,
    apply_queue_table            =&gt; &#39;streams_queue_qt&#39;,
    apply_queue_name             =&gt; &#39;streams_queue&#39;);
END;
/
</pre>
<p>The <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure can take some time to run because it is performing many configuration tasks. Do not allow data manipulation language (DML) or data definition language (DDL) changes to the replicated database objects at the destination database while the procedure is running.</p>
<p>In the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure, only the following parameters are required: <code dir="ltr">schema_names</code>, <code dir="ltr">source_directory_object</code>, <code dir="ltr">destination_directory_object</code>, <code dir="ltr">source_database</code>, and <code dir="ltr">destination_database</code>.</p>
<p>This example specifies the other parameters to show that you can choose the name for the capture process, capture process&#39;s queue table, capture process&#39;s queue, apply process, apply process&#39;s queue table, and apply process&#39;s queue. If you do not specify these parameters, then system-generated names are used.</p>
<p>When you use a configuration procedure to configure downstream capture, the parameters that specify the queue and queue table names are important. In such a configuration, it is more efficient for the capture process and apply process to use the same queue at the downstream capture database to avoid propagating changes between queues. To improve efficiency in this sample configuration, notice that <code dir="ltr">streams_queue</code> is specified for both the <code dir="ltr">capture_queue_name</code> and <code dir="ltr">apply_queue_name</code> parameters. Also, <code dir="ltr">streams_queue_qt</code> is specified for both the <code dir="ltr">capture_queue_table</code> and <code dir="ltr">apply_queue_table</code> parameters.</p>
<p>When a configuration procedure is run, information about its progress is recorded in the following data dictionary views: <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_PARAMS</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_BLOCKS</code>, and <code dir="ltr">DBA_RECOVERABLE_SCRIPT_ERRORS</code>. If the procedure stops because it encounters an error, then see <a class="olink STREP149" href="../STREP/man_gen_rep.htm#STREP149"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for instructions about using the <code dir="ltr">RECOVER_OPERATION</code> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to recover from these errors.</p>
<p>Wait until the procedure completes successfully before proceeding to the next step.</p>
</li>
<li>
<p>While still connected to the <code dir="ltr">dest.example.com</code> database as the Oracle Streams administrator, set the <code dir="ltr">downstream_real_time_mine</code> capture process parameter to <code dir="ltr">Y</code>:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.SET_PARAMETER(
    capture_name =&gt; &#39;capture&#39;,
    parameter    =&gt; &#39;downstream_real_time_mine&#39;,
    value        =&gt; &#39;Y&#39;);
END;
/
</pre></li>
<li>
<p>In SQL*Plus, connect to the source database <code dir="ltr">src.example.com</code> as an administrative user.</p>
</li>
<li>
<p>Archive the current log file at the source database:</p>
<pre dir="ltr">ALTER SYSTEM ARCHIVE LOG CURRENT;
</pre>
<p>Archiving the current log file at the source database starts real-time mining of the source database redo log.</p>
<p>If the capture process appears to be waiting for redo data for an inordinately long time, then check the alert log for errors. See <a class="olink STRMS1036" href="../STRMS/strms_trcapture.htm#STRMS1036"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The Oracle Enterprise Manager Cloud Control online help for an example that configures this replication environment using Oracle Enterprise Manager Cloud Control</div>
</div>
<!-- class="sect3" -->
<a id="CACHEGGE"></a>
<div id="STREP269" class="sect3">
<h4 class="sect3">Configuring Schema Replication with Downstream Capture at Third Database<a id="sthref188"></a><a id="sthref189"></a></h4>
<p>You can use the <a class="olink ARPLS826" href="../ARPLS/d_streams_adm.htm#ARPLS826"><code dir="ltr">MAINTAIN_SCHEMAS</code></a> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to configure schema replication. The example in this section uses this procedure to configure an Oracle Streams replication environment that maintains the <code dir="ltr">hr</code> schema. The source database is <code dir="ltr">dbs1.example.com</code>, and the destination database is <code dir="ltr">dbs3.example.com</code>.</p>
<p>The following table lists the decisions that were made about the Oracle Streams replication environment configured in this example.</p>
<div class="inftblinformal">
<table class="cellalignment103" summary="This table lists the decision made for the example in this section." dir="ltr">
<thead>
<tr class="cellalignment92">
<th class="cellalignment104" id="r1c1-t38">Decision</th>
<th class="cellalignment104" id="r1c2-t38">Assumption for This Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment92">
<td class="cellalignment98" id="r2c1-t38" headers="r1c1-t38"><a href="prep_rep.htm#BABFCICA">Decide Which Type of Replication Environment to Configure</a></td>
<td class="cellalignment98" headers="r2c1-t38 r1c2-t38">This example configures bi-directional replication in a two database environment where both databases are read/write.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r3c1-t38" headers="r1c1-t38"><a href="prep_rep.htm#CACJGEFE">Decide Whether to Configure Local or Downstream Capture for the Source Database</a></td>
<td class="cellalignment98" headers="r3c1-t38 r1c2-t38">This example configures a downstream capture process running on a third database named <code dir="ltr">dbs2.example.com</code> that captures changes made to the source database (<code dir="ltr">dbs1.example.com</code>), and a propagation at <code dir="ltr">dbs2.example.com</code> will propagate these captured changes to the destination database (<code dir="ltr">dbs3.example.com</code>). The downstream capture process will be a real-time downstream capture process.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r4c1-t38" headers="r1c1-t38"><a href="prep_rep.htm#CACDCDJG">Decide Whether Changes Are Allowed at One Database or at Multiple Databases</a></td>
<td class="cellalignment98" headers="r4c1-t38 r1c2-t38">This example configures a replication environment that allows changes to the replicated database objects at both databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r5c1-t38" headers="r1c1-t38"><a href="prep_rep.htm#BABIADHG">Decide Whether the Replication Environment Will Have Nonidentical Replicas</a></td>
<td class="cellalignment98" headers="r5c1-t38 r1c2-t38">This example configures identical shared database objects at the databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r6c1-t38" headers="r1c1-t38"><a href="prep_rep.htm#BABBHGIH">Decide Whether the Replication Environment Will Use Apply Handlers</a></td>
<td class="cellalignment98" headers="r6c1-t38 r1c2-t38">This example does not configure apply handlers.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r7c1-t38" headers="r1c1-t38"><a href="prep_rep.htm#CACIGHCH">Decide Whether to Maintain DDL Changes</a></td>
<td class="cellalignment98" headers="r7c1-t38 r1c2-t38">This example maintains DDL changes to <code dir="ltr">hr</code> schema and the database objects in the <code dir="ltr">hr</code> schema will be maintained.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r8c1-t38" headers="r1c1-t38"><a href="prep_rep.htm#BABICDIH">Decide How to Configure the Replication Environment</a></td>
<td class="cellalignment98" headers="r8c1-t38 r1c2-t38">This example uses the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure the environment.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>In this example, the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure will configure the replication environment directly. A configuration script will not be generated. A Data Pump export dump file instantiation will be performed.</p>
<p>The <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure automatically excludes database objects that are not supported by Oracle Streams from the replication environment by adding rules to the negative rule set of each capture and apply process. Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</p>
<p><a href="#CIADIDHH">Figure 2-6</a> provides an overview of the replication environment created in this example.</p>
<div id="STREP270" class="figure">
<p class="titleinfigure"><a id="CIADIDHH"></a>Figure 2-6 Sample Oracle Streams Environment That Replicates a Schema</p>
<img width="666" height="800" src="img/strep050.png" alt="Description of Figure 2-6 follows"/><br/>
<a id="sthref190" href="img_text/strep050.htm">Description of &#34;Figure 2-6 Sample Oracle Streams Environment That Replicates a Schema&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS172" href="../STRMS/strms_otmon.htm#STRMS172"><span class="italic">Oracle Streams Concepts and Administration</span></a> for instructions on determining which database objects are not supported by Oracle Streams</div>
<p>Complete the following steps to use the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure the environment:</p>
<ol>
<li>
<p>Complete the required tasks before running the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure. See <a href="prep_rep.htm#CACGBCIB">&#34;Tasks to Complete Before Configuring Oracle Streams Replication&#34;</a> for instructions.</p>
<p>For this configuration, the following tasks must be completed:</p>
<ul>
<li>
<p>Configure an Oracle Streams administrator at all three databases. See <a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a>.</p>
</li>
<li>
<p>Configure network connectivity and database links:</p>
<ul>
<li>
<p>Configure network connectivity between all three databases: the source database <code dir="ltr">dbs1.example.com</code>, the destination database <code dir="ltr">dbs3.example.com</code>, and the third database <code dir="ltr">dbs2.example.com</code>.</p>
</li>
<li>
<p>Create a database link from the source database <code dir="ltr">dbs1.example.com</code> to the destination database <code dir="ltr">dbs3.example.com</code>.</p>
</li>
<li>
<p>Because downstream capture will be configured at the third database, create a database link from the third database <code dir="ltr">dbs2.example.com</code> to the source database <code dir="ltr">dbs1.example.com</code>.</p>
</li>
<li>
<p>Because downstream capture will be configured at the third database, create a database link from the third database <code dir="ltr">dbs2.example.com</code> to the destination database <code dir="ltr">dbs3.example.com</code>.</p>
</li>
<li>
<p>Because the replication environment will be bi-directional, create a database link from the destination database <code dir="ltr">dbs3.example.com</code> to the source database <code dir="ltr">dbs1.example.com</code>.</p>
</li>
</ul>
<p>See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a>.</p>
</li>
<li>
<p>Ensure that the source database, the destination databases, and the third database are in <code dir="ltr">ARCHIVELOG</code> mode. See <a href="prep_rep.htm#CACCBEBG">&#34;Ensuring That Each Source Database Is In ARCHIVELOG Mode&#34;</a>.</p>
</li>
<li>
<p>Ensure that the initialization parameters are set properly at all databases. See <a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a>.</p>
</li>
<li>
<p>Configure the Oracle Streams pool properly at both databases. See <a href="prep_rep.htm#BABBFJEB">&#34;Configuring the Oracle Streams Pool&#34;</a>.</p>
</li>
<li>
<p>Because a third database (<code dir="ltr">dbs2.example.com</code>) will be the capture database for changes made to the source database, configure log file copying from the source database <code dir="ltr">dbs1.example.com</code> to the third database <code dir="ltr">dbs2.example.com</code>. See <a href="prep_rep.htm#i1014093">&#34;Configuring Log File Transfer to a Downstream Capture Database&#34;</a>.</p>
</li>
<li>
<p>Because this example configures a real-time downstream capture process, add standby redo logs at the downstream database (<code dir="ltr">dbs2.example.com</code>). See <a href="prep_rep.htm#BEHEGACH">&#34;Adding Standby Redo Logs for Real-Time Downstream Capture&#34;</a>.</p>
</li>
</ul>
</li>
<li>
<p>Create the following required directory objects:</p>
<ul>
<li>
<p>A source directory object at the source database. This example assumes that this directory object is <code dir="ltr">source_directory</code>.</p>
</li>
<li>
<p>A destination directory object at the destination database. This example assumes that this directory object is <code dir="ltr">dest_directory</code>.</p>
</li>
</ul>
<p>See <a href="#CACHFABG">&#34;Creating the Required Directory Objects&#34;</a> for instructions.</p>
</li>
<li>
<p>In SQL*Plus, connect to the third database <code dir="ltr">dbs2.example.com</code> as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.MAINTAIN_SCHEMAS(
    schema_names                 =&gt; &#39;hr&#39;,
    source_directory_object      =&gt; &#39;source_directory&#39;,
    destination_directory_object =&gt; &#39;dest_directory&#39;,
    source_database              =&gt; &#39;dbs1.example.com&#39;,
    destination_database         =&gt; &#39;dbs3.example.com&#39;,
    perform_actions              =&gt; TRUE,
    dump_file_name               =&gt; &#39;export_hr.dmp&#39;,
    capture_queue_table          =&gt; &#39;rep_capture_queue_table&#39;,
    capture_queue_name           =&gt; &#39;rep_capture_queue&#39;,
    capture_queue_user           =&gt; NULL,
    apply_queue_table            =&gt; &#39;rep_dest_queue_table&#39;,
    apply_queue_name             =&gt; &#39;rep_dest_queue&#39;,
    apply_queue_user             =&gt; NULL,
    capture_name                 =&gt; &#39;capture_hr&#39;,
    propagation_name             =&gt; &#39;prop_hr&#39;,
    apply_name                   =&gt; &#39;apply_hr&#39;,
    log_file                     =&gt; &#39;export_hr.clg&#39;,
    bi_directional               =&gt; TRUE,
    include_ddl                  =&gt; TRUE,
    instantiation                =&gt; DBMS_STREAMS_ADM.INSTANTIATION_SCHEMA);
END;
/
</pre>
<p>Because this procedure configures a bi-directional replication environment, do not allow DML or DDL changes to the shared database objects at the destination database while the procedure is running.</p>
<p>Because the procedure is run at the third database, downstream capture is configured at the third database for changes to the source database.</p>
<p>To monitor the progress of the configuration operation, follow the instructions in <a href="#CIAGFIGG">&#34;Monitoring Oracle Streams Configuration Progress&#34;</a>.</p>
<p>If this procedure encounters an error and stops, then see <a href="man_gen_rep.htm#CEGICHAA">&#34;Recovering from Operation Errors&#34;</a> for information about either recovering from the error or rolling back the configuration operation.</p>
</li>
<li>
<p>Set the <code dir="ltr">downstream_real_time_mine</code> capture process parameter to <code dir="ltr">Y</code>:</p>
<pre dir="ltr">BEGIN
  DBMS_CAPTURE_ADM.SET_PARAMETER(
    capture_name =&gt; &#39;capture_hr&#39;,
    parameter    =&gt; &#39;downstream_real_time_mine&#39;,
    value        =&gt; &#39;Y&#39;);
END;
/
</pre></li>
<li>
<p>Connect to the source database <code dir="ltr">dbs1.example.com</code> as an administrative user with the necessary privileges to switch log files.</p>
</li>
<li>
<p>Archive the current log file at the source database:</p>
<pre dir="ltr">ALTER SYSTEM ARCHIVE LOG CURRENT;
</pre>
<p>Archiving the current log file at the source database starts real time mining of the source database redo log.</p>
<p>If the capture process appears to be waiting for redo data for an inordinately long time, then check the alert log for errors. See <a class="olink STRMS1036" href="../STRMS/strms_trcapture.htm#STRMS1036"><span class="italic">Oracle Streams Concepts and Administration</span></a> for more information.</p>
</li>
<li>
<p>Configure conflict resolution for the shared database objects if necessary.</p>
<p>Typically, conflicts are possible in a bi-directional replication environment. If conflicts are possible in the environment created by the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure, then configure conflict resolution before you allow users to make changes to the shared database objects.</p>
<p>See <a href="conflict.htm#g1013001">Chapter 9, &#34;Oracle Streams Conflict Resolution&#34;</a> for information.</p>
</li>
</ol>
<p>The bi-directional replication environment configured in this example has the following characteristics:</p>
<ul>
<li>
<p>Supplemental logging is configured for the shared database objects at the source and destination databases.</p>
</li>
<li>
<p>The <code dir="ltr">dbs1.example.com</code> database has a queue named <code dir="ltr">rep_dest_queue</code> which uses a queue table named <code dir="ltr">rep_dest_queue_table</code>. This queue is for the apply process.</p>
</li>
<li>
<p>The <code dir="ltr">dbs3.example.com</code> database has a queue named <code dir="ltr">rep_capture_queue</code> which uses a queue table named <code dir="ltr">rep_capture_queue_table</code>. This queue is for the local capture process.</p>
</li>
<li>
<p>The <code dir="ltr">dbs3.example.com</code> database has a queue named <code dir="ltr">rep_dest_queue</code> which uses a queue table named <code dir="ltr">rep_dest_queue_table</code>. This queue is for the apply process.</p>
</li>
<li>
<p>The <code dir="ltr">dbs2.example.com</code> database has a queue named <code dir="ltr">rep_capture_queue</code> which uses a queue table named <code dir="ltr">rep_capture_queue_table</code>. This queue is for the downstream capture process.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs2.example.com</code> database, a real-time downstream capture process named <code dir="ltr">capture_hr</code> captures DML and DDL changes to the <code dir="ltr">hr</code> schema and the database objects in the schema at the source database.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs3.example.com</code> database, a local capture process named <code dir="ltr">capture_hr</code> captures DML and DDL changes to the <code dir="ltr">hr</code> schema and the database objects in the schema at the destination database.</p>
</li>
<li>
<p>A propagation running on the <code dir="ltr">dbs2.example.com</code> database named <code dir="ltr">prop_hr</code> sends the captured changes from the queue in the <code dir="ltr">dbs2.example.com</code> database to the queue in the <code dir="ltr">dbs3.example.com</code> database.</p>
</li>
<li>
<p>A propagation running on the <code dir="ltr">dbs3.example.com</code> database named <code dir="ltr">prop_hr</code> sends the captured changes from the queue in the <code dir="ltr">dbs3.example.com</code> database to the queue in the <code dir="ltr">dbs1.example.com</code> database.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs1.example.com</code> database, an apply process named <code dir="ltr">apply_hr</code> dequeues the changes from <code dir="ltr">rep_dest_queue</code> and applies them to the database objects.</p>
</li>
<li>
<p>At the <code dir="ltr">dbs3.example.com</code> database, an apply process named <code dir="ltr">apply_hr</code> dequeues the changes from <code dir="ltr">rep_dest_queue</code> and applies them to the database objects.</p>
</li>
<li>
<p>Tags are used to avoid change cycling. Specifically, each apply process uses an apply tag so that redo records for changes applied by the apply process include the tag. Each apply process uses an apply tag that is unique in the replication environment. Each propagation discards changes that have the tag of the apply process running on the same database. See <a href="#CIAHFFCA">&#34;Change Cycling and Tags&#34;</a> for more information.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACCGDDC"></a>
<div id="STREP641" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Example That Configures Two-Database Replication with Synchronous Captures<a id="sthref191"></a><a id="sthref192"></a><a id="sthref193"></a><a id="sthref194"></a><a id="sthref195"></a><a id="sthref196"></a><a id="sthref197"></a></h3>
<p>This example configures an Oracle Streams replication environment that replicates data manipulation language (DML) changes to two tables in the <code dir="ltr">hr</code> schema. This example uses a synchronous capture at each database to capture these changes. In this example, the global names of the databases in the Oracle Streams replication environment are <code dir="ltr">sync1.example.com</code> and <code dir="ltr">sync2.example.com</code>. However, you can substitute any two databases in your environment to complete the example.</p>
<p>Specifically, this example configures a two-database Oracle Streams replication environment that shares the <code dir="ltr">hr.employees</code> and <code dir="ltr">hr.departments</code> tables at the <code dir="ltr">sync1.example.com</code> and <code dir="ltr">sync2.example.com</code> databases. The two databases replicate all of the DML changes to these tables. The <code dir="ltr">hr</code> sample schema is installed by default with Oracle Database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A synchronous capture can only capture changes at the table level. It cannot capture changes at the schema or database level. You can configure a synchronous capture using the <a class="olink ARPLS308" href="../ARPLS/d_streams_adm.htm#ARPLS308"><code dir="ltr">ADD_TABLE_RULES</code></a> and <a class="olink ARPLS329" href="../ARPLS/d_streams_adm.htm#ARPLS329"><code dir="ltr">ADD_SUBSET_RULES</code></a> procedures in the <a class="olink ARPLS305" href="../ARPLS/d_streams_adm.htm#ARPLS305"><code dir="ltr">DBMS_STREAMS_ADM</code></a> package.</div>
<p><a href="#CACJHGAB">Figure 2-7</a> provides an overview of the environment created in this example.</p>
<div id="STREP642" class="figure">
<p class="titleinfigure"><a id="CACJHGAB"></a>Figure 2-7 Two-Database Replication Environment with Synchronous Captures</p>
<img width="506" height="584" src="img/strep505.gif" alt="Description of Figure 2-7 follows"/><br/>
<a id="sthref198" href="img_text/strep505.htm">Description of &#34;Figure 2-7 Two-Database Replication Environment with Synchronous Captures&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p class="orderedlisttitle">To configure this replication environment with synchronous captures:&nbsp;</p>
<ol>
<li>
<p>Complete the following tasks to prepare for the two-database replication environment:</p>
<ol>
<li>
<p>Configure network connectivity so that the two databases can communicate with each other. See <a href="prep_rep.htm#BABDCFHC">Configuring Network Connectivity and Database Links</a> for information.</p>
</li>
<li>
<p>Configure an Oracle Streams administrator at each database that will participate in the replication environment. See <a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a> for more information. This example assumes that the Oracle Streams administrator is <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>Set initialization parameters properly at each database that will participate in the Oracle Streams replication environment. See <a href="prep_rep.htm#i1007573">&#34;Preparing for Oracle Streams Replication&#34;</a> for more information.</p>
</li>
<li>
<p>Ensure that the <code dir="ltr">hr.employees</code> and <code dir="ltr">hr.departments</code> tables exist at the two databases and are consistent at these databases. If the database objects exist at only one database, then you can use export/import to create and populate them at the other database. See <a class="olink SUTIL" href="../SUTIL/toc.htm"><span class="italic">Oracle Database Utilities</span></a> for information about export/import.</p>
</li>
</ol>
</li>
<li>
<p>Create two <code dir="ltr">ANYDATA</code> queues at each database. For this example, create the following two queues at each database:</p>
<ul>
<li>
<p>A queue named <code dir="ltr">capture_queue</code> owned by the Oracle Streams administrator <code dir="ltr">strmadmin</code>. This queue will be used by the synchronous capture at the database.</p>
</li>
<li>
<p>A queue named <code dir="ltr">apply_queue</code> owned by the Oracle Streams administrator <code dir="ltr">strmadmin</code>. This queue will be used by the apply process at the database.</p>
</li>
</ul>
<p>See <a href="cprop.htm#i1006170">&#34;Creating an ANYDATA Queue&#34;</a> for more information.</p>
</li>
<li>
<p>Create a database link from each database to the other database:</p>
<ol>
<li>
<p>Create a database link from the <code dir="ltr">sync1.example.com</code> database to the <code dir="ltr">sync2.example.com</code> database. The database link should be created in the Oracle Streams administrator&#39;s schema. Also, the database link should connect to the Oracle Streams administrator at the <code dir="ltr">sync2.example.com</code> database. Both the name and the service name of the database link must be <code dir="ltr">sync2.example.com</code>.</p>
</li>
<li>
<p>Create a database link from the <code dir="ltr">sync2.example.com</code> database to the <code dir="ltr">sync1.example.com</code> database. The database link should be created in the Oracle Streams administrator&#39;s schema. Also, the database link should connect to the Oracle Streams administrator at the <code dir="ltr">sync1.example.com</code> database. Both the name and the service name of the database link must be <code dir="ltr">sync1.example.com</code>.</p>
</li>
</ol>
<p>See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a> for more information.</p>
</li>
<li>
<p><a id="sthref200"></a><a id="sthref201"></a><a id="sthref202"></a>Configure an apply process at the <code dir="ltr">sync1.example.com</code> database. This apply process will apply changes to the shared tables that were captured at the <code dir="ltr">sync2.example.com</code> database and propagated to the <code dir="ltr">sync1.example.com</code> database.</p>
<ol>
<li>
<p>Open SQL*Plus and connect to the <code dir="ltr">sync1.example.com</code> database as the Oracle Streams administrator.</p>
</li>
<li>
<p>Create the apply process:</p>
<pre dir="ltr">BEGIN
  DBMS_APPLY_ADM.CREATE_APPLY(
    queue_name     =&gt; &#39;strmadmin.apply_queue&#39;,
    apply_name     =&gt; &#39;apply_emp_dep&#39;,
    apply_captured =&gt; FALSE);
END;
/
</pre>
<p>The <code dir="ltr">apply_captured</code> parameter is set to <code dir="ltr">FALSE</code> because the apply process applies changes in the persistent queue. These are changes that were captured by a synchronous capture. The <code dir="ltr">apply_captured</code> parameter should be set to <code dir="ltr">TRUE</code> only when the apply process applies changes captured by a capture process.</p>
<p>Do not start the apply process.</p>
</li>
<li>
<p>Add a rule to the apply process rule set:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name      =&gt; &#39;hr.employees&#39;,
    streams_type    =&gt; &#39;apply&#39;,
    streams_name    =&gt; &#39;apply_emp_dep&#39;,
    queue_name      =&gt; &#39;strmadmin.apply_queue&#39;,
    source_database =&gt; &#39;sync2.example.com&#39;);
END;
/
</pre>
<p>This rule instructs the apply process <code dir="ltr">apply_emp_dep</code> to apply all DML changes to the <code dir="ltr">hr.employees</code> table that appear in the <code dir="ltr">apply_queue</code> queue. The rule also specifies that the apply process applies only changes that were captured at the <code dir="ltr">sync2.example.com</code> source database.</p>
</li>
<li>
<p>Add an additional rule to the apply process rule set:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name      =&gt; &#39;hr.departments&#39;,
    streams_type    =&gt; &#39;apply&#39;,
    streams_name    =&gt; &#39;apply_emp_dep&#39;,
    queue_name      =&gt; &#39;strmadmin.apply_queue&#39;,
    source_database =&gt; &#39;sync2.example.com&#39;);
END;
/
</pre>
<p>This rule instructs the apply process <code dir="ltr">apply_emp_dep</code> to apply all DML changes to the <code dir="ltr">hr.departments</code> table that appear in the <code dir="ltr">apply_queue</code> queue. The rule also specifies that the apply process applies only changes that were captured at the <code dir="ltr">sync2.example.com</code> source database.</p>
</li>
</ol>
</li>
<li>
<p>Configure an apply process at the <code dir="ltr">sync2.example.com</code> database. This apply process will apply changes that were captured at the <code dir="ltr">sync1.example.com</code> database and propagated to the <code dir="ltr">sync2.example.com</code> database.</p>
<ol>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">sync2.example.com</code> database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>Create the apply process:</p>
<pre dir="ltr">BEGIN
  DBMS_APPLY_ADM.CREATE_APPLY(
    queue_name     =&gt; &#39;strmadmin.apply_queue&#39;,
    apply_name     =&gt; &#39;apply_emp_dep&#39;,
    apply_captured =&gt; FALSE);
END;
/
</pre>
<p>The <code dir="ltr">apply_captured</code> parameter is set to <code dir="ltr">FALSE</code> because the apply process applies changes in the persistent queue. These changes were captured by a synchronous capture. The <code dir="ltr">apply_captured</code> parameter should be set to <code dir="ltr">TRUE</code> only when the apply process applies changes captured by a capture process.</p>
<p>Do not start the apply process.</p>
</li>
<li>
<p>Add a rule to the apply process rule set:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name      =&gt; &#39;hr.employees&#39;,
    streams_type    =&gt; &#39;apply&#39;,
    streams_name    =&gt; &#39;apply_emp_dep&#39;,
    queue_name      =&gt; &#39;strmadmin.apply_queue&#39;,
    source_database =&gt; &#39;sync1.example.com&#39;);
END;
/
</pre>
<p>This rule instructs the apply process <code dir="ltr">apply_emp_dep</code> to apply all DML changes that appear in the <code dir="ltr">apply_queue</code> queue to the <code dir="ltr">hr.employees</code> table. The rule also specifies that the apply process applies only changes that were captured at the <code dir="ltr">sync1.example.com</code> source database.</p>
</li>
<li>
<p>Add an additional rule to the apply process rule set:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name      =&gt; &#39;hr.departments&#39;,
    streams_type    =&gt; &#39;apply&#39;,
    streams_name    =&gt; &#39;apply_emp_dep&#39;,
    queue_name      =&gt; &#39;strmadmin.apply_queue&#39;,
    source_database =&gt; &#39;sync1.example.com&#39;);
END;
/
</pre>
<p>This rule instructs the apply process <code dir="ltr">apply_emp_dep</code> to apply all DML changes that appear in the <code dir="ltr">apply_queue</code> queue to the <code dir="ltr">hr.departments</code> table. The rule also specifies that the apply process applies only changes that were captured at the <code dir="ltr">sync1.example.com</code> source database.</p>
</li>
</ol>
</li>
<li>
<p><a id="sthref203"></a>Create a propagation to send changes from a queue at the <code dir="ltr">sync1.example.com</code> database to a queue at the <code dir="ltr">sync2.example.com</code> database:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">sync1.example.com</code> database as the Oracle Streams administrator.</p>
</li>
<li>
<p>Create the propagation that sends changes to the <code dir="ltr">sync2.example.com</code> database:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.ADD_TABLE_PROPAGATION_RULES(
    table_name              =&gt; &#39;hr.employees&#39;,
    streams_name            =&gt; &#39;send_emp_dep&#39;,
    source_queue_name       =&gt; &#39;strmadmin.capture_queue&#39;,
    destination_queue_name  =&gt; &#39;strmadmin.apply_queue@sync2.example.com&#39;,
    source_database         =&gt; &#39;sync1.example.com&#39;,
    queue_to_queue          =&gt; TRUE);
END;
/
</pre>
<p>The <code dir="ltr">ADD_TABLE_PROPAGATION_RULES</code> procedure creates the propagation and its positive rule set. This procedure also adds a rule to the propagation rule set that instructs it to send DML changes to the <code dir="ltr">hr.employees</code> table to the <code dir="ltr">apply_queue</code> queue in the <code dir="ltr">sync2.example.com</code> database.</p>
</li>
<li>
<p>Add an additional rule to the propagation rule set:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.ADD_TABLE_PROPAGATION_RULES(
    table_name              =&gt; &#39;hr.departments&#39;,
    streams_name            =&gt; &#39;send_emp_dep&#39;,
    source_queue_name       =&gt; &#39;strmadmin.capture_queue&#39;,
    destination_queue_name  =&gt; &#39;strmadmin.apply_queue@sync2.example.com&#39;,
    source_database         =&gt; &#39;sync1.example.com&#39;,
    queue_to_queue          =&gt; TRUE);
END;
/
</pre>
<p>The <code dir="ltr">ADD_TABLE_PROPAGATION_RULES</code> procedure adds a rule to the propagation rule set that instructs it to send DML changes to the <code dir="ltr">hr.departments</code> table to the <code dir="ltr">apply_queue</code> queue in the <code dir="ltr">sync2.example.com</code> database.</p>
</li>
</ol>
</li>
<li>
<p>Create a propagation to send changes from a queue at the <code dir="ltr">sync2.example.com</code> database to a queue at the <code dir="ltr">sync1.example.com</code> database:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">sync2.example.com</code> database as the Oracle Streams administrator.</p>
</li>
<li>
<p>Create the propagation that sends changes to the <code dir="ltr">sync1.example.com</code> database:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.ADD_TABLE_PROPAGATION_RULES(
    table_name              =&gt; &#39;hr.employees&#39;,
    streams_name            =&gt; &#39;send_emp_dep&#39;,
    source_queue_name       =&gt; &#39;strmadmin.capture_queue&#39;,
    destination_queue_name  =&gt; &#39;strmadmin.apply_queue@sync1.example.com&#39;,
    source_database         =&gt; &#39;sync2.example.com&#39;,
    queue_to_queue          =&gt; TRUE);
END;
/
</pre>
<p>The <code dir="ltr">ADD_TABLE_PROPAGATION_RULES</code> procedure creates the propagation and its positive rule set. This procedure also adds a rule to the propagation rule set that instructs it to send DML changes to the <code dir="ltr">hr.employees</code> table to the <code dir="ltr">apply_queue</code> queue in the <code dir="ltr">sync1.example.com</code> database.</p>
</li>
<li>
<p>Add an additional rule to the propagation rule set:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.ADD_TABLE_PROPAGATION_RULES(
    table_name              =&gt; &#39;hr.departments&#39;,
    streams_name            =&gt; &#39;send_emp_dep&#39;,
    source_queue_name       =&gt; &#39;strmadmin.capture_queue&#39;,
    destination_queue_name  =&gt; &#39;strmadmin.apply_queue@sync1.example.com&#39;,
    source_database         =&gt; &#39;sync2.example.com&#39;,
    queue_to_queue          =&gt; TRUE);
END;
/
</pre>
<p>The <code dir="ltr">ADD_TABLE_PROPAGATION_RULES</code> procedure adds a rule to the propagation rule set that instructs it to send DML changes to the <code dir="ltr">hr.departments</code> table to the <code dir="ltr">apply_queue</code> queue in the <code dir="ltr">sync1.example.com</code> database.</p>
</li>
</ol>
</li>
<li>
<p><a id="sthref204"></a>Configure a synchronous capture at the <code dir="ltr">sync1.example.com</code> database:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">sync1.example.com</code> database as the Oracle Streams administrator.</p>
</li>
<li>
<p>Run the <code dir="ltr">ADD_TABLE_RULES</code> procedure to create the synchronous capture and add a rule to instruct it to capture changes to the <code dir="ltr">hr.employees</code> table:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name    =&gt; &#39;hr.employees&#39;,
    streams_type  =&gt; &#39;sync_capture&#39;,
    streams_name  =&gt; &#39;sync_capture&#39;,
    queue_name    =&gt; &#39;strmadmin.capture_queue&#39;);
END;
/
</pre></li>
<li>
<p>Add an additional rule to the synchronous capture rule set:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name    =&gt; &#39;hr.departments&#39;,
    streams_type  =&gt; &#39;sync_capture&#39;,
    streams_name  =&gt; &#39;sync_capture&#39;,
    queue_name    =&gt; &#39;strmadmin.capture_queue&#39;);
END;
/
</pre></li>
</ol>
<p>Running these procedures performs the following actions:</p>
<ul>
<li>
<p>Creates a synchronous capture named <code dir="ltr">sync_capture</code> at the current database. A synchronous capture with the same name must not exist.</p>
</li>
<li>
<p>Enables the synchronous capture. A synchronous capture cannot be disabled.</p>
</li>
<li>
<p>Associates the synchronous capture with an existing queue named <code dir="ltr">capture_queue</code> owned by <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>Creates a positive rule set for synchronous capture <code dir="ltr">sync_capture</code>. The rule set has a system-generated name.</p>
</li>
<li>
<p>Creates a rule that captures DML changes to the <code dir="ltr">hr.employees</code> table and adds the rule to the positive rule set for the synchronous capture. The rule has a system-generated name.</p>
</li>
<li>
<p>Prepares the <code dir="ltr">hr.employees</code> table for instantiation by running the <code dir="ltr">DBMS_CAPTURE_ADM.PREPARE_SYNC_INSTANTIATION</code> function for the table automatically.</p>
</li>
<li>
<p>Creates a rule that captures DML changes to the <code dir="ltr">hr.departments</code> table and adds the rule to the positive rule set for the synchronous capture. The rule has a system-generated name.</p>
</li>
<li>
<p>Prepares the <code dir="ltr">hr.departments</code> table for instantiation by running the <code dir="ltr">DBMS_CAPTURE_ADM.PREPARE_SYNC_INSTANTIATION</code> function for the table automatically.</p>
</li>
</ul>
</li>
<li>
<p>Configure a synchronous capture at the <code dir="ltr">sync2.example.com</code> database:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">sync2.example.com</code> database as the Oracle Streams administrator.</p>
</li>
<li>
<p>Run the <code dir="ltr">ADD_TABLE_RULES</code> procedure to create the synchronous capture and add a rule to instruct it to capture changes to the <code dir="ltr">hr.employees</code> table:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name    =&gt; &#39;hr.employees&#39;,
    streams_type  =&gt; &#39;sync_capture&#39;,
    streams_name  =&gt; &#39;sync_capture&#39;,
    queue_name    =&gt; &#39;strmadmin.capture_queue&#39;);
END;
/
</pre></li>
<li>
<p>Add an additional rule to the synchronous capture rule set:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_TABLE_RULES(
    table_name    =&gt; &#39;hr.departments&#39;,
    streams_type  =&gt; &#39;sync_capture&#39;,
    streams_name  =&gt; &#39;sync_capture&#39;,
    queue_name    =&gt; &#39;strmadmin.capture_queue&#39;);
END;
/
</pre></li>
</ol>
<p>Step <a href="#CACBGEIB">8</a> describes the actions performed by these procedures at the current database.</p>
</li>
<li>
<p>Set the instantiation SCN for the tables at the <code dir="ltr">sync2.example.com</code> database:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">sync1.example.com</code> database as the Oracle Streams administrator.</p>
</li>
<li>
<p><a id="sthref205"></a><a id="sthref206"></a>Set the instantiation SCN for the <code dir="ltr">hr.employees</code> table at the <code dir="ltr">sync2.example.com</code> database:</p>
<pre dir="ltr">DECLARE
  iscn  NUMBER;    -- Variable to hold instantiation SCN value
BEGIN
  iscn := DBMS_FLASHBACK.GET_SYSTEM_CHANGE_NUMBER();
  DBMS_APPLY_ADM.SET_TABLE_INSTANTIATION_SCN@sync2.example.com(
    source_object_name    =&gt; &#39;hr.employees&#39;,
    source_database_name  =&gt; &#39;sync1.example.com&#39;,
    instantiation_scn     =&gt; iscn);
END;
/
</pre></li>
<li>
<p>Set the instantiation SCN for the <code dir="ltr">hr.departments</code> table at the <code dir="ltr">sync2.example.com</code> database:</p>
<pre dir="ltr">DECLARE
  iscn  NUMBER;    -- Variable to hold instantiation SCN value
BEGIN
  iscn := DBMS_FLASHBACK.GET_SYSTEM_CHANGE_NUMBER();
  DBMS_APPLY_ADM.SET_TABLE_INSTANTIATION_SCN@sync2.example.com(
    source_object_name    =&gt; &#39;hr.departments&#39;,
    source_database_name  =&gt; &#39;sync1.example.com&#39;,
    instantiation_scn     =&gt; iscn);
END;
/
</pre></li>
</ol>
<p>An instantiation SCN is the lowest SCN for which an apply process can apply changes to a table. Before the apply process can apply changes to the shared tables at the <code dir="ltr">sync2.example.com</code> database, an instantiation SCN must be set for each table.</p>
</li>
<li>
<p>Set the instantiation SCN for the tables at the <code dir="ltr">sync1.example.com</code> database:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">sync2.example.com</code> database as the Oracle Streams administrator.</p>
</li>
<li>
<p>Set the instantiation SCN for the <code dir="ltr">hr.employees</code> table at the <code dir="ltr">sync1.example.com</code> database:</p>
<pre dir="ltr">DECLARE
  iscn  NUMBER;    -- Variable to hold instantiation SCN value
BEGIN
  iscn := DBMS_FLASHBACK.GET_SYSTEM_CHANGE_NUMBER();
  DBMS_APPLY_ADM.SET_TABLE_INSTANTIATION_SCN@sync1.example.com(
    source_object_name    =&gt; &#39;hr.employees&#39;,
    source_database_name  =&gt; &#39;sync2.example.com&#39;,
    instantiation_scn     =&gt; iscn);
END;
/
</pre></li>
<li>
<p>Set the instantiation SCN for the <code dir="ltr">hr.departments</code> table at the <code dir="ltr">sync2.example.com</code> database:</p>
<pre dir="ltr">DECLARE
  iscn  NUMBER;    -- Variable to hold instantiation SCN value
BEGIN
  iscn := DBMS_FLASHBACK.GET_SYSTEM_CHANGE_NUMBER();
  DBMS_APPLY_ADM.SET_TABLE_INSTANTIATION_SCN@sync1.example.com(
    source_object_name    =&gt; &#39;hr.departments&#39;,
    source_database_name  =&gt; &#39;sync2.example.com&#39;,
    instantiation_scn     =&gt; iscn);
END;
/
</pre></li>
</ol>
</li>
<li>
<p><a id="sthref207"></a>Start the apply process at each database:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">sync1.example.com</code> database as the Oracle Streams administrator.</p>
</li>
<li>
<p>Start the apply process:</p>
<pre dir="ltr">BEGIN
  DBMS_APPLY_ADM.START_APPLY(
    apply_name =&gt; &#39;apply_emp_dep&#39;);
END;
/
</pre></li>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">sync2.example.com</code> database as the Oracle Streams administrator.</p>
</li>
<li>
<p>Start the apply process:</p>
<pre dir="ltr">BEGIN
  DBMS_APPLY_ADM.START_APPLY(
    apply_name =&gt; &#39;apply_emp_dep&#39;);
END;
/
</pre></li>
</ol>
</li>
<li>
<p>Configure latest time conflict resolution for the <code dir="ltr">hr.departments</code> and <code dir="ltr">hr.employees</code> tables at the <code dir="ltr">sync1.example.com</code> and <code dir="ltr">sync2.example.com</code> databases. See <a href="conflict.htm#CHDDHEAF">&#34;Prebuilt Update Conflict Handlers&#34;</a> for more information.</p>
</li>
</ol>
<p>A two-database replication environment with the following characteristics is configured:</p>
<ul>
<li>
<p>Each database has a synchronous capture named <code dir="ltr">sync_capture</code>. The synchronous capture captures all DML changes to the <code dir="ltr">hr.employees</code> <code dir="ltr">hr.departments</code> tables.</p>
</li>
<li>
<p>Each database has a queue named <code dir="ltr">capture_queue</code>. This queue is for the synchronous capture at the database.</p>
</li>
<li>
<p>Each database has an apply process named <code dir="ltr">apply_emp_dep</code>. The apply process applies all DML changes to the <code dir="ltr">hr.employees</code> table and <code dir="ltr">hr.departments</code> tables.</p>
</li>
<li>
<p>Each database has a queue named <code dir="ltr">apply_queue</code>. This queue is for the apply process at the database.</p>
</li>
<li>
<p>Each database has a propagation named <code dir="ltr">send_emp_dep</code>. The propagation sends changes from the <code dir="ltr">capture_queue</code> in the local database to the <code dir="ltr">apply_queue</code> in the other database. The propagation sends all DML changes to the <code dir="ltr">hr.employees</code> and <code dir="ltr">hr.departments</code> tables.</p>
</li>
<li>
<p><a id="sthref208"></a>Tags are used to avoid change cycling in the following way:</p>
<ul>
<li>
<p>Each apply process uses the default apply tag. The default apply tag is the hexadecimal equivalent of <code dir="ltr">&#39;00&#39;</code> (double zero).</p>
</li>
<li>
<p>Each synchronous capture only captures changes in a session with a <code dir="ltr">NULL</code> tag. Therefore, neither synchronous capture captures the changes that are being applied by the local apply process. The synchronous capture rules instruct the synchronous capture not to capture these changes.</p>
</li>
</ul>
<p>See <a href="#CIAHFFCA">&#34;Change Cycling and Tags&#34;</a> for more information about how the replication environment avoids change cycling.</p>
</li>
</ul>
<p class="orderedlisttitle">To check the Oracle Streams replication configuration:&nbsp;</p>
<ol>
<li>
<p>At each database, complete the following steps to ensure that synchronous capture is configured:</p>
<ol>
<li>
<p>Start SQL*Plus and connect to the database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMQS0361" href="../ADMQS/GUID-DE8A79BD-FAE4-4364-98FF-D2BD992A06E7.htm#ADMQS0361"><span class="italic">Oracle Database 2 Day DBA</span></a> for more information about starting SQL*Plus.</p>
</li>
<li>
<p>Query the <a class="olink REFRN20572" href="../REFRN/GUID-3833841A-DF31-4784-8B11-0816CA3D4324.htm#REFRN20572"><code dir="ltr">ALL_SYNC_CAPTURE</code></a> data dictionary view:</p>
<pre dir="ltr">SELECT CAPTURE_NAME FROM ALL_SYNC_CAPTURE;
</pre>
<p>Ensure that a synchronous capture named <code dir="ltr">sync_capture</code> exists at each database.</p>
</li>
</ol>
</li>
<li>
<p>At each database, ensure that the propagation is enabled. To do so, query the <code dir="ltr">STATUS</code> column in the <code dir="ltr">DBA_PROPAGATION</code> view.</p>
</li>
<li>
<p>At each database, ensure that the apply process is enabled. To do so, query the <code dir="ltr">STATUS</code> column in the <code dir="ltr">DBA_APPLY</code> view.</p>
</li>
</ol>
<p class="orderedlisttitle">To replicate changes:&nbsp;</p>
<ol>
<li>
<p>At one of the databases, make DML changes to the <code dir="ltr">hr.employees</code> table or <code dir="ltr">hr.departments</code> table.</p>
</li>
<li>
<p>After some time has passed to allow for replication of the changes, use SQL*Plus to query the <code dir="ltr">hr.employees</code> or <code dir="ltr">hr.departments</code> table at the other database to view the changes.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CIAFABEC"></a>
<div id="STREP604" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Example That Configures Hub-and-Spoke Replication<a id="sthref211"></a><a id="sthref212"></a><a id="sthref213"></a><a id="sthref214"></a></h3>
<p>This example configures an Oracle Streams hub-and-spoke replication environment that replicates data manipulation language (DML) changes to all of the tables in the <code dir="ltr">hr</code> schema. This example uses a capture process at each database to capture these changes. Hub-and-spoke replication means that a central hub database replicates changes with one or more spoke databases. The spoke databases do not communicate with each other directly. In this sample configuration, the hub database sends changes generated at one spoke database to the other spoke database.</p>
<p>In this example, the global name of the hub database is <code dir="ltr">hub.example.com</code>, and the global names of the spoke databases are <code dir="ltr">spoke1.example.com</code> and <code dir="ltr">spoke2.example.com</code>. However, you can substitute databases in your environment to complete the example.</p>
<p>The following table lists the decisions that were made about the Oracle Streams replication environment configured in this example.</p>
<div class="inftblinformal">
<table class="cellalignment103" summary="This table lists the decision made for the example in this section." dir="ltr">
<thead>
<tr class="cellalignment92">
<th class="cellalignment104" id="r1c1-t41">Decision</th>
<th class="cellalignment104" id="r1c2-t41">Assumption for This Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment92">
<td class="cellalignment98" id="r2c1-t41" headers="r1c1-t41"><a href="prep_rep.htm#BABFCICA">Decide Which Type of Replication Environment to Configure</a></td>
<td class="cellalignment98" headers="r2c1-t41 r1c2-t41">This example configures a hub-and-spoke replication environment in which the global name of the hub database is <code dir="ltr">hub.example.com</code>, and the global names of the spoke databases are <code dir="ltr">spoke1.example.com</code> and <code dir="ltr">spoke2.example.com</code>. All of the databases in the environment are read/write.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r3c1-t41" headers="r1c1-t41"><a href="prep_rep.htm#CACJGEFE">Decide Whether to Configure Local or Downstream Capture for the Source Database</a></td>
<td class="cellalignment98" headers="r3c1-t41 r1c2-t41">This example configures local capture at each database.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r4c1-t41" headers="r1c1-t41"><a href="prep_rep.htm#CACDCDJG">Decide Whether Changes Are Allowed at One Database or at Multiple Databases</a></td>
<td class="cellalignment98" headers="r4c1-t41 r1c2-t41">This example configures a replication environment that allows changes to the replicated database objects at all three databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r5c1-t41" headers="r1c1-t41"><a href="prep_rep.htm#BABIADHG">Decide Whether the Replication Environment Will Have Nonidentical Replicas</a></td>
<td class="cellalignment98" headers="r5c1-t41 r1c2-t41">This example configures identical shared database objects at the databases.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r6c1-t41" headers="r1c1-t41"><a href="prep_rep.htm#BABBHGIH">Decide Whether the Replication Environment Will Use Apply Handlers</a></td>
<td class="cellalignment98" headers="r6c1-t41 r1c2-t41">This example does not configure apply handlers.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r7c1-t41" headers="r1c1-t41"><a href="prep_rep.htm#CACIGHCH">Decide Whether to Maintain DDL Changes</a></td>
<td class="cellalignment98" headers="r7c1-t41 r1c2-t41">This example does not maintain DDL changes to the shared database objects.</td>
</tr>
<tr class="cellalignment92">
<td class="cellalignment98" id="r8c1-t41" headers="r1c1-t41"><a href="prep_rep.htm#BABICDIH">Decide How to Configure the Replication Environment</a></td>
<td class="cellalignment98" headers="r8c1-t41 r1c2-t41">This example uses the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure the environment.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>In this example, the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure will configure the replication environment directly. A configuration script will not be generated. A Data Pump export dump file instantiation will be performed.</p>
<p>The <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure automatically excludes database objects that are not supported by Oracle Streams from the replication environment by adding rules to the negative rule set of each capture and apply process. Query the <code dir="ltr">DBA_STREAMS_UNSUPPORTED</code> data dictionary view to determine which database objects are not supported by Oracle Streams. If unsupported database objects are not excluded, then capture errors will result.</p>
<p>The database objects being configured for replication might or might not exist at the destination databases when you run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure. If the database objects do not exist at a destination database, then the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure instantiates them at the destination database using a Data Pump export/import. During instantiation, the instantiation SCN is set for these database objects. If the database objects already exist at a destination database, then the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure retains the existing database objects and sets the instantiation SCN for them. In this example, the <code dir="ltr">hr</code> schema exists at each database before the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure is run.</p>
<p><a href="#CIADBGGE">Figure 2-8</a> provides an overview of the environment created in this example.</p>
<div id="STREP605" class="figure">
<p class="titleinfigure"><a id="CIADBGGE"></a>Figure 2-8 Hub-and-Spoke Environment with Capture Processes and Read/Write Spokes</p>
<img width="668" height="899" src="img/strep504.gif" alt="Description of Figure 2-8 follows"/><br/>
<a id="sthref215" href="img_text/strep504.htm">Description of &#34;Figure 2-8 Hub-and-Spoke Environment with Capture Processes and Read/Write Spokes&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>Complete the following steps to use the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure the environment:</p>
<ol>
<li id="CIHFBHGA">
<p>Complete the following tasks to prepare for the hub-and-spoke replication environment:</p>
<ol>
<li>
<p>Configure network connectivity so that the following databases can communicate with each other:</p>
<ul>
<li>
<p>The <code dir="ltr">hub.example.com</code> database and the <code dir="ltr">spoke1.example.com</code> database</p>
</li>
<li>
<p>The <code dir="ltr">hub.example.com</code> database and the <code dir="ltr">spoke2.example.com</code> database</p>
</li>
</ul>
<p>See <a class="olink ADMQS004" href="../ADMQS/GUID-C6DD213A-D37E-4905-983D-F9DCA8AE286A.htm#ADMQS004"><span class="italic">Oracle Database 2 Day DBA</span></a> for information about configuring network connectivity between databases.</p>
</li>
<li>
<p>Configure an Oracle Streams administrator at each database that will participate in the replication environment. See <a href="prep_rep.htm#BABHEJGG">&#34;Configuring an Oracle Streams Administrator on All Databases&#34;</a> for instructions. This example assumes that the Oracle Streams administrator is <code dir="ltr">strmadmin</code>.</p>
</li>
<li>
<p>Create a database link from the hub database to each spoke database and from each spoke database to the hub database. In this example, create the following database links:</p>
<ul>
<li>
<p>From the <code dir="ltr">hub.example.com</code> database to the <code dir="ltr">spoke1.example.com</code> database. Both the name and the service name of the database link must be <code dir="ltr">spoke1.example.com</code>.</p>
</li>
<li>
<p>From the <code dir="ltr">hub.example.com</code> database to the <code dir="ltr">spoke2.example.com</code> database. Both the name and the service name of the database link must be <code dir="ltr">spoke2.example.com</code>.</p>
</li>
<li>
<p>From the <code dir="ltr">spoke1.example.com</code> database to the <code dir="ltr">hub.example.com</code> database. Both the name and the service name of the database link must be <code dir="ltr">hub.example.com</code>.</p>
</li>
<li>
<p>From the <code dir="ltr">spoke2.example.com</code> database to the <code dir="ltr">hub.example.com</code> database. Both the name and the service name of the database link must be <code dir="ltr">hub.example.com</code>.</p>
</li>
</ul>
<p>Each database link should be created in the Oracle Streams administrator&#39;s schema. Also, each database link should connect to the Oracle Streams administrator at the destination database. See <a href="prep_rep.htm#BABDCFHC">&#34;Configuring Network Connectivity and Database Links&#34;</a> for instructions.</p>
</li>
<li>
<p>Set initialization parameters properly at each database that will participate in the Oracle Streams replication environment. See <a href="prep_rep.htm#BABFJJIH">&#34;Setting Initialization Parameters Relevant to Oracle Streams&#34;</a> for instructions.</p>
</li>
<li>
<p>Configure each source database to run in <code dir="ltr">ARCHIVELOG</code> mode. For a capture process to capture changes generated at a source database, the source database must be running in <code dir="ltr">ARCHIVELOG</code> mode. In this example, all databases must be running in <code dir="ltr">ARCHIVELOG</code> mode. See <a class="olink ADMIN008" href="../ADMIN/archredo.htm#ADMIN008"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about configuring a database to run in <code dir="ltr">ARCHIVELOG</code> mode.</p>
</li>
</ol>
</li>
<li>
<p>Create the following required directory objects:</p>
<ul>
<li>
<p>A directory object at the hub database <code dir="ltr">hub.example.com</code>. This example assumes that this directory object is <code dir="ltr">hub_directory</code>.</p>
</li>
<li>
<p>A directory object at the spoke database <code dir="ltr">spoke1.example.com</code>. This example assumes that this directory object is <code dir="ltr">spoke1_directory</code>.</p>
</li>
<li>
<p>A directory object at the spoke database <code dir="ltr">spoke2.example.com</code>. This example assumes that this directory object is <code dir="ltr">spoke2_directory</code>.</p>
</li>
</ul>
<p>See <a href="#CACHFABG">&#34;Creating the Required Directory Objects&#34;</a> for instructions.</p>
</li>
<li>
<p>In SQL*Plus, connect to the <code dir="ltr">hub.example.com</code> database as the Oracle Streams administrator.</p>
<p>See <a class="olink ADMQS0361" href="../ADMQS/GUID-DE8A79BD-FAE4-4364-98FF-D2BD992A06E7.htm#ADMQS0361"><span class="italic">Oracle Database 2 Day DBA</span></a> for more information about starting SQL*Plus.</p>
</li>
<li>
<p>Run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure replication between the <code dir="ltr">hub.example.com</code> database and the <code dir="ltr">spoke1.example.com</code> database:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.MAINTAIN_SCHEMAS(
    schema_names                 =&gt; &#39;hr&#39;,
    source_directory_object      =&gt; &#39;hub_directory&#39;,
    destination_directory_object =&gt; &#39;spoke1_directory&#39;,
    source_database              =&gt; &#39;hub.example.com&#39;,
    destination_database         =&gt; &#39;spoke1.example.com&#39;,
    capture_name                 =&gt; &#39;capture_hns&#39;,
    capture_queue_table          =&gt; &#39;source_hns_qt&#39;,
    capture_queue_name           =&gt; &#39;source_hns&#39;,
    propagation_name             =&gt; &#39;propagation_spoke1&#39;,
    apply_name                   =&gt; &#39;apply_spoke1&#39;,
    apply_queue_table            =&gt; &#39;destination_spoke1_qt&#39;,
    apply_queue_name             =&gt; &#39;destination_spoke1&#39;,
    bi_directional               =&gt; TRUE);
END;
/
</pre>
<p>The <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure can take some time to run because it is performing many configuration tasks. Do not allow data manipulation language (DML) or data definition language (DDL) changes to the replicated database objects at the destination database while the procedure is running.</p>
<p>In the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure, only the following parameters are required: <code dir="ltr">schema_names</code>, <code dir="ltr">source_directory_object</code>, <code dir="ltr">destination_directory_object</code>, <code dir="ltr">source_database</code>, and <code dir="ltr">destination_database</code>. Also, when you use a configuration procedure to configure bi-directional replication, the <code dir="ltr">bi_directional</code> parameter must be set to <code dir="ltr">TRUE</code>.</p>
<p>This example specifies the other parameters to show that you can choose the name for the capture process, capture process&#39;s queue table, capture process&#39;s queue, propagation, apply process, apply process&#39;s queue table, and apply process&#39;s queue. If you do not specify these parameters, then system-generated names are used.</p>
<p>When a configuration procedure is run, information about its progress is recorded in the following data dictionary views: <code dir="ltr">DBA_RECOVERABLE_SCRIPT</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_PARAMS</code>, <code dir="ltr">DBA_RECOVERABLE_SCRIPT_BLOCKS</code>, and <code dir="ltr">DBA_RECOVERABLE_SCRIPT_ERRORS</code>. If the procedure stops because it encounters an error, then see <a class="olink STREP149" href="../STREP/man_gen_rep.htm#STREP149"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for instructions about using the <code dir="ltr">RECOVER_OPERATION</code> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to recover from these errors.</p>
</li>
<li>
<p>While still connected in SQL*Plus to the <code dir="ltr">hub.example.com</code> database as the Oracle Streams administrator, run the <code dir="ltr">MAINTAIN_SCHEMAS</code> procedure to configure replication between the <code dir="ltr">hub.example.com</code> database and the <code dir="ltr">spoke2.example.com</code> database:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.MAINTAIN_SCHEMAS(
    schema_names                 =&gt; &#39;hr&#39;,
    source_directory_object      =&gt; &#39;hub_directory&#39;,
    destination_directory_object =&gt; &#39;spoke2_directory&#39;,
    source_database              =&gt; &#39;hub.example.com&#39;,
    destination_database         =&gt; &#39;spoke2.example.com&#39;,
    capture_name                 =&gt; &#39;capture_hns&#39;,
    capture_queue_table          =&gt; &#39;source_hns_qt&#39;,
    capture_queue_name           =&gt; &#39;source_hns&#39;,
    propagation_name             =&gt; &#39;propagation_spoke2&#39;,
    apply_name                   =&gt; &#39;apply_spoke2&#39;,
    apply_queue_table            =&gt; &#39;destination_spoke2_qt&#39;,
    apply_queue_name             =&gt; &#39;destination_spoke2&#39;,
    bi_directional               =&gt; TRUE);
END;
/
</pre></li>
<li>
<p>Configure latest time conflict resolution for all of the tables in the <code dir="ltr">hr</code> schema at the <code dir="ltr">hub.example.com</code>, <code dir="ltr">spoke1.example.com</code>, and <code dir="ltr">spoke2.example.com</code> databases. This schema includes the <code dir="ltr">countries</code>, <code dir="ltr">departments</code>, <code dir="ltr">employees</code>, <code dir="ltr">jobs</code>, <code dir="ltr">job_history</code>, <code dir="ltr">locations</code>, and <code dir="ltr">regions</code> tables. See <a href="conflict.htm#g1013001">Chapter 9, &#34;Oracle Streams Conflict Resolution&#34;</a> for instructions.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The Oracle Enterprise Manager Cloud Control online help for an example that configures this replication environment using Oracle Enterprise Manager Cloud Control</div>
</div>
<!-- class="sect2" -->
<a id="CIAGFIGG"></a>
<div id="STREP596" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Monitoring Oracle Streams Configuration Progress</h3>
<p>The following procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package configure a replication environment that is maintained by Oracle Streams:</p>
<ul>
<li>
<p><a class="olink ARPLS825" href="../ARPLS/d_streams_adm.htm#ARPLS825"><code dir="ltr">MAINTAIN_GLOBAL</code></a></p>
</li>
<li>
<p><a class="olink ARPLS826" href="../ARPLS/d_streams_adm.htm#ARPLS826"><code dir="ltr">MAINTAIN_SCHEMAS</code></a></p>
</li>
<li>
<p><a class="olink ARPLS863" href="../ARPLS/d_streams_adm.htm#ARPLS863"><code dir="ltr">MAINTAIN_SIMPLE_TTS</code></a></p>
</li>
<li>
<p><a class="olink ARPLS827" href="../ARPLS/d_streams_adm.htm#ARPLS827"><code dir="ltr">MAINTAIN_TABLES</code></a></p>
</li>
<li>
<p><a class="olink ARPLS864" href="../ARPLS/d_streams_adm.htm#ARPLS864"><code dir="ltr">MAINTAIN_TTS</code></a></p>
</li>
<li>
<p><a class="olink ARPLS831" href="../ARPLS/d_streams_adm.htm#ARPLS831"><code dir="ltr">PRE_INSTANTIATION_SETUP</code></a> and <a class="olink ARPLS830" href="../ARPLS/d_streams_adm.htm#ARPLS830"><code dir="ltr">POST_INSTANTIATION_SETUP</code></a></p>
</li>
</ul>
<p>While one of these procedures configures the replication environment directly (with the <code dir="ltr">perform_actions</code> parameter is set to <code dir="ltr">TRUE</code>), you can monitor the progress of the configuration in a separate terminal window.</p>
<p>Complete the following steps to monitor the progress of the Oracle Stream configuration:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the capture database as the Oracle Streams administrator. Use a different terminal window than the one that is running the configuration procedure.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for instructions about connecting to a database in SQL*Plus.</p>
</li>
<li>
<p>For basic information about the configuration operation, run the following query:</p>
<pre dir="ltr">COLUMN SCRIPT_ID      HEADING &#39;Script ID&#39;      FORMAT A40
COLUMN CREATION_TIME  HEADING &#39;Creation|Time&#39;  FORMAT A20

SELECT SCRIPT_ID,
  TO_CHAR(CREATION_TIME,&#39;HH24:Mi:SS MM/DD/YY&#39;) CREATION_TIME
  FROM DBA_RECOVERABLE_SCRIPT;
</pre>
<p>Your output is similar to the following:</p>
<pre dir="ltr">                                         Creation
Script ID                                Time
---------------------------------------- --------------------
64EE0DFCC374CE7EE040578C89174D3E         07:46:54 03/12/09
</pre>
<p>This output shows the script ID for the configuration operation and the time when the operation started.</p>
</li>
<li>
<p>For detailed information about the progress of the configuration operation, run the following query:</p>
<pre dir="ltr">COLUMN STATUS           HEADING &#39;Status&#39;          FORMAT A12
COLUMN PROGRESS         HEADING &#39;Steps|Completed&#39; FORMAT A10
COLUMN ELAPSED_SECONDS  HEADING &#39;Elapsed|Seconds&#39; FORMAT A10
COLUMN CURRENT_STEP     HEADING &#39;Current Step&#39;    FORMAT A20
COLUMN PROCEDURE        HEADING &#39;Procedure&#39;       FORMAT A20

SELECT  rs.STATUS,
    rs.DONE_BLOCK_NUM||&#39; of &#39;||rs.TOTAL_BLOCKS PROGRESS,
    TO_CHAR(TO_NUMBER(SYSDATE-rs.CREATION_TIME)*86400,9999.99) ELAPSED_SECONDS,
    SUBSTR(TO_CHAR(rsb.FORWARD_BLOCK),1,100) CURRENT_STEP,
    rs.INVOKING_PACKAGE||&#39;.&#39;||rs.INVOKING_PROCEDURE PROCEDURE
  FROM DBA_RECOVERABLE_SCRIPT rs, DBA_RECOVERABLE_SCRIPT_BLOCKS rsb
  WHERE rs.SCRIPT_ID  = rsb.SCRIPT_ID AND 
        rsb.BLOCK_NUM = rs.DONE_BLOCK_NUM + 1;
</pre>
<p>Your output is similar to the following:</p>
<pre dir="ltr">             Steps      Elapsed
Status       Completed  Seconds    Current Step         Procedure
------------ ---------- ---------- -------------------- --------------------
EXECUTING    7 of 39    132        --                   DBMS_STREAMS_ADM.MAI
                                   -- Set up queue &#34;STR NTAIN_SCHEMAS
                                   MADMIN&#34;.&#34;PROD$APPQ&#34;
                                   --
                                   BEGIN
                                     dbms_streams_adm.s
                                   et_up_queue(
                                       queue_ta
</pre>
<p>This output shows the following information about the configuration operation:</p>
<ul>
<li>
<p>The current status of the configuration operation, either <code dir="ltr">GENERATING</code>, <code dir="ltr">NOT</code> <code dir="ltr">EXECUTED</code>, <code dir="ltr">EXECUTING</code>, <code dir="ltr">EXECUTED</code>, or <code dir="ltr">ERROR</code></p>
</li>
<li>
<p>The number of steps completed and the total number of steps required to complete the operation</p>
</li>
<li>
<p>The amount of time, in seconds, that the configuration operation has been running</p>
</li>
<li>
<p>The operation being performed by the current step</p>
</li>
<li>
<p>The PL/SQL procedure being executed in the current step</p>
</li>
</ul>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="man_gen_rep.htm#CEGICHAA">&#34;Recovering from Operation Errors&#34;</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment91">
<tr>
<td class="cellalignment98">
<table class="cellalignment96">
<tr>
<td class="cellalignment95"><a href="prep_rep.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment95"><a href="config_flex.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment100">
<table class="cellalignment94">
<tr>
<td class="cellalignment95"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment95"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment95"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment95"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment95"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment95"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>