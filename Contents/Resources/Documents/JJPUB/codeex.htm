<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-71094"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Generated%20Code%20Examples"></a><title>Generated Code Examples</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-07-07T6:1:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database JPublisher User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49873-02"/>
<meta name="dcterms.isVersionOf" content="JJPUB"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="optinfil.htm" title="Previous" type="text/html"/>
<link rel="Next" href="trblshtg.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49873-02.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/14</span> <!-- End Header -->
<div id="JJPUB24272" class="appendix"><a id="CCJCIDBB"></a>
<h1 class="appendix"><span class="secnum">A</span> Generated Code Examples</h1>
<p>This appendix contains generated code examples that are explained in the following sections:</p>
<ul>
<li>
<p><a href="#CCJJAFHA">Generated Code: SQL Statement</a></p>
</li>
<li>
<p><a href="#CCJFFHAG">Generated Code: Server-Side Java Call-in</a></p>
</li>
</ul>
<a id="CCJJAFHA"></a>
<div id="JJPUB24277" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Gener<a id="sthref418"></a><a id="sthref419"></a>ated Code: SQL Statement</h2>
<p>This section contains a generated code example for a specified SQL statement, related to the discussion in <a href="optinfil.htm#i1013104">&#34;Declaration of SQL Statements to Translate&#34;</a>.</p>
<p>The example is for the following sample settings of the <code>-sqlstatement</code> option:</p>
<pre>-sqlstatement.class=MySqlStatements
-sqlstatement.getEmp=&#34;select ename from emp
                      where ename=:{myname VARCHAR}&#34;
-sqlstatement.return=both
</pre>
<p>Note that for this example:</p>
<ul>
<li>
<p>Code comments show <code>#sql</code> statements that correspond to the translated code shown.</p>
</li>
<li>
<p>The <code>getEmpBeans()</code> method, generated because of the <code>-sqlstatement.return=both</code> setting, returns an array of JavaBeans. Each element represents a row of the result set. The <code>GetEmpRow</code> class is defined for this purpose.</p>
</li>
<li>
<p>JPublisher generates a SQLJ class. The result set is mapped to a SQLJ iterator.</p>
</li>
</ul>
<p>(For <code>UPDATE</code>, <code>INSERT</code>, or <code>DELETE</code> statements, code is generated both with and without batching for array binds.)</p>
<p>The translated SQLJ code that JPublisher would produce is:</p>
<pre>public class MySqlStatements_getEmpRow 
{ 
 
  /* connection management */ 
 
  /* constructors */ 
  public MySqlStatements_getEmpRow() 
  { } 
 
  public String getEname() throws java.sql.SQLException 
  { return ename; } 
 
  public void setEname(String ename) throws java.sql.SQLException 
  { this.ename = ename; } 
 
  private String ename; 
} 
 
/*@lineinfo:filename=MySqlStatements*/
/*@lineinfo:user-code*/
/*@lineinfo:1^1*/
import java.sql.SQLException; 
import sqlj.runtime.ref.DefaultContext; 
import sqlj.runtime.ConnectionContext; 
import java.sql.Connection; 
import oracle.sql.*; 

public class MySqlStatements 
{ 

  /* connection management */ 
  protected DefaultContext __tx = null; 
  protected Connection __onn = null; 
  public void setConnectionContext(DefaultContext ctx) throws SQLException 
  { release(); __tx = ctx; } 
  public DefaultContext getConnectionContext() throws SQLException 
  { if (__tx==null) 
    { __tx = (__onn==null) ? DefaultContext.getDefaultContext() : 
                             new DefaultContext(__onn); } 
    return __tx; 
  }; 
  public Connection getConnection() throws SQLException 
  { return (__onn==null) ? ((__tx==null) ? null : __tx.getConnection()) : __onn; } 
  public void release() throws SQLException 
  { if (__tx!=null &amp;&amp; __onn!=null) __tx.close(ConnectionContext.KEEP_CONNECTION); 
    __onn = null; __tx = null; 
  } 
 
  /* constructors */ 
  public MySqlStatements() throws SQLException 
  { __tx = DefaultContext.getDefaultContext(); } 
  public MySqlStatements(DefaultContext c) throws SQLException 
  { __tx = c; } 
  public MySqlStatements(Connection c) throws SQLException 
  {__onn = c; __tx = new DefaultContext(c); } 
/*@lineinfo:generated-code*/
/*@lineinfo:36^1*/ 

//  ************************************************************ 
//  SQLJ iterator declaration: 
//  ************************************************************ 

public static class getEmpIterator 
    extends sqlj.runtime.ref.ResultSetIterImpl 
    implements sqlj.runtime.NamedIterator 
{ 
  public getEmpIterator(sqlj.runtime.profile.RTResultSet resultSet) 
    throws java.sql.SQLException 
  { 
    super(resultSet); 
    enameNdx = findColumn(&#34;ename&#34;); 
    m_rs = (oracle.jdbc.OracleResultSet) resultSet.getJDBCResultSet(); 
  } 
  private oracle.jdbc.OracleResultSet m_rs; 
  public String ename() 
    throws java.sql.SQLException 
  { 
    return m_rs.getString(enameNdx); 
  } 
  private int enameNdx; 
} 
 
//  ************************************************************ 
 
/*@lineinfo:user-code*/
/*@lineinfo:36^56*/ 
 
  public MySqlStatements_getEmpRow[] getEmpBeans (String myname) 
         throws SQLException 
  { 
    getEmpIterator iter; 
    /*@lineinfo:generated-code*/
    /*@lineinfo:43^5*/ 
//  ************************************************************ 
//  #sql [getConnectionContext()] 
//                     iter = { select ename from emp where ename=:myname }; 
//  ************************************************************ 
{ 
  // declare temps 
  oracle.jdbc.OraclePreparedStatement __sJT_st = null; 
  sqlj.runtime.ref.DefaultContext __sJT_cc = getConnectionContext(); 
  if (__sJT_c c==null) sqlj.runtime.error.RuntimeRefErrors.raise_NULL_CONN_CTX(); 
  sqlj.runtime.ExecutionContext.OracleContext __sJT_ec = 
        ((__sJT_cc.getExecutionContext()==null) ? 
        sqlj.runtime.ExecutionContext.raiseNullExecCtx() : 
        __sJT_cc.getExecutionContext().getOracleContext()); 
  try { 
   String theSqlTS = &#34;select ename from emp where ename= :1&#34;; 
   __sJT_st = __sJT_ec.prepareOracleStatement
                    (__sJT_cc,&#34;0MySqlStatements&#34;,theSqlTS); 
   // set IN parameters 
   __sJT_st.setString(1,myname); 
   // execute query 
   iter = new MySqlStatements.getEmpIterator
             (new sqlj.runtime.ref.OraRTResultSet 
             (__sJT_ec.oracleExecuteQuery(),__sJT_st,&#34;0MySqlStatements&#34;,null)); 
  } finally { __sJT_ec.oracleCloseQuery(); } 
} 

//  ************************************************************ 
 
/*@lineinfo:user-code*/
/*@lineinfo:43^84*/ 
    java.util.Vector v = new java.util.Vector(); 
    while (iter.next()) 
    { 
       MySqlStatements_getEmpRow r = new MySqlStatements_getEmpRow(); 
       r.setEname(iter.ename()); 
       v.addElement(r); 
    } 
    MySqlStatements_getEmpRow[] __jPt_result = 
          new MySqlStatements_getEmpRow[v.size()]; 
    for (int i = 0; i &lt; v.size(); i++) 
       __jPt_result[i] = (MySqlStatements_getEmpRow) v.elementAt(i); 
    return __jPt_result; 
  } 
 
  public java.sql.ResultSet getEmp (String myname) 
          throws SQLException 
  { 
    sqlj.runtime.ResultSetIterator iter; 
    /*@lineinfo:generated-code*/
    /*@lineinfo:62^5*/ 
 
//  ************************************************************ 
//  #sql [getConnectionContext()] iter = 
//                     { select ename from emp where ename=:myname }; 
//  ************************************************************ 
 
{ 
  // declare temps 
  oracle.jdbc.OraclePreparedStatement __sJT_st = null; 
  sqlj.runtime.ref.DefaultContext __sJT_cc = getConnectionContext(); 
  if (__sJT_c c==null) sqlj.runtime.error.RuntimeRefErrors.raise_NULL_CONN_CTX(); 
  sqlj.runtime.ExecutionContext.OracleContext __sJT_ec = 
              ((__sJT_cc.getExecutionContext()==null) ?
              sqlj.runtime.ExecutionContext.raiseNullExecCtx() :
              __sJT_cc.getExecutionContext().getOracleContext()); 
  try { 
   String theSqlTS = &#34;select ename from emp where ename= :1&#34;; 
   __sJT_st = __sJT_ec.prepareOracleStatement
                 (__sJT_cc,&#34;1MySqlStatements&#34;,theSqlTS); 
   // set IN parameters 
   __sJT_st.setString(1,myname); 
   // execute query 
   iter = new sqlj.runtime.ref.ResultSetIterImpl
         (new sqlj.runtime.ref.OraRTResultSet
         (__sJT_ec.oracleExecuteQuery(),__sJT_st,&#34;1MySqlStatements&#34;,null)); 
  } finally { __sJT_ec.oracleCloseQuery(); } 
} 
 
//  ************************************************************ 
 
/*@lineinfo:user-code*/
/*@lineinfo:62^84*/ 
    java.sql.ResultSet __jPt_result = iter.getResultSet(); 
    return __jPt_result; 
  } 
}
/*@lineinfo:generated-code*/ 
</pre></div>
<!-- class="sect1" -->
<a id="CCJFFHAG"></a>
<div id="JJPUB24278" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Generated Code: Server-Side Java Call-in</h2>
<p>JPublisher supports the calling of Java methods in the database from a Java client outside the database. In Oracle Database 12<span class="italic">c</span> Release 1, the JPublisher <code>-dbjava</code> option is used for server-side Java invocation. Unlike the <code>-java</code> option, the <code>-dbjava</code> option supports non-serializable parameter or return types.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adfeacon.htm#CHDIJACG">&#34;Server-Side Java Invocation (Call-in)&#34;</a></div>
<p>This section describes an example of server-side Java invocation. This section comprises:</p>
<ul>
<li>
<p><a href="#CCJGJFBJ">The Source Files</a></p>
</li>
<li>
<p><a href="#CCJFIDCC">Publishing Server-Side Java Class</a></p>
</li>
<li>
<p><a href="#CCJJFHJC">The Generated Files</a></p>
</li>
<li>
<p><a href="#CCJFCHBF">Testing the Published Files</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must have the 12<span class="italic">c</span> Release 1 (12.1) version of Oracle Database.</div>
<a id="CCJGJFBJ"></a>
<div id="JJPUB24279" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">The Source Files</h3>
<p>In this example, there are three source files to be created. These are:</p>
<ul>
<li>
<p>A server-side Java class</p>
</li>
<li>
<p>A JavaBean used in the server-side Java class</p>
</li>
<li>
<p>An entry point Java class that invokes the methods in the published classes</p>
</li>
</ul>
<p>The source code of these files is as follows:</p>
<p class="subhead2"><a id="JJPUB24280"></a>Server-Side Java Class</p>
<p>The source code of the server-side Java class, <code>Callin2.java</code>, is as follows:</p>
<pre>public class Callin2
{
  public static int testInt(int i)
  { return i; }
  public static int[] testInt(int[] i)
  { return i; }
  public static int[][] testInt(int[][] i)
  { return i; }
  public static Integer testInteger(Integer i)
  { return i; }
  public static Integer[] testInteger(Integer[] i)
  { return i; }
  public static Integer[][] testInteger(Integer[][] i)
  { return i; }

  // Test ORAData
  public static oracle.sql.NUMBER testNum(oracle.sql.NUMBER num)
  { return num; }
  public oracle.sql.NUMBER testInstNum(oracle.sql.NUMBER num)
  { return num; }
  public oracle.sql.NUMBER[] testInstNum(oracle.sql.NUMBER[] num)
  { return num; }
  public oracle.sql.NUMBER[][] testInstNum(oracle.sql.NUMBER[][] num)
  { return num; }

  // Test Beans
  public static Callin2Bean testBean()
  { return new Callin2Bean(&#34;mybean&#34;, new int[]{1,2}); }
  public static Callin2Bean testBean (Callin2Bean b)
  { return b; }
  public static Callin2Bean[] testBean (Callin2Bean[] b)
  { return b; }
  public static Callin2Bean[][] testBean (Callin2Bean[][] b)
  { return b; }
  public Callin2Bean testInstBean (Callin2Bean b)
  { return b; }
  public Callin2Bean[] testInstBean (Callin2Bean[] b)
  { return b; }
  public Callin2Bean[][] testInstBean (Callin2Bean[][] b)
  { return b; }

  // Test Serializable
  public static java.io.Serializable testSer()
  { return new String(&#34;test Serializable&#34;); }
  public static java.io.Serializable testSer (java.io.Serializable b)
  { return b; }
  public static java.io.Serializable[] testSer (java.io.Serializable[] b)
  { return b; }
  public static java.io.Serializable[][] testSer (java.io.Serializable[][] b)
  { return b; }
  public java.io.Serializable testInstSer (java.io.Serializable b)
  { return b; }
  public java.io.Serializable[] testInstSer (java.io.Serializable[] b)
  { return b; }
  public java.io.Serializable[][] testInstSer (java.io.Serializable[][] b)
  { return b; }
}
</pre>
<p class="subhead2"><a id="JJPUB24281"></a>JavaBean Used in the Server-Side Java Class</p>
<p>The source code of the JavaBean, <code>Callin2Bean.java</code>, used in the server-side Java class, <code>Callin2.java</code>, is as follows:</p>
<pre>public class Callin2Bean 
{
  private String stringValue = &#34;&#34;;
  private int[] numberValue;
  
  public Callin2Bean ()
  {
  }
 
  public Callin2Bean(String string_val, int[] number_val)
  {
    stringValue = string_val;
    numberValue = number_val;
  }
 
  public void setStringValue(String string_val)
  {
    stringValue = string_val;
  }
 
  public String getStringValue ()
  {
    return stringValue;
  }
 
  public void setNumberValue (int[] number_val)
  {
    numberValue = number_val;
  }
 
  public int[] getNumberValue ()
  {
    return numberValue;
  }
 
  public boolean equals(Object other)
  {
    if(other instanceof Callin2Bean)
    {
      Callin2Bean my_bean = (Callin2Bean)other;
      if ( stringValue.equals(my_bean.getStringValue()) &amp;&amp; compareIntArray(numberValue, my_bean.getNumberValue()) )
      {
        return true;
      }
    }
    return false;
  }
 
  private boolean compareIntArray(int[] b1, int[] b2)
  {
    try
    { 
      if ((b1 == null) &amp;&amp; (b2 == null))
        return true;
 
      if ((b1.length == 0) &amp;&amp; (b2.length == 0))
        return true;
 
      if (b1.length != b2.length)
        return false;
      int x;
      for (x = 0; x &lt; b1.length; x++)
      {
        if (b1[x] != b2[x])
          return false;
      }
      return true;
    }
    catch (Exception e)
    {
      return false;
    }
  }
}
</pre>
<p class="subhead2"><a id="JJPUB24282"></a>Entry Point Java Class</p>
<p>The <code>TestCallin2.java</code> is the entry point Java class for this example. This class invokes the methods in the published class. The source code of the <code>TestCallin2.java</code> file is as follows:</p>
<pre>public class TestCallin2
{
  public static void main(String[] args) throws Exception
  {
    java.sql.DriverManager.registerDriver(new oracle.jdbc.OracleDriver());
    oracle.jdbc.OracleConnection conn = (oracle.jdbc.OracleConnection) 
    //java.sql.DriverManager.getConnection(&#34;jdbc:oracle:thin:@localhost:1521:lsqlj1&#34;, &#34;hr&#34;, &#34;hr&#34;);
    java.sql.DriverManager.getConnection(&#34;jdbc:oracle:oci8:@&#34;, &#34;hr&#34;, &#34;hr&#34;);
 
   Callin2Client tkpu = new Callin2Client (conn);
 
   System.out.println(&#34;testInstNum() returned &#34; + tkpu.testinstnum(new java.math.BigDecimal(1999)));
 
   TblNumber na = new TblNumber(new java.math.BigDecimal[]{new java.math.BigDecimal(2999)});
   System.out.println(&#34;testInstNum([]) returned &#34; +
   tkpu.testinstnum(na).getArray()[0]);
 
   ObjCallin2bean mb = new ObjCallin2bean(&#34;mybean&#34;, na);
   System.out.println(&#34;testCallin2Bean() returned &#34; + tkpu.testbean(mb).getStringValue());
   System.out.println(&#34;testCallin2Bean([]) returned &#34; + 
tkpu.testbean(new TblObjCallin2bean(new ObjCallin2bean[]{mb})).getArray()[0].getStringValue());
 
   java.io.Serializable s = new java.util.Hashtable();
   ((java.util.Hashtable) s).put(&#34;bush&#34;, &#34;cheny&#34;);
   ((java.util.Hashtable) s).put(&#34;kerry&#34;, &#34;dean&#34;);
   java.io.Serializable[] s1 = new java.io.Serializable[]{s};
   java.io.Serializable[][] s2 = new java.io.Serializable[][]{s1};
   System.out.println(&#34;testSer() returned &#34; + ((java.util.Hashtable) tkpu.testser(s)).get(&#34;kerry&#34;)); 
   System.out.println(&#34;testSer([]) returned &#34; + ((java.util.Hashtable) tkpu.testser0(s1)[0]).get(&#34;kerry&#34;)); 
   System.out.println(&#34;testSer([][]) returned &#34; + ((java.util.Hashtable) tkpu.testser1(s2)[0][0]).get(&#34;kerry&#34;)); 
  }
}
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are connecting to the database using the JDBC Thin driver, then you must uncomment the first call to the <code>getConnection()</code> method in the preceding code and comment the second call to the <code>getConnection()</code> method, which includes a connect statement for an Oracle Call Interface (OCI) driver.</div>
</div>
<!-- class="sect2" -->
<a id="CCJFIDCC"></a>
<div id="JJPUB24283" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Publishing Server-Side Java Class</h3>
<p>After you have created the required source files, you must publish these files. To publish the server-side Java classes, you must first load these files on to the database. Ensure that you load both <code>Callin2.java</code> and <code>Callin2Bean.java</code>. The command for loading the files is:</p>
<pre>% loadjava -u hr -r -v -f Callin2.java Callin2Bean.java
Password: <span class="italic">password</span>
</pre>
<p>To publish these files, issue the following command:</p>
<pre>% jpub -u hr -sysuser=sys/<span class="italic">sys_password</span> -dbjava=Callin2:Callin2Client -dir=tmp
Enter hr password: <span class="italic">password</span>
</pre>
<p>The JPublisher output is:</p>
<pre>tmp/Callin2JPub.java
tmp/plsql_wrapper.sql
tmp/plsql_dropper.sql
HR.TBL_NUMBER
HR.TBL_TBL_NUMBER
HR.OBJ_CALLIN2BEAN
HR.TBL_OBJ_CALLIN2BEAN
HR.TBL_TBL_OBJ_CALLI
HR.JPUB_PLSQL_WRAPPER
Executing tmp/plsql_dropper.sql
Executing tmp/plsql_wrapper.sql
Loading Callin2JPub.java
</pre></div>
<!-- class="sect2" -->
<a id="CCJJFHJC"></a>
<div id="JJPUB24284" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">The Generated Files</h3>
<p>When you publish the server-side Java classes JPublisher generates a few Java classes and PL/SQL scripts. Some of these files are:</p>
<ul>
<li>
<p><code>Callin2JPub.java</code></p>
<p>This is the server-side Java wrapper class for <code>Callin2.java</code>.</p>
</li>
<li>
<p><code>Callin2Client.java</code></p>
<p>This is the client-side Java class.</p>
</li>
<li>
<p><code>plsql_wrapper.sql</code></p>
<p>This is the PL/SQL wrapper for the server-side Java class.</p>
</li>
<li>
<p><code>plsql_dropper.sql</code></p>
<p>This is the PL/SQL script dropping the PL/SQL wrapper.</p>
</li>
</ul>
<p>The other files generated by JPublisher are as follows:</p>
<ul>
<li>
<p><code>TblNumber.java</code></p>
<p>A client-side wrapper generated for <code>int[]</code>.</p>
</li>
<li>
<p><code>TblTblNumber.java</code></p>
<p>A client-side wrapper generated for <code>int[][]</code>.</p>
</li>
<li>
<p><code>ObjCallin2bean.java</code></p>
<p>A client-side wrapper generated for the server-side class <code>Callin2Bean</code>.</p>
</li>
<li>
<p><code>ObjCallin2beanRef.java</code></p>
<p>A client-side wrapper generated for the server-side class <code>Callin2Bean</code>, used as a <code>REF</code> column in a table. This file is generated, but not used in the call-in scenario.</p>
</li>
<li>
<p><code>TblObjCallin2bean.java</code></p>
<p>A client-side wrapper generated for <code>Callin2Bean[]</code>.</p>
</li>
<li>
<p><code>TblTblObjCalli.java</code></p>
<p>A client-side wrapper generated for <code>Callin2Bean[][]</code>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CCJFCHBF"></a>
<div id="JJPUB24285" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Testing the Published Files</h3>
<p>After the files have been published, you can test the published classes by issuing the following commands:</p>
<pre>% javac -classpath tmp:${CLASSPATH} -d tmp TestCallin2.java
% java -classpath tmp:${CLASSPATH} TestCallin2
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5684">
<tr>
<td class="cellalignment5693">
<table class="cellalignment5689">
<tr>
<td class="cellalignment5688"><a href="optinfil.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5688"><a href="trblshtg.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5696">
<table class="cellalignment5687">
<tr>
<td class="cellalignment5688"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5688"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5688"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5688"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5688"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5688"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>