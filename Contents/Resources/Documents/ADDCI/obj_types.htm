<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-41"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Defining%20Object%20Types%20for%20Data%20Cartridges"></a><title>Defining Object Types for Data Cartridges</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="method, constructor, constructor method, map, order, map methods, order methods, object type, comparisons"/>
<meta name="dcterms.created" content="2017-06-09T01:57:02Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Data Cartridge Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E15882-06"/>
<meta name="dcterms.isVersionOf" content="ADDCI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="part2.htm" title="Previous" type="text/html"/>
<link rel="Next" href="pl_sql.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E15882-06.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-B6109DA0-DE36-41CA-974A-2304689F19DA"></a> <span id="PAGE" style="display:none;">10/33</span> <!-- End Header -->
<a id="ADDCI210"></a>
<h1 id="ADDCI-GUID-B6109DA0-DE36-41CA-974A-2304689F19DA" class="sect1"><span class="enumeration_chapter">3</span> Defining Object Types for Data Cartridges</h1>
<div>
<p>Consider how to define a schema for a data cartridge. Object types are crucial to building data cartridges in that they enable domain-level abstractions to be captured in the database.</p>
<div class="infoboxnotealso" id="GUID-B6109DA0-DE36-41CA-974A-2304689F19DA__GUID-B1DC5284-93BD-4FF0-86FD-8EC65F4FA284">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADOBJ" target="_blank" href="../ADOBJ/toc.htm"><span class="italic">Oracle Database Object-Relational Developer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink CNCPT" target="_blank" href="../CNCPT/toc.htm"><span class="variable">Oracle Database Concepts</span></a></p>
</li>
<li>
<p><a class="olink ADFNS" target="_blank" href="../ADFNS/toc.htm"><span class="variable">Oracle Database Advanced Application Developer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink LNPLS" target="_blank" href="../LNPLS/toc.htm"><span class="variable">Oracle Database PL/SQL Language Reference</span></a></p>
</li>
</ul>
</div>
</div>
<a id="ADDCI4294"></a>
<div class="props_rev_3"><a id="GUID-54136CFC-20CC-4890-8ADE-1B4CD150FA19"></a>
<h2 id="ADDCI-GUID-54136CFC-20CC-4890-8ADE-1B4CD150FA19" class="sect2">Objects and Object Types for Data Cartridges</h2>
<div>
<p>In the Oracle Object-Relational Database Management System (ORDBMS), you use object types to model real-world entities. An object type has attributes, which reflect the entity&#39;s structure, and methods, which implement the operations on the entity. Attributes are defined using built-in types or other object types. Methods are functions or procedures written in PL/SQL or an external language, like C, and stored in the database.</p>
<p>A typical use for an object type is to impose structure on some part of the data in the database. For example, an object type named <code class="codeph">DataStream</code> could be used by a cartridge to store large amounts of data in a character LOB (a data type for large objects). This object type has attributes such as an identifier, a name, a date, and so on. The statement in <a href="obj_types.htm#GUID-B738D559-6FBE-4498-B17C-406A61CF4C2A__CHDGIJCD">Example 3-1</a> defines the <code class="codeph">DataStream</code> data type:</p>
<p><a id="d8924e141" class="indexterm-anchor"></a><a id="d8924e143" class="indexterm-anchor"></a>A method is a procedure or function that is part of the object type definition and that can operate on the object type data attributes. Such methods are called <span class="bold">member methods</span>, and they take the keyword <code class="codeph">MEMBER</code> when you specify them as a component of the object type. The <code class="codeph">DataStream</code> type definition declares three methods. The first two, <code class="codeph">DataStreamMin</code> and <code class="codeph">DataStreamMax</code>, calculate the minimum and maximum values, respectively, in the data stream stored inside the character <code class="codeph">LOB</code>. The third method, <code class="codeph">DataStreamToInt</code>, a <span class="bold">map method</span>, governs comparisons between instances of data stream type.</p>
<p>The pragma (compiler directive) <code class="codeph">RESTRICT_REFERENCES</code> is necessary for security.</p>
<p>After declaring the type, define the type body. The body contains the code for type methods. <a href="obj_types.htm#GUID-48197D66-061D-4480-ACE6-25105E1E87B7__CHDDCIDI">Example 3-2</a> shows the type body definition for the <code class="codeph">DataStream</code> type. It defines the member function methods, <code class="codeph">DataStreamMin</code> and <code class="codeph">DataStreamMax</code>, and the map method <code class="codeph">DataStreamToInt</code>.</p>
<p><code class="codeph">DataStreamMin</code> and <code class="codeph">DataStreamMax</code> are call routines in a PL/SQL package named <code class="codeph">DS_Package</code>. Since these methods are likely to be compute-intensive (they process numbers stored in the <code class="codeph">CLOB</code> to determine minimum and maximum values), they are defined as external procedures and implemented in C. The external dispatch is routed through a PL/SQL package named <code class="codeph">DS_Package</code>. Such packages are discussed in <a class="olink ARPLS" target="_blank" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>. The third method, <code class="codeph">DataStreamToInt</code>, is implemented in PL/SQL. Because we have a identifier, <code class="codeph">id</code>, attribute in <code class="codeph">DataStream</code>, this method can return the value of the identifier attribute. Most map methods, however, are more complex than <code class="codeph">DataStreamToInt</code>.</p>
<div class="infoboxnotealso" id="GUID-54136CFC-20CC-4890-8ADE-1B4CD150FA19__GUID-83359117-446C-4B16-9423-AD67AE03DE9D">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="obj_types.htm#GUID-E28FA7B5-FC69-4DC0-8AFE-6501B1624B72">Object Comparison</a>&#34;</span> for information about map methods</p>
<p><a href="lobs.htm#GUID-5469F1F7-BD5B-4FB4-8F13-AE4CA0915F6D">Working with Multimedia Data Types</a></p>
</li>
<li>
<p><a class="olink ADLOB" target="_blank" href="../ADLOB/toc.htm"><span class="variable">Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</span></a> for general information about LOBs</p>
</li>
</ul>
</div>
</div>
<a id="ADDCI4295"></a>
<div class="props_rev_3"><a id="GUID-B738D559-6FBE-4498-B17C-406A61CF4C2A"></a>
<h3 id="ADDCI-GUID-B738D559-6FBE-4498-B17C-406A61CF4C2A" class="sect3">Defining a DataStream Data Type</h3>
<div>
<div class="example" id="GUID-B738D559-6FBE-4498-B17C-406A61CF4C2A__CHDGIJCD">
<p class="titleinexample">Example 3-1 Defining a DataStream data type</p>
<pre dir="ltr">create or replace type DataStream as object (
   id integer, 
   name varchar2(20),
   createdOn date,
   data clob, 
   MEMBER FUNCTION DataStreamMin  return pls_integer,
   MEMBER FUNCTION DataStreamMax  return pls_integer,
   MAP MEMBER FUNCTION DataStreamToInt  return integer,
   PRAGMA restrict_references(DataStreamMin, WNDS, WNPS),
   PRAGMA restrict_references(DataStreamMax, WNDS, WNPS));
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ADDCI4296"></a>
<div class="props_rev_2"><a id="GUID-48197D66-061D-4480-ACE6-25105E1E87B7"></a>
<h3 id="ADDCI-GUID-48197D66-061D-4480-ACE6-25105E1E87B7" class="sect3">Defining the Type Body</h3>
<div>
<div class="example" id="GUID-48197D66-061D-4480-ACE6-25105E1E87B7__CHDDCIDI">
<p class="titleinexample">Example 3-2 Defining the Type Body</p>
<pre dir="ltr">CREATE OR REPLACE TYPE BODY DataStream IS
    MEMBER FUNCTION DataStreamMin return pls_integer is 
      a pls_integer := DS_Package.ds_findmin(data); 
      begin return a; end; 
    MEMBER FUNCTION DataStreamMax return pls_integer is 
      b pls_integer := DS_Package.ds_findmax(data); 
      begin return b; end; 
    MAP MEMBER FUNCTION DataStreamToInt return integer is 
      c integer := id; 
      begin return c; end; 
end;
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="ADDCI4297"></a>
<div class="props_rev_3"><a id="GUID-99B9BBF9-7C24-49F0-AF43-0E5E3CEBA79C"></a>
<h2 id="ADDCI-GUID-99B9BBF9-7C24-49F0-AF43-0E5E3CEBA79C" class="sect2">Assigning an Object Identifier to an Object Type in Data Cartridges</h2>
<div>
<p><a id="d8924e412" class="indexterm-anchor"></a><a id="d8924e414" class="indexterm-anchor"></a><a id="d8924e418" class="indexterm-anchor"></a>The <code class="codeph">CREATE</code> <code class="codeph">TYPE</code> statement has an optional keyword <code class="codeph">OID</code>, which associates a user-specified object identifier (<code class="codeph">OID</code>) with the type definition. It necessary to anyone who creates an object type used in several database.s</p>
<p>Each type has an <code class="codeph">OID</code>. If you create an object type and do not specify an <code class="codeph">OID</code>, Oracle generates an <code class="codeph">OID</code> and assigns it to the type. Oracle uses the <code class="codeph">OID</code> internally for operations pertaining to that type. Using the same <code class="codeph">OID</code> for a type is important if you plan to share instances of the type across databases for such operations as export/import and distributed queries.</p>
<p>Note that in <code class="codeph">CREATE</code> <code class="codeph">TYPE</code> with <code class="codeph">OID</code>, an <code class="codeph">OID</code> is assigned to the type itself. Each row in a table with a column of the specified type has a row-specific <code class="codeph">OID</code>.</p>
<p>Consider creating a <code class="codeph">SpecialPerson</code> type, and then instantiating this type in two different databases in tables named <code class="codeph">SpecialPersonTable1</code> and <code class="codeph">SpecialPersonTable2</code>. The RDBMS must know that the <code class="codeph">SpecialPerson</code> type is the same type in both instances, and therefore the type must be defined using the same <code class="codeph">OID</code> in both databases. If you do not specify an <code class="codeph">OID</code> with <code class="codeph">CREATE</code> <code class="codeph">TYPE</code>, a unique identifier is created automatically by the RDBMS. The syntax for specifying an <code class="codeph">OID</code> for an object type is in <a href="obj_types.htm#GUID-A69156FB-FBDA-477B-96E9-6A1DD02E4208__CHDJHFDB">Example 3-3</a>.</p>
<p>In <a href="obj_types.htm#GUID-1BB50362-8274-405E-84B3-0B96F304833E__CHDFIEEI">Example 3-4</a>, the <code class="codeph">SELECT</code> statement generates an <code class="codeph">OID</code>, and the <code class="codeph">CREATE</code> <code class="codeph">TYPE</code> statement uses the <code class="codeph">OID</code> in creating an object type named <code class="codeph">mytype</code>. Be sure to use the <code class="codeph">SELECT</code> statement to generate a different <code class="codeph">OID</code> for each object type to be created, because this is the only way to guarantee that each <code class="codeph">OID</code> is valid and globally unique.</p>
</div>
<a id="ADDCI4298"></a>
<div class="props_rev_3"><a id="GUID-A69156FB-FBDA-477B-96E9-6A1DD02E4208"></a>
<h3 id="ADDCI-GUID-A69156FB-FBDA-477B-96E9-6A1DD02E4208" class="sect3">Specifying an ODI for an Object Type in Data Cartridges</h3>
<div>
<div class="example" id="GUID-A69156FB-FBDA-477B-96E9-6A1DD02E4208__CHDJHFDB">
<p class="titleinexample">Example 3-3 Specifying an ODI for an Object Type</p>
<pre dir="ltr">CREATE OR REPLACE TYPE type_name OID &#39;oid&#39; AS OBJECT (attribute datatype [,...]);
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ADDCI4299"></a>
<div class="props_rev_3"><a id="GUID-1BB50362-8274-405E-84B3-0B96F304833E"></a>
<h3 id="ADDCI-GUID-1BB50362-8274-405E-84B3-0B96F304833E" class="sect3">Assigning and Using OIDs in Data Cartridges</h3>
<div>
<div class="example" id="GUID-1BB50362-8274-405E-84B3-0B96F304833E__CHDFIEEI">
<p class="titleinexample">Example 3-4 Assigning and Using OIDs</p>
<pre dir="ltr">SQLPLUS&gt; SELECT SYS_OP_GUID() FROM DUAL; 
SYS_OP_GUID()                    
-------------------------------- 
19A57209ECB73F91E03400400B40BBE3 
1 row selected. 
 
SQLPLUS&gt; CREATE TYPE mytype OID &#39;19A57209ECB73F91E03400400B40BBE3&#39;
     2&gt; AS OBJECT (attrib1 NUMBER); 
Statement processed.
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="ADDCI4300"></a>
<div class="props_rev_3"><a id="GUID-B54EF9CE-7302-46ED-9DEB-E5B4604386FF"></a>
<h2 id="ADDCI-GUID-B54EF9CE-7302-46ED-9DEB-E5B4604386FF" class="sect2">Constructor Methods in Data Cartridges</h2>
<div>
<p>Oracle implicitly defines a <span class="bold">constructor method</span> for each object type that you define. The name of the constructor method is identical to the name of the object type. The parameters of the constructor method are exactly the data attributes of the object type, and they occur in the same order as the attribute definition for the object type. Only one constructor method can be defined for each object type.</p>
<p>In <a href="obj_types.htm#GUID-97580FCB-74BD-4174-A6D8-DB68822AA2C6__CHDEHCJC">Example 3-5</a>, the system creates a type named <code class="codeph">rational_type</code> and implicitly creates a constructor method for this object type.</p>
<p>When you instantiate an object of <code class="codeph">rational_type</code>, you invoke the constructor method, as demonstrated in <a href="obj_types.htm#GUID-7E6008D8-107E-43F6-9B51-627316E4DBF2__CHDDBDEB">Example 3-6</a>:</p>
</div>
<a id="ADDCI4301"></a>
<div class="props_rev_3"><a id="GUID-97580FCB-74BD-4174-A6D8-DB68822AA2C6"></a>
<h3 id="ADDCI-GUID-97580FCB-74BD-4174-A6D8-DB68822AA2C6" class="sect3">Creating a Type</h3>
<div>
<div class="example" id="GUID-97580FCB-74BD-4174-A6D8-DB68822AA2C6__CHDEHCJC">
<p class="titleinexample">Example 3-5 Creating a Type</p>
<pre dir="ltr">CREATE TYPE rational_type (
     numerator integer,
     denominator integer);
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ADDCI4302"></a>
<div class="props_rev_3"><a id="GUID-7E6008D8-107E-43F6-9B51-627316E4DBF2"></a>
<h3 id="ADDCI-GUID-7E6008D8-107E-43F6-9B51-627316E4DBF2" class="sect3">Instantiating a Type Object</h3>
<div>
<div class="example" id="GUID-7E6008D8-107E-43F6-9B51-627316E4DBF2__CHDDBDEB">
<p class="titleinexample">Example 3-6 Instantiating a Type Object</p>
<pre dir="ltr">CREATE TABLE some_table (
     c1 integer, c2 rational_type);
INSERT INTO some_table
     VALUES (42, rational_type(223, 71));
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="ADDCI4303"></a>
<div class="props_rev_3"><a id="GUID-E28FA7B5-FC69-4DC0-8AFE-6501B1624B72"></a>
<h2 id="ADDCI-GUID-E28FA7B5-FC69-4DC0-8AFE-6501B1624B72" class="sect2">Object Comparison in Data Cartridges</h2>
<div>
<p>SQL performs comparison operations on objects. Some comparisons are explicit, using the comparison operators (=, &lt;, &gt;, &lt;&gt;, &lt;=, &gt;=, !=) and the <code class="codeph">BETWEEN</code> and <code class="codeph">IN</code> predicates. Other comparisons are implicit, as in the <code class="codeph">GROUP</code> <code class="codeph">BY</code>, <code class="codeph">ORDER</code> <code class="codeph">BY</code>, <code class="codeph">DISTINCT</code>, and <code class="codeph">UNIQUE</code> clauses.</p>
<p>Comparison of objects uses special member functions of the object type: map methods and order methods. To perform object comparison, you must implement either a map method or an order method in the <code class="codeph">CREATE</code> <code class="codeph">TYPE</code> and <code class="codeph">CREATE</code> <code class="codeph">TYPE</code> <code class="codeph">BODY</code> statements. In <a href="obj_types.htm#GUID-238638E1-8E29-451C-AF8A-8181C5A3E4D5__CHDIEHCC">Example 3-7</a>, the type body for the <code class="codeph">DataStream</code> type implements the map member function.</p>
<p>The definition of the map member function relies on the presence of the <code class="codeph">id</code> attribute of the <code class="codeph">DataStream</code> type to map instances to integers. Whenever a comparison operation is required between objects of type <code class="codeph">DataStream</code>, the map function <code class="codeph">DataStreamToInt()</code> is called implicitly by the system.</p>
<p>The object type <code class="codeph">rational_type</code> does not have a simple <code class="codeph">id</code> attribute like <code class="codeph">DataStream</code>. Instead, its map member function is complicated, as demonstrated in <a href="obj_types.htm#GUID-4178CBE6-A36B-4284-8DD8-2625B8B98EDD__CHDHCEED">Example 3-8</a>. Because a map function can return any of the built-in types, <code class="codeph">rational_type</code> can return a value or type <code class="codeph">REAL</code>.</p>
<p>If you have not defined a map or order function for an object type, it can only support equality comparisons. Oracle SQL performs the comparison by doing a field-by-field comparison of the attributes of that type.</p>
</div>
<a id="ADDCI4304"></a>
<div class="props_rev_3"><a id="GUID-238638E1-8E29-451C-AF8A-8181C5A3E4D5"></a>
<h3 id="ADDCI-GUID-238638E1-8E29-451C-AF8A-8181C5A3E4D5" class="sect3">Implementing a Member Function</h3>
<div>
<div class="example" id="GUID-238638E1-8E29-451C-AF8A-8181C5A3E4D5__CHDIEHCC">
<p class="titleinexample">Example 3-7 Implementing a Member Function</p>
<pre dir="ltr">MAP MEMBER FUNCTION DataStreamToInt return integer is 
      c integer := id; 
      begin return c; end; 
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ADDCI4305"></a>
<div class="props_rev_3"><a id="GUID-4178CBE6-A36B-4284-8DD8-2625B8B98EDD"></a>
<h3 id="ADDCI-GUID-4178CBE6-A36B-4284-8DD8-2625B8B98EDD" class="sect3">Implementing Functions for Types Without a Simple Id Attribute</h3>
<div>
<div class="example" id="GUID-4178CBE6-A36B-4284-8DD8-2625B8B98EDD__CHDHCEED">
<p class="titleinexample">Example 3-8 Implementing Functions for Types Without a Simple Id Attribute</p>
<pre dir="ltr">MAP MEMBER FUNCTION RationalToReal RETURN REAL IS
     BEGIN
         RETURN numerator/denominator;
     END;
...
</pre></div>
<!-- class="example" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5977">
<tr>
<td class="cellalignment5984">
<table class="cellalignment5982">
<tr>
<td class="cellalignment5981"><a href="part2.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5981"><a href="pl_sql.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5986">
<table class="cellalignment5980">
<tr>
<td class="cellalignment5981"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5981"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5981"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5981"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5981"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5981"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>