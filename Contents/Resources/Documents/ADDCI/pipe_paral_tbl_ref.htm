<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-48"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Pipelined%20and%20Parallel%20Table%20Functions"></a><title>Pipelined and Parallel Table Functions</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="dcterms.created" content="2017-06-09T01:57:02Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Data Cartridge Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E15882-06"/>
<meta name="dcterms.isVersionOf" content="ADDCI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ext_agg_ref.htm" title="Previous" type="text/html"/>
<link rel="Next" href="user_man_idx_apnd.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E15882-06.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-FA3B69A8-3DFC-43F1-8435-F1BC8874B687"></a> <span id="PAGE" style="display:none;">31/33</span> <!-- End Header -->
<a id="ADDCI4230"></a>
<h1 id="ADDCI-GUID-FA3B69A8-3DFC-43F1-8435-F1BC8874B687" class="sect1"><span class="enumeration_chapter">23</span> Pipelined and Parallel Table Functions</h1>
<div>
<p>Consider the routines that must be implemented to define pipelined and parallel table functions in C.</p>
<div class="infoboxnotealso" id="GUID-FA3B69A8-3DFC-43F1-8435-F1BC8874B687__GUID-B3EAD8B6-9B38-4959-BCE0-9BACF7B4CBE2">
<p class="notep1">See Also:</p>
<p><a href="pipe_paral_tbl.htm#GUID-EFB94CFB-3E44-4236-B490-ADBB480C94D4">Using Pipelined and Parallel Table Functions</a> for an overall explanation of pipelined and parallel table functions</p>
</div>
</div>
<a id="ADDCI5142"></a><a id="ADDCI5141"></a>
<div class="props_rev_3"><a id="GUID-F0506E99-9509-4E2B-B552-1F53AF427D0A"></a>
<h2 id="ADDCI-GUID-F0506E99-9509-4E2B-B552-1F53AF427D0A" class="sect2">Routines for Pipelined and Parallel Table Functions in C</h2>
<div>
<div class="section">
<p>The following C methods, summarized in support parallel and pipelined table functions.</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-F0506E99-9509-4E2B-B552-1F53AF427D0A__GUID-64C791CB-CF3E-493E-B05D-3C05E881BFC4">
<p class="titleintable">Table 22-1 Summary of Pipelined and Parallel Table Functions for C</p>
<table class="cellalignment5987" title="Summary of Pipelined and Parallel Table Functions for C" summary="First column gives the name and references of the function, while the second column is a brief description.">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6008" id="d81287e122">Function</th>
<th class="cellalignment6009" id="d81287e125">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6010" id="d81287e130" headers="d81287e122">
<p><a href="pipe_paral_tbl_ref.htm#GUID-9814FCDE-05BE-4F25-9861-FDC640F43E5C">ODCITableClose()</a></p>
</td>
<td class="cellalignment6011" headers="d81287e130 d81287e125">
<p>Performs cleanup operations after scanning a table function.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6010" id="d81287e139" headers="d81287e122">
<p><a href="pipe_paral_tbl_ref.htm#GUID-C45BF680-3EBE-4E53-8A08-193ED22F61C8">ODCITableDescribe()</a></p>
</td>
<td class="cellalignment6011" headers="d81287e139 d81287e125">
<p>Returns describe information for a table function whose return type is <code class="codeph">ANYDATASET</code>.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6010" id="d81287e151" headers="d81287e122">
<p><a href="pipe_paral_tbl_ref.htm#GUID-54F5311D-8708-44AB-85A9-9CFE3EE79C76">ODCITableFetch()</a></p>
</td>
<td class="cellalignment6011" headers="d81287e151 d81287e125">
<p>returns the next batch of rows from a table function.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6010" id="d81287e160" headers="d81287e122">
<p><a href="pipe_paral_tbl_ref.htm#GUID-6022AD7F-BDE5-4D42-B8F9-D2B18AB6AD84">ODCITablePrepare()</a></p>
</td>
<td class="cellalignment6011" headers="d81287e160 d81287e125">
<p>Prepares the scan context and other query information at compile time.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6010" id="d81287e169" headers="d81287e122">
<p><a href="pipe_paral_tbl_ref.htm#GUID-7C674A4F-7145-480E-883D-00C609B64DA0">ODCITableStart()</a></p>
</td>
<td class="cellalignment6011" headers="d81287e169 d81287e125">
<p>initializes the scan of a table function.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="ADDCI5144"></a><a id="ADDCI5145"></a><a id="ADDCI5146"></a><a id="ADDCI5143"></a>
<div class="props_rev_3"><a id="GUID-9814FCDE-05BE-4F25-9861-FDC640F43E5C"></a>
<h3 id="ADDCI-GUID-9814FCDE-05BE-4F25-9861-FDC640F43E5C" class="sect3">ODCITableClose()</h3>
<div>
<div class="section">
<p><code class="codeph">ODCITableClose</code> performs cleanup operations after scanning a table function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">MEMBER FUNCTION ODCITableClose(
   self IN &lt;imptype&gt;) 
RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-9814FCDE-05BE-4F25-9861-FDC640F43E5C__GUID-A384EEC0-B291-4655-9AE2-7818C03FE4B5">
<table class="cellalignment5987" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter.">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6062" id="d81287e251">Parameter</th>
<th class="cellalignment6088" id="d81287e254">In/Out</th>
<th class="cellalignment6089" id="d81287e257">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e262" headers="d81287e251">
<pre dir="ltr">self
</pre></td>
<td class="cellalignment6090" headers="d81287e262 d81287e254">
<pre dir="ltr">IN
</pre></td>
<td class="cellalignment6091" headers="d81287e262 d81287e257">
<p>The scan context set up by previous scan routine invocation</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, <code class="codeph">ODCIConst.Error</code> otherwise.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Oracle invokes <code class="codeph">ODCITableClose</code> after the last fetch call. The scan context is passed in as a parameter. <code class="codeph">ODCITableClose</code> then performs any necessary cleanup operations, such as freeing memory.</p>
</li>
<li>
<p>If ODCITablePrepare is implemented, this routine is only called one time, at the end of query execution, rather than each time the table function exits.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5148"></a><a id="ADDCI5149"></a><a id="ADDCI5150"></a><a id="ADDCI5147"></a>
<div class="props_rev_3"><a id="GUID-C45BF680-3EBE-4E53-8A08-193ED22F61C8"></a>
<h3 id="ADDCI-GUID-C45BF680-3EBE-4E53-8A08-193ED22F61C8" class="sect3">ODCITableDescribe()</h3>
<div>
<div class="section">
<p><code class="codeph">ODCITableDescribe</code> returns describe information for a table function whose return type is <code class="codeph">ANYDATASET</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">STATIC FUNCTION ODCITableDescribe(
   rtype OUT ANYTYPE, 
   &lt;args&gt;) 
RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-C45BF680-3EBE-4E53-8A08-193ED22F61C8__GUID-83062C67-DAEA-457D-9EC3-F53A8B85BF6A">
<table class="cellalignment5987" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter.">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6062" id="d81287e376">Parameter</th>
<th class="cellalignment6088" id="d81287e379">In/Out</th>
<th class="cellalignment6089" id="d81287e382">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e387" headers="d81287e376">
<pre dir="ltr">rtype
</pre></td>
<td class="cellalignment6090" headers="d81287e387 d81287e379">
<pre dir="ltr">OUT
</pre></td>
<td class="cellalignment6091" headers="d81287e387 d81287e382">
<p>The <code class="codeph">AnyType</code> value that describes the returned rows from the table function</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e400" headers="d81287e376">
<pre dir="ltr">args
</pre></td>
<td class="cellalignment6090" headers="d81287e400 d81287e379">
<pre dir="ltr">IN
</pre></td>
<td class="cellalignment6091" headers="d81287e400 d81287e382">
<p>The set of zero or more user specified arguments for the table function.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, <code class="codeph">ODCIConst.Error</code> otherwise.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>If the optional routine <code class="codeph">ODCITableDescribe</code> is implemented, Oracle invokes it at query compilation time to retrieve the specific type information.</p>
</li>
<li>
<p>This interface is applicable only for table functions whose return type is <code class="codeph">ANYDATASET</code>. The format of elements within the returned collection is conveyed to Oracle by returning an instance of <code class="codeph">ANYTYPE</code>. The <code class="codeph">ANYTYPE</code> instance specifies the actual structure of the returned rows of the specific query.</p>
</li>
<li>
<p><code class="codeph">ANYTYPE</code> provides a data type to model the metadata of a row: the names and data types of all the columns (fields) comprising the row. It also provides a set of PL/SQL and C interfaces for users to construct and access the metadata information. <code class="codeph">ANYDATASET</code>, like <code class="codeph">ANYTYPE</code>, contains a description of a given type, but <code class="codeph">ANYDATASET</code> also contains a set of data instances of that type</p>
</li>
<li>
<p>The following example shows a query on a table function that uses the <code class="codeph">ANYDATASET</code> type:</p>
<pre dir="ltr">SELECT * FROM 
TABLE(CAST(AnyBooks(&#39;http://.../books.xml&#39;) AS ANYDATASET));
</pre>
<p>At query compilation time, Oracle invokes the <code class="codeph">ODCITableDescribe</code> routine. The routine typically uses the user arguments to figure out the nature of the return rows. In this example, <code class="codeph">ODCITableDescribe</code> consults the DTD of the XML documents at the specified location to determine the appropriate <code class="codeph">ANYTYPE</code> value to return. Each <code class="codeph">ANYTYPE</code> instance is constructed by invoking the constructor APIs with this field name and data type information.</p>
</li>
<li>
<p>Any arguments of the table function that are not constants are passed to <code class="codeph">ODCITableDescribe</code> as <code class="codeph">NULL</code>s because their values are not known at compile time.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-C45BF680-3EBE-4E53-8A08-193ED22F61C8__GUID-D6CA7A21-242B-445A-9264-1B99D4D519EE">
<p class="notep1">See Also:</p>
<p><a href="pipe_paral_tbl.htm#GUID-7008AB9F-4C2B-4896-AF2D-1AB39910C9A0">Transient and Generic Types</a> for a discussion of <code class="codeph">ANYTYPE</code>, <code class="codeph">ANYDATA</code>, and <code class="codeph">ANYDATASET</code></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5152"></a><a id="ADDCI5153"></a><a id="ADDCI5154"></a><a id="ADDCI5151"></a>
<div class="props_rev_3"><a id="GUID-54F5311D-8708-44AB-85A9-9CFE3EE79C76"></a>
<h3 id="ADDCI-GUID-54F5311D-8708-44AB-85A9-9CFE3EE79C76" class="sect3">ODCITableFetch()</h3>
<div>
<div class="section">
<p><code class="codeph">ODCITableFetch</code> returns the next batch of rows from a table function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">MEMBER FUNCTION ODCITableFetch(
   self IN OUT &lt;imptype&gt;, 
   nrows IN NUMBER, 
   rws OUT &lt;coll-type&gt;) 
RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-54F5311D-8708-44AB-85A9-9CFE3EE79C76__GUID-C5715CAB-ED08-428D-9583-DA756F5FFE56">
<table class="cellalignment5987" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter.">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6062" id="d81287e577">Parameter</th>
<th class="cellalignment6088" id="d81287e580">In/Out</th>
<th class="cellalignment6089" id="d81287e583">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e588" headers="d81287e577">
<pre dir="ltr">self
</pre></td>
<td class="cellalignment6090" headers="d81287e588 d81287e580">
<pre dir="ltr">IN OUT
</pre></td>
<td class="cellalignment6091" headers="d81287e588 d81287e583">
<p>The in-bound is the scan context set up by previous scan routine invocation; the outbound is the scan context to be passed to later scan routine invocations.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e598" headers="d81287e577">
<pre dir="ltr">nrows
</pre></td>
<td class="cellalignment6090" headers="d81287e598 d81287e580">
<pre dir="ltr">IN
</pre></td>
<td class="cellalignment6091" headers="d81287e598 d81287e583">
<p>The number of rows the system expects in the current fetch cycle. The method can ignore this value and return a different number of rows. If fewer rows are returned, the method is called again; if more rows are returned, they are processed in the next cycle.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e608" headers="d81287e577">
<pre dir="ltr">rws
</pre></td>
<td class="cellalignment6090" headers="d81287e608 d81287e580">
<pre dir="ltr">OUT
</pre></td>
<td class="cellalignment6091" headers="d81287e608 d81287e583">
<p>The next batch of rows from the table function. This is returned as an instance of the same collection type as the return type of the table function.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, <code class="codeph">ODCIConst.Error</code> otherwise.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ODCITableFetch</code> is invoked one or more times by Oracle to retrieve all the rows in the collection returned by the table function. The scan context is passed in as a parameter. Typically <code class="codeph">ODCITableFetch</code> uses the input scan context and computes the next set of rows to be returned to Oracle. In addition, it may update the scan context accordingly.</p>
</li>
<li>
<p>Returning more rows in each invocation of <code class="codeph">fetch()</code> reduces the number of fetch calls that must be made and thus improves performance.</p>
</li>
<li>
<p>Oracle calls <code class="codeph">ODCITableFetch</code> repeatedly until all rows in the table function&#39;s collection have been returned. When all rows have been returned, <code class="codeph">ODCITableFetch</code> should return a null collection.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5156"></a><a id="ADDCI5157"></a><a id="ADDCI5155"></a>
<div class="props_rev_3"><a id="GUID-6022AD7F-BDE5-4D42-B8F9-D2B18AB6AD84"></a>
<h3 id="ADDCI-GUID-6022AD7F-BDE5-4D42-B8F9-D2B18AB6AD84" class="sect3">ODCITablePrepare()</h3>
<div>
<div class="section">
<p>Prepares the scan context and other query information at compile time.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">STATIC FUNCTION ODCITablePrepare(
   sctx OUT &lt;imptype&gt;, 
   tf_info SYS.ODCITabFuncInfo,
   args);
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6022AD7F-BDE5-4D42-B8F9-D2B18AB6AD84__GUID-5B62584D-1B99-4C81-8DCE-FF5D85D6A16B">
<table class="cellalignment5987" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter.">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6062" id="d81287e727">Parameter</th>
<th class="cellalignment6088" id="d81287e730">In/Out</th>
<th class="cellalignment6089" id="d81287e733">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e738" headers="d81287e727">
<pre dir="ltr">sctx
</pre></td>
<td class="cellalignment6090" headers="d81287e738 d81287e730">
<pre dir="ltr">OUT
</pre></td>
<td class="cellalignment6091" headers="d81287e738 d81287e733">
<p>The scan context returned by this routine. This value is passed in as a parameter to the later scan routines. The scan context is an instance of the object type containing the implementation of the <code class="codeph">ODCITable</code> routines.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e751" headers="d81287e727">
<pre dir="ltr">tf_info
</pre></td>
<td class="cellalignment6090" headers="d81287e751 d81287e730">
<p>&emsp;</p>
</td>
<td class="cellalignment6091" headers="d81287e751 d81287e733">
<p>Contains the projection information and the return type&#39;s table descriptor object (TDO):</p>
<ul style="list-style-type: disc;">
<li>
<p>Attrs (<code class="codeph">SYS.ODCINumberList</code>): lists the positions of the referenced attributes of the table function&#39;s output collection type</p>
</li>
<li>
<p>RefType (<code class="codeph">SYS.AnyType</code>): for <code class="codeph">AnyDataSet</code> table functions, this is the actual return type expected to be returned in the <code class="codeph">AnyDataSet</code> collection.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e780" headers="d81287e727">
<pre dir="ltr">args
</pre></td>
<td class="cellalignment6090" headers="d81287e780 d81287e730">
<pre dir="ltr">IN
</pre></td>
<td class="cellalignment6091" headers="d81287e780 d81287e733">
<p>The arguments that are passed to the table function. This method is invoked at compile time; thus, only literal arguments have values. Column and expression arguments are passed as null values.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>This method prepares the scan context based on the information known at compile time. This scan context is passed to <code class="codeph">ODCITableStart</code> when it is called at the beginning of query execution.</p>
</li>
<li>
<p>If this optional method is implemented, <code class="codeph">ODCITableClose</code> is only called one time, at the end of query execution. Each time the table function is restarted, <code class="codeph">ODCITableStart</code> is called and passed the scan context. This allows the table function to maintain context between restarts, and to perform cleanup operations only one time at the end of query execution.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5159"></a><a id="ADDCI5160"></a><a id="ADDCI5161"></a><a id="ADDCI5158"></a>
<div class="props_rev_3"><a id="GUID-7C674A4F-7145-480E-883D-00C609B64DA0"></a>
<h3 id="ADDCI-GUID-7C674A4F-7145-480E-883D-00C609B64DA0" class="sect3">ODCITableStart()</h3>
<div>
<div class="section">
<p><code class="codeph">ODCITableStart</code> initializes the scan of a table function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">STATIC FUNCTION ODCITableStart(
   sctx IN OUT &lt;imptype&gt;, 
   &lt;args&gt;) 
RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-7C674A4F-7145-480E-883D-00C609B64DA0__GUID-E9378FB8-CE5D-4297-B279-744AD829BC86">
<table class="cellalignment5987" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter.">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6062" id="d81287e883">Parameter</th>
<th class="cellalignment6088" id="d81287e886">In/Out</th>
<th class="cellalignment6089" id="d81287e889">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e894" headers="d81287e883">
<pre dir="ltr">self
</pre></td>
<td class="cellalignment6090" headers="d81287e894 d81287e886">
<pre dir="ltr">IN OUT
</pre></td>
<td class="cellalignment6091" headers="d81287e894 d81287e889">
<p>The scan context returned by this routine. This value is passed in as a parameter to the later scan routines. The scan context is an instance of the object type containing the implementation of the <code class="codeph">ODCITable</code> routines. If <code class="codeph">ODCITablePrepare</code> is implemented, the scan context it creates is passed in to <code class="codeph">ODCITableStart</code>.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e913" headers="d81287e883">
<pre dir="ltr">args
</pre></td>
<td class="cellalignment6090" headers="d81287e913 d81287e886">
<pre dir="ltr">IN
</pre></td>
<td class="cellalignment6091" headers="d81287e913 d81287e889">
<p>Set of zero or more arguments specified by the user for the table function</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6063" id="d81287e923" headers="d81287e883">
<pre dir="ltr">rws
</pre></td>
<td class="cellalignment6090" headers="d81287e923 d81287e886">
<pre dir="ltr">OUT
</pre></td>
<td class="cellalignment6091" headers="d81287e923 d81287e889">
<p>The next batch of rows from the table function. This is returned as an instance of the same collection type as the return type of the table function.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, <code class="codeph">ODCIConst.Error</code> otherwise.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>If <code class="codeph">ODCITablePrepare</code> is not implemented, this is the first routine that is invoked to begin retrieving rows from a table function. This routine typically performs the setup needed for the scan. The scan context is created (as an object instance <code class="codeph">sctx</code>) and returned to Oracle. The arguments to the table function, specified by the user in the <code class="codeph">SELECT</code> statement, are passed in as parameters to this routine. If <code class="codeph">ODCITablePrepare</code> is implemented, it creates the scan context at compile time, and that scan context is passed in to this routine.</p>
</li>
<li>
<p>Any <code class="codeph">REF CURSOR</code> arguments of the table function must be declared as <code class="codeph">SYS_REFCURSOR</code> type in the declaration of the <code class="codeph">ODCITableStart</code> method.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5977">
<tr>
<td class="cellalignment5984">
<table class="cellalignment5982">
<tr>
<td class="cellalignment5981"><a href="ext_agg_ref.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5981"><a href="user_man_idx_apnd.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5986">
<table class="cellalignment5980">
<tr>
<td class="cellalignment5981"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5981"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5981"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5981"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5981"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5981"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>