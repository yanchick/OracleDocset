<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-6"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Extensible%20Indexing%20Interface"></a><title>Extensible Indexing Interface</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="dcterms.created" content="2017-06-09T01:57:02Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Data Cartridge Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E15882-06"/>
<meta name="dcterms.isVersionOf" content="ADDCI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ext_types_ref.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ext_opt_ref.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E15882-06.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-78B9066F-6262-447D-80C1-EFB39C6930F1"></a> <span id="PAGE" style="display:none;">28/33</span> <!-- End Header -->
<a id="ADDCI4200"></a>
<h1 id="ADDCI-GUID-78B9066F-6262-447D-80C1-EFB39C6930F1" class="sect1"><span class="enumeration_chapter">20</span> Extensible Indexing Interface</h1>
<div>
<p>Consider Oracle Data Cartridge Interface extensible indexing interfaces.</p>
</div>
<a id="ADDCI5024"></a><a id="ADDCI5023"></a>
<div class="props_rev_3"><a id="GUID-92129B1E-7A38-4EEF-AC21-6B5046F75E21"></a>
<h2 id="ADDCI-GUID-92129B1E-7A38-4EEF-AC21-6B5046F75E21" class="sect2">Extensible Indexing - System-Defined Interface Routines</h2>
<div>
<div class="section">
<p><a href="ext_idx_ref.htm#GUID-92129B1E-7A38-4EEF-AC21-6B5046F75E21__CHECCCID" title="This table describes the System-Defined Extensible Indexing Interface Routines. Column 1 lists the routine and column 2 describes the routine.">Table 19-1</a> summarizes the extensible indexing routines.</p>
<div class="infobox-note" id="GUID-92129B1E-7A38-4EEF-AC21-6B5046F75E21__GUID-F386806F-D66D-423D-8989-321112088E5F">
<p class="notep1">Caution:</p>
<p>These routines are invoked by Oracle at the appropriate times based on SQL statements executed by the end user. Do not invoke these routines directly as this may result in corruption of index data.</p>
</div>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-92129B1E-7A38-4EEF-AC21-6B5046F75E21__CHECCCID">
<p class="titleintable">Table 19-1 Summary of System-Defined Extensible Indexing Interface Routines</p>
<table class="cellalignment5987" title="Summary of System-Defined Extensible Indexing Interface Routines" summary="This table describes the System-Defined Extensible Indexing Interface Routines. Column 1 lists the routine and column 2 describes the routine.">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6064" id="d67227e123">Routine</th>
<th class="cellalignment6057" id="d67227e126">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e131" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-28AC1C1B-6B6B-446F-A6C9-EEF4A4842D5F">ODCIGetInterfaces()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e131 d67227e126">
<p>Invoked when an <code class="codeph">INDEXTYPE</code> is created by a <code class="codeph">CREATE</code> <code class="codeph">INDEXTYPE...</code> statement or is altered.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e149" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-9DB1D609-69C3-483B-AA77-087AD51A3A55">ODCIIndexAlter()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e149 d67227e126">
<p>Invoked when a domain index or a domain index partition is altered using an <code class="codeph">ALTER INDEX</code>, an <code class="codeph">ALTER INDEX PARTITION</code>, a <code class="codeph">TRUNCATE TABLE</code>, a <code class="codeph">RENAME TABLE</code>, an <code class="codeph">ALTER TABLE RENAME COLUMN</code>, or an <code class="codeph">ALTER TABLE [ADD|TRUNCATE|SPLIT|MERGE] PARTITION</code> statement.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e177" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-2F49CDE4-C064-4644-948C-BBF014FDD8C8">ODCIIndexClose()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e177 d67227e126">
<p>Invoked to end the processing of an operator.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e186" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e186 d67227e126">
<p>Invoked when a domain index is created by a <code class="codeph">CREATE INDEX...INDEXTYPE IS...PARAMETERS...</code> statement issued by the user.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e198" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-4B2E080D-FE8B-4598-9084-56FBE255196B">ODCIIndexDelete()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e198 d67227e126">
<p>Invoked when a row is deleted from a table that has a domain index defined on one or more of its columns.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e207" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-F128CB3B-6B3E-41C3-A623-67BCB5BC9292">ODCIIndexDrop()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e207 d67227e126">
<p>Invoked when a domain index is dropped explicitly using a <code class="codeph">DROP</code> <code class="codeph">INDEX</code> statement, or implicitly through a <code class="codeph">DROP</code> <code class="codeph">TABLE</code> or <code class="codeph">DROP</code> <code class="codeph">USER</code> statement.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e235" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-7914F874-620F-48F1-ADDC-040CC82D46ED">ODCIIndexExchangePartition()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e235 d67227e126">
<p>Invoked when an <code class="codeph">ALTER TABLE EXCHANGE PARTITION...INCLUDING INDEXES</code> is issued on a partitioned table on which a local domain index is defined.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e247" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-BB601420-A858-46E3-A9AC-3433220D4F82">ODCIIndexFetch()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e247 d67227e126">
<p>Invoked repeatedly to retrieve the rows satisfying the operator predicate.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e256" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-B4A15D4C-A136-494E-BA05-4E8DD776C118">ODCIIndexGetMetadata()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e256 d67227e126">
<p>Returns a series of strings of PL/SQL code that comprise the non-dictionary metadata associated with the index.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e265" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-EF42025B-6DE2-4F2A-90EF-62775EE0EED6">ODCIIndexInsert()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e265 d67227e126">
<p>Invoked when a row or a set of rows is inserted into a table that has a domain index defined on one or more of its columns.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e274" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-53F2321C-B0F8-4783-AC1B-056372A0C073">ODCIIndexStart()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e274 d67227e126">
<p>Invoked to start the evaluation of an operator on an indexed column.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e284" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-CB42E738-EFD1-4053-9DDF-BEF455F92815">ODCIIndexUpdate()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e284 d67227e126">
<p>Invoked when a row is updated in a table and the updated column has a domain index defined on.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e293" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-C2C4DB40-106A-491C-B241-985B69DC2FE1">ODCIIndexUpdPartMetadata()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e293 d67227e126">
<p>Invoked during partition maintenance operations. Patches the indextype metadata tables to correctly reflect the partition maintenance operation.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e302" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-246BE6AB-72DE-4549-9B92-20F2106DEBE2">ODCIIndexUtilCleanup()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e302 d67227e126">
<p>Cleans up temporary states created by <a href="ext_idx_ref.htm#GUID-8AE43690-9A7F-480E-A304-A28687197205">ODCIIndexUtilGetTableNames()</a>.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6065" id="d67227e315" headers="d67227e123">
<p><a href="ext_idx_ref.htm#GUID-8AE43690-9A7F-480E-A304-A28687197205">ODCIIndexUtilGetTableNames()</a></p>
</td>
<td class="cellalignment6059" headers="d67227e315 d67227e126">
<p>Determines if the secondary tables storing the index data should be transported.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="ADDCI5026"></a><a id="ADDCI5027"></a><a id="ADDCI5028"></a><a id="ADDCI5025"></a>
<div class="props_rev_3"><a id="GUID-28AC1C1B-6B6B-446F-A6C9-EEF4A4842D5F"></a>
<h3 id="ADDCI-GUID-28AC1C1B-6B6B-446F-A6C9-EEF4A4842D5F" class="sect3">ODCIGetInterfaces()</h3>
<div>
<div class="section">
<p>Invoked when an <code class="codeph">INDEXTYPE</code> is created by a <code class="codeph">CREATE</code> <code class="codeph">INDEXTYPE...</code> statement or is altered.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIGetInterfaces(
   ifclist OUT ODCIObjectList)
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-28AC1C1B-6B6B-446F-A6C9-EEF4A4842D5F__GUID-E72789A9-714F-4ED8-B51D-792E2F072103">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIGetInterfaces().">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e403">Parameter</th>
<th class="cellalignment6084" id="d67227e406">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e411" headers="d67227e403">
<pre dir="ltr">ifclist
</pre></td>
<td class="cellalignment6085" headers="d67227e411 d67227e406">
<p>Contains information about the interfaces it supports</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success or <code class="codeph">ODCIConst.Error</code> on error</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This function should be implemented as a static type method.</p>
<p>This function must return <code class="codeph">SYS.ODCIINDEX2</code> in the <code class="codeph">ODCIObjectList</code> if the indextype uses the second version of the <code class="codeph">ODCIIndex</code> interface.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5030"></a><a id="ADDCI5031"></a><a id="ADDCI5032"></a><a id="ADDCI5029"></a>
<div class="props_rev_3"><a id="GUID-9DB1D609-69C3-483B-AA77-087AD51A3A55"></a>
<h3 id="ADDCI-GUID-9DB1D609-69C3-483B-AA77-087AD51A3A55" class="sect3">ODCIIndexAlter()</h3>
<div>
<div class="section">
<p>Invoked when a domain index or a domain index partition is altered using one of the following methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ALTER INDEX</code></p>
</li>
<li>
<p><code class="codeph">ALTER INDEX PARTITION</code></p>
</li>
<li>
<p><code class="codeph">TRUNCATE TABLE</code> <span class="italic"><code class="codeph">table_name</code></span></p>
</li>
<li>
<p><code class="codeph">RENAME TABLE</code></p>
</li>
<li>
<p><code class="codeph">ALTER TABLE...[ADD|TRUNCATE|SPLIT|MERGE]...PARTITION</code></p>
</li>
<li>
<p><code class="codeph">ALTER TABLE RENAME</code></p>
</li>
<li>
<p><code class="codeph">ALTER TABLE RENAME COLUMN</code></p>
</li>
</ul>
<p>To populate the index partitions when creating local domain indexes, this method is invoked for each partition of the base table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">STATIC FUNCTION ODCIIndexAlter(
   ia ODCIIndexInfo, 
   parms IN OUT VARCHAR2, 
   alter_option NUMBER, 
   env ODCIEnv) 
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-9DB1D609-69C3-483B-AA77-087AD51A3A55__GUID-C2BBF227-7B2C-4ECA-BAD0-A8840659148E">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexAlter()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e550">Parameter</th>
<th class="cellalignment6084" id="d67227e553">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e558" headers="d67227e550">
<pre dir="ltr">ia
</pre></td>
<td class="cellalignment6085" headers="d67227e558 d67227e553">
<p>Contains information about the index and the indexed column</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e565" headers="d67227e550">
<pre dir="ltr">parms (IN)
</pre></td>
<td class="cellalignment6085" headers="d67227e565 d67227e553">
<p>Parameter string</p>
<ul style="list-style-type: disc;">
<li>
<p>With <code class="codeph">ALTER</code> <code class="codeph">INDEX</code> <code class="codeph">PARAMETERS</code> or <code class="codeph">ALTER</code> <code class="codeph">INDEX</code> <code class="codeph">REBUILD</code>, contains the user specified parameter string</p>
</li>
<li>
<p>With <code class="codeph">ALTER</code> <code class="codeph">INDEX</code> <code class="codeph">RENAME</code>, contains the new name of the domain index</p>
</li>
<li>
<p>With <code class="codeph">ALTER TABLE RENAME COLUMN</code>, contains the new domain-indexed column name</p>
</li>
<li>
<p>With <code class="codeph">ALTER TABLE RENAME or RENAME TABLE</code>, contains the new table name</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e619" headers="d67227e550">
<pre dir="ltr">parms (OUT)
</pre></td>
<td class="cellalignment6085" headers="d67227e619 d67227e553">
<p>Parameter string</p>
<p>Valid only with <code class="codeph">ALTER</code> <code class="codeph">INDEX</code> <code class="codeph">PARAMETERS</code> or <code class="codeph">ALTER</code> <code class="codeph">INDEX</code> <code class="codeph">REBUILD</code>; contains the resultant string to be stored in system catalogs</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e647" headers="d67227e550">
<pre dir="ltr">alter_option
</pre></td>
<td class="cellalignment6085" headers="d67227e647 d67227e553">
<p>Specifies one of the following options:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">AlterIndexNone</code> if <code class="codeph">ALTER INDEX [PARTITION] PARAMETERS</code></p>
</li>
<li>
<p><code class="codeph">AlterIndexRename</code> if <code class="codeph">ALTER INDEX RENAME [PARTITION]</code></p>
</li>
<li>
<p><code class="codeph">AlterIndexRebuild</code> if <code class="codeph">ALTER INDEX REBUILD [PARTITION] [PARAMETERS]</code></p>
</li>
<li>
<p><code class="codeph">AlterIndexRenameCol</code> if <code class="codeph">ALTER TABLE RENAME COLUMN</code></p>
</li>
<li>
<p><code class="codeph">AlterIndexRenameTab</code> if <code class="codeph">ALTER TABLE RENAME</code> or <code class="codeph">RENAME TABLE</code></p>
</li>
<li>
<p><code class="codeph">AlterIndexUpdBlockRefs</code> if <code class="codeph">ALTER TABLE UPDATE BLOCK REFERENCES</code></p>
</li>
<li>
<p><code class="codeph">AlterIndexMigrate</code> if <code class="codeph">ALTER INDEX COMPILE</code> when the domain index is user-managed, but its indextype is system-managed</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e708" headers="d67227e550">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e708 d67227e553">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, <code class="codeph">ODCIConst.Error</code> on error, or <code class="codeph">ODCIConst.Warning</code> otherwise. When invoked to rebuild local index partitions, may also return <code class="codeph">ODCIConst.ErrContinue</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>This function should be implemented as a static type method.</p>
</li>
<li>
<p>An <code class="codeph">ALTER</code> <code class="codeph">INDEX</code> statement can be invoked for domain indexes in multiple ways.</p>
<pre dir="ltr">ALTER INDEX <span class="italic">index_name</span>
PARAMETERS (<span class="italic">parms</span>);
</pre>
<p>or</p>
<pre dir="ltr">ALTER INDEX <span class="italic">index_name</span>
REBUILD PARAMETERS (<span class="italic">parms</span>);
</pre>
<p>The precise behavior in these two cases is defined by the implementation. One possibility is that the first statement would merely reorganize the index based on the parameters while the second would rebuild it from scratch.</p>
</li>
<li>
<p>The maximum length of the input parameters string is 1000 characters. The <code class="codeph">OUT</code> value of the <code class="codeph">parms</code> argument can be set to resultant parameters string to be stored in the system catalogs.</p>
</li>
<li>
<p>The <code class="codeph">ALTER</code> <code class="codeph">INDEX</code> statement can also be used to rename a domain index in the following way:</p>
<pre dir="ltr">ALTER INDEX <span class="italic">index_name</span>
RENAME TO <span class="italic">new_index_name</span>
</pre></li>
<li>
<p>When the name of the table on which a domain index is created changes, <code class="codeph">ODCIIndexAlter()</code> is invoked with <code class="codeph">alter_option=AlterIndexRenameTab</code>, and <span class="italic"><code class="codeph">new_table_name</code></span> is passed to the <code class="codeph">parms</code> argument:</p>
<pre dir="ltr">ALTER TABLE table_name 
RENAME <span class="italic">new_table_name</span>
</pre>
<p>or</p>
<pre dir="ltr">RENAME <span class="italic">table_name</span> 
TO <span class="italic">new_table_name</span>
</pre></li>
<li>
<p>When the name of the column on which a domain index is created changes, <code class="codeph">ODCIIndexAlter()</code> is invoked with <code class="codeph">alter_option=AlterIndexRenameCol</code>, and <span class="italic"><code class="codeph">new_column_name</code></span> is passed to the <code class="codeph">parms</code> argument:</p>
<pre dir="ltr">ALTER TABLE table_name 
RENAME COLUMN <span class="italic">column_name</span> 
TO <span class="italic">new_column_name</span>
</pre></li>
<li>
<p>If the <code class="codeph">PARALLEL</code> clause is omitted, then the domain index or local domain index partition is rebuilt sequentially.</p>
</li>
<li>
<p>If the <code class="codeph">PARALLEL</code> clause is specified, the parallel degree is passed to the <code class="codeph">ODCIIndexAlter()</code> invocation in the <code class="codeph">IndexParaDegree</code> attribute of <code class="codeph">ODCIIndexInfo</code>, and the <code class="codeph">Parallel</code> bit of the <code class="codeph">IndexInfoFlags</code> attribute is set. The parallel degree is determined as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>If <code class="codeph">PARALLEL DEGREE</code> <span class="italic">deg</span> is specified, <span class="italic">deg</span> is passed.</p>
</li>
<li>
<p>If only <code class="codeph">PARALLEL</code> is specified, then a constant is passed to indicate that the default degree of parallelism was specified.</p>
</li>
</ul>
</li>
<li>
<p>If the <code class="codeph">ODCIIndexAlter</code> routine returns with the <code class="codeph">ODCIConst</code>.<code class="codeph">Success</code>, the index is valid and usable. If the <code class="codeph">ODCIIndexAlter()</code> routine returns with <code class="codeph">ODCIConst</code>.<code class="codeph">Warning</code>, the index is valid and usable but a warning message is returned to the user. If <code class="codeph">ODCIIndexAlter()</code> returns with an error (or exception), the domain index is marked <code class="codeph">FAILED</code>.</p>
</li>
<li>
<p>When the <code class="codeph">ODCIIndexAlter()</code> routine is being executed, the domain index is marked <code class="codeph">LOADING</code>.</p>
</li>
<li>
<p>Every SQL statement executed by <code class="codeph">ODCIIndexAlter()</code> is treated as an independent operation. The changes made by <code class="codeph">ODCIIndexCreate()</code> are not guaranteed to be atomic.</p>
</li>
<li>
<p>The <code class="codeph">AlterIndexUpdBlockRefs</code> alter option applies only to domain indexes on index-organized tables. When the end user executes an <code class="codeph">ALTER INDEX</code> <span class="italic"><code class="codeph">domain_index</code></span> <code class="codeph">UPDATE BLOCK REFERENCES</code>, <code class="codeph">ODCIIndexAlter()</code> is called with the <code class="codeph">AlterIndexUpdBlockRefs</code> bit set to give the cartridge developer the opportunity to update guesses as to the block locations of rows, stored in logical rowids.</p>
</li>
<li>
<p>The <code class="codeph">AlterIndexMigrate</code> alter options applies only to migration of user-managed domain indexes to system-managed domain indexes. When the user-managed domain index is marked <code class="codeph">INVALID</code>, but its indextype is system-managed, you must make an <code class="codeph">ALTER INDEX</code> <span class="italic"><code class="codeph">domain_index</code></span> <code class="codeph">COMPILE</code> call to re-validate the domain index. This calls the <code class="codeph">ODCIIndexAlter()</code> method with <code class="codeph">alter_option=AlterIndexMigrate</code>, to allow an opportunity to migrate the domain index to the system-managed approach.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-9DB1D609-69C3-483B-AA77-087AD51A3A55__GUID-F954FA50-E009-4F6E-A7AE-2446F898F1B3">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ext_idx_ref.htm#GUID-9DB1D609-69C3-483B-AA77-087AD51A3A55">ODCIIndexAlter()</a></p>
</li>
<li>
<p><a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5034"></a><a id="ADDCI5035"></a><a id="ADDCI5036"></a><a id="ADDCI5033"></a>
<div class="props_rev_3"><a id="GUID-2F49CDE4-C064-4644-948C-BBF014FDD8C8"></a>
<h3 id="ADDCI-GUID-2F49CDE4-C064-4644-948C-BBF014FDD8C8" class="sect3">ODCIIndexClose()</h3>
<div>
<div class="section">
<p>Invoked to end the processing of an operator.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexClose(
   self IN <span class="italic">impltype</span>, 
   env ODCIEnv) 
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-2F49CDE4-C064-4644-948C-BBF014FDD8C8__GUID-79B39F5E-6BFE-42F5-BBCC-97AB137633B7">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexClose()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e1079">Parameter</th>
<th class="cellalignment6084" id="d67227e1082">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1087" headers="d67227e1079">
<pre dir="ltr">self(IN)
</pre></td>
<td class="cellalignment6085" headers="d67227e1087 d67227e1082">
<p>Is the value of the context returned by the previous invocation of <a href="ext_idx_ref.htm#GUID-BB601420-A858-46E3-A9AC-3433220D4F82">ODCIIndexFetch()</a></p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1097" headers="d67227e1079">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e1097 d67227e1082">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ODCIConst.Success</code> on success</p>
</li>
<li>
<p><code class="codeph">ODCIConst.Error</code> on error</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The index implementor can perform any appropriate actions to finish up the processing of an domain index scan, such as freeing memory and other resources.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5038"></a><a id="ADDCI5039"></a><a id="ADDCI5040"></a><a id="ADDCI5037"></a>
<div class="props_rev_3"><a id="GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C"></a>
<h3 id="ADDCI-GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C" class="sect3">ODCIIndexCreate()</h3>
<div>
<div class="section">
<p>Invoked when a domain index is created by a <code class="codeph">CREATE INDEX...INDEXTYPE IS...PARAMETERS...</code> statement issued by the user. The domain index can be either a non-partitioned index or a local partitioned domain index. The local partitioned domain index can be created in either a system- or a user-managed scheme.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexCreate(
   ia ODCIIndexInfo, 
   parms VARCHAR2, 
   env ODCIEnv)
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C__GUID-5113BD77-8E45-4B5D-B8BA-0E8C21E083AA">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexCreate()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e1198">Parameter</th>
<th class="cellalignment6084" id="d67227e1201">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1206" headers="d67227e1198">
<pre dir="ltr">ia
</pre></td>
<td class="cellalignment6085" headers="d67227e1206 d67227e1201">
<p>Contains information about the index and the indexed column</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1213" headers="d67227e1198">
<pre dir="ltr">parms
</pre></td>
<td class="cellalignment6085" headers="d67227e1213 d67227e1201">
<p>The <code class="codeph">PARAMETERS</code> string passed in not interpreted by Oracle. The maximum size of the parameter string is <code class="codeph">1,000</code> characters.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1226" headers="d67227e1198">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e1226 d67227e1201">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> , <code class="codeph">ODCIConst.Error</code>, <code class="codeph">ODCIConst.Warning</code>, <code class="codeph">ODCIConst.ErrContinue</code> if the method is invoked at the partition level for creation of a local partitioned index, to continue to the next partition even in case of an error, or <code class="codeph">ODCIConst.Fatal</code> to signify that all dictionary entries for the index are cleaned up and that the <code class="codeph">CREATE INDEX</code> operation is rolled back. Returning this status code assumes that the cartridge code has not created any objects (or cleaned up any objects created).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>This function should be implemented as a <code class="codeph">STATIC</code> type method.</p>
</li>
<li>
<p>Creates objects (such as tables) to store the index data, generate the index data, and store the data in the index data tables.</p>
</li>
<li>
<p>This procedure should handle creation of indexes on both empty and non-empty tables. If the base table is not empty, the procedure can scan the entire table and generate index data.</p>
</li>
<li>
<p>When the <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> routine is running, the domain index is marked <code class="codeph">LOADING</code>.</p>
</li>
<li>
<p>Every SQL statement executed by <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> is treated as an independent operation. The changes made by <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> are not guaranteed to be atomic.</p>
</li>
<li>
<p>To create a non-partitioned domain index, the <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> method is invoked, and the only valid return codes are <code class="codeph">ODCIConst.Success</code>, <code class="codeph">ODCIConst.Warning</code>, <code class="codeph">ODCIConst.Error</code>, or <code class="codeph">ODCIConst.Fatal</code>. If the operation returns <code class="codeph">ODCIConst.Fatal</code>, the <code class="codeph">CREATE INDEX</code> statement is rolled back by the server.</p>
</li>
<li>
<p>In a non-partitioned domain index, the <code class="codeph">IndexPartition</code>, <code class="codeph">TablePartition</code> name, and the <code class="codeph">callProperty</code> should be <code class="codeph">NULL</code>.</p>
</li>
<li>
<p>For a non-partitioned domain index, the parallel degree is passed to the <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> invocation in the <code class="codeph">IndexParaDegree</code> attribute of <code class="codeph">ODCIIndexInfo</code>, and the <code class="codeph">Parallel</code> bit of the <code class="codeph">IndexInfoFlags</code> is set. The parallel degree is determined as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>If <code class="codeph">PARALLEL DEGREE</code> <span class="italic"><code class="codeph">deg</code></span> is specified, <span class="italic"><code class="codeph">deg</code></span> is passed.</p>
</li>
<li>
<p>If only <code class="codeph">PARALLEL</code> is specified, then a constant indicating that the default degree of parallelism was specified, is passed.</p>
</li>
<li>
<p>If the <code class="codeph">PARALLEL</code> clause is omitted entirely, the operation is performed sequentially.</p>
</li>
</ul>
</li>
<li>
<p>If the <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> routine returns with the <code class="codeph">ODCIConst</code>.<code class="codeph">Success</code>, the index is valid and usable. If the <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> routine returns with <code class="codeph">ODCIConst</code>.<code class="codeph">Warning</code>, the index is valid and usable but a warning message is returned to the user. If the <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> routine returns with an <code class="codeph">ODCIConst</code>.<code class="codeph">Error</code> (or exception), the domain index is marked <code class="codeph">FAILED.</code></p>
</li>
<li>
<p>The only operations permitted on <code class="codeph">FAILED</code> domain indexes is <code class="codeph">DROP</code> <code class="codeph">INDEX</code>, <code class="codeph">TRUNCATE</code> <code class="codeph">TABLE</code> or <code class="codeph">ALTER</code> <code class="codeph">INDEX</code> <code class="codeph">REBUILD</code>.</p>
</li>
<li>
<p>If a domain index is created on an column of object type which contains a <code class="codeph">REF</code> attribute, do not dereference the <code class="codeph">REF</code>s while building your index. Dereferencing a <code class="codeph">REF</code> fetches data from a different table instance. If the data in the other table is modified, the domain index becomes incorrect. Note that the user is not notified.</p>
</li>
<li>
<p>The <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> method is invoked twice for the creation of system managed local domain indexes and the only valid return codes are <code class="codeph">ODCIConst.Success</code>, <code class="codeph">ODCIConst.Warning</code> or <code class="codeph">ODCIConst.Error</code>. <code class="codeph">ODCIConst.Fatal</code> can be returned by the first call and results in the <code class="codeph">CREATE INDEX</code> statement being rolled back by the server. The number of partitions is passed in as an argument <code class="codeph">ODCIIndexInfo.IndexPartitionTotal</code>. The first call should create all the index storage tables. All the index storage tables should preferably be system partitioned to get the benefits of local domain indexes. Also:</p>
<ul style="list-style-type: disc;">
<li>
<p>These tables must have the same number of partitions as the base table</p>
</li>
<li>
<p>The users should generate the create table statement with both object and partition level attributes</p>
</li>
</ul>
</li>
<li>
<p>Note that the object level create routine only passes in the object level parameter string. However, to construct the storage attributes for all the partitions, it needs the partition level parameter strings. The cartridge indexing code must obtain them by querying the <code class="codeph">*_ind_partitions</code> views on the dictionary tables. The system partitioned tables should not be populated in this phase. The user should wait for the subsequent calls <a href="ext_idx_ref.htm#GUID-9DB1D609-69C3-483B-AA77-087AD51A3A55">ODCIIndexAlter()</a> to populate the partitions. Also, it is recommended that the users should derive the names of the storage tables and its partitions from the index name and the index partition names. In this case, the user should fetch the index partition names from the <code class="codeph">*_ind_partitions</code> view and construct the partition names for the storage table.</p>
</li>
<li>
<p>In the second <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> call, the user can create domain index storage table dependent objects, such as indexes, constraints, and triggers. These can be created as before by directly using the SQL callbacks. However, for system partitioned storage tables, the following types of indexes are disallowed:</p>
<ul style="list-style-type: disc;">
<li>
<p>non-partitioned index</p>
</li>
<li>
<p>globally partitioned index</p>
</li>
</ul>
</li>
<li>
<p>Sequence numbers and synonyms can be created using callbacks and they are assumed to be partition-independent. The set of objects created for non-partitioned domain index is identical to that of a local partitioned index and these objects are not impacted when a table or partition maintenance operation is done. It is the users responsibility to drop these objects when the index is dropped.</p>
</li>
<li>
<p>Other (transient) objects needed for temporary use can be created using callbacks as before. It is the responsibility of user-supplied code to drop them by the end of the create call.</p>
</li>
<li>
<p>Temporary tables can be created for holding intermediate data. The server does not perform maintenance operations on these tables.</p>
</li>
<li>
<p>External Objects, such as files, can be created for temporary use.</p>
</li>
<li>
<p>All the tables left after the invocation of <a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a> or <a href="ext_idx_ref.htm#GUID-9DB1D609-69C3-483B-AA77-087AD51A3A55">ODCIIndexAlter()</a> are supposed to be system-managed, and the server takes appropriate actions on them during drop, truncate, or the partition maintenance operations.</p>
</li>
<li>
<p>Since this routine handles multiple things, such as creation of a non-partitioned index or creation of a local index, you must take special care to code it appropriately.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5042"></a><a id="ADDCI5043"></a><a id="ADDCI5044"></a><a id="ADDCI5041"></a>
<div class="props_rev_3"><a id="GUID-4B2E080D-FE8B-4598-9084-56FBE255196B"></a>
<h3 id="ADDCI-GUID-4B2E080D-FE8B-4598-9084-56FBE255196B" class="sect3">ODCIIndexDelete()</h3>
<div>
<div class="section">
<p>Invoked when a row is deleted from a table that has a domain index defined on one or more of its columns.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexDelete(
   ia ODCIIndexInfo, 
   rid VARCHAR2, 
   oldval <span class="italic">icoltype</span>, 
   env ODCIEnv) 
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-4B2E080D-FE8B-4598-9084-56FBE255196B__GUID-5CBFB613-7768-4B6D-A9EC-146EDBF2B9D5">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexDelete()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e1616">Parameter</th>
<th class="cellalignment6084" id="d67227e1619">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1624" headers="d67227e1616">
<pre dir="ltr">ia
</pre></td>
<td class="cellalignment6085" headers="d67227e1624 d67227e1619">
<p>Contains information about the index and the indexed column</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1631" headers="d67227e1616">
<pre dir="ltr">rid
</pre></td>
<td class="cellalignment6085" headers="d67227e1631 d67227e1619">
<p>The row identifier of the deleted row</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1638" headers="d67227e1616">
<pre dir="ltr">oldval
</pre></td>
<td class="cellalignment6085" headers="d67227e1638 d67227e1619">
<p>The value of the indexed column in the deleted row. The data type is identical to that of the indexed column.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1645" headers="d67227e1616">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e1645 d67227e1619">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, or <code class="codeph">ODCIConst.Error</code> on error.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>This function should be implemented as a <code class="codeph">STATIC</code> type method.</p>
</li>
<li>
<p>This method should delete index data corresponding to the deleted row from the appropriate tables or files storing index data.</p>
</li>
<li>
<p>Note that the index partition object identifier <code class="codeph">ODCIIndexInfo.IndexPartitionIden</code> and the base table partition physical identifier <code class="codeph">ODCIIndexInfo.IndexCols(1).TablePartitionIden</code> is passed in for local domain index. The indextype must use the new DML syntax using the partition number and the provided <code class="codeph">DATAOBJ_TO_MAT_PARTITION</code> function to delete data from the storage system partitioned table:</p>
<pre dir="ltr">DELETE FROM SP PARTITION (
   DATAOBJ_TO_MAT_PARTITION(
       base_table_name,
      :tab_physical_partid))
   VALUES(&hellip;) 
   WHERE rowid = :rowid;
</pre></li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5046"></a><a id="ADDCI5047"></a><a id="ADDCI5048"></a><a id="ADDCI5045"></a>
<div class="props_rev_3"><a id="GUID-F128CB3B-6B3E-41C3-A623-67BCB5BC9292"></a>
<h3 id="ADDCI-GUID-F128CB3B-6B3E-41C3-A623-67BCB5BC9292" class="sect3">ODCIIndexDrop()</h3>
<div>
<div class="section">
<p>The <code class="codeph">ODCIIndexDrop()</code> procedure is invoked when a domain index is dropped explicitly using a <code class="codeph">DROP</code> <code class="codeph">INDEX</code> statement, or implicitly through a <code class="codeph">DROP</code> <code class="codeph">TABLE</code> or <code class="codeph">DROP</code> <code class="codeph">USER</code> statement.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexDrop(
   ia ODCIIndexInfo, 
   env ODCIEnv) 
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-F128CB3B-6B3E-41C3-A623-67BCB5BC9292__GUID-B464FEEB-D202-41BF-A1E7-6D38FCDE89FF">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexDrop()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e1784">Parameter</th>
<th class="cellalignment6084" id="d67227e1787">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1792" headers="d67227e1784">
<pre dir="ltr">ia
</pre></td>
<td class="cellalignment6085" headers="d67227e1792 d67227e1787">
<p>Contains information about the index and the indexed column</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1799" headers="d67227e1784">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e1799 d67227e1787">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, or <code class="codeph">ODCIConst.Error</code> on error, or <code class="codeph">ODCIConst.Warning</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>This method should be implemented as a static type method.</p>
</li>
<li>
<p>This method should drop the tables storing the domain index data.</p>
</li>
<li>
<p>For both a non-partitioned domain index and system managed local domain index, the <code class="codeph">ODCIIndexDrop()</code> method is invoked only one time. The user need not drop the index storage tables if the system-managed approach is used. This is done automatically by the kernel after the call is completed.</p>
</li>
<li>
<p>Since it is possible that the domain index is marked <code class="codeph">FAILED</code> (due to abnormal termination of some DDL routine), the <code class="codeph">ODCIIndexDrop()</code> routine should be capable of cleaning up partially created domain indexes. When the <code class="codeph">ODCIIndexDrop()</code> routine is being executed, the domain index is marked <code class="codeph">LOADING</code>.</p>
</li>
<li>
<p>Note that if the <code class="codeph">ODCIIndexDrop()</code> routine returns with an <code class="codeph">ODCIConst.Error</code> or exception, the <code class="codeph">DROP</code> <code class="codeph">INDEX</code> statement fails and the index is marked <code class="codeph">FAILED</code>. In that case, there is no mechanism to get rid of the domain index except by using the <code class="codeph">FORCE</code> option. If the <code class="codeph">ODCIIndexDrop()</code> routine returns with <code class="codeph">ODCIConst</code>.<code class="codeph">Warning</code> in the case of an explicit <code class="codeph">DROP</code> <code class="codeph">INDEX</code> statement, the operation succeeds but a warning message is returned to the user.</p>
</li>
<li>
<p>Every SQL statement executed by <code class="codeph">ODCIIndexDrop()</code> is treated as an independent operation. The changes made by <code class="codeph">ODCIIndexDrop()</code> are not guaranteed to be atomic.</p>
</li>
<li>
<p>For both a non-partitioned domain index and system managed local domain index, the <code class="codeph">ODCIIndexDrop()</code> method is invoked only one time. With the system-managed approach, the index storage tables don&#39;t have to be dropped. This is done automatically by the kernel after the call is completed.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-F128CB3B-6B3E-41C3-A623-67BCB5BC9292__GUID-9FB2891C-ED4B-4E81-9F28-C67063E6529F">
<p class="notep1">See Also:</p>
<p><a href="ext_idx_ref.htm#GUID-F128CB3B-6B3E-41C3-A623-67BCB5BC9292">ODCIIndexDrop()</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5050"></a><a id="ADDCI5051"></a><a id="ADDCI5052"></a><a id="ADDCI5049"></a>
<div class="props_rev_3"><a id="GUID-7914F874-620F-48F1-ADDC-040CC82D46ED"></a>
<h3 id="ADDCI-GUID-7914F874-620F-48F1-ADDC-040CC82D46ED" class="sect3">ODCIIndexExchangePartition()</h3>
<div>
<div class="section">
<p>This method is invoked when an <code class="codeph">ALTER TABLE EXCHANGE PARTITION...INCLUDING INDEXES</code> command is issued on a partitioned table that has a defined local domain index.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexExchangePartition( 
   ia ODCIIndexInfo, 
   ia1 ODCIIndexInfo, 
   env ODCIEnv) 
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-7914F874-620F-48F1-ADDC-040CC82D46ED__GUID-6B26C2C9-FEDD-4A27-A5F0-9657A8645CDB">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexExchangePartition()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e1981">Parameter</th>
<th class="cellalignment6084" id="d67227e1984">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1989" headers="d67227e1981">
<p>ia</p>
</td>
<td class="cellalignment6085" headers="d67227e1989 d67227e1984">
<p>Contains information about the domain index partition to exchange.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e1996" headers="d67227e1981">
<p>ia1</p>
</td>
<td class="cellalignment6085" headers="d67227e1996 d67227e1984">
<p>Contains information about the non-partitioned domain index.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2003" headers="d67227e1981">
<p>env</p>
</td>
<td class="cellalignment6085" headers="d67227e2003 d67227e1984">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, or <code class="codeph">ODCIConst.Error</code> on error, or <code class="codeph">ODCIConst.Warning</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>The function should be implemented as a <code class="codeph">STATIC</code> type method.</p>
</li>
<li>
<p>This method should handle both converting a partition of a domain index into a non-partitioned domain index and converting a non-partitioned index to a partition of a partitioned domain index.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5054"></a><a id="ADDCI5055"></a><a id="ADDCI5056"></a><a id="ADDCI5053"></a>
<div class="props_rev_3"><a id="GUID-BB601420-A858-46E3-A9AC-3433220D4F82"></a>
<h3 id="ADDCI-GUID-BB601420-A858-46E3-A9AC-3433220D4F82" class="sect3">ODCIIndexFetch()</h3>
<div>
<div class="section">
<p>This procedure is invoked repeatedly to retrieve the rows satisfying the operator predicate.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexFetch(
   self IN [OUT] <span class="italic">impltype</span>, 
   nrows IN NUMBER, 
   rids OUT ODCIRidList, 
   env ODCIEnv) 
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-BB601420-A858-46E3-A9AC-3433220D4F82__GUID-EEF25433-6287-49DA-9A99-C102FB00EE5E">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexFetch()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e2111">Parameter</th>
<th class="cellalignment6084" id="d67227e2114">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2119" headers="d67227e2111">
<pre dir="ltr">self(IN)
</pre></td>
<td class="cellalignment6085" headers="d67227e2119 d67227e2114">
<p>Is the value of the context returned by the previous call (to <code class="codeph">ODCIIndexFetch</code> or to <code class="codeph">ODCIIndexStart()</code> if this is the first time fetch is being called for this operator instance</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2133" headers="d67227e2111">
<pre dir="ltr">self(OUT)
</pre></td>
<td class="cellalignment6085" headers="d67227e2133 d67227e2114">
<p>The context that is passed to the next query-time call. Note that this parameter does not have to be defined as <code class="codeph">OUT</code> if the value is not modified in this routine.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2144" headers="d67227e2111">
<pre dir="ltr">nrows
</pre></td>
<td class="cellalignment6085" headers="d67227e2144 d67227e2114">
<p>Is the maximum number of result rows that can be returned to Oracle in this call</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2152" headers="d67227e2111">
<pre dir="ltr">rids
</pre></td>
<td class="cellalignment6085" headers="d67227e2152 d67227e2114">
<p>Is the array of row identifiers for the result rows being returned by this call</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2160" headers="d67227e2111">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e2160 d67227e2114">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, or <code class="codeph">ODCIConst.Error</code> on error.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ODCIIndexFetch()</code> returns rows satisfying the operator predicate. That is, it returns the row identifiers of all the rows for which the operator return value falls within the specified bounds.</p>
</li>
<li>
<p>Each call to <code class="codeph">ODCIIndexFetch()</code> can return a maximum of <span class="italic">nrows</span> number of rows. The value of <span class="italic">nrows</span> passed in is decided by Oracle based on some internal factors. However, the <code class="codeph">ODCIIndexFetch()</code> routine can return lesser than <span class="italic">nrows</span> number of rows. The row identifiers are returned through the output <code class="codeph">rids</code> array. A <code class="codeph">NULL</code> <code class="codeph">ROWID</code> (as an element of the <code class="codeph">rids</code> array) indicates that all satisfying rows have been returned.</p>
<p>Assume that there are <code class="codeph">3000</code> rows which satisfy the operator predicate, and that the value of <code class="codeph">nrows</code> <code class="codeph">= 2000</code>. The first invocation of <code class="codeph">ODCIIndexFetch()</code> can return the first <code class="codeph">2000</code> rows. The second invocation can return a <code class="codeph">rid</code> list consisting of the remaining <code class="codeph">1000</code> rows followed by a <code class="codeph">NULL</code> element. The <code class="codeph">NULL</code> value in <code class="codeph">rid</code> list indicates that all satisfying rows have now been returned.</p>
</li>
<li>
<p>If the context value is changed within this call, the new value is passed in to subsequent query-time calls.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-BB601420-A858-46E3-A9AC-3433220D4F82__GUID-2D7B2653-C8B4-4344-AF4B-AC2DCE581DA4">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ext_idx_ref.htm#GUID-BB601420-A858-46E3-A9AC-3433220D4F82">ODCIIndexFetch()</a></p>
</li>
<li>
<p><a href="ext_idx_ref.htm#GUID-53F2321C-B0F8-4783-AC1B-056372A0C073">ODCIIndexStart()</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5058"></a><a id="ADDCI5059"></a><a id="ADDCI5060"></a><a id="ADDCI5061"></a><a id="ADDCI5057"></a>
<div class="props_rev_3"><a id="GUID-B4A15D4C-A136-494E-BA05-4E8DD776C118"></a>
<h3 id="ADDCI-GUID-B4A15D4C-A136-494E-BA05-4E8DD776C118" class="sect3">ODCIIndexGetMetadata()</h3>
<div>
<div class="section">
<p>Returns a series of strings of PL/SQL code that comprise the non-dictionary metadata associated with the index in <code class="codeph">ia</code>. The routine can pass whatever information is required at import time. For example, policy, version, preferences, and so on. This method is optional unless implementation-specific metadata is required.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexGetMetadata(
   ia IN ODCIIndexInfo, 
   version IN VARCHAR2, 
   new_block OUT PLS_INTEGER,
   env ODCIEnv) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-B4A15D4C-A136-494E-BA05-4E8DD776C118__GUID-27DF1F03-71C0-475C-8C57-83C2B62DA4AF">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexGetMetadata()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e2341">Parameter</th>
<th class="cellalignment6084" id="d67227e2344">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2349" headers="d67227e2341">
<pre dir="ltr">ia
</pre></td>
<td class="cellalignment6085" headers="d67227e2349 d67227e2344">
<p>Specifies the index on which export is currently working</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2357" headers="d67227e2341">
<pre dir="ltr">version
</pre></td>
<td class="cellalignment6085" headers="d67227e2357 d67227e2344">
<p>Version of export making the call in the form <code class="codeph">11.2.0.1.00</code></p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2366" headers="d67227e2341">
<pre dir="ltr">new_block
</pre></td>
<td class="cellalignment6085" headers="d67227e2366 d67227e2344">
<p>Non-zero (<code class="codeph">TRUE</code>): Returned string starts a new PL/SQL block. Export terminates the current block (if any) with <code class="codeph">END</code>; and open a new block with <code class="codeph">BEGIN</code> before writing strings to the dump file. The routine is called again.</p>
<p><code class="codeph">0</code> (<code class="codeph">FALSE</code>): Returned string continues current block. Export writes only the returned string to the dump file then calls the routine again.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2390" headers="d67227e2341">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e2390 d67227e2344">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>A null-terminated string containing a piece of an opaque block of PL/SQL code</p>
</li>
<li>
<p>A zero-length string indicates no more data; export stops calling the routine</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>This function should be implemented as a static type method.</p>
</li>
<li>
<p>The routine is called repeatedly until the return string length is 0. If an index has no metadata to be exported using PL/SQL, it should return an empty string upon first call.</p>
</li>
<li>
<p>This routine can be used to build one or more blocks of anonymous PL/SQL code for execution by import. Each returned block is invoked independently by import. That is, if a block fails for any reason at import time, subsequent blocks are still invoked. Therefore any dependent code should be incorporated within a single block. The size of an individual block of PL/SQL code is limited only by the size of import&#39;s read buffer controlled by its <code class="codeph">BUFFER</code> parameter.</p>
</li>
<li>
<p>The execution of these PL/SQL blocks at import time is considered part of the associated domain index&#39;s creation. Therefore, their execution is dependent upon the successful import of the index&#39;s underlying base table and user&#39;s setting of import&#39;s <code class="codeph">INDEXES=Y/N</code> parameter, as is the creation of the index.</p>
</li>
<li>
<p>The routine should not pass back the <code class="codeph">BEGIN</code>/<code class="codeph">END</code> strings that open and close the individual blocks of PL/SQL code; export adds these to mark the individual units of execution.</p>
</li>
<li>
<p>The parameter <code class="codeph">version</code> is the version number of the currently executing export client. Since export and import can be used to downgrade a database to the previous functional point release, it also represents the minimum server version you can expect to find at import time; it may be higher, but never lower.</p>
</li>
<li>
<p>The cartridge developer can use this information to determine what version of information should be written to the dump file. For example, assume the current server version is <code class="codeph">11.2.0.1.0</code>, but the export version handed in is <code class="codeph">11.1.0.1.0</code>. If a cartridge&#39;s metadata changed formats these version, it would know to write the data to the dump file in 11.1 format, anticipating an import into an 11.2 system.</p>
</li>
<li>
<p>The data contained within the strings handed back to export must be completely platform-independent. That is, they should contain no binary information that may reflect the endian nature of the export platform, which may be different from the import platform. Binary information may be passed as hex strings and converted through <code class="codeph">RAWTOHEX</code> and <code class="codeph">HEXTORAW</code>.</p>
</li>
<li>
<p>The strings are translated from the export server to export client character set and are written to the dump file as such. At import time, they are translated from export client character set to import client character set, then from import client char set to import server character set when handed over the UPI interface.</p>
</li>
<li>
<p>Specifying a target schema in the execution of any of the PL/SQL blocks must be avoided because it frequently causes an error if you use import&#39;s <code class="codeph">FROMUSER</code> -&gt; <code class="codeph">TOUSER</code> schema replication feature. For example, a procedure prototype such as:</p>
<pre dir="ltr">PROCEDURE AQ_CREATE ( schema IN VARCHAR2, que_name IN VARCHAR2) ...
</pre>
<p>should be avoided because it fails if you have remapped schema A to schema B on import. You can assume at import time that you are connected to the target schema.</p>
</li>
<li>
<p>Export dump files from a particular version must be importable into all future versions. This means that all PL/SQL routines invoked within the anonymous PL/SQL blocks written to the dump file must be supported for all time. You may wish to encode some version information to assist with detecting when conversion may be required.</p>
</li>
<li>
<p>Export operates in a read-only transaction if its parameter <code class="codeph">CONSISTENT=Y</code>. In this case, no writes are allowed from the export session. Therefore, this method must not write any database state.</p>
</li>
<li>
<p>You can attempt to import the same dump file multiple times, especially when using import&#39;s <code class="codeph">IGNORE=Y</code> parameter. Therefore, this method must produce PL/SQL code that is idempotent, or at least deterministic when executed multiple times.</p>
</li>
<li>
<p>Case on database object names must be preserved; that is, objects named &#39;<code class="codeph">Foo</code>&#39; and &#39;<code class="codeph">FOO</code>&#39; are distinct objects. Database object names should be enclosed within double quotes (&#34;&#34;) to preserve case.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Error Handling</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Any unrecoverable error should raise an exception allowing it to propagate back to <code class="codeph">get_domain_index_metadata</code> and thence back to export. This causes export to terminate the creation of the current index&#39;s DDL in the dump file and to move on to the next index.</p>
<p>At import time, failure of the execution of any metadata PL/SQL block causes the associated index not to be created under the assumption that the metadata creation is an integral part of the index creation.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5062"></a><a id="ADDCI5063"></a><a id="ADDCI025"></a>
<div class="props_rev_3"><a id="GUID-EF42025B-6DE2-4F2A-90EF-62775EE0EED6"></a>
<h3 id="ADDCI-GUID-EF42025B-6DE2-4F2A-90EF-62775EE0EED6" class="sect3">ODCIIndexInsert()</h3>
<div>
<div class="section">
<p>Invoked when a row or a set of rows is inserted into a table that has a domain index defined on one or more of its columns.</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-EF42025B-6DE2-4F2A-90EF-62775EE0EED6__GUID-7F28508B-C90E-4C25-A070-1DEDDABD22E6">
<table class="cellalignment5987" summary="Syntax versions and their purpose">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6086" id="d67227e2579">Syntax</th>
<th class="cellalignment6035" id="d67227e2582">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6087" id="d67227e2587" headers="d67227e2579">
<pre dir="ltr">FUNCTION ODCIIndexInsert(
   ia ODCIIndexInfo, 
   rid VARCHAR2, 
   newval <span class="italic">icoltype</span>, 
   env ODCIEnv) 
RETURN NUMBER
</pre></td>
<td class="cellalignment6037" headers="d67227e2587 d67227e2582">
<p>Inserts a single row</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6087" id="d67227e2597" headers="d67227e2579">
<pre dir="ltr">FUNCTION ODCIIndexInsert(
   ia ODCIIndexInfo,
   ridlist ODCIRidList,
   newvallist <span class="italic">varray_of_column_type</span>,
   env ODCIEnv) 
RETURN NUMBER
</pre></td>
<td class="cellalignment6037" headers="d67227e2597 d67227e2582">
<p>Inserts a set of rows</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="tblformal" id="GUID-EF42025B-6DE2-4F2A-90EF-62775EE0EED6__GUID-22484E0E-908B-42C6-998D-D86C99511293">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexInsert()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e2614">Parameter</th>
<th class="cellalignment6084" id="d67227e2617">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2622" headers="d67227e2614">
<pre dir="ltr">ia
</pre></td>
<td class="cellalignment6085" headers="d67227e2622 d67227e2617">
<p>Contains information about the index and the indexed column</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2629" headers="d67227e2614">
<pre dir="ltr">rid
</pre></td>
<td class="cellalignment6085" headers="d67227e2629 d67227e2617">
<p>The row identifier of the new row in the table</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2636" headers="d67227e2614">
<pre dir="ltr">newval
</pre></td>
<td class="cellalignment6085" headers="d67227e2636 d67227e2617">
<p>The value of the indexed column in the inserted row</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2643" headers="d67227e2614">
<pre dir="ltr">ridlist
</pre></td>
<td class="cellalignment6085" headers="d67227e2643 d67227e2617">
<p>A varray (maximum size <code class="codeph">32767</code>) containing the list of rowids for the rows being inserted into the base table</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2653" headers="d67227e2614">
<pre dir="ltr">newvallist
</pre></td>
<td class="cellalignment6085" headers="d67227e2653 d67227e2617">
<p>A varray (maximum size <code class="codeph">32767</code>) containing the list of values being inserted into the indexed column in the base table; these entries have a one-to-one correspondence with the entries in <code class="codeph">ridlist</code></p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2665" headers="d67227e2614">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e2665 d67227e2617">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst</code><code class="codeph">.Success</code> on success, or <code class="codeph">ODCIConst.Error</code> on error.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>This function should be implemented as a <code class="codeph">STATIC</code> type method.</p>
</li>
<li>
<p>This method should insert index data corresponding to the row or set of rows passed in into the appropriate tables or files storing index data. A <code class="codeph">NULL</code> value in <code class="codeph">ridlist</code> indicates the end of the varray.</p>
</li>
<li>
<p>If the indextype is defined <code class="codeph">WITH ARRAY DML</code>, a batch of rows can be inserted into the table. In this case, <a href="ext_idx_ref.htm#GUID-EF42025B-6DE2-4F2A-90EF-62775EE0EED6">ODCIIndexInsert()</a> is invoked using the second of the two syntax synopses. Otherwise, the single-row syntax is used.</p>
</li>
<li>
<p>Note that the index partition object identifier <code class="codeph">ODCIIndexInfo.IndexPartitionIden</code> and the base table partition physical identifier <code class="codeph">ODCIIndexInfo.IndexCols(1).TablePartitionIden</code> is passed in for local domain index. The indextype must use the new DML syntax using the partition number and the provided <code class="codeph">DATAOBJ_TO_MAT_PARTITION</code> function to insert into the storage system partitioned table:</p>
<pre dir="ltr">INSERT INTO SP PARTITION (
   DATAOBJ_TO_MAT_PARTITION(
      base_table_name, 
      :tab_physical_partid))
VALUES(&hellip;);
</pre></li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5065"></a><a id="ADDCI5066"></a><a id="ADDCI5067"></a><a id="ADDCI5064"></a>
<div class="props_rev_3"><a id="GUID-53F2321C-B0F8-4783-AC1B-056372A0C073"></a>
<h3 id="ADDCI-GUID-53F2321C-B0F8-4783-AC1B-056372A0C073" class="sect3">ODCIIndexStart()</h3>
<div>
<div class="section">
<p>Invoked to start the evaluation of an operator on an indexed column.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexStart(
   sctx IN OUT &lt;impltype&gt;, 
   ia ODCIIndexInfo, 
   pi ODCIPredInfo, 
   qi ODCIQueryInfo, 
   strt &lt;opbndtype&gt;, 
   stop &lt;opbndtype&gt;, 
   &lt;valargs&gt;, 
   env ODCIEnv)
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-53F2321C-B0F8-4783-AC1B-056372A0C073__GUID-DF61E111-8433-4DB2-830D-C88E6B5DE55B">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexStart()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e2799">Parameter</th>
<th class="cellalignment6084" id="d67227e2802">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2807" headers="d67227e2799">
<pre dir="ltr">sctx(IN)
</pre></td>
<td class="cellalignment6085" headers="d67227e2807 d67227e2802">
<p>The value of the scan context returned by some previous related query-time call (such as the corresponding ancillary operator, if invoked before the primary operator); <code class="codeph">NULL</code> otherwise</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2817" headers="d67227e2799">
<pre dir="ltr">sctx(OUT)
</pre></td>
<td class="cellalignment6085" headers="d67227e2817 d67227e2802">
<p>The context that is passed to the next query-time call; the next query-time call is to <code class="codeph">ODCIIndexFetch()</code></p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2826" headers="d67227e2799">
<pre dir="ltr">ia
</pre></td>
<td class="cellalignment6085" headers="d67227e2826 d67227e2802">
<p>Contains information about the index and the indexed column</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2833" headers="d67227e2799">
<pre dir="ltr">pi
</pre></td>
<td class="cellalignment6085" headers="d67227e2833 d67227e2802">
<p>Contains information about the operator predicate</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2840" headers="d67227e2799">
<pre dir="ltr">qi
</pre></td>
<td class="cellalignment6085" headers="d67227e2840 d67227e2802">
<p>Contains query information (hints plus list of ancillary operators referenced)</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2847" headers="d67227e2799">
<pre dir="ltr">strt
</pre></td>
<td class="cellalignment6085" headers="d67227e2847 d67227e2802">
<p>The start value of the bounds on the operator return value. The data type is identical to that of the operator&#39;s return value</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2854" headers="d67227e2799">
<pre dir="ltr">stop
</pre></td>
<td class="cellalignment6085" headers="d67227e2854 d67227e2802">
<p>The stop value of the bounds on the operator return value. The data type is identical to that of the operator&#39;s return value.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2861" headers="d67227e2799">
<pre dir="ltr">valargs
</pre></td>
<td class="cellalignment6085" headers="d67227e2861 d67227e2802">
<p>The value arguments of the operator invocation. The number and data types of these arguments are identical to those of the value arguments to the operator.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e2868" headers="d67227e2799">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e2868 d67227e2802">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst</code><code class="codeph">.Success</code> on success, or <code class="codeph">ODCIConst.Error</code> on error.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>The function should be implemented as a static method.</p>
</li>
<li>
<p><code class="codeph">ODCIIndexStart()</code> is invoked to begin the evaluation of an operator on an indexed column. In particular, the following conditions hold:</p>
<ul style="list-style-type: disc;">
<li>
<p>The first argument to the operator is a column which has a domain index defined on it.</p>
</li>
<li>
<p>The indextype of the domain index (specified in <code class="codeph">ODCIIndexInfo</code> parameter) supports the current operator.</p>
</li>
<li>
<p>All other arguments to the operator are value arguments (literals) which are passed in through the <code class="codeph">&lt;valargs&gt;</code> parameters.</p>
</li>
</ul>
</li>
<li>
<p>The <code class="codeph">ODCIIndexStart()</code> method should initialize the index scan as needed (using the operator-related information in the <code class="codeph">pi</code> argument) and prepare for the subsequent invocations of <code class="codeph">ODCIIndexFetch()</code>.</p>
</li>
<li>
<p>The <code class="codeph">strt</code> and <code class="codeph">stop</code> parameters, with the <code class="codeph">bndflg</code> value in <code class="codeph">ODCIPredInfo</code> parameter, specify the range of values within which the operator return value should lie.</p>
</li>
<li>
<p>Bounds for operator return values are specified as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>If the predicate to be evaluated is of the form <code class="codeph">op</code> <code class="codeph">LIKE</code> <code class="codeph">val</code>, the <code class="codeph">ODCIIndexPrefixMatch</code> flag is set. In this case, the start key contains the value <code class="codeph">&lt;val&gt;</code> and the stop key value is irrelevant.</p>
</li>
<li>
<p>If the predicate to be evaluated is of the form <code class="codeph">op</code> = <code class="codeph">val</code>, the <code class="codeph">ODCIIndexExactMatch</code> flag is set. In this case, the start key contains the value <code class="codeph">&lt;val&gt;</code> and the stop key value is irrelevant.</p>
</li>
<li>
<p>If the predicate to be evaluated is of the form <code class="codeph">op</code> &gt; <code class="codeph">val</code>, <code class="codeph">startkey</code> contains the value <code class="codeph">&lt;val&gt;</code> and stop key value is set to <code class="codeph">NULL</code>. If the predicate is of the form <code class="codeph">op</code> &gt;= <code class="codeph">&lt;val&gt;</code>, the flag <code class="codeph">ODCIIndexIncludeStart</code> is also set.</p>
</li>
<li>
<p>If the predicate to be evaluated is of the form <code class="codeph">op</code> <code class="codeph">&lt; val</code>, stop key contains the value &lt;val&gt; and the start key value is set to <code class="codeph">NULL</code>. If the predicate is of the form <code class="codeph">op</code> <code class="codeph">&lt;= val</code>, the flag <code class="codeph">ODCIIndexIncludeStop</code> is also set.</p>
</li>
</ul>
</li>
<li>
<p>A context value can be returned to Oracle (through the <code class="codeph">SELF</code> argument) which is then passed back to the next query-time call. The next call is to <code class="codeph">ODCIIndexFetch()</code> if the evaluation continues, or to <code class="codeph">ODCIIndexStart()</code> if the evaluation is restarted. The context value can be used to store the entire evaluation state or just a handle to the memory containing the state.</p>
</li>
<li>
<p>Note that if the same indextype supports multiple operators with different signatures, multiple <code class="codeph">ODCIIndexStart()</code> methods must be implemented, one for each distinct combination of value argument data types. For example, if an indextype supports three operators:</p>
<ol>
<li>
<p><code class="codeph">op1(number, number)</code></p>
</li>
<li>
<p><code class="codeph">op1(varchar2, varchar2)</code></p>
</li>
<li>
<p><code class="codeph">op2(number, number)</code></p>
</li>
</ol>
<p>two <code class="codeph">ODCIIndexStart</code> routines must be implemented:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ODCIIndexStart(...., NUMBER)</code>&mdash; handles cases (1) and (3) which has a <code class="codeph">NUMBER</code> value argument</p>
</li>
<li>
<p><code class="codeph">ODCIIndexStart(...., VARCHAR2)</code>&mdash; handles case (2) which has a <code class="codeph">VARCHAR2</code> value argument</p>
</li>
</ul>
</li>
<li>
<p>The query information in <code class="codeph">qi</code> parameter can be used to optimize the domain index scan, if possible. The query information includes hints that have been specified for the query and the list of relevant ancillary operators referenced in the query block.</p>
</li>
<li>
<p>The index partition object identifier <code class="codeph">ODCIIndexInfo.IndexPartitionIden</code> and the base table partition physical identifier <code class="codeph">ODCIIndexInfo.IndexCols(1).TablePartitionIden</code> is passed in for local domain index. The indextype must use the new SQL syntax using the partition number and the provided <code class="codeph">DATAOBJ_TO_MAT_PARTITION</code> function to query the corresponding partition of the storage system partitioned table:</p>
<pre dir="ltr">SELECT FROM SP PARTITION(
   DATAOBJ_TO_MAT_PARTITION(
   base_table_name, 
   :tab_physical_partid)) 
WHERE ...;
</pre></li>
</ul>
<div class="infoboxnotealso" id="GUID-53F2321C-B0F8-4783-AC1B-056372A0C073__GUID-AB58DCC9-09D4-4139-84AE-11040F248801">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ext_idx_ref.htm#GUID-BB601420-A858-46E3-A9AC-3433220D4F82">ODCIIndexFetch()</a></p>
</li>
<li>
<p><a href="ext_idx_ref.htm#GUID-53F2321C-B0F8-4783-AC1B-056372A0C073">ODCIIndexStart()</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5069"></a><a id="ADDCI5070"></a><a id="ADDCI5071"></a><a id="ADDCI5068"></a>
<div class="props_rev_3"><a id="GUID-CB42E738-EFD1-4053-9DDF-BEF455F92815"></a>
<h3 id="ADDCI-GUID-CB42E738-EFD1-4053-9DDF-BEF455F92815" class="sect3">ODCIIndexUpdate()</h3>
<div>
<div class="section">
<p>Invoked when a row is updated in a table that has a defined domain index on one or more of its columns.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexUpdate( 
   ia ODCIIndexInfo, 
   rid VARCHAR2, 
   oldval <span class="italic">icoltype</span>, 
   newval <span class="italic">icoltype</span>, 
   env ODCIEnv)
RETURN NUMBER
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-CB42E738-EFD1-4053-9DDF-BEF455F92815__GUID-01215262-579B-4628-9468-F74DB265FDD6">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexUpdate()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e3191">Parameter</th>
<th class="cellalignment6084" id="d67227e3194">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3199" headers="d67227e3191">
<pre dir="ltr">ia
</pre></td>
<td class="cellalignment6085" headers="d67227e3199 d67227e3194">
<p>Contains information about the index and the indexed column</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3206" headers="d67227e3191">
<pre dir="ltr">rid
</pre></td>
<td class="cellalignment6085" headers="d67227e3206 d67227e3194">
<p>The row identifier of the updated row</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3213" headers="d67227e3191">
<pre dir="ltr">oldval
</pre></td>
<td class="cellalignment6085" headers="d67227e3213 d67227e3194">
<p>The value of the indexed column before the update. The data type is identical to that of the indexed column.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3220" headers="d67227e3191">
<pre dir="ltr">newval
</pre></td>
<td class="cellalignment6085" headers="d67227e3220 d67227e3194">
<p>The value of the indexed column after the update. The data type is identical to that of the indexed column.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3227" headers="d67227e3191">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment6085" headers="d67227e3227 d67227e3194">
<p>The environment handle passed to the routine</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">ODCIConst.Success</code> on success, or <code class="codeph">ODCIConst.Error</code> on error.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>The function should be implemented as a <code class="codeph">static</code> type method.</p>
</li>
<li>
<p>This method should update the tables or files storing the index data for the updated row.</p>
</li>
<li>
<p>In addition to a SQL <code class="codeph">UPDATE</code> statement, a LOB value can be updated through a variety of <code class="codeph">WRITE</code> interfaces (see <a class="olink ADLOB" target="_blank" href="../ADLOB/toc.htm"><span class="italic">Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</span></a>). If a domain index is defined on a <code class="codeph">LOB</code> column or an object type containing a <code class="codeph">LOB</code> attribute, the <code class="codeph">ODCIIndexUpdate</code> routine is called when a LOB locator is implicitly or explicitly closed after one or more write operations.</p>
</li>
<li>
<p>The index partition object identifier, <code class="codeph">ODCIIndexInfo.IndexPartitionIden</code>, and the base table partition physical identifier, <code class="codeph">ODCIIndexInfo.IndexCols(1).TablePartitionIden</code>, is passed in for local domain indexes. The indextype must use the new DML syntax with the partition number, and the provided <code class="codeph">DATAOBJ_TO_MAT_PARTITION()</code> function to update data in the storage system partitioned table:</p>
<pre dir="ltr">UPDATE SP PARTITION 
   (DATAOBJ_TO_MAT_PARTITION(
      base_table_name, :tab_physical_partid)) 
   VALUES(&hellip;) SET val = :newval WHERE rowid + :rowid;
</pre></li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5073"></a><a id="ADDCI5074"></a><a id="ADDCI5072"></a>
<div class="props_rev_3"><a id="GUID-C2C4DB40-106A-491C-B241-985B69DC2FE1"></a>
<h3 id="ADDCI-GUID-C2C4DB40-106A-491C-B241-985B69DC2FE1" class="sect3">ODCIIndexUpdPartMetadata()</h3>
<div>
<div class="section">
<p>Invoked during partition maintenance operations. Patches the indextype metadata tables to correctly reflect the partition maintenance operation.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexUpdPartMetadata(
   ia ODCIIndexInfo,
   palist ODCIPartInfoList,
   env ODCIEnv) 
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-C2C4DB40-106A-491C-B241-985B69DC2FE1__GUID-62D6F7FC-0985-4EFD-B21B-A33DE2DA0E36">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexUpdPartMetadata()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e3366">Parameter</th>
<th class="cellalignment6084" id="d67227e3369">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3374" headers="d67227e3366"><code class="codeph">ia</code></td>
<td class="cellalignment6085" headers="d67227e3374 d67227e3369">
<p>The information about the domain index; does not contain partition-specific information</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3381" headers="d67227e3366"><code class="codeph">palist</code></td>
<td class="cellalignment6085" headers="d67227e3381 d67227e3369">
<p>The information about the dropped or added partitions</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3388" headers="d67227e3366"><code class="codeph">env</code></td>
<td class="cellalignment6085" headers="d67227e3388 d67227e3369">
<p>The environment handle</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>This method should be implemented as a <code class="codeph">STATIC</code> type method.</p>
</li>
<li>
<p>When an indextype is specified with the <code class="codeph">SYSTEM MANAGED</code> approach, this method is invoked on the local domain index of this indextype during partition management operations.</p>
</li>
<li>
<p>SQL DDLs are not allowed in this method.</p>
</li>
<li>
<p>The indextype should update its metadata mapping specific to the partitions, if any.</p>
</li>
<li>
<p>The <code class="codeph">palist</code> argument contains a list of partitions that should be dropped or added. For example, if the base table operation is <code class="codeph">ALTER TABLE SPLIT PARTITTION P1 INTO P11 AND P12</code>, then the <code class="codeph">palist</code> would have information about <code class="codeph">3</code> partitions: <code class="codeph">P1</code> (drop), <code class="codeph">P11</code>(add) and <code class="codeph">P12</code>(add), along with their index partition names and index partition object identifiers.</p>
</li>
<li>
<p>If the <a href="ext_idx_ref.htm#GUID-C2C4DB40-106A-491C-B241-985B69DC2FE1">ODCIIndexUpdPartMetadata()</a> call raises or returns an error, then the partition management operation on the base table is rolled back.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5076"></a><a id="ADDCI5077"></a><a id="ADDCI5075"></a>
<div class="props_rev_3"><a id="GUID-246BE6AB-72DE-4549-9B92-20F2106DEBE2"></a>
<h3 id="ADDCI-GUID-246BE6AB-72DE-4549-9B92-20F2106DEBE2" class="sect3">ODCIIndexUtilCleanup()</h3>
<div>
<div class="section">
<p>Cleans up temporary states created by <code class="codeph">ODCIIndexUtilGetTableNames()</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexUtilCleanup (
   context  PLS_INTEGER)
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-246BE6AB-72DE-4549-9B92-20F2106DEBE2__GUID-F557AA2E-B3E3-424D-957B-DCCCBDB48BFC">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexUtilCleanup()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e3522">Parameter</th>
<th class="cellalignment6084" id="d67227e3525">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3530" headers="d67227e3522">
<pre dir="ltr">context
</pre></td>
<td class="cellalignment6085" headers="d67227e3530 d67227e3525">
<p>The number created by <code class="codeph">ODCIIndexUtilGetTableNames()</code> that uniquely identifies state information for a particular index.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>The procedure should be implemented as a static type method.</p>
</li>
<li>
<p><code class="codeph">ODCIIndexUtilCleanup()</code> deletes any temporary state associated with the parameter context.</p>
</li>
<li>
<p>Exceptions raised by <code class="codeph">ODCIIndexUtilCleanup()</code> are ignored by its caller.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-246BE6AB-72DE-4549-9B92-20F2106DEBE2__GUID-0E9F8635-BFA4-44CB-BEA9-06F60DC928E8">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ext_idx_ref.htm#GUID-8AE43690-9A7F-480E-A304-A28687197205">ODCIIndexUtilGetTableNames()</a></p>
</li>
<li>
<p><a href="ext_idx_ref.htm#GUID-246BE6AB-72DE-4549-9B92-20F2106DEBE2">ODCIIndexUtilCleanup()</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ADDCI5079"></a><a id="ADDCI5080"></a><a id="ADDCI5081"></a><a id="ADDCI5078"></a>
<div class="props_rev_3"><a id="GUID-8AE43690-9A7F-480E-A304-A28687197205"></a>
<h3 id="ADDCI-GUID-8AE43690-9A7F-480E-A304-A28687197205" class="sect3">ODCIIndexUtilGetTableNames()</h3>
<div>
<div class="section">
<p>Determines if the secondary tables of the domain index should be exported/imported. By default, secondary objects of the domain are not imported or exported. However, if this interface and <code class="codeph">ODCIIndexUtilCleanup()</code> are present, the system invokes them.</p>
<p>If this interface is implemented, your application can also invoke it for transportable tablespace operations.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">FUNCTION ODCIIndexUtilGetTableNames(
   ia sys.odciindexinfo, 
   read_only PLS_INTEGER, 
   version varchar2, 
   context OUT PLS_INTEGER)
RETURN BOOLEAN
</pre></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-8AE43690-9A7F-480E-A304-A28687197205__GUID-0519F61C-ACE1-4B63-990A-A98A03B8570E">
<table class="cellalignment5987" summary="This table describes the parameter for ODCIIndexUtilGetTableNames()">
<thead>
<tr class="cellalignment5978">
<th class="cellalignment6023" id="d67227e3645">Parameter</th>
<th class="cellalignment6084" id="d67227e3648">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3653" headers="d67227e3645">
<pre dir="ltr">ia
</pre></td>
<td class="cellalignment6085" headers="d67227e3653 d67227e3648">
<p>Contains information about the index and the indexed column</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3660" headers="d67227e3645">
<pre dir="ltr">read_only
</pre></td>
<td class="cellalignment6085" headers="d67227e3660 d67227e3648">
<p>Specify 1 if the encompassing transaction is read-only, meaning no writes allowed. Otherwise 0.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3667" headers="d67227e3645">
<pre dir="ltr">version
</pre></td>
<td class="cellalignment6085" headers="d67227e3667 d67227e3648">
<p>Version of export making the call.</p>
</td>
</tr>
<tr class="cellalignment5978">
<td class="cellalignment6026" id="d67227e3674" headers="d67227e3645">
<pre dir="ltr">context
</pre></td>
<td class="cellalignment6085" headers="d67227e3674 d67227e3648">
<p>A unique number that is used by <code class="codeph">ODCIIndexUtilCleanup()</code> to facilitate the clean up of any state held open between <code class="codeph">ODCIIndexUtilGetTableNames()</code> and <code class="codeph">ODCIIndexUtilCleanup()</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Returns</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">TRUE</code> if the domain indexes&#39; secondary tables should be exported/imported. Otherwise, the function returns <code class="codeph">FALSE</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Usage Notes</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>This function should be implemented as a static type method.</p>
</li>
<li>
<p>This function should return <code class="codeph">TRUE</code> or <code class="codeph">FALSE</code> based on whether the secondary tables should be exported/imported.</p>
</li>
<li>
<p>This function should return <code class="codeph">TRUE</code> or <code class="codeph">FALSE</code> based on whether the secondary tables should be transported. Secondary objects other than tables do not participate in transportable tablespaces. They must be recreated on the import side when the <code class="codeph">ODCIIndexCreate()</code> method is invoked with the <code class="codeph">ODCI_INDEX_TRANS_TBLSPC</code> bit set in the <code class="codeph">ODCIIndexInfo.IndexInfoFlags</code>.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-8AE43690-9A7F-480E-A304-A28687197205__GUID-36F3D4C1-6024-43C4-8C1E-8B051D835033">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ext_idx_ref.htm#GUID-246BE6AB-72DE-4549-9B92-20F2106DEBE2">ODCIIndexUtilCleanup()</a></p>
</li>
<li>
<p><a href="ext_idx_ref.htm#GUID-C14A0478-6EA1-4EAE-BAA6-AA59EE5D300C">ODCIIndexCreate()</a></p>
</li>
<li>
<p><a href="ext_idx_ref.htm#GUID-8AE43690-9A7F-480E-A304-A28687197205">ODCIIndexUtilGetTableNames()</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5977">
<tr>
<td class="cellalignment5984">
<table class="cellalignment5982">
<tr>
<td class="cellalignment5981"><a href="ext_types_ref.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5981"><a href="ext_opt_ref.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5986">
<table class="cellalignment5980">
<tr>
<td class="cellalignment5981"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5981"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5981"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5981"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5981"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5981"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>