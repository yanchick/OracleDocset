<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2043"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Image%20Raw%20Pixel%20Format%20for%20Use%20With%20Oracle%20Multimedia"></a><title>Image Raw Pixel Format for Use With Oracle Multimedia</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="Presents reference information about using Oracle Database to store, manage, and retrieve images, audio, video, DICOM format medical images and other objects, or other heterogeneous media data in an integrated fashion with other enterprise information. Oracle Multimedia extends Oracle Database reliability, availability, and data management to multimedia content in Internet, electronic commerce, medical, financial, and other media-rich applications."/>
<meta name="dcterms.created" content="2014-07-30T15:7:6Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Multimedia Reference"/>
<meta name="dcterms.identifier" content="E17696-09"/>
<meta name="dcterms.isVersionOf" content="AIVUG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ap_imgproc.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ap_xmlschms.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17696-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">19/25</span> <!-- End Header -->
<div id="AIVUG60000" class="appendix"><a id="g623413"></a> <a id="i619307"></a>
<h1 class="appendix"><span class="secnum">E</span> Image Raw Pixel Format for Use With Oracle Multimedia</h1>
<p>This appendix describes the Oracle Raw Pixel <a id="sthref1940"></a><a id="sthref1941"></a>image format and is intended for developers and advanced users who want to use the Raw Pixel format to import unsupported image formats into Oracle Multimedia, or as a means to directly access the pixel data in an image.</p>
<p>Much of this appendix is also applicable to foreign images.</p>
<p>This appendix includes these sections:</p>
<ul>
<li>
<p><a href="#BABFEEJG">Raw Pixel Introduction</a></p>
</li>
<li>
<p><a href="#BABGAIAE">Raw Pixel Image Structure</a></p>
</li>
<li>
<p><a href="#i619440">Raw Pixel Header Field Descriptions</a></p>
</li>
<li>
<p><a href="#BABGDCCA">Raw Pixel Post-Header Gap</a></p>
</li>
<li>
<p><a href="#BABIEHCJ">Raw Pixel Data Section and Pixel Data Format</a></p>
</li>
<li>
<p><a href="#BABDAFHF">Raw Pixel Header - C Language Structure</a></p>
</li>
<li>
<p><a href="#BABEIDIA">Raw Pixel Header - C Language Constants</a></p>
</li>
<li>
<p><a href="#BABGCGCE">Raw Pixel PL/SQL Constants</a></p>
</li>
<li>
<p><a href="#BABGAJAE">Raw Pixel Images Using CCITT Compression</a></p>
</li>
<li>
<p><a href="#i618699">Foreign Image Support and the Raw Pixel Format</a></p>
</li>
</ul>
<a id="BABFEEJG"></a>
<div id="AIVUG60100" class="sect1">
<h2 class="sect1"><span class="secnum">E.1</span> Raw Pixel Introduction</h2>
<p>Oracle Multimedia supports many popular image formats suitable for storing artwork, photographs, and other images in an efficient, compressed way, and provides the ability to convert between these formats. However, most of these formats are proprietary to at least some degree, and the format of their content is often widely variable and not suited for easy access to the pixel data of the image.</p>
<p>The Raw Pixel format is useful for applications that need direct access to the pixel data without the burden of the complex computations required to determine the location of pixels within a compressed data stream. This simplifies reading the image for applications that are performing pixel-oriented image processing, such as filtering and edge detection. This format is even more useful to applications that must write data back to the image. Because changing even a single pixel in a compressed image can have implications for the entire image stream, providing an uncompressed format enables applications to write pixel data directly, and later compress the image with a single process( ) command.</p>
<p>This format is also useful to users who have data in a format not directly supported by Oracle Multimedia, but is in a simple, uncompressed format. These users can prepend a Raw Pixel identifier and header onto their data and import it into Oracle Multimedia. For users who need only to read these images (such as for import or conversion), this capability is built into Oracle Multimedia as &#34;Foreign Image Support.&#34; <a href="#i618699">Section E.10</a> describes how this capability is related to the Raw Pixel format.</p>
<p>In addition to supporting image types not built into Oracle Multimedia, the Raw Pixel format also permits the interpretation of N-band imagery, such as satellite images. Using Raw Pixel, one or three bands of an N-band image can be selected during conversion to another image format, enabling easy visualization within programs that do not otherwise support N-band images. Images written with the Raw Pixel format still may have only one or three bands.</p>
<p>The current version of the Raw Pixel format is 1.0. This appendix is applicable to Raw Pixel images of this version only, as the particulars of the format can change with other versions.</p>
</div>
<!-- class="sect1" -->
<a id="BABGAIAE"></a>
<div id="AIVUG60200" class="sect1">
<h2 class="sect1"><span class="secnum">E.2</span> Raw Pixel Image Structure</h2>
<p>A Raw Pixel image consists of a 4-byte image identifier, followed by a 30-byte image header, followed by an arbitrary gap of 0 or more bytes, followed by pixel data.</p>
<p>It is worth noting that Raw Pixel images are never color-mapped, and therefore do not contain color lookup tables.</p>
<p>The Raw Pixel header consists of the Image Identifier and the Image Header. The Image Header is actually composed of several fields.</p>
<p>The first byte in the image is actually offset 0. All integer fields are unsigned and stored in big endian byte order.</p>
<p><a href="#CHDJFCGA">Table E-1</a> describes the raw pixel image header structure.</p>
<div id="AIVUG80663" class="tblruleformal">
<p class="titleintable"><a id="sthref1942"></a><a id="CHDJFCGA"></a>Table E-1 Raw Pixel Image Header Structure</p>
<table class="cellalignment1458" title="Raw Pixel Image Header Structure " summary="This table presents the Raw Pixel image header structure." dir="ltr">
<thead>
<tr class="cellalignment1452">
<th class="cellalignment1459" id="r1c1-t2">Name</th>
<th class="cellalignment1459" id="r1c2-t2">Byte(s)</th>
<th class="cellalignment1459" id="r1c3-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r2c1-t2" headers="r1c1-t2">
<p>Image Identifier</p>
</td>
<td class="cellalignment1460" headers="r2c1-t2 r1c2-t2">
<p>0:3</p>
</td>
<td class="cellalignment1460" headers="r2c1-t2 r1c3-t2">
<p>4-byte character array containing ASCII values for RPIX.</p>
<p>This array identifies the image as a Raw Pixel image.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r3c1-t2" headers="r1c1-t2">
<p>Image Header Length</p>
</td>
<td class="cellalignment1460" headers="r3c1-t2 r1c2-t2">
<p>4:7</p>
</td>
<td class="cellalignment1460" headers="r3c1-t2 r1c3-t2">
<p>Length of this header in bytes, excluding the identifier field.</p>
<p>The value of this field can be increased to create a gap between the header fields and the pixel data in the image.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r4c1-t2" headers="r1c1-t2">
<p>Major Version</p>
</td>
<td class="cellalignment1460" headers="r4c1-t2 r1c2-t2">
<p>8</p>
</td>
<td class="cellalignment1460" headers="r4c1-t2 r1c3-t2">
<p>Major version number of the Raw Pixel format used in the image.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r5c1-t2" headers="r1c1-t2">
<p>Minor Version</p>
</td>
<td class="cellalignment1460" headers="r5c1-t2 r1c2-t2">
<p>9</p>
</td>
<td class="cellalignment1460" headers="r5c1-t2 r1c3-t2">
<p>Minor version number of the Raw Pixel format used in the image.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r6c1-t2" headers="r1c1-t2">
<p>Image Width</p>
</td>
<td class="cellalignment1460" headers="r6c1-t2 r1c2-t2">
<p>10:13</p>
</td>
<td class="cellalignment1460" headers="r6c1-t2 r1c3-t2">
<p>Width of the image in pixels.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r7c1-t2" headers="r1c1-t2">
<p>Image Height</p>
</td>
<td class="cellalignment1460" headers="r7c1-t2 r1c2-t2">
<p>14:17</p>
</td>
<td class="cellalignment1460" headers="r7c1-t2 r1c3-t2">
<p>Height of the image in pixels.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r8c1-t2" headers="r1c1-t2">
<p>Compression Type</p>
</td>
<td class="cellalignment1460" headers="r8c1-t2 r1c2-t2">
<p>18</p>
</td>
<td class="cellalignment1460" headers="r8c1-t2 r1c3-t2">
<p>Compression type of the image: None, CCITT FAX Group 3, or CCITT FAX Group 4.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r9c1-t2" headers="r1c1-t2">
<p>Pixel Order</p>
</td>
<td class="cellalignment1460" headers="r9c1-t2 r1c2-t2">
<p>19</p>
</td>
<td class="cellalignment1460" headers="r9c1-t2 r1c3-t2">
<p>Pixel order of the image: Normal or Reverse.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r10c1-t2" headers="r1c1-t2">
<p>Scanline Order</p>
</td>
<td class="cellalignment1460" headers="r10c1-t2 r1c2-t2">
<p>20</p>
</td>
<td class="cellalignment1460" headers="r10c1-t2 r1c3-t2">
<p>Scanline order of the image: Normal or Inverse.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r11c1-t2" headers="r1c1-t2">
<p>Interleave</p>
</td>
<td class="cellalignment1460" headers="r11c1-t2 r1c2-t2">
<p>21</p>
</td>
<td class="cellalignment1460" headers="r11c1-t2 r1c3-t2">
<p>Interleave type of the image: BIP, BIL, or BSQ.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r12c1-t2" headers="r1c1-t2">
<p>Number of Bands</p>
</td>
<td class="cellalignment1460" headers="r12c1-t2 r1c2-t2">
<p>22</p>
</td>
<td class="cellalignment1460" headers="r12c1-t2 r1c3-t2">
<p>Number of bands in the image. Must be in the range 1 to 255.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r13c1-t2" headers="r1c1-t2">
<p>Red Channel Number</p>
</td>
<td class="cellalignment1460" headers="r13c1-t2 r1c2-t2">
<p>23</p>
</td>
<td class="cellalignment1460" headers="r13c1-t2 r1c3-t2">
<p>The band number of the channel to use as a default for red.</p>
<p>This field is the grayscale channel number if the image is grayscale.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r14c1-t2" headers="r1c1-t2">
<p>Green Channel Number</p>
</td>
<td class="cellalignment1460" headers="r14c1-t2 r1c2-t2">
<p>24</p>
</td>
<td class="cellalignment1460" headers="r14c1-t2 r1c3-t2">
<p>The band number of the channel to use as a default for green.</p>
<p>This field is zero if the image is grayscale.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r15c1-t2" headers="r1c1-t2">
<p>Blue Channel Number</p>
</td>
<td class="cellalignment1460" headers="r15c1-t2 r1c2-t2">
<p>25</p>
</td>
<td class="cellalignment1460" headers="r15c1-t2 r1c3-t2">
<p>The band number of the channel to use as a default for blue.</p>
<p>This field is zero if the image is grayscale.</p>
</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r16c1-t2" headers="r1c1-t2">
<p>Reserved Area</p>
</td>
<td class="cellalignment1460" headers="r16c1-t2 r1c2-t2">
<p>26:33</p>
</td>
<td class="cellalignment1460" headers="r16c1-t2 r1c3-t2">
<p>Not currently used. All bytes <span class="italic">must</span> be zero.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" --></div>
<!-- class="sect1" -->
<a id="i619440"></a>
<div id="AIVUG60300" class="sect1">
<h2 class="sect1"><span class="secnum">E.3</span> Raw Pixel Header Field Descriptions</h2>
<p>This section describes the fields of the Raw Pixel header in greater detail.</p>
<p class="subhead1"><a id="AIVUG80664"></a>Image Identifier</p>
<p><a id="sthref1943"></a>Occupying the first 4 bytes of a Raw Pixel image, the identifier string must always be set to the ASCII values &#34;RPIX&#34; (hexadecimal 52 50 49 58). These characters identify the image as being encoded in RPIX format.</p>
<p>This string is currently independent of the Raw Pixel version.</p>
<p class="subhead1"><a id="AIVUG80665"></a>Image Header Length</p>
<p><a id="sthref1944"></a>The Raw Pixel reader uses the value stored in this field to find the start of the pixel data section within a Raw Pixel image. To find the offset of the pixel data in the image, the reader adds the length of the image identifier (always 4) to the value in the image header length field. Thus, for Raw Pixel 1.0 images with no post-header gap, the pixel data starts at offset 34.</p>
<p>For Raw Pixel version 1.0 images, this field normally contains the integer value 30, which is the length of the Raw Pixel image header (not including the image identifier). However, the Raw Pixel format enables this field to contain any value equal to or greater than 30. Any information in the space between the end of the header data and the start of the pixel data specified by this header length is ignored by the Raw Pixel reader. This is useful for users who want to prepend a Raw Pixel header onto an existing image whose pixel data area is compatible with the Raw Pixel format. In this case, the header length would be set to 30 plus the length of the existing header. The maximum length of this header is 4,294,967,265 bytes (the maximum value that can be stored in the 4-byte unsigned field minus the 30-byte header required by the Raw Pixel format). This field is stored in big endian byte order.</p>
<p class="subhead1"><a id="AIVUG80666"></a>Major Version</p>
<p><a id="sthref1945"></a>A single-byte integer containing the major version number of the Raw Pixel format version used to encode the image. The current Raw Pixel version is 1.0, therefore this field is 1.</p>
<p class="subhead1"><a id="AIVUG80667"></a>Minor Version</p>
<p><a id="sthref1946"></a>A single-byte integer containing the minor version number of the Raw Pixel format version used to encode the image. The current Raw Pixel version is 1.0, therefore this field is 0.</p>
<p class="subhead1"><a id="AIVUG80668"></a>Image Width</p>
<p><a id="sthref1947"></a>The width (x-dimension) of the image in pixels.</p>
<p>Although this field can store an image dimension in excess of 4 billion pixels, limitations within Oracle Multimedia require that this field be a value between 1 and 32767, inclusive. This field is stored in big endian byte order.</p>
<p class="subhead1"><a id="AIVUG80669"></a>Image Height</p>
<p><a id="sthref1948"></a>The height (y-dimension) of the image in pixels.</p>
<p>Although this field can store an image dimension in excess of 4 billion pixels, limitations within Oracle Multimedia require that this field be a value between 1 and 32767, inclusive. This field is stored in big endian byte order.</p>
<p class="subhead1"><a id="AIVUG80670"></a>Compression Type</p>
<p><a id="sthref1949"></a>This field contains the compression type of the Raw Pixel image. This field can contain the following values:</p>
<div class="inftblinformal">
<table class="cellalignment1458" title="Raw Pixel Image Compression Type Values" summary="This table lists valid values for the compression type field of the Raw Pixel image." dir="ltr">
<thead>
<tr class="cellalignment1452">
<th class="cellalignment1459" id="r1c1-t3">Value</th>
<th class="cellalignment1459" id="r1c2-t3">Name</th>
<th class="cellalignment1459" id="r1c3-t3">Compression</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r2c1-t3" headers="r1c1-t3">1</td>
<td class="cellalignment1460" headers="r2c1-t3 r1c2-t3">NONE</td>
<td class="cellalignment1460" headers="r2c1-t3 r1c3-t3">No compression</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r3c1-t3" headers="r1c1-t3">2</td>
<td class="cellalignment1460" headers="r3c1-t3 r1c2-t3">FAX3</td>
<td class="cellalignment1460" headers="r3c1-t3 r1c3-t3">CCITT Group 3 compression</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r4c1-t3" headers="r1c1-t3">3</td>
<td class="cellalignment1460" headers="r4c1-t3 r1c2-t3">FAX4</td>
<td class="cellalignment1460" headers="r4c1-t3 r1c3-t3">CCITT Group 4 compression</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>For grayscale, RGB, and N-band images, the image is always uncompressed, and only a value of 0 is valid. If the compression type is value 1 or 2, then the image is presumed to be monochrome. In this case, the image is presumed to contain only a single band, and must specify normal pixel order, normal scanline order, and BIP interleave.</p>
<p class="subhead1"><a id="AIVUG80671"></a>Pixel Order</p>
<p><a id="sthref1950"></a>This field describes the pixel order within the Raw Pixel image. Typically, pixels in a scanline are ordered from left to right, along the traditional positive x-axis. However, some applications require that scanlines be ordered from right to left.</p>
<p>This field can contain the following values:</p>
<div class="inftblruleinformal">
<table class="cellalignment1458" title="Raw Pixel Image Pixel Order Field Values" summary="This table lists valid values for the pixel order field of the Raw Pixel image." dir="ltr">
<thead>
<tr class="cellalignment1452">
<th class="cellalignment1459" id="r1c1-t4">Value</th>
<th class="cellalignment1459" id="r1c2-t4">Name</th>
<th class="cellalignment1459" id="r1c3-t4">Pixel Order</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r2c1-t4" headers="r1c1-t4">1</td>
<td class="cellalignment1460" headers="r2c1-t4 r1c2-t4">NORMAL</td>
<td class="cellalignment1460" headers="r2c1-t4 r1c3-t4">Leftmost pixel first</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r3c1-t4" headers="r1c1-t4">2</td>
<td class="cellalignment1460" headers="r3c1-t4 r1c2-t4">REVERSE</td>
<td class="cellalignment1460" headers="r3c1-t4 r1c3-t4">Rightmost pixel first</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>This field cannot contain 0, as this indicates an unspecified pixel order; this would mean the image could not be interpreted. For images with CCITT G3 and G4 compression types, this field must contain the value 1.</p>
<p class="subhead1"><a id="AIVUG80672"></a>Scanline Order</p>
<p><a id="sthref1951"></a>This field describes the scanline order within the Raw Pixel image. Typically, scanlines in an image are ordered from top to bottom. However, some applications require that scanlines are ordered from bottom to top.</p>
<p>This field can contain the following values:</p>
<div class="inftblruleinformal">
<table class="cellalignment1458" title="Raw Pixel Image Scanline Order Values" summary="This table lists the valid values for the scanline order field of the Raw Pixel image." dir="ltr">
<thead>
<tr class="cellalignment1452">
<th class="cellalignment1459" id="r1c1-t5">Value</th>
<th class="cellalignment1459" id="r1c2-t5">Name</th>
<th class="cellalignment1459" id="r1c3-t5">Scanline Order</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r2c1-t5" headers="r1c1-t5">1</td>
<td class="cellalignment1460" headers="r2c1-t5 r1c2-t5">NORMAL</td>
<td class="cellalignment1460" headers="r2c1-t5 r1c3-t5">Topmost scanline first</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r3c1-t5" headers="r1c1-t5">2</td>
<td class="cellalignment1460" headers="r3c1-t5 r1c2-t5">INVERSE</td>
<td class="cellalignment1460" headers="r3c1-t5 r1c3-t5">Bottommost scanline first</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>This field cannot contain 0, as this indicates an unspecified scanline order; this would mean the image could not be interpreted. For images with CCITT G3 and G4 compression types, this field must contain the value 1.</p>
<p class="subhead1"><a id="AIVUG80673"></a>Interleave</p>
<p><a id="sthref1952"></a>This field describes the interleaving of the various bands within a Raw Pixel image. See <a href="#i619436">Section E.5.3</a> for more information about the meaning of the various interleave options.</p>
<p>This field can contain the following values:</p>
<div class="inftblruleinformal">
<table class="cellalignment1458" title="Raw Pixel Image Interleave Values" summary="This table lists the valid values for the interleave field of the Raw Pixel image." dir="ltr">
<thead>
<tr class="cellalignment1452">
<th class="cellalignment1459" id="r1c1-t6">Value</th>
<th class="cellalignment1459" id="r1c2-t6">Name</th>
<th class="cellalignment1459" id="r1c3-t6">Interleave</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r2c1-t6" headers="r1c1-t6">1</td>
<td class="cellalignment1460" headers="r2c1-t6 r1c2-t6">BIP</td>
<td class="cellalignment1460" headers="r2c1-t6 r1c3-t6">Band Interleave by Pixel, or &#34;chunky&#34;</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r3c1-t6" headers="r1c1-t6">2</td>
<td class="cellalignment1460" headers="r3c1-t6 r1c2-t6">BIL</td>
<td class="cellalignment1460" headers="r3c1-t6 r1c3-t6">Band Interleave by Line</td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r4c1-t6" headers="r1c1-t6">3</td>
<td class="cellalignment1460" headers="r4c1-t6 r1c2-t6">BSQ</td>
<td class="cellalignment1460" headers="r4c1-t6 r1c3-t6">Band SeQuential, or &#34;planar&#34;</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>This field cannot contain 0, as this indicates an unspecified interleave; this would mean the image could not be interpreted. For images with CCITT G3 and G4 compression types, this field must contain the value 1.</p>
<p class="subhead1"><a id="AIVUG80674"></a>Number of Bands</p>
<p><a id="sthref1953"></a>This field contains the number of bands or planes in the image, and must be a value between 1 and 255, inclusive. This field cannot contain the value 0.</p>
<p>For CCITT images, this field must contain the value 1.</p>
<p class="subhead1"><a id="AIVUG80675"></a>Red Channel Number</p>
<p><a id="sthref1954"></a>This field contains the number of the band that is to be used as the red channel during image conversion operations. This number can be used to change the interpretation of a normal RGB image, or to specify a default band to be used as red in an N-band image. This default can be overridden using the inputChannels operator in the process( ) or processCopy( ) methods.</p>
<p>If the image has only one band, or only one band from an N-band image is to be selected for display, then the band number must be encoded as the red channel. In this case, the green and blue channels are set to 0.</p>
<p>This field cannot contain the value 0; it must contain a value between 1 and the number of bands, inclusive.</p>
<p class="subhead1"><a id="AIVUG80676"></a>Green Channel Number</p>
<p><a id="sthref1955"></a>This field contains the number of the band that is to be used as the green channel during image conversion operations. This number can be used to change the interpretation of a normal RGB image, or to specify a default band to be used as green in an N-band image. This default can be overridden using the inputChannels operator in the process( ) or processCopy( ) method.</p>
<p>If the image has only one band, or only one band from an N-band image is to be selected for display, then the band number must be encoded as the red channel. In this case, the green and blue channels are set to 0.</p>
<p>This field can contain a value between 0 and the number of bands, inclusive.</p>
<p class="subhead1"><a id="AIVUG80677"></a>Blue Channel Number</p>
<p><a id="sthref1956"></a>This field contains the number of the band that is to be used as the blue channel during image conversion operations. This number can be used to change the interpretation of a normal RGB image, or to specify a default band to be used as blue in an N-band image. This default can be overridden using the inputChannels operator in the process( ) or processCopy( ) method.</p>
<p>If the image has only one band, or only one band from an N-band image is to be selected for display, then the band number must be encoded as the red channel. In this case, the green and blue channels are set to 0.</p>
<p>This field can contain a value between 0 and the number of bands, inclusive.</p>
<p class="subhead1"><a id="AIVUG80678"></a>Reserved Area</p>
<p><a id="sthref1957"></a>The application of these 8 bytes titled Reserved Area is currently under development, but they are reserved even within Raw Pixel 1.0 images. These bytes must all be cleared to 0. Failure to do so will create undefined results.</p>
</div>
<!-- class="sect1" -->
<a id="BABGDCCA"></a>
<div id="AIVUG60301" class="sect1">
<h2 class="sect1"><span class="secnum">E.4</span> Raw Pixel Post-Header Gap</h2>
<p><a id="sthref1958"></a>Apart from the image identifier and the image header, Raw Pixel version 1.0 images contain an optional post-header gap, which precedes the actual pixel data. Unlike the reserved area of the image header, the bytes in this gap can contain any values you want. This is useful to store additional metadata about the image, which in some cases can be the actual image header from another file format.</p>
<p>However, because there is no standard for the information stored in this gap, take care when storing metadata in this area as other users may interpret this data differently. It is also worth noting that when a Raw Pixel image is processed, information stored in this gap is not copied to the destination image. In the case of the process( ) method, which writes its output to the same location as the input, the source information is lost unless the transaction in which the processing took place is rolled back.</p>
</div>
<!-- class="sect1" -->
<a id="BABIEHCJ"></a>
<div id="AIVUG60400" class="sect1">
<h2 class="sect1"><span class="secnum">E.5</span> Raw Pixel Data Section and Pixel Data Format</h2>
<p>The data section of a Raw Pixel image is where the actual pixel data of an image is stored; this area is sometimes called the bitmap data. This section describes the layout of the bitmap data.</p>
<p>For images using CCITT compression, the bitmap data area stores the raw CCITT stream with no additional header. The rest of this section applies only to uncompressed images.</p>
<p>Bitmap data in a Raw Pixel image is stored as 8-bit per plane, per pixel, direct color, packed data. There is no pixel, scanline, or band blocking or padding. Scanlines can be presented in the image as either topmost first, or bottommost first. Within a scanline, pixels can be ordered leftmost first, or rightmost first. All these options are affected by interleaving in a relatively straightforward way.</p>
<p>The following subsections provide examples for these topics related to Raw Pixel data:</p>
<ul>
<li>
<p><a href="#CHDFADIB">Scanline Ordering</a></p>
</li>
<li>
<p><a href="#CHDHIJCG">Pixel Ordering</a></p>
</li>
<li>
<p><a href="#i619436">Band Interleaving</a></p>
</li>
<li>
<p><a href="#CHDGCDCE">N-Band Data</a></p>
</li>
</ul>
<a id="CHDFADIB"></a>
<div id="AIVUG80679" class="sect2">
<h3 class="sect2"><span class="secnum">E.5.1</span> Scanline Ordering</h3>
<p><a id="sthref1959"></a>On the screen, an image may look like this:</p>
<pre>1111111111&hellip;
2222222222&hellip;
3333333333&hellip;
4444444444&hellip;
</pre>
<p>Each digit represents a single pixel; the value of the digit is the scanline that the pixel is on.</p>
<p>Generally, the scanline that forms the upper or topmost row of pixels is stored in the image data stream before lower scanlines. The preceding image would appear as follows in the bitmap data stream:</p>
<pre>&hellip;1111111111&hellip;2222222222&hellip;3333333333&hellip;4444444444&hellip;
</pre>
<p>The first scanline appears earlier than the remaining scanlines. The Raw Pixel format refers to this scanline ordering as normal.</p>
<p>However, some applications prefer that the bottommost scanline appear in the data stream first:</p>
<pre>&hellip;4444444444&hellip;3333333333&hellip;2222222222&hellip;1111111111&hellip;
</pre>
<p>The Raw Pixel format refers to this scanline ordering as inverse.</p>
</div>
<!-- class="sect2" -->
<a id="CHDHIJCG"></a>
<div id="AIVUG80680" class="sect2">
<h3 class="sect2"><span class="secnum">E.5.2</span> Pixel Ordering</h3>
<p><a id="sthref1960"></a>On the screen, a scanline of an image may look like this:</p>
<pre>&hellip;123456789&hellip;
</pre>
<p>Each digit represents a single pixel; the value of the digit is the column that the pixel is in.</p>
<p>Generally, the data that forms the leftmost pixels is stored in the image data stream before pixels toward the right. The preceding scanline would appear as follows in the bitmap data stream:</p>
<pre>&hellip;123456789&hellip;
</pre>
<p>The left pixel appears earlier than the remaining pixels. The Raw Pixel format refers to this pixel ordering as normal.</p>
<p>However, some applications prefer that the rightmost pixel appear in the data stream first:</p>
<pre>&hellip;987654321&hellip;
</pre>
<p>The Raw Pixel format refers to this pixel ordering as reverse.</p>
</div>
<!-- class="sect2" -->
<a id="i619436"></a>
<div id="AIVUG80681" class="sect2">
<h3 class="sect2"><span class="secnum">E.5.3</span> Band Interleaving</h3>
<p><a id="sthref1961"></a>Band interleaving describes the relative location of different bands of pixel data within the image buffer.</p>
<p>Bands are ordered by their appearance in an image data stream, with 1 being the first band, <span class="italic">n</span> being the last band. Band 0 would indicate no band or no data.</p>
<p class="subhead1"><a id="AIVUG80682"></a>Band Interleaved by Pixel (BIP), or <span class="italic">Chunky</span></p>
<p>BIP, or <span class="italic">chunky</span>, images place the various bands or channels of pixel data sequentially by pixel, so that all data for one pixel is in one place. If the bands of the image are the red, green, and blue channels, then a BIP image might look like this:</p>
<pre>scanline 1: RGBRGBRGBRGBRGBRGBRGB&hellip; 
scanline 2: RGBRGBRGBRGBRGBRGBRGB&hellip; 
scanline 3: RGBRGBRGBRGBRGBRGBRGB&hellip; 
&hellip;
</pre>
<p class="subhead1"><a id="AIVUG80683"></a>Band Interleaved by Line (BIL)</p>
<p>BIL images place the various bands of pixel data sequentially by scanline, so that data for one pixel is spread across multiple notional rows of the image. This reflects the data organization of a sensor that buffers data by scanline. If the bands of the image are the red, green, and blue channels, then a BIL image might look like this:</p>
<pre>scanline 1: RRRRRRRRRRRRRRRRRRRRR&hellip;
            GGGGGGGGGGGGGGGGGGGGG&hellip;
            BBBBBBBBBBBBBBBBBBBBB&hellip;
scanline 2: RRRRRRRRRRRRRRRRRRRRR&hellip;
            GGGGGGGGGGGGGGGGGGGGG&hellip;
            BBBBBBBBBBBBBBBBBBBBB&hellip;
scanline 3: RRRRRRRRRRRRRRRRRRRRR&hellip;
            GGGGGGGGGGGGGGGGGGGGG&hellip;
            BBBBBBBBBBBBBBBBBBBBB&hellip;
&hellip;
</pre>
<p class="subhead1"><a id="AIVUG80684"></a>Band Sequential (BSQ), or Planar</p>
<p>Planar images place the various bands of pixel data sequentially by bit plane, so that data for one pixel is spread across multiple planes of the image. This reflects the data organization of some video buffer systems, which control the different electron guns of a display from different locations in memory. If the bands of the image are the red, green, and blue channels, then a planar image might look like this:</p>
<pre>plane 1: RRRRRRRRRRRRRRRRRR&hellip;  (part of scanline 1)
         RRRRRRRRRRRRRRRRRR&hellip;  (part of scanline 2)
         RRRRRRRRRRRRRRRRRR&hellip;  (part of scanline 3)
&hellip;
plane 2: GGGGGGGGGGGGGGGGGG&hellip;  (part of scanline 1)
         GGGGGGGGGGGGGGGGGG&hellip;  (part of scanline 2)
         GGGGGGGGGGGGGGGGGG&hellip;  (part of scanline 3)
&hellip;
plane 3: BBBBBBBBBBBBBBBBBB&hellip;  (part of scanline 1)
         BBBBBBBBBBBBBBBBBB&hellip;  (part of scanline 2)
         BBBBBBBBBBBBBBBBBB&hellip;  (part of scanline 3)
&hellip;
</pre></div>
<!-- class="sect2" -->
<a id="CHDGCDCE"></a>
<div id="AIVUG80685" class="sect2">
<h3 class="sect2"><span class="secnum">E.5.4</span> N-Band Data</h3>
<p><a id="sthref1962"></a>The Raw Pixel format supports up to 255 bands of data in an image. <a href="#i619436">Section E.5.3</a> describes the relative location of these bands of data in the image, including examples of interleaving for 3 bands of data.</p>
<p>In the case of a single band of data, there is no interleaving; all three schemes are equivalent. Examples of interleaving other numbers of bands are provided in the following table. All images in the examples have three scanlines and four columns. Each band of each pixel is represented by a single-digit band number. Numbers that are unenclosed and are displayed in normal text represent the first scanline of the image, numbers that are enclosed in parentheses and are displayed in italic text represent the second scanline of the image, and numbers that are enclosed in brackets ([ ]) and are displayed in boldface text represent the third scanline of the image.</p>
<div class="inftblruleinformal">
<table class="cellalignment1458" title="Examples of Interleaving Bands" summary="This table provides examples of interleaving bands." dir="ltr">
<thead>
<tr class="cellalignment1452">
<th class="cellalignment1459" id="r1c1-t7">Bands</th>
<th class="cellalignment1459" id="r1c2-t7">BIP</th>
<th class="cellalignment1459" id="r1c3-t7">BIL</th>
<th class="cellalignment1459" id="r1c4-t7">BSQ</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r2c1-t7" headers="r1c1-t7">2</td>
<td class="cellalignment1460" headers="r2c1-t7 r1c2-t7">12121212<br/>
<span class="italic">(12121212)</span><br/>
<span class="bold">[12121212]</span></td>
<td class="cellalignment1460" headers="r2c1-t7 r1c3-t7">11112222<br/>
<span class="italic">(11112222)</span><br/>
<span class="bold">[11112222]</span></td>
<td class="cellalignment1460" headers="r2c1-t7 r1c4-t7">1111<span class="italic">(1111)</span><span class="bold">[1111]</span><br/>
2222<span class="italic">(2222)</span><span class="bold">[2222]</span></td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r3c1-t7" headers="r1c1-t7">4</td>
<td class="cellalignment1460" headers="r3c1-t7 r1c2-t7">1234123412341234<br/>
<span class="italic">(1234123412341234)</span><br/>
<span class="bold">[1234123412341234]</span></td>
<td class="cellalignment1460" headers="r3c1-t7 r1c3-t7">1111222233334444<br/>
<span class="italic">(1111222233334444)</span><br/>
<span class="bold">[1111222233334444]</span></td>
<td class="cellalignment1460" headers="r3c1-t7 r1c4-t7">1111<span class="italic">(1111)</span><span class="bold">[1111]</span><br/>
2222<span class="italic">(2222)</span><span class="bold">[2222]</span><br/>
3333<span class="italic">(3333)</span><span class="bold">[3333]</span><br/>
4444<span class="italic">(4444)</span><span class="bold">[4444]</span></td>
</tr>
<tr class="cellalignment1452">
<td class="cellalignment1460" id="r4c1-t7" headers="r1c1-t7">5</td>
<td class="cellalignment1460" headers="r4c1-t7 r1c2-t7">12345123451234512345<br/>
<span class="italic">(12345123451234512345)</span><br/>
<span class="bold">[12345123451234512345]</span></td>
<td class="cellalignment1460" headers="r4c1-t7 r1c3-t7">11112222333344445555<br/>
<span class="italic">(11112222333344445555)</span><br/>
<span class="bold">[11112222333344445555]</span></td>
<td class="cellalignment1460" headers="r4c1-t7 r1c4-t7">1111<span class="italic">(1111)</span><span class="bold">[1111]</span><br/>
2222<span class="italic">(2222)</span><span class="bold">[2222]</span><br/>
3333<span class="italic">(3333)</span><span class="bold">[3333]</span><br/>
4444<span class="italic">(4444)</span><span class="bold">[4444]</span><br/>
5555<span class="italic">(5555)</span><span class="bold">[5555]</span></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABDAFHF"></a>
<div id="AIVUG60500" class="sect1">
<h2 class="sect1"><span class="secnum">E.6</span> Raw Pixel Header - C Language Structure</h2>
<p><a id="sthref1963"></a>The following C language structure describes the Raw Pixel header in a programmatic way. This structure is stored unaligned in the image file (that is, fields are aligned on 1-byte boundaries) and all integers are stored in big endian byte order.</p>
<pre>struct RawPixelHeader
{
unsigned char identifier[4]; /* Always &#34;RPIX&#34; */

unsigned long   hdrlength; /* Length of this header in bytes */
/* Including the hdrlength field */
/* Not including the identifier field */
/* &amp;k.hdrlength + k.hdrlength = pixels */

unsigned char majorversion; /* Major revision # of RPIX format */
unsigned char minorversion; /* Minor revision # of RPIX format */

unsigned long width;  /* Image width in pixels */
unsigned long height; /* Image height in pixels */
unsigned char comptype;   /* Compression (none, FAXG3, FAXG4, ... ) */
unsigned char pixelorder; /* Pixel order */
unsigned char scnlorder;  /* Scanline order */
unsigned char interleave; /* Interleaving (BIP/BIL/BSQ) */

unsigned char numbands; /* Number of bands in image (1-255) */
unsigned char rchannel; /* Default red channel assignment */
unsigned char gchannel; /* Default green channel assignment */
unsigned char bchannel; /* Default blue channel assignment */
/* Grayscale images are encoded in R */
/* The first band is 1, not 0 */
/* A value of 0 means &#34;no band&#34; */

unsigned char reserved[8]; /* For later use */
};
</pre></div>
<!-- class="sect1" -->
<a id="BABEIDIA"></a>
<div id="AIVUG60600" class="sect1">
<h2 class="sect1"><span class="secnum">E.7</span> Raw Pixel Header - C Language Constants</h2>
<p><a id="sthref1964"></a>The following C language constants define the values used in the Raw Pixel header:</p>
<pre>#define RPIX_IDENTIFIER &#34;RPIX&#34;

#define RPIX_HEADERLENGTH 30

#define RPIX_MAJOR_VERSION 1
#define RPIX_MINOR_VERSION 0

#define RPIX_COMPRESSION_UNDEFINED 0
#define RPIX_COMPRESSION_NONE 1
#define RPIX_COMPRESSION_CCITT_FAX_G3 2
#define RPIX_COMPRESSION_CCITT_FAX_G4 3
#define RPIX_COMPRESSION_DEFAULT RPIX_COMPRESSION_NONE

#define RPIX_PIXEL_ORDER_UNDEFINED 0
#define RPIX_PIXEL_ORDER_NORMAL 1
#define RPIX_PIXEL_ORDER_REVERSE 2
#define RPIX_PIXEL_ORDER_DEFAULT RPIX_PIXEL_ORDER_NORMAL

#define RPIX_SCANLINE_ORDER_UNDEFINED 0
#define RPIX_SCANLINE_ORDER_NORMAL 1
#define RPIX_SCANLINE_ORDER_INVERSE 2
#define RPIX_SCANLINE_ORDER_DEFAULT RPIX_SCANLINE_ORDER_NORMAL

#define RPIX_INTERLEAVING_UNDEFINED 0
#define RPIX_INTERLEAVING_BIP 1
#define RPIX_INTERLEAVING_BIL 2
#define RPIX_INTERLEAVING_BSQ 3
#define RPIX_INTERLEAVING_DEFAULT RPIX_INTERLEAVING_BIP

#define RPIX_CHANNEL_UNDEFINED 0
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Various macros for the UNDEFINED values are meant to be descriptive, and should not be used. The exception, &#34;RPIX_CHANNEL_UNDEFINED,&#34; is used for the green and blue channels of single-band images.</div>
</div>
<!-- class="sect1" -->
<a id="BABGCGCE"></a>
<div id="AIVUG60700" class="sect1">
<h2 class="sect1"><span class="secnum">E.8</span> Raw Pixel PL/SQL Constants</h2>
<p><a id="sthref1965"></a>The following PL/SQL constants define the values used in the raw pixel information. The constants represent the length of the RPIX image identifier plus the length of the RPIX header.</p>
<pre>CREATE OR REPLACE PACKAGE ORDImageConstants AS 
  RPIX_HEADER_LENGTH_1_0   CONSTANT INTEGER := 34; 
END ORDImageConstants; 
</pre></div>
<!-- class="sect1" -->
<a id="BABGAJAE"></a>
<div id="AIVUG60800" class="sect1">
<h2 class="sect1"><span class="secnum">E.9</span> Raw Pixel Images Using CCITT Compression</h2>
<p><a id="sthref1966"></a><a id="sthref1967"></a>Although the Raw Pixel format is generally aimed at uncompressed direct color images, provision is also made to store monochrome images using CCITT Fax Group 3 or Fax Group 4 compression. This is useful for storing scans of black and white pages, such as for document management applications. These images are generally impractical to store even as grayscale, as the unused data bits combined with the very high resolution used in these images would use excessive disk space.</p>
<p>Raw Pixels images using CCITT compression are treated as normal Raw Pixel images, with these restrictions:</p>
<ul>
<li>
<p>The compression type field must contain the value 1 or 2 as outlined in <a href="#i619440">Section E.3</a> (FAX3 or FAX4).</p>
</li>
<li>
<p>The pixel order field must contain the value 1 (normal pixel order).</p>
</li>
<li>
<p>The scanline order field must contain the value 1 (normal scanline order).</p>
</li>
<li>
<p>The interleave field must contain the value 1 (BIP interleave).</p>
</li>
<li>
<p>The number of bands field must contain the value 1 (one band).</p>
</li>
<li>
<p>The red channel number field must contain the value 1.</p>
</li>
<li>
<p>The green channel number and the blue channel number fields must contain the value 0 (no band).</p>
</li>
</ul>
<p>In addition to these restrictions, applications that attempt to access pixel data directly must understand how to read and write the CCITT formatted data.</p>
</div>
<!-- class="sect1" -->
<a id="i618699"></a>
<div id="AIVUG60900" class="sect1">
<h2 class="sect1"><span class="secnum">E.10</span> Foreign Image Support and the Raw Pixel Format</h2>
<p><a id="sthref1968"></a>Oracle Multimedia provides support for reading certain foreign images that can be described in terms of a few simple parameters, and whose data is arranged in a certain straightforward way within the image file. There is no list of the supported formats because the list would be very large and continually changing. Instead, there are some simple guidelines to determine if an image can be read using the foreign image support in Oracle Multimedia. These rules are summarized in the following sections.</p>
<p class="subhead1"><a id="AIVUG80686"></a>Header</p>
<p>Foreign images can have any header (or no header), in any format, if its length does not exceed 4,294,967,265 bytes. As has been noted before, all information in this header is ignored.</p>
<p class="subhead1"><a id="AIVUG80687"></a>Image Width</p>
<p>Foreign images can be up to 32,767 pixels wide.</p>
<p class="subhead1"><a id="AIVUG80688"></a>Image Height</p>
<p>Foreign images can be up to 32,767 pixels high.</p>
<p class="subhead1"><a id="AIVUG80689"></a>Compression Type</p>
<p>Foreign images must be uncompressed or compressed using CCITT Fax Group 3 or Fax Group 4. Other compression schemes, such as run-length encoding, are not currently supported.</p>
<p class="subhead1"><a id="AIVUG80690"></a>Pixel Order</p>
<p>Foreign images can store pixels from left-to-right or right-to-left. Other pixel ordering schemes, such as boustrophedonic ordering, are not currently supported.</p>
<p class="subhead1"><a id="AIVUG80691"></a>Scanline Order</p>
<p>Foreign images can have top-first or bottom-first scanline orders. Scanlines that are adjacent in the image display must be adjacent in the image storage. Some image formats stagger their image scanlines so that, for example, scanlines 1,5,9, and so on, are adjacent, and then 2,6,10 are also adjacent. This is not currently supported.</p>
<p class="subhead1"><a id="AIVUG80692"></a>Interleaving</p>
<p>Foreign images must use BIP, BIL, or BSQ interleaving. Other arrangements of data bands are not permitted, nor can bands have any pixel, scanline, or band-level blocking or padding.</p>
<p class="subhead1"><a id="AIVUG80693"></a>Number of Bands</p>
<p>Foreign images can have up to 255 bands of data. If there are more bands of data, the first 255 can be accessed <span class="italic">if</span> the interleaving of the image is band sequential. In this case, the additional bands of data lie past the accessible bands and do not affect the layout of the first 255 bands. Images with other interleaving types cannot have more than 255 bands because the additional bands change the layout of the bitmap data.</p>
<p class="subhead1"><a id="AIVUG80694"></a>Trailer</p>
<p>Foreign images can have an image trailer following the bitmap data, and this trailer can be of arbitrary length. However, such data is completely ignored by Oracle Multimedia, and there is no method (or need) to specify the presence or length of such a trailer.</p>
<p>If an image with such a trailer is modified with the process( ) or processCopy( ) methods, the resulting image does not contain this trailer. In the case of the processCopy( ) method, the source image is still intact.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1451">
<tr>
<td class="cellalignment1460">
<table class="cellalignment1456">
<tr>
<td class="cellalignment1455"><a href="ap_imgproc.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1455"><a href="ap_xmlschms.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1462">
<table class="cellalignment1454">
<tr>
<td class="cellalignment1455"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1455"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1455"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1455"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1455"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1455"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>