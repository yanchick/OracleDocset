<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-79245"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Discovering%20Metadata"></a><title>Discovering Metadata</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-06-27T7:32:41Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="OLAP Java API Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17707-05"/>
<meta name="dcterms.isVersionOf" content="OLAAP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="metadata.htm" title="Previous" type="text/html"/>
<link rel="Next" href="create.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17707-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/19</span> <!-- End Header -->
<div class="chapter"><a id="g1015325"></a> <a id="i1008457"></a>
<h1 class="chapter"><span class="secnum">3</span> Discovering Metadata</h1>
<p>This chapter describes how to connect to an Oracle Database instance and how to discover existing Oracle OLAP metadata objects. It includes the following topics:</p>
<ul>
<li>
<p><a href="#i1005989">Connecting to Oracle OLAP</a></p>
</li>
<li>
<p><a href="#i1006594">Overview of the Procedure for Discovering Metadata</a></p>
</li>
<li>
<p><a href="#i1006595">Creating an MdmMetadataProvider</a></p>
</li>
<li>
<p><a href="#i1006596">Getting the MdmSchema Objects</a></p>
</li>
<li>
<p><a href="#i1006597">Getting the Contents of an MdmSchema</a></p>
</li>
<li>
<p><a href="#i1006598">Getting the Objects Contained by an MdmPrimaryDimension</a></p>
</li>
<li>
<p><a href="#i1006599">Getting the Source for a Metadata Object</a></p>
</li>
</ul>
<a id="i1005989"></a>
<div class="sect1">
<h2 class="sect1">Connecting to Oracle OLAP</h2>
<p>To connect to the Oracle OLAP server in an Oracle Database instance, an OLAP Java API client application uses the Oracle implementation of the Java Database Connectivity (JDBC) API. The Oracle JDBC classes that you use to establish a connection to Oracle OLAP are in the Java archive file <code>ojdbc6.jar</code>. For information about getting that file, see <a href="devsetup.htm#g635535">Appendix A, &#34;Setting Up the Development Environment&#34;</a>.</p>
<div class="sect2"><a id="sthref367"></a>
<h3 class="sect2">Prerequisites for Connecting</h3>
<p><a id="sthref368"></a>Before attempting to connect to the Oracle OLAP server, ensure that the following requirements are met:</p>
<ul>
<li>
<p>The Oracle Database instance is running and was installed with the OLAP option.</p>
</li>
<li>
<p>The Oracle Database user ID that you are using for the connection has access to the relational schemas that contain the data.</p>
</li>
<li>
<p>The Oracle JDBC and OLAP Java API jar files are in your application development environment. For information about setting up the required jar files, see <a href="devsetup.htm#g635535">Appendix A, &#34;Setting Up the Development Environment&#34;</a>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref369"></a>
<h3 class="sect2">Establishing a Connection</h3>
<p>To connect to the OLAP server, perform the following steps:</p>
<ol>
<li>
<p>Create a JDBC connection to the database.</p>
</li>
<li>
<p>Create a <code>DataProvider</code> and a <code>UserSession</code>.</p>
</li>
</ol>
<p>These steps are explained in more detail in the rest of this topic.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref370"></a>
<h4 class="sect3">Creating a JDBC Connection</h4>
<p><a id="sthref371"></a><a id="sthref372"></a><a id="sthref373"></a><a id="sthref374"></a>One way to create a connection to an Oracle Database instance is to use <code>oracle.jdbc.OracleDataSource</code> and <code>oracle.jdbc.OracleConnection</code> objects. For example, the following code creates an <code>oracle.jdbc.OracleDataSource</code>, sets properties of the object, and then gets a JDBC <code>OracleConnection</code> object from the <code>OracleDataSource</code>.</p>
<p>The values of the properties for the <code>OracleDataSource</code> are from a <code>java.util.Properties</code> object. The <code>url</code> property has the form <code>jdbc:oracle:thin:@serverName:portNumber:sid</code>, where <code>serverName</code> is the hostname of the server on which the Oracle Database instance is running, <code>portNumber</code> is the number of the TCP/IP listener port for the database, and <code>sid</code> is the system identifier (SID) of the database instance.</p>
<div class="example">
<p class="titleinexample"><a id="CHDBJICA"></a>Example 3-1 Getting a JDBC OracleConnection</p>
<pre>oracle.jdbc.OracleConnection conn = null;
try 
{
  OracleDataSource ods = new OracleDataSource();
  ods.setURL(props.getProperty(&#34;url&#34;));
  ods.setUser(props.getProperty(&#34;user&#34;));
  ods.setPassword(props.getProperty(&#34;password&#34;));
  conn = (oracle.jdbc.OracleConnection) ods.getConnection();
}
catch(SQLException e) 
{
  System.out.println(&#34;Connection attempt failed. &#34; + e);
}
</pre>
<p><a id="sthref375"></a>In the example, the connection uses the Oracle JDBC thin driver. There are many ways to specify your connection characteristics using the <code>getConnection</code> method. There are also other ways to connect to an Oracle Database instance. For more information about Oracle JDBC connections, see <a class="olink JJDBC" href="../JJDBC/toc.htm"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a>.</p>
<p>After you have the <code>OracleConnection</code> object, you can create OLAP Java API <code>DataProvider</code> and <code>UserSession</code> objects.</p>
</div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref376"></a>
<h4 class="sect3">Creating a DataProvider and a UserSession</h4>
<p><a id="sthref377"></a><a id="sthref378"></a><a id="sthref379"></a>The following code creates a <code>DataProvider</code> and a <code>UserSession</code>. The <code>conn</code> object is the <code>OracleConnection</code> from <a href="#CHDBJICA">Example 3-1</a>.</p>
<div class="example">
<p class="titleinexample"><a id="sthref380"></a>Example 3-2 Creating a DataProvider</p>
<pre>DataProvider dp = new DataProvider();
try
{
  UserSession session = dp.createSession(conn);
}
catch(SQLException e)
{
  System.out.println(&#34;Could not create a UserSession. &#34; + e);
}
</pre></div>
<!-- class="example" -->
<p>Using the <code>DataProvider</code>, you can get the <code>MdmMetadataProvider</code>, which is described in <a href="#i1006595">&#34;Creating an MdmMetadataProvider&#34;</a>. You use the <code>DataProvider</code> to get the <code>TransactionProvider</code> and to create <code>Source</code> and <code>CursorManager</code> objects as described in <a href="query.htm#g1030586">Chapter 5, &#34;Understanding Source Objects&#34;</a> and <a href="select.htm#g1017484">Chapter 6, &#34;Making Queries Using Source Methods&#34;</a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref381"></a>
<h3 class="sect2">Closing the Connection and the DataProvider</h3>
<p>If you are finished using the OLAP Java API, but you want to continue working in your JDBC connection to the database, then use the <code>close</code> method of your <code>DataProvider</code> to release the OLAP Java API resources.</p>
<pre>dp.close();     // dp is the DataProvider
</pre>
<p><a id="sthref382"></a>When you have completed your work with the database, use the <code>OracleConnection.close</code> method.</p>
<div class="example">
<p class="titleinexample"><a id="sthref383"></a>Example 3-3 Closing the Connection</p>
<pre>try
{
  conn.close();     // conn is the OracleConnection
}
catch(SQLException e) 
{
  System.out.println(&#34;Cannot close the connection. &#34; + e);
}
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006594"></a>
<div class="sect1">
<h2 class="sect1">Overview of the Procedure for Discovering Metadata</h2>
<p><a id="sthref384"></a><a id="sthref385"></a>The OLAP Java API provides access to the data of an analytic workspace or that is in relational structures. This collection of data is the data store for the application.</p>
<p><a id="sthref386"></a>Potentially, the data store includes all of the subchemas of the <code>MdmRootSchema</code>. However, the scope of the data store that is visible when an application is running depends on the database privileges that apply to the user ID through which the connection was made. A user can see all of the <code>MdmDatabaseSchema</code> objects that exist under the <code>MdmRootSchema</code>, but the user can see the objects that are owned by an <code>MdmDatabaseSchema</code> only if the user has access rights to the metadata objects. For information on granting access rights and on object security, see <a class="olink OLAUG600" href="../OLAUG/security.htm#OLAUG600"><span class="italic">Oracle OLAP User&#39;s Guide</span></a>.</p>
<div class="sect2"><a id="sthref387"></a>
<h3 class="sect2">Purpose of Discovering the Metadata</h3>
<p><a id="sthref388"></a>The metadata objects in the data store help your application to make sense of the data. They provide a way for you to find out what data is available, how it is structured, and what the characteristics of it are.</p>
<p>Therefore, after connecting, your first step is to find out what metadata is available. You can then present choices to the end user about what data to select or calculate and how to display it.</p>
<p>After an application discovers the metadata, it typically goes on to create queries for selecting, calculating, and otherwise manipulating the data. To work with data in these ways, you must get the <code>Source</code> objects from the metadata objects. These <code>Source</code> objects specify the data for querying. For more information on <code>Source</code> objects, see <a href="query.htm#g1030586">Chapter 5, &#34;Understanding Source Objects&#34;</a>.</p>
</div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref389"></a>
<h3 class="sect2">Steps in Discovering the Metadata</h3>
<p>Before investigating the metadata, your application must make a connection to Oracle OLAP. Then, your application might perform the following steps:</p>
<ol>
<li>
<p>Create a <code>DataProvider</code>.</p>
</li>
<li>
<p>Get the <code>MdmMetadataProvider</code> from the <code>DataProvider</code>.</p>
</li>
<li>
<p>Get the <code>MdmRootSchema</code> from the <code>MdmMetadataProvider</code>.</p>
</li>
<li>
<p>Get all of the <code>MdmDatabaseSchema</code> objects or get individual ones.</p>
</li>
<li>
<p>Get the <code>MdmCube</code>, <code>MdmDimension</code>, and <code>MdmOrganizationalSchema</code> objects owned by the <code>MdmDatabaseSchema</code> objects.</p>
</li>
</ol>
<p>The next four topics in this chapter describe these steps in detail.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006595"></a>
<div class="sect1">
<h2 class="sect1">Creating an MdmMetadataProvider</h2>
<p><a id="sthref390"></a><a id="sthref391"></a><a id="sthref392"></a><a id="sthref393"></a><a id="sthref394"></a>An <code>MdmMetadataProvider</code> gives access to the metadata in a data store by providing the <code>MdmRootSchema</code>. Before you can create an <code>MdmMetadataProvider</code>, you must create a <code>DataProvider</code> as described in <a href="create.htm#g1008851">Chapter 4, &#34;Creating Metadata and Analytic Workspaces&#34;</a>. <a href="#BGBCIBGB">Example 3-4</a> creates an <code>MdmMetadataProvider</code>. In the example, <code>dp</code> is the <code>DataProvider</code>.</p>
<div class="example">
<p class="titleinexample"><a id="BGBCIBGB"></a>Example 3-4 Creating an MdmMetadataProvider</p>
<pre>MdmMetadataProvider mp = null;
try
{
  mp = (MdmMetadataProvider) dp.getMdmMetadataProvider();
}
catch (Exception e) 
{
  println(&#34;Cannot get the MDM metadata provider. &#34; + e);
}
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="i1006596"></a>
<div class="sect1">
<h2 class="sect1">Getting the MdmSchema Objects</h2>
<p>The Oracle OLAP metadata objects that provide access to the data in a data store are organized by <code>MdmSchema</code> objects. The top-level <code>MdmSchema</code> is the <code>MdmRootSchema</code>. Getting the <code>MdmRootSchema</code> is the first step in exploring the metadata in your data store. From the <code>MdmRootSchema</code>, you can get the <code>MdmDatabaseSchema</code> objects. The <code>MdmRootSchema</code> has an <code>MdmDatabaseSchema</code> for each database user. An <code>MdmDatabaseSchema</code> can have <code>MdmOrganizationalSchema</code> objects that organize the metadata objects owned by the <code>MdmDatabaseSchema</code>.</p>
<p><a href="#CCHBJCGC">Example 3-5</a> demonstrates getting the <code>MdmRootSchema</code>, the <code>MdmDatabaseSchema</code> objects under it, and any <code>MdmOrganizationalSchema</code> objects under them.</p>
<div class="example">
<p class="titleinexample"><a id="CCHBJCGC"></a>Example 3-5 Getting the MdmSchema Objects</p>
<pre>private void getSchemas(MdmMetadataProvider mp)
{
  MdmRootSchema mdmRootSchema = (MdmRootSchema)mp.getRootSchema();
  List&lt;MdmDatabaseSchema&gt; dbSchemas = mdmRootSchema.getDatabaseSchemas();
  for(MdmDatabaseSchema mdmDBSchema : dbSchemas)
  {
    println(mdmDBSchema.getName());
    getOrgSchemas(mdmDBSchema);
  } 
}

private void getOrgSchemas(MdmSchema mdmSchema)
{
  ArrayList orgSchemaList = new ArrayList();

  if (mdmSchema instanceof MdmDatabaseSchema)
  {
    MdmDatabaseSchema mdmDBSchema = (MdmDatabaseSchema) mdmSchema;
    orgSchemaList = (ArrayList) mdmDBSchema.getOrganizationalSchemas();
  }
  else if (mdmSchema instanceof MdmOrganizationalSchema)
  {
    MdmOrganizationalSchema mdmOrgSchema = (MdmOrganizationalSchema) 
                                            mdmSchema;
    orgSchemaList = (ArrayList) mdmOrgSchema.getOrganizationalSchemas();
  }

  if (orgSchemaList.size() &gt; 0)
  {
    println(&#34;The MdmOrganizationalSchema subschemas of &#34;
            + mdmSchema.getName() + &#34; are:&#34;);
    Iterator orgSchemaListItr = orgSchemaList.iterator();
    while (orgSchemaListItr.hasNext())
    {
      MdmOrganizationalSchema mdmOrgSchema = (MdmOrganizationalSchema)
                                            orgSchemaListItr.next();
      println(mdmOrgSchema.getName());
      getOrgSchemas(mdmOrgSchema);
    }
  }
  else
  {
    println(mdmSchema.getName() + &#34; does not have any&#34; +
            &#34; MdmOrganizationalSchema subschemas.&#34;);
  }
}
</pre></div>
<!-- class="example" -->
<p>Rather than getting all of the <code>MdmDatabaseSchema</code> objects, you can use the <code>getDatabaseSchema</code> method of the <code>MdmRootSchema</code> to get the schema for an individual user. Example <a href="#CCHDFFAI">Example 3-6</a> demonstrates getting the <code>MdmDatabaseSchema</code> for the GLOBAL user.</p>
<div class="example">
<p class="titleinexample"><a id="CCHDFFAI"></a>Example 3-6 Getting a Single MdmDatabaseSchema</p>
<pre>MdmDatabaseSchema mdmGlobalSchema = mdmRootSchema.getDatabaseSchema(&#34;GLOBAL&#34;);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="i1006597"></a>
<div class="sect1">
<h2 class="sect1">Getting the Contents of an MdmSchema</h2>
<p><a id="sthref395"></a>From an <code>MdmSchema</code>, you can get all of the subschema, <code>MdmCube</code>, <code>MdmPrimaryDimension</code>, and <code>MdmMeasure</code> objects that it contains. Also, the <code>MdmRootSchema</code> has an <code>MdmMeasureDimension</code> that has a <code>List</code> of all of the available <code>MdmMeasure</code> objects.</p>
<p>If you want to display all of the dimensions and methods that are owned by a particular user, then you could get the lists of dimensions and measures from the <code>MdmDatabaseSchema</code> for that user. <a href="#CCHFDFFD">Example 3-7</a> gets the dimensions and measures from the <code>MdmDatabaseSchema</code> from <a href="#CCHDFFAI">Example 3-6</a>. It displays the name of each dimension and measure.</p>
<div class="example">
<p class="titleinexample"><a id="CCHFDFFD"></a>Example 3-7 Getting the Dimensions and Measures of an MdmDatabaseSchema</p>
<pre>private void getObjects(MdmDatabaseSchema mdmGlobalSchema)
{
  List dimList = mdmGlobalSchema.getDimensions();
  String objName = mdmGlobalSchema.getName() + &#34; schema&#34;;
  getNames(dimList, &#34;dimensions&#34;, objName);

  List measList = mdmGlobalSchema.getMeasures();
  getNames(measList, &#34;measures&#34;, objName);
}

private void getNames(List objectList, String objTypes, String objName)
{
  println(&#34;The &#34; + objTypes + &#34; of the &#34; + objName + &#34; are:&#34;);
  Iterator objListItr = objectList.iterator();
  while (objListItr.hasNext())
  {
    MdmObject mdmObj = (MdmObject) objListItr.next();
    println(mdmObj.getName());
  }
}
</pre></div>
<!-- class="example" -->
<p>The output of <a href="#CCHFDFFD">Example 3-7</a> is the following.</p>
<pre>The dimensions of the GLOBAL schema are:
CHANNEL_AWJ
CUSTOMER_AWJ
PRODUCT_AWJ
TIME_AWJ
The measures of the GLOBAL schema are:
UNIT_COST
UNIT_PRICE
SALES
UNITS
COST
</pre>
<p>To display just the dimensions and measures associated with an <code>MdmCube</code>, you could use the <code>findOrCreateCube</code> method of an <code>MdmDatabaseSchema</code> to get the cube and then get the dimensions and measures of the cube. <a href="#CCHBAAEC">Example 3-8</a> gets an <code>MdmCube</code> from the <code>MdmDatabaseSchema</code> of <a href="#CCHDFFAI">Example 3-6</a> and displays the names of the dimensions and measures associated with it using the <code>getNames</code> method of <a href="#CCHFDFFD">Example 3-7</a>.</p>
<div class="example">
<p class="titleinexample"><a id="CCHBAAEC"></a>Example 3-8 Getting the Dimensions and Measures of an MdmCube</p>
<pre>private void getCubeObjects(MdmDatabaseSchema mdmGlobalSchema)
{
  MdmCube mdmUnitsCube = (MdmCube)
    mdmGlobalSchema.findOrCreateCube(&#34;PRICE_CUBE_AWJ&#34;);
  String objName = mdmUnitsCube.getName() + &#34; cube&#34;;
  List dimList = mdmUnitsCube.getDimensions();
  getNames(dimList, &#34;dimensions&#34;, objName);

  List&lt;MdmMeasure&gt; measList = mdmUnitsCube.getMeasures();
  getNames(measList, &#34;measures&#34;, objName);
}
</pre></div>
<!-- class="example" -->
<p>The output of <a href="#CCHBAAEC">Example 3-8</a> is the following.</p>
<pre>The dimensions of the PRICE_CUBE_AWJ cube are:
TIME_AWJ
PRODUCT_AWJ
The measures of the PRICE_CUBE_AWJ cube are:
UNIT_COST
UNIT_PRICE
</pre></div>
<!-- class="sect1" -->
<a id="i1006598"></a>
<div class="sect1">
<h2 class="sect1">Getting the Objects Contained by an MdmPrimaryDimension</h2>
<p>In discovering the metadata objects to use in creating queries and displaying the data, an application typically gets the <code>MdmSubDimension</code> components of an <code>MdmPrimaryDimension</code> and the <code>MdmAttribute</code> objects that are associated with the dimension. This topic demonstrates getting the components and attributes of a dimension.</p>
<div class="sect2"><a id="sthref396"></a>
<h3 class="sect2">Getting the Hierarchies and Levels of an MdmPrimaryDimension</h3>
<p><a id="sthref397"></a>An <code>MdmPrimaryDimension</code> has zero or more component <code>MdmHierarchy</code> objects, which you can obtain by calling the <code>getHierarchies</code> method of the dimension. That method returns a <code>List</code> of <code>MdmHierarchy</code> objects. The levels of an <code>MdmPrimaryDimension</code> are represented by <code>MdmDimensionLevel</code> objects.</p>
<p>If an <code>MdmHierarchy</code> is an <code>MdmLevelHierarchy</code>, then it has <code>MdmHierarchyLevel</code> objects that associate <code>MdmDimensionLevel</code> objects with it. You can obtain the <code>MdmHierarchyLevel</code> objects by calling the <code>getHierarchyLevels</code> method of the <code>MdmLevelHierarchy</code>.</p>
<p><a href="#CHDJAEGF">Example 3-9</a> gets an <code>MdmPrimaryDimension</code> from the <code>MdmDatabaseSchema</code> of <a href="#CCHDFFAI">Example 3-6</a> and displays the names of the hierarchies and the levels associated with them.</p>
<div class="example">
<p class="titleinexample"><a id="CHDJAEGF"></a>Example 3-9 Getting the Hierarchies and Levels of a Dimension</p>
<pre>private void getHierarchiesAndLevels(MdmDatabaseSchema mdmGlobalSchema)
{
  MdmPrimaryDimension mdmCustDim = (MdmPrimaryDimension)
    mdmGlobalSchema.findOrCreateStandardDimension(&#34;CUSTOMER_AWJ&#34;);
  List&lt;MdmHierarchy&gt; hierList = mdmCustDim.getHierarchies();
  println(&#34;The hierarchies of the dimension are:&#34;);
  for (MdmHierarchy mdmHier : hierList)
  {
    println(mdmHier.getName());
    if (mdmHier instanceof MdmLevelHierarchy)
    {
      MdmLevelHierarchy mdmLevelHier = (MdmLevelHierarchy) mdmHier; 
      List&lt;MdmHierarchyLevel&gt; hierLevelList = mdmLevelHier.getHierarchyLevels();
      println(&#34;  The levels of the hierarchy are:&#34;);
      for (MdmHierarchyLevel mdmHierLevel : hierLevelList)
      {
        println(&#34;  &#34; + mdmHierLevel.getName());
      }
    }
  }
}
</pre></div>
<!-- class="example" -->
<p>The output of <a href="#CHDJAEGF">Example 3-9</a> is the following.</p>
<pre>The hierarchies of the dimension are:
SHIPMENTS
  The levels of the hierarchy are:
  TOTAL_CUSTOMER
  REGION
  WAREHOUSE
  SHIP_TO
MARKETS
  The levels of the hierarchy are:
  TOTAL_MARKET
  MARKET_SEGMENT
  ACCOUNT
  SHIP_TO
</pre></div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref398"></a>
<h3 class="sect2">Getting the Attributes for an MdmPrimaryDimension</h3>
<p><a id="sthref399"></a>An <code>MdmPrimaryDimension</code> and the hierarchies and levels of it have associated <code>MdmAttribute</code> objects. You can obtain many of the attributes by calling the <code>getAttributes</code> method of the dimension, hierarchy, or level. That method returns a <code>List</code> of <code>MdmAttribute</code> objects that an application has explicitly added to or specified for the <code>MdmPrimaryDimension</code>. You can obtain specific attributes, such as a short or long description attribute or a parent attribute by calling the appropriate method of an <code>MdmPrimaryDimension</code> or an <code>MdmHierarchy</code>.</p>
<p><a href="#CHDDCHGA">Example 3-10</a> demonstrates getting the <code>MdmAttribute</code> objects for an <code>MdmPrimaryDimension</code>. It also gets the parent attribute separately. The example displays the names of the <code>MdmAttribute</code> objects. The attribute names that end in <code>_LD</code> and <code>_SD</code> are the attributes that are added to the <code>MdmHierarchyLevel</code> objects, as mentioned in <a href="metadata.htm#BABBJDDC">&#34;Populating OLAP Views with Hierarchical Attribute Values&#34;</a>.</p>
<div class="example">
<p class="titleinexample"><a id="CHDDCHGA"></a>Example 3-10 Getting the MdmAttribute Objects of an MdmPrimaryDimension</p>
<pre>private void getAttributes(MdmDatabaseSchema mdmGlobalSchema)
{
  MdmTimeDimension mdmTimeDim = (MdmTimeDimension)
    mdmGlobalSchema.findOrCreateTimeDimension(&#34;TIME_AWJ&#34;);
  List attrList = mdmTimeDim.getAttributes();
  Iterator attrListItr = attrList.iterator();
  println(&#34;The MdmAttribute objects of &#34; + mdmTimeDim.getName() + &#34; are:&#34;);
  while (attrListItr.hasNext()) 
  {
    MdmAttribute mdmAttr = (MdmAttribute) attrListItr.next();
    println(&#34;  &#34; + mdmAttr.getName());
  }

  MdmAttribute mdmParentAttr = mdmTimeDim.getParentAttribute();
  println(&#34;The parent attribute is &#34; + mdmParentAttr.getName() + &#34;.&#34;);
}
</pre></div>
<!-- class="example" -->
<p>The output of <a href="#CHDDCHGA">Example 3-10</a> is the following.</p>
<pre>The MdmAttribute objects of TIME_AWJ are:
 LONG_DESCRIPTION
 SHORT_DESCRIPTION
 END_DATE
 TIME_SPAN
 TOTAL_TIME_LD
 YEAR_LD
 QUARTER_LD
 MONTH_LD
 TOTAL_TIME_SD
 YEAR_SD
 QUARTER_SD
 MONTH_SD
 TOTAL_TIME_ED
 YEAR_ED
 QUARTER_ED
 MONTH_ED
 TOTAL_TIME_TS
 YEAR_TS
 QUARTER_TS
 MONTH_TS
The parent attribute is PARENT_ATTRIBUTE.
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006599"></a>
<div class="sect1">
<h2 class="sect1">Getting the Source for a Metadata Object</h2>
<p>A metadata object represents a set of data, but it does not provide the ability to create queries on that data. The object is informational. It records the existence, structure, and characteristics of the data. It does not give access to the data values.</p>
<p>To access the data values for a metadata object, an application gets the <code>Source</code> object for that metadata object. The <code>Source</code> for a metadata object is a primary <code>Source</code>.</p>
<p><a id="sthref400"></a><a id="sthref401"></a>To get the primary <code>Source</code> for a metadata object, an application calls the <code>getSource</code> method of that metadata object. For example, if an application needs to display the quantity of product units sold during the year 1999, then it must use the <code>getSource</code> method of the <code>MdmMeasure</code> for that data, which is <code>mdmUnits</code> in the following example.</p>
<div class="example">
<p class="titleinexample"><a id="sthref402"></a>Example 3-11 Getting a Primary Source for a Metadata Object</p>
<pre>Source units = mdmUnits.getSource();
</pre>
<p>For more information about getting and working with primary <code>Source</code> objects, see <a href="query.htm#g1030586">Chapter 5, &#34;Understanding Source Objects&#34;</a>.</p>
</div>
<!-- class="example" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4769">
<tr>
<td class="cellalignment4776">
<table class="cellalignment4774">
<tr>
<td class="cellalignment4773"><a href="metadata.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4773"><a href="create.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4778">
<table class="cellalignment4772">
<tr>
<td class="cellalignment4773"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4773"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4773"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4773"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4773"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4773"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>