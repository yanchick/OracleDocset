<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-5832"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Data%20Type%20Support%20and%20Conversion%20in%20Oracle%20Database%20Provider%20for%20DRDA"></a><title>Data Type Support and Conversion in Oracle Database Provider for DRDA</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1022"/>
<meta name="description" content="For customers who have a large investment in DB2-based applications, this document describes how to migrate to Oracle Database while keeping these applications largely unchanged."/>
<meta name="dcterms.created" content="2014-06-25T19:35:18Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Provider for DRDA User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E55482-01"/>
<meta name="dcterms.isVersionOf" content="DRDAS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2011, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="diagnostics.htm" title="Previous" type="text/html"/>
<link rel="Next" href="data_dictionary.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E55482-01.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">13/24</span> <!-- End Header -->
<div id="DRDAS241" class="chapter"><a id="CDEJFCBG"></a>
<h1 class="chapter"><span class="secnum">7</span> Data Type Support and Conversion in Oracle Database Provider for DRDA</h1>
<p>This chapter discusses data type support in Oracle, and conversion between Oracle and DRDA data types.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#CDEIIIDG">Overview of Data Type Conversion</a></p>
</li>
<li>
<p><a href="#CDEGDJIA">Numerical Range Considerations; General</a></p>
</li>
<li>
<p><a href="#CDEJAFEC">Numerical Range Considerations, for COBOL Users</a></p>
</li>
<li>
<p><a href="#CDECAJFD">Converting DRDA Data Types to Oracle Data Types</a></p>
</li>
<li>
<p><a href="#CDEHADHG">Converting Oracle Data Type to DRDA</a></p>
</li>
<li>
<p><a href="#CDECJHHB">Data Type Equivalence and Remapping</a></p>
</li>
</ul>
<a id="CDEIIIDG"></a>
<div id="DRDAS242" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Overview of Data Type Conversion</h2>
<p>DRDA utilizes <span class="italic">Formatted Data Object Content Architecture (FD:OCA)</span> for datatype encoding. Several types do not have a direct analog to Oracle native types, and require conversion. Also, some Oracle data types have no direct encoding support in FD:OCA.For example, consider Oracle <code>NUMBER</code>, which may contain a wide range of values, both <span class="italic">integers</span> and <span class="italic">floating point</span>. This duality prevents it from being mapped to a specific DRDA type, to mitigate loss of value of the number. Any choice of type will have some loss of either precision or scale at extreme ranges of value.</p>
<p>There are two data type conversions used by Oracle Database Provider for DRDA: conversion of DRDA MetaData Descriptors to Oracle OCI interface types, and conversion of Oracle column types to DRDA MetaData Descriptors. For application programmers, these are described through the SQL Type of the bind variable or described column type. See sections <a href="#CDECAJFD">&#34;Converting DRDA Data Types to Oracle Data Types&#34;</a> and <a href="#CDEHADHG">&#34;Converting Oracle Data Type to DRDA&#34;</a></p>
<p>A general mechanism for mapping Oracle <code>NUMBER</code> is covered in section <a href="#CDECJHHB">&#34;Data Type Equivalence and Remapping&#34;</a>.</p>
</div>
<!-- class="sect1" -->
<a id="CDEGDJIA"></a>
<div id="DRDAS243" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Numerical Range Considerations; General</h2>
<p>When converting between Oracle <code>NUMBER</code>, IEEE floating point, IBM Hexadecimal floating point (HEX floating point, S390 or System390 floating point), and Decimal floating point (<code>DECFLOAT</code>) datatypes, note that they have different ranges and capabilities. For example, all values of <code>IBM HEX FLOAT</code> bind variables in a client-side program fit in an Oracle <code>NUMBER</code>, but not all values of Oracle <code>NUMBER</code> may be returned correctly in an <code>IBM HEX FLOAT</code>; <code>DECFLOAT34</code> is a better choice.</p>
<p>Some other considerations include the following:</p>
<ul>
<li>
<p><span class="bold">Infinities.</span> Some floating point types support positive and negative infinities.</p>
<p>When infinities are used for datatypes that don&#39;t support them, the highest possible number for positive infinities and its negative for negative infinities is used.</p>
</li>
<li>
<p><span class="bold">Floating Point.</span> IEEE <code>FLOAT</code> columns may be defined in Oracle with types of <code>BINARY_FLOAT</code> and <code>BINARY_DOUBLE</code>. In DB2 z/OS the floating point types (<code>REAL</code>, <code>FLOAT</code>, <code>DOUBLE</code> and <code>DOUBLE PRECISION</code>) are IBM HEX floating point. In DB2/400 and DB2 LUW, the floating point types (<code>REAL</code>, <code>FLOAT</code>, <code>DOUBLE</code> and <code>DOUBLE PRECISION</code>) are IEEE floating point.</p>
</li>
<li>
<p><span class="bold">Not a Number.</span> Some data types support Not A Number (NAN), a special value to indicate either that no value was assigned, or the result of a computation is invalid or undefined.</p>
</li>
</ul>
<div id="DRDAS244" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref113"></a>
<h3 class="sect2">Oracle NUMBER</h3>
<p>Oracle <code>NUMBER</code> has the following characteristics:</p>
<p class="subhead2"><a id="DRDAS245"></a><a id="sthref114"></a>Lower Range</p>
<p>1E-130</p>
<p class="subhead2"><a id="DRDAS246"></a><a id="sthref115"></a>Upper Range</p>
<p>9.999 999 999 999 999 999 999 999 999 999 999 999 9E+125</p>
<p class="subhead2"><a id="DRDAS247"></a><a id="sthref116"></a>Infinity</p>
<p>Supported for both negative and positive infinity</p>
<p class="subhead2"><a id="DRDAS248"></a><a id="sthref117"></a>Not A Number</p>
<p>Not supported</p>
</div>
<!-- class="sect2" -->
<div id="DRDAS249" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref118"></a>
<h3 class="sect2">FLOAT (IBM HEX or S390)</h3>
<p>The following characteristics apply to <code>FLOAT</code>, <code>DOUBLE</code> and <code>LONG DOUBLE</code> sub data types.</p>
<p class="subhead2"><a id="DRDAS250"></a><a id="sthref119"></a>Lower Range</p>
<p>5.397605 x 10<sup>-79</sup></p>
<p class="subhead2"><a id="DRDAS251"></a><a id="sthref120"></a>Upper Range</p>
<p>7.237005 x 10<sup>+75</sup></p>
<p class="subhead2"><a id="DRDAS252"></a><a id="sthref121"></a>Infinity</p>
<p>Not supported</p>
<p class="subhead2"><a id="DRDAS253"></a><a id="sthref122"></a>Not A Number</p>
<p>Not supported</p>
</div>
<!-- class="sect2" -->
<div id="DRDAS254" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref123"></a>
<h3 class="sect2">FLOAT (IEEE)</h3>
<p>The following characteristics apply to <code>FLOAT</code> (Oracle <code>BINARY_FLOAT</code>), <code>DOUBLE</code> (Oracle <code>BINARY_DOUBLE</code>), and <code>LONG DOUBLE</code> sub data types.</p>
<p class="subhead2"><a id="DRDAS255"></a><a id="sthref124"></a>Infinity</p>
<p>Supported for both positive and negative infinity</p>
<p class="subhead2"><a id="DRDAS256"></a><a id="sthref125"></a>Not A Number</p>
<p>Supported</p>
<p>The bounds for the subtypes follow:</p>
<p class="subhead2"><a id="DRDAS257"></a><a id="sthref126"></a>Lower Range</p>
<p><code>FLOAT</code> (Oracle <code>BINARY_FLOAT</code>): 1.175 494 x 10<sup>-38</sup></p>
<p><code>DOUBLE</code> (Oracle <code>BINARY_DOUBLE</code>): 2.225 074 x 10<sup>-308</sup></p>
<p><code>LONG DOUBLE</code>: 3.362 103 x 10<sup>-4932</sup></p>
<p class="subhead2"><a id="DRDAS258"></a><a id="sthref127"></a>Upper Range</p>
<p><code>FLOAT</code> (Oracle <code>BINARY_FLOAT</code>): 3.402 823 x 10<sup>+38</sup></p>
<p><code>DOUBLE</code> (Oracle <code>BINARY_DOUBLE</code>): 1.797 693 x 10<sup>+308</sup></p>
<p><code>LONG DOUBLE</code>: 1.189 731 x 10<sup>+4932</sup></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS259" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref128"></a>
<h3 class="sect2">DECFLOAT</h3>
<p>The following characteristics apply to <code>DECFLOAT7</code>, <code>DECFLOAT16</code>, and <code>DECFLOAT34</code> sub data types.</p>
<p class="subhead2"><a id="DRDAS260"></a><a id="sthref129"></a>Infinity</p>
<p>Supported for both positive and negative infinity</p>
<p class="subhead2"><a id="DRDAS261"></a><a id="sthref130"></a>Not A Number</p>
<p>Supported</p>
<p>The bounds for the subtypes follow:</p>
<p class="subhead2"><a id="DRDAS262"></a><a id="sthref131"></a>Lower Range</p>
<p><code>DECFLOAT7</code>: 0.000 001 x 10<sup>-95</sup></p>
<p><code>DECFLOAT16</code>: 0.000 000 000 000 001 x 10<sup>-383</sup></p>
<p><code>DECFLOAT34</code>: 0.000 000 000 000 000 000 000 000 000 000 001 x 10<sup>-6143</sup></p>
<p class="subhead2"><a id="DRDAS263"></a><a id="sthref132"></a>Upper Range</p>
<p><code>DECFLOAT7</code>: 9.999 999 x 10<sup>+96</sup></p>
<p><code>DECFLOAT16</code>: 9.999 999 999 999 999 x 10<sup>+384</sup></p>
<p><code>DECFLOAT34</code>: 9.999 999 999 999 999 999 999 999 999 999 999 x 10<sup>+6144</sup></p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CDEJAFEC"></a>
<div id="DRDAS264" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Numerical Range Considerations, for COBOL Users</h2>
<p>DRDA databases offer three options for integer types: <code>SMALLINT</code> (2 binary bytes), <code>INTEGER</code> (4 binary bytes), and <code>BIGINT</code> (8 binary bytes). During conversion, Oracle columns that hold equivalent values must be defined based on usage rather than on the type used in the DB2 <code>CREATE TABLE</code> definition.</p>
<p>The actual range of DRDA <code>SMALLINT</code>, <code>INTEGER</code> and <code>BIGINT</code> follows:</p>
<ul>
<li>
<p><code>SMALLINT</code> has a lower bound of <code>-32,768</code> and an upper bound of <code>32,767</code></p>
</li>
<li>
<p><code>INTEGER</code> has a lower bound of <code>-2,147,483,648</code> and an upper bound of <code>2,147,483,647</code></p>
</li>
<li>
<p><code>BIGINT</code> has a lower bound of <code>-9,223,372,036,854,775,808</code> and an upper bound of <code>9,223,372,036,854,775,807</code></p>
</li>
</ul>
<p>However, at the level of the application, the COBOL variables that hold these DRDA column values may be declared either with a fixed number of decimal digits, or with the full binary precision of the corresponding DRDA integer datatypes.</p>
<p>In COBOL, the equivalent binary integer datatypes are defined as follows:</p>
<ul>
<li>
<p><code>USAGE</code> of <code>BINARY</code>, <code>COMPUTATIONAL</code>, <code>COMP</code>, <code>COMPUTATIONAL-4</code>, and <code>COMP-4</code>; these are equivalent</p>
</li>
<li>
<p><code>PICTURE</code> of <code>S9(1-4)</code> for a 2-byte integer, <code>S9(5-9)</code> for a 4-byte integer, and <code>S9(10-18)</code> for an 8-byte integer.</p>
</li>
</ul>
<p>The value is normally limited to the number of digits in the picture.</p>
<p>For example <code>PICTURE S9(4) COMP</code> is a 2-byte integer that normally ranges from <code>-32,768</code> to <code>+32,767</code>. However, the generated COBOL code only allows the value to range from <code>-9,999</code> to <code>+9,999</code>. When using these types of bind variables exclusively to access and update DRDA <code>SMALLINT</code>, <code>INTEGER</code>, and <code>BIGINT</code> columns, define the columns in Oracle as <code>NUMBER(</code><code><span class="codeinlineitalic">n</span></code><code>)</code>, where <code><span class="codeinlineitalic">n</span></code> matches the above <code>PICTURE S9(</code><code><span class="codeinlineitalic">n</span></code><code>)</code> definition.</p>
<p>When using <code>BINARY</code>, <code>COMPUTATIONAL</code>, <code>COMP</code>, <code>COMPUTATIONAL-4</code>, and <code>COMP-4</code> COBOL variables with the <code>TRUNC(BIN)</code> COBOL compiler option, the binary integers may range to the full bounds of the data type. Using <code>COMPUTATIONAL-5</code> or <code>COMP-5</code> has the same effect, regardless whether the <code>TRUNC</code> compiler option is in effect. When programming in COBOL, C, PL/I, or Assembler with a full range of the binary integers, define the Oracle column as <code>NUMBER(</code><code><span class="codeinlineitalic">n</span></code><code>+1)</code>, where <code><span class="codeinlineitalic">n</span></code> matches the above <code>PICTURE S9(</code><code><span class="codeinlineitalic">n</span></code><code>)</code> definition.</p>
<p>Based on data type and usage in DRDA, here are the recommended substitute Oracle data types:</p>
<p class="subhead2"><a id="DRDAS265"></a>Used with COBOL COMP:</p>
<ul>
<li>
<p><code>SMALLINT</code> should be converted to Oracle <code>NUMBER(4)</code></p>
</li>
<li>
<p><code>INTEGER</code> should be converted to Oracle <code>NUMBER(9)</code></p>
</li>
<li>
<p><code>BIGINT</code> should be converted to Oracle <code>NUMBER(18)</code></p>
</li>
</ul>
<p class="subhead2"><a id="DRDAS266"></a>Used with COBOL COMP, TRUNC(BIN), COMP-5, C, PL/I, or Assembler binary integer variables:</p>
<ul>
<li>
<p><code>SMALLINT</code> should be converted to Oracle <code>NUMBER(5)</code></p>
</li>
<li>
<p><code>INTEGER</code> should be converted to Oracle <code>NUMBER(10)</code></p>
</li>
<li>
<p><code>BIGINT</code> should be converted to Oracle <code>NUMBER(19)</code></p>
</li>
</ul>
<p>When using the full range of binary integer values, it is advisable to implement Oracle constraints and limit the value to the range of the corresponding datatype.</p>
<p>For example, a DRDA <code>SMALLINT</code> gets an equivalent Oracle <code>NUMBER</code> column that supports a full range of <code>SMALLINT</code> values, only, as demonstrated in <a href="#CDEJDADG">Example 7-1</a>.</p>
<div id="DRDAS267" class="example">
<p class="titleinexample"><a id="CDEJDADG"></a>Example 7-1 Constraining Oracle NUMBER to Exactly Match DRDA SMALLINT</p>
<pre>CREATE TABLE smint_tab
  (smint NUMBER(5) 
         CONSTRAINT check_smallint CHECK (smint BETWEEN -32768 AND 32767)
  )
</pre></div>
<!-- class="example" -->
<p>Note however that there is a performance penalty for specifying this type of check constraint, Oracle verifies all constraints every time the column is updated.</p>
</div>
<!-- class="sect1" -->
<a id="CDECAJFD"></a>
<div id="DRDAS268" class="sect1">
<h2 class="sect1">Converting DRDA Data Types to Oracle Data Types</h2>
<p>This section describes the mappings between DRDA and Oracle data types.</p>
<p>Note the following abbreviations:</p>
<ul>
<li>
<p>In a Single Byte Character Set (SBCS), the column can only contain single byte data.</p>
</li>
<li>
<p>In a Multi-Byte Character Set (MBCS), the column may contain a combination of single-byte and multi-byte characters.</p>
</li>
</ul>
<div id="DRDAS269" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref133"></a>
<h3 class="sect2">INTEGER</h3>
<p>4-byte binary number</p>
<p class="subhead2"><a id="DRDAS270"></a><a id="sthref134"></a>SQL Type</p>
<p>496, 497</p>
<p class="subhead2"><a id="DRDAS271"></a><a id="sthref135"></a>Size</p>
<p>4 bytes</p>
<p class="subhead2"><a id="DRDAS272"></a><a id="sthref136"></a>Oracle Type</p>
<p><code>NUMBER(10)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS273" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref137"></a>
<h3 class="sect2">SMALLINT</h3>
<p>2-byte binary number</p>
<p class="subhead2"><a id="DRDAS274"></a><a id="sthref138"></a>SQL Type</p>
<p>500, 501</p>
<p class="subhead2"><a id="DRDAS275"></a><a id="sthref139"></a>Size</p>
<p>2 bytes</p>
<p class="subhead2"><a id="DRDAS276"></a><a id="sthref140"></a>Oracle Type</p>
<p><code>NUMBER(5)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS277" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref141"></a>
<h3 class="sect2">BIGINT</h3>
<p>8-byte binary number</p>
<p class="subhead2"><a id="DRDAS278"></a><a id="sthref142"></a>SQL Type</p>
<p>492, 493</p>
<p class="subhead2"><a id="DRDAS279"></a><a id="sthref143"></a>Size</p>
<p>8 bytes</p>
<p class="subhead2"><a id="DRDAS280"></a><a id="sthref144"></a>Oracle Type</p>
<p><code>NUMBER(19)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS281" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref145"></a>
<h3 class="sect2">float</h3>
<p>long double-precision (16 bytes)</p>
<p class="subhead2"><a id="DRDAS282"></a><a id="sthref146"></a>SQL Type</p>
<p>480, 481</p>
<p class="subhead2"><a id="DRDAS283"></a><a id="sthref147"></a>Range</p>
<p><code>54&le; b&le;126</code></p>
<p class="subhead2"><a id="DRDAS284"></a><a id="sthref148"></a>Oracle Type</p>
<p><code>NUMBER</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS285" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref149"></a>
<h3 class="sect2">DOUBLE PRECISION or FLOAT(b)</h3>
<p>double-precision (8 bytes)</p>
<p class="subhead2"><a id="DRDAS286"></a><a id="sthref150"></a>SQL Type</p>
<p>480, 481</p>
<p class="subhead2"><a id="DRDAS287"></a><a id="sthref151"></a>Range</p>
<p><code>22&le; b&le; 53</code></p>
<p class="subhead2"><a id="DRDAS288"></a><a id="sthref152"></a>Oracle Type</p>
<p><code>BINARY_DOUBLE</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS289" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref153"></a>
<h3 class="sect2">REAL or FLOAT(b)</h3>
<p>Single-precision (4 bytes)</p>
<p class="subhead2"><a id="DRDAS290"></a><a id="sthref154"></a>SQL Type</p>
<p>480, 481</p>
<p class="subhead2"><a id="DRDAS291"></a><a id="sthref155"></a>Range</p>
<p><code>1&le;b&le;21</code></p>
<p class="subhead2"><a id="DRDAS292"></a><a id="sthref156"></a>Oracle Type</p>
<p><code>BINARY_FLOAT</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS293" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref157"></a>
<h3 class="sect2">DECIMAL(p,s)</h3>
<p>precision and scale packed decimal</p>
<p class="subhead2"><a id="DRDAS294"></a><a id="sthref158"></a>SQL Type</p>
<p>484, 485</p>
<p class="subhead2"><a id="DRDAS295"></a><a id="sthref159"></a>Range</p>
<p><code>1&le;p&le;31</code>, <code>1&le;s&le;31</code></p>
<p class="subhead2"><a id="DRDAS296"></a><a id="sthref160"></a>Oracle Type</p>
<p><code>NUMBER(p,s)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS297" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref161"></a>
<h3 class="sect2">DECIMAL(p,s) zoned</h3>
<p>precision and scale zoned decimal</p>
<p class="subhead2"><a id="DRDAS298"></a><a id="sthref162"></a>SQL Type</p>
<p>488, 489</p>
<p class="subhead2"><a id="DRDAS299"></a><a id="sthref163"></a>Range</p>
<p><code>1&le;p&le;31</code>, <code>1&le;s&le;31</code></p>
<p class="subhead2"><a id="DRDAS300"></a><a id="sthref164"></a>Oracle Type</p>
<p><code>NUMBER(p,s)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS301" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref165"></a>
<h3 class="sect2">NUMERIC(p,s)</h3>
<p>precision and scale character decimal</p>
<p class="subhead2"><a id="DRDAS302"></a><a id="sthref166"></a>SQL Type</p>
<p>504, 505</p>
<p class="subhead2"><a id="DRDAS303"></a><a id="sthref167"></a>Range</p>
<p><code>1&le;p&le;31</code>, <code>1&le;s&le;31</code></p>
<p class="subhead2"><a id="DRDAS304"></a><a id="sthref168"></a>Oracle Type</p>
<p><code>NUMBER(p,s)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS305" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref169"></a>
<h3 class="sect2">DECFLOAT(n=34)</h3>
<p>precision and scale, with exponent; subject to loss</p>
<p class="subhead2"><a id="DRDAS306"></a><a id="sthref170"></a>SQL Type</p>
<p>996, 997</p>
<p class="subhead2"><a id="DRDAS307"></a><a id="sthref171"></a>Range</p>
<p>n=34</p>
<p class="subhead2"><a id="DRDAS308"></a><a id="sthref172"></a>Oracle Type</p>
<p><code>NUMBER</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS309" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref173"></a>
<h3 class="sect2">DECFLOAT(n=16)</h3>
<p>precision and scale, with exponent; subject to loss</p>
<p class="subhead2"><a id="DRDAS310"></a><a id="sthref174"></a>SQL Type</p>
<p>996, 997</p>
<p class="subhead2"><a id="DRDAS311"></a><a id="sthref175"></a>Range</p>
<p>n=16</p>
<p class="subhead2"><a id="DRDAS312"></a><a id="sthref176"></a>Oracle Type</p>
<p><code>NUMBER</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS313" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref177"></a>
<h3 class="sect2">CHAR(n)</h3>
<p>sbcs and mixed</p>
<p class="subhead2"><a id="DRDAS314"></a><a id="sthref178"></a>SQL Type</p>
<p>452,453</p>
<p class="subhead2"><a id="DRDAS315"></a><a id="sthref179"></a>Range</p>
<p>1&le; n&le;255</p>
<p class="subhead2"><a id="DRDAS316"></a><a id="sthref180"></a>Oracle Type</p>
<p><code>CHAR</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS317" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref181"></a>
<h3 class="sect2">CHAR(n) for Bit Data</h3>
<p>byte</p>
<p class="subhead2"><a id="DRDAS318"></a><a id="sthref182"></a>SQL Type</p>
<p>452,453</p>
<p class="subhead2"><a id="DRDAS319"></a><a id="sthref183"></a>Range</p>
<p>1&le; n&le;255</p>
<p class="subhead2"><a id="DRDAS320"></a><a id="sthref184"></a>Oracle Type</p>
<p><code>RAW</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS321" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref185"></a>
<h3 class="sect2">VARCHAR(n)</h3>
<p>sbcs</p>
<p class="subhead2"><a id="DRDAS322"></a><a id="sthref186"></a>SQL Type</p>
<p>448,449</p>
<p class="subhead2"><a id="DRDAS324"></a><a id="sthref187"></a>Oracle Type</p>
<p>VARCHAR2</p>
</div>
<!-- class="sect2" -->
<div id="DRDAS325" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref188"></a>
<h3 class="sect2">VARCHAR(n)</h3>
<p>mixed</p>
<p class="subhead2"><a id="DRDAS326"></a><a id="sthref189"></a>SQL Type</p>
<p>448,449</p>
<p class="subhead2"><a id="DRDAS328"></a><a id="sthref190"></a>Oracle Type</p>
<p><code>VARCHAR2</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS329" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref191"></a>
<h3 class="sect2">VARCHAR(n) for Bit Data</h3>
<p>byte</p>
<p class="subhead2"><a id="DRDAS330"></a><a id="sthref192"></a>SQL Type</p>
<p>448,449</p>
<p class="subhead2"><a id="DRDAS331"></a><a id="sthref193"></a>Range</p>
<p>1&le; n&le;2000</p>
<p class="subhead2"><a id="DRDAS332"></a><a id="sthref194"></a>Oracle Type</p>
<p><code>RAW</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS333" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref195"></a>
<h3 class="sect2">VARCHAR(n)</h3>
<p>sbcs</p>
<p class="subhead2"><a id="DRDAS334"></a><a id="sthref196"></a>SQL Type</p>
<p>456,457</p>
<p class="subhead2"><a id="DRDAS335"></a><a id="sthref197"></a>Range</p>
<p>1&le; n&le;32767</p>
<p class="subhead2"><a id="DRDAS336"></a><a id="sthref198"></a>Oracle Type</p>
<p><code>LONG</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS337" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref199"></a>
<h3 class="sect2">VARCHAR(n)</h3>
<p>mixed</p>
<p class="subhead2"><a id="DRDAS338"></a><a id="sthref200"></a>SQL Type</p>
<p>456,457</p>
<p class="subhead2"><a id="DRDAS339"></a><a id="sthref201"></a>Range</p>
<p>1&le; n&le;32767</p>
<p class="subhead2"><a id="DRDAS340"></a><a id="sthref202"></a>Oracle Type</p>
<p><code>LONG</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS341" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref203"></a>
<h3 class="sect2">VARCHAR(n) for Bit Data</h3>
<p>byte</p>
<p class="subhead2"><a id="DRDAS342"></a><a id="sthref204"></a>SQL Type</p>
<p>456,457</p>
<p class="subhead2"><a id="DRDAS343"></a><a id="sthref205"></a>Range</p>
<p>1&le; n&le;32767</p>
<p class="subhead2"><a id="DRDAS344"></a><a id="sthref206"></a>Oracle Type</p>
<p><code>LONG RAW</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS345" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref207"></a>
<h3 class="sect2">char(n+1)</h3>
<p>sbcs</p>
<p class="subhead2"><a id="DRDAS346"></a><a id="sthref208"></a>SQL Type</p>
<p>460,461</p>
<p class="subhead2"><a id="DRDAS347"></a><a id="sthref209"></a>Range</p>
<p>1&le; n&le;4000</p>
<p class="subhead2"><a id="DRDAS348"></a><a id="sthref210"></a>Oracle Type</p>
<p><code>CHAR</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS349" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref211"></a>
<h3 class="sect2">char(n+1)</h3>
<p>mixed</p>
<p class="subhead2"><a id="DRDAS350"></a><a id="sthref212"></a>SQL Type</p>
<p>460,461</p>
<p class="subhead2"><a id="DRDAS351"></a><a id="sthref213"></a>Range</p>
<p>1&le; n&le;2000</p>
<p class="subhead2"><a id="DRDAS352"></a><a id="sthref214"></a>Oracle Type</p>
<p><code>CHAR</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS353" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref215"></a>
<h3 class="sect2">char(n) for Bit Data</h3>
<p>byte</p>
<p class="subhead2"><a id="DRDAS354"></a><a id="sthref216"></a>SQL Type</p>
<p>460,461</p>
<p class="subhead2"><a id="DRDAS355"></a><a id="sthref217"></a>Range</p>
<p>1&le; n&le;2000</p>
<p class="subhead2"><a id="DRDAS356"></a><a id="sthref218"></a>Oracle Type</p>
<p><code>RAW</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS357" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref219"></a>
<h3 class="sect2">VARGRAPHIC(n)</h3>
<p>dbcs</p>
<p class="subhead2"><a id="DRDAS358"></a><a id="sthref220"></a>SQL Type</p>
<p>464,465</p>
<p class="subhead2"><a id="DRDAS359"></a><a id="sthref221"></a>Range</p>
<p>1&le; n&le;2000</p>
<p class="subhead2"><a id="DRDAS360"></a><a id="sthref222"></a>Oracle Type</p>
<p><code>NVARCHAR2</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS361" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref223"></a>
<h3 class="sect2">GRAPHIC(n)</h3>
<p>dbcs</p>
<p class="subhead2"><a id="DRDAS362"></a><a id="sthref224"></a>SQL Type</p>
<p>468,469</p>
<p class="subhead2"><a id="DRDAS363"></a><a id="sthref225"></a>Range</p>
<p>1&le; n&le;127</p>
<p class="subhead2"><a id="DRDAS364"></a><a id="sthref226"></a>Oracle Type</p>
<p><code>NCHAR</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS365" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref227"></a>
<h3 class="sect2">VARGRAPHIC(n)</h3>
<p>dbcs</p>
<p class="subhead2"><a id="DRDAS366"></a><a id="sthref228"></a>SQL Type</p>
<p>472,473</p>
<p class="subhead2"><a id="DRDAS367"></a><a id="sthref229"></a>Range</p>
<p>1&le; n&le;2000</p>
<p class="subhead2"><a id="DRDAS368"></a><a id="sthref230"></a>Oracle Type</p>
<p><code>NVARCHAR2</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS369" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref231"></a>
<h3 class="sect2">char(n) (Pascal L String)</h3>
<p>byte</p>
<p class="subhead2"><a id="DRDAS370"></a><a id="sthref232"></a>SQL Type</p>
<p>476,477</p>
<p class="subhead2"><a id="DRDAS371"></a><a id="sthref233"></a>Range</p>
<p>1&le; n&le;255</p>
<p class="subhead2"><a id="DRDAS372"></a><a id="sthref234"></a>Oracle Type</p>
<p><code>CHAR</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS373" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref235"></a>
<h3 class="sect2">char(n) for Bit Data (Pascal L String)</h3>
<p>byte</p>
<p class="subhead2"><a id="DRDAS374"></a><a id="sthref236"></a>SQL Type</p>
<p>476,477</p>
<p class="subhead2"><a id="DRDAS375"></a><a id="sthref237"></a>Range</p>
<p>1&le; n&le;255</p>
<p class="subhead2"><a id="DRDAS376"></a><a id="sthref238"></a>Oracle Type</p>
<p><code>RAW</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS377" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref239"></a>
<h3 class="sect2">DATE</h3>
<p>Date with zero time component</p>
<p class="subhead2"><a id="DRDAS378"></a><a id="sthref240"></a>SQL Type</p>
<p>384, 385</p>
<p class="subhead2"><a id="DRDAS379"></a><a id="sthref241"></a>Oracle Type</p>
<p><code>DATE</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS380" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref242"></a>
<h3 class="sect2">TIME</h3>
<p>Uses time component of date only, or is formatted as textual time representation</p>
<p class="subhead2"><a id="DRDAS381"></a><a id="sthref243"></a>SQL Type</p>
<p>388, 389</p>
<p class="subhead2"><a id="DRDAS382"></a><a id="sthref244"></a>Oracle Type</p>
<p><code>DATE</code> or <code>CHAR(8)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS383" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref245"></a>
<h3 class="sect2">TIMESTAMP</h3>
<p>Timestamp</p>
<p class="subhead2"><a id="DRDAS384"></a><a id="sthref246"></a>SQL Type</p>
<p>392, 393</p>
<p class="subhead2"><a id="DRDAS385"></a><a id="sthref247"></a>Oracle Type</p>
<p><code>TIMESTAMP(6)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS386" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref248"></a>
<h3 class="sect2">(datalink)</h3>
<p>no equivalent representation</p>
<p class="subhead2"><a id="DRDAS387"></a><a id="sthref249"></a>SQL Type</p>
<p>396, 397</p>
<p class="subhead2"><a id="DRDAS388"></a><a id="sthref250"></a>Oracle Type</p>
<p><code>VARCHAR2</code> for sbcs, or <code>NVARCHAR2</code> for dbcs</p>
</div>
<!-- class="sect2" -->
<div id="DRDAS389" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref251"></a>
<h3 class="sect2">BLOB</h3>
<p>Binary Long OBject</p>
<p class="subhead2"><a id="DRDAS390"></a><a id="sthref252"></a>SQL Type</p>
<p>404, 405</p>
<p class="subhead2"><a id="DRDAS391"></a><a id="sthref253"></a>Oracle Type</p>
<p><code>BLOB</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS392" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref254"></a>
<h3 class="sect2">CLOB</h3>
<p>Character Long OBject (LOB) for sbcs or mixed representation</p>
<p class="subhead2"><a id="DRDAS393"></a><a id="sthref255"></a>SQL Type</p>
<p>408, 409</p>
<p class="subhead2"><a id="DRDAS394"></a><a id="sthref256"></a>Oracle Type</p>
<p><code>CLOB</code> for sbcs, and <code>CLOB</code> for mixed representation</p>
</div>
<!-- class="sect2" -->
<div id="DRDAS395" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref257"></a>
<h3 class="sect2">DBCLOB</h3>
<p>For dbcs</p>
<p class="subhead2"><a id="DRDAS396"></a><a id="sthref258"></a>SQL Type</p>
<p>412, 413</p>
<p class="subhead2"><a id="DRDAS397"></a><a id="sthref259"></a>Oracle Type</p>
<p><code>NCLOB</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS398" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref260"></a>
<h3 class="sect2">BLOB LOCATOR</h3>
<p>Binary Long OBject (LOB)</p>
<p class="subhead2"><a id="DRDAS399"></a><a id="sthref261"></a>SQL Type</p>
<p>960, 961</p>
<p class="subhead2"><a id="DRDAS400"></a><a id="sthref262"></a>Oracle Type</p>
<p><code>BLOB</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS401" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref263"></a>
<h3 class="sect2">CLOB LOCATOR</h3>
<p>For sbcs or mixed representation</p>
<p class="subhead2"><a id="DRDAS402"></a><a id="sthref264"></a>SQL Type</p>
<p>964, 965</p>
<p class="subhead2"><a id="DRDAS403"></a><a id="sthref265"></a>Oracle Type</p>
<p><code>CLOB</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS404" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref266"></a>
<h3 class="sect2">DBCLOB LOCATOR</h3>
<p>For dbcs representation</p>
<p class="subhead2"><a id="DRDAS405"></a><a id="sthref267"></a>SQL Type</p>
<p>968, 969</p>
<p class="subhead2"><a id="DRDAS406"></a><a id="sthref268"></a>Oracle Type</p>
<p><code>NCLOB</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS407" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref269"></a>
<h3 class="sect2">boolean</h3>
<p>No equivalent representation</p>
<p class="subhead2"><a id="DRDAS408"></a><a id="sthref270"></a>SQL Type</p>
<p>2436, 2437</p>
<p class="subhead2"><a id="DRDAS409"></a><a id="sthref271"></a>Oracle Type</p>
<p><code>NUMBER(5)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS410" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref272"></a>
<h3 class="sect2">BINARY(n)</h3>
<p>Fixed-length binary string</p>
<p class="subhead2"><a id="DRDAS411"></a><a id="sthref273"></a>SQL Type</p>
<p>912, 913</p>
<p class="subhead2"><a id="DRDAS412"></a><a id="sthref274"></a>Range</p>
<p>1 &le; n &le; 255</p>
<p class="subhead2"><a id="DRDAS413"></a><a id="sthref275"></a>Oracle Type</p>
<p><code>RAW</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS414" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref276"></a>
<h3 class="sect2">VARBINARY(n)</h3>
<p>Variable-length binary string</p>
<p class="subhead2"><a id="DRDAS415"></a><a id="sthref277"></a>SQL Type</p>
<p>908, 909</p>
<p class="subhead2"><a id="DRDAS416"></a><a id="sthref278"></a>Range</p>
<p>1 &le; n &le; 32767</p>
<p class="subhead2"><a id="DRDAS417"></a><a id="sthref279"></a>Oracle Type</p>
<p><code>LONG RAW</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS418" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref280"></a>
<h3 class="sect2">XML</h3>
<p>External form</p>
<p class="subhead2"><a id="DRDAS419"></a><a id="sthref281"></a>SQL Type</p>
<p>988, 989</p>
<p class="subhead2"><a id="DRDAS420"></a><a id="sthref282"></a>Oracle Type</p>
<p><code>SYS.XMLType</code></p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CDEHADHG"></a>
<div id="DRDAS421" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Converting Oracle Data Type to DRDA</h2>
<p>Tables and procedures use Oracle data types. When describing objects, or returning data from a table or procedure, Oracle maps Oracle data types onto equivalent DRDA data types. This section discusses these mappings.</p>
<div id="DRDAS422" class="sect2"><a id="sthref283"></a>
<h3 class="sect2">Oracle NUMBER and FLOAT</h3>
</div>
<!-- class="sect2" -->
<div id="DRDAS423" class="sect2"><a id="sthref284"></a>
<h3 class="sect2">BINARY_FLOAT</h3>
<p>8 bytes</p>
<p class="subhead2"><a id="DRDAS424"></a><a id="sthref285"></a>SQL Type</p>
<p>480, 481</p>
<p class="subhead2"><a id="DRDAS425"></a><a id="sthref286"></a>SQL Type Name</p>
<p><code>DOUBLE</code> (8 byte floating point)</p>
</div>
<!-- class="sect2" -->
<div id="DRDAS426" class="sect2"><a id="sthref287"></a>
<h3 class="sect2">BINARY_DOUBLE</h3>
<p>8 bytes</p>
<p class="subhead2"><a id="DRDAS427"></a><a id="sthref288"></a>SQL Type</p>
<p>480, 481</p>
<p class="subhead2"><a id="DRDAS428"></a><a id="sthref289"></a>SQL Type Name</p>
<p><code>DOUBLE</code> (8 byte floating point)</p>
</div>
<!-- class="sect2" -->
<div id="DRDAS429" class="sect2"><a id="sthref290"></a>
<h3 class="sect2">VARCHAR2(n)</h3>
<p>mixed variable length character string</p>
<p class="subhead2"><a id="DRDAS430"></a><a id="sthref291"></a>SQL Type</p>
<p>448, 449</p>
<p class="subhead2"><a id="DRDAS431"></a><a id="sthref292"></a>Range</p>
<p>1 &le; n &le; 32,767</p>
<p class="subhead2"><a id="DRDAS432"></a><a id="sthref293"></a>SQL Type Name</p>
<p><code>VARCHAR(n) FOR MIXED DATA</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS433" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref294"></a>
<h3 class="sect2">LONG</h3>
<p>Mixed long variable-length character string; Oracle <code>LONG</code> supports up to 2^31-1 bytes, but only the first <code>32,767</code> bytes are currently returned.</p>
<p class="subhead2"><a id="DRDAS434"></a><a id="sthref295"></a>SQL Type</p>
<p>448, 449</p>
<p class="subhead2"><a id="DRDAS435"></a><a id="sthref296"></a>SQL Type Name</p>
<p><code>VARCHAR(32767) FOR MIXED DATA</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS436" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref297"></a>
<h3 class="sect2">LONG RAW</h3>
<p>Binary long variable length character string; Oracle <code>LONG RAW</code> supports up to 2^31-1 bytes, but only the first <code>32,767</code> bytes are currently returned.</p>
<p class="subhead2"><a id="DRDAS437"></a><a id="sthref298"></a>SQL Type</p>
<p>448, 449</p>
<p class="subhead2"><a id="DRDAS438"></a><a id="sthref299"></a>SQL Type Name</p>
<p><code>VARCHAR(32767) FOR BIT DATA</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS439" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref300"></a>
<h3 class="sect2">NVARCHAR2(n)</h3>
<p>National variable length character string</p>
<p class="subhead2"><a id="DRDAS440"></a><a id="sthref301"></a>SQL Type</p>
<p>464, 465</p>
<p class="subhead2"><a id="DRDAS441"></a><a id="sthref302"></a>Range</p>
<p>1 &le; n &le; 32,767</p>
<p class="subhead2"><a id="DRDAS442"></a><a id="sthref303"></a>SQL Type Name</p>
<p><code>VARGRAPHIC(n)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS443" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref304"></a>
<h3 class="sect2">CHAR(n)</h3>
<p>Mixed fixed length character string; there are two possibilities, determined by the range necessary for the data type: converts to <code>CHAR(n)</code> for n under <code>256</code>, and to <code>VARCHAR(n)</code> for longer character strings.</p>
<div id="DRDAS444" class="sect3"><a id="sthref305"></a>
<h4 class="sect3">Shorter version</h4>
<p class="subhead2"><a id="DRDAS445"></a><a id="sthref306"></a>SQL Type</p>
<p>452, 453</p>
<p class="subhead2"><a id="DRDAS446"></a><a id="sthref307"></a>Range</p>
<p><code>1 &le; n &le; 255</code></p>
<p class="subhead2"><a id="DRDAS447"></a><a id="sthref308"></a>SQL Type Name</p>
<p><code>CHAR(n) FOR MIXED DATA</code></p>
</div>
<!-- class="sect3" -->
<div id="DRDAS448" class="sect3"><a id="sthref309"></a>
<h4 class="sect3">Longer Version</h4>
<p class="subhead2"><a id="DRDAS449"></a><a id="sthref310"></a>SQL Type</p>
<p>448, 449</p>
<p class="subhead2"><a id="DRDAS450"></a><a id="sthref311"></a>Range</p>
<p><code>256 &le; n &le; 32,767</code></p>
<p class="subhead2"><a id="DRDAS451"></a><a id="sthref312"></a>SQL Type Name</p>
<p><code>VARCHAR(n) FOR MIXED DATA</code></p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="DRDAS452" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref313"></a>
<h3 class="sect2">NCHAR(n)</h3>
<p>National fixed length character string; there are two possibilities, determined by the range necessary for the data type: converts to <code>CHAR(n)</code> for n under <code>256</code>, and to <code>VARCHAR(n)</code> for longer character strings.</p>
<div id="DRDAS453" class="sect3"><a id="sthref314"></a>
<h4 class="sect3">Shorter version</h4>
<p class="subhead2"><a id="DRDAS454"></a><a id="sthref315"></a>SQL Type</p>
<p>468, 469</p>
<p class="subhead2"><a id="DRDAS455"></a><a id="sthref316"></a>Range</p>
<p><code>1 &le; n &le; 255</code></p>
<p class="subhead2"><a id="DRDAS456"></a><a id="sthref317"></a>SQL Type Name</p>
<p><code>GRAPHIC(n)</code></p>
</div>
<!-- class="sect3" -->
<div id="DRDAS457" class="sect3"><a id="sthref318"></a>
<h4 class="sect3">Longer Version</h4>
<p class="subhead2"><a id="DRDAS458"></a><a id="sthref319"></a>SQL Type</p>
<p>464, 465</p>
<p class="subhead2"><a id="DRDAS459"></a><a id="sthref320"></a>Range</p>
<p><code>256 &le; n &le; 32,767</code></p>
<p class="subhead2"><a id="DRDAS460"></a><a id="sthref321"></a>SQL Type Name</p>
<p><code>VARGRAPHIC(n)</code></p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="DRDAS461" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref322"></a>
<h3 class="sect2">UROWID</h3>
<p>Oracle universal <code>ROWID</code></p>
<p class="subhead2"><a id="DRDAS462"></a><a id="sthref323"></a>SQL Type</p>
<p>908, 909</p>
<p class="subhead2"><a id="DRDAS463"></a><a id="sthref324"></a>SQL Type Name</p>
<p><code>VARBINARY(4000)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS464" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref325"></a>
<h3 class="sect2">DATE</h3>
<p>Oracle <code>DATE</code></p>
<p class="subhead2"><a id="DRDAS465"></a><a id="sthref326"></a>SQL Type</p>
<p>384, 385</p>
<p class="subhead2"><a id="DRDAS466"></a><a id="sthref327"></a>SQL Type Name</p>
<p><code>DATE</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS467" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref328"></a>
<h3 class="sect2">TIMESTAMP</h3>
<p>Oracle <code>TIMESTAMP</code></p>
<p class="subhead2"><a id="DRDAS468"></a><a id="sthref329"></a>SQL Type</p>
<p>392, 393</p>
<p class="subhead2"><a id="DRDAS469"></a><a id="sthref330"></a>SQL Type Name</p>
<p><code>TIMESTAMP</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS470" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref331"></a>
<h3 class="sect2">TIMESTAMP WITH LOCAL TIME ZONE</h3>
<p>Oracle <code>TIMESTAMP WITH LOCAL TIME ZONE</code></p>
<p class="subhead2"><a id="DRDAS471"></a><a id="sthref332"></a>SQL Type</p>
<p>392, 393</p>
<p class="subhead2"><a id="DRDAS472"></a><a id="sthref333"></a>SQL Type Name</p>
<p><code>TIMESTAMP</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS473" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref334"></a>
<h3 class="sect2">TIMESTAMP(p) WITH TIME ZONE</h3>
<p>Oracle <code>TIMESTAMP WITH LOCAL TIME ZONE</code></p>
<p class="subhead2"><a id="DRDAS474"></a><a id="sthref335"></a>SQL Type</p>
<p>448, 449</p>
<p class="subhead2"><a id="DRDAS475"></a><a id="sthref336"></a>Range</p>
<p><code>0 &le; p &le; 9</code></p>
<p class="subhead2"><a id="DRDAS476"></a><a id="sthref337"></a>SQL Type Name</p>
<p><code>VARCHAR(n) FOR MIXED DATA</code></p>
<p><code>n=148</code> for <code>TIMESTAMP(0) WITH TIME ZONE</code>; otherwise, <code>149+p</code> for <code>TIMESTAMP(p)</code> <code>WITH TIME ZONE</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS477" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref338"></a>
<h3 class="sect2">RAW(n)</h3>
<p>Binary variable length string</p>
<p class="subhead2"><a id="DRDAS478"></a><a id="sthref339"></a>SQL Type</p>
<p>908, 909</p>
<p class="subhead2"><a id="DRDAS479"></a><a id="sthref340"></a>Range</p>
<p><code>1 &le; n &le; 2000</code></p>
<p class="subhead2"><a id="DRDAS480"></a><a id="sthref341"></a>SQL Type Name</p>
<p><code>VARBINARY(n)</code></p>
</div>
<!-- class="sect2" -->
<div id="DRDAS481" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref342"></a>
<h3 class="sect2">NUMBER and FLOAT</h3>
<p>Oracle <code>NUMBER</code> and <code>FLOAT</code> may be used to represent several numeric types:</p>
<ul>
<li>
<p>simple integer types with only a decimal precision</p>
</li>
<li>
<p>fixed-point decimal types with a specific precision and scale</p>
</li>
<li>
<p>floating point types with up to <code>38</code> decimal digits of precision and an exponent</p>
</li>
</ul>
<p>Additionally, <code>NUMBER</code> may be defined with a scale that is greater than precision, with negative scale, and as a <code>FLOAT</code> with binary precision. See <a href="#CDECFBGG">Table 7-1</a> and <a href="#CDEHEGDF">Table 7-2</a> for details.</p>
<p>Note that the general form of this datatype is <code>NUMBER(</code><code><span class="codeinlineitalic">p</span></code><code>,</code><code><span class="codeinlineitalic">s</span></code><code>)</code>, where <code><span class="codeinlineitalic">p</span></code> is the variable for precision and <code><span class="codeinlineitalic">s</span></code> is the variable for scale.</p>
<div id="DRDAS482" class="tblformal">
<p class="titleintable"><a id="sthref343"></a><a id="CDECFBGG"></a>Table 7-1 Converting Oracle NUMBER Variants to DRDA Data Types</p>
<table class="cellalignment1420" title="Converting Oracle NUMBER Variants to DRDA Data Types" summary="Converting Oracle NUMBER to DRDA data type. The first column lists the Oracle data type variant, the second column lists the corresponding DRDA data type, and the third colum is for notes on compatibility" dir="ltr">
<thead>
<tr class="cellalignment1407">
<th class="cellalignment1419" id="r1c1-t2">Oracle Variant of NUMBER(p,s)</th>
<th class="cellalignment1419" id="r1c2-t2">DRDA Data Type</th>
<th class="cellalignment1419" id="r1c3-t2">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r2c1-t2" headers="r1c1-t2">
<p><code>NUMBER(1)</code></p>
</td>
<td class="cellalignment1413" headers="r2c1-t2 r1c2-t2">
<p><code>DECIMAL(1)</code></p>
</td>
<td class="cellalignment1413" headers="r2c1-t2 r1c3-t2">&nbsp;</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r3c1-t2" headers="r1c1-t2">
<p><code>NUMBER(2-4)</code></p>
</td>
<td class="cellalignment1413" headers="r3c1-t2 r1c2-t2">
<p><code>SMALLINT</code></p>
</td>
<td class="cellalignment1413" headers="r3c1-t2 r1c3-t2">&nbsp;</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r4c1-t2" headers="r1c1-t2">
<p><code>NUMBER(5-9</code>)</p>
</td>
<td class="cellalignment1413" headers="r4c1-t2 r1c2-t2">
<p><code>INTEGER</code></p>
</td>
<td class="cellalignment1413" headers="r4c1-t2 r1c3-t2">&nbsp;</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r5c1-t2" headers="r1c1-t2">
<p><code>NUMBER(10-18)</code></p>
</td>
<td class="cellalignment1413" headers="r5c1-t2 r1c2-t2">
<p><code>BIGINT</code></p>
</td>
<td class="cellalignment1413" headers="r5c1-t2 r1c3-t2">
<p>Whenever the client does not support <code>BIGINT</code>, the mapping is made to <code>DECIMAL(n)</code></p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r6c1-t2" headers="r1c1-t2">
<p><code>NUMBER(19-31)</code></p>
</td>
<td class="cellalignment1413" headers="r6c1-t2 r1c2-t2">
<p><code>DECIMAL(</code><code><span class="codeinlineitalic">p</span></code><code>)</code></p>
</td>
<td class="cellalignment1413" headers="r6c1-t2 r1c3-t2">&nbsp;</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r7c1-t2" headers="r1c1-t2">
<p><code>NUMBER(1-31, 1-31)</code></p>
</td>
<td class="cellalignment1413" headers="r7c1-t2 r1c2-t2">
<p><code>DECIMAL(p,s)</code></p>
</td>
<td class="cellalignment1413" headers="r7c1-t2 r1c3-t2">
<p>For both datatypes, <code>scale &lt;= precision</code></p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r8c1-t2" headers="r1c1-t2">
<p><code>NUMBER(32-38)</code></p>
</td>
<td class="cellalignment1413" headers="r8c1-t2 r1c2-t2">
<p><code>DECFLOAT34</code></p>
</td>
<td class="cellalignment1413" headers="r8c1-t2 r1c3-t2">
<p>Whenever the client does not support <code>DECFLOAT</code>, the mapping is made to <code>DOUBLE.</code></p>
<p>Oracle <code>NUMBER(35-38)</code> is rounded to <code>34</code> digits during conversion.</p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r9c1-t2" headers="r1c1-t2">
<p><code>NUMBER(1-38, -s)</code></p>
<p>where scale is negative</p>
</td>
<td class="cellalignment1413" headers="r9c1-t2 r1c2-t2">
<p><code>DECFLOAT34</code></p>
</td>
<td class="cellalignment1413" headers="r9c1-t2 r1c3-t2">
<p>Whenever the client does not support <code>DECFLOAT</code>, the mapping is made to <code>DOUBLE</code>.</p>
<p>Oracle <code>NUMBER(35-38)</code> is rounded to <code>34</code> digits during conversion.</p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r10c1-t2" headers="r1c1-t2">
<p><code>NUMBER(1-38, s)</code></p>
<p>where scale &gt; precision</p>
</td>
<td class="cellalignment1413" headers="r10c1-t2 r1c2-t2">
<p><code>DECFLOAT34</code></p>
</td>
<td class="cellalignment1413" headers="r10c1-t2 r1c3-t2">
<p>Whenever the client does not support <code>DECFLOAT</code>, the mapping is made to <code>DOUBLE</code>.</p>
<p>Oracle <code>NUMBER(35-38)</code> is rounded to <code>34</code> digits during conversion.</p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r11c1-t2" headers="r1c1-t2">
<p><code>NUMBER(32-38, s)</code></p>
<p>with any scale</p>
</td>
<td class="cellalignment1413" headers="r11c1-t2 r1c2-t2">
<p><code>DECFLOAT34</code></p>
</td>
<td class="cellalignment1413" headers="r11c1-t2 r1c3-t2">
<p>Whenever the client does not support <code>DECFLOAT</code>, the mapping is made to <code>DOUBLE</code>.</p>
<p>Oracle <code>NUMBER(35-38)</code> is rounded to <code>34</code> digits during conversion.</p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r12c1-t2" headers="r1c1-t2">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1413" headers="r12c1-t2 r1c2-t2">
<p><code>DECFLOAT34</code></p>
</td>
<td class="cellalignment1413" headers="r12c1-t2 r1c3-t2">
<p>Whenever the client does not support <code>DECFLOAT</code>, the mapping is made to <code>DOUBLE</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="DRDAS483" class="tblformal">
<p class="titleintable"><a id="sthref344"></a><a id="CDEHEGDF"></a>Table 7-2 Converting Oracle FLOAT Variants to DRDA Data Types</p>
<table class="cellalignment1420" title="Converting Oracle FLOAT Variants to DRDA Data Types" summary="Converting Oracle FLOAT to DRDA datatype. The first column lists the Oracle data type variant, the second column lists the corresponding DRDA data type, and the third colum is for notes on compatibility" dir="ltr">
<thead>
<tr class="cellalignment1407">
<th class="cellalignment1419" id="r1c1-t3">Oracle Variant of FLOAT(n)</th>
<th class="cellalignment1419" id="r1c2-t3">DRDA Data Type</th>
<th class="cellalignment1419" id="r1c3-t3">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r2c1-t3" headers="r1c1-t3">
<p><code>FLOAT(1-53)</code></p>
</td>
<td class="cellalignment1413" headers="r2c1-t3 r1c2-t3">
<p><code>DECFLOAT16</code></p>
</td>
<td class="cellalignment1413" headers="r2c1-t3 r1c3-t3">
<p>Whenever the client does not support <code>DECFLOAT</code>, the mapping is made to <code>DOUBLE</code></p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r3c1-t3" headers="r1c1-t3">
<p><code>FLOAT(n)</code></p>
<p>where <code>n &gt; 53</code></p>
</td>
<td class="cellalignment1413" headers="r3c1-t3 r1c2-t3">
<p><code>DECFLOAT34</code></p>
</td>
<td class="cellalignment1413" headers="r3c1-t3 r1c3-t3">
<p>Whenever the client does not support <code>DECFLOAT</code>, the mapping is made to <code>DOUBLE</code></p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r4c1-t3" headers="r1c1-t3">
<p><code>FLOAT</code></p>
</td>
<td class="cellalignment1413" headers="r4c1-t3 r1c2-t3">
<p><code>DECFLOAT34</code></p>
</td>
<td class="cellalignment1413" headers="r4c1-t3 r1c3-t3">
<p>Whenever the client does not support <code>DECFLOAT</code>, the mapping is made to <code>DOUBLE</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CDECJHHB"></a>
<div id="DRDAS484" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Data Type Equivalence and Remapping</h2>
<p>Oracle does not provide discrete database data types such as <code>SMALLINT</code>, <code>INTEGER</code> or <code>BIGINT</code> DRDA data types. In some cases, often to limit the column&#39;s range of values, it may become necessary to define a numeric column with specific precision or scale. Oracle therefore supplies a more flexible numeric database data type, Oracle <code>NUMBER</code>, which may be defined by specified precision and scale. Oracle <code>NUMBER</code> may contain both integral and fractional values in the same column, if no specific range limitations have been defined for the column.</p>
<p>Consideration, therefore, must be made for appropriate database data types when migrating data from a non-Oracle database. This is particularly important when migrating applications that expect to handle data of a limited range or form.</p>
<p>For example, if the application accepts a data range specific to <code>NUMBER(5)</code>, but the column is defined by data type <code>NUMBER</code>, it is likely that an inappropriate or invalid values may be inserted into the column and causing data issues when using or retrieving that value.</p>
<p>If the table definition is mapped to a close approximation of the original non-Oracle data, there should be no datatype compatibility issues. However, in cases where data that was not modeled accurately must be accessed, or if a query uses an expression that yields a non-range limited datatype, it may become necessary to apply an alternate datatype that is more compatible.</p>
<p>Consider that the <code>COUNT(*)</code> expression results in a non-range limited Oracle <code>NUMBER</code> datatype. If the application expects the result of the query that uses <code>COUNT</code> to be represented as a DRDA <code>INTEGER</code> data type, it becomes necessary perform one of the following steps to avoid a type mis-match:</p>
<ul>
<li>
<p>change the application to use the Oracle <code>NUMBER</code></p>
</li>
<li>
<p>change the query expression to <code>CAST</code> the result to the appropriate form</p>
</li>
<li>
<p>remap the resulting datatype form</p>
</li>
</ul>
<p>Often, it is neither practical nor feasible to modify the application, and remapping the datatype is the only workable solution.</p>
<p>The Application Server has a limited facility to convert Oracle <code>NUMBER</code> data type results to more discrete equivalent DRDA data types, on a per table or per column basis. This mechanism may also be used when the client AR is unable to properly convert the default mappings of Oracle <code>NUMBER</code> to DRDA data type. See <a href="#CDEHADHG">&#34;Converting Oracle Data Type to DRDA&#34;</a> for all supported conversions.</p>
<p>To apply data type mappings, you must invoke the PL/SQL function <a href="pl_sql.htm#BABGBAEC">&#34;SET_TYPEMAP&#34;</a>. The procedure <a href="pl_sql.htm#BABGBAEC">SET_TYPEMAP</a> implements a specified type conversion map for a specified table and column expression. The syntax for the type map object name is <code><span class="codeinlineitalic">table_name</span></code><code>:</code><code><span class="codeinlineitalic">column_expression</span></code>. The wildcard character, <code>*</code>, may be used in place of table name to include all tables with the specified column expression. It may also be used to indicate that all column expressions for a specified table that evaluate to an Oracle <code>NUMBER</code> be type mapped.</p>
<p>The syntax for converting from Oracle <code>NUMBER</code> to another data type is <code>NUMBER=</code><code><span class="codeinlineitalic">datatype</span></code>. See <a href="#CDEIHEJG">Table 7-3</a> for available data type names.</p>
<p>The default mapping of Oracle <code>NUMBER</code> is to DRDA <code>DECFLOAT(34)</code>. <a href="#CDEFEBBH">Example 7-2</a> shows that queries that use a column directly may use re-mapping on the retrieved column as a DRDA type <code>INTEGER</code>. When using a column in a function it may be necessary to apply a <code>typemap</code> for the expression, as described in <a href="#CDEGFFDB">Example 7-3</a>.</p>
<div id="DRDAS485" class="example">
<p class="titleinexample"><a id="CDEFEBBH"></a>Example 7-2 Using TYPEMAP in Queries that Use the Column Directly</p>
<p>Assume that an application expects an <code>EMPLOYEE_ID</code> value to be in a format of DRDA type <code>INTEGER</code>.</p>
<pre>CREATE TABLE employees(employee_id NUMBER(6), first_name VARCHAR2(20), ...);
</pre>
<p>This mapping enforces range limitations. To facilitate this mapping, apply the following <code>typemap</code> entry for the applications package <code>ORACLE.MYPACKAGE</code>:</p>
<pre>begin
   dbms_drdaas.set_typemap (
      &#39;ORACLE&#39;, &#39;MYPACKAGE&#39;, &#39;EMPLOYEES:EMPLOYEE_ID&#39;,
      &#39;NUMBER=INTEGER&#39;);
end;
</pre></div>
<!-- class="example" -->
<div id="DRDAS486" class="example">
<p class="titleinexample"><a id="CDEGFFDB"></a>Example 7-3 Using TYPEMAP in a Function</p>
<p>When using the <code>COUNT</code> function against the column, as in</p>
<pre>SELECT COUNT(employee_id) FROM employees;
</pre>
<p>apply the following <code>typemap</code> expression:</p>
<pre>begin
  dbms_drdaas.set_typemap (
    &#39;ORACLE&#39;, &#39;MYPACKAGE&#39;, &#39;EMPLOYEES:COUNT(EMPLOYEE_ID)&#39;, 
    &#39;NUMBER=INTEGER&#39; );
end;
</pre></div>
<!-- class="example" -->
<p><a href="#CDEIHEJG">Table 7-3</a> lists available <code>typemap</code> names and their conversion to DRDA data types.</p>
<div id="DRDAS487" class="tblformal">
<p class="titleintable"><a id="sthref345"></a><a id="CDEIHEJG"></a>Table 7-3 Oracle NUMBER TYPEMAP Data Type Names</p>
<table class="cellalignment1420" title="Oracle NUMBER TYPEMAP Data Type Names" summary="Oracle NUMBER for mapping to SQL Types, datatype," dir="ltr">
<thead>
<tr class="cellalignment1407">
<th class="cellalignment1419" id="r1c1-t4">Data Type Name</th>
<th class="cellalignment1419" id="r1c2-t4">SQL Type</th>
<th class="cellalignment1419" id="r1c3-t4">Data Type Size</th>
<th class="cellalignment1419" id="r1c4-t4">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r2c1-t4" headers="r1c1-t4">
<p><code>SMALLINT</code></p>
</td>
<td class="cellalignment1413" headers="r2c1-t4 r1c2-t4">
<p>500, 501</p>
</td>
<td class="cellalignment1413" headers="r2c1-t4 r1c3-t4">
<p><code>2</code> bytes</p>
</td>
<td class="cellalignment1413" headers="r2c1-t4 r1c4-t4">
<p>small integer</p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r3c1-t4" headers="r1c1-t4">
<p><code>INTEGER</code></p>
</td>
<td class="cellalignment1413" headers="r3c1-t4 r1c2-t4">
<p>496, 497</p>
</td>
<td class="cellalignment1413" headers="r3c1-t4 r1c3-t4">
<p><code>4</code> bytes</p>
</td>
<td class="cellalignment1413" headers="r3c1-t4 r1c4-t4">
<p>integer</p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r4c1-t4" headers="r1c1-t4">
<p><code>BIGINT</code></p>
</td>
<td class="cellalignment1413" headers="r4c1-t4 r1c2-t4">
<p>492, 493</p>
</td>
<td class="cellalignment1413" headers="r4c1-t4 r1c3-t4">
<p><code>8</code> bytes</p>
</td>
<td class="cellalignment1413" headers="r4c1-t4 r1c4-t4">
<p>large integer</p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r5c1-t4" headers="r1c1-t4">
<p><code>FLOAT</code></p>
</td>
<td class="cellalignment1413" headers="r5c1-t4 r1c2-t4">
<p>480. 481</p>
</td>
<td class="cellalignment1413" headers="r5c1-t4 r1c3-t4">
<p><code>4</code> bytes</p>
</td>
<td class="cellalignment1413" headers="r5c1-t4 r1c4-t4">
<p>single-precision floating point</p>
</td>
</tr>
<tr class="cellalignment1407">
<td class="cellalignment1413" id="r6c1-t4" headers="r1c1-t4">
<p><code>DOUBLE</code></p>
</td>
<td class="cellalignment1413" headers="r6c1-t4 r1c2-t4">
<p>480, 481</p>
</td>
<td class="cellalignment1413" headers="r6c1-t4 r1c3-t4">
<p><code>8</code> bytes</p>
</td>
<td class="cellalignment1413" headers="r6c1-t4 r1c4-t4">
<p>double-precision floating point</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1406">
<tr>
<td class="cellalignment1413">
<table class="cellalignment1411">
<tr>
<td class="cellalignment1410"><a href="diagnostics.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1410"><a href="data_dictionary.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2011, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1415">
<table class="cellalignment1409">
<tr>
<td class="cellalignment1410"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1410"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1410"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1410"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1410"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1410"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>