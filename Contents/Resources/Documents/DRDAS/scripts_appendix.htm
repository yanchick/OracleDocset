<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-5846"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Scripts%20for%20Creating%20and%20Maintaining%20Oracle%20Database%20Provider%20for%20DRDA"></a><title>Scripts for Creating and Maintaining Oracle Database Provider for DRDA</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1022"/>
<meta name="description" content="For customers who have a large investment in DB2-based applications, this document describes how to migrate to Oracle Database while keeping these applications largely unchanged."/>
<meta name="dcterms.created" content="2014-06-25T19:35:18Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Provider for DRDA User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E55482-01"/>
<meta name="dcterms.isVersionOf" content="DRDAS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2011, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="sql_clauses.htm" title="Previous" type="text/html"/>
<link rel="Next" href="bind_appendix.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E55482-01.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">21/24</span> <!-- End Header -->
<div id="DRDAS601" class="appendix"><a id="CHDJEADJ"></a>
<h1 class="appendix"><span class="secnum">A</span> Scripts for Creating and Maintaining Oracle Database Provider for DRDA</h1>
<p>This appendix lists the scripts used to establish an Oracle Database Provider for DRDA environment.</p>
<p>This appendix contains the following scripts:</p>
<ul>
<li>
<p>The <a href="#CHDEAEHI">catdrdaas.sql</a> script creates database objects.</p>
</li>
<li>
<p>The <a href="#CHDJHCHF">catnodrdaas.sql</a> script removes database objects.</p>
</li>
<li>
<p>The <a href="#CHDHBDBA">drdapkg_db2.sql</a> script is an example of initial binding authorization.</p>
</li>
<li>
<p>The <a href="#CHDEAJBG">drdasqtt_translator_setup.sql</a> script loads a SQL Translator.</p>
</li>
<li>
<p>The <a href="#CHDIBIIG">drdasqt_set_profile_dd.sql</a> script establishes the language profile for the DataDirect packages.</p>
</li>
</ul>
<a id="CHDEAEHI"></a>
<div id="DRDAS602" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">catdrdaas.sql</h2>
<p>The script <code>catdrdaas.sql</code> creates Oracle Database Provider for DRDA catalog objects.</p>
<pre>Rem catdrdaas.sql
Rem
Rem Copyright (c) 2011, Oracle and/or its affiliates. All rights reserved. 
Rem
Rem    NAME
Rem      catdrdaas.sql - CATalog Oracle Database Provider for DRDA
Rem
Rem =====================================================================
Rem Exit immediately if there are errors in the initial checks
Rem =====================================================================
 
WHENEVER SQLERROR EXIT;
 
DOC
#######################################################################
  Customer should create the SYSIBM tablespace
 
Eg:
  create tablespace SYSIBM datafile &#39;sysibm01.dbf&#39;
   size 70M reuse 
   extent management local 
   segment space management auto 
   online;
 
#######################################################################
#
 
@@prvtdpsadrda.plb
</pre></div>
<!-- class="sect1" -->
<a id="CHDJHCHF"></a>
<div id="DRDAS603" class="sect1">
<h2 class="sect1">catnodrdaas.sql</h2>
<p>The script <code>catnodrdaas.sql</code> removes Oracle Database Provider for DRDA catalog objects</p>
<pre>Rem catnodrdaas.sql
Rem
Rem Copyright (c) 2011, 2013, Oracle and/or its affiliates. 
Rem All rights reserved. 
Rem
Rem    NAME
Rem      catnodrdaas.sql - CATalog NO Oracle Database Provider for DRDA
Rem
 
drop public synonym DBMS_DRDAAS;
drop public synonym DBMS_DRDAAS_ADMIN;
 
drop public synonym USER_DRDAASTRACE;
drop public synonym DBA_DRDAASTRACE;
 
drop public synonym ALL_DRDAASPACKAGE;
drop public synonym USER_DRDAASPACKAGE;
drop public synonym DBA_DRDAASPACKAGE;
 
drop public synonym USER_DRDAASPACKSTMT;
drop public synonym DBA_DRDAASPACKSTMT;
 
drop public synonym ALL_DRDAASPACKAUTH;
drop public synonym USER_DRDAASPACKAUTH;
drop public synonym DBA_DRDAASPACKAUTH;
 
drop public synonym ALL_DRDAASPACKSIDE;
drop public synonym USER_DRDAASPACKSIDE;
drop public synonym DBA_DRDAASPACKSIDE;
 
 
drop role DRDAAS_USER_ROLE;
drop role DRDAAS_ADMIN_ROLE;
 
drop user SYSIBM cascade;
 
commit;
DOC
#######################################################################
  Customer should drop the SYSIBM tablespace.
 
Eg:
  drop tablespace SYSIBM;
 
#######################################################################
</pre></div>
<!-- class="sect1" -->
<a id="CHDHBDBA"></a>
<div id="DRDAS676" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">drdapkg_db2.sql</h2>
<pre>Rem drdapkg_db2.sql
Rem
Rem Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved. 
Rem
Rem    NAME
Rem      drdapkg_db2.sql  - Initialize DRDA-AS environment so that
Rem                          packages can be bound and correct datatypes
Rem                          are returned for various SQL constructs
Rem
Rem    DESCRIPTION
Rem      The DRDA-AS environment needs to be initialized so that the initial
Rem      packages (usually with an RDBCOLID of NULLID) can be bound.    
Rem      Using the DataDirect driver, those package names look like
Rem          NULLID.DDOC510A, NULLID.DDOC510B, and NULLID.DDOC510C
Rem      Using the IBM driver (libdb2.so), the package names look like
Rem          NULLID.SYSTAT and NULLID.SYSshyxx (where s is one of L or S,
Rem                    h is one of H or N, y is 1, 2, 3, or 4 and
Rem                                          xx is somwhere in 00 through FF)
Rem      Also, various columns must be TYPEMAPped -- their normal
Rem      attributes must be altered. 
Rem
Rem      The initial package bindings should be done under the id that runs 
Rem      this script. That is, if we run this script under the Oracle ID 
Rem      of xxxx, then the initial connection through an ODBC driver should be
Rem      using that same id, namely xxxx.
Rem    
Rem    NOTES
Rem      The following is relevant when using the IBM driver: libdb2.so ...
Rem        Note that the normal set of packages produced by the jdbcbinder 
Rem        process (db2jdbcbinder in DB2/LUW) defines packages with names like
Rem        SYSSTAT and SYSLNmnn and SYSLHmnn. Thus, before running the
Rem        jdbcbinder on DB2/LUW specifying the Oracle Id accepted in the prompt
Rem        for this script, one needs to inform DRDA-AS that the id has the
Rem        required privilege, namely to create ANY package in the NULLID
Rem        schema. That is part of what we are doing here.
Rem 
Rem      This script can be run ONLY by a user that has the ability to use
Rem      the DRDAAS_ADMIN_ROLE which must be GRANTed to the user; also this
Rem      role must be active either by being set as a default ROLE or
Rem      by actively doing a SET ROLE DRDAAS_ADMIN_ROLE.
 
SET ECHO ON
SET FEEDBACK 1
SET NUMWIDTH 10
SET LINESIZE 80
SET TRIMSPOOL ON
SET TAB OFF
SET PAGESIZE 100
 
SET SERVEROUTPUT ON 
 
SHOW USER
 
/* The following  will work even if DRDAAS_ADMIN_ROLE is not one of the */
/* DEFAULT Roles, but HAS been GRANTed to the user running this script. */
/* (A prerequisite of setting a DEFAULT ROLE for a user is that the user*/
/*  has been GRANTed that ROLE).                                        */
 
SET ROLE DRDAAS_ADMIN_ROLE;
 
Prompt Enter the OracleID under which the initial package BINDs will be made
Prompt Use quotes (&#39;) if needed.
Accept OracleID
Define BindID = &amp;OracleID
Prompt Enter default collection ID for package binding (usually NULLID)
Prompt Use quotes (&#39;) if needed.
Accept DefaultCollection
Define DfltCollid = &amp;DefaultCollection
 
declare 
 id_passed CONSTANT VARCHAR2(128) := &#39;&amp;&amp;BindId&#39;;
 collid_passed CONSTANT VARCHAR2(128) := &#39;&amp;&amp;DfltCollid&#39;;
 id_to_use VARCHAR2(128);
 collid_to_use VARCHAR2(128);
 id_len PLS_INTEGER;
 collid_len PLS_INTEGER;
 quote CONSTANT CHAR := &#39;&#39;&#39;&#39;;
begin
 id_len := LENGTH(id_passed);
 collid_len := LENGTH(collid_passed);
 
 IF SUBSTR(id_passed, 1, 1) = quote AND SUBSTR(id_passed, id_len, 1) = quote 
      THEN
    /* Use Id exactly as passed */
    id_to_use := SUBSTR(id_passed, 2, id_len - 2);
 ELSE
    id_to_use := UPPER(id_passed) ;
 END IF;
 IF SUBSTR(collid_passed, 1, 1) = quote AND 
    SUBSTR(collid_passed, collid_len, 1) = quote THEN
    /* Use Collection ID  exactly as passed */
    collid_to_use :=  SUBSTR(collid_passed, 2, collid_len-2) ;
 ELSE
    collid_to_use :=  UPPER(collid_passed) ;
 END IF;
 
 -- The following section is pertinent to ALL flavors of DB2
 -- =========================================================
 
  -- The id of the specified  user will have ALL privileges for ANY Package in
  -- RDBCOLID=collid_to_use
 
  DBMS_DRDAAS_ADMIN.GRANT_PRIVILEGE( DBMS_DRDAAS_ADMIN.ALL_PRIVILEGE,
                                     collid_to_use,&#39;*&#39;, id_to_use);
 
  commit;
 
  -- If you might want the id specified to create packages in rcbcolid= SCOTT,
  -- then you need to do the following:
 
  -- DBMS_DRDAAS_ADMIN.GRANT_PRIVILEGE(DBMS_DRDAAS_ADMIN.ALL_PRIVILEGE,
  --                                   &#39;SCOTT&#39;,&#39;*&#39;, id_to_use);
  -- commit;
 
  -- Typemaps ...
 
  -- The described &#34;type&#34; for &#34;COUNT(*)&#34; columns in any package in the 
  -- collid_to_use schema should be INTEGER
 
  -- General &#34;COUNT(*)&#34; case
  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;*&#39;,&#39;COUNT(*)&#39;,
                               &#39;NUMBER=INTEGER&#39;);
 
 
 
  -- ==================================================
  -- The following section is pertinent ONLY to DB2/zOS
  -- ==================================================
 
  -- To use DB2 z/OS SPUFI asgainst DRDAAS, the given oracle-id must be able to 
  -- define packages in the DSNESPCS and DSNESPRR schemas
  -- 
  -- DB2 z/OS SPUFI Packages
 
  DBMS_DRDAAS_ADMIN.GRANT_PRIVILEGE( DBMS_DRDAAS_ADMIN.ALL_PRIVILEGE, 
                                    &#39;DSNESPCS&#39;,&#39;*&#39;, id_to_use);
  DBMS_DRDAAS_ADMIN.GRANT_PRIVILEGE( DBMS_DRDAAS_ADMIN.ALL_PRIVILEGE, 
                                    &#39;DSNESPRR&#39;,&#39;*&#39;, id_to_use);
  commit;
 
  -- ======================================================================
  -- Specific DataDirect ODBC package discovery queries for DB2 z/OS
 
  -- When accessing the collid_to_use.DDOC510A package, the
  -- &#34;column&#34; MAX(SECTNO) referencing table SYSIBM.SYSPACKSTMT (which is a
  --  NUMBER in Oracle terms) should be described as a SMALLINT to the 
  -- application
 
  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;DDOC510A&#39;,
                                &#39;SYSIBM.SYSPACKSTMT:MAX(SECTNO)&#39;,
                                &#39;NUMBER=SMALL&#39;);
 
  -- Same as above but for package collid_to_use.DDOC510B
 
  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;DDOC510B&#39;,
                                &#39;SYSIBM.SYSPACKSTMT:MAX(SECTNO)&#39;,
                                &#39;NUMBER=SMALL&#39;);
 
 
  -- When accessing the collid_to_use.DDOC510A  package, the 
  -- &#34;column&#34; COUNT(DISTINCT(NAME)) referencing table SYSIBM.SYSPACKSTMT 
  -- (which is  a NUMBER in Oracle terms) should be described as a SMALLINT to
  --  the  application
 
  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;DDOC510A&#39;,
                                &#39;SYSIBM.SYSPACKSTMT:COUNT(DISTINCT(NAME))&#39;,
                                &#39;NUMBER=INTEGER&#39;);
 
  -- Same as above but for package collid_to_use.DDOC510B
 
  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;DDOC510B&#39;,
                                &#39;SYSIBM.SYSPACKSTMT:COUNT(DISTINCT(NAME))&#39;,
                                &#39;NUMBER=INTEGER&#39;);
  commit;
 
  -- ======================================================================
  -- Specific DataDirect JDBC package discovery queries for DB2 z/OS
 
  -- When accessing the collid_to_use.DDJC360B package, the &#34;column&#34;
  -- COUNT(*)-1 referencing table SYSIBM.SYSPACKSTMT (which is  a NUMBER in
  -- Oracle terms) should be described as an INTEGER to the application
 
  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;DDJC360B&#39;,
                               &#39;SYSIBM.SYSPACKSTMT:COUNT(*)-1&#39;, 
                               &#39;NUMBER=INTEGER&#39;);
 
  -- When accessing the collid_to_use.DDJC360B package, the &#34;column&#34;
  -- COUNT(*)-1 referencing table SYSIBM.SYSPACKSTMT (which  might be described
  -- as NUMBER(0,-127) in Oracle terms) describe the column as an INTEGER
  -- to the application.
 
  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;DDJC360B&#39;,
                                &#39;SYSIBM.SYSPACKSTMT:COUNT(*)-1&#39;, 
                                &#39;NUMBER(0,-127)=INTEGER&#39;);
  commit;
 
 
  -- ==================================================
  --  the following section is pertinent ONLY to DB2/luw
  -- ==================================================
 
  -- ======================================================================
  -- Specific DataDirect ODBC package discovery queries for DB2/LUW
 
  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;DDOC510A&#39;,
                                &#39;SYSIBM.SYSPLAN:MIN(TOTALSECT)&#39;,
                                &#39;NUMBER=SMALL&#39;);
 
  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;DDOC510A&#39;,
                                &#39;SYSIBM.SYSPLAN:COUNT(*)&#39;, 
                                &#39;NUMBER=INTEGER&#39;);
  --  DBMS_DRDAAS_ADMIN.SET_TYPEMAP(collid_to_use,&#39;DDOC510A&#39;,
  --                                &#39;MIN(TOTALSECT)&#39;, &#39;NUMBER=SMALL&#39;);
  commit;
 
  --  ==================================================
  --  The following section is pertinent ONLY to DB2/iOS
  --  ==================================================
 
  --  Currently empty!
end;
/
</pre></div>
<!-- class="sect1" -->
<a id="CHDEAJBG"></a>
<div id="DRDAS677" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">drdasqtt_translator_setup.sql</h2>
<pre>Rem drdasqtt_translator_setup.sql
Rem
Rem Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved. 
Rem
Rem    NAME
Rem      drdasqtt_translator_setup.sql - Generalized script for setting up an
Rem                                      external SQL translator
Rem
Rem
Rem    DESCRIPTION
Rem      This script can be used to set up any external SQL translator.
Rem      Some translators, e.g., BableFish, may need extra customizations.
Rem      For BabelFish, that would include the source/target SQL text for
Rem      the fingerprint translations (to be inserted into
Rem      DBA_SQL_TRANSLATIONS).
Rem
Rem    NOTES
Rem      Should be run &#34;/ as sysdba&#34;
Rem
 
SET ECHO ON
SET FEEDBACK 1
SET NUMWIDTH 10
SET LINESIZE 80
SET TRIMSPOOL ON
SET TAB OFF
SET PAGESIZE 100
SET SERVEROUTPUT ON
 
show user
 
Prompt Enter schema in which the SQL Translator Interface Package will be created as well 
Prompt as into which the third-party SQL translator will be loaded (usually SYSIBM).
Accept  TRANS_PKG_SCHEMA_ Prompt &#39;SQL Translator Interface Package Schema:&#39;
DEFINE TRANSLATOR_PACKAGE_SCHEMA =  &amp;TRANS_PKG_SCHEMA_
 
Prompt Enter unqualified name of the SQL Translator Interface Package
Accept  TRANS_PKG_NAME_ Prompt &#39;SQL Translator Interface Package Name:&#39;
DEFINE TRANSLATOR_PACKAGE_NAME = &amp;TRANS_PKG_NAME_
 
Prompt Enter schema in which the Translation Profile will be created:
Accept  TRANS_PROFILE_SCHEMA_ Prompt &#39;Translation Profile Schema:&#39;
DEFINE TRANS_PROFILE_SCHEMA = &amp;TRANS_PROFILE_SCHEMA_
 
Prompt Enter the unqualified name of the translation profile:
Accept  TRANS_PROFILE_NAME_ Prompt &#39;Translation Profile Name:&#39;
DEFINE TRANS_PROFILE_NAME =  &amp;TRANS_PROFILE_NAME_
 
Prompt Enter the &#34;language&#34; type of the translator: C, java, etc
Accept TRANS_LANG_ Prompt &#39;Translator Language:&#39;
DEFINE TRANS_LANG = &amp;TRANS_LANG_
 
Prompt Enter the names of the third-party SQL Translator objects; 
Prompt They should be available through rdbms/drdaas/jlib/..
Prompt If there is more than one object, enclose the entire set 
Prompt in four quotes, such as  &#39;&#39;&#39;&#39;object_a object_b&#39;&#39;&#39;&#39;.
Accept  EXTERNAL_CODE_ Prompt &#39;SQL Translator object(s):&#39;
DEFINE EXTERNAL_CODE  = &#39;&#39;&#39;&amp;EXTERNAL_CODE_&#39;&#39;&#39;
DEFINE EXTERNAL_CODE
 
 
Prompt Enter the signature for the entry for &#39;translateSQL&#39; in one of the
Prompt  previously entered SQL Translator objects:
Accept CALLOUT_TRANSLATE_SQL_ Prompt &#39;Entry for translateSQL:&#39;
DEFINE CALLOUT_TRANSLATE_SQL = &#39;&#39;&#39;&amp;CALLOUT_TRANSLATE_SQL_&#39;&#39;&#39;
 
Prompt Enter the signature for the entry for &#39;translateError&#39; in one of the
Prompt previously entered SQL Translator objects
Accept CALLOUT_TRANSLATE_ERROR_ Prompt &#39;Callout for translateError:&#39;
DEFINE CALLOUT_TRANSLATE_ERROR = &#39;&#39;&#39;&amp;CALLOUT_TRANSLATE_ERROR_&#39;&#39;&#39;
 
 
Rem Create the SQL Translator Interface Package ...
 
create or replace package &amp;&amp;TRANSLATOR_PACKAGE_SCHEMA..&amp;&amp;TRANSLATOR_PACKAGE_NAME as
 
  procedure translate_sql(sql_text              in  clob,
                          translated_text       out clob);
 
  procedure translate_error(error_code          in  binary_integer,
                            translated_code     out binary_integer,
                            translated_sqlstate out varchar2);
 
end;
/
show errors
 
declare 
  COMP_ERROR exception;
  pragma EXCEPTION_INIT(COMP_ERROR, -24344);
  translateSQLcode CONSTANT VARCHAR2(1024) := &amp;&amp;CALLOUT_TRANSLATE_SQL;
  translateErrorcode CONSTANT VARCHAR2(1024) := &amp;&amp;CALLOUT_TRANSLATE_ERROR;
  translateSQLToUse VARCHAR2(1024);
  translateErrorToUse VARCHAR2(1024);
  ln NUMBER;
  quote CONSTANT CHAR := &#39;&#39;&#39;&#39;;
  my_cursor BINARY_INTEGER;
  n BINARY_INTEGER;
  i BINARY_INTEGER;
  package_body   VARCHAR2(1024);
  /* we can&#39;t use bind variables to substitute for the &#34;name&#34; part of the */
  /* procedures in the package body declaration; the &#34;name&#34; part MUST be a*/
  /* single-quoted string!!! ARGHHH !!!                                   */
  package_body_1 VARCHAR2(400) := 
       &#39;create or replace package &#39; ||
          &#39;body &amp;&amp;TRANSLATOR_PACKAGE_SCHEMA..&amp;&amp;TRANSLATOR_PACKAGE_NAME as &#39;  ||
            &#39;procedure translate_sql(sql_text              in  clob, &#39;       ||
                                  &#39;  translated_text       out clob) as &#39;    ||
              &#39;language &amp;&amp;TRANS_LANG &#39;                                       ||
              &#39;name &#39;&#39;&#39;;
  package_body_2 VARCHAR2(400) := &#39;&#39;&#39; ;&#39;                                    ||
            &#39;procedure translate_error(error_code  in  binary_integer, &#39;     ||
                                     &#39; translated_code out binary_integer,&#39;  ||
                                    &#39; translated_sqlstate out varchar2) as &#39; ||
              &#39;language &amp;&amp;TRANS_LANG &#39;                                       ||
              &#39;name &#39;&#39;&#39;;
  package_body_end VARCHAR2(10) := &#39;&#39;&#39;; end;&#39;;
begin
  ln := LENGTH(translateSQLcode);
  IF SUBSTR(translateSQLCode,1,1) = quote AND
     SUBSTR(translateSQLCode,ln,1) = quote THEN
    translateSQLToUse := SUBSTR(translateSQLCode, 2, ln-2);
  ELSE
    translateSQLToUse := translateSQLCode;
  END IF;
  ln := LENGTH(translateErrorcode);
  IF SUBSTR(translateErrorCode,1,1) = quote AND
     SUBSTR(translateErrorCode,ln,1) = quote THEN
    translateErrorToUse := SUBSTR(translateErrorCode, 2, ln-2);
  ELSE
    translateErrorToUse := translateErrorCode;
  END IF;
  my_cursor := DBMS_SQL.OPEN_CURSOR;
  package_body := package_body_1 || translateSQLToUse || package_body_2 ||
                  translateErrorToUse || package_body_end;
  BEGIN
    DBMS_SQL.PARSE(my_cursor, package_body, DBMS_SQL.NATIVE);
  EXCEPTION
    when COMP_ERROR THEN DBMS_OUTPUT.PUT_LINE(&#39;SQLCODE=&#39; || SQLCODE || &#39;:&#39; ||
                                              SQLERRM);
  END;
  n := DBMS_SQL.EXECUTE(my_cursor);
  DBMS_SQL.CLOSE_CURSOR(my_cursor);
end;
/
 
show errors
 
Rem Load the Java code
Rem CALL DBMS_JAVA.LOADJAVA(&#39;-definer -genmissing -schema SYSIBM
Rem rdbms/drdaas/jlib/DBTooSQLAPI.jar rdbms/drdaas/jlib/DBTooTranslator.class&#39;,
Rem &#39;((* SYSIBM)(* PUBLIC)(* -))&#39;);
Rem DBTooSQLAPI.jar and DBTooSQLTranslator.class are fictional names

set serveroutput on
 
show user 
 
Rem Load the .class and .jar objects as specified ...
 
declare 
  extcode VARCHAR2(4096) := &amp;&amp;EXTERNAL_CODE;
  real_extcode VARCHAR2(4096);
  first_parm_first_part VARCHAR2(128) := 
                 &#39;-definer -genmissing -schema &amp;&amp;TRANSLATOR_PACKAGE_SCHEMA &#39;;
  first_parm VARCHAR2(4096);
  ln NUMBER;
begin
  ln := LENGTH(extcode);
  /* We might have a beginning and ending aprostrophe --*/
  /* we need to delete them                             */
  IF SUBSTR(extcode,1,1) = &#39;&#39;&#39;&#39; AND SUBSTR(extcode,ln,1) = &#39;&#39;&#39;&#39; THEN
     real_extcode := SUBSTR(extcode, 2, ln-2);
  ELSE
     real_extcode := extcode;
  END IF;
  first_parm := first_parm_first_part || &#39; &#39; || real_extcode;
/*DBMS_OUTPUT.PUT_LINE(&#39;First parm &#39; || first_parm); */
  DBMS_JAVA.LOADJAVA(first_parm ,
                     &#39;((* &amp;&amp;TRANSLATOR_PACKAGE_SCHEMA)(* PUBLIC)(* -))&#39;);   
end;
/
 
GRANT EXECUTE ON &amp;&amp;TRANSLATOR_PACKAGE_SCHEMA..&amp;&amp;TRANSLATOR_PACKAGE_NAME  to PUBLIC;
 
GRANT CREATE SQL TRANSLATION PROFILE TO &amp;&amp;TRANS_PROFILE_SCHEMA;
GRANT TRANSLATE ANY SQL TO &amp;&amp;TRANS_PROFILE_SCHEMA WITH ADMIN OPTION;
 
CALL DBMS_SQL_TRANSLATOR.DROP_PROFILE(&#39;&amp;&amp;TRANS_PROFILE_SCHEMA..&amp;&amp;TRANS_PROFILE_NAME&#39;);
CALL DBMS_SQL_TRANSLATOR.CREATE_PROFILE(&#39;&amp;&amp;TRANS_PROFILE_SCHEMA..&amp;&amp;TRANS_PROFILE_NAME&#39;);
 
 
begin
    dbms_sql_translator.set_attribute(&#39;&amp;&amp;TRANS_PROFILE_SCHEMA..&amp;&amp;TRANS_PROFILE_NAME&#39;,  
                        dbms_sql_translator.attr_translator,
                                    &#39;&amp;&amp;TRANSLATOR_PACKAGE_SCHEMA..&amp;&amp;TRANSLATOR_PACKAGE_NAME&#39;);
  
 dbms_sql_translator.set_attribute(&#39;&amp;&amp;TRANS_PROFILE_SCHEMA..&amp;&amp;TRANS_PROFILE_NAME&#39;,  
                        dbms_sql_translator.attr_translate_new_sql,  
                                        dbms_sql_translator.attr_value_true);
end;
/
 
GRANT ALL ON SQL TRANSLATION PROFILE &amp;&amp;TRANS_PROFILE_SCHEMA..
   &amp;&amp;TRANS_PROFILE_NAME TO &amp;&amp;TRANSLATOR_PACKAGE_SCHEMA ;
GRANT USE ON SQL TRANSLATION PROFILE &amp;&amp;TRANS_PROFILE_SCHEMA..
   &amp;&amp;TRANS_PROFILE_NAME TO DRDAAS_USER_ROLE;
</pre></div>
<!-- class="sect1" -->
<a id="CHDIBIIG"></a>
<div id="DRDAS678" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">drdasqt_set_profile_dd.sql</h2>
<pre>Rem drdasqt_set_profile_dd.sql
Rem
Rem Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved. 
Rem
Rem    NAME
Rem      drdasqt_set_profile_dd.sql - Set a sqllangprofile for each of
Rem                                   the DataDirect (dd) packages.
Rem
 
SET ECHO ON
SET FEEDBACK 1
SET NUMWIDTH 10
SET LINESIZE 80
SET TRIMSPOOL ON
SET TAB OFF
SET PAGESIZE 100
 
Rem You will be prompted for the profile name.
Rem Must be run under an id that has access to the DRDAAS_ADMIN_ROLE role.
 
Rem set echo on
set serveroutput on
 
 
SET ROLE DRDAAS_ADMIN_ROLE;
 
prompt Enter the (qualified) profile name to use for DataDirect packages
Accept SQLPROFILENAME
Define PROFILE_NAMEX = &amp;SQLPROFILENAME
prompt Enter the default Package Collection (usually NULLID)
Prompt Use quotes (&#39;) if needed
Accept DefaultCollection
Define PACKAGE_COLLECTIONX = &amp;DefaultCollection
 
declare
  TYPE FIRST_CHAR  IS VARRAY(4) of CHAR(1);
  TYPE SECOND_CHAR IS VARRAY(3) of CHAR(1);
 
  first_chr  FIRST_CHAR := FIRST_CHAR();
  second_chr SECOND_CHAR := SECOND_CHAR();
  package_name VARCHAR2(128);
  profile_name CONSTANT VARCHAR2(128) := &#39;&amp;&amp;PROFILE_NAMEX&#39;;
  package_collection_as_passed CONSTANT VARCHAR2(128) := 
                                         &#39;&amp;&amp;PACKAGE_COLLECTIONX&#39;;
  package_collection VARCHAR2(128);
  cmd VARCHAR2(255);
  quote CONSTANT CHAR := &#39;&#39;&#39;&#39;;
  ln BINARY_INTEGER;
begin
 
  ln := LENGTH(package_collection_as_passed);
  IF SUBSTR(package_collection_as_passed, 1,  1) = quote AND 
     SUBSTR(package_collection_as_passed, ln, 1) = quote THEN
    /* Use package_collection exactly as passed */
     package_collection := SUBSTR(package_collection_as_passed, 2, ln - 2);
  ELSE
     package_collection := UPPER(package_collection_as_passed) ;
  END IF;
 
  first_chr.EXTEND(4);
  first_chr(1) := &#39;C&#39;; first_chr(2) := &#39;S&#39;;
  first_chr(3) := &#39;U&#39;; first_chr(4) := &#39;R&#39;;
  second_chr.EXTEND(3);
  second_chr(1) := &#39;A&#39;; second_chr(2) := &#39;B&#39;; second_chr(3) := &#39;C&#39;;
 
  FOR f IN 1..first_chr.COUNT
  LOOP
    FOR s IN 1..second_chr.COUNT
    LOOP
       package_name := &#39;DDO&#39; || first_chr(f) || &#39;510&#39; || second_chr(s);
 
       cmd := &#39;DBMS_DRDAAS_ADMIN.SET_PROFILE(&#39; || package_collection || &#39;,&#39; ||
                                                  package_name  || &#39;,&#39; ||
                                                  profile_name  || &#39;)&#39;;
       DBMS_OUTPUT.PUT_LINE(&#39;Doing &#39; || cmd);
       DBMS_DRDAAS_ADMIN.SET_PROFILE(package_collection, package_name, 
                                      profile_name);
 
    END LOOP;
  END LOOP;
end;
/
</pre></div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1406">
<tr>
<td class="cellalignment1413">
<table class="cellalignment1411">
<tr>
<td class="cellalignment1410"><a href="sql_clauses.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1410"><a href="bind_appendix.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2011, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1415">
<table class="cellalignment1409">
<tr>
<td class="cellalignment1410"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1410"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1410"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1410"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1410"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1410"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>