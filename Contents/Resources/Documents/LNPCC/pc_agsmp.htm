<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-78057"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Sample%20Programs"></a><title>Sample Programs</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-07-10T8:51:42Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Pro*C/C++ Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E53432-01"/>
<meta name="dcterms.isVersionOf" content="LNPCC"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="pc_afemb.htm" title="Previous" type="text/html"/>
<link rel="Next" href="pc_ahintegrat.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53432-01.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">33/35</span> <!-- End Header -->
<div id="LNPCC5122" class="appendix"><a id="BABIAIIJ"></a>
<h1 class="appendix"><span class="secnum">F</span> Sample Programs</h1>
<p>This chapter describes how to build Oracle database applications with Pro*C/C++ using the sample programs that are included with this release.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BABGGDDE">Sample Program Descriptions</a></p>
</li>
<li>
<p><a href="#BABFCCIB">Building the Demonstration Tables</a></p>
</li>
<li>
<p><a href="#BABICBCI">Building the Sample Programs</a></p>
</li>
</ul>
<a id="BABGGDDE"></a>
<div id="LNPCC5123" class="sect1">
<h2 class="sect1">Sample Program Descriptions</h2>
<p><a id="sthref2842"></a>When you install Pro*C/C++, Oracle Universal Installer copies a set of Pro*C/C++ sample programs to the <code><span class="codeinlineitalic">ORACLE_BASE\ORACLE_HOME</span></code><code>\precomp\demo\proc</code> directory. These sample programs are listed in <a href="#BABHJJEC">Table F-1, &#34;Sample Programs&#34;</a> and described in the subsequent section.</p>
<p>When built, the sample programs that Oracle provides produce <code>.exe</code> executables.</p>
<p>For some sample programs, as indicated in the Notes column of the table, you must run the SQL scripts in the sample directory before you precompile and run the sample program. The SQL scripts set up the correct tables and data so that the sample programs run correctly. These SQL scripts are located in the <code><span class="codeinlineitalic">ORACLE_BASE</span></code><code>\</code><code><span class="codeinlineitalic">ORACLE_HOME</span></code><code>\precomp\demo\sql</code> directory.</p>
<p>Oracle Corporation recommends that you build and run these sample programs to verify that Pro*C/C++ has been installed successfully and operates correctly. You can delete the programs after you use them.</p>
<p>You can build the sample program by using a batch file called <code>pcmake.bat</code> or by using Microsoft Visual Studio.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABICBCI">&#34;Building the Sample Programs&#34;</a></div>
<div id="LNPCC5124" class="tblformalwidemax">
<p class="titleintable"><a id="sthref2843"></a><a id="BABHJJEC"></a>Table F-1 Sample Programs</p>
<table class="cellalignment834" title="Sample Programs" summary="List of sample programs" dir="ltr">
<thead>
<tr class="cellalignment825">
<th class="cellalignment832" id="r1c1-t3">Sample Program</th>
<th class="cellalignment832" id="r1c2-t3">Source Files</th>
<th class="cellalignment832" id="r1c3-t3">Pro*C/C++ GUI Project File</th>
<th class="cellalignment832" id="r1c4-t3">MSVC Compiler<br/>
Project File</th>
<th class="cellalignment832" id="r1c5-t3">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment825">
<td class="cellalignment833" id="r2c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2844"></a>ANSIDYN1</code></p>
</td>
<td class="cellalignment833" headers="r2c1-t3 r1c2-t3">
<p><code>ansidyn1.pc</code></p>
</td>
<td class="cellalignment833" headers="r2c1-t3 r1c3-t3">
<p><code>ansidyn1.pre</code></p>
</td>
<td class="cellalignment833" headers="r2c1-t3 r1c4-t3">
<p><code>ansidyn1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r2c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r3c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2845"></a>ANSIDYN2</code></p>
</td>
<td class="cellalignment833" headers="r3c1-t3 r1c2-t3">
<p><code>ansidyn2.pc</code></p>
</td>
<td class="cellalignment833" headers="r3c1-t3 r1c3-t3">
<p><code>ansidyn2.pre</code></p>
</td>
<td class="cellalignment833" headers="r3c1-t3 r1c4-t3">
<p><code>ansidyn2.dsp</code></p>
</td>
<td class="cellalignment833" headers="r3c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r4c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2846"></a>COLDEMO1</code></p>
</td>
<td class="cellalignment833" headers="r4c1-t3 r1c2-t3">
<p><code>coldemo1.h<br/>
coldemo1.pc<br/>
coldemo1.sql<br/>
coldemo1.typ</code></p>
</td>
<td class="cellalignment833" headers="r4c1-t3 r1c3-t3">
<p><code>coldemo1.pre</code></p>
</td>
<td class="cellalignment833" headers="r4c1-t3 r1c4-t3">
<p><code>coldemo1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r4c1-t3 r1c5-t3">
<p>Run <code>coldemo1.sql</code> and the Object Type Translator before building <code>coldemo1</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r5c1-t3" headers="r1c1-t3">
<p><code>CPDEMO1</code></p>
</td>
<td class="cellalignment833" headers="r5c1-t3 r1c2-t3">
<p><code>cpdemo1.pc</code></p>
</td>
<td class="cellalignment833" headers="r5c1-t3 r1c3-t3">
<p><code>cpdemo1.pre</code></p>
</td>
<td class="cellalignment833" headers="r5c1-t3 r1c4-t3">
<p><code>cpdemo1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r5c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r6c1-t3" headers="r1c1-t3">
<p><code>CPDEMO2</code></p>
</td>
<td class="cellalignment833" headers="r6c1-t3 r1c2-t3">
<p><code>cpdemo2.pc</code></p>
</td>
<td class="cellalignment833" headers="r6c1-t3 r1c3-t3">
<p><code>cpdemo2.pre</code></p>
</td>
<td class="cellalignment833" headers="r6c1-t3 r1c4-t3">
<p><code>cpdemo2.dsp</code></p>
</td>
<td class="cellalignment833" headers="r6c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r7c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2847"></a>CPPDEMO1</code></p>
</td>
<td class="cellalignment833" headers="r7c1-t3 r1c2-t3">
<p><code>cppdemo1.pc</code></p>
</td>
<td class="cellalignment833" headers="r7c1-t3 r1c3-t3">
<p><code>cppdemo1.pre</code></p>
</td>
<td class="cellalignment833" headers="r7c1-t3 r1c4-t3">
<p><code>cppdemo1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r7c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r8c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2848"></a>CPPDEMO2</code></p>
</td>
<td class="cellalignment833" headers="r8c1-t3 r1c2-t3">
<p><code>cppdemo2.pc<br/>
empclass.pc<br/>
cppdemo2.sql<br/>
empclass.h</code></p>
</td>
<td class="cellalignment833" headers="r8c1-t3 r1c3-t3">
<p><code>cppdemo2.pre</code></p>
</td>
<td class="cellalignment833" headers="r8c1-t3 r1c4-t3">
<p><code>cppdemo2.dsp</code></p>
</td>
<td class="cellalignment833" headers="r8c1-t3 r1c5-t3">
<p>Run <code>cppdemo2.sql</code> before building <code>cppdemo2</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r9c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2849"></a>CPPDEMO3</code></p>
</td>
<td class="cellalignment833" headers="r9c1-t3 r1c2-t3">
<p><code>cppdemo3.pc</code></p>
</td>
<td class="cellalignment833" headers="r9c1-t3 r1c3-t3">
<p><code>cppdemo3.pre</code></p>
</td>
<td class="cellalignment833" headers="r9c1-t3 r1c4-t3">
<p><code>cppdemo3.dsp</code></p>
</td>
<td class="cellalignment833" headers="r9c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r10c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2850"></a>CVDEMO</code></p>
</td>
<td class="cellalignment833" headers="r10c1-t3 r1c2-t3">
<p><code>cv_demo.pc<br/>
cv_demo.sql</code></p>
</td>
<td class="cellalignment833" headers="r10c1-t3 r1c3-t3">
<p><code>cv_demo.pre</code></p>
</td>
<td class="cellalignment833" headers="r10c1-t3 r1c4-t3">
<p><code>cv_demo.dsp</code></p>
</td>
<td class="cellalignment833" headers="r10c1-t3 r1c5-t3">
<p>Run <code>cv_demo.sql</code> before building <code>cv_demo</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r11c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2851"></a>EMPCLASS</code></p>
</td>
<td class="cellalignment833" headers="r11c1-t3 r1c2-t3">
<p><code>cppdemo2.pc<br/>
empclass.pc<br/>
cppdemo2.sql<br/>
empclass.h</code></p>
</td>
<td class="cellalignment833" headers="r11c1-t3 r1c3-t3">
<p><code>empclass.pre</code></p>
</td>
<td class="cellalignment833" headers="r11c1-t3 r1c4-t3">
<p><code>empclass.dsp</code></p>
</td>
<td class="cellalignment833" headers="r11c1-t3 r1c5-t3">
<p>Run <code>cppdemo2.sql</code> before building <code>empclass</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r12c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2852"></a>LOBDEMO1</code></p>
</td>
<td class="cellalignment833" headers="r12c1-t3 r1c2-t3">
<p><code>lobdemo1.h<br/>
lobdemo1.pc<br/>
lobdemo1.sql</code></p>
</td>
<td class="cellalignment833" headers="r12c1-t3 r1c3-t3">
<p><code>lobdemo1.pre</code></p>
</td>
<td class="cellalignment833" headers="r12c1-t3 r1c4-t3">
<p><code>lobdemo1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r12c1-t3 r1c5-t3">
<p>Run <code>lobdemo1.sql</code> before building <code>lobdemo1</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r13c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2853"></a>MLTTHRD1</code></p>
</td>
<td class="cellalignment833" headers="r13c1-t3 r1c2-t3">
<p><code>mltthrd1.pc<br/>
mltthrd1.sql</code></p>
</td>
<td class="cellalignment833" headers="r13c1-t3 r1c3-t3">
<p><code>mltthrd1.pre</code></p>
</td>
<td class="cellalignment833" headers="r13c1-t3 r1c4-t3">
<p><code>mltthrd1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r13c1-t3 r1c5-t3">
<p>Run <code>mltthrd1.sql</code> before building <code>mltthrd1</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r14c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2854"></a>NAVDEMO1</code></p>
</td>
<td class="cellalignment833" headers="r14c1-t3 r1c2-t3">
<p><code>navdemo1.h<br/>
navdemo1.pc<br/>
navdemo1.sql<br/>
navdemo1.typ</code></p>
</td>
<td class="cellalignment833" headers="r14c1-t3 r1c3-t3">
<p><code>navdemo1.pre</code></p>
</td>
<td class="cellalignment833" headers="r14c1-t3 r1c4-t3">
<p><code>navdemo1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r14c1-t3 r1c5-t3">
<p>Run <code>navdemo1.sql</code> and the Object Type Translator before building <code>navdemo1</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r15c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2855"></a>OBJDEMO1</code></p>
</td>
<td class="cellalignment833" headers="r15c1-t3 r1c2-t3">
<p><code>objdemo1.h<br/>
objdemo1.pc<br/>
objdemo1.sql<br/>
objdemo1.typ</code></p>
</td>
<td class="cellalignment833" headers="r15c1-t3 r1c3-t3">
<p><code>objdemo1.pre</code></p>
</td>
<td class="cellalignment833" headers="r15c1-t3 r1c4-t3">
<p><code>objdemo1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r15c1-t3 r1c5-t3">
<p>Run <code>objdemo1.sql</code> and the Object Type Translator before building <code>objdemo1</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r16c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2856"></a>ORACA</code></p>
</td>
<td class="cellalignment833" headers="r16c1-t3 r1c2-t3">
<p><code>oraca.pc<br/>
oracatst.sql</code></p>
</td>
<td class="cellalignment833" headers="r16c1-t3 r1c3-t3">
<p><code>oraca.pre</code></p>
</td>
<td class="cellalignment833" headers="r16c1-t3 r1c4-t3">
<p><code>oraca.dsp</code></p>
</td>
<td class="cellalignment833" headers="r16c1-t3 r1c5-t3">
<p>Run <code>oracatst.sql</code> before building <code>oraca</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r17c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2857"></a>PLSSAM</code></p>
</td>
<td class="cellalignment833" headers="r17c1-t3 r1c2-t3">
<p><code>plssam.pc</code></p>
</td>
<td class="cellalignment833" headers="r17c1-t3 r1c3-t3">
<p><code>plssam.pre</code></p>
</td>
<td class="cellalignment833" headers="r17c1-t3 r1c4-t3">
<p><code>plssam.dsp</code></p>
</td>
<td class="cellalignment833" headers="r17c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r18c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2858"></a>SAMPLE</code></p>
</td>
<td class="cellalignment833" headers="r18c1-t3 r1c2-t3">
<p><code>sample.pc</code></p>
</td>
<td class="cellalignment833" headers="r18c1-t3 r1c3-t3">
<p><code>sample.pre</code></p>
</td>
<td class="cellalignment833" headers="r18c1-t3 r1c4-t3">
<p><code>sample.dsp</code></p>
</td>
<td class="cellalignment833" headers="r18c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r19c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2859"></a>SAMPLE1</code></p>
</td>
<td class="cellalignment833" headers="r19c1-t3 r1c2-t3">
<p><code>sample1.pc</code></p>
</td>
<td class="cellalignment833" headers="r19c1-t3 r1c3-t3">
<p><code>sample1.pre</code></p>
</td>
<td class="cellalignment833" headers="r19c1-t3 r1c4-t3">
<p><code>sample1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r19c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r20c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2860"></a>SAMPLE2</code></p>
</td>
<td class="cellalignment833" headers="r20c1-t3 r1c2-t3">
<p><code>sample2.pc</code></p>
</td>
<td class="cellalignment833" headers="r20c1-t3 r1c3-t3">
<p><code>sample2.pre</code></p>
</td>
<td class="cellalignment833" headers="r20c1-t3 r1c4-t3">
<p><code>sample2.dsp</code></p>
</td>
<td class="cellalignment833" headers="r20c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r21c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2861"></a>SAMPLE3</code></p>
</td>
<td class="cellalignment833" headers="r21c1-t3 r1c2-t3">
<p><code>sample3.pc</code></p>
</td>
<td class="cellalignment833" headers="r21c1-t3 r1c3-t3">
<p><code>sample3.pre</code></p>
</td>
<td class="cellalignment833" headers="r21c1-t3 r1c4-t3">
<p><code>sample3.dsp</code></p>
</td>
<td class="cellalignment833" headers="r21c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r22c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2862"></a>SAMPLE4</code></p>
</td>
<td class="cellalignment833" headers="r22c1-t3 r1c2-t3">
<p><code>sample4.pc</code></p>
</td>
<td class="cellalignment833" headers="r22c1-t3 r1c3-t3">
<p><code>sample4.pre</code></p>
</td>
<td class="cellalignment833" headers="r22c1-t3 r1c4-t3">
<p><code>sample4.dsp</code></p>
</td>
<td class="cellalignment833" headers="r22c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r23c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2863"></a>SAMPLE5</code></p>
</td>
<td class="cellalignment833" headers="r23c1-t3 r1c2-t3">
<p><code>sample5.pc<br/>
exampbld.sql<br/>
examplod.sql</code></p>
</td>
<td class="cellalignment833" headers="r23c1-t3 r1c3-t3">
<p><code>sample5.pre</code></p>
</td>
<td class="cellalignment833" headers="r23c1-t3 r1c4-t3">
<p><code>sample5.dsp</code></p>
</td>
<td class="cellalignment833" headers="r23c1-t3 r1c5-t3">
<p>Run <code>exampbld.sql</code>, then run <code>examplod.sql</code>, before building <code>sample5</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r24c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2864"></a>SAMPLE6</code></p>
</td>
<td class="cellalignment833" headers="r24c1-t3 r1c2-t3">
<p><code>sample6.pc</code></p>
</td>
<td class="cellalignment833" headers="r24c1-t3 r1c3-t3">
<p><code>sample6.pre</code></p>
</td>
<td class="cellalignment833" headers="r24c1-t3 r1c4-t3">
<p><code>sample6.dsp</code></p>
</td>
<td class="cellalignment833" headers="r24c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r25c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2865"></a>SAMPLE7</code></p>
</td>
<td class="cellalignment833" headers="r25c1-t3 r1c2-t3">
<p><code>sample7.pc</code></p>
</td>
<td class="cellalignment833" headers="r25c1-t3 r1c3-t3">
<p><code>sample7.pre</code></p>
</td>
<td class="cellalignment833" headers="r25c1-t3 r1c4-t3">
<p><code>sample7.dsp</code></p>
</td>
<td class="cellalignment833" headers="r25c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r26c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2866"></a>SAMPLE8</code></p>
</td>
<td class="cellalignment833" headers="r26c1-t3 r1c2-t3">
<p><code>sample8.pc</code></p>
</td>
<td class="cellalignment833" headers="r26c1-t3 r1c3-t3">
<p><code>sample8.pre</code></p>
</td>
<td class="cellalignment833" headers="r26c1-t3 r1c4-t3">
<p><code>sample8.dsp</code></p>
</td>
<td class="cellalignment833" headers="r26c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r27c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2867"></a>SAMPLE9</code></p>
</td>
<td class="cellalignment833" headers="r27c1-t3 r1c2-t3">
<p><code>sample9.pc<br/>
calldemo.sql</code></p>
</td>
<td class="cellalignment833" headers="r27c1-t3 r1c3-t3">
<p><code>sample9.pre</code></p>
</td>
<td class="cellalignment833" headers="r27c1-t3 r1c4-t3">
<p><code>sample9.dsp</code></p>
</td>
<td class="cellalignment833" headers="r27c1-t3 r1c5-t3">
<p>Run <code>calldemo.sql</code> before building <code>sample9</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r28c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2868"></a>SAMPLE10</code></p>
</td>
<td class="cellalignment833" headers="r28c1-t3 r1c2-t3">
<p><code>sample10.pc</code></p>
</td>
<td class="cellalignment833" headers="r28c1-t3 r1c3-t3">
<p><code>sample10.pre</code></p>
</td>
<td class="cellalignment833" headers="r28c1-t3 r1c4-t3">
<p><code>sample10.dsp</code></p>
</td>
<td class="cellalignment833" headers="r28c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r29c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2869"></a>SAMPLE11</code></p>
</td>
<td class="cellalignment833" headers="r29c1-t3 r1c2-t3">
<p><code>sample11.pc<br/>
sample11.sql</code></p>
</td>
<td class="cellalignment833" headers="r29c1-t3 r1c3-t3">
<p><code>sample11.pre</code></p>
</td>
<td class="cellalignment833" headers="r29c1-t3 r1c4-t3">
<p><code>sample11.dsp</code></p>
</td>
<td class="cellalignment833" headers="r29c1-t3 r1c5-t3">
<p>Run <code>sample11.sql</code> before building <code>sample11</code>.</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r30c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2870"></a>SAMPLE12</code></p>
</td>
<td class="cellalignment833" headers="r30c1-t3 r1c2-t3">
<p><code>sample12.pc</code></p>
</td>
<td class="cellalignment833" headers="r30c1-t3 r1c3-t3">
<p><code>sample12.pre</code></p>
</td>
<td class="cellalignment833" headers="r30c1-t3 r1c4-t3">
<p><code>sample12.dsp</code></p>
</td>
<td class="cellalignment833" headers="r30c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r31c1-t3" headers="r1c1-t3">
<p><code>SCDEMO1</code></p>
</td>
<td class="cellalignment833" headers="r31c1-t3 r1c2-t3">
<p><code>scdemo1.pc</code></p>
</td>
<td class="cellalignment833" headers="r31c1-t3 r1c3-t3">
<p><code>scdemo1.pre</code></p>
</td>
<td class="cellalignment833" headers="r31c1-t3 r1c4-t3">
<p><code>scdemo1.dsp</code></p>
</td>
<td class="cellalignment833" headers="r31c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r32c1-t3" headers="r1c1-t3">
<p><code>SCDEMO2</code></p>
</td>
<td class="cellalignment833" headers="r32c1-t3 r1c2-t3">
<p><code>scdemo2.pc</code></p>
</td>
<td class="cellalignment833" headers="r32c1-t3 r1c3-t3">
<p><code>scdemo2.pre</code></p>
</td>
<td class="cellalignment833" headers="r32c1-t3 r1c4-t3">
<p><code>scdemo2.dsp</code></p>
</td>
<td class="cellalignment833" headers="r32c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r33c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2871"></a>SQLVCP</code></p>
</td>
<td class="cellalignment833" headers="r33c1-t3 r1c2-t3">
<p><code>sqlvcp.pc</code></p>
</td>
<td class="cellalignment833" headers="r33c1-t3 r1c3-t3">
<p><code>sqlvcp.pre</code></p>
</td>
<td class="cellalignment833" headers="r33c1-t3 r1c4-t3">
<p><code>sqlvcp.dsp</code></p>
</td>
<td class="cellalignment833" headers="r33c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
<tr class="cellalignment825">
<td class="cellalignment833" id="r34c1-t3" headers="r1c1-t3">
<p><code><a id="sthref2872"></a>WINSAM</code></p>
</td>
<td class="cellalignment833" headers="r34c1-t3 r1c2-t3">
<p><code>resource.h<br/>
winsam.h<br/>
winsam.ico<br/>
winsam.pc<br/>
winsam.rc</code></p>
</td>
<td class="cellalignment833" headers="r34c1-t3 r1c3-t3">
<p><code>winsam.pre</code></p>
</td>
<td class="cellalignment833" headers="r34c1-t3 r1c4-t3">
<p><code>winsam.dsp</code></p>
</td>
<td class="cellalignment833" headers="r34c1-t3 r1c5-t3">
<p>-</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwidemax" -->
<p><a id="ABC1008673"></a>The following subsections describe the functionality of the sample programs.</p>
<dl>
<dt>ANSIDYN1<a class="dashingAutolink" name="autolink-78026"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2873"></a><a class="dashingAutolink" name="autolink-78027"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2874"></a></dt>
<dd>
<p>Demonstrates using ANSI dynamic SQL to process SQL statements that are not known until runtime. This program is intended to demonstrate the simplest (though not the most efficient) approach to using ANSI dynamic SQL.</p>
</dd>
<dt>ANSIDYN2<a class="dashingAutolink" name="autolink-78028"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2875"></a></dt>
<dd>
<p>Demonstrates using ANSI dynamic SQL to process SQL statements that are not known until runtime. This program uses the Oracle extensions for batch processing and reference semantics.</p>
</dd>
<dt>COLDEMO1<a class="dashingAutolink" name="autolink-78029"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2876"></a></dt>
<dd>
<p>Fetches census information for California counties. This program demonstrates various ways to navigate through collection-typed database columns.</p>
</dd>
<dt>CPDEMO1</dt>
<dd>
<p>Demonstrates how the connection pool feature can be used. It also shows how different connection pool options can be used to optimize performance.</p>
</dd>
<dt>CPDEMO2</dt>
<dd>
<p>Demonstrates connection pool feature with relatively complex set of SQL statements and shows how performance gain depends on the kind of SQL statements used by the program.</p>
</dd>
<dt>CPPDEMO1<a class="dashingAutolink" name="autolink-78030"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2877"></a></dt>
<dd>
<p>Prompts the user for an employee number, then queries the <code>emp</code> table for the employee&#39;s name, salary, and commission. This program uses indicator variables (in an indicator struct) to determine whether the commission is <code>NULL</code>.</p>
</dd>
<dt>CPPDEMO2<a class="dashingAutolink" name="autolink-78031"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2878"></a></dt>
<dd>
<p>Retrieves the names of all employees in a given department from the <code>emp</code> table <a id="sthref2879"></a>(dynamic SQL Method 3).</p>
</dd>
<dt>CPPDEMO3<a class="dashingAutolink" name="autolink-78032"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2880"></a></dt>
<dd>
<p>Finds all salespeople and prints their names and total earnings (including commissions). This program is an example of C++ inheritance.</p>
</dd>
<dt>CVDEMO<a class="dashingAutolink" name="autolink-78033"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2881"></a></dt>
<dd>
<p>Declares and opens a ref cursor.</p>
</dd>
<dt><a class="dashingAutolink" name="autolink-78034"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2882"></a>EMPCLASS</dt>
<dd>
<p>The <code>EMPCLASS</code> and <code>CPPDEMO2</code> files were written to provide an example of how to write Pro*C/C++ programs within a C++ framework. <code>EMPCLASS</code> encapsulates a specific query on the <code>emp</code> table and is implemented using a cursor variable. <code>EMPCLASS</code> instantiates an instance of that query and provides cursor variable functionality (that is: <code>open</code>, <code>fetch</code>, <code>close</code>) through C++ member functions that belong to the <code>emp</code> class. The <code>empclass.pc</code> file is <span class="italic">not</span> a standalone demo program. It was written to be used by the <code>cppdemo2</code> demo program. To use the <code>emp</code> class, you have to write a driver (<code>cppdemo2.pc</code>) which declares an instance of the <code>emp</code> class and issues calls to the member functions of that class.</p>
</dd>
<dt>LOBDEMO1<a class="dashingAutolink" name="autolink-78035"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2883"></a></dt>
<dd>
<p>Fetches and adds crime records to the database based on the person&#39;s Social Security Number. This program demonstrates the mechanisms for accessing and storing <a id="sthref2884"></a><a id="sthref2885"></a>large objects (LOBs) to tables and manipulating LOBs through the stored procedures available through the <code>DBMS_LOB</code> package.</p>
</dd>
<dt>MLTTHRD1<a class="dashingAutolink" name="autolink-78036"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2886"></a><a class="dashingAutolink" name="autolink-78037"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2887"></a></dt>
<dd>
<p>Shows how to use threading in conjunction with precompilers. The program creates as many sessions as there are threads.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="pc_11thr.htm#g1021123">&#34;Multithreaded Applications&#34;</a></div>
</dd>
<dt>NAVDEMO1<a class="dashingAutolink" name="autolink-78038"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2888"></a></dt>
<dd>
<p>Demonstrates navigational access to objects in the object cache.</p>
</dd>
<dt>OBJDEMO1<a class="dashingAutolink" name="autolink-78039"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2889"></a></dt>
<dd>
<p>Demonstrates the use of <a id="sthref2890"></a>objects. This program manipulates the object types <span class="italic">person</span> and <span class="italic">address</span>.</p>
</dd>
<dt>ORACA<a class="dashingAutolink" name="autolink-78040"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2891"></a></dt>
<dd>
<p>Demonstrates how to use ORACA to determine various performance parameters at runtime.</p>
</dd>
<dt>PLSSAM<a class="dashingAutolink" name="autolink-78041"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2892"></a></dt>
<dd>
<p>Demonstrates the use of <a id="sthref2893"></a>embedded PL/SQL blocks. This program prompts you for an employee name that already resides in a database. It then executes a PL/SQL block, which returns the results of four <code>SELECT</code> statements.</p>
</dd>
<dt>SAMPLE<a class="dashingAutolink" name="autolink-78042"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2894"></a></dt>
<dd>
<p>Adds new employee records to the personnel database and checks database integrity. The employee numbers in the database are automatically selected using the current maximum employee number +10.</p>
</dd>
<dt>SAMPLE1<a class="dashingAutolink" name="autolink-78043"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2895"></a></dt>
<dd>
<p>Logs on to an Oracle database, prompts the user for an employee number, queries the database for the employee&#39;s name, salary, and commission, and displays the result. The program continues until the user enters 0 as the employee number.</p>
</dd>
<dt>SAMPLE2<a class="dashingAutolink" name="autolink-78044"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2896"></a></dt>
<dd>
<p>Logs on to an Oracle database, declares and opens a cursor, fetches the names, salaries, and commissions of all salespeople, displays the results, and closes the cursor.</p>
</dd>
<dt>SAMPLE3<a class="dashingAutolink" name="autolink-78045"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2897"></a></dt>
<dd>
<p>Logs on to an Oracle database, declares and opens a cursor, fetches in batches using arrays, and prints the results using the <code>print_rows()</code> function.</p>
</dd>
<dt>SAMPLE4<a class="dashingAutolink" name="autolink-78046"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2898"></a></dt>
<dd>
<p>Demonstrates the use of type equivalencies using the <code>LONG VARRAW</code> external datatype.</p>
</dd>
<dt>SAMPLE5<a class="dashingAutolink" name="autolink-78047"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2899"></a></dt>
<dd>
<p>Prompts the user for an account number and a debit amount. The program verifies that the account number is valid and that there are sufficient funds to cover the withdrawal before it debits the account. This program shows the use of embedded SQL.</p>
</dd>
<dt>SAMPLE6<a class="dashingAutolink" name="autolink-78048"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2900"></a></dt>
<dd>
<p>Creates a table, inserts a row, commits insert, and drops the table <a id="sthref2901"></a>(dynamic SQL Method 1).</p>
</dd>
<dt>SAMPLE7<a class="dashingAutolink" name="autolink-78049"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2902"></a></dt>
<dd>
<p>Inserts two rows into the <code>emp</code> table and deletes them <a id="sthref2903"></a>(dynamic SQL Method 2).</p>
</dd>
<dt>SAMPLE8<a class="dashingAutolink" name="autolink-78050"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2904"></a></dt>
<dd>
<p>Retrieves the names of all employees in a given department from the <code>emp</code> table <a id="sthref2905"></a>(dynamic SQL Method 3).</p>
</dd>
<dt>SAMPLE9<a class="dashingAutolink" name="autolink-78051"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2906"></a></dt>
<dd>
<p>Connects to an Oracle database using the <code>scott/tiger</code> account. The program declares several host arrays and calls a PL/SQL stored procedure (<code>GET_EMPLOYEES</code> in the <code>CALLDEMO</code> package). The PL/SQL procedure returns up to <code>ASIZE</code> values. The program keeps calling <code>GET_EMPLOYEES</code>, getting <code>ASIZE</code> arrays each time, and printing the values, until all rows have been retrieved.</p>
</dd>
<dt>SAMPLE10<a class="dashingAutolink" name="autolink-78052"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2907"></a></dt>
<dd>
<p>Connects to an Oracle database using your username and password and prompts for a SQL statement. You can enter any legal SQL statement, but you must use regular SQL syntax, not embedded SQL. Your statement is processed. If the statement is a query, the rows fetched are displayed <a id="sthref2908"></a>(dynamic SQL Method 4).</p>
</dd>
<dt>SAMPLE11<a class="dashingAutolink" name="autolink-78053"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2909"></a></dt>
<dd>
<p>Fetches from the <code>emp</code> table, using a cursor variable. The cursor is opened in the stored PL/SQL procedure <code>open_cur</code>, in the <code>EMP_DEMO_PKG</code> package.</p>
</dd>
<dt>SAMPLE12<a class="dashingAutolink" name="autolink-78054"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2910"></a></dt>
<dd>
<p>Demonstrates how to do array fetches using dynamic SQL Method 4.</p>
</dd>
<dt>SCDEMO1</dt>
<dd>
<p>Demonstrates how the scrollable cursor can be used with Oracle dynamic SQL Method 4. Scrollable cursor can also be used with ANSI dynamic SQL Method 4.</p>
</dd>
<dt>SCDEMO2</dt>
<dd>
<p>Demonstrates the use of scrollable cursor with host arrays.</p>
</dd>
<dt>SQLVCP<a class="dashingAutolink" name="autolink-78055"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2911"></a></dt>
<dd>
<p>Demonstrates how you can use the <a id="sthref2912"></a><code>sqlvcp()</code> function to determine the actual size of a <code>VARCHAR</code> struct. The size is then used as an offset to increment a pointer that steps through an array of <code>VARCHARs</code>.</p>
<p>This program also demonstrates how to use the <a id="sthref2913"></a><code>SQLStmtGetText()</code> function to retrieve the text of the last SQL statement that was executed.</p>
</dd>
<dt>WINSAM<a class="dashingAutolink" name="autolink-78056"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref2914"></a></dt>
<dd>
<p>Adds new employee records to the personnel database and checks database integrity. You can enter as many employee names as you want and perform the SQL commands by selecting the appropriate buttons in the <span class="italic">Employee Record</span> dialog box. This is a GUI version of the sample program.<a id="sthref2915"></a></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="BABFCCIB"></a>
<div id="LNPCC5125" class="sect1">
<h2 class="sect1">Building the Demonstration Tables</h2>
<p><a id="sthref2916"></a>To run the sample programs, you must have a database account with the username <code>scott</code> and the password <code>tiger</code>. Also, you must have a database with the sample tables <code>emp</code> and <code>dept.</code> This account is included in the starter database for your Oracle Database 10<span class="italic">g</span> server. If the account does not exist on your database, create the account before running the sample programs. If your database does not contain <code>emp</code> and <code>dept</code> tables, you can use the <code>demobld.sql</code> script to create them.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NTQRF" href="../NTQRF/toc.htm"><span class="italic">Oracle Database Platform Guide for Microsoft Windows</span></a></div>
<p>To build the sample tables:</p>
<ol>
<li>
<p>Start SQL*Plus</p>
</li>
<li>
<p>Connect as username <code>scott</code> with the password <code>tiger</code>.</p>
</li>
<li>
<p>Run the <code>demobld.sql</code> script:</p>
<pre>SQL&gt; @<span class="italic">ORACLE_BASE</span>\<span class="italic">ORACLE_HOME</span>\sqlplus\demo\demobld.sql;
</pre></li>
</ol>
</div>
<!-- class="sect1" -->
<a id="BABICBCI"></a>
<div id="LNPCC5126" class="sect1">
<h2 class="sect1">Building the Sample Programs<a id="sthref2917"></a></h2>
<p>You can build the sample programs in two ways:</p>
<ul>
<li>
<p>Using the <code>pcmake.bat</code> file provided</p>
</li>
<li>
<p>Using Microsoft Visual Studio</p>
</li>
</ul>
<div id="LNPCC5127" class="sect2"><a id="sthref2918"></a>
<h3 class="sect2">Using pcmake.bat</h3>
<p>The <code><a id="sthref2919"></a>pcmake.bat</code> file for compiling Pro*C/C++ demos is found in the following location:</p>
<pre><span class="italic">ORACLE_BASE\ORACLE_HOME</span>\precomp\demo\proc
</pre>
<pre></pre>
<p>This batch file is designed to illustrate how Pro*C/C++ applications can be built at the command prompt.</p>
<p>In order to use this batch file, Microsoft Visual Studio must be installed. The environment variable <code>MSVCDir</code> must be set. Pro*C/C++ command line options and linker options vary depending on your application.</p>
<p>You can use this file to build a demo, to build <code>sample1</code> for example:</p>
<ol>
<li>
<p>Navigate to the location of the demo file and enter the following at the command prompt:</p>
<pre>C:\&gt; CD <span class="italic">ORACLE_BASE\ORACLE_HOME</span>\precomp\demo\proc\sample1
</pre></li>
<li>
<p>Enter the following:</p>
<pre>% pcmake sample1
</pre></li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<div id="LNPCC5128" class="sect1"><a id="sthref2920"></a>
<h2 class="sect1">Using Microsoft Visual Studio</h2>
<p><a id="sthref2921"></a><a id="sthref2922"></a>Microsoft Visual Studio project files have an extension of<code>.dsp</code>. The<code>.dsp</code> files in the <code><span class="codeinlineitalic">ORACLE_BASE\ORACLE_HOME</span></code><code>\precomp\demo\proc</code> directory guide and control the steps necessary to precompile, compile, and link the sample programs.</p>
<p>Pro*C/C++, SQL*Plus, and the <a id="sthref2923"></a><a id="sthref2924"></a>Object Type Translator have been integrated into the Microsoft Visual Studio sample project files. You do not have to run Pro*C/C++, SQL*Plus, and the Object Type Translator separately before compilation.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABEDGBC">&#34;Setting the Path for the Sample .pre Files&#34;</a></p>
</li>
<li>
<p><a class="olink LNPCC" href="toc.htm"><span class="italic">Pro*C/C++ Programmer&#39;s Guide</span></a> for more information on Object Type Translator</p>
</li>
</ul>
</div>
<p>To build a sample program:</p>
<ol>
<li>
<p>Open a Microsoft Visual Studio project file, such as <code>sample1.dsp</code>.</p>
</li>
<li>
<p><a id="sthref2925"></a><a id="sthref2926"></a>Check the paths in the project file to ensure that they correspond to the configuration of your system. If they do not, change the paths accordingly. Your system may produce error messages if the paths to all components are not correct.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
All of the sample programs were created with <code>C:\oracle\ora92</code> as the default drive.<a id="sthref2927"></a></div>
</li>
</ol>
<ol>
<li>
<p>Select <span class="bold">Build &gt; Rebuild All</span>. Microsoft Visual Studio creates the executable.</p>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="BABEDGBC"></a>
<div id="LNPCC5129" class="sect1">
<h2 class="sect1">Setting the Path for the Sample .pre Files</h2>
<p><a id="sthref2928"></a><a id="sthref2929"></a><a id="sthref2930"></a>By default the sample <code>.pre</code> files search for their corresponding <code>.pc</code> files in the <code>C:\oracle\ora92</code> directory where <code>C:\</code> is the drive that you are using, and <code>oracle\ora92</code> represents the location of the Oracle home. If the Oracle base and Oracle home directories are different on your computer, you must change the directory path to the correct path.</p>
<p>To change the directory path for a sample .pre file:</p>
<ol>
<li>
<p>In Pro*C/C++, open the <code>.pre</code> file.</p>
</li>
<li>
<p>Double-click the filename in the Input File area to display the Input File dialog box.</p>
</li>
<li>
<p>Change the directory path to the correct path.</p>
</li>
<li>
<p>Click <span class="bold">Open</span>.</p>
</li>
</ol>
</div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment824">
<tr>
<td class="cellalignment833">
<table class="cellalignment829">
<tr>
<td class="cellalignment828"><a href="pc_afemb.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment828"><a href="pc_ahintegrat.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment836">
<table class="cellalignment827">
<tr>
<td class="cellalignment828"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment828"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment828"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment828"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment828"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment828"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>