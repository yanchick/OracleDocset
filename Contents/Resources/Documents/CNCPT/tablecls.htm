<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-4107"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Tables%20and%20Table%20Clusters"></a><title>Tables and Table Clusters</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="description" content="This chapter provides an introduction to schema objects and discusses tables, which are the most common types of schema objects."/>
<meta name="keywords" content="table clusters, overview, tables, schemas, schema objects, introduction, users, database, privileges, synonyms, definition, sequences, views, partitions, indexes, directory objects, contexts, roles, storage, heap-organized tables, heap-organized, tablespaces, dependencies, dependencies, schema object, administrative accounts, databases, administrator privileges, starting up, SYS user name, data dictionary, SYSTEM user name, schemas, sample, sample schemas, tables, object, object tables, CREATE TABLE statement, primary keys, index-organized tables, tables, external, external tables, permanent, temporary tables, tables, temporary, SQL, result sets, result sets, SQL, columns, data types, how they relate to tables, virtual columns, virtual, invisible columns, invisible, rows, ALTER TABLE statement, characteristics, constraints, integrity, primary key, foreign keys, nulls, fields, how stored, NOT NULL, built-in, PL/SQL, BOOLEAN data type, BOOLEAN, in PL/SQL, reference types, composite types, user-defined, character, character data types, VARCHAR2, VARCHAR2 data type, character sets, ASCII, EBCDIC, Unicode, code points, CHAR data type, NCHAR data type, NVARCHAR2 data type, NCHAR, NVARCHAR2, NaN (not a number), numbers, floating point, floating-point numbers, numeric, numeric data types, NUMBER data type, NUMBER, BINARY_DOUBLE data type, BINARY_FLOAT data type, datetime data types, datetime, DATE data type, TIMESTAMP data type, DATE, format models, format models, data type, NLS_DATE_FORMAT parameter, TO_DATE function, time zones, in date/time columns, TIMESTAMP, ROWID data type, ROWID, rowids, physical, logical, foreign, universal, UROWID, UROWID data type, pseudocolumns, functions, TO_CHAR function, integrity constraints, segments, table storage, LONG data type, storage of, order of, statistics, optimizer, clustered, row pieces, chaining across blocks, B-tree indexes, B-tree, addresses, compression, table, database buffer cache, OLTP table, OLTP, table compression, basic table, Hybrid Columnar Compression, In-Memory Column Store, online archival, warehouse, compression, Hybrid Columnar, Hybrid Columnar, compression units, compression units, Hybrid Columnar, row-level locks, locks, Hybrid Column Compression, joins, table, clustered tables, clusters, table, cluster keys, data blocks, clustered rows, CREATE CLUSTER statement, indexed, cluster indexes, hash, hash clusters, index, hash functions, hash key values, scans, range, queries, single-table, hash cluster storage, hash collisions, dimensions, attribute-clustered tables, tables, attribute-clustered, benefits, attribute-clustered, join attribute clustering, zone maps, materialized views, zone maps and, linear ordering, star schemas, dimensional hierarchies, interleaved ordering, temporary, creation, CREATE INDEX statement, CREATE GLOBAL TEMPORARY TABLE statement, temporary segments, external, internal tables, access drivers, external table, APIs (application program interfaces), object, object types"/>
<meta name="dcterms.created" content="2017-07-10T11:33:29Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Concepts"/>
<meta name="dcterms.identifier" content="E41396-15"/>
<meta name="dcterms.isVersionOf" content="CNCPT"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1993, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="intro.htm" title="Previous" type="text/html"/>
<link rel="Next" href="indexiot.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41396-15.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-096986C4-9AD7-401D-BA6D-EF6CD4B494FE"></a> <span id="PAGE" style="display:none;">7/34</span> <!-- End Header -->
<a id="CNCPT010"></a>
<h1 id="CNCPT-GUID-096986C4-9AD7-401D-BA6D-EF6CD4B494FE" class="sect1"><span class="enumeration_chapter">2</span> Tables and Table Clusters</h1>
<div>
<p>This chapter provides an introduction to schema objects and discusses tables, which are the most common types of schema objects.</p>
<p>This chapter contains the following sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tablecls.htm#GUID-72E247B5-F39A-47F1-9445-72D9221F57E3" title="A database schema is a logical container for data structures, called schema objects. Examples of schema objects are tables and indexes. You create and manipulate schema objects with SQL.">Introduction to Schema Objects</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-F845B1A7-71E3-4312-B66D-BC16C198ECE5" title="A table is the basic unit of data organization in an Oracle database.">Overview of Tables</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-04AADD81-E5C2-498B-B857-DF2A37DD3520" title="A table cluster is a group of tables that share common columns and store related data in the same blocks.">Overview of Table Clusters</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-7A1C37B5-F594-4C8E-A38B-6E37742492A1" title="An attribute-clustered table is a heap-organized table that stores data in close proximity on disk based on user-specified clustering directives. The directives specify columns in single or multiple tables.">Overview of Attribute-Clustered Tables</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-23B23DCF-7482-4585-9C63-AC073C5DE224" title="A temporary table holds data that exists only for the duration of a transaction or session. Data in a temporary table is private to the session, which means that each session can only see and modify its own data.">Overview of Temporary Tables</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-97FC9DFF-A6CF-46CD-9F6F-D88A37C0E79C" title="An external table accesses data in external sources as if this data were in a table in the database. You can use SQL, PL/SQL, and Java to query the external data.">Overview of External Tables</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-EBB02ED3-525E-4D7F-B984-E8AC3BF039F7" title="An Oracle object type is a user-defined type with a name, attributes, and methods. An object table is a special kind of table in which each row represents an object. Object types make it possible to model real-world entities such as customers and purchase orders as objects in the database.">Overview of Object Tables</a></p>
</li>
</ul>
</div>
<a id="CNCPT88799"></a><a id="CNCPT111"></a>
<div class="props_rev_3"><a id="GUID-72E247B5-F39A-47F1-9445-72D9221F57E3"></a>
<h2 id="CNCPT-GUID-72E247B5-F39A-47F1-9445-72D9221F57E3" class="sect2">Introduction to Schema Objects</h2>
<div>
<p>A database <span class="bold">schema</span> is a logical container for data structures, called schema objects. Examples of schema objects are tables and indexes. You create and manipulate schema objects with SQL.</p>
<p>A <a href="glossary.htm#GUID-2D2B8165-D2CE-4D08-82D6-A7E1D988471B"><span class="xrefglossterm">database user</span></a> account has a password and specific database privileges. Each user account owns a single schema, which has the same name as the user. The schema contains the data for the user owning the schema. For example, the <code class="codeph">hr</code> user account owns the <code class="codeph">hr</code> schema, which contains schema objects such as the <code class="codeph">employees</code> table. In a production database, the schema owner usually represents a database application rather than a person.</p>
<p>Within a schema, each schema object of a particular type has a unique name. For example, <code class="codeph">hr.employees</code> refers to the table <code class="codeph">employees</code> in the <code class="codeph">hr</code> schema. <a href="tablecls.htm#GUID-72E247B5-F39A-47F1-9445-72D9221F57E3__CBBHBEIE">Figure 2-1</a> depicts a schema owner named <code class="codeph">hr</code> and schema objects within the <code class="codeph">hr</code> schema.</p>
<div class="figure" id="GUID-72E247B5-F39A-47F1-9445-72D9221F57E3__CBBHBEIE">
<p class="titleinfigure">Figure 2-1 HR Schema</p>
<img width="498" height="251" src="img/GUID-35D3B6DB-6F3B-42A0-BA5B-9CA8BD2FABF2-default.gif" alt="Description of Figure 2-1 follows" title="Description of Figure 2-1 follows"/><br/>
<a href="img_text/GUID-35D3B6DB-6F3B-42A0-BA5B-9CA8BD2FABF2-print.htm">Description of &#34;Figure 2-1 HR Schema&#34;</a></div>
<!-- class="figure" -->
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tablecls.htm#GUID-7567BE77-AFC0-446C-832A-FCC1337DEED8" title="Oracle SQL enables you to create and manipulate many other types of schema objects.">Schema Object Types</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-87464D41-96B9-41C4-B62B-3D8D28D37745" title="Some schema objects store data in a type of logical storage structure called a segment. For example, a nonpartitioned heap-organized table or an index creates a segment.">Schema Object Storage</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-807D07C7-A3ED-490A-8455-D1830649182D" title="Some schema objects refer to other objects, creating a schema object dependency.">Schema Object Dependencies</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-97709804-7430-4BD0-AFF4-727B74F6997E" title="All Oracle databases include default administrative accounts. Administrative accounts are highly privileged and are intended only for DBAs authorized to perform tasks such as starting and stopping the database, managing memory and storage, creating and managing database users, and so on.">SYS and SYSTEM Schemas</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-C5393C1A-A5F4-42E1-8A85-F00441C72023" title="An Oracle database may include sample schemas, which are a set of interlinked schemas that enable Oracle documentation and Oracle instructional materials to illustrate common database tasks.">Sample Schemas</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-72E247B5-F39A-47F1-9445-72D9221F57E3__GUID-32E29591-36A8-4CB9-B992-28BB67B7122D">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="cmntopc.htm#GUID-4D6D2B67-1B65-476D-852A-976E9D153EEC" title="In general, database security involves user authentication, encryption, access control, and monitoring.">Overview of Database Security</a>&#34;</span> to learn more about users and privileges</p>
</div>
</div>
<a id="CNCPT88800"></a>
<div class="props_rev_3"><a id="GUID-7567BE77-AFC0-446C-832A-FCC1337DEED8"></a>
<h3 id="CNCPT-GUID-7567BE77-AFC0-446C-832A-FCC1337DEED8" class="sect3">Schema Object Types</h3>
<div>
<p>Oracle SQL enables you to create and manipulate many other types of schema objects.</p>
<p>The principal types of schema objects are:</p>
<ul style="list-style-type: disc;">
<li>
<p>Tables</p>
<p>A <a href="glossary.htm#GUID-DA8F7E11-B6AF-4ED3-B2A9-B5741E9AE2D4"><span class="xrefglossterm">table</span></a> stores data in rows. Tables are the most important schema objects in a relational database.</p>
</li>
<li>
<p>Indexes</p>
<p>Indexes are schema objects that contain an entry for each indexed row of the table or <a href="glossary.htm#GUID-1C56177E-6BEE-4FE7-B45E-38298CDB946D"><span class="xrefglossterm">table cluster</span></a> and provide direct, fast access to rows. Oracle Database supports several types of index. An <a href="glossary.htm#GUID-FD628CF1-3A67-4171-92BB-D4A74119ACD9"><span class="xrefglossterm">index-organized table</span></a> is a table in which the data is stored in an index structure.</p>
</li>
<li>
<p>Partitions</p>
<p>Partitions are pieces of large tables and indexes. Each partition has its own name and may optionally have its own storage characteristics.</p>
</li>
<li>
<p>Views</p>
<p>Views are customized presentations of data in one or more tables or other views. You can think of them as stored queries. Views do not actually contain data.</p>
</li>
<li>
<p>Sequences</p>
<p>A sequence is a user-created object that can be shared by multiple users to generate integers. Typically, you use sequences to generate <a href="glossary.htm#GUID-8640EFA5-276C-4812-A078-1F21F55F4200"><span class="xrefglossterm">primary key</span></a> values.</p>
</li>
<li>
<p>Dimensions</p>
<p>A dimension defines a parent-child relationship between pairs of column sets, where all the columns of a column set must come from the same table. Dimensions are commonly used to categorize data such as customers, products, and time.</p>
</li>
<li>
<p>Synonyms</p>
<p>A synonym is an alias for another schema object. Because a synonym is simply an alias, it requires no storage other than its definition in the <a href="glossary.htm#GUID-D6A3934F-BA6D-464F-9612-C683E20514A4"><span class="xrefglossterm">data dictionary</span></a>.</p>
</li>
<li>
<p>PL/SQL subprograms and packages</p>
<p>PL/SQL is the Oracle procedural extension of SQL. A <a href="glossary.htm#GUID-4BF65C07-E5DD-454C-8AD0-E38EF5672CE4"><span class="xrefglossterm">PL/SQL subprogram</span></a> is a named PL/SQL block that can be invoked with a set of parameters. A <a href="glossary.htm#GUID-FE40E95B-5EB8-46D6-8ED2-5DB2D26C8726"><span class="xrefglossterm">PL/SQL package</span></a> groups logically related PL/SQL types, variables, and subprograms.</p>
</li>
</ul>
<p>Other types of objects are also stored in the database and can be created and manipulated with SQL statements but are not contained in a schema. These objects include database user account, roles, contexts, and dictionary objects.</p>
<div class="infoboxnotealso" id="GUID-7567BE77-AFC0-446C-832A-FCC1337DEED8__GUID-B6FB8A4B-8C2B-44C2-AA0E-29725BC32D5E">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="indexiot.htm#GUID-797E49E6-2DCE-4FD4-8E4A-6E761F1383D1" title="Indexes are schema objects that can speed access to table rows. Index-organized tables are tables stored in an index structure.">Indexes and Index-Organized Tables</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="schemaob.htm#GUID-91498562-1809-4E67-B7AD-9718ED60DEFF" title="In an Oracle database, partitioning enables you to decompose very large tables and indexes into smaller and more manageable pieces called partitions. Each partition is an independent object with its own name and optionally its own storage characteristics.">Overview of Partitions</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="schemaob.htm#GUID-15E7AEDB-9A3F-4B31-AD2D-66253CC822E5" title="A view is a logical representation of one or more tables. In essence, a view is a stored query.">Overview of Views</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="schemaob.htm#GUID-29E19A46-D91F-4EEB-BD0C-E65A89F2F59B" title="A sequence is a schema object from which multiple users can generate unique integers. A sequence generator provides a highly scalable and well-performing method to generate surrogate keys for a number data type.">Overview of Sequences</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="schemaob.htm#GUID-84D64C39-D8E8-4706-B4E3-519FE2CEE4C2" title="A typical data warehouse has two important components: dimensions and facts. A dimension is any category used in specifying business questions, for example, time, geography, product, department, and distribution channel. A fact is an event or entity associated with a particular set of dimension values, for example, units sold or profits.">Overview of Dimensions</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="schemaob.htm#GUID-4977D7F8-B766-4F4A-8FF6-B8496DED3DF2" title="A synonym is an alias for a schema object. For example, you can create a synonym for a table or view, sequence, PL/SQL program unit, user-defined object type, or another synonym. Because a synonym is simply an alias, it requires no storage other than its definition in the data dictionary.">Overview of Synonyms</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="srvrside.htm#GUID-7C398775-F4FB-47A2-AED5-458E00FB1E35" title="A PL/SQL subprogram is a named PL/SQL block that permits the caller to supply parameters that can be input only, output only, or input and output values.">PL/SQL Subprograms</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="srvrside.htm#GUID-87FA8137-A449-4542-8869-441C63810C63" title="A PL/SQL package is a group of related subprograms, along with the cursors and variables they use, stored together in the database for continued use as a unit. Packaged subprograms can be called explicitly by applications or users.">PL/SQL Packages</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ADMIN021" target="_blank" href="../ADMIN/general.htm#ADMIN021"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to manage schema objects</p>
</li>
<li>
<p><a class="olink SQLRF20003" target="_blank" href="../SQLRF/sql_elements007.htm#SQLRF20003"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for more about schema objects and database objects</p>
</li>
</ul>
</div>
</div>
</div>
<a id="CNCPT88802"></a><a id="CNCPT88801"></a>
<div class="props_rev_3"><a id="GUID-87464D41-96B9-41C4-B62B-3D8D28D37745"></a>
<h3 id="CNCPT-GUID-87464D41-96B9-41C4-B62B-3D8D28D37745" class="sect3">Schema Object Storage</h3>
<div>
<p>Some schema objects store data in a type of logical storage structure called a <span class="bold">segment</span>. For example, a nonpartitioned heap-organized table or an index creates a segment.</p>
<p>Other schema objects, such as views and sequences, consist of metadata only. This topic describes only schema objects that have segments.</p>
<p>Oracle Database stores a schema object logically within a <a href="glossary.htm#GUID-AA66891C-71B2-4D55-8F64-0E427AE24E88"><span class="xrefglossterm">tablespace</span></a>. There is no relationship between schemas and tablespaces: a tablespace can contain objects from different schemas, and the objects for a schema can be contained in different tablespaces. The data of each object is physically contained in one or more data files.</p>
<p>The following figure shows a possible configuration of table and index segments, tablespaces, and data files. The data segment for one table spans two data files, which are both part of the same tablespace. A segment cannot span multiple tablespaces.</p>
<div class="figure" id="GUID-87464D41-96B9-41C4-B62B-3D8D28D37745__I5716">
<p class="titleinfigure">Figure 2-2 Segments, Tablespaces, and Data Files</p>
<img width="620" height="542" src="img/GUID-C650BC57-BCBB-46EC-A92F-7CA2319C80D2-default.gif" alt="Description of Figure 2-2 follows" title="Description of Figure 2-2 follows"/><br/>
<a href="img_text/GUID-C650BC57-BCBB-46EC-A92F-7CA2319C80D2-print.htm">Description of &#34;Figure 2-2 Segments, Tablespaces, and Data Files&#34;</a></div>
<!-- class="figure" -->
<div class="infoboxnotealso" id="GUID-87464D41-96B9-41C4-B62B-3D8D28D37745__GUID-6F9C77F6-7DD3-4BA8-AAEA-12BD536B38E9">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="logical.htm#GUID-13CE5EDA-8C66-4CA0-87B5-4069215A368D" title="This chapter describes the nature of and relationships among logical storage structures. These structures are created and recognized by Oracle Database and are not known to the operating system.">Logical Storage Structures</a>&#34;</span> to learn about tablespaces and segments</p>
</li>
<li>
<p><a class="olink ADMIN014" target="_blank" href="../ADMIN/schema.htm#ADMIN014"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to manage storage for schema objects</p>
</li>
</ul>
</div>
</div>
</div>
<a id="CNCPT1859"></a>
<div class="props_rev_3"><a id="GUID-807D07C7-A3ED-490A-8455-D1830649182D"></a>
<h3 id="CNCPT-GUID-807D07C7-A3ED-490A-8455-D1830649182D" class="sect3">Schema Object Dependencies</h3>
<div>
<p>Some schema objects refer to other objects, creating a <span class="bold">schema object dependency</span>.</p>
<p>For example, a view contains a <a href="glossary.htm#GUID-CCF91C9F-A98A-498F-A84B-58A0FA16CD6E"><span class="xrefglossterm">query</span></a> that references tables or views, while a <a href="glossary.htm#GUID-68532EDC-3324-48DE-9AD5-52CD2EC671EA"><span class="xrefglossterm">PL/SQL</span></a> subprogram invokes other subprograms. If the definition of object A references object B, then A is a <a href="glossary.htm#GUID-A56453AE-715F-489E-B0E1-B0A9EC81D33D"><span class="xrefglossterm">dependent object</span></a> on B, and B is a <a href="glossary.htm#GUID-031F5F29-8216-43EB-83C5-D4AF79CE540E"><span class="xrefglossterm">referenced object</span></a> for A.</p>
<p>Oracle Database provides an automatic mechanism to ensure that a dependent object is always up to date with respect to its referenced objects. When you create a dependent object, the database tracks dependencies between the dependent object and its referenced objects. When a referenced object changes in a way that might affect a dependent object, the database marks the dependent object invalid. For example, if a user drops a table, no view based on the dropped table is usable.</p>
<p>An invalid dependent object must be recompiled against the new definition of a referenced object before the dependent object is usable. Recompilation occurs automatically when the invalid dependent object is referenced.</p>
<p>As an illustration of how schema objects can create dependencies, the following sample script creates a table <code class="codeph">test_table</code> and then a procedure that queries this table:</p>
<pre dir="ltr">CREATE TABLE test_table ( col1 INTEGER, col2 INTEGER );

CREATE OR REPLACE PROCEDURE test_proc
AS
BEGIN
 FOR x IN ( SELECT col1, col2 FROM test_table )
 LOOP
   -- process data
   NULL;
 END LOOP;
END;
/
</pre>
<p>The following query of the status of procedure <code class="codeph">test_proc</code> shows that it is valid:</p>
<pre dir="ltr">SQL&gt; SELECT OBJECT_NAME, STATUS FROM USER_OBJECTS WHERE OBJECT_NAME = &#39;TEST_PROC&#39;;
 
OBJECT_NAME STATUS
----------- -------
TEST_PROC   VALID
</pre>
<p>After adding the <code class="codeph">col3</code> column to <code class="codeph">test_table</code>, the procedure is still valid because the procedure has no dependencies on this column:</p>
<pre dir="ltr">SQL&gt; ALTER TABLE test_table ADD col3 NUMBER;
 
Table altered.
 
SQL&gt; SELECT OBJECT_NAME, STATUS FROM USER_OBJECTS WHERE OBJECT_NAME = &#39;TEST_PROC&#39;;
 
OBJECT_NAME STATUS
----------- -------
TEST_PROC   VALID
</pre>
<p>However, changing the data type of the <code class="codeph">col1</code> column, which the <code class="codeph">test_proc</code> procedure depends on in, invalidates the procedure:</p>
<pre dir="ltr">SQL&gt; ALTER TABLE test_table MODIFY col1 VARCHAR2(20);
 
Table altered.
 
SQL&gt; SELECT OBJECT_NAME, STATUS FROM USER_OBJECTS WHERE OBJECT_NAME = &#39;TEST_PROC&#39;;
 
OBJECT_NAME STATUS
----------- -------
TEST_PROC   INVALID
</pre>
<p>Running or recompiling the procedure makes it valid again, as shown in the following example:</p>
<pre dir="ltr">SQL&gt; EXECUTE test_proc
 
PL/SQL procedure successfully completed.
 
SQL&gt; SELECT OBJECT_NAME, STATUS FROM USER_OBJECTS WHERE OBJECT_NAME = &#39;TEST_PROC&#39;;
 
OBJECT_NAME STATUS
----------- -------
TEST_PROC   VALID
</pre>
<div class="infoboxnotealso" id="GUID-807D07C7-A3ED-490A-8455-D1830649182D__GUID-FD62CE90-EBD9-4A9E-B863-C8C076999A16">
<p class="notep1">See Also:</p>
<p><a class="olink ADMIN11556" target="_blank" href="../ADMIN/general.htm#ADMIN11556"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> and <a class="olink ADFNS99966" target="_blank" href="../ADFNS/adfns_dependencies.htm#ADFNS99966"><span><cite>Oracle Database Development Guide</cite></span></a> to learn how to manage schema object dependencies</p>
</div>
</div>
</div>
<a id="CNCPT88803"></a>
<div class="props_rev_3"><a id="GUID-97709804-7430-4BD0-AFF4-727B74F6997E"></a>
<h3 id="CNCPT-GUID-97709804-7430-4BD0-AFF4-727B74F6997E" class="sect3">SYS and SYSTEM Schemas</h3>
<div>
<p>All Oracle databases include default administrative accounts. Administrative accounts are highly privileged and are intended only for DBAs authorized to perform tasks such as starting and stopping the database, managing memory and storage, creating and managing database users, and so on.</p>
<p>The <code class="codeph">SYS</code> administrative account is automatically created when a database is created. This account can perform all database administrative functions. The <code class="codeph">SYS</code> schema stores the base tables and views for the <a href="glossary.htm#GUID-D6A3934F-BA6D-464F-9612-C683E20514A4"><span class="xrefglossterm">data dictionary</span></a>. These base tables and views are critical for the operation of Oracle Database. Tables in the <code class="codeph">SYS</code> schema are manipulated only by the database and must never be modified by any user.</p>
<p>The <code class="codeph">SYSTEM</code> administrative account is also automatically created when a database is created. The <code class="codeph">SYSTEM</code> schema stores additional tables and views that display administrative information, and internal tables and views used by various Oracle Database options and tools. Never use the <code class="codeph">SYSTEM</code> schema to store tables of interest to nonadministrative users.</p>
<div class="infoboxnotealso" id="GUID-97709804-7430-4BD0-AFF4-727B74F6997E__GUID-E9B9327C-257B-44A7-910D-0B87F4786CF2">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="cmntopc.htm#GUID-CE700CE1-BF1B-48C0-A905-50CEE055C4BC" title="Each Oracle database has a list of valid database users.">User Accounts</a>&#34;</span> and <span class="q">&#34;<a href="startup.htm#GUID-921ADB75-43B0-4F84-BAA5-F90EE649877F" title="Database startup and shutdown are powerful administrative options that are restricted to users who connect to Oracle Database with administrator privileges.">Connection with Administrator Privileges</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ADMIN11042" target="_blank" href="../ADMIN/dba.htm#ADMIN11042"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn about <code class="codeph">SYS</code>, <code class="codeph">SYSTEM</code>, and other administrative accounts</p>
</li>
</ul>
</div>
</div>
</div>
<a id="CNCPT88805"></a><a id="CNCPT88804"></a>
<div class="props_rev_3"><a id="GUID-C5393C1A-A5F4-42E1-8A85-F00441C72023"></a>
<h3 id="CNCPT-GUID-C5393C1A-A5F4-42E1-8A85-F00441C72023" class="sect3">Sample Schemas</h3>
<div>
<p>An Oracle database may include <span class="bold">sample schemas</span>, which are a set of interlinked schemas that enable Oracle documentation and Oracle instructional materials to illustrate common database tasks.</p>
<p>The <code class="codeph">hr</code> sample schema contains information about employees, departments and locations, work histories, and so on. The following illustration depicts an entity-relationship diagram of the tables in <code class="codeph">hr</code>. Most examples in this manual use objects from this schema.</p>
<div class="figure" id="GUID-C5393C1A-A5F4-42E1-8A85-F00441C72023__CBBJICEB">
<p class="titleinfigure">Figure 2-3 HR Schema</p>
<img width="438" height="327" src="img/GUID-5D6B55DA-2A66-41C8-999A-A2BC4919175F-default.gif" alt="Description of Figure 2-3 follows" title="Description of Figure 2-3 follows"/><br/>
<a href="img_text/GUID-5D6B55DA-2A66-41C8-999A-A2BC4919175F-print.htm">Description of &#34;Figure 2-3 HR Schema&#34;</a></div>
<!-- class="figure" -->
<div class="infoboxnotealso" id="GUID-C5393C1A-A5F4-42E1-8A85-F00441C72023__GUID-E9974582-1C2F-48DB-BF6E-073D298BA1EF">
<p class="notep1">See Also:</p>
<p><a class="olink GUID-844E92D8-A4C8-4522-8AF5-761D4BE99200" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=GUID-844E92D8-A4C8-4522-8AF5-761D4BE99200"><span><cite>Oracle Database Sample Schemas</cite></span></a></p>
</div>
</div>
</div>
</div>
<a id="CNCPT211"></a>
<div class="props_rev_3"><a id="GUID-F845B1A7-71E3-4312-B66D-BC16C198ECE5"></a>
<h2 id="CNCPT-GUID-F845B1A7-71E3-4312-B66D-BC16C198ECE5" class="sect2">Overview of Tables</h2>
<div>
<p>A <span class="bold">table</span> is the basic unit of data organization in an Oracle database.</p>
<p>A table describes an <span class="bold">entity</span>, which is something of significance about which information must be recorded. For example, an employee could be an entity.</p>
<p>Oracle Database tables fall into the following basic categories:</p>
<ul style="list-style-type: disc;">
<li>
<p>Relational tables</p>
<p>Relational tables have simple columns and are the most common table type. <a href="tablecls.htm#GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73__CBBEHJCH">Example 2-1</a> shows a <code class="codeph">CREATE TABLE</code> statement for a relational table.</p>
</li>
<li>
<p>Object tables</p>
<p>The columns correspond to the top-level attributes of an <a href="glossary.htm#GUID-33C40B41-75EF-4B5A-AE9F-45CB91700218"><span class="xrefglossterm">object type</span></a>. See <span class="q">&#34;<a href="tablecls.htm#GUID-EBB02ED3-525E-4D7F-B984-E8AC3BF039F7" title="An Oracle object type is a user-defined type with a name, attributes, and methods. An object table is a special kind of table in which each row represents an object. Object types make it possible to model real-world entities such as customers and purchase orders as objects in the database.">Overview of Object Tables</a>&#34;</span>.</p>
</li>
</ul>
<p>You can create a relational table with the following organizational characteristics:</p>
<ul style="list-style-type: disc;">
<li>
<p>A <a href="glossary.htm#GUID-861D8FCE-B86C-46B3-AA01-35066D24F4CF"><span class="xrefglossterm">heap-organized table</span></a> does not store rows in any particular order. The <code class="codeph">CREATE TABLE</code> statement creates a heap-organized table by default.</p>
</li>
<li>
<p>An <a href="glossary.htm#GUID-FD628CF1-3A67-4171-92BB-D4A74119ACD9"><span class="xrefglossterm">index-organized table</span></a> orders rows according to the primary key values. For some applications, index-organized tables enhance performance and use disk space more efficiently. See <span class="q">&#34;<a href="indexiot.htm#GUID-DAEC075B-C16D-4A57-898C-70EBCB364F0C" title="An index-organized table is a table stored in a variation of a B-tree index structure. In contrast, a heap-organized table inserts rows where they fit.">Overview of Index-Organized Tables</a>&#34;</span>.</p>
</li>
<li>
<p>An <a href="glossary.htm#GUID-1B18B978-29DD-4961-BD39-86838CB5F7D0"><span class="xrefglossterm">external table</span></a> is a read-only table whose metadata is stored in the database but whose data is stored outside the database. See <span class="q">&#34;<a href="tablecls.htm#GUID-97FC9DFF-A6CF-46CD-9F6F-D88A37C0E79C" title="An external table accesses data in external sources as if this data were in a table in the database. You can use SQL, PL/SQL, and Java to query the external data.">Overview of External Tables</a>&#34;</span>.</p>
</li>
</ul>
<p>A table is either permanent or temporary. A permanent table definition and data persist across sessions. A <a href="glossary.htm#GUID-41501962-A37B-4D37-BAF2-59030048FE08"><span class="xrefglossterm">temporary table</span></a> definition persists in the same way as a permanent table definition, but the data exists only for the duration of a <a href="glossary.htm#GUID-212D8EA1-D704-4D7B-A72D-72001965CE45"><span class="xrefglossterm">transaction</span></a> or <a href="glossary.htm#GUID-0F44C072-9841-4E2E-B846-FB16A2E54139"><span class="xrefglossterm">session</span></a>. Temporary tables are useful in applications where a result set must be held temporarily, perhaps because the result is constructed by running multiple operations.</p>
<p>This topic contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tablecls.htm#GUID-46FE2805-CA44-429B-84F4-492F9A2C05D6" title="A table definition includes a table name and set of columns.">Columns</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-62BA95A1-692C-4323-A594-11AD70EF475D" title="A row is a collection of column information corresponding to a record in a table.">Rows</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73" title="The Oracle SQL statement to create a table is CREATE TABLE.">Example: CREATE TABLE and ALTER TABLE Statements</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-A8F3420D-093C-449F-87E4-6C3DDFA8BCFF" title="Each column has a data type, which is associated with a specific storage format, constraints, and valid range of values. The data type of a value associates a fixed set of properties with the value.">Oracle Data Types</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-FEB30808-F9D1-46AC-B9D7-AE18A12E1C78" title="An integrity constraint is a named rule that restrict the values for one or more columns in a table. These rules prevent invalid data entry into tables. Also, constraints can prevent the deletion of a table when certain dependencies exist.">Integrity Constraints</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-85BE900A-0047-4B7C-A992-F1E35B640CA3" title="Oracle Database uses a data segment in a tablespace to hold table data.">Table Storage</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-54EE5325-0894-4869-B3AD-8912D9B4A329" title="The database can use table compression to reduce the amount of storage required for the table.">Table Compression</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-F845B1A7-71E3-4312-B66D-BC16C198ECE5__GUID-EA8730C5-3F77-452C-803F-E7A001117EFD">
<p class="notep1">See Also:</p>
<p><a class="olink ADMIN015" target="_blank" href="../ADMIN/tables.htm#ADMIN015"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to manage tables</p>
</div>
</div>
<a id="CNCPT88806"></a>
<div class="props_rev_3"><a id="GUID-46FE2805-CA44-429B-84F4-492F9A2C05D6"></a>
<h3 id="CNCPT-GUID-46FE2805-CA44-429B-84F4-492F9A2C05D6" class="sect3">Columns</h3>
<div>
<p>A table definition includes a table name and set of columns.</p>
<p>A <a href="glossary.htm#GUID-F1D9AA5F-C66A-4D5F-A84C-8D7360DE3BE5"><span class="xrefglossterm">column</span></a> identifies an attribute of the entity described by the table. For example, the column <code class="codeph">employee_id</code> in the <code class="codeph">employees</code> table refers to the employee ID attribute of an employee entity.</p>
<p>In general, you give each column a column name, a <a href="glossary.htm#GUID-3873B26C-657D-4508-B13D-9155F1D5D8F4"><span class="xrefglossterm">data type</span></a>, and a width when you create a table. For example, the data type for <code class="codeph">employee_id</code> is <code class="codeph">NUMBER(6)</code>, indicating that this column can only contain numeric data up to 6 digits in width. The width can be predetermined by the data type, as with <code class="codeph">DATE</code>.</p>
</div>
<a id="CNCPT89199"></a>
<div class="props_rev_3"><a id="GUID-E32FDAD3-0D1E-4F16-B1A2-7F821D63177F"></a>
<h4 id="CNCPT-GUID-E32FDAD3-0D1E-4F16-B1A2-7F821D63177F" class="sect4">Virtual Columns</h4>
<div>
<p>A table can contain a <span class="bold">virtual column</span>, which unlike a nonvirtual column does not consume disk space.</p>
<p>The database derives the values in a virtual column on demand by computing a set of user-specified expressions or functions. For example, the virtual column <code class="codeph">income</code> could be a function of the <code class="codeph">salary</code> and <code class="codeph">commission_pct</code> columns.</p>
<div class="infoboxnotealso" id="GUID-E32FDAD3-0D1E-4F16-B1A2-7F821D63177F__GUID-06F67500-1436-4183-AC9C-25469E1AEFBF">
<p class="notep1">See Also:</p>
<p><a class="olink ADMIN12494" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN12494"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to manage virtual columns</p>
</div>
</div>
</div>
<a id="CNCPT89200"></a>
<div class="props_rev_3"><a id="GUID-6CD9E011-9F12-4CBD-9D37-7A41F3EB4F27"></a>
<h4 id="CNCPT-GUID-6CD9E011-9F12-4CBD-9D37-7A41F3EB4F27" class="sect4">Invisible Columns</h4>
<div>
<p>An <span class="bold">invisible column</span> is a user-specified column whose values are only visible when the column is explicitly specified by name. You can add an invisible column to a table without affecting existing applications, and make the column visible if necessary.</p>
<p>In general, invisible columns help migrate and evolve online applications. A use case might be an application that queries a three-column table with a <code class="codeph">SELECT *</code> statement. Adding a fourth column to the table would break the application, which expects three columns of data. Adding a fourth invisible column makes the application function normally. A developer can then alter the application to handle a fourth column, and make the column visible when the application goes live.</p>
<p>The following example creates a table <code class="codeph">products</code> with an invisible column <code class="codeph">count</code>, and then makes the invisible column visible:</p>
<pre dir="ltr">CREATE TABLE products ( prod_id INT, count INT INVISIBLE );
ALTER TABLE products MODIFY ( count VISIBLE );
</pre>
<div class="infoboxnotealso" id="GUID-6CD9E011-9F12-4CBD-9D37-7A41F3EB4F27__GUID-1D808D2B-FF35-4B69-9A16-C50F8295728B">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADMIN13866" target="_blank" href="../ADMIN/tables.htm#ADMIN13866"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to manage invisible columns</p>
</li>
<li>
<p><a class="olink SQLRF55897" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF55897"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for more information about invisible columns</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="CNCPT89295"></a>
<div class="props_rev_3"><a id="GUID-62BA95A1-692C-4323-A594-11AD70EF475D"></a>
<h3 id="CNCPT-GUID-62BA95A1-692C-4323-A594-11AD70EF475D" class="sect3">Rows</h3>
<div>
<p>A <span class="bold">row</span> is a collection of column information corresponding to a record in a table.</p>
<p>For example, a row in the <code class="codeph">employees</code> table describes the attributes of a specific employee: employee ID, last name, first name, and so on. After you create a table, you can insert, query, delete, and update rows using SQL.</p>
</div>
</div>
<a id="CNCPT88808"></a><a id="CNCPT89156"></a><a id="CNCPT88809"></a><a id="CNCPT88807"></a>
<div class="props_rev_3"><a id="GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73"></a>
<h3 id="CNCPT-GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73" class="sect3">Example: CREATE TABLE and ALTER TABLE Statements</h3>
<div>
<p>The Oracle SQL statement to create a table is <code class="codeph">CREATE TABLE</code>.</p>
<div class="example" id="GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73__CBBEHJCH">
<p class="titleinexample">Example 2-1 CREATE TABLE employees</p>
<p>The following example shows the <code class="codeph">CREATE TABLE</code> statement for the <code class="codeph">employees</code> table in the <code class="codeph">hr</code> sample schema. The statement specifies columns such as <code class="codeph">employee_id</code>, <code class="codeph">first_name</code>, and so on, specifying a data type such as <code class="codeph">NUMBER</code> or <code class="codeph">DATE</code> for each column.</p>
<pre dir="ltr">CREATE TABLE employees
    ( employee_id    NUMBER(6)
    , first_name     VARCHAR2(20)
    , last_name      VARCHAR2(25)
         CONSTRAINT     emp_last_name_nn  NOT NULL
    , email          VARCHAR2(25)
        CONSTRAINT     emp_email_nn  NOT NULL
    , phone_number   VARCHAR2(20)
    , hire_date      DATE
        CONSTRAINT     emp_hire_date_nn  NOT NULL
    , job_id         VARCHAR2(10)
        CONSTRAINT     emp_job_nn  NOT NULL
    , salary         NUMBER(8,2)
    , commission_pct NUMBER(2,2)
    , manager_id     NUMBER(6)
    , department_id  NUMBER(4)
    , CONSTRAINT     emp_salary_min
                     CHECK (salary &gt; 0)
    , CONSTRAINT     emp_email_uk
                     UNIQUE (email)
    ) ;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73__BABCDDEF">
<p class="titleinexample">Example 2-2 ALTER TABLE employees</p>
<p>The following example shows an <code class="codeph">ALTER TABLE</code> statement that adds integrity constraints to the <code class="codeph">employees</code> table. Integrity constraints enforce business rules and prevent the entry of invalid information into tables.</p>
<pre dir="ltr">ALTER TABLE employees
ADD ( CONSTRAINT     emp_emp_id_pk
                       PRIMARY KEY (employee_id)
    , CONSTRAINT     emp_dept_fk
                       FOREIGN KEY (department_id)
                         REFERENCES departments
    , CONSTRAINT     emp_job_fk
                       FOREIGN KEY (job_id)
                         REFERENCES jobs (job_id)
    , CONSTRAINT     emp_manager_fk
                       FOREIGN KEY (manager_id)
                         REFERENCES employees
    ) ;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73__CBBHDADC">
<p class="titleinexample">Example 2-3 Rows in the employees Table</p>
<p>The following sample output shows 8 rows and 6 columns of the <code class="codeph">hr.employees</code> table.</p>
<pre dir="ltr">EMPLOYEE_ID FIRST_NAME  LAST_NAME      SALARY COMMISSION_PCT DEPARTMENT_ID
----------- ----------- ------------- ------- -------------- -------------
        100 Steven      King            24000                           90
        101 Neena       Kochhar         17000                           90
        102 Lex         De Haan         17000                           90
        103 Alexander   Hunold           9000                           60
        107 Diana       Lorentz          4200                           60
        149 Eleni       Zlotkey         10500             .2            80
        174 Ellen       Abel            11000             .3            80
        178 Kimberely   Grant            7000            .15
</pre>
<p>The preceding output illustrates some of the following important characteristics of tables, columns, and rows:</p>
<ul style="list-style-type: disc;">
<li>
<p>A row of the table describes the attributes of one employee: name, salary, department, and so on. For example, the first row in the output shows the record for the employee named Steven King.</p>
</li>
<li>
<p>A column describes an attribute of the employee. In the example, the <code class="codeph">employee_id</code> column is the <a href="glossary.htm#GUID-8640EFA5-276C-4812-A078-1F21F55F4200"><span class="xrefglossterm">primary key</span></a>, which means that every employee is uniquely identified by employee ID. Any two employees are guaranteed not to have the same employee ID.</p>
</li>
<li>
<p>A non-key column can contain rows with identical values. In the example, the salary value for employees 101 and 102 is the same: <code class="codeph">17000</code>.</p>
</li>
<li>
<p>A <a href="glossary.htm#GUID-EEE8A67D-6B0E-468E-9554-48FEE552BC9A"><span class="xrefglossterm">foreign key</span></a> column refers to a primary or unique key in the same table or a different table. In this example, the value of <code class="codeph">90</code> in <code class="codeph">department_id</code> corresponds to the <code class="codeph">department_id</code> column of the <code class="codeph">departments</code> table.</p>
</li>
<li>
<p>A <a href="glossary.htm#GUID-CCCDD0D5-7738-431A-96F4-08B32D01FD7B"><span class="xrefglossterm">field</span></a> is the intersection of a row and column. It can contain only one value. For example, the field for the department ID of employee 103 contains the value <code class="codeph">60</code>.</p>
</li>
<li>
<p>A field can lack a value. In this case, the field is said to contain a <a href="glossary.htm#GUID-8854502F-2B8F-4ABC-98FA-BBFC3695A964"><span class="xrefglossterm">null</span></a> value. The value of the <code class="codeph">commission_pct</code> column for employee 100 is null, whereas the value in the field for employee 149 is <code class="codeph">.2</code>. A column allows nulls unless a <code class="codeph">NOT</code> <code class="codeph">NULL</code> or primary key integrity constraint has been defined on this column, in which case no row can be inserted without a value for this column.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73__GUID-33C7883C-8235-4776-AD69-A265232EE1C1">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF01402" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF01402"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for <code class="codeph">CREATE TABLE</code> syntax and semantics</p>
</div>
</div>
<!-- class="example" --></div>
</div>
<a id="CNCPT113"></a>
<div class="props_rev_3"><a id="GUID-A8F3420D-093C-449F-87E4-6C3DDFA8BCFF"></a>
<h3 id="CNCPT-GUID-A8F3420D-093C-449F-87E4-6C3DDFA8BCFF" class="sect3">Oracle Data Types</h3>
<div>
<p>Each column has a <span class="bold">data type</span>, which is associated with a specific storage format, constraints, and valid range of values. The data type of a value associates a fixed set of properties with the value.</p>
<p>These properties cause Oracle Database to treat values of one data type differently from values of another. For example, you can multiply values of the <code class="codeph">NUMBER</code> data type, but not values of the <code class="codeph">RAW</code> data type.</p>
<p>When you create a table, you must specify a data type for each of its columns. Each value subsequently inserted in a column assumes the column data type.</p>
<p>Oracle Database provides several built-in data types. The most commonly used data types fall into the following categories:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tablecls.htm#GUID-5D05C023-C309-46DA-A7EC-2BED1CA512A7" title="Character data types store alphanumeric data in strings. The most common character data type is VARCHAR2, which is the most efficient option for storing character data.">Character Data Types</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-AB604FF0-D321-44CC-956E-62A7791EE2FA" title="The Oracle Database numeric data types store fixed and floating-point numbers, zero, and infinity. Some numeric types also store values that are the undefined result of an operation, which is known as &#34;not a number&#34; or NaN.">Numeric Data Types</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-F5FBE34D-911C-4818-9D25-64B2F1613A9B" title="The datetime data types are DATE and TIMESTAMP. Oracle Database provides comprehensive time zone support for time stamps.">Datetime Data Types</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-0258C4C2-2BF2-445F-B1E1-F282A57A6859" title="Every row stored in the database has an address. Oracle Database uses a ROWID data type to store the address (rowid) of every row in the database.">Rowid Data Types</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-A126BA2F-8249-4316-BC18-F12B02004550" title="A format model is a character literal that describes the format of datetime or numeric data stored in a character string. A format model does not change the internal representation of the value in the database.">Format Models and Data Types</a></p>
</li>
</ul>
<p>Other important categories of built-in types include raw, large objects (LOBs), and collections. PL/SQL has data types for constants and variables, which include <code class="codeph">BOOLEAN</code>, reference types, composite types (records), and user-defined types.</p>
<div class="infoboxnotealso" id="GUID-A8F3420D-093C-449F-87E4-6C3DDFA8BCFF__GUID-21F0D456-2B81-4012-86E7-6BAAF06244B9">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="cncptdev.htm#GUID-E918382E-0E0A-444C-ABD3-BCC6EFC0AB38" title="An internal LOB stores data in the database itself rather than in external files.">Overview of LOBs</a>&#34;</span></p>
</li>
<li>
<p><a class="olink SQLRF0021" target="_blank" href="../SQLRF/sql_elements001.htm#SQLRF0021"><span><cite>Oracle Database SQL Language Reference</cite></span></a> to learn about built-in SQL data types</p>
</li>
<li>
<p><a class="olink LNPLS003" target="_blank" href="../LNPLS/datatypes.htm#LNPLS003"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> to learn about PL/SQL data types</p>
</li>
<li>
<p><a class="olink ADFNS0002" target="_blank" href="../ADFNS/adfns_sqltypes.htm#ADFNS0002"><span><cite>Oracle Database Development Guide</cite></span></a> to learn how to use the built-in data types</p>
</li>
</ul>
</div>
</div>
<a id="CNCPT213"></a>
<div class="props_rev_3"><a id="GUID-5D05C023-C309-46DA-A7EC-2BED1CA512A7"></a>
<h4 id="CNCPT-GUID-5D05C023-C309-46DA-A7EC-2BED1CA512A7" class="sect4">Character Data Types</h4>
<div>
<p>Character data types store alphanumeric data in strings. The most common character data type is <code class="codeph">VARCHAR2</code>, which is the most efficient option for storing character data.</p>
<p>The byte values correspond to the <a href="glossary.htm#GUID-770C0F15-8AA7-446B-9DF8-455B8B406A4D"><span class="xrefglossterm">character encoding</span></a> scheme, generally called a <a href="glossary.htm#GUID-9EDC68FA-88D3-4F15-85C4-2B603C3240CE"><span class="xrefglossterm">character set</span></a>. The database character set is established at database creation. Examples of character sets are 7-bit ASCII, EBCDIC, and Unicode UTF-8.</p>
<p>The length semantics of character data types are measurable in bytes or characters. The treatment of strings as a sequence of bytes is called <a href="glossary.htm#GUID-BBEA62B4-5767-40DF-B2D6-BEC1F267B22F"><span class="xrefglossterm">byte semantics</span></a>. This is the default for character data types. The treatment of strings as a sequence of characters is called <a href="glossary.htm#GUID-46D094F4-88B8-4939-AFBD-971EA3AABBDA"><span class="xrefglossterm">character semantics</span></a>. A character is a code point of the database character set.</p>
<div class="infoboxnotealso" id="GUID-5D05C023-C309-46DA-A7EC-2BED1CA512A7__GUID-FE793A92-3719-48C8-B074-734CCDDECE58">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="cncptdev.htm#GUID-57374356-61C4-45B1-8A05-3353FD034202">Character Sets</a>&#34;</span></p>
</li>
<li>
<p><a class="olink TDDDG31000" target="_blank" href="../TDDDG/tdddg_objects.htm#TDDDG31000"><span><cite>Oracle Database 2 Day Developer&#39;s Guide</cite></span></a> and <a class="olink ADFNS00302" target="_blank" href="../ADFNS/adfns_sqltypes.htm#ADFNS00302"><span><cite>Oracle Database Development Guide</cite></span></a> and to learn how to select a character data type</p>
</li>
</ul>
</div>
</div>
<a id="CNCPT1821"></a>
<div class="props_rev_3"><a id="GUID-DCDD2E34-365B-49EB-8931-24201E49C8FD"></a>
<h5 id="CNCPT-GUID-DCDD2E34-365B-49EB-8931-24201E49C8FD" class="sect5">VARCHAR2 and CHAR Data Types</h5>
<div>
<div><span>The <code class="codeph">VARCHAR2</code> data type stores variable-length character literals. A <span class="bold">literal</span> is a fixed data value.</span></div>
<p>For example, <code class="codeph">&#39;LILA&#39;</code>, <code class="codeph">&#39;St. George Island&#39;</code>, and <code class="codeph">&#39;101&#39;</code> are all character literals; <code class="codeph">5001</code> is a numeric literal. Character literals are enclosed in single quotation marks so that the database can distinguish them from schema object names.</p>
<div class="infobox-note" id="GUID-DCDD2E34-365B-49EB-8931-24201E49C8FD__GUID-01CDC532-F4D4-4CB1-97F9-617D755AE57C">
<p class="notep1">Note:</p>
<p>This manual uses the terms <span class="italic">text literal</span>, <span class="italic">character literal</span>, and <span class="italic">string</span> interchangeably.</p>
</div>
<p>When you create a table with a <code class="codeph">VARCHAR2</code> column, you specify a maximum string length. In <a href="tablecls.htm#GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73__CBBEHJCH">Example 2-1</a>, the <code class="codeph">last_name</code> column has a data type of <code class="codeph">VARCHAR2(25)</code>, which means that any name stored in the column has a maximum of 25 bytes.</p>
<p>For each row, Oracle Database stores each value in the column as a variable-length field unless a value exceeds the maximum length, in which case the database returns an error. For example, in a single-byte character set, if you enter 10 characters for the <code class="codeph">last_name</code> column value in a row, then the column in the row piece stores only 10 characters (10 bytes), not 25. Using <code class="codeph">VARCHAR2</code> reduces space consumption.</p>
<p>In contrast to <code class="codeph">VARCHAR2</code>, <code class="codeph">CHAR</code> stores fixed-length character strings. When you create a table with a <code class="codeph">CHAR</code> column, the column requires a string length. The default is 1 byte. The database uses blanks to pad the value to the specified length.</p>
<p>Oracle Database compares <code class="codeph">VARCHAR2</code> values using nonpadded comparison semantics and compares <code class="codeph">CHAR</code> values using blank-padded comparison semantics.</p>
<div class="infoboxnotealso" id="GUID-DCDD2E34-365B-49EB-8931-24201E49C8FD__GUID-D4AF96CB-274B-4E1B-9949-9A4D45527A79">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF51040" target="_blank" href="../SQLRF/sql_elements002.htm#SQLRF51040"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for details about blank-padded and nonpadded comparison semantics</p>
</div>
</div>
</div>
<a id="CNCPT1825"></a>
<div class="props_rev_3"><a id="GUID-92C4706B-8873-4EFB-BB9A-B88351E5B950"></a>
<h5 id="CNCPT-GUID-92C4706B-8873-4EFB-BB9A-B88351E5B950" class="sect5">NCHAR and NVARCHAR2 Data Types</h5>
<div>
<div><span>The <code class="codeph">NCHAR</code> and <code class="codeph">NVARCHAR2</code> data types store Unicode character data.</span></div>
<p><span class="bold">Unicode</span> is a universal encoded character set that can store information in any language using a single character set. <code class="codeph">NCHAR</code> stores fixed-length character strings that correspond to the national character set, whereas <code class="codeph">NVARCHAR2</code> stores variable length character strings.</p>
<p>You specify a national character set when creating a database. The character set of <code class="codeph">NCHAR</code> and <code class="codeph">NVARCHAR2</code> data types must be either <code class="codeph">AL16UTF16</code> or <code class="codeph">UTF8</code>. Both character sets use Unicode encoding.</p>
<p>When you create a table with an <code class="codeph">NCHAR</code> or <code class="codeph">NVARCHAR2</code> column, the maximum size is always in character length semantics. Character length semantics is the default and only length semantics for <code class="codeph">NCHAR</code> or <code class="codeph">NVARCHAR2</code>.</p>
<div class="infoboxnotealso" id="GUID-92C4706B-8873-4EFB-BB9A-B88351E5B950__GUID-5639B914-1255-4157-85BC-5C5A1B574EC7">
<p class="notep1">See Also:</p>
<p><a class="olink NLSPG0071" target="_blank" href="../NLSPG/ch7progrunicode.htm#NLSPG0071"><span><cite>Oracle Database Globalization Support Guide</cite></span></a> for information about Oracle&#39;s globalization support feature</p>
</div>
</div>
</div>
</div>
<a id="CNCPT313"></a>
<div class="props_rev_3"><a id="GUID-AB604FF0-D321-44CC-956E-62A7791EE2FA"></a>
<h4 id="CNCPT-GUID-AB604FF0-D321-44CC-956E-62A7791EE2FA" class="sect4">Numeric Data Types</h4>
<div>
<p>The Oracle Database numeric data types store fixed and floating-point numbers, zero, and infinity. Some numeric types also store values that are the undefined result of an operation, which is known as &#34;not a number&#34; or <code class="codeph">NaN</code>.</p>
<p>Oracle Database stores numeric data in variable-length format. Each value is stored in scientific notation, with 1 byte used to store the exponent. The database uses up to 20 bytes to store the <a href="glossary.htm#GUID-0912AA8C-6F9E-4382-97A3-2B43832BEBE6"><span class="xrefglossterm">mantissa</span></a>, which is the part of a floating-point number that contains its significant digits. Oracle Database does not store leading and trailing zeros.</p>
</div>
<a id="CNCPT1832"></a>
<div class="props_rev_3"><a id="GUID-641EC6F7-F88E-4A59-968E-AD20B9531CBA"></a>
<h5 id="CNCPT-GUID-641EC6F7-F88E-4A59-968E-AD20B9531CBA" class="sect5">NUMBER Data Type</h5>
<div>
<p>The <code class="codeph">NUMBER</code> data type stores fixed and floating-point numbers. The database can store numbers of virtually any magnitude. This data is guaranteed to be portable among different operating systems running Oracle Database. The <code class="codeph">NUMBER</code> data type is recommended for most cases in which you must store numeric data.</p>
<p>You specify a fixed-point number in the form <code class="codeph">NUMBER</code><code class="codeph">(</code><span class="italic"><code class="codeph">p</code></span><code class="codeph">,</code><span class="italic"><code class="codeph">s</code></span><code class="codeph">)</code>, where <span class="italic"><code class="codeph">p</code></span> and <span class="italic"><code class="codeph">s</code></span> refer to the following characteristics:</p>
<ul style="list-style-type: disc;">
<li>
<p>Precision</p>
<p>The <a href="glossary.htm#GUID-84EF5156-C5F0-49CA-BFAD-AAEC3C5F9289"><span class="xrefglossterm">precision</span></a> specifies the total number of digits. If a precision is not specified, then the column stores the values exactly as provided by the application without any rounding.</p>
</li>
<li>
<p>Scale</p>
<p>The <a href="glossary.htm#GUID-7CA2255F-476D-461C-967A-6FABC5DAA8CE"><span class="xrefglossterm">scale</span></a> specifies the number of digits from the decimal point to the least significant digit. Positive scale counts digits to the right of the decimal point up to and including the least significant digit. Negative scale counts digits to the left of the decimal point up to but not including the least significant digit. If you specify a precision without a scale, as in <code class="codeph">NUMBER(6)</code>, then the scale is 0.</p>
</li>
</ul>
<p>In <a href="tablecls.htm#GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73__CBBEHJCH">Example 2-1</a>, the <code class="codeph">salary</code> column is type <code class="codeph">NUMBER(8,2)</code>, so the precision is 8 and the scale is 2. Thus, the database stores a salary of 100,000 as <code class="codeph">100000.00</code>.</p>
</div>
</div>
<a id="CNCPT1834"></a>
<div class="props_rev_3"><a id="GUID-F5A61A78-F730-46BD-A322-966C0D74F7E1"></a>
<h5 id="CNCPT-GUID-F5A61A78-F730-46BD-A322-966C0D74F7E1" class="sect5">Floating-Point Numbers</h5>
<div>
<p>Oracle Database provides two numeric data types exclusively for floating-point numbers: <code class="codeph">BINARY_FLOAT</code> and <code class="codeph">BINARY_DOUBLE</code>.</p>
<p>These types support all of the basic functionality provided by the <code class="codeph">NUMBER</code> data type. However, whereas <code class="codeph">NUMBER</code> uses decimal precision, <code class="codeph">BINARY_FLOAT</code> and <code class="codeph">BINARY_DOUBLE</code> use binary precision, which enables faster arithmetic calculations and usually reduces storage requirements.</p>
<p><code class="codeph">BINARY_FLOAT</code> and <code class="codeph">BINARY_DOUBLE</code> are approximate numeric data types. They store approximate representations of decimal values, rather than exact representations. For example, the value 0.1 cannot be exactly represented by either <code class="codeph">BINARY_DOUBLE</code> or <code class="codeph">BINARY_FLOAT</code>. They are frequently used for scientific computations. Their behavior is similar to the data types <code class="codeph">FLOAT</code> and <code class="codeph">DOUBLE</code> in Java and XMLSchema.</p>
<div class="infoboxnotealso" id="GUID-F5A61A78-F730-46BD-A322-966C0D74F7E1__GUID-310D046D-AA38-4640-9422-E9FD510DE9E5">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF00222" target="_blank" href="../SQLRF/sql_elements001.htm#SQLRF00222"><span><cite>Oracle Database SQL Language Reference</cite></span></a> to learn about precision, scale, and other characteristics of numeric types</p>
</div>
</div>
</div>
</div>
<a id="CNCPT413"></a>
<div class="props_rev_3"><a id="GUID-F5FBE34D-911C-4818-9D25-64B2F1613A9B"></a>
<h4 id="CNCPT-GUID-F5FBE34D-911C-4818-9D25-64B2F1613A9B" class="sect4">Datetime Data Types</h4>
<div>
<p>The <span class="bold">datetime</span> data types are <code class="codeph">DATE</code> and <code class="codeph">TIMESTAMP</code>. Oracle Database provides comprehensive time zone support for time stamps.</p>
</div>
<a id="CNCPT88810"></a>
<div class="props_rev_3"><a id="GUID-F82188FA-506D-49B3-81DE-885A438628E3"></a>
<h5 id="CNCPT-GUID-F82188FA-506D-49B3-81DE-885A438628E3" class="sect5">DATE Data Type</h5>
<div>
<p>The <code class="codeph">DATE</code> data type stores date and time. Although datetimes can be represented in character or number data types, <code class="codeph">DATE</code> has special associated properties.</p>
<p>The database stores dates internally as numbers. Dates are stored in fixed-length fields of 7 bytes each, corresponding to century, year, month, day, hour, minute, and second.</p>
<div class="infobox-note" id="GUID-F82188FA-506D-49B3-81DE-885A438628E3__GUID-527FC488-727B-4FE6-BE52-B28DA8844657">
<p class="notep1">Note:</p>
<p>Dates fully support arithmetic operations, so you add to and subtract from dates just as you can with numbers. See <a class="olink ADFNS202" target="_blank" href="../ADFNS/adfns_sqltypes.htm#ADFNS202"><span><cite>Oracle Database Development Guide</cite></span></a>.</p>
</div>
<p>The database displays dates according to the specified <a href="glossary.htm#GUID-F97AA700-3D17-428F-B9E0-52259D19C037"><span class="xrefglossterm">format model</span></a>. A format model is a character literal that describes the format of a datetime in a character string. The standard date format is <code class="codeph">DD-MON-RR</code>, which displays dates in the form <code class="codeph">01-JAN-11</code>.</p>
<p><code class="codeph">RR</code> is similar to <code class="codeph">YY</code> (the last two digits of the year), but the century of the return value varies according to the specified two-digit year and the last two digits of the current year. Assume that in 1999 the database displays <code class="codeph">01-JAN-11</code>. If the date format uses <code class="codeph">RR</code>, then <code class="codeph">11</code> specifies <code class="codeph">2011</code>, whereas if the format uses <code class="codeph">YY</code>, then <code class="codeph">11</code> specifies <code class="codeph">1911</code>. You can change the default date format at both the database instance and session level.</p>
<p>Oracle Database stores time in 24-hour format&mdash;<code class="codeph">HH:MI:SS</code>. If no time portion is entered, then by default the time in a date field is <code class="codeph">00:00:00 A.M</code>. In a time-only entry, the date portion defaults to the first day of the current month.</p>
<div class="infoboxnotealso" id="GUID-F82188FA-506D-49B3-81DE-885A438628E3__GUID-DE924A46-BF74-4318-BACC-C24E52E864A4">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADFNS182" target="_blank" href="../ADFNS/adfns_sqltypes.htm#ADFNS182"><span><cite>Oracle Database Development Guide</cite></span></a> for more information about centuries and date format masks</p>
</li>
<li>
<p><a class="olink SQLRF00212" target="_blank" href="../SQLRF/sql_elements004.htm#SQLRF00212"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for information about datetime format codes</p>
</li>
</ul>
</div>
</div>
</div>
<a id="CNCPT1841"></a>
<div class="props_rev_3"><a id="GUID-0BBA12B0-6A2B-49F5-97E3-3B843DF6F949"></a>
<h5 id="CNCPT-GUID-0BBA12B0-6A2B-49F5-97E3-3B843DF6F949" class="sect5">TIMESTAMP Data Type</h5>
<div>
<p>The <code class="codeph">TIMESTAMP</code> data type is an extension of the <code class="codeph">DATE</code> data type.</p>
<p><code class="codeph">TIMESTAMP</code> stores fractional seconds in addition to the information stored in the <code class="codeph">DATE</code> data type. The <code class="codeph">TIMESTAMP</code> data type is useful for storing precise time values, such as in applications that must track event order.</p>
<p>The <code class="codeph">DATETIME</code> data types <code class="codeph">TIMESTAMP WITH TIME ZONE</code> and <code class="codeph">TIMESTAMP WITH LOCAL TIME ZONE</code> are time-zone aware. When a user selects the data, the value is adjusted to the time zone of the user session. This data type is useful for collecting and evaluating date information across geographic regions.</p>
<div class="infoboxnotealso" id="GUID-0BBA12B0-6A2B-49F5-97E3-3B843DF6F949__GUID-2BD6263D-274A-4FA3-ACA0-0A989DE19132">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF00203" target="_blank" href="../SQLRF/sql_elements001.htm#SQLRF00203"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for details about the syntax of creating and entering data in time stamp columns</p>
</div>
</div>
</div>
</div>
<a id="CNCPT88811"></a>
<div class="props_rev_3"><a id="GUID-0258C4C2-2BF2-445F-B1E1-F282A57A6859"></a>
<h4 id="CNCPT-GUID-0258C4C2-2BF2-445F-B1E1-F282A57A6859" class="sect4">Rowid Data Types</h4>
<div>
<p>Every row stored in the database has an address. Oracle Database uses a <code class="codeph">ROWID</code> data type to store the address (rowid) of every row in the database.</p>
<p>Rowids fall into the following categories:</p>
<ul style="list-style-type: disc;">
<li>
<p>Physical rowids store the addresses of rows in heap-organized tables, table clusters, and table and index partitions.</p>
</li>
<li>
<p>Logical rowids store the addresses of rows in index-organized tables.</p>
</li>
<li>
<p>Foreign rowids are identifiers in foreign tables, such as DB2 tables accessed through a gateway. They are not standard Oracle Database rowids.</p>
</li>
</ul>
<p>A data type called the <a href="glossary.htm#GUID-288B0853-9B77-4A7F-AEE9-8924EA7877A7"><span class="xrefglossterm">universal rowid</span></a>, or urowid, supports all types of rowids.</p>
</div>
<a id="CNCPT88812"></a>
<div class="props_rev_3"><a id="GUID-CE61C2E1-E547-4F8F-B94C-F8FCAD259299"></a>
<h5 id="CNCPT-GUID-CE61C2E1-E547-4F8F-B94C-F8FCAD259299" class="sect5">Use of Rowids</h5>
<div>
<div><span>Oracle Database uses rowids internally for the construction of indexes.</span></div>
<p>A <a href="glossary.htm#GUID-8D6D0C64-6AC8-4B22-A9AF-1B62F61AE10B"><span class="xrefglossterm">B-tree index</span></a>, which is the most common type, contains an ordered list of keys divided into ranges. Each key is associated with a rowid that points to the associated row&#39;s address for fast access.</p>
<p>End users and application developers can also use rowids for several important functions:</p>
<ul style="list-style-type: disc;">
<li>
<p>Rowids are the fastest means of accessing particular rows.</p>
</li>
<li>
<p>Rowids provide the ability to see how a table is organized.</p>
</li>
<li>
<p>Rowids are unique identifiers for rows in a given table.</p>
</li>
</ul>
<p>You can also create tables with columns defined using the <code class="codeph">ROWID</code> data type. For example, you can define an exception table with a column of data type <code class="codeph">ROWID</code> to store the rowids of rows that violate integrity constraints. Columns defined using the <code class="codeph">ROWID</code> data type behave like other table columns: values can be updated, and so on.</p>
</div>
</div>
<a id="CNCPT88814"></a><a id="CNCPT88813"></a>
<div class="props_rev_3"><a id="GUID-C6ACB406-B919-42D5-B588-99B0EE89862E"></a>
<h5 id="CNCPT-GUID-C6ACB406-B919-42D5-B588-99B0EE89862E" class="sect5">ROWID Pseudocolumn</h5>
<div>
<p>Every table in an Oracle database has a pseudocolumn named <code class="codeph">ROWID</code>.</p>
<p>A <a href="glossary.htm#GUID-175D4923-5C7E-4FF0-A69B-C4D8F3D93A3D"><span class="xrefglossterm">pseudocolumn</span></a> behaves like a table column, but is not actually stored in the table. You can select from pseudocolumns, but you cannot insert, update, or delete their values. A pseudocolumn is also similar to a SQL <a href="glossary.htm#GUID-5611828A-3621-4527-AEB1-12017A454E94"><span class="xrefglossterm">function</span></a> without arguments. Functions without arguments typically return the same value for every row in the result set, whereas pseudocolumns typically return a different value for each row.</p>
<p>Values of the <code class="codeph">ROWID</code> pseudocolumn are strings representing the address of each row. These strings have the data type <code class="codeph">ROWID</code>. This pseudocolumn is not evident when listing the structure of a table by executing <code class="codeph">SELECT</code> or <code class="codeph">DESCRIBE</code>, nor does the pseudocolumn consume space. However, the rowid of each row can be retrieved with a SQL query using the reserved word <code class="codeph">ROWID</code> as a column name.</p>
<p>The following example queries the <code class="codeph">ROWID</code> pseudocolumn to show the rowid of the row in the <code class="codeph">employees</code> table for employee 100:</p>
<pre dir="ltr">SQL&gt; SELECT ROWID FROM employees WHERE employee_id = 100;

ROWID
------------------
AAAPecAAFAAAABSAAA
</pre>
<div class="infoboxnotealso" id="GUID-C6ACB406-B919-42D5-B588-99B0EE89862E__GUID-591777F7-1DD4-45E4-956B-03FA1DF4E573">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="logical.htm#GUID-684E6324-A874-4304-8015-5634199BEE81" title="Oracle Database uses a rowid to uniquely identify a row. Internally, the rowid is a structure that holds information that the database needs to access a row. A rowid is not physically stored in the database, but is inferred from the file and block on which the data is stored.">Rowid Format</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ADFNS00306" target="_blank" href="../ADFNS/adfns_sqltypes.htm#ADFNS00306"><span><cite>Oracle Database Development Guide</cite></span></a> to learn how to identify rows by address</p>
</li>
<li>
<p><a class="olink SQLRF50998" target="_blank" href="../SQLRF/sql_elements001.htm#SQLRF50998"><span><cite>Oracle Database SQL Language Reference</cite></span></a> to learn about rowid types</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="CNCPT88815"></a>
<div class="props_rev_3"><a id="GUID-A126BA2F-8249-4316-BC18-F12B02004550"></a>
<h4 id="CNCPT-GUID-A126BA2F-8249-4316-BC18-F12B02004550" class="sect4">Format Models and Data Types</h4>
<div>
<p>A <span class="bold">format model</span> is a character literal that describes the format of datetime or numeric data stored in a character string. A format model does not change the internal representation of the value in the database.</p>
<p>When you convert a character string into a date or number, a format model determines how the database interprets the string. In SQL, you can use a format model as an argument of the <code class="codeph">TO_CHAR</code> and <code class="codeph">TO_DATE</code> functions to format a value to be returned from the database or to format a value to be stored in the database.</p>
<p>The following statement selects the salaries of the employees in Department 80 and uses the <code class="codeph">TO_CHAR</code> function to convert these salaries into character values with the format specified by the number format model <code class="codeph">&#39;$99,990.99&#39;</code>:</p>
<pre dir="ltr">SQL&gt; SELECT last_name employee, TO_CHAR(salary, &#39;$99,990.99&#39;) AS &#34;SALARY&#34;
  2  FROM   employees
  3  WHERE  department_id = 80 AND last_name = &#39;Russell&#39;;
 
EMPLOYEE                  SALARY
------------------------- -----------
Russell                    $14,000.00
</pre>
<p>The following example updates a hire date using the <code class="codeph">TO_DATE</code> function with the format mask <code class="codeph">&#39;YYYY MM DD&#39;</code> to convert the string <code class="codeph">&#39;1998 05 20&#39;</code> to a <code class="codeph">DATE</code> value:</p>
<pre dir="ltr">SQL&gt; UPDATE employees
  2  SET hire_date = TO_DATE(&#39;1998 05 20&#39;,&#39;YYYY MM DD&#39;)
  3  WHERE last_name = &#39;Hunold&#39;;
</pre>
<div class="infoboxnotealso" id="GUID-A126BA2F-8249-4316-BC18-F12B02004550__GUID-14C7FDD2-7BB4-40B8-90A6-6D04CE6C0F73">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF00210" target="_blank" href="../SQLRF/sql_elements004.htm#SQLRF00210"><span><cite>Oracle Database SQL Language Reference</cite></span></a> to learn more about format models</p>
</div>
</div>
</div>
</div>
<a id="CNCPT88816"></a>
<div class="props_rev_3"><a id="GUID-FEB30808-F9D1-46AC-B9D7-AE18A12E1C78"></a>
<h3 id="CNCPT-GUID-FEB30808-F9D1-46AC-B9D7-AE18A12E1C78" class="sect3">Integrity Constraints</h3>
<div>
<p>An <span class="bold">integrity constraint</span> is a named rule that restrict the values for one or more columns in a table. These rules prevent invalid data entry into tables. Also, constraints can prevent the deletion of a table when certain dependencies exist.</p>
<p>If a constraint is enabled, then the database checks data as it is entered or updated. Oracle Database prevents data that does not conform to the constraint from being entered. If a constraint is disabled, then Oracle Database allows data that does not conform to the constraint to enter the database.</p>
<p>In <a href="tablecls.htm#GUID-B0DFC5A7-E482-4E17-A6F5-FF476A92DC73__CBBEHJCH">Example 2-1</a>, the <code class="codeph">CREATE TABLE</code> statement specifies <code class="codeph">NOT NULL</code> constraints for the <code class="codeph">last_name</code>, <code class="codeph">email</code>, <code class="codeph">hire_date</code>, and <code class="codeph">job_id</code> columns. The constraint clauses identify the columns and the conditions of the constraint. These constraints ensure that the specified columns contain no null values. For example, an attempt to insert a new employee without a job ID generates an error.</p>
<p>You can create a constraint when or after you create a table. You can temporarily disable constraints if needed. The database stores constraints in the <a href="glossary.htm#GUID-D6A3934F-BA6D-464F-9612-C683E20514A4"><span class="xrefglossterm">data dictionary</span></a>.</p>
<div class="infoboxnotealso" id="GUID-FEB30808-F9D1-46AC-B9D7-AE18A12E1C78__GUID-942018A2-C087-4601-B15E-1B26E179CABE">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="datainte.htm#GUID-6A89FF39-AD42-4399-BD1B-E51ECEE50B4E" title="This chapter explains how integrity constraints enforce the business rules associated with a database and prevent the entry of invalid information into tables.">Data Integrity</a> to learn about integrity constraints</p>
</li>
<li>
<p><a href="datadict.htm#GUID-9B9ABE1C-A1E3-464F-8936-978250DC3E1F" title="An important part of an Oracle database is its data dictionary, which is a read-only set of tables that provides administrative metadata about the database.">Overview of the Data Dictionary</a> to learn about the data dictionary</p>
</li>
<li>
<p><a class="olink SQLRF52180" target="_blank" href="../SQLRF/clauses002.htm#SQLRF52180"><span><cite>Oracle Database SQL Language Reference</cite></span></a> to learn about SQL constraint clauses</p>
</li>
</ul>
</div>
</div>
</div>
<a id="CNCPT1128"></a>
<div class="props_rev_3"><a id="GUID-85BE900A-0047-4B7C-A992-F1E35B640CA3"></a>
<h3 id="CNCPT-GUID-85BE900A-0047-4B7C-A992-F1E35B640CA3" class="sect3">Table Storage</h3>
<div>
<p>Oracle Database uses a <span class="bold">data segment</span> in a tablespace to hold table data.</p>
<p>A segment contains extents made up of data blocks. The data segment for a table (or cluster data segment, for a <a href="glossary.htm#GUID-1C56177E-6BEE-4FE7-B45E-38298CDB946D"><span class="xrefglossterm">table cluster</span></a>) is located in either the default tablespace of the table owner or in a tablespace named in the <code class="codeph">CREATE TABLE</code> statement.</p>
<div class="infoboxnotealso" id="GUID-85BE900A-0047-4B7C-A992-F1E35B640CA3__GUID-72F63896-3DBB-46C5-9E2D-09073412C7F3">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="logical.htm#GUID-EFB292CB-87EA-42AA-808C-BD85E540BACC" title="A single data segment in a database stores the data for one user object.">User Segments</a>&#34;</span></p>
</div>
</div>
<a id="CNCPT88824"></a><a id="CNCPT1131"></a>
<div class="props_rev_3"><a id="GUID-4C718D65-D7AF-4596-9A31-C11938047224"></a>
<h4 id="CNCPT-GUID-4C718D65-D7AF-4596-9A31-C11938047224" class="sect4">Table Organization</h4>
<div>
<p>By default, a table is organized as a heap, which means that the database places rows where they fit best rather than in a user-specified order. Thus, a heap-organized table is an unordered collection of rows.</p>
<div class="infobox-note" id="GUID-4C718D65-D7AF-4596-9A31-C11938047224__GUID-115D4B8B-D640-4A0E-B8D3-62869BD912E9">
<p class="notep1">Note:</p>
<p>Index-organized tables use a different principle of organization.</p>
</div>
<p>As users add rows, the database places the rows in the first available free space in the data segment. Rows are not guaranteed to be retrieved in the order in which they were inserted.</p>
<p>The <code class="codeph">hr.departments</code> table is a heap-organized table. It has columns for department ID, name, manager ID, and location ID. As rows are inserted, the database stores them wherever they fit. A data block in the table segment might contain the unordered rows shown in the following example:</p>
<pre dir="ltr">50,Shipping,121,1500
120,Treasury,,1700
70,Public Relations,204,2700
30,Purchasing,114,1700
130,Corporate Tax,,1700
10,Administration,200,1700
110,Accounting,205,1700
</pre>
<p>The column order is the same for all rows in a table. The database usually stores columns in the order in which they were listed in the <code class="codeph">CREATE TABLE</code> statement, but this order is not guaranteed. For example, if a table has a column of type <code class="codeph">LONG</code>, then Oracle Database always stores this column last in the row. Also, if you add a new column to a table, then the new column becomes the last column stored.</p>
<p>A table can contain a <a href="glossary.htm#GUID-E95FC6AD-C932-4DE2-9D7B-B98D1168E7DA"><span class="xrefglossterm">virtual column</span></a>, which unlike normal columns does not consume space on disk. The database derives the values in a virtual column on demand by computing a set of user-specified expressions or functions. You can index virtual columns, collect statistics on them, and create integrity constraints. Thus, virtual columns are much like nonvirtual columns.</p>
<div class="infoboxnotealso" id="GUID-4C718D65-D7AF-4596-9A31-C11938047224__GUID-3F9FEA80-0D9A-4709-A30A-4D805482F6CF">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="indexiot.htm#GUID-DAEC075B-C16D-4A57-898C-70EBCB364F0C" title="An index-organized table is a table stored in a variation of a B-tree index structure. In contrast, a heap-organized table inserts rows where they fit.">Overview of Index-Organized Tables</a>&#34;</span></p>
</li>
<li>
<p><a class="olink SQLRF54465" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF54465"><span><cite>Oracle Database SQL Language Reference</cite></span></a> to learn about virtual columns</p>
</li>
</ul>
</div>
</div>
</div>
<a id="CNCPT1129"></a>
<div class="props_rev_3"><a id="GUID-37546C88-24EE-47BE-8662-A9CED99BB90F"></a>
<h4 id="CNCPT-GUID-37546C88-24EE-47BE-8662-A9CED99BB90F" class="sect4">Row Storage</h4>
<div>
<p>The database stores rows in data blocks. Each row of a table containing data for less than 256 columns is contained in one or more row pieces.</p>
<p>If possible, Oracle Database stores each row as one <a href="glossary.htm#GUID-4C16E45D-79AF-40D5-ACE2-CE2B301CA97B"><span class="xrefglossterm">row piece</span></a>. However, if all of the row data cannot be inserted into a single data block, or if an update to an existing row causes the row to outgrow its data block, then the database stores the row using multiple row pieces (see <span class="q">&#34;<a href="logical.htm#GUID-754ECC03-DD58-4B49-95D1-B98A23B508B2" title="Every data block has a format or internal structure that enables the database to track the data and free space in the block. This format is similar whether the data block contains table, index, or table cluster data.">Data Block Format</a>&#34;</span>).</p>
<p>Rows in a table cluster contain the same information as rows in nonclustered tables. Additionally, rows in a table cluster contain information that references the cluster key to which they belong.</p>
</div>
</div>
<a id="CNCPT1130"></a>
<div class="props_rev_3"><a id="GUID-83BDB6CC-8CE1-44FE-9BCB-B018AC316FFC"></a>
<h4 id="CNCPT-GUID-83BDB6CC-8CE1-44FE-9BCB-B018AC316FFC" class="sect4">Rowids of Row Pieces</h4>
<div>
<div><span>A <span class="bold">rowid</span> is effectively a 10-byte physical address of a row.</span></div>
<p>Every row in a heap-organized table has a rowid unique to this table that corresponds to the physical address of a row piece. For table clusters, rows in different tables that are in the same data block can have the same rowid.</p>
<p>Oracle Database uses rowids internally for the construction of indexes. For example, each key in a <a href="glossary.htm#GUID-8D6D0C64-6AC8-4B22-A9AF-1B62F61AE10B"><span class="xrefglossterm">B-tree index</span></a> is associated with a rowid that points to the address of the associated row for fast access (see <span class="q">&#34;<a href="indexiot.htm#GUID-FC93A85B-C237-4249-AD1E-FF54576ED050" title="B-trees, short for balanced trees, are the most common type of database index. A B-tree index is an ordered list of values divided into ranges. By associating a key with a row or range of rows, B-trees provide excellent retrieval performance for a wide range of queries, including exact match and range searches.">Overview of B-Tree Indexes</a>&#34;</span>). Physical rowids provide the fastest possible access to a table row, enabling the database to retrieve a row in as little as a single I/O.</p>
<div class="infoboxnotealso" id="GUID-83BDB6CC-8CE1-44FE-9BCB-B018AC316FFC__GUID-263CACCB-FE49-40DC-98ED-FA3227B4A46A">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="logical.htm#GUID-684E6324-A874-4304-8015-5634199BEE81" title="Oracle Database uses a rowid to uniquely identify a row. Internally, the rowid is a structure that holds information that the database needs to access a row. A rowid is not physically stored in the database, but is inferred from the file and block on which the data is stored.">Rowid Format</a>&#34;</span></p>
</div>
</div>
</div>
<a id="CNCPT1134"></a>
<div class="props_rev_3"><a id="GUID-FF28EE12-E161-4DAD-A0A2-027D72366EE6"></a>
<h4 id="CNCPT-GUID-FF28EE12-E161-4DAD-A0A2-027D72366EE6" class="sect4">Storage of Null Values</h4>
<div>
<p>A <span class="bold">null</span> is the absence of a value in a column. Nulls indicate missing, unknown, or inapplicable data.</p>
<p>Nulls are stored in the database if they fall between columns with data values. In these cases, they require 1 byte to store the length of the column (zero). Trailing nulls in a row require no storage because a new row header signals that the remaining columns in the previous row are null. For example, if the last three columns of a table are null, then no data is stored for these columns.</p>
<div class="infoboxnotealso" id="GUID-FF28EE12-E161-4DAD-A0A2-027D72366EE6__GUID-86AF18FE-DE93-4164-8D6A-4394FB17CFB2">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF30037" target="_blank" href="../SQLRF/sql_elements005.htm#SQLRF30037"><span><cite>Oracle Database SQL Language Reference</cite></span></a> to learn more about null values</p>
</div>
</div>
</div>
<a id="CNCPT1132"></a>
<div class="props_rev_3"><a id="GUID-54EE5325-0894-4869-B3AD-8912D9B4A329"></a>
<h4 id="CNCPT-GUID-54EE5325-0894-4869-B3AD-8912D9B4A329" class="sect4">Table Compression</h4>
<div>
<p>The database can use <span class="bold">table compression</span> to reduce the amount of storage required for the table.</p>
<p>Compression saves disk space, reduces memory use in the database buffer cache, and in some cases speeds query execution. Table compression is transparent to database applications.</p>
</div>
<a id="CNCPT89138"></a><a id="CNCPT89136"></a>
<div class="props_rev_3"><a id="GUID-3508575F-8FF2-439E-800A-7ACFCCAF5CBC"></a>
<h5 id="CNCPT-GUID-3508575F-8FF2-439E-800A-7ACFCCAF5CBC" class="sect5">Basic Table Compression and Advanced Row Compression</h5>
<div>
<p>Dictionary-based table compression provides good compression ratios for heap-organized tables.</p>
<p>Oracle Database supports the following types of dictionary-based table compression:</p>
<ul style="list-style-type: disc;">
<li>
<p>Basic table compression</p>
<p>This type of compression is intended for bulk load operations. The database does not compress data modified using conventional DML. You must use <a href="glossary.htm#GUID-73D6FDFE-E38D-49F2-A5A5-B6BDB2FD297C"><span class="xrefglossterm">direct path INSERT</span></a> operations, <code class="codeph">ALTER TABLE . . . MOVE</code> operations, or online table redefinition to achieve basic table compression.</p>
</li>
<li>
<p>Advanced row compression</p>
<p>This type of compression is intended for OLTP applications and compresses data manipulated by any SQL operation. The database achieves a competitive compression ratio while enabling the application to perform DML in approximately the same amount of time as DML on an uncompressed table.</p>
</li>
</ul>
<p>For the preceding types of compression, the database stores compressed rows in <a href="glossary.htm#GUID-68A36A9F-BD3E-4245-909F-D68B3D056352"><span class="xrefglossterm">row major format</span></a>. All columns of one row are stored together, followed by all columns of the next row, and so on (see <span class="q">&#34;<a href="logical.htm#GUID-D993A749-93D0-448C-BDC8-330D805AC481" title="The row data part of the block contains the actual data, such as table rows or index key entries. Just as every data block has an internal format, every row has a row format that enables the database to track the data in the row.">Row Format</a>&#34;</span>). The database replaces duplicate values with a short reference to a symbol table stored at the beginning of the block. Thus, information that the database needs to re-create the uncompressed data is stored in the data block itself.</p>
<p>Compressed data blocks look much like normal data blocks. Most database features and functions that work on regular data blocks also work on compressed blocks.</p>
<p>You can declare compression at the tablespace, table, partition, or subpartition level. If specified at the tablespace level, then all tables created in the tablespace are compressed by default.</p>
<div class="example" id="GUID-3508575F-8FF2-439E-800A-7ACFCCAF5CBC__GUID-B4DB569E-60D3-451E-AD37-5C8BBD5E0A38">
<p class="titleinexample">Example 2-4 Table-Level Compression</p>
<p>The following statement applies advanced row compression to the <code class="codeph">orders</code> table:</p>
<pre dir="ltr">ALTER TABLE oe.orders ROW STORE COMPRESS ADVANCED;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-3508575F-8FF2-439E-800A-7ACFCCAF5CBC__GUID-2937496B-60C2-40B1-B520-E59A391DACD7">
<p class="titleinexample">Example 2-5 Partition-Level Compression</p>
<p>The following example of a partial <code class="codeph">CREATE TABLE</code> statement specifies advanced row compression for one partition and basic table compression for the other partition:</p>
<pre dir="ltr">CREATE TABLE sales (
    prod_id     NUMBER     NOT NULL,
    cust_id     NUMBER     NOT NULL, ... )
 PCTFREE 5 NOLOGGING NOCOMPRESS
 PARTITION BY RANGE (time_id)
 ( partition sales_2013 VALUES LESS THAN(TO_DATE(...)) ROW STORE COMPRESS BASIC,
   partition sales_2014 VALUES LESS THAN (MAXVALUE) ROW STORE COMPRESS ADVANCED );
</pre>
<div class="infoboxnotealso" id="GUID-3508575F-8FF2-439E-800A-7ACFCCAF5CBC__GUID-8D58CF40-F8D9-48E5-B825-F0E47315A773">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="logical.htm#GUID-B248DC2A-3F65-42CF-ACA5-0B096CFCFC46" title="The database can use table compression to eliminate duplicate values in a data block. This section describes the format of data blocks that use compression.">Data Block Compression</a>&#34;</span> to learn about the format of compressed data blocks</p>
</li>
<li>
<p><span class="q">&#34;<a href="cncptdba.htm#GUID-A6BF29E2-70E6-46F8-8BF9-E321113A3670" title="SQL*Loader loads data from external files, called data files (not to be confused with the internal database data files), into database tables. It has a powerful data parsing engine that puts little limitation on the format of the data in the data file.">SQL*Loader</a>&#34;</span> to learn about using SQL*Loader for direct path loads</p>
</li>
<li>
<p><a class="olink ADMIN13948" target="_blank" href="../ADMIN/tables.htm#ADMIN13948"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> and <a class="olink TGDBA94151" target="_blank" href="../TGDBA/pfgrf_build_db.htm#TGDBA94151"><span><cite>Oracle Database Performance Tuning Guide</cite></span></a> to learn about table compression</p>
</li>
</ul>
</div>
</div>
<!-- class="example" --></div>
</div>
<a id="CNCPT89198"></a>
<div class="props_rev_3"><a id="GUID-901A054B-B47F-4ADF-A57B-2074EBB85341"></a>
<h5 id="CNCPT-GUID-901A054B-B47F-4ADF-A57B-2074EBB85341" class="sect5">Hybrid Columnar Compression</h5>
<div>
<p>With Hybrid Columnar Compression, the database stores the same column for a group of rows together. The data block does not store data in row-major format, but uses a combination of both row and columnar methods.</p>
<p>Storing column data together, with the same data type and similar characteristics, dramatically increases the storage savings achieved from compression. The database compresses data manipulated by any SQL operation, although compression levels are higher for direct path loads. Database operations work transparently against compressed objects, so no application changes are required.</p>
<div class="infobox-note" id="GUID-901A054B-B47F-4ADF-A57B-2074EBB85341__GUID-B20D1C2A-87D2-41DF-B6E3-DA8E5B30E4B2">
<p class="notep1">Note:</p>
<p>Hybrid Column Compression and In-Memory Column Store (IM column store) are closely related (see <span class="q">&#34;<a href="memory.htm#GUID-EEA265EE-8FBA-4457-8C3F-315B9EEA2224" title="Starting in Oracle Database 12c Release 1 (12.1.0.2), the In-Memory Column Store (IM column store) is an optional, static SGA pool that stores copies of tables and partitions in a special columnar format optimized for rapid scans.">In-Memory Column Store</a>&#34;</span>). The primary difference is that Hybrid Column Compression optimizes disk storage, whereas the IM column store optimizes memory storage.</p>
</div>
</div>
<a id="CNCPT89201"></a>
<div class="props_rev_3"><a id="GUID-BDD5ADD4-4B77-499E-8D6C-BB44A89EBB6F"></a>
<h6 id="CNCPT-GUID-BDD5ADD4-4B77-499E-8D6C-BB44A89EBB6F" class="sect6">Types of Hybrid Columnar Compression</h6>
<div>
<p>If your underlying storage supports Hybrid Columnar Compression, then you can specify different types of compression, depending on your requirements.</p>
<p>The compression options are:</p>
<ul style="list-style-type: disc;">
<li>
<p>Warehouse compression</p>
<p>This type of compression is optimized to save storage space, and is intended for data warehouse applications.</p>
</li>
<li>
<p>Online archival compression</p>
<p>This type of compression is optimized for maximum compression levels, and is intended for historical data and data that does not change.</p>
</li>
</ul>
<p>To achieve warehouse or online archival compression, you must use direct path loads, <code class="codeph">ALTER TABLE . . . MOVE</code> operations, or online table redefinition.</p>
<p>Hybrid Columnar Compression is optimized for Data Warehousing and decision support applications on Oracle Exadata storage. Oracle Exadata maximizes the performance of queries on tables that are compressed using Hybrid Columnar Compression, taking advantage of the processing power, memory, and Infiniband network bandwidth that are integral to the Oracle Exadata storage server.</p>
<p>Other Oracle storage systems support Hybrid Columnar Compression, and deliver the same space savings as on Oracle Exadata storage, but do not deliver the same level of query performance. For these storage systems, Hybrid Columnar Compression is ideal for in-database archiving of older data that is infrequently accessed.</p>
</div>
</div>
<a id="CNCPT89314"></a><a id="CNCPT89315"></a><a id="CNCPT89202"></a>
<div class="props_rev_3"><a id="GUID-A968B257-553F-45F7-88C8-620F04FFA48D"></a>
<h6 id="CNCPT-GUID-A968B257-553F-45F7-88C8-620F04FFA48D" class="sect6">Compression Units</h6>
<div>
<p>Hybrid Columnar Compression uses a logical construct called a <span class="bold">compression unit</span> to store a set of rows.</p>
<p>When you load data into a table, the database stores groups of rows in columnar format, with the values for each column stored and compressed together. After the database has compressed the column data for a set of rows, the database fits the data into the compression unit.</p>
<p>For example, you apply Hybrid Columnar Compression to a <code class="codeph">daily_sales</code> table. At the end of every day, you populate the table with items and the number sold, with the item ID and date forming a composite primary key. <a href="tablecls.htm#GUID-A968B257-553F-45F7-88C8-620F04FFA48D__CIHCJIHA" title="Rows in daily sales table">Table 2-1</a> shows a subset of the rows in <code class="codeph">daily_sales</code>.</p>
<div class="tblformal" id="GUID-A968B257-553F-45F7-88C8-620F04FFA48D__CIHCJIHA">
<p class="titleintable">Table 2-1 Sample Table daily_sales</p>
<table class="cellalignment1206" title="Sample Table daily_sales" summary="Rows in daily sales table">
<thead>
<tr class="cellalignment1197">
<th class="cellalignment1222" id="d11766e11390">Item_ID</th>
<th class="cellalignment1222" id="d11766e11393">Date</th>
<th class="cellalignment1222" id="d11766e11396">Num_Sold</th>
<th class="cellalignment1222" id="d11766e11399">Shipped_From</th>
<th class="cellalignment1222" id="d11766e11402">Restock</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1197">
<td class="cellalignment1223" id="d11766e11407" headers="d11766e11390">
<p>1000</p>
</td>
<td class="cellalignment1223" headers="d11766e11407 d11766e11393">
<p>01-JUN-14</p>
</td>
<td class="cellalignment1223" headers="d11766e11407 d11766e11396">
<p>2</p>
</td>
<td class="cellalignment1223" headers="d11766e11407 d11766e11399">
<p>WAREHOUSE1</p>
</td>
<td class="cellalignment1223" headers="d11766e11407 d11766e11402">
<p>Y</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1223" id="d11766e11423" headers="d11766e11390">
<p>1001</p>
</td>
<td class="cellalignment1223" headers="d11766e11423 d11766e11393">
<p>01-JUN-14</p>
</td>
<td class="cellalignment1223" headers="d11766e11423 d11766e11396">
<p>0</p>
</td>
<td class="cellalignment1223" headers="d11766e11423 d11766e11399">
<p>WAREHOUSE3</p>
</td>
<td class="cellalignment1223" headers="d11766e11423 d11766e11402">
<p>N</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1223" id="d11766e11439" headers="d11766e11390">
<p>1002</p>
</td>
<td class="cellalignment1223" headers="d11766e11439 d11766e11393">
<p>01-JUN-14</p>
</td>
<td class="cellalignment1223" headers="d11766e11439 d11766e11396">
<p>1</p>
</td>
<td class="cellalignment1223" headers="d11766e11439 d11766e11399">
<p>WAREHOUSE3</p>
</td>
<td class="cellalignment1223" headers="d11766e11439 d11766e11402">
<p>N</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1223" id="d11766e11455" headers="d11766e11390">
<p>1003</p>
</td>
<td class="cellalignment1223" headers="d11766e11455 d11766e11393">
<p>01-JUN-14</p>
</td>
<td class="cellalignment1223" headers="d11766e11455 d11766e11396">
<p>0</p>
</td>
<td class="cellalignment1223" headers="d11766e11455 d11766e11399">
<p>WAREHOUSE2</p>
</td>
<td class="cellalignment1223" headers="d11766e11455 d11766e11402">
<p>N</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1223" id="d11766e11471" headers="d11766e11390">
<p>1004</p>
</td>
<td class="cellalignment1223" headers="d11766e11471 d11766e11393">
<p>01-JUN-14</p>
</td>
<td class="cellalignment1223" headers="d11766e11471 d11766e11396">
<p>2</p>
</td>
<td class="cellalignment1223" headers="d11766e11471 d11766e11399">
<p>WAREHOUSE1</p>
</td>
<td class="cellalignment1223" headers="d11766e11471 d11766e11402">
<p>N</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1223" id="d11766e11487" headers="d11766e11390">
<p>1005</p>
</td>
<td class="cellalignment1223" headers="d11766e11487 d11766e11393">
<p>01-JUN-14</p>
</td>
<td class="cellalignment1223" headers="d11766e11487 d11766e11396">
<p>1</p>
</td>
<td class="cellalignment1223" headers="d11766e11487 d11766e11399">
<p>WAREHOUSE2</p>
</td>
<td class="cellalignment1223" headers="d11766e11487 d11766e11402">
<p>N</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Assume that the rows in <a href="tablecls.htm#GUID-A968B257-553F-45F7-88C8-620F04FFA48D__CIHCJIHA" title="Rows in daily sales table">Table 2-1</a> are stored in one compression unit. Hybrid Columnar Compression stores the values for each column together, and then uses multiple algorithms to compress each column. The database chooses the algorithms based on a variety of factors, including the data type of the column, the cardinality of the actual values in the column, and the compression level chosen by the user.</p>
<p>As shown in <a href="tablecls.htm#GUID-A968B257-553F-45F7-88C8-620F04FFA48D__CIHEAJFA">Figure 2-4</a>, each compression unit can span multiple data blocks. The values for a particular column may or may not span multiple blocks.</p>
<div class="figure" id="GUID-A968B257-553F-45F7-88C8-620F04FFA48D__CIHEAJFA">
<p class="titleinfigure">Figure 2-4 Compression Unit</p>
<img width="629" height="243" src="img/GUID-8A3B7541-A1A3-4250-9943-B94C02BCDAF5-default.gif" alt="Description of Figure 2-4 follows" title="Description of Figure 2-4 follows"/><br/>
<a href="img_text/GUID-8A3B7541-A1A3-4250-9943-B94C02BCDAF5-print.htm">Description of &#34;Figure 2-4 Compression Unit&#34;</a></div>
<!-- class="figure" -->
<p>Hybrid Columnar Compression has implications for row locking (see <span class="q">&#34;<a href="consist.htm#GUID-92D38952-A7A0-486F-9547-BDB6E624F125" title="A row lock, also called a TX lock, is a lock on a single row of table. A transaction acquires a row lock for each row modified by an INSERT, UPDATE, DELETE, MERGE, or SELECT ... FOR UPDATE statement. The row lock exists until the transaction commits or rolls back.">Row Locks (TX)</a>&#34;</span>). When an update occurs for a row in an uncompressed data block, only the updated row is locked. In contrast, the database must lock all rows in the compression unit if an update is made to any row in the unit. Updates to rows using Hybrid Columnar Compression cause rowids to change.</p>
<div class="infobox-note" id="GUID-A968B257-553F-45F7-88C8-620F04FFA48D__GUID-46A98292-74F1-461F-93C1-710020A13026">
<p class="notep1">Note:</p>
<p>By default, when a table uses Hybrid Columnar Compression, DML locks larger blocks of data (compression units), which may reduce concurrency. To avoid this issue, you can choose to enable row-level locking for a table.</p>
</div>
<div class="infoboxnotealso" id="GUID-A968B257-553F-45F7-88C8-620F04FFA48D__GUID-D680E190-6F66-4C54-AFDC-CF8117E79AB5">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink DBLIC2152" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DBLIC2152"><span><cite>Oracle Database Licensing Information</cite></span></a> to learn about licensing requirements for Hybrid Columnar Compression</p>
</li>
<li>
<p><a class="olink ADMIN13948" target="_blank" href="../ADMIN/tables.htm#ADMIN13948"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to use Hybrid Columnar Compression</p>
</li>
<li>
<p><a class="olink SQLRF01402" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF01402"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for <code class="codeph">CREATE TABLE</code> syntax and semantics</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<a id="CNCPT608"></a>
<div class="props_rev_3"><a id="GUID-04AADD81-E5C2-498B-B857-DF2A37DD3520"></a>
<h2 id="CNCPT-GUID-04AADD81-E5C2-498B-B857-DF2A37DD3520" class="sect2">Overview of Table Clusters</h2>
<div>
<p>A <span class="bold">table cluster</span> is a group of tables that share common columns and store related data in the same blocks.</p>
<p>When tables are clustered, a single data block can contain rows from multiple tables. For example, a block can store rows from both the <code class="codeph">employees</code> and <code class="codeph">departments</code> tables rather than from only a single table.</p>
<p>The <a href="glossary.htm#GUID-0721296C-D83A-4EA4-80F2-44AC3F1E9112"><span class="xrefglossterm">cluster key</span></a> is the column or columns that the clustered tables have in common. For example, the <code class="codeph">employees</code> and <code class="codeph">departments</code> tables share the <code class="codeph">department_id</code> column. You specify the cluster key when creating the table cluster and when creating every table added to the table cluster.</p>
<p>The cluster key value is the value of the cluster key columns for a particular set of rows. All data that contains the same cluster key value, such as <code class="codeph">department_id=20</code>, is physically stored together. Each cluster key value is stored only once in the cluster and the cluster index, no matter how many rows of different tables contain the value.</p>
<p>For an analogy, suppose an HR manager has two book cases: one with boxes of employee folders and the other with boxes of department folders. Users often ask for the folders for all employees in a particular department. To make retrieval easier, the manager rearranges all the boxes in a single book case. She divides the boxes by department ID. Thus, all folders for employees in department 20 and the folder for department 20 itself are in one box; the folders for employees in department 100 and the folder for department 100 are in another box, and so on.</p>
<p>Consider clustering tables when they are primarily queried (but not modified) and records from the tables are frequently queried together or joined. Because table clusters store related rows of different tables in the same data blocks, properly used table clusters offer the following benefits over nonclustered tables:</p>
<ul style="list-style-type: disc;">
<li>
<p>Disk I/O is reduced for joins of clustered tables.</p>
</li>
<li>
<p>Access time improves for joins of clustered tables.</p>
</li>
<li>
<p>Less storage is required to store related table and index data because the cluster key value is not stored repeatedly for each row.</p>
</li>
</ul>
<p>Typically, clustering tables is not appropriate in the following situations:</p>
<ul style="list-style-type: disc;">
<li>
<p>The tables are frequently updated.</p>
</li>
<li>
<p>The tables frequently require a <a href="glossary.htm#GUID-BF9B54D6-892E-4C3B-8536-38958ACC069D"><span class="xrefglossterm">full table scan</span></a>.</p>
</li>
<li>
<p>The tables require truncating.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-04AADD81-E5C2-498B-B857-DF2A37DD3520__GUID-33A5E37B-484C-4552-B45A-B9E5DFE107BF">
<p class="notep1">See Also:</p>
<p><a class="olink TGSQL870" target="_blank" href="../TGSQL/tgsql_indc.htm#TGSQL870"><span><cite>Oracle Database SQL Tuning Guide</cite></span></a> for guidelines on when to use table clusters</p>
</div>
</div>
<div class="sect3"><a id="GUID-CC31365B-83B0-4E09-A047-BF1B79AC887A"></a>
<h3 id="CNCPT-GUID-CC31365B-83B0-4E09-A047-BF1B79AC887A" class="sect3">Overview of Indexed Clusters</h3>
<div>
<p>An <span class="bold">index cluster</span> is a table cluster that uses an index to locate data. The <span class="bold">cluster index</span> is a B-tree index on the cluster key. A cluster index must be created before any rows can be inserted into clustered tables.</p>
<div class="example" id="GUID-CC31365B-83B0-4E09-A047-BF1B79AC887A__CREATINGANINDEXEDTABLECLUSTER-1D7BFD25">
<p class="titleinexample">Example 2-6 Creating a Table Cluster and Associated Index</p>
<p>Assume that you create the cluster <code class="codeph">employees_departments_cluster</code> with the cluster key <code class="codeph">department_id</code>, as shown in the following example:</p>
<pre dir="ltr">CREATE CLUSTER employees_departments_cluster
   (department_id NUMBER(4))
SIZE 512;

CREATE INDEX idx_emp_dept_cluster 
   ON CLUSTER employees_departments_cluster;
</pre>
<p>Because the <code class="codeph">HASHKEYS</code> clause is not specified, <code class="codeph">employees_departments_cluster</code> is an indexed cluster. The preceding example creates an index named <code class="codeph">idx_emp_dept_cluster</code> on the cluster key <code class="codeph">department_id</code>.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-CC31365B-83B0-4E09-A047-BF1B79AC887A__YOUTHENCREATETHEEMPLOYEESANDDEPARTM-1D7BEFE6">
<p class="titleinexample">Example 2-7 Creating Tables in an Indexed Cluster</p>
<p>You create the <code class="codeph">employees</code> and <code class="codeph">departments</code> tables in the cluster, specifying the <code class="codeph">department_id</code> column as the cluster key, as follows (the ellipses mark the place where the column specification goes):</p>
<pre dir="ltr">CREATE TABLE employees ( ... )
   CLUSTER employees_departments_cluster (department_id);
 
CREATE TABLE departments ( ... )
   CLUSTER employees_departments_cluster (department_id);
</pre>
<p>Assume that you add rows to the <code class="codeph">employees</code> and <code class="codeph">departments</code> tables. The database physically stores all rows for each department from the <code class="codeph">employees</code> and <code class="codeph">departments</code> tables in the same data blocks. The database stores the rows in a heap and locates them with the index.</p>
<p><a href="tablecls.htm#GUID-CC31365B-83B0-4E09-A047-BF1B79AC887A__I30164">Figure 2-5</a> shows the <code class="codeph">employees_departments_cluster</code> table cluster, which contains <code class="codeph">employees</code> and <code class="codeph">departments</code>. The database stores rows for employees in department 20 together, department 110 together, and so on. If the tables are not clustered, then the database does not ensure that the related rows are stored together.</p>
<div class="figure" id="GUID-CC31365B-83B0-4E09-A047-BF1B79AC887A__I30164">
<p class="titleinfigure">Figure 2-5 Clustered Table Data</p>
<img width="654" height="569" src="img/GUID-F32585AD-6A0D-4AE1-9585-7D21A4505143-default.gif" alt="Description of Figure 2-5 follows" title="Description of Figure 2-5 follows"/><br/>
<a href="img_text/GUID-F32585AD-6A0D-4AE1-9585-7D21A4505143-print.htm">Description of &#34;Figure 2-5 Clustered Table Data&#34;</a></div>
<!-- class="figure" -->
<p>The B-tree cluster index associates the cluster key value with the database block address (DBA) of the block containing the data. For example, the index entry for key 20 shows the address of the block that contains data for employees in department 20:</p>
<pre dir="ltr">20,AADAAAA9d
</pre>
<p>The cluster index is separately managed, just like an index on a nonclustered table, and can exist in a separate tablespace from the table cluster.</p>
<div class="infoboxnotealso" id="GUID-CC31365B-83B0-4E09-A047-BF1B79AC887A__GUID-8669C34B-7EF3-48F5-A507-5178A5CF217F">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="indexiot.htm#GUID-DE7A95BC-6E4A-47EA-9FC5-B85B54F8CF41" title="An index is an optional structure, associated with a table or table cluster, that can sometimes speed data access. Indexes are schema objects that are logically and physically independent of the data in the objects with which they are associated. Thus, you can drop or create an index without physically affecting the indexed table.">Introduction to Indexes</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ADMIN018" target="_blank" href="../ADMIN/clustrs.htm#ADMIN018"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to create and manage indexed clusters</p>
</li>
<li>
<p><a class="olink SQLRF01201" target="_blank" href="../SQLRF/statements_5002.htm#SQLRF01201"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for <code class="codeph">CREATE CLUSTER</code> syntax and semantics</p>
</li>
</ul>
</div>
</div>
<!-- class="example" --></div>
</div>
<a id="CNCPT609"></a>
<div class="props_rev_3"><a id="GUID-22771373-D8B8-4A76-9F08-1567489269BB"></a>
<h3 id="CNCPT-GUID-22771373-D8B8-4A76-9F08-1567489269BB" class="sect3">Overview of Hash Clusters</h3>
<div>
<p>A <span class="bold">hash cluster</span> is like an indexed cluster, except the index key is replaced with a <span class="bold">hash function</span>. No separate cluster index exists. In a hash cluster, the data is the index.</p>
<p>With an indexed table or indexed cluster, Oracle Database locates table rows using key values stored in a separate index. To find or store a row in an indexed table or table cluster, the database must perform at least two I/Os:</p>
<ul style="list-style-type: disc;">
<li>
<p>One or more I/Os to find or store the key value in the index</p>
</li>
<li>
<p>Another I/O to read or write the row in the table or table cluster</p>
</li>
</ul>
<p>To find or store a row in a hash cluster, Oracle Database applies the hash function to the cluster key value of the row. The resulting hash value corresponds to a data block in the cluster, which the database reads or writes on behalf of the issued statement.</p>
<p>Hashing is an optional way of storing table data to improve the performance of data retrieval. Hash clusters may be beneficial when the following conditions are met:</p>
<ul style="list-style-type: disc;">
<li>
<p>A table is queried much more often than modified.</p>
</li>
<li>
<p>The hash key column is queried frequently with equality conditions, for example, <code class="codeph">WHERE department_id=20</code>. For such queries, the cluster key value is hashed. The hash key value points directly to the disk area that stores the rows.</p>
</li>
<li>
<p>You can reasonably guess the number of hash keys and the size of the data stored with each key value.</p>
</li>
</ul>
</div>
<a id="CNCPT88829"></a><a id="CNCPT88828"></a>
<div class="props_rev_3"><a id="GUID-391EC9EF-A34A-4A49-A9E4-9BF5B7324E9E"></a>
<h4 id="CNCPT-GUID-391EC9EF-A34A-4A49-A9E4-9BF5B7324E9E" class="sect4">Hash Cluster Creation</h4>
<div>
<p>To create a hash cluster, you use the same <code class="codeph">CREATE CLUSTER</code> statement as for an indexed cluster, with the addition of a hash key. The number of hash values for the cluster depends on the hash key.</p>
<p>The cluster key, like the key of an indexed cluster, is a single column or composite key shared by the tables in the cluster. A <a href="glossary.htm#GUID-C3BAC9AD-DE26-4C9F-B27E-B45D2401B230"><span class="xrefglossterm">hash key value</span></a> is an actual or possible value inserted into the cluster key column. For example, if the cluster key is <code class="codeph">department_id</code>, then hash key values could be 10, 20, 30, and so on.</p>
<p>Oracle Database uses a hash function that accepts an infinite number of hash key values as input and sorts them into a finite number of buckets. Each bucket has a unique numeric ID known as a <a href="glossary.htm#GUID-385E8505-A9C0-488E-9BC8-5DEEF23C0CD2"><span class="xrefglossterm">hash value</span></a>. Each hash value maps to the database block address for the block that stores the rows corresponding to the hash key value (department 10, 20, 30, and so on).</p>
<p>In the following example, the number of departments that are likely to exist is 100, so <code class="codeph">HASHKEYS</code> is set to <code class="codeph">100</code>:</p>
<pre dir="ltr">CREATE CLUSTER employees_departments_cluster
   (department_id NUMBER(4))
SIZE 8192 HASHKEYS 100;
</pre>
<p>After you create <code class="codeph">employees_departments_cluster</code>, you can create the <code class="codeph">employees</code> and <code class="codeph">departments</code> tables in the cluster. You can then load data into the hash cluster just as in the indexed cluster described in <span class="q">&#34;<a href="tablecls.htm#GUID-CC31365B-83B0-4E09-A047-BF1B79AC887A" title="An index cluster is a table cluster that uses an index to locate data. The cluster index is a B-tree index on the cluster key. A cluster index must be created before any rows can be inserted into clustered tables.">Overview of Indexed Clusters</a>&#34;</span>.</p>
<div class="infoboxnotealso" id="GUID-391EC9EF-A34A-4A49-A9E4-9BF5B7324E9E__GUID-A4D52C80-9DB1-4E35-B0DC-E2F2BA5ABAB5">
<p class="notep1">See Also:</p>
<p><a class="olink ADMIN019" target="_blank" href="../ADMIN/hash.htm#ADMIN019"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to create and manage hash clusters</p>
</div>
</div>
</div>
<a id="CNCPT88830"></a><a id="CNCPT89178"></a>
<div class="props_rev_3"><a id="GUID-86E4A2CB-430D-49D0-933B-59292797A397"></a>
<h4 id="CNCPT-GUID-86E4A2CB-430D-49D0-933B-59292797A397" class="sect4">Hash Cluster Queries</h4>
<div>
<p>In queries of a hash cluster, the database determines how to hash the key values input by the user.</p>
<p>For example, users frequently execute queries such as the following, entering different department ID numbers for <code class="codeph">p_id</code>:</p>
<pre dir="ltr">SELECT *
FROM   employees
WHERE  department_id = :p_id;
 
SELECT * 
FROM   departments 
WHERE  department_id = :p_id;

SELECT * 
FROM   employees e, departments d 
WHERE  e.department_id = d.department_id
AND    d.department_id = :p_id;
</pre>
<p>If a user queries employees in <code class="codeph">department_id</code><code class="codeph">=20</code>, then the database might hash this value to bucket 77. If a user queries employees in <code class="codeph">department_id</code>=<code class="codeph">10</code>, then the database might hash this value to bucket 15. The database uses the internally generated hash value to locate the block that contains the employee rows for the requested department.</p>
<p><a href="tablecls.htm#GUID-86E4A2CB-430D-49D0-933B-59292797A397__CBBGGEGH">Figure 2-6</a> depicts a hash cluster segment as a horizontal row of blocks. As shown in the graphic, a query can retrieve data in a single I/O.</p>
<div class="figure" id="GUID-86E4A2CB-430D-49D0-933B-59292797A397__CBBGGEGH">
<p class="titleinfigure">Figure 2-6 Retrieving Data from a Hash Cluster</p>
<img width="629" height="245" src="img/GUID-5E1644FA-57DD-4104-B17E-1339370E9A03-default.gif" alt="Description of Figure 2-6 follows" title="Description of Figure 2-6 follows"/><br/>
<a href="img_text/GUID-5E1644FA-57DD-4104-B17E-1339370E9A03-print.htm">Description of &#34;Figure 2-6 Retrieving Data from a Hash Cluster&#34;</a></div>
<!-- class="figure" -->
<p>A limitation of hash clusters is the unavailability of range scans on nonindexed cluster keys (see <span class="q">&#34;<a href="indexiot.htm#GUID-E1BD4FBF-8A6D-4EF8-8892-7B1CBFA9D5C6" title="An index range scan is an ordered scan of an index in which one or more leading columns of an index are specified in conditions, and 0, 1, or more values are possible for an index key.">Index Range Scan</a>&#34;</span>). Assume no separate index exists for the hash cluster created in <a href="tablecls.htm#GUID-391EC9EF-A34A-4A49-A9E4-9BF5B7324E9E" title="To create a hash cluster, you use the same CREATE CLUSTER statement as for an indexed cluster, with the addition of a hash key. The number of hash values for the cluster depends on the hash key.">Hash Cluster Creation</a>. A query for departments with IDs between 20 and 100 cannot use the hashing algorithm because it cannot hash every possible value between 20 and 100. Because no index exists, the database must perform a full scan.</p>
</div>
</div>
<a id="CNCPT88831"></a>
<div class="props_rev_3"><a id="GUID-AAB75C82-E650-41F4-9C32-34697A16D9AA"></a>
<h4 id="CNCPT-GUID-AAB75C82-E650-41F4-9C32-34697A16D9AA" class="sect4">Hash Cluster Variations</h4>
<div>
<p>A single-table hash cluster is an optimized version of a hash cluster that supports only one table at a time. A one-to-one mapping exists between hash keys and rows.</p>
<p>A single-table hash cluster can be beneficial when users require rapid access to a table by primary key. For example, users often look up an employee record in the <code class="codeph">employees</code> table by <code class="codeph">employee_id</code>.</p>
<p>A <a href="glossary.htm#GUID-AFC062EE-E4F1-4B7A-ADBA-02AB939B21E6"><span class="xrefglossterm">sorted hash cluster</span></a> stores the rows corresponding to each value of the hash function in such a way that the database can efficiently return them in sorted order. The database performs the optimized sort internally. For applications that always consume data in sorted order, this technique can mean faster retrieval of data. For example, an application might always sort on the <code class="codeph">order_date</code> column of the <code class="codeph">orders</code> table.</p>
<div class="infoboxnotealso" id="GUID-AAB75C82-E650-41F4-9C32-34697A16D9AA__GUID-62AF8D72-D721-402A-A0C5-FB13D9E2EADD">
<p class="notep1">See Also:</p>
<p><a class="olink ADMIN01901" target="_blank" href="../ADMIN/hash.htm#ADMIN01901"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to create single-table and sorted hash clusters</p>
</div>
</div>
</div>
<a id="CNCPT89179"></a><a id="CNCPT88832"></a>
<div class="props_rev_3"><a id="GUID-793CA829-2827-4F95-BE23-600B0E955DFF"></a>
<h4 id="CNCPT-GUID-793CA829-2827-4F95-BE23-600B0E955DFF" class="sect4">Hash Cluster Storage</h4>
<div>
<p>Oracle Database allocates space for a hash cluster differently from an indexed cluster.</p>
<p>In the example in <a href="tablecls.htm#GUID-391EC9EF-A34A-4A49-A9E4-9BF5B7324E9E" title="To create a hash cluster, you use the same CREATE CLUSTER statement as for an indexed cluster, with the addition of a hash key. The number of hash values for the cluster depends on the hash key.">Hash Cluster Creation</a>, <code class="codeph">HASHKEYS</code> specifies the number of departments likely to exist, whereas <code class="codeph">SIZE</code> specifies the size of the data associated with each department. The database computes a storage space value based on the following formula:</p>
<pre dir="ltr">HASHKEYS * SIZE / database_block_size
</pre>
<p>Thus, if the block size is 4096 bytes in the example shown in <a href="tablecls.htm#GUID-391EC9EF-A34A-4A49-A9E4-9BF5B7324E9E" title="To create a hash cluster, you use the same CREATE CLUSTER statement as for an indexed cluster, with the addition of a hash key. The number of hash values for the cluster depends on the hash key.">Hash Cluster Creation</a>, then the database allocates at least 200 blocks to the hash cluster.</p>
<p>Oracle Database does not limit the number of hash key values that you can insert into the cluster. For example, even though <code class="codeph">HASHKEYS</code> is <code class="codeph">100</code>, nothing prevents you from inserting 200 unique departments in the <code class="codeph">departments</code> table. However, the efficiency of the hash cluster retrieval diminishes when the number of hash values exceeds the number of hash keys.</p>
<p>To illustrate the retrieval issues, assume that block 100 in <a href="tablecls.htm#GUID-86E4A2CB-430D-49D0-933B-59292797A397__CBBGGEGH">Figure 2-6</a> is completely full with rows for department 20. A user inserts a new department with <code class="codeph">department_id</code> 43 into the <code class="codeph">departments</code> table. The number of departments exceeds the <code class="codeph">HASHKEYS</code> value, so the database hashes <code class="codeph">department_id</code> 43 to hash value 77, which is the same hash value used for <code class="codeph">department_id</code> 20. Hashing multiple input values to the same output value is called a <a href="glossary.htm#GUID-2B7DCF40-8C20-439C-8DFD-E8F3EDE8B8FF"><span class="xrefglossterm">hash collision</span></a>.</p>
<p>When users insert rows into the cluster for department 43, the database cannot store these rows in block 100, which is full. The database links block 100 to a new overflow block, say block 200, and stores the inserted rows in the new block. Both block 100 and 200 are now eligible to store data for either department. As shown in <a href="tablecls.htm#GUID-793CA829-2827-4F95-BE23-600B0E955DFF__CIHFHBFE">Figure 2-7</a>, a query of either department 20 or 43 now requires <span class="italic">two</span> I/Os to retrieve the data: block 100 and its associated block 200. You can solve this problem by re-creating the cluster with a different <code class="codeph">HASHKEYS</code> value.</p>
<div class="figure" id="GUID-793CA829-2827-4F95-BE23-600B0E955DFF__CIHFHBFE">
<p class="titleinfigure">Figure 2-7 Retrieving Data from a Hash Cluster When a Hash Collision Occurs</p>
<img width="629" height="423" src="img/GUID-D8E8EDE6-2BB7-4AAD-BAF4-EF72B8725E1A-default.gif" alt="Description of Figure 2-7 follows" title="Description of Figure 2-7 follows"/><br/>
<a href="img_text/GUID-D8E8EDE6-2BB7-4AAD-BAF4-EF72B8725E1A-print.htm">Description of &#34;Figure 2-7 Retrieving Data from a Hash Cluster When a Hash Collision Occurs&#34;</a></div>
<!-- class="figure" -->
<div class="infoboxnotealso" id="GUID-793CA829-2827-4F95-BE23-600B0E955DFF__GUID-0A5107D9-06B6-4A34-A4F2-692E2DABCFB8">
<p class="notep1">See Also:</p>
<p><a class="olink ADMIN11762" target="_blank" href="../ADMIN/hash.htm#ADMIN11762"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to manage space in hash clusters</p>
</div>
</div>
</div>
</div>
</div>
<a id="CNCPT89316"></a>
<div class="props_rev_3"><a id="GUID-7A1C37B5-F594-4C8E-A38B-6E37742492A1"></a>
<h2 id="CNCPT-GUID-7A1C37B5-F594-4C8E-A38B-6E37742492A1" class="sect2">Overview of Attribute-Clustered Tables</h2>
<div>
<p>An <span class="bold">attribute-clustered table</span> is a heap-organized table that stores data in close proximity on disk based on user-specified clustering directives. The directives specify columns in single or multiple tables.</p>
<p>The directives are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">CLUSTERING ... BY LINEAR ORDER</code> directive orders data in a table according to specified columns.</p>
<p>Consider using <code class="codeph">BY LINEAR ORDER</code> clustering, which is the default, when queries qualify the prefix of columns specified in the clustering clause. For example, if queries of <code class="codeph">sh.sales</code> often specify either a customer ID or both customer ID and product ID, then you could cluster data in the table using the linear column order <code class="codeph">cust_id</code>, <code class="codeph">prod_id</code>.</p>
</li>
<li>
<p>The <code class="codeph">CLUSTERING ... BY INTERLEAVED ORDER</code> directive orders data in one or more tables using a special algorithm, similar to a Z-order function, that permits multicolumn I/O reduction.</p>
<p>Consider using <code class="codeph">BY INTERLEAVED ORDER</code> clustering when queries specify a variety of column combinations. For example, if queries of <code class="codeph">sh.sales</code> specify different dimensions in different orders, then you can cluster data in the <code class="codeph">sales</code> table according to columns in these dimensions.</p>
</li>
</ul>
<p>Attribute clustering is only available for <a href="glossary.htm#GUID-73D6FDFE-E38D-49F2-A5A5-B6BDB2FD297C"><span class="xrefglossterm">direct path INSERT</span></a> operations. It is ignored for conventional DML.</p>
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tablecls.htm#GUID-F11E6356-4A48-4A4C-BAFF-3A558F839701" title="The primary benefit of attribute-clustered tables is I/O reduction, which can significantly reduce the I/O cost and CPU cost of table scans. I/O reduction occurs either with zones or by reducing physical I/O through closer physical proximity on disk for the clustered values.">Advantages of Attribute-Clustered Tables</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-B775275F-E1FE-48DA-81B4-351F3C00E3A3" title="Attribute clustering that is based on joined columns is called join attribute clustering. In contrast with table clusters, join attribute clustered tables do not store data from a group of tables in the same database blocks.">Join Attribute Clustered Tables</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-F42B7024-3C45-4424-8098-E96F68ACF679" title="A zone is a set of contiguous data blocks that stores the minimum and maximum values of relevant columns. When a SQL statement contains predicates on columns stored in a zone, the database compares the predicate values to the minimum and maximum stored in the zone to determine which zones to read during SQL execution.">I/O Reduction Using Zones</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-B62B0C6C-5D0B-4529-BD63-79FE6F18AA81" title="A linear ordering scheme for a table divides rows into ranges based on user-specified attributes in a specific order. Oracle Database supports linear ordering on single or multiple tables that are connected through a primary-foreign key relationship.">Attribute-Clustered Tables with Linear Ordering</a></p>
</li>
<li>
<p><a href="tablecls.htm#GUID-F07E2574-9DC6-45E0-8EEA-C8196406505B" title="Interleaved ordering uses a technique that is similar to a Z-order. Interleaved ordering enables the database to prune I/O based on any subset of predicates in the clustering columns. Interleaved ordering is useful for dimensional hierarchies in a data warehouse.">Attribute-Clustered Tables with Interleaved Ordering</a></p>
</li>
</ul>
</div>
<a id="CNCPT89203"></a>
<div class="props_rev_3"><a id="GUID-F11E6356-4A48-4A4C-BAFF-3A558F839701"></a>
<h3 id="CNCPT-GUID-F11E6356-4A48-4A4C-BAFF-3A558F839701" class="sect3">Advantages of Attribute-Clustered Tables</h3>
<div>
<p>The primary benefit of attribute-clustered tables is I/O reduction, which can significantly reduce the I/O cost and CPU cost of table scans. I/O reduction occurs either with zones or by reducing physical I/O through closer physical proximity on disk for the clustered values.</p>
<p>An attribute-clustered table has the following advantages:</p>
<ul style="list-style-type: disc;">
<li>
<p>You can cluster fact tables based on dimension columns in star schemas.</p>
<p>In star schemas, most queries qualify dimension tables and not fact tables, so clustering by fact table columns is not effective. Oracle Database supports clustering on columns in dimension tables.</p>
</li>
<li>
<p>I/O reduction can occur in several different scenarios:</p>
<ul style="list-style-type: disc;">
<li>
<p>When used with Oracle Exadata Storage Indexes, Oracle In-Memory min/max pruning, or zone maps</p>
</li>
<li>
<p>In OLTP applications for queries that qualify a prefix and use attribute clustering with linear order</p>
</li>
<li>
<p>On a subset of the clustering columns for <code class="codeph">BY INTERLEAVED ORDER</code> clustering</p>
</li>
</ul>
</li>
<li>
<p>Attribute clustering can improve data compression, and in this way indirectly improve table scan costs.</p>
<p>When the same values are close to each other on disk, the database can more easily compress them.</p>
</li>
<li>
<p>Oracle Database does not incur the storage and maintenance cost of an index.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-F11E6356-4A48-4A4C-BAFF-3A558F839701__GUID-143D1568-125D-4B77-9CE0-E20542A6906F">
<p class="notep1">See Also:</p>
<p><a class="olink DWHSG8919" target="_blank" href="../DWHSG/attcluster.htm#DWHSG8919"><span><cite>Oracle Database Data Warehousing Guide</cite></span></a> for more advantages of attribute-clustered tables</p>
</div>
</div>
</div>
<a id="CNCPT94780"></a>
<div class="props_rev_3"><a id="GUID-B775275F-E1FE-48DA-81B4-351F3C00E3A3"></a>
<h3 id="CNCPT-GUID-B775275F-E1FE-48DA-81B4-351F3C00E3A3" class="sect3">Join Attribute Clustered Tables</h3>
<div>
<p>Attribute clustering that is based on joined columns is called <span class="bold">join attribute clustering</span>. In contrast with table clusters, join attribute clustered tables do not store data from a group of tables in the same database blocks.</p>
<p>For example, consider an attribute-clustered table, <code class="codeph">sales</code>, joined with a dimension table, <code class="codeph">products</code>. The <code class="codeph">sales</code> table contains only rows from the <code class="codeph">sales</code> table, but the ordering of the rows is based on the values of columns joined from <code class="codeph">products</code> table. The appropriate join is executed during data movement, direct path insert, and <code class="codeph">CREATE TABLE AS SELECT</code> operations. In contrast, if <code class="codeph">sales</code> and <code class="codeph">products</code> were in a standard table cluster, the data blocks would contain rows from both tables.</p>
<div class="infoboxnotealso" id="GUID-B775275F-E1FE-48DA-81B4-351F3C00E3A3__GUID-31C12769-0793-4107-B4EC-F57BFFBB0DD2">
<p class="notep1">See Also:</p>
<p><a class="olink DWHSG8917" target="_blank" href="../DWHSG/attcluster.htm#DWHSG8917"><span class="italic">Oracle Database Data Warehousing Guide</span></a> to learn more about join attribute clustering</p>
</div>
</div>
</div>
<a id="CNCPT89204"></a>
<div class="props_rev_3"><a id="GUID-F42B7024-3C45-4424-8098-E96F68ACF679"></a>
<h3 id="CNCPT-GUID-F42B7024-3C45-4424-8098-E96F68ACF679" class="sect3">I/O Reduction Using Zones</h3>
<div>
<p>A <span class="bold">zone</span> is a set of contiguous data blocks that stores the minimum and maximum values of relevant columns. When a SQL statement contains predicates on columns stored in a zone, the database compares the predicate values to the minimum and maximum stored in the zone to determine which zones to read during SQL execution.</p>
<p>I/O reduction is the ability to skip table or index blocks that do not contain data that the database needs to satisfy the query. This reduction can significantly reduce the I/O and CPU cost of table scans.</p>
</div>
<a id="CNCPT94759"></a>
<div class="props_rev_3"><a id="GUID-632E8DC4-CFCB-499C-BC57-CC6B0BEDAB9A"></a>
<h4 id="CNCPT-GUID-632E8DC4-CFCB-499C-BC57-CC6B0BEDAB9A" class="sect4">Zone Maps</h4>
<div>
<p>A <span class="bold">zone map</span> is an independent access structure that divides data blocks into zones. Oracle Database implements each zone map as a type of <span class="bold">materialized view</span>.</p>
<p>Whenever <code class="codeph">CLUSTERING</code> is specified on a table, the database automatically creates a zone map on the specified clustering columns. The zone map correlates minimum and maximum values of columns with consecutive data blocks in the attribute-clustered table. Attribute-clustered tables use zone maps to perform I/O reduction.</p>
<p>You can create attribute-clustered tables that do not use zone maps. You can also create zone maps without attribute-clustered tables. For example, you can create a zone map on a table whose rows are naturally ordered on a set of columns, such as a stock trade table whose trades are ordered by time. You execute DDL statements to create, drop, and maintain zone maps.</p>
<div class="infoboxnotealso" id="GUID-632E8DC4-CFCB-499C-BC57-CC6B0BEDAB9A__GUID-C75018D0-D565-4C2F-B916-4E12634102D3">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="schemaob.htm#GUID-2822B62B-CAF3-4DCE-B4D6-5E677FB8A829" title="A materialized view is a query result that has been stored or &#34;materialized&#34; in advance as schema objects. The FROM clause of the query can name tables, views, or materialized views.">Overview of Materialized Views</a>&#34;</span></p>
</li>
<li>
<p><a class="olink DWHSG8935" target="_blank" href="../DWHSG/zone_maps.htm#DWHSG8935"><span><cite>Oracle Database Data Warehousing Guide</cite></span></a> to learn more about zone maps</p>
</li>
</ul>
</div>
</div>
</div>
<a id="CNCPT94760"></a>
<div class="props_rev_3"><a id="GUID-1B4C6843-CB60-49CD-B556-96073200C830"></a>
<h4 id="CNCPT-GUID-1B4C6843-CB60-49CD-B556-96073200C830" class="sect4">Zone Maps: Analogy</h4>
<div>
<p>For a loose analogy of zone maps, consider a sales manager who uses a bookcase of pigeonholes, which are analogous to data blocks. Each pigeonhole has receipts (rows) describing shirts sold to a customer, ordered by ship date. In this analogy, a zone map is like a stack of index cards. Each card corresponds to a &#34;zone&#34; (contiguous range) of pigeonholes, such as pigeonholes 1-10. For each zone, the card lists the minimum and maximum ship dates for the receipts stored in the zone.</p>
<p>When someone wants to know which shirts shipped on a certain date, the manager flips the cards until she comes to the date range that contains the requested date, notes the pigeonhole zone, and then searches only pigeonholes in this zone for the requested receipts. In this way, the manager avoids searching every pigeonhole in the bookcase for the receipts.</p>
</div>
</div>
<a id="CNCPT94762"></a><a id="CNCPT94763"></a><a id="CNCPT94761"></a>
<div class="props_rev_3"><a id="GUID-768037FC-1946-47A1-B35B-286A9C91A19D"></a>
<h4 id="CNCPT-GUID-768037FC-1946-47A1-B35B-286A9C91A19D" class="sect4">Zone Maps: Example</h4>
<div>
<p>This example illustrates how a zone map can prune data in a query whose predicate contains a constant.</p>
<p>Assume you create the following <code class="codeph">lineitem</code> table:</p>
<pre dir="ltr">CREATE TABLE lineitem 
  ( orderkey      NUMBER        , 
    shipdate      DATE          ,
    receiptdate   DATE          ,
    destination   VARCHAR2(50)  ,
    quantity      NUMBER        );
</pre>
<p>The table <code class="codeph">lineitem</code> contains 4 data blocks with 2 rows per block. <a href="tablecls.htm#GUID-768037FC-1946-47A1-B35B-286A9C91A19D__CIHJIJIG" title="This table shows the 8 rows of the lineitems Table.">Table 2-2</a> shows the 8 rows of the table.</p>
<div class="tblformal" id="GUID-768037FC-1946-47A1-B35B-286A9C91A19D__CIHJIJIG">
<p class="titleintable">Table 2-2 Data Blocks for lineitem Table</p>
<table class="cellalignment1206" title="Data Blocks for lineitem Table" summary="This table shows the 8 rows of the lineitems Table.">
<thead>
<tr class="cellalignment1197">
<th class="cellalignment1258" id="d11766e15697">Block</th>
<th class="cellalignment1266" id="d11766e15700">orderkey</th>
<th class="cellalignment1262" id="d11766e15703">shipdate</th>
<th class="cellalignment1267" id="d11766e15706">receiptdate</th>
<th class="cellalignment1268" id="d11766e15709">destination</th>
<th class="cellalignment1231" id="d11766e15712">quantity</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1197">
<td class="cellalignment1260" id="d11766e15717" headers="d11766e15697">
<p>1</p>
</td>
<td class="cellalignment1269" headers="d11766e15717 d11766e15700">
<p>1</p>
</td>
<td class="cellalignment1264" headers="d11766e15717 d11766e15703">
<p>1-1-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15717 d11766e15706">
<p>1-10-2014</p>
</td>
<td class="cellalignment1271" headers="d11766e15717 d11766e15709">
<p>San_Fran</p>
</td>
<td class="cellalignment1232" headers="d11766e15717 d11766e15712">
<p>100</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1260" id="d11766e15736" headers="d11766e15697">
<p>1</p>
</td>
<td class="cellalignment1269" headers="d11766e15736 d11766e15700">
<p>2</p>
</td>
<td class="cellalignment1264" headers="d11766e15736 d11766e15703">
<p>1-2-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15736 d11766e15706">
<p>1-10-2014</p>
</td>
<td class="cellalignment1271" headers="d11766e15736 d11766e15709">
<p>San_Fran</p>
</td>
<td class="cellalignment1232" headers="d11766e15736 d11766e15712">
<p>200</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1260" id="d11766e15755" headers="d11766e15697">
<p>2</p>
</td>
<td class="cellalignment1269" headers="d11766e15755 d11766e15700">
<p>3</p>
</td>
<td class="cellalignment1264" headers="d11766e15755 d11766e15703">
<p>1-3-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15755 d11766e15706">
<p>1-9-2014</p>
</td>
<td class="cellalignment1271" headers="d11766e15755 d11766e15709">
<p>San_Fran</p>
</td>
<td class="cellalignment1232" headers="d11766e15755 d11766e15712">
<p>100</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1260" id="d11766e15774" headers="d11766e15697">
<p>2</p>
</td>
<td class="cellalignment1269" headers="d11766e15774 d11766e15700">
<p>4</p>
</td>
<td class="cellalignment1264" headers="d11766e15774 d11766e15703">
<p>1-5-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15774 d11766e15706">
<p>1-10-2014</p>
</td>
<td class="cellalignment1271" headers="d11766e15774 d11766e15709">
<p>San_Diego</p>
</td>
<td class="cellalignment1232" headers="d11766e15774 d11766e15712">
<p>100</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1260" id="d11766e15793" headers="d11766e15697">
<p>3</p>
</td>
<td class="cellalignment1269" headers="d11766e15793 d11766e15700">
<p>5</p>
</td>
<td class="cellalignment1264" headers="d11766e15793 d11766e15703">
<p>1-10-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15793 d11766e15706">
<p>1-15-2014</p>
</td>
<td class="cellalignment1271" headers="d11766e15793 d11766e15709">
<p>San_Fran</p>
</td>
<td class="cellalignment1232" headers="d11766e15793 d11766e15712">
<p>100</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1260" id="d11766e15812" headers="d11766e15697">
<p>3</p>
</td>
<td class="cellalignment1269" headers="d11766e15812 d11766e15700">
<p>6</p>
</td>
<td class="cellalignment1264" headers="d11766e15812 d11766e15703">
<p>1-12-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15812 d11766e15706">
<p>1-16-2014</p>
</td>
<td class="cellalignment1271" headers="d11766e15812 d11766e15709">
<p>San_Fran</p>
</td>
<td class="cellalignment1232" headers="d11766e15812 d11766e15712">
<p>200</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1260" id="d11766e15831" headers="d11766e15697">
<p>4</p>
</td>
<td class="cellalignment1269" headers="d11766e15831 d11766e15700">
<p>7</p>
</td>
<td class="cellalignment1264" headers="d11766e15831 d11766e15703">
<p>1-13-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15831 d11766e15706">
<p>1-20-2014</p>
</td>
<td class="cellalignment1271" headers="d11766e15831 d11766e15709">
<p>San_Fran</p>
</td>
<td class="cellalignment1232" headers="d11766e15831 d11766e15712">
<p>100</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1260" id="d11766e15850" headers="d11766e15697">
<p>4</p>
</td>
<td class="cellalignment1269" headers="d11766e15850 d11766e15700">
<p>8</p>
</td>
<td class="cellalignment1264" headers="d11766e15850 d11766e15703">
<p>1-15-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15850 d11766e15706">
<p>1-30-2014</p>
</td>
<td class="cellalignment1271" headers="d11766e15850 d11766e15709">
<p>San_Jose</p>
</td>
<td class="cellalignment1232" headers="d11766e15850 d11766e15712">
<p>100</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>You can use the <code class="codeph">CREATE MATERIALIZED ZONEMAP</code> statement to create a zone map on the <code class="codeph">lineitem</code> table. Each zone contains 2 blocks and stores the minimum and maximum of the <code class="codeph">orderkey</code>, <code class="codeph">shipdate</code>, and <code class="codeph">receiptdate</code> columns. <a href="tablecls.htm#GUID-768037FC-1946-47A1-B35B-286A9C91A19D__CIHHDJJB" title="This table shows the zone map for the lineitem Table.">Table 2-3</a> shows the zone map.</p>
<div class="tblformal" id="GUID-768037FC-1946-47A1-B35B-286A9C91A19D__CIHHDJJB">
<p class="titleintable">Table 2-3 Zone Map for lineitem Table</p>
<table class="cellalignment1206" title="Zone Map for lineitem Table" summary="This table shows the zone map for the lineitem Table.">
<thead>
<tr class="cellalignment1197">
<th class="cellalignment1259" id="d11766e15906">Block Range</th>
<th class="cellalignment1266" id="d11766e15909">min orderkey</th>
<th class="cellalignment1268" id="d11766e15912">max orderkey</th>
<th class="cellalignment1268" id="d11766e15915">min shipdate</th>
<th class="cellalignment1207" id="d11766e15918">max shipdate</th>
<th class="cellalignment1267" id="d11766e15921">min receiptdate</th>
<th class="cellalignment1267" id="d11766e15924">max receiptdate</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1197">
<td class="cellalignment1261" id="d11766e15929" headers="d11766e15906">
<p>1-2</p>
</td>
<td class="cellalignment1269" headers="d11766e15929 d11766e15909">
<p>1</p>
</td>
<td class="cellalignment1271" headers="d11766e15929 d11766e15912">
<p>4</p>
</td>
<td class="cellalignment1271" headers="d11766e15929 d11766e15915">
<p>1-1-2014</p>
</td>
<td class="cellalignment1209" headers="d11766e15929 d11766e15918">
<p>1-5-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15929 d11766e15921">
<p>1-9-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15929 d11766e15924">
<p>1-10-2014</p>
</td>
</tr>
<tr class="cellalignment1197">
<td class="cellalignment1261" id="d11766e15951" headers="d11766e15906">
<p>3-4</p>
</td>
<td class="cellalignment1269" headers="d11766e15951 d11766e15909">
<p>5</p>
</td>
<td class="cellalignment1271" headers="d11766e15951 d11766e15912">
<p>8</p>
</td>
<td class="cellalignment1271" headers="d11766e15951 d11766e15915">
<p>1-10-2014</p>
</td>
<td class="cellalignment1209" headers="d11766e15951 d11766e15918">
<p>1-15-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15951 d11766e15921">
<p>1-15-2014</p>
</td>
<td class="cellalignment1270" headers="d11766e15951 d11766e15924">
<p>1-30-2014</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>When you execute the following query, the database can read the zone map and then scan only blocks 1 and 2 because the date <code class="codeph">1-3-2014</code> falls between the minimum and maximum dates:</p>
<pre dir="ltr">SELECT * FROM lineitem WHERE shipdate = &#39;1-3-2014&#39;;
</pre>
<div class="infoboxnotealso" id="GUID-768037FC-1946-47A1-B35B-286A9C91A19D__GUID-764C4895-13AF-4675-9172-2CF60FC81E33">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink DWHSG8935" target="_blank" href="../DWHSG/zone_maps.htm#DWHSG8935"><span><cite>Oracle Database Data Warehousing Guide</cite></span></a> to learn how to use zone maps</p>
</li>
<li>
<p><a class="olink SQLRF01402" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF01402"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for syntax and semantics of the <code class="codeph">CREATE MATERIALIZED ZONEMAP</code> statement</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="CNCPT94765"></a><a id="CNCPT94766"></a><a id="CNCPT94764"></a>
<div class="props_rev_3"><a id="GUID-B62B0C6C-5D0B-4529-BD63-79FE6F18AA81"></a>
<h3 id="CNCPT-GUID-B62B0C6C-5D0B-4529-BD63-79FE6F18AA81" class="sect3">Attribute-Clustered Tables with Linear Ordering</h3>
<div>
<p>A linear ordering scheme for a table divides rows into ranges based on user-specified attributes in a specific order. Oracle Database supports linear ordering on single or multiple tables that are connected through a primary-foreign key relationship.</p>
<p>For example, the <code class="codeph">sales</code> table divides the <code class="codeph">cust_id</code> and <code class="codeph">prod_id</code> columns into ranges, and then clusters these ranges together on disk. When you specify the <code class="codeph">BY LINEAR ORDER</code> directive for a table, significant I/O reduction can occur when a predicate specifies either the prefix column or all columns in the directive.</p>
<p>Assume that queries of <code class="codeph">sales</code> often specify either a customer ID or a combination of a customer ID and product ID. You can create an attribute-clustered table so that such queries benefit from I/O reduction:</p>
<pre dir="ltr">CREATE TABLE sales
(
   prod_id     NOT NULL NUMBER
,  cust_id     NOT NULL NUMBER
,  amount_sold NUMBER(10,2) ...
)
CLUSTERING 
  BY LINEAR ORDER (cust_id, prod_id)
  YES ON LOAD YES ON DATA MOVEMENT
  WITH MATERIALIZED ZONEMAP;
</pre>
<p>Queries that qualify both columns <code class="codeph">cust_id</code> and <code class="codeph">prod_id</code>, or the prefix <code class="codeph">cust_id</code> experience I/O reduction. Queries that qualify <code class="codeph">prod_id</code> only do not experience significant I/O reduction because <code class="codeph">prod_id</code> is the suffix of the <code class="codeph">BY LINEAR ORDER</code> clause. The following examples show how the database can reduce I/O during table scans.</p>
<div class="example" id="GUID-B62B0C6C-5D0B-4529-BD63-79FE6F18AA81__GUID-1F5A91B9-DD79-420C-9831-AD364E8654B5">
<p class="titleinexample">Example 2-8 Specifying Only cust_id</p>
<p>An application issues the following query:</p>
<pre dir="ltr">SELECT * FROM sales WHERE cust_id = 100;
</pre>
<p>Because the <code class="codeph">sales</code> table is a <code class="codeph">BY LINEAR ORDER</code> cluster, the database must only read the zones that include the <code class="codeph">cust_id</code> value of <code class="codeph">100</code>.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-B62B0C6C-5D0B-4529-BD63-79FE6F18AA81__GUID-DE4852E5-D8E3-41C0-999E-8A6C5F11BD7D">
<p class="titleinexample">Example 2-9 Specifying prod_id and cust_id</p>
<p>An application issues the following query:</p>
<pre dir="ltr">SELECT * FROM sales WHERE cust_id = 100 AND prod_id = 2300;
</pre>
<p>Because the <code class="codeph">sales</code> table is a <code class="codeph">BY LINEAR ORDER</code> cluster, the database must only read the zones that include the <code class="codeph">cust_id</code> value of <code class="codeph">100</code> and <code class="codeph">prod_id</code> value of <code class="codeph">2300</code>.</p>
<div class="infoboxnotealso" id="GUID-B62B0C6C-5D0B-4529-BD63-79FE6F18AA81__GUID-0890B5BF-DFE9-489F-A95A-940F7E7B61B9">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink DWHSG8923" target="_blank" href="../DWHSG/attcluster.htm#DWHSG8923"><span class="italic">Oracle Database Data Warehousing Guide</span></a> to learn how to cluster tables using linear ordering</p>
</li>
<li>
<p><a class="olink SQLRF01402" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF01402"><span class="italic">Oracle Database SQL Language Reference</span></a> for syntax and semantics of the <code class="codeph">BY LINEAR ORDER</code> clause</p>
</li>
</ul>
</div>
</div>
<!-- class="example" --></div>
</div>
<a id="CNCPT94768"></a><a id="CNCPT94767"></a>
<div class="props_rev_3"><a id="GUID-F07E2574-9DC6-45E0-8EEA-C8196406505B"></a>
<h3 id="CNCPT-GUID-F07E2574-9DC6-45E0-8EEA-C8196406505B" class="sect3">Attribute-Clustered Tables with Interleaved Ordering</h3>
<div>
<p>Interleaved ordering uses a technique that is similar to a <span class="italic">Z-order</span>. Interleaved ordering enables the database to prune I/O based on any subset of predicates in the clustering columns. Interleaved ordering is useful for dimensional hierarchies in a data warehouse.</p>
<p>As with attribute-clustered tables with linear ordering, Oracle Database supports interleaved ordering on single or multiple tables that are connected through a primary-foreign key relationship. Columns in tables other than the attribute-clustered table must be linked by foreign key and joined to the attribute-clustered table.</p>
<p>Large data warehouses frequently organize data in a <a href="glossary.htm#GUID-2634049A-9DD8-4D5A-89BD-A6B72EF2C169"><span class="xrefglossterm">star schema</span></a>. A <a href="glossary.htm#GUID-3089C278-6C49-4110-A10C-A95586E5868F"><span class="xrefglossterm">dimension table</span></a> uses a parent-child hierarchy and is connected to a <a href="glossary.htm#GUID-B6DD258C-FFA5-4CDC-B5FB-98B3B9F20F99"><span class="xrefglossterm">fact table</span></a> by a <a href="glossary.htm#GUID-EEE8A67D-6B0E-468E-9554-48FEE552BC9A"><span class="xrefglossterm">foreign key</span></a> (see <span class="q">&#34;<a href="schemaob.htm#GUID-84D64C39-D8E8-4706-B4E3-519FE2CEE4C2" title="A typical data warehouse has two important components: dimensions and facts. A dimension is any category used in specifying business questions, for example, time, geography, product, department, and distribution channel. A fact is an event or entity associated with a particular set of dimension values, for example, units sold or profits.">Overview of Dimensions</a>&#34;</span>). Clustering a fact table by interleaved order enables the database to use a special function to skip values in dimension columns during table scans.</p>
<div class="example" id="GUID-F07E2574-9DC6-45E0-8EEA-C8196406505B__GUID-5B075FFE-DA0F-4E9F-A1D8-4E7D7CD4CF55">
<p class="titleinexample">Example 2-10 Interleaved Ordering Example</p>
<p>Suppose your data warehouse contains a <code class="codeph">sales</code> fact table and its two dimension tables: <code class="codeph">customers</code> and <code class="codeph">products</code>. Most queries have predicates on the <code class="codeph">customers</code> table hierarchy <code class="codeph">(cust_state_province, cust_city)</code> and the products hierarchy <code class="codeph">(prod_category, prod_subcategory)</code>. You can use interleaved ordering for the <code class="codeph">sales</code> table as shown in the partial statement in the following example:</p>
<pre dir="ltr">CREATE TABLE sales
(
   prod_id NUMBER NOT NULL
,  cust_id NUMBER NOT NULL
,  amount_sold NUMBER(10,2) ...
)
CLUSTERING sales
   JOIN products ON (sales.prod_id = products.prod_id)
   JOIN customers ON (sales.cust_id = customers.cust_id)
   BY INTERLEAVED ORDER
   (
     (  products.prod_category
     ,  products.prod_subcategory
     ),
     (  customers.cust_state_province
     ,  customers.cust_city
     )
   )
WITH MATERIALIZED ZONEMAP;
</pre>
<div class="infobox-note" id="GUID-F07E2574-9DC6-45E0-8EEA-C8196406505B__GUID-23505C2F-4DA6-480A-BB01-44D6EB05780F">
<p class="notep1">Note:</p>
<p>The columns specified in the <code class="codeph">BY INTERLEAVED ORDER</code> clause need not be in actual dimension tables, but they must be connected through a primary-foreign key relationship.</p>
</div>
<p>Suppose an application queries the <code class="codeph">sales</code>, <code class="codeph">products</code>, and <code class="codeph">customers</code> tables in a join. The query specifies the <code class="codeph">customers.prod_category</code> and <code class="codeph">customers_cust_state_province</code> columns in the predicate as follows:</p>
<pre dir="ltr">SELECT cust_city, prod_sub_category, SUM(amount_sold)
FROM   sales, products, customers
WHERE  sales.prod_id = products.prod_id 
AND    sales.cust_id = customers.cust_id
AND    customers.prod_category = &#39;Boys&#39; 
AND    customers.cust_state_province = &#39;England - Norfolk&#39; 
GROUP BY cust_city, prod_sub_category;
</pre>
<p>In the preceding query, the <code class="codeph">prod_category</code> and <code class="codeph">cust_state_province</code> columns are part of the clustering definition shown in the <code class="codeph">CREATE TABLE</code> example. During the scan of the <code class="codeph">sales</code> table, the database can consult the zone map and access only the rowids in this zone.</p>
<div class="infoboxnotealso" id="GUID-F07E2574-9DC6-45E0-8EEA-C8196406505B__GUID-93E2ED32-ED12-4F20-8CBA-FB9247BABB4C">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink DWHSG8927" target="_blank" href="../DWHSG/attcluster.htm#DWHSG8927"><span class="italic">Oracle Database Data Warehousing Guide</span></a> to learn how to cluster tables using interleaved ordering</p>
</li>
<li>
<p><a class="olink SQLRF01402" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF01402"><span class="italic">Oracle Database SQL Language Reference</span></a> for syntax and semantics of the <code class="codeph">BY INTERLEAVED ORDER</code> clause</p>
</li>
</ul>
</div>
</div>
<!-- class="example" --></div>
</div>
</div>
<a id="CNCPT1138"></a>
<div class="props_rev_3"><a id="GUID-23B23DCF-7482-4585-9C63-AC073C5DE224"></a>
<h2 id="CNCPT-GUID-23B23DCF-7482-4585-9C63-AC073C5DE224" class="sect2">Overview of Temporary Tables</h2>
<div>
<p>A <span class="bold">temporary table</span> holds data that exists only for the duration of a transaction or session. Data in a temporary table is private to the session, which means that each session can only see and modify its own data.</p>
</div>
<a id="CNCPT88820"></a>
<div class="props_rev_3"><a id="GUID-06905966-CDAF-457F-B397-C7B5F157F5EF"></a>
<h3 id="CNCPT-GUID-06905966-CDAF-457F-B397-C7B5F157F5EF" class="sect3">Temporary Table Creation</h3>
<div>
<p>The <code class="codeph">CREATE GLOBAL TEMPORARY TABLE</code> statement creates a temporary table. The <code class="codeph">ON COMMIT</code> clause specifies whether the table data is transaction-specific (default) or session-specific. You create a temporary table for the database itself, not for every PL/SQL stored procedure.</p>
<p>You can create indexes for temporary tables with the <code class="codeph">CREATE INDEX</code> statement. These indexes are also temporary. The data in the index has the same session or transaction scope as the data in the temporary table. You can also create a <a href="glossary.htm#GUID-1274BCF5-2EC1-4752-B9CE-998A85A83307"><span class="xrefglossterm">view</span></a> or <a href="glossary.htm#GUID-8BA32C58-ACF3-4B6B-941F-586DE399D22A"><span class="xrefglossterm">trigger</span></a> on a temporary table.</p>
<div class="infoboxnotealso" id="GUID-06905966-CDAF-457F-B397-C7B5F157F5EF__GUID-AD3676A5-0AEA-487B-B57A-33CF41713992">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="schemaob.htm#GUID-15E7AEDB-9A3F-4B31-AD2D-66253CC822E5" title="A view is a logical representation of one or more tables. In essence, a view is a stored query.">Overview of Views</a>&#34;</span> and <span class="q">&#34;<a href="srvrside.htm#GUID-40297ADF-0968-42F8-B8B9-84AD6ADCBE63" title="A database trigger is a compiled stored program unit, written in either PL/SQL or Java, that Oracle Database invokes (&#34;fires&#34;) automatically in certain situations.">Overview of Triggers</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ADMIN11633" target="_blank" href="../ADMIN/tables.htm#ADMIN11633"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> to learn how to create and manage temporary tables</p>
</li>
<li>
<p><a class="olink SQLRF01402" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF01402"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for <code class="codeph">CREATE GLOBAL TEMPORARY TABLE</code> syntax and semantics</p>
</li>
</ul>
</div>
</div>
</div>
<a id="CNCPT1139"></a>
<div class="props_rev_3"><a id="GUID-FBFEBB7A-0BBE-4580-A45B-9CA73A2DDFB1"></a>
<h3 id="CNCPT-GUID-FBFEBB7A-0BBE-4580-A45B-9CA73A2DDFB1" class="sect3">Segment Allocation in Temporary Tables</h3>
<div>
<p>Like permanent tables, temporary tables are persistent objects that are statically defined in the data dictionary. Temporary segments are allocated when a session first inserts data.</p>
<p>Until data is loaded in a session, the temporary table appears empty. For transaction-specific temporary tables, the database deallocates temporary segments at the end of the transaction. For session-specific temporary tables, the database deallocates temporary segments at the end of the session.</p>
<div class="infoboxnotealso" id="GUID-FBFEBB7A-0BBE-4580-A45B-9CA73A2DDFB1__GUID-526AF661-F27D-45C0-B445-02FD988DBAB0">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="logical.htm#GUID-BFC69020-DECA-4F2D-8BED-57A612A4E7C8" title="When processing a query, Oracle Database often requires temporary workspace for intermediate stages of SQL statement execution.">Temporary Segments</a>&#34;</span></p>
</div>
</div>
</div>
</div>
<a id="CNCPT1141"></a>
<div class="props_rev_3"><a id="GUID-97FC9DFF-A6CF-46CD-9F6F-D88A37C0E79C"></a>
<h2 id="CNCPT-GUID-97FC9DFF-A6CF-46CD-9F6F-D88A37C0E79C" class="sect2">Overview of External Tables</h2>
<div>
<p>An <span class="bold">external table</span> accesses data in external sources as if this data were in a table in the database. You can use SQL, PL/SQL, and Java to query the external data.</p>
<p>External tables are useful for querying flat files. For example, a SQL-based application may need to access records in a text file. The records are in the following form:</p>
<pre dir="ltr">100,Steven,King,SKING,515.123.4567,17-JUN-03,AD_PRES,31944,150,90
101,Neena,Kochhar,NKOCHHAR,515.123.4568,21-SEP-05,AD_VP,17000,100,90 
102,Lex,De Haan,LDEHAAN,515.123.4569,13-JAN-01,AD_VP,17000,100,90
</pre>
<p>You could create an external table, copy the file to the location specified in the external table definition, and use SQL to query the records in the text file.</p>
<p>External tables are also valuable for performing <a href="glossary.htm#GUID-1145ABBB-D2C9-4321-B5E4-6435053062F0"><span class="xrefglossterm">ETL</span></a> tasks common in <a href="glossary.htm#GUID-0881E18F-D245-4980-8272-64964B64E3CC"><span class="xrefglossterm">data warehouse</span></a> environments. For example, external tables enable the pipelining of the data loading phase with the transformation phase, eliminating the need to stage data inside the database in preparation for further processing inside the database. See <span class="q">&#34;<a href="cmntopc.htm#GUID-E1451108-464E-4B5F-B173-11212278E308" title="Data warehouses and their architectures vary depending on the business requirements.In a simple data warehouse architecture, end users directly access data that was transported from several source systems to the data warehouse.Some data warehouses use a staging area, which is a place where data is preprocessed before entering the warehouse. A staging area simplifies the tasks of building summaries and managing the warehouse.You may want to customize your warehouse architecture for different groups within your organization. You can achieve this goal by transporting data in the warehouse to data marts, which are independent databases designed for a specific business or project. Typically, data marts include many summary tables.The process of extracting data from source systems and bringing it into the warehouse is commonly called ETL: extraction, transformation, and loading. ETL refers to a broad process rather than three well-defined steps. Oracle Database has introduced many SQL operations for performing analytic operations. These operations include ranking, moving averages, cumulative sums, ratio-to-reports, and period-over-period comparisons.Oracle online analytical processing (OLAP) provides native multidimensional storage and rapid response times when analyzing data across multiple dimensions. OLAP enables analysts to quickly obtain answers to complex, iterative queries during interactive sessions.">Overview of Data Warehousing and Business Intelligence</a>&#34;</span>.</p>
</div>
<a id="CNCPT88821"></a>
<div class="props_rev_3"><a id="GUID-DF76D7A2-B92B-4B65-869B-9E76BB816459"></a>
<h3 id="CNCPT-GUID-DF76D7A2-B92B-4B65-869B-9E76BB816459" class="sect3">External Table Creation</h3>
<div>
<p>Internally, creating an external table means creating metadata in the data dictionary. Unlike an ordinary table, an external table does not describe data stored in the database, nor does it describe how data is stored externally. Rather, external table metadata describes how the external table layer must <span class="italic">present</span> data to the database.</p>
<p>A <code class="codeph">CREATE TABLE ... ORGANIZATION EXTERNAL</code> statement has two parts. The external table definition describes the column types. This definition is like a view that enables SQL to query external data without loading it into the database. The second part of the statement maps the external data to the columns.</p>
<p>External tables are read-only unless created with <code class="codeph">CREATE TABLE AS SELECT</code> with the <code class="codeph">ORACLE_DATAPUMP</code> access driver. Restrictions for external tables include no support for indexed columns, virtual columns, and column objects.</p>
</div>
</div>
<a id="CNCPT88823"></a><a id="CNCPT88822"></a>
<div class="props_rev_3"><a id="GUID-DC5A86C4-0891-48AF-99A9-16F329962452"></a>
<h3 id="CNCPT-GUID-DC5A86C4-0891-48AF-99A9-16F329962452" class="sect3">External Table Access Drivers</h3>
<div>
<p>An <span class="bold">access driver</span> is an API that interprets the external data for the database. The access driver runs inside the database, which uses the driver to read the data in the external table. The access driver and the external table layer are responsible for performing the transformations required on the data in the data file so that it matches the external table definition.</p>
<p><a href="tablecls.htm#GUID-DC5A86C4-0891-48AF-99A9-16F329962452__CBBGABBH">Figure 2-8</a> represents how external data is accessed.</p>
<div class="figure" id="GUID-DC5A86C4-0891-48AF-99A9-16F329962452__CBBGABBH">
<p class="titleinfigure">Figure 2-8 External Tables</p>
<img width="504" height="293" src="img/GUID-D1BE70CF-14E9-416C-9BF5-5FF7B0E6121E-default.gif" alt="Description of Figure 2-8 follows" title="Description of Figure 2-8 follows"/><br/>
<a href="img_text/GUID-D1BE70CF-14E9-416C-9BF5-5FF7B0E6121E-print.htm">Description of &#34;Figure 2-8 External Tables&#34;</a></div>
<!-- class="figure" -->
<p>Oracle provides the <code class="codeph">ORACLE_LOADER</code> (default) and <code class="codeph">ORACLE_DATAPUMP</code> access drivers for external tables. For both drivers, the external files are not Oracle data files.</p>
<p><code class="codeph">ORACLE_LOADER</code> enables read-only access to external files using SQL*Loader. You cannot create, update, or append to an external file using the <code class="codeph">ORACLE_LOADER</code> driver.</p>
<p>The <code class="codeph">ORACLE_DATAPUMP</code> driver enables you to unload external data. This operation involves reading data from the database and inserting the data into an external table, represented by one or more external files. After external files are created, the database cannot update or append data to them. The driver also enables you to load external data, which involves reading an external table and loading its data into a database.</p>
<div class="infoboxnotealso" id="GUID-DC5A86C4-0891-48AF-99A9-16F329962452__GUID-4A9494DC-45B2-4352-A62D-8D0A54CF4A6C">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADMIN01507" target="_blank" href="../ADMIN/tables.htm#ADMIN01507"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> to learn about managing external tables, external connections, and directory objects</p>
</li>
<li>
<p><a class="olink SUTIL011" target="_blank" href="../SUTIL/GUID-44323E01-7D72-45EC-915A-99E596769D9E.htm#SUTIL011"><span class="italic">Oracle Database Utilities</span></a> to learn about external tables</p>
</li>
<li>
<p><a class="olink SQLRF54502" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF54502"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about creating and querying external tables</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="CNCPT88818"></a><a id="CNCPT88819"></a><a id="CNCPT88817"></a>
<div class="props_rev_3"><a id="GUID-EBB02ED3-525E-4D7F-B984-E8AC3BF039F7"></a>
<h2 id="CNCPT-GUID-EBB02ED3-525E-4D7F-B984-E8AC3BF039F7" class="sect2">Overview of Object Tables</h2>
<div>
<p>An Oracle <span class="bold">object type</span> is a user-defined type with a name, attributes, and methods. An <span class="bold">object table</span> is a special kind of table in which each row represents an object. Object types make it possible to model real-world entities such as customers and purchase orders as objects in the database.</p>
<p>An object type defines a logical structure, but does not create storage. The following example creates an object type named <code class="codeph">department_typ</code>:</p>
<pre dir="ltr">CREATE TYPE department_typ AS OBJECT
   ( d_name     VARCHAR2(100),
     d_address  VARCHAR2(200) );
/
</pre>
<p>The following example creates an object table named <code class="codeph">departments_obj_t</code> of the object type <code class="codeph">department_typ</code>, and then inserts a row into the table. The attributes (columns) of the <code class="codeph">departments_obj_t</code> table are derived from the definition of the object type.</p>
<pre dir="ltr">CREATE TABLE departments_obj_t OF department_typ;
INSERT INTO departments_obj_t 
  VALUES (&#39;hr&#39;, &#39;10 Main St, Sometown, CA&#39;);
</pre>
<p>Like a relational column, an object table can contain rows of just one kind of thing, namely, object instances of the same declared type as the table. By default, every row object in an object table has an associated logical object identifier (OID) that uniquely identifies it in an object table. The OID column of an object table is a hidden column.</p>
<div class="infoboxnotealso" id="GUID-EBB02ED3-525E-4D7F-B984-E8AC3BF039F7__GUID-48AF151D-88D0-4DB6-A063-D72EE049AB1D">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADOBJ001" target="_blank" href="../ADOBJ/adobjint.htm#ADOBJ001"><span class="italic">Oracle Database Object-Relational Developer&#39;s Guide</span></a> to learn about object-relational features in Oracle Database</p>
</li>
<li>
<p><a class="olink SQLRF01506" target="_blank" href="../SQLRF/statements_8001.htm#SQLRF01506"><span class="italic">Oracle Database SQL Language Reference</span></a> for <code class="codeph">CREATE TYPE</code> syntax and semantics</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1196">
<tr>
<td class="cellalignment1203">
<table class="cellalignment1201">
<tr>
<td class="cellalignment1200"><a href="intro.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1200"><a href="indexiot.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1993, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1205">
<table class="cellalignment1199">
<tr>
<td class="cellalignment1200"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1200"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1200"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1200"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1200"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1200"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>