<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-114708"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/General%20XStream%20Concepts"></a><title>General XStream Concepts</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="description" content="General XStream concepts apply to both XStream Out and XStream In."/>
<meta name="keywords" content="XStream, XStream Out, sequence LCRs, logical change records (LCRs), positions, Oracle Streams Performance Advisor, UTL_SPADV package, SQL generation, interfaces, formats, character sets, data types, examples, demo, demos"/>
<meta name="dcterms.created" content="2017-06-13T10:02:49Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database XStream Guide"/>
<meta name="dcterms.identifier" content="E53119-03"/>
<meta name="dcterms.isVersionOf" content="XSTRM"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2009, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="xstrm_intro.htm" title="Previous" type="text/html"/>
<link rel="Next" href="xstrm_pt_xout.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53119-03.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-C8114BC8-1F04-48A2-964B-375C04767B86"></a> <span id="PAGE" style="display:none;">7/24</span> <!-- End Header -->
<a id="XSTRM72733"></a>
<h1 id="XSTRM-GUID-C8114BC8-1F04-48A2-964B-375C04767B86" class="sect1"><span class="enumeration_chapter">2</span> General XStream Concepts</h1>
<div>
<p>General XStream concepts apply to both XStream Out and XStream In.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-71F649DC-F09A-4B5B-BB1C-4325871E3AEE">Logical Change Records (LCRs)</a></strong><br/>
An LCR is a message with a specific format that describes a database change.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-41229989-0893-4463-8063-3FD28D94A233">Rules and Rule Sets</a></strong><br/>
XStream uses rules and rule sets.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-DBE2C046-8206-4AB0-B4D6-2AE0829F9D2F">Rule-Based Transformations</a></strong><br/>
In XStream, a rule-based transformation is any modification to a logical change record (LCR) when a rule in a positive rule set evaluates to <code class="codeph">TRUE</code>.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-1AFF2DEF-E53A-428F-A75B-110CACBC5088">XStream and the Oracle Streams Performance Advisor</a></strong><br/>
The Oracle Streams Performance Advisor consists of the <code class="codeph">DBMS_STREAMS_ADVISOR_ADM</code> PL/SQL package and a collection of data dictionary views.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-676A6CE2-F40C-4F9F-849B-3FD904B701F3">XStream and SQL Generation</a></strong><br/>
SQL generation is the ability to generate the SQL statement required to perform the change encapsulated in a row LCR.</li>
</ul>
<div class="infoboxnotealso" id="GUID-C8114BC8-1F04-48A2-964B-375C04767B86__GUID-55CBD04F-3AC7-4469-9213-7409EDD70CC1">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="xstrm_xout_cncpt.htm#GUID-B59B1F79-91F6-4495-B946-5DCEB317E0D6" title="Become familiar with concepts related to XStream Out.">XStream Out Concepts</a></p>
</li>
<li>
<p><a href="xstrm_xin_cncpt.htm#GUID-D2C787E8-E16F-4286-921E-93195265E4F7" title="Become familiar with the concepts related to XStream In.">XStream In Concepts</a></p>
</li>
</ul>
</div>
</div>
<a id="XSTRM72734"></a>
<div class="props_rev_3"><a id="GUID-71F649DC-F09A-4B5B-BB1C-4325871E3AEE"></a>
<h2 id="XSTRM-GUID-71F649DC-F09A-4B5B-BB1C-4325871E3AEE" class="sect2"><span class="enumeration_section">2.1</span> Logical Change Records (LCRs)</h2>
<div>
<p>An LCR is a message with a specific format that describes a database change.</p>
<p>There are three types of LCRs: row LCRs, DDL LCRs, and sequence LCRs. In XStream, an LCR is the basic unit of information that describes a database change.</p>
<p>In an XStream Out configuration, a capture process can capture LCRs and send them to an outbound server. The outbound server can send the LCRs to the XStream client application.</p>
<p>In an XStream In configuration, an XStream client application can construct LCRs and send them to an inbound server. The inbound server can apply the database changes directly to the database object in the database, or the inbound server can process the LCRs in a customized way.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-38751D5D-FFB4-4108-B675-2DA6F7FB9330">Row LCRs</a></strong><br/>
A row LCR describes a change to the data in a single row or a change to a single LOB column, <code class="codeph">LONG</code> column, <code class="codeph">LONG</code> <code class="codeph">RAW</code> column, or <code class="codeph">XMLType</code> column in a row.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-15F97C57-2984-4FCF-B423-EB7627969A49">DDL LCRs</a></strong><br/>
A DDL LCR describes a data definition language (DDL) change.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-A510EC5B-EB95-4934-814D-1345DFE98391">Extra Information in Row LCRs and DDL LCRs</a></strong><br/>
In addition to the information discussed in the previous sections, row LCRs and DDL LCRs optionally can include extra information (or LCR attributes).</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-5FC60F68-74DE-4155-84D0-6C6D538F84A8">Sequence LCRs</a></strong><br/>
A sequence LCR is a row LCR that includes information about sequence values. Sequence database objects generate sequence values.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-077AAE24-54CF-4102-9969-9540608FFB65">Position Order in an LCR Stream</a></strong><br/>
Each LCR has a position attribute. The position of an LCR identifies its placement in the stream of LCRs in a transaction.</li>
</ul>
</div>
<a id="XSTRM72736"></a><a id="XSTRM72737"></a><a id="XSTRM72735"></a>
<div class="props_rev_3"><a id="GUID-38751D5D-FFB4-4108-B675-2DA6F7FB9330"></a>
<h3 id="XSTRM-GUID-38751D5D-FFB4-4108-B675-2DA6F7FB9330" class="sect3"><span class="enumeration_section">2.1.1</span> Row LCRs</h3>
<div>
<p>A row LCR describes a change to the data in a single row or a change to a single LOB column, <code class="codeph">LONG</code> column, <code class="codeph">LONG</code> <code class="codeph">RAW</code> column, or <code class="codeph">XMLType</code> column in a row.</p>
<p>The change results from a data manipulation language (DML) statement or a piecewise operation. It may help to think of a row LCR as a DML LCR. For example, a single DML statement can insert or merge multiple rows into a table, can update multiple rows in a table, or can delete multiple rows from a table.</p>
<p>Since a single DML statement can affect more than one row, the capture process creates a row LCR for each row that is changed by the DML statement. Row LCRs represent the data changes made by a SQL or PL/SQL procedure invocation.</p>
<p>Each row LCR is encapsulated in an object of <code class="codeph">LCR$_ROW_RECORD</code> type. The following table describes the attributes that are present in each row LCR.</p>
<div class="tblformalwide" id="GUID-38751D5D-FFB4-4108-B675-2DA6F7FB9330__BABDGFHI">
<p class="titleintable">Table 2-1 Attributes Present in All Row LCRs</p>
<table class="cellalignment5169" title="Attributes Present in All Row LCRs" summary="This table describes each attribute that is present in all row LCRs.">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5170" id="d4802e357">Attribute</th>
<th class="cellalignment5171" id="d4802e360">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e365" headers="d4802e357">
<p><code class="codeph">source_database_name</code></p>
</td>
<td class="cellalignment5173" headers="d4802e365 d4802e360">
<p>The name of the source database where the row change occurred.</p>
<p>If the LCRs originated in a multitenant container database (CDB), then this attribute specifies the global name container where the row change occurred.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e375" headers="d4802e357">
<p><code class="codeph">command_type</code></p>
</td>
<td class="cellalignment5173" headers="d4802e375 d4802e360">
<p>The type of DML statement that produced the change, either <code class="codeph">INSERT</code>, <code class="codeph">UPDATE</code>, <code class="codeph">DELETE</code>, <code class="codeph">LOB</code> <code class="codeph">ERASE</code>, <code class="codeph">LOB</code> <code class="codeph">WRITE</code>, or <code class="codeph">LOB</code> <code class="codeph">TRIM</code>.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e411" headers="d4802e357">
<p><code class="codeph">object_owner</code></p>
</td>
<td class="cellalignment5173" headers="d4802e411 d4802e360">
<p>The schema name that contains the table with the changed&nbsp;row.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e419" headers="d4802e357">
<p><code class="codeph">object_name</code></p>
</td>
<td class="cellalignment5173" headers="d4802e419 d4802e360">
<p>The name of the table that contains the changed row.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e427" headers="d4802e357">
<p><code class="codeph">tag</code></p>
</td>
<td class="cellalignment5173" headers="d4802e427 d4802e360">
<p>A raw tag that you can use to track the LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e435" headers="d4802e357">
<p><code class="codeph">transaction_id</code></p>
</td>
<td class="cellalignment5173" headers="d4802e435 d4802e360">
<p>The identifier of the transaction in which the DML statement was run.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e443" headers="d4802e357">
<p><code class="codeph">scn</code></p>
</td>
<td class="cellalignment5173" headers="d4802e443 d4802e360">
<p>The system change number (SCN) at the time when the change was made.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e451" headers="d4802e357">
<p><code class="codeph">old_values</code></p>
</td>
<td class="cellalignment5173" headers="d4802e451 d4802e360">
<p>The old column values related to the change. These are the column values for the row before the DML change. If the type of the DML statement is <code class="codeph">UPDATE</code> or <code class="codeph">DELETE</code>, then these old values include some or all of the columns in the changed row before the DML statement. If the type of the DML statement is <code class="codeph">INSERT</code>, then there are no old values. For <code class="codeph">UPDATE</code> and <code class="codeph">DELETE</code> statements, row LCRs created by a capture process can include some or all of the old column values in the row.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e474" headers="d4802e357">
<p><code class="codeph">new_values</code></p>
</td>
<td class="cellalignment5173" headers="d4802e474 d4802e360">
<p>The new column values related to the change. These are the column values for the row after the DML change. If the type of the DML statement is <code class="codeph">UPDATE</code> or <code class="codeph">INSERT</code>, then these new values include some or all of the columns in the changed row after the DML statement. If the type of the DML statement is <code class="codeph">DELETE</code>, then there are no new values. For <code class="codeph">UPDATE</code> and <code class="codeph">INSERT</code> statements, row LCRs created by a capture process can include some or all of the new column values in the row.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e497" headers="d4802e357">
<p><code class="codeph">position</code></p>
</td>
<td class="cellalignment5173" headers="d4802e497 d4802e360">
<p>A unique identifier of <code class="codeph">RAW</code> data type for each LCR. The position is strictly increasing within a transaction and across transactions.</p>
<p>LCR position is commonly used in XStream configurations.</p>
<p>See <span class="q">&#34;<a href="xstrm_gen_cncpt.htm#GUID-077AAE24-54CF-4102-9969-9540608FFB65" title="Each LCR has a position attribute. The position of an LCR identifies its placement in the stream of LCRs in a transaction.">Position Order in an LCR Stream</a>&#34;</span>.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e519" headers="d4802e357">
<p><code class="codeph">root_name</code></p>
</td>
<td class="cellalignment5173" headers="d4802e519 d4802e360">
<p>If the LCR originated in a CDB, then this attribute specifies the global name of the root in the CDB.</p>
<p>If the LCR originated in a non-CDB, then this attribute is the same as the <code class="codeph">source_database_name</code> attribute.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Row LCRs that were captured by a capture process in an XStream Out configuration contain additional attributes. The following table describes these additional attributes. These attributes are not present in row LCRs constructed by an XStream client application in an XStream In configuration.</p>
<div class="tblformalwide" id="GUID-38751D5D-FFB4-4108-B675-2DA6F7FB9330__BABJHHAG">
<p class="titleintable">Table 2-2 Additional Attributes in LCRs Captured by a Capture Process</p>
<table class="cellalignment5169" title="Additional Attributes in LCRs Captured by a Capture Process" summary="This table describes the extra attributes in row LCRs captured by capture processes.">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5170" id="d4802e543">Attribute</th>
<th class="cellalignment5171" id="d4802e546">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e551" headers="d4802e543">
<p><code class="codeph">commit_scn</code></p>
</td>
<td class="cellalignment5173" headers="d4802e551 d4802e546">
<p>The commit system change number (SCN) of the transaction to which the LCR belongs.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e559" headers="d4802e543">
<p><code class="codeph">commit_scn_from_position</code></p>
</td>
<td class="cellalignment5173" headers="d4802e559 d4802e546">
<p>The commit system change number (SCN) of a transaction determined by the input position, which is generated by an XStream outbound server.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e567" headers="d4802e543">
<p><code class="codeph">commit_time</code></p>
</td>
<td class="cellalignment5173" headers="d4802e567 d4802e546">
<p>The commit time of the transaction to which the LCR belongs.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e575" headers="d4802e543">
<p><code class="codeph">compatible</code></p>
</td>
<td class="cellalignment5173" headers="d4802e575 d4802e546">
<p>The minimal database compatibility required to support the LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e583" headers="d4802e543">
<p><code class="codeph">instance_number</code></p>
</td>
<td class="cellalignment5173" headers="d4802e583 d4802e546">
<p>The instance number of the database instance that made the change that is encapsulated in the LCR. Typically, the instance number is relevant in an Oracle Real Application Clusters (Oracle RAC) configuration.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e591" headers="d4802e543">
<p><code class="codeph">lob_information</code></p>
</td>
<td class="cellalignment5173" headers="d4802e591 d4802e546">
<p>The LOB information for the column, such as <code class="codeph">NOT_A_LOB</code> or <code class="codeph">LOB_CHUNK</code>.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e605" headers="d4802e543">
<p><code class="codeph">lob_offset</code></p>
</td>
<td class="cellalignment5173" headers="d4802e605 d4802e546">
<p>The LOB offset for the specified column in the number of characters for <code class="codeph">CLOB</code> columns and the number of bytes for <code class="codeph">BLOB</code> columns.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e619" headers="d4802e543">
<p><code class="codeph">lob_operation_size</code></p>
</td>
<td class="cellalignment5173" headers="d4802e619 d4802e546">
<p>The operation size for the LOB column in the number of characters for <code class="codeph">CLOB</code> columns and the number of bytes for <code class="codeph">BLOB</code> columns.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e633" headers="d4802e543">
<p><code class="codeph">long_information</code></p>
</td>
<td class="cellalignment5173" headers="d4802e633 d4802e546">
<p>The <code class="codeph">LONG</code> information for the column, such as <code class="codeph">NOT_A_LONG</code> or <code class="codeph">LONG_CHUNK</code>.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e650" headers="d4802e543">
<p><code class="codeph">row_text</code></p>
</td>
<td class="cellalignment5173" headers="d4802e650 d4802e546">
<p>The SQL statement for the change that is encapsulated in the row LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e658" headers="d4802e543">
<p><code class="codeph">scn_from_position</code></p>
</td>
<td class="cellalignment5173" headers="d4802e658 d4802e546">
<p>The SCN of the LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e667" headers="d4802e543">
<p><code class="codeph">source_time</code></p>
</td>
<td class="cellalignment5173" headers="d4802e667 d4802e546">
<p>The time when the change in an LCR captured by a capture process was generated in the redo log of the source database, or the time when a persistent LCR was created.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e675" headers="d4802e543">
<p><code class="codeph">xml_information</code></p>
</td>
<td class="cellalignment5173" headers="d4802e675 d4802e546">
<p>The XML information for the column, such as <code class="codeph">NOT_XML</code>, <code class="codeph">XML_DOC</code>, or <code class="codeph">XML_DIFF</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-B7C74A90-BB1F-4C00-BDCF-48C7C9203D33">Row LCR Subtypes</a></strong><br/>
A row LCR can also contain transaction control statements. These row LCRs contain transaction control directives such as <code class="codeph">COMMIT</code> and <code class="codeph">ROLLBACK</code>.</li>
</ul>
</div>
<a id="XSTRM72909"></a>
<div class="props_rev_3"><a id="GUID-B7C74A90-BB1F-4C00-BDCF-48C7C9203D33"></a>
<h4 id="XSTRM-GUID-B7C74A90-BB1F-4C00-BDCF-48C7C9203D33" class="sect4"><span class="enumeration_section">2.1.1.1</span> Row LCR Subtypes</h4>
<div>
<p>A row LCR can also contain transaction control statements. These row LCRs contain transaction control directives such as <code class="codeph">COMMIT</code> and <code class="codeph">ROLLBACK</code>.</p>
<p>Such row LCRs are internal and can be used by outbound servers, inbound servers, and XStream client applications to maintain transaction consistency.</p>
<div class="infoboxnotealso" id="GUID-B7C74A90-BB1F-4C00-BDCF-48C7C9203D33__GUID-F95A9196-A548-4751-AD58-E29007CBD562">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS368" target="_blank" href="../ARPLS/t_lcr.htm#ARPLS368"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></p>
</div>
</div>
</div>
</div>
<a id="XSTRM72739"></a><a id="XSTRM72740"></a><a id="XSTRM72738"></a>
<div class="props_rev_3"><a id="GUID-15F97C57-2984-4FCF-B423-EB7627969A49"></a>
<h3 id="XSTRM-GUID-15F97C57-2984-4FCF-B423-EB7627969A49" class="sect3"><span class="enumeration_section">2.1.2</span> DDL LCRs</h3>
<div>
<p>A DDL LCR describes a data definition language (DDL) change.</p>
<p>A DDL statement changes the structure of the database. For example, a DDL statement can create, alter, or drop a database object.</p>
<p>Each DDL LCR is encapsulated in an object of <code class="codeph">LCR$_DDL_RECORD</code> type. The following table describes the attributes that are present in each DDL LCR.</p>
<div class="tblformalwide" id="GUID-15F97C57-2984-4FCF-B423-EB7627969A49__BABGIEED">
<p class="titleintable">Table 2-3 Attributes Present in All DDL LCRs</p>
<table class="cellalignment5169" title="Attributes Present in All DDL LCRs" summary="This table describes each attribute that is present in all DDL LCRs.">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5170" id="d4802e875">Attribute</th>
<th class="cellalignment5171" id="d4802e878">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e883" headers="d4802e875">
<p><code class="codeph">source_database_name</code></p>
</td>
<td class="cellalignment5173" headers="d4802e883 d4802e878">
<p>The name of the source database where the DDL change occurred.</p>
<p>If the LCRs originated in a CDB, then this attribute specifies the global name of the container where the DDL change occurred.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e893" headers="d4802e875">
<p><code class="codeph">command_type</code></p>
</td>
<td class="cellalignment5173" headers="d4802e893 d4802e878">
<p>The type of DDL statement that produced the change, for example <code class="codeph">ALTER</code> <code class="codeph">TABLE</code> or <code class="codeph">CREATE</code> <code class="codeph">INDEX</code>.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e913" headers="d4802e875">
<p><code class="codeph">object_owner</code></p>
</td>
<td class="cellalignment5173" headers="d4802e913 d4802e878">
<p>The schema name of the user who owns the database object on which the DDL statement was run.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e921" headers="d4802e875">
<p><code class="codeph">object_name</code></p>
</td>
<td class="cellalignment5173" headers="d4802e921 d4802e878">
<p>The name of the database object on which the DDL statement was run.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e929" headers="d4802e875">
<p><code class="codeph">object_type</code></p>
</td>
<td class="cellalignment5173" headers="d4802e929 d4802e878">
<p>The type of database object on which the DDL statement was run, for example <code class="codeph">TABLE</code> or <code class="codeph">PACKAGE</code>.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e943" headers="d4802e875">
<p><code class="codeph">ddl_text</code></p>
</td>
<td class="cellalignment5173" headers="d4802e943 d4802e878">
<p>The text of the DDL statement.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e951" headers="d4802e875">
<p><code class="codeph">logon_user</code></p>
</td>
<td class="cellalignment5173" headers="d4802e951 d4802e878">
<p>The logon user, which is the user whose session executed the DDL statement.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e959" headers="d4802e875">
<p><code class="codeph">current_schema</code></p>
</td>
<td class="cellalignment5173" headers="d4802e959 d4802e878">
<p>The schema that is used if no schema is specified for an object in the DDL text.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e967" headers="d4802e875">
<p><code class="codeph">base_table_owner</code></p>
</td>
<td class="cellalignment5173" headers="d4802e967 d4802e878">
<p>The base table owner. If the DDL statement is dependent on a table, then the base table owner is the owner of the table on which it is dependent.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e975" headers="d4802e875">
<p><code class="codeph">base_table_name</code></p>
</td>
<td class="cellalignment5173" headers="d4802e975 d4802e878">
<p>The base table name. If the DDL statement is dependent on a table, then the base table name is the name of the table on which it is dependent.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e983" headers="d4802e875">
<p><code class="codeph">tag</code></p>
</td>
<td class="cellalignment5173" headers="d4802e983 d4802e878">
<p>A raw tag that you can use to track the LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e992" headers="d4802e875">
<p><code class="codeph">transaction_id</code></p>
</td>
<td class="cellalignment5173" headers="d4802e992 d4802e878">
<p>The identifier of the transaction in which the DDL statement was run.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1000" headers="d4802e875">
<p><code class="codeph">scn</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1000 d4802e878">
<p>The system change number (SCN) at the time when the change was made.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1008" headers="d4802e875">
<p><code class="codeph">position</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1008 d4802e878">
<p>A unique identifier of <code class="codeph">RAW</code> data type for each LCR. The position is strictly increasing within a transaction and across transactions.</p>
<p>LCR position is commonly used in XStream configurations.</p>
<p>See <span class="q">&#34;<a href="xstrm_gen_cncpt.htm#GUID-077AAE24-54CF-4102-9969-9540608FFB65" title="Each LCR has a position attribute. The position of an LCR identifies its placement in the stream of LCRs in a transaction.">Position Order in an LCR Stream</a>&#34;</span>.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1030" headers="d4802e875">
<p><code class="codeph">edition_name</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1030 d4802e878">
<p>The name of the edition in which the DDL statement was executed.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1038" headers="d4802e875">
<p><code class="codeph">root_name</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1038 d4802e878">
<p>If the LCR originated in a CDB, then this attribute specifies the global name of the root in the CDB.</p>
<p>If the LCR originated in a non-CDB, then this attribute is the same as the <code class="codeph">source_database_name</code> attribute.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>DDL LCRs that were captured by a capture process contain additional attributes. The following table describes these additional attributes. These attributes are not present in DDL LCRs constructed by an XStream client application in an XStream In configuration.</p>
<div class="tblformalwide" id="GUID-15F97C57-2984-4FCF-B423-EB7627969A49__BABJEGEH">
<p class="titleintable">Table 2-4 Additional Attributes in DDL LCRs Captured by a Capture Process</p>
<table class="cellalignment5169" title="Additional Attributes in DDL LCRs Captured by a Capture Process" summary="This table describes the extra attributes in DDL LCRs captured by capture processes.">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5170" id="d4802e1062">Attribute</th>
<th class="cellalignment5171" id="d4802e1065">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1070" headers="d4802e1062">
<p><code class="codeph">commit_scn</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1070 d4802e1065">
<p>The commit system change number (SCN) of the transaction to which the LCR belongs.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1078" headers="d4802e1062">
<p><code class="codeph">commit_scn_from_position</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1078 d4802e1065">
<p>The commit SCN of a transaction determined by the input position, which is generated by an XStream outbound server.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1086" headers="d4802e1062">
<p><code class="codeph">commit_time</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1086 d4802e1065">
<p>The commit time of the transaction to which the LCR belongs.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1094" headers="d4802e1062">
<p><code class="codeph">compatible</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1094 d4802e1065">
<p>The minimal database compatibility required to support the LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1102" headers="d4802e1062">
<p><code class="codeph">instance_number</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1102 d4802e1065">
<p>The instance number of the database instance that made the change that is encapsulated in the LCR. Typically, the instance number is relevant in an Oracle Real Application Clusters (Oracle RAC) configuration.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1110" headers="d4802e1062">
<p><code class="codeph">scn_from_position</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1110 d4802e1065">
<p>The SCN of the LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1118" headers="d4802e1062">
<p><code class="codeph">source_time</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1118 d4802e1065">
<p>The time when the change in an LCR captured by a capture process was generated in the redo log of the source database, or the time when a persistent LCR was created.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infobox-note" id="GUID-15F97C57-2984-4FCF-B423-EB7627969A49__GUID-D67CBCA4-004E-4C7E-93BD-56E9A39AA0EE">
<p class="notep1">Note:</p>
<p>Both row LCRs and DDL LCRs contain the source database name of the database where a change originated. To avoid problems, Oracle recommends that you do not change the global name of the source database after a capture process has started capturing changes.</p>
</div>
<div class="infoboxnotealso" id="GUID-15F97C57-2984-4FCF-B423-EB7627969A49__GUID-5ADE3E30-38A8-4C32-83BC-6CA0BCA10870">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink LNOCI251" target="_blank" href="../LNOCI/ociaahan.htm#LNOCI251"><span><cite>Oracle Call Interface Programmer&#39;s Guide</cite></span></a> for a complete list of the types of DDL statements in the &#34;SQL Command Codes&#34; table</p>
</li>
<li>
<p><a class="olink ARPLS567" target="_blank" href="../ARPLS/t_lcr.htm#ARPLS567"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM72742"></a><a id="XSTRM72741"></a>
<div class="props_rev_3"><a id="GUID-A510EC5B-EB95-4934-814D-1345DFE98391"></a>
<h3 id="XSTRM-GUID-A510EC5B-EB95-4934-814D-1345DFE98391" class="sect3"><span class="enumeration_section">2.1.3</span> Extra Information in Row LCRs and DDL LCRs</h3>
<div>
<p>In addition to the information discussed in the previous sections, row LCRs and DDL LCRs optionally can include extra information (or LCR attributes).</p>
<p>The extra attributes in LCRs are described in the following table.</p>
<div class="tblformalwide" id="GUID-A510EC5B-EB95-4934-814D-1345DFE98391__GUID-43A13560-662F-4D53-9725-8D41420F1AFD">
<p class="titleintable">Table 2-5 Extra Attributes in LCRs</p>
<table class="cellalignment5169" title="Extra Attributes in LCRs" summary="This table describes each extra attribute that can be included in LCRs.">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5170" id="d4802e1225">Attribute</th>
<th class="cellalignment5171" id="d4802e1228">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1233" headers="d4802e1225">
<p><code class="codeph">row_id</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1233 d4802e1228">
<p>The rowid of the row changed in a row LCR. This attribute is not included in DDL LCRs or row LCRs for index-organized tables.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1241" headers="d4802e1225">
<p><code class="codeph">serial#</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1241 d4802e1228">
<p>The serial number of the session that performed the change captured in the&nbsp;LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1249" headers="d4802e1225">
<p><code class="codeph">session#</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1249 d4802e1228">
<p>The identifier of the session that performed the change captured in the LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1257" headers="d4802e1225">
<p><code class="codeph">thread#</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1257 d4802e1228">
<p>The thread number of the instance in which the change captured in the LCR was performed. Typically, the thread number is relevant only in an Oracle Real Application Clusters (Oracle RAC) environment.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1265" headers="d4802e1225">
<p><code class="codeph">tx_name</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1265 d4802e1228">
<p>The name of the transaction that includes the LCR.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e1273" headers="d4802e1225">
<p><code class="codeph">username</code></p>
</td>
<td class="cellalignment5173" headers="d4802e1273 d4802e1228">
<p>The name of the current user who performed the change captured in the&nbsp;LCR.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>You can use the <code class="codeph">INCLUDE_EXTRA_ATTRIBUTE</code> procedure in the <code class="codeph">DBMS_CAPTURE_ADM</code> package to instruct a capture process to capture one or more extra attributes.</p>
<div class="infoboxnotealso" id="GUID-A510EC5B-EB95-4934-814D-1345DFE98391__GUID-6083E3D5-EAC9-4283-8C5D-7DCFCB6C4131">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ARPLS522" target="_blank" href="../ARPLS/d_cap_a.htm#ARPLS522"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> for more information about the <code class="codeph">INCLUDE_EXTRA_ATTRIBUTE</code> procedure</p>
</li>
<li>
<p><a class="olink LNPLS00809" target="_blank" href="../LNPLS/subprograms.htm#LNPLS00809"><span><cite>Oracle Database PL/SQL Language Reference</cite></span></a> for more information about the current user</p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM72583"></a>
<div class="props_rev_3"><a id="GUID-5FC60F68-74DE-4155-84D0-6C6D538F84A8"></a>
<h3 id="XSTRM-GUID-5FC60F68-74DE-4155-84D0-6C6D538F84A8" class="sect3"><span class="enumeration_section">2.1.4</span> Sequence LCRs</h3>
<div>
<p>A sequence LCR is a row LCR that includes information about sequence values. Sequence database objects generate sequence values.</p>
<p>You can stream sequence LCRs in the following ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>To capture sequence LCRs using a capture process, set the capture process parameter <code class="codeph">capture_sequence_nextval</code> to <code class="codeph">Y</code>.</p>
</li>
<li>
<p>To construct sequence LCRs using the OCI interface, use the <code class="codeph">OCILCRNew</code> function and the <code class="codeph">OCILCRHeaderSet</code> function with the <code class="codeph">OCI_ROWLCR_SEQ_LCR</code> flag.</p>
</li>
<li>
<p>To construct sequence LCRs using the Java interface, use the <code class="codeph">DefaultRowLCR</code> constructor and <code class="codeph">setSequenceLCRFlag</code> method.</p>
</li>
</ul>
<p>An XStream inbound server or an Oracle Streams apply process can use sequence LCRs to ensure that the sequence values at a destination database use the appropriate values. For increasing sequences, the sequence values at the destination are equal to or greater than the sequence values at the source database. For decreasing sequences, the sequence values at the destination are less than or equal to the sequence values at the source database. To instruct an inbound server or apply process to use sequence LCRs, set the <code class="codeph">apply_sequence_nextval</code> apply parameter to&nbsp;<code class="codeph">Y</code>.</p>
<div class="infobox-note" id="GUID-5FC60F68-74DE-4155-84D0-6C6D538F84A8__GUID-B2238453-EA35-42D4-A4E6-9A7BF68AE636">
<p class="notep1">Note:</p>
<p>Sequence LCRs are intended for one-way replication configurations. Sequence LCRs cannot be used in bidirectional replication configurations.</p>
</div>
<div class="infoboxnotealso" id="GUID-5FC60F68-74DE-4155-84D0-6C6D538F84A8__GUID-3F502C71-87EB-46C8-AB38-2B6A6B930DAB">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="xstrm_xout_man.htm#GUID-AB998819-B851-478E-8412-3E30EBFC8FD4" title="Capture process parameters control the way a capture process operates. You set a capture process parameter using the SET_PARAMETER procedure in the DBMS_CAPTURE_ADM package.">Setting a Capture Process Parameter</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ARPLS306" target="_blank" href="../ARPLS/d_cap_a.htm#ARPLS306"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> for more information about the <code class="codeph">capture_sequence_nextval</code> capture process parameter</p>
</li>
<li>
<p><a class="olink LNOCI72914" target="_blank" href="../LNOCI/oci26strm.htm#LNOCI72914"><span><cite>Oracle Call Interface Programmer&#39;s Guide</cite></span></a> for more information about the OCI interface</p>
</li>
<li>
<p><a class="olink STXJV" target="_blank" href="../STXJV/toc.htm"><span><cite>Oracle Database XStream Java API Reference</cite></span></a> for more information about the Java interface</p>
</li>
<li>
<p><a class="olink ADMIN11792" target="_blank" href="../ADMIN/views.htm#ADMIN11792"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> for information about sequences</p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM1101"></a>
<div class="props_rev_3"><a id="GUID-077AAE24-54CF-4102-9969-9540608FFB65"></a>
<h3 id="XSTRM-GUID-077AAE24-54CF-4102-9969-9540608FFB65" class="sect3"><span class="enumeration_section">2.1.5</span> Position Order in an LCR Stream</h3>
<div>
<p>Each LCR has a position attribute. The position of an LCR identifies its placement in the stream of LCRs in a transaction.</p>
<p>Both XStream Out and XStream In use LCR streams to share transactions. XStream Out sends LCR streams to a client application. XStream In receives LCR streams from a client application.</p>
<p>Each LCR position has the following properties:</p>
<ul style="list-style-type: disc;">
<li>
<p>The position is unique for each LCR.</p>
</li>
<li>
<p>The position is of <code class="codeph">RAW</code> data type.</p>
</li>
<li>
<p>The position is strictly increasing within the LCR stream, within a transaction, and across transactions.</p>
</li>
<li>
<p>The position is byte-comparable, and the comparison results for multiple positions determines the ordering of the LCRs in the stream.</p>
</li>
<li>
<p>The position of an LCR remains identical when the database, the client application, or an XStream component restarts.</p>
</li>
<li>
<p>The position is not affected by any rule changes that might reduce or increase the number of LCRs in the stream.</p>
</li>
</ul>
<p>XStream Out only sends committed data, and XStream In only receives committed data.</p>
<p>The following are the properties related to an LCR stream:</p>
<ul style="list-style-type: disc;">
<li>
<p>An LCR stream must be repeatable.</p>
</li>
<li>
<p>An LCR stream must contain a list of assembled, committed transactions. LCRs from one transaction are contiguous. There is no interleaving of transactions in an LCR stream.</p>
</li>
<li>
<p>Each transaction within an LCR stream must have an ordered list of LCRs and a transaction ID.</p>
</li>
<li>
<p>The last LCR in each transaction must be a commit LCR.</p>
</li>
<li>
<p>Each LCR must have a unique position.</p>
</li>
<li>
<p>The position of all LCRs within a single transaction and across transactions must be strictly increasing.</p>
</li>
</ul>
<p>An LCR stream can batch LCRs from multiple transactions and arrange them in increasing position order. LCRs from one transaction are contiguous, and the position must be increasing in the transaction. Also, the position must be nonzero for all LCRs.</p>
<div class="infoboxnotealso" id="GUID-077AAE24-54CF-4102-9969-9540608FFB65__GUID-F6566B30-5807-4128-9746-4F5A727A4FC8">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="xstrm_xout_cncpt.htm#GUID-3311DD1F-5186-4F94-B471-B0557D4AB2D2" title="An XStream Out outbound server streams LCRs that were captured by a capture process to a client application. The position of an LCR identifies its placement in the stream of LCRs in a transaction.">Position of LCRs and XStream Out</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="xstrm_xin_cncpt.htm#GUID-25617A91-D3E3-4848-9B28-90F5C00743C9" title="A client application streams LCRs to an XStream In inbound server.">Position of LCRs and XStream In</a>&#34;</span></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="XSTRM72743"></a>
<div class="props_rev_3"><a id="GUID-41229989-0893-4463-8063-3FD28D94A233"></a>
<h2 id="XSTRM-GUID-41229989-0893-4463-8063-3FD28D94A233" class="sect2"><span class="enumeration_section">2.2</span> Rules and Rule Sets</h2>
<div>
<p>XStream uses rules and rule sets.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-DFB8B7E0-3E11-48FB-9BCE-98318783B97F">Rules and Rule Sets Defined</a></strong><br/>
A rule is a database object that enables a client to perform an action when an event occurs and a condition is satisfied. In an XStream configuration, rules identify which LCRs to stream from one component to another.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-8847480A-3192-4C6C-8921-02613057D9E0">Rule Sets and XStream Components</a></strong><br/>
An XStream component performs its task if a database change satisfies its rule sets.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-28CD3409-FB62-4234-88E6-D75FE4F6CEED">System-Created Rules and XStream</a></strong><br/>
An XStream component performs its task for an LCR if the LCR satisfies its rule sets. A system-created rule is created by the <code class="codeph">DBMS_XSTREAM_ADM</code> package.</li>
</ul>
<div class="infoboxnotealso" id="GUID-41229989-0893-4463-8063-3FD28D94A233__GUID-2621BFAA-6BD1-4C16-8FDA-6D2F4D257C66">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="xstrm_xout_man.htm#GUID-6686416C-EA96-4C52-9ED8-58EF80432443" title="You can manage the rules for an XStream Out configuration. Rules control which database changes are streamed to the outbound server and which database changes the outbound server streams to the client application.">Managing Rules for an XStream Out Configuration</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="xstrm_xout_mon.htm#GUID-43BB638F-5263-41E8-ADD0-6927C24E16A8" title="A sample query illustrates how to monitor XStream rules.">Monitoring XStream Rules</a>&#34;</span></p>
</li>
</ul>
</div>
</div>
<a id="XSTRM72744"></a>
<div class="props_rev_3"><a id="GUID-DFB8B7E0-3E11-48FB-9BCE-98318783B97F"></a>
<h3 id="XSTRM-GUID-DFB8B7E0-3E11-48FB-9BCE-98318783B97F" class="sect3"><span class="enumeration_section">2.2.1</span> Rules and Rule Sets Defined</h3>
<div>
<p>A rule is a database object that enables a client to perform an action when an event occurs and a condition is satisfied. In an XStream configuration, rules identify which LCRs to stream from one component to another.</p>
<p>Capture processes, propagations, outbound servers and inbound servers can use rules. You can configure rules for each XStream component independently, and the rules for different XStream components do not need to match.</p>
<p>A rule set is a collection of rules. The behavior of each XStream component is determined by the rules in the rule sets that are associated with it. You can associate a positive rule set and a negative rule set with each XStream component.</p>
<p>In addition, a single rule pertains to either the results of data manipulation language (DML) changes or data definition language (DDL) changes. So, for example, you must use at least two rules to include all of the changes to a particular table: one rule for the results of DML changes and another rule for DDL changes.</p>
<p>The results of a DML change are row changes, and an LCR that encapsulates a row change is called a row LCR. A single DML change can result in multiple row changes. Therefore, a single DML change can result in multiple row LCRs. An LCR that encapsulates a DDL change is called a DDL LCR.</p>
</div>
</div>
<a id="XSTRM72745"></a>
<div class="props_rev_3"><a id="GUID-8847480A-3192-4C6C-8921-02613057D9E0"></a>
<h3 id="XSTRM-GUID-8847480A-3192-4C6C-8921-02613057D9E0" class="sect3"><span class="enumeration_section">2.2.2</span> Rule Sets and XStream Components</h3>
<div>
<p>An XStream component performs its task if a database change satisfies its rule sets.</p>
<p>In general, a change satisfies the rule sets when <span class="italic">no rules</span> in the negative rule set evaluate to <code class="codeph">TRUE</code> for the change and <span class="italic">at least one rule</span> in the positive rule set evaluates to <code class="codeph">TRUE</code> for the change. The negative rule set is always evaluated first.</p>
<p>You use rule sets in an XStream configuration to specify the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Changes that a capture process captures from the redo log or discards. If a change found in the redo log satisfies the rule sets for a capture process, then the capture process captures the change. If a change found in the redo log does not satisfy the rule sets for a capture process, then the capture process discards the change.</p>
<p>In XStream Out configurations that share one capture process among several outbound servers, the rules for the capture process must pass the LCRs that are needed by any of the outbound servers that share the capture process.</p>
</li>
<li>
<p>The LCRs that a propagation sends from one queue to another or discards. If an LCR in a queue satisfies the rule sets for a propagation, then the propagation sends the LCR. If an LCR in a queue does not satisfy the rule sets for a propagation, then the propagation discards the LCR.</p>
</li>
<li>
<p>The LCRs that an outbound server sends to an XStream client application or discards. If an LCR satisfies the rule sets for an outbound server, then the outbound server sends the LCR to the XStream client application. If an LCR does not satisfy the rule sets for an outbound server, then the outbound server discards the LCR.</p>
</li>
<li>
<p>The LCRs that an inbound server applies or discards. If an LCR satisfies the rule sets for an inbound server, then the inbound server applies the LCR. If an LCR in not satisfy the rule sets for an inbound server, then the inbound server discards the LCR.</p>
</li>
</ul>
<p>When an XStream component has no rule sets, the component performs its task for all database changes. For example, if an inbound server has no rule sets, then it applies all of the LCRs sent to it by an XStream client application.</p>
</div>
</div>
<a id="XSTRM72746"></a>
<div class="props_rev_3"><a id="GUID-28CD3409-FB62-4234-88E6-D75FE4F6CEED"></a>
<h3 id="XSTRM-GUID-28CD3409-FB62-4234-88E6-D75FE4F6CEED" class="sect3"><span class="enumeration_section">2.2.3</span> System-Created Rules and XStream</h3>
<div>
<p>An XStream component performs its task for an LCR if the LCR satisfies its rule sets. A system-created rule is created by the <code class="codeph">DBMS_XSTREAM_ADM</code> package.</p>
<p>A system-created rule can specify one of the following levels of granularity: table, schema, or global.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-7D17FB89-2D4B-46D0-945A-36F9B57B4DD4">XStream System-Created Rule Procedures</a></strong><br/>
Several PL/SQL procedures in the <code class="codeph">DBMS_XSTREAM_ADM</code> package can create system-generated rules.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-36DAA74B-9B11-4E3C-AEF7-F32B2F5E8F23">Global Rules</a></strong><br/>
When you use a rule to specify a task that is relevant to an entire database, you are specifying a global rule.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-8618D644-3C82-4791-B89E-8C234A6AEF01">Schema Rules</a></strong><br/>
When you use a rule to specify a task that is relevant to a schema, you are specifying a schema rule.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-DAFCA543-2013-4C18-BA09-026AC1D90B40">Table Rules</a></strong><br/>
When you use a rule to specify a task that is relevant to a table, you are specifying a table rule.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-BFC30D8A-A50A-410E-BC28-646BB4A89769">Subset Rules</a></strong><br/>
A subset rule is a special type of table rule for DML changes that is relevant only to a subset of the rows in a table.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-CBD258F9-D53D-4DA8-98CE-D87232D06655">System-Created Rules and a Multitenant Environment</a></strong><br/>
A multitenant environment enables an Oracle database to contain a portable set of schemas, objects, and related structures that appears logically to an application as a separate database. This self-contained collection is called a pluggable database (PDB). A CDB contains PDBs.</li>
</ul>
<div class="infoboxnotealso" id="GUID-28CD3409-FB62-4234-88E6-D75FE4F6CEED__GUID-E81364ED-4419-47E1-A9D3-B5A02DABE979">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="xstrm_xout_man.htm#GUID-6686416C-EA96-4C52-9ED8-58EF80432443" title="You can manage the rules for an XStream Out configuration. Rules control which database changes are streamed to the outbound server and which database changes the outbound server streams to the client application.">Managing Rules for an XStream Out Configuration</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="xstrm_xout_mon.htm#GUID-43BB638F-5263-41E8-ADD0-6927C24E16A8" title="A sample query illustrates how to monitor XStream rules.">Monitoring XStream Rules</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ARPLS73643" target="_blank" href="../ARPLS/d_xstrm_adm.htm#ARPLS73643"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a></p>
</li>
</ul>
</div>
</div>
<a id="XSTRM72987"></a><a id="XSTRM72986"></a>
<div class="props_rev_3"><a id="GUID-7D17FB89-2D4B-46D0-945A-36F9B57B4DD4"></a>
<h4 id="XSTRM-GUID-7D17FB89-2D4B-46D0-945A-36F9B57B4DD4" class="sect4"><span class="enumeration_section">2.2.3.1</span> XStream System-Created Rule Procedures</h4>
<div>
<p>Several PL/SQL procedures in the <code class="codeph">DBMS_XSTREAM_ADM</code> package can create system-generated rules.</p>
<p>There are three types of procedures that create system-created rules:</p>
<ul style="list-style-type: disc;">
<li>
<p>Procedures that create or alter an outbound server and the rules for the outbound server</p>
<p>These procedures include <code class="codeph">CREATE_OUTBOUND</code>, <code class="codeph">ADD_OUTBOUND</code>, and <code class="codeph">ALTER_OUTBOUND</code>. These procedures make it easy to configure XStream Out quickly. If they meet your needs, then you should use these procedures to simplify XStream Out configuration. The <code class="codeph">CREATE_OUTBOUND</code> procedure creates the queue and capture process used by the outbound server in addition to the outbound server.</p>
</li>
<li>
<p>Procedures that create a propagation or add rules to an existing propagation</p>
<p>These procedures include the <code class="codeph">ADD_*_PROPAGATION_RULES</code> procedures. If the specified propagation does not exist, then these procedures create the propagation and add rules to the propagation&#39;s rule sets. If the specified propagation exists, then these procedures add rules to the existing propagation&#39;s rule sets.</p>
</li>
<li>
<p>Procedures that add rules to an existing XStream component, such as a capture process, outbound server, or inbound server</p>
<p>These procedures include the <code class="codeph">ADD_*_RULES</code> procedures. These procedure provide more flexibility and fine-grained control over the system-created rules. You should use these procedures when necessary to add rules to your XStream configuration.</p>
</li>
</ul>
<p>The following table describes which procedures can create rules for which XStream components.</p>
<div class="tblformalwide" id="GUID-7D17FB89-2D4B-46D0-945A-36F9B57B4DD4__BABIIHHI">
<p class="titleintable">Table 2-6 XStream System-Created Rule Procedures</p>
<table class="cellalignment5169" title="XStream System-Created Rule Procedures" summary="This tables lists each procedure and shows whether it can create rules for a capture process, propagation, outbound server, or inbound server.">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5174" id="d4802e2195">Procedure</th>
<th class="cellalignment5175" id="d4802e2198">Capture Process</th>
<th class="cellalignment5175" id="d4802e2201">Propagation</th>
<th class="cellalignment5175" id="d4802e2204">Outbound Server</th>
<th class="cellalignment5175" id="d4802e2207">Inbound Server</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2212" headers="d4802e2195">
<p><code class="codeph">CREATE_OUTBOUND</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2212 d4802e2198">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2212 d4802e2201">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2212 d4802e2204">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2212 d4802e2207">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2229" headers="d4802e2195">
<p><code class="codeph">ADD_OUTBOUND</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2229 d4802e2198">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2229 d4802e2201">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2229 d4802e2204">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2229 d4802e2207">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2246" headers="d4802e2195">
<p><code class="codeph">ALTER_OUTBOUND</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2246 d4802e2198">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2246 d4802e2201">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2246 d4802e2204">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2246 d4802e2207">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2263" headers="d4802e2195">
<p><code class="codeph">ADD_GLOBAL_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2263 d4802e2198">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2263 d4802e2201">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2263 d4802e2204">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2263 d4802e2207">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2280" headers="d4802e2195">
<p><code class="codeph">ADD_GLOBAL_PROPAGATION_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2280 d4802e2198">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2280 d4802e2201">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2280 d4802e2204">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2280 d4802e2207">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2297" headers="d4802e2195">
<p><code class="codeph">ADD_SCHEMA_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2297 d4802e2198">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2297 d4802e2201">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2297 d4802e2204">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2297 d4802e2207">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2314" headers="d4802e2195">
<p><code class="codeph">ADD_SCHEMA_PROPAGATION_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2314 d4802e2198">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2314 d4802e2201">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2314 d4802e2204">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2314 d4802e2207">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2331" headers="d4802e2195">
<p><code class="codeph">ADD_GLOBAL_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2331 d4802e2198">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2331 d4802e2201">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2331 d4802e2204">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2331 d4802e2207">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2348" headers="d4802e2195">
<p><code class="codeph">ADD_SUBSET_OUTBOUND_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2348 d4802e2198">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2348 d4802e2201">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2348 d4802e2204">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2348 d4802e2207">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2365" headers="d4802e2195">
<p><code class="codeph">ADD_SUBSET_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2365 d4802e2198">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2365 d4802e2201">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2365 d4802e2204">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2365 d4802e2207">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2382" headers="d4802e2195">
<p><code class="codeph">ADD_SUBSET_PROPAGATION_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2382 d4802e2198">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2382 d4802e2201">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2382 d4802e2204">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2382 d4802e2207">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2400" headers="d4802e2195">
<p><code class="codeph">ADD_TABLE_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2400 d4802e2198">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2400 d4802e2201">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2400 d4802e2204">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2400 d4802e2207">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e2417" headers="d4802e2195">
<p><code class="codeph">ADD_TABLE_PROPAGATION_RULES</code></p>
</td>
<td class="cellalignment5177" headers="d4802e2417 d4802e2198">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2417 d4802e2201">
<p>Yes</p>
</td>
<td class="cellalignment5177" headers="d4802e2417 d4802e2204">
<p>No</p>
</td>
<td class="cellalignment5177" headers="d4802e2417 d4802e2207">
<p>No</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso" id="GUID-7D17FB89-2D4B-46D0-945A-36F9B57B4DD4__GUID-46D3C0F0-EC18-4934-AE18-F0AF3397113F">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS73643" target="_blank" href="../ARPLS/d_xstrm_adm.htm#ARPLS73643"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> for detailed information about these procedures</p>
</div>
</div>
</div>
<a id="XSTRM72747"></a>
<div class="props_rev_3"><a id="GUID-36DAA74B-9B11-4E3C-AEF7-F32B2F5E8F23"></a>
<h4 id="XSTRM-GUID-36DAA74B-9B11-4E3C-AEF7-F32B2F5E8F23" class="sect4"><span class="enumeration_section">2.2.3.2</span> Global Rules</h4>
<div>
<p>When you use a rule to specify a task that is relevant to an entire database, you are specifying a global rule.</p>
<p>You can specify a global rule for DML changes, a global rule for DDL changes, or a global rule for each type of change (two rules total).</p>
<p>A single global rule in the positive rule set for a capture process means that the capture process captures the results of either all DML changes or all DDL changes to the source database. A single global rule in the negative rule set for a capture process means that the capture process discards the results of either all DML changes or all DDL changes to the source database.</p>
<p>A single global rule in the positive rule set for a propagation means that the propagation rule controls the set of LCRs that are applicable to a specific outbound server. If a single capture services multiple outbound servers, the set of changes distributed to each outbound server is controlled by the propagation rules (the capture rules are the superset of all changes). A single global rule in the negative rule set for a propagation means that the propagation discards either all row LCRs or all DDL LCRs from the capture process.</p>
<p>A single global rule in the positive rule set for an outbound server means that the outbound server sends either all row LCRs or all DDL LCRs that it receives to an XStream client application. A single global rule in the negative rule set for an outbound server means that the outbound server discards either all row LCRs or all DDL LCRs that it receives.</p>
<p>A single global rule in the positive rule set for an inbound server means that the inbound server applies either all row LCRs or all DDL LCRs sent to it by the XStream client application. A single global rule in the negative rule set for an inbound server means that the inbound server discards either all row LCRs or all DDL LCRs sent to it by the XStream client application.</p>
<p>When an inbound server should apply all of the LCRs it receives from its client application, you can configure the inbound server with no rule sets instead of using global rules. Also, for an inbound server to perform best, it should not receive LCRs that it should not apply.</p>
<p>To specify global rules for an outbound server, use the <code class="codeph">ALTER_OUTBOUND</code> procedure or, for specifying a greater level of detail, the <code class="codeph">ADD_GLOBAL_RULES</code> procedure in the <code class="codeph">DBMS_XSTREAM_ADM</code> package.</p>
<p>To specify global rules for an inbound server, use the <code class="codeph">ALTER_INBOUND</code> procedure or, for specifying a greater level of detail, the <code class="codeph">ADD_GLOBAL_RULES</code> procedure in the <code class="codeph">DBMS_XSTREAM_ADM</code> package.</p>
<div class="infoboxnotealso" id="GUID-36DAA74B-9B11-4E3C-AEF7-F32B2F5E8F23__GUID-6439956A-E3D3-4F78-A34D-E3A3902CD819">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="xstrm_xout_man.htm#GUID-6686416C-EA96-4C52-9ED8-58EF80432443" title="You can manage the rules for an XStream Out configuration. Rules control which database changes are streamed to the outbound server and which database changes the outbound server streams to the client application.">Managing Rules for an XStream Out Configuration</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="xstrm_xout_mon.htm#GUID-43BB638F-5263-41E8-ADD0-6927C24E16A8" title="A sample query illustrates how to monitor XStream rules.">Monitoring XStream Rules</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ARPLS70194" target="_blank" href="../ARPLS/d_xstrm_adm.htm#ARPLS70194"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM72748"></a>
<div class="props_rev_3"><a id="GUID-8618D644-3C82-4791-B89E-8C234A6AEF01"></a>
<h4 id="XSTRM-GUID-8618D644-3C82-4791-B89E-8C234A6AEF01" class="sect4"><span class="enumeration_section">2.2.3.3</span> Schema Rules</h4>
<div>
<p>When you use a rule to specify a task that is relevant to a schema, you are specifying a schema rule.</p>
<p>You can specify a schema rule for DML changes, a schema rule for DDL changes, or a schema rule for each type of change to the schema (two rules total).</p>
<p>A single schema rule in the positive rule set for a capture process means that the capture process captures either the DML changes or the DDL changes to the schema. A single schema rule in the negative rule set for a capture process means that the capture process discards either the DML changes or the DDL changes to the schema.</p>
<p>A single schema rule in the positive rule set for a propagation means that the propagation propagates either the row LCRs or the DDL LCRs in the source queue that contain changes to the schema. A single schema rule in the negative rule set for a propagation means that the propagation discards either the row LCRs or the DDL LCRs in the source queue that contain changes to the schema.</p>
<p>A single schema rule in the positive rule set for an outbound server means that the outbound server sends either the row LCRs or the DDL LCRs that it receives that contain changes to the schema to an XStream client application. A single schema rule in the negative rule set for an outbound server means that the outbound server discards either the row LCRs or the DDL LCRs that it receives that contain changes to the schema.</p>
<p>A single schema rule in the positive rule set for an inbound server means that the inbound server applies either the row LCRs or the DDL LCRs that it receives from an XStream client application that contain changes to the schema. A single schema rule in the negative rule set for an inbound server means that the inbound server discards either the row LCRs or the DDL LCRs that it receives from an XStream client application that contain changes to the schema.</p>
<p>To specify schema rules for either an outbound server or an inbound server, use the <code class="codeph">ALTER_OUTBOUND</code> procedure or the <code class="codeph">ADD_SCHEMA_RULES</code> procedure in the <code class="codeph">DBMS_XSTREAM_ADM</code> package.</p>
<div class="infoboxnotealso" id="GUID-8618D644-3C82-4791-B89E-8C234A6AEF01__GUID-C4822C60-73DD-4B3B-885D-CC0F3AED46B1">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="xstrm_xout_man.htm#GUID-6686416C-EA96-4C52-9ED8-58EF80432443" title="You can manage the rules for an XStream Out configuration. Rules control which database changes are streamed to the outbound server and which database changes the outbound server streams to the client application.">Managing Rules for an XStream Out Configuration</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="xstrm_xout_mon.htm#GUID-43BB638F-5263-41E8-ADD0-6927C24E16A8" title="A sample query illustrates how to monitor XStream rules.">Monitoring XStream Rules</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ARPLS70194" target="_blank" href="../ARPLS/d_xstrm_adm.htm#ARPLS70194"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM72749"></a>
<div class="props_rev_3"><a id="GUID-DAFCA543-2013-4C18-BA09-026AC1D90B40"></a>
<h4 id="XSTRM-GUID-DAFCA543-2013-4C18-BA09-026AC1D90B40" class="sect4"><span class="enumeration_section">2.2.3.4</span> Table Rules</h4>
<div>
<p>When you use a rule to specify a task that is relevant to a table, you are specifying a table rule.</p>
<p>You can specify a table rule for DML changes, a table rule for DDL changes, or a table rule for each type of change to the table (two rules total).</p>
<p>A single table rule in the positive rule set for a capture process means that the capture process captures either the DML changes or the DDL changes to the table. A single table rule in the negative rule set for a capture process means that the capture process discards either the DML changes or the DDL changes to the table.</p>
<p>A single table rule in the positive rule set for a propagation means that the propagation propagates either the row LCRs or the DDL LCRs in the source queue that contain changes to the table. A single table rule in the negative rule set for a propagation means that the propagation discards either the row LCRs or the DDL LCRs in the source queue that contain changes to the table.</p>
<p>A single table rule in the positive rule set for an outbound server means that the outbound server sends either the row LCRs or the DDL LCRs that it receives that contain changes to the table to an XStream client application. A single table rule in the negative rule set for an outbound server means that the outbound server discards either the row LCRs or the DDL LCRs that it receives that contain changes to the table.</p>
<p>A single table rule in the positive rule set for an inbound server means that the inbound server applies either the row LCRs or the DDL LCRs that it receives from an XStream client application that contain changes to the table. A single table rule in the negative rule set for an inbound server means that the inbound server discards either the row LCRs or the DDL LCRs that it receives from an XStream client application that contain changes to the table.</p>
<p>To specify table rules for an outbound server or inbound server, use either the <code class="codeph">ALTER_OUTBOUND</code> procedure or <code class="codeph">ADD_TABLE_RULES</code> in the <code class="codeph">DBMS_XSTREAM_ADM</code> package.</p>
</div>
</div>
<a id="XSTRM72750"></a>
<div class="props_rev_3"><a id="GUID-BFC30D8A-A50A-410E-BC28-646BB4A89769"></a>
<h4 id="XSTRM-GUID-BFC30D8A-A50A-410E-BC28-646BB4A89769" class="sect4"><span class="enumeration_section">2.2.3.5</span> Subset Rules</h4>
<div>
<p>A subset rule is a special type of table rule for DML changes that is relevant only to a subset of the rows in a table.</p>
<p>When you create a subset rule, you use a condition similar to a <code class="codeph">WHERE</code> clause in a <code class="codeph">SELECT</code> statement to specify the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>That a capture process only captures a subset of the row changes resulting from DML changes to a particular table</p>
</li>
<li>
<p>That a propagation only propagates a subset of the row LCRs relating to a particular table</p>
</li>
<li>
<p>That an outbound server only sends a subset of the row LCRs relating to a particular table to an XStream client application</p>
</li>
<li>
<p>That an inbound server only applies a subset of the row LCRs relating to a particular table</p>
</li>
</ul>
<p>Supplemental logging is required when you specify the following types of subset rules:</p>
<ul style="list-style-type: disc;">
<li>
<p>Subset rules for a capture process</p>
</li>
<li>
<p>Subset rules for a propagation that will propagate LCRs captured by a capture process</p>
</li>
<li>
<p>Subset rules for an outbound server that will send LCRs captured by a capture process to an XStream client application</p>
</li>
</ul>
<p>In any of these cases, an unconditional supplemental log group must be specified at the source database for all the columns in the subset condition. In some cases, when a subset rule is specified, an update can be converted to an insert, and, in these cases, supplemental information might be needed for some or all of the columns.</p>
<p>To specify subset rules for an outbound server, use the <code class="codeph">ADD_SUBSET_OUTBOUND_RULES</code>, <code class="codeph">ADD_SUBSET_RULES,</code> or the <code class="codeph">REMOVE_SUBSET_OUTBOUND_RULES</code> procedures in the <code class="codeph">DBMS_XSTREAM_ADM</code> package.</p>
<div class="infoboxnotealso" id="GUID-BFC30D8A-A50A-410E-BC28-646BB4A89769__GUID-2CD8396C-EA37-4042-87D4-064143588F6C">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="xstrm_xout_config.htm#GUID-56F322CB-1598-4FC8-92D9-A14CD4F7971B" title="When you use a capture process to capture changes, supplemental logging must be specified for certain columns at a source database for changes to the columns to be applied successfully at a destination database.">If Required, Configure Supplemental Logging</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="xstrm_xout_man.htm#GUID-BB8EB4D9-95BE-4B7B-86AB-4DE6208550DF" title="You can add subset rules to an outbound server&#39;s positive rule set using the ADD_SUBSET_OUTBOUND_RULES procedure in the DBMS_XSTREAM_ADM package.">Adding Subset Rules to an Outbound Server&#39;s Positive Rule Set</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="xstrm_xout_man.htm#GUID-CBF4B027-816E-407C-98E3-5F57AB33E82C" title="You can remove subset rules from an outbound server&#39;s positive rule set using the REMOVE_SUBSET_OUTBOUND_RULES procedure in the DBMS_XSTREAM_ADM package.">Removing Subset Rules from an Outbound Server&#39;s Positive Rule Set</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="xstrm_xout_mon.htm#GUID-43BB638F-5263-41E8-ADD0-6927C24E16A8" title="A sample query illustrates how to monitor XStream rules.">Monitoring XStream Rules</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ARPLS70190" target="_blank" href="../ARPLS/d_xstrm_adm.htm#ARPLS70190"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM72988"></a>
<div class="props_rev_3"><a id="GUID-CBD258F9-D53D-4DA8-98CE-D87232D06655"></a>
<h4 id="XSTRM-GUID-CBD258F9-D53D-4DA8-98CE-D87232D06655" class="sect4"><span class="enumeration_section">2.2.3.6</span> System-Created Rules and a Multitenant Environment</h4>
<div>
<p>A multitenant environment enables an Oracle database to contain a portable set of schemas, objects, and related structures that appears logically to an application as a separate database. This self-contained collection is called a pluggable database (PDB). A CDB contains PDBs.</p>
<p>This section assumes that you understand multitenant architecture concepts. See <a class="olink CNCPT89233" target="_blank" href="../CNCPT/part_consol.htm#CNCPT89233"><span><cite>Oracle Database Concepts</cite></span></a> for information.</p>
<p>In a CDB, LCRs can contain the global name of the container where the change originated in the <code class="codeph">source_database_name</code> attribute and the global name of the root in the <code class="codeph">root_name</code> attribute. The rules for XStream components can consider these attributes.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-60589C03-2095-42AA-8F2F-AFD83B110F31">System-Created Rules in a CDB and XStream Out</a></strong><br/>
In a CDB, XStream Out must be configured in the root. Therefore, the PL/SQL procedures in the <code class="codeph">DBMS_XSTREAM_ADM</code> package that create system-created rules must be run in the root while connected as a common user.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-8B64C3F0-2EB0-495B-BB29-A08F1A1CD7C9">System-Created Rules in a CDB and XStream In</a></strong><br/>
You can configure XStream In in the root or in any PDB in a CDB.</li>
</ul>
</div>
<a id="XSTRM73030"></a><a id="XSTRM73031"></a><a id="XSTRM73032"></a><a id="XSTRM72989"></a>
<div class="props_rev_3"><a id="GUID-60589C03-2095-42AA-8F2F-AFD83B110F31"></a>
<h5 id="XSTRM-GUID-60589C03-2095-42AA-8F2F-AFD83B110F31" class="sect5"><span class="enumeration_section">2.2.3.6.1</span> System-Created Rules in a CDB and XStream Out</h5>
<div>
<p>In a CDB, XStream Out must be configured in the root. Therefore, the PL/SQL procedures in the <code class="codeph">DBMS_XSTREAM_ADM</code> package that create system-created rules must be run in the root while connected as a common user.</p>
<p>Excluding the procedures that create rules for propagations, the procedures that create system-created rules for XStream Out, such as the <code class="codeph">ADD_GLOBAL_RULES</code> procedure, include the following key parameters:</p>
<div class="tblformal" id="GUID-60589C03-2095-42AA-8F2F-AFD83B110F31__GUID-F2B0932E-2D66-4652-A805-A570A10E53C4">
<p class="titleintable">Table 2-7 Key Procedure Parameters for System-Created Rules in a CDB</p>
<table class="cellalignment5158" title="Key Procedure Parameters for System-Created Rules in a CDB" summary="This table describes the parameters for system-created rules in a CDB.">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5174" id="d4802e3130">Parameter</th>
<th class="cellalignment5178" id="d4802e3133">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e3138" headers="d4802e3130">
<p><code class="codeph">source_database</code></p>
</td>
<td class="cellalignment5179" headers="d4802e3138 d4802e3133">
<p>The global name of the source database. In a CDB, specify the global name of the container to which the rules pertain. The container can be the root or a PDB. For example, <code class="codeph">mycdb.example.com</code> or <code class="codeph">hrpdb.example.com</code>.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e3152" headers="d4802e3130">
<p><code class="codeph">source_root_name</code></p>
</td>
<td class="cellalignment5179" headers="d4802e3152 d4802e3133">
<p>The global name of the root in the source CDB. For example, <code class="codeph">mycdb.example.com</code>.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5176" id="d4802e3163" headers="d4802e3130">
<p><code class="codeph">source_container_name</code></p>
</td>
<td class="cellalignment5179" headers="d4802e3163 d4802e3133">
<p>The short name of the source container. The container can be the root or a PDB. For example, <code class="codeph">CDB$ROOT</code> or <code class="codeph">hrpdb</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>If you do not include the domain name when you specify <code class="codeph">source_database</code> or <code class="codeph">source_root_name</code>, then the procedure appends it to the name automatically. For example, if you specify <code class="codeph">DBS1</code> and the domain is <code class="codeph">.EXAMPLE.COM</code>, then the procedure specifies <code class="codeph">DBS1.EXAMPLE.COM</code> automatically.</p>
<p>The combination of these parameters determines which containers&#39; changes XStream Out captures and streams to the client application, based on the rules generated by the procedures. Regardless of the settings for these parameters, system-generated rules can still limit the changes captured and streamed to specific schemas and tables.</p>
<p>Local capture means that a capture process runs on the source CDB. In a local capture configuration, the <code class="codeph">source_root_name</code> parameter specifies the global name of the root in the local CDB. If this parameter is <code class="codeph">NULL</code>, then the global name of the root in the local CDB is specified automatically. The resulting rules include a condition for the global name of the root in the current CDB.</p>
<p>Downstream capture means that a capture process runs on a CDB other than the source CDB. In a downstream capture configuration, the <code class="codeph">source_root_name</code> parameter must be non-<code class="codeph">NULL</code>, and it must specify the global name of the root in the remote source CDB. The resulting rules include a condition for the global name of the root in the remote CDB. If this parameter is <code class="codeph">NULL</code>, then local capture is assumed.</p>
<p>The following table describes the rule conditions for various <code class="codeph">source_database</code> and <code class="codeph">source_container_name</code> parameter settings in a local capture configuration.</p>
<div class="tblformal" id="GUID-60589C03-2095-42AA-8F2F-AFD83B110F31__BABFDIDE">
<p class="titleintable">Table 2-8 Local Capture and XStream Out Container Rule Conditions</p>
<table class="cellalignment5158" title="Local Capture and XStream Out Container Rule Conditions" summary="This table shows different values of the source_root_name and source_database parameters and describes the resulting rules in a local capture configuration.">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5170" id="d4802e3233">source_database Parameter Setting</th>
<th class="cellalignment5154" id="d4802e3236">source_container_name Parameter Setting</th>
<th class="cellalignment5180" id="d4802e3239">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e3244" headers="d4802e3233">
<p><code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5156" headers="d4802e3244 d4802e3236">
<p><code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5181" headers="d4802e3244 d4802e3239">
<p>XStream Out captures and streams changes made in any container in the local CDB, including the root and all PDBs.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e3256" headers="d4802e3233">
<p>non-<code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5156" headers="d4802e3256 d4802e3236">
<p><code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5181" headers="d4802e3256 d4802e3239">
<p>XStream Out captures and streams changes made in the specified source container of the local CDB. The source container can be the root or a PDB. The <code class="codeph">DBMS_XSTREAM_ADM</code> procedure queries the <code class="codeph">CDB_PDBS</code> view and <code class="codeph">CDB_PROPERTIES</code> view to determine the <code class="codeph">source_container_name</code> value.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e3281" headers="d4802e3233">
<p><code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5156" headers="d4802e3281 d4802e3236">
<p>non-<code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5181" headers="d4802e3281 d4802e3239">
<p>XStream Out captures and streams changes made in the specified source container of the local CDB. The source container can be the root or a PDB. The <code class="codeph">DBMS_XSTREAM_ADM</code> procedure queries the <code class="codeph">CDB_PDBS</code> view and <code class="codeph">CDB_PROPERTIES</code> view to determine the <code class="codeph">source_database</code> value.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e3306" headers="d4802e3233">
<p>non-<code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5156" headers="d4802e3306 d4802e3236">
<p>non-<code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5181" headers="d4802e3306 d4802e3239">
<p>XStream Out captures and streams changes made in the specified source container of the local CDB. The source container can be the root or a PDB.</p>
<p>If the prefix of the <code class="codeph">source_database</code> value is different from the <code class="codeph">source_container_name</code> value, then the resulting rules include a condition for the <code class="codeph">source_database</code> value, and an internal table maps the <code class="codeph">source_database</code> value to the <code class="codeph">source_container_name</code> value.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>The following table describes the rule conditions for various <code class="codeph">source_database</code> and <code class="codeph">source_container_name</code> parameter settings in a downstream capture configuration.</p>
<div class="tblformal" id="GUID-60589C03-2095-42AA-8F2F-AFD83B110F31__BABIDHGF">
<p class="titleintable">Table 2-9 Downstream Capture and XStream Out Container Rule Conditions</p>
<table class="cellalignment5158" title="Downstream Capture and XStream Out Container Rule Conditions" summary="This table shows different values of the source_root_name and source_database parameters and describes the resulting rules in a downstream capture configuration.">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5170" id="d4802e3355">source_database Parameter Setting</th>
<th class="cellalignment5154" id="d4802e3358">source_container_name Parameter Setting</th>
<th class="cellalignment5180" id="d4802e3361">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e3366" headers="d4802e3355">
<p><code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5156" headers="d4802e3366 d4802e3358">
<p><code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5181" headers="d4802e3366 d4802e3361">
<p>XStream Out captures and streams changes made in any container in the remote source CDB, including the root and all PDBs.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e3378" headers="d4802e3355">
<p>non-<code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5156" headers="d4802e3378 d4802e3358">
<p><code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5181" headers="d4802e3378 d4802e3361">
<p>XStream Out captures and streams changes made in the specified source container of the remote source CDB. The source container can be the root or a PDB. The <code class="codeph">DBMS_XSTREAM_ADM</code> procedure derives the <code class="codeph">source_container_name</code> value from the prefix of <code class="codeph">source_database</code> value.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e3400" headers="d4802e3355">
<p><code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5156" headers="d4802e3400 d4802e3358">
<p>non-<code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5181" headers="d4802e3400 d4802e3361">
<p>The <code class="codeph">DBMS_XSTREAM_ADM</code> procedure raises an error.</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5172" id="d4802e3416" headers="d4802e3355">
<p>non-<code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5156" headers="d4802e3416 d4802e3358">
<p>non-<code class="codeph">NULL</code></p>
</td>
<td class="cellalignment5181" headers="d4802e3416 d4802e3361">
<p>XStream Out captures and streams changes made in the specified source container of the remote source CDB. The source container can be the root or a PDB.</p>
<p>If the prefix of the <code class="codeph">source_database</code> value is different from the <code class="codeph">source_container_name</code> value, then the resulting rules include a condition for the <code class="codeph">source_database</code> value, and an internal table maps the <code class="codeph">source_database</code> value to the <code class="codeph">source_container_name</code> value.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso" id="GUID-60589C03-2095-42AA-8F2F-AFD83B110F31__GUID-77BEDD7E-570E-4EF7-A29C-25E5A8EF32DF">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="xstrm_xout_cncpt.htm#GUID-CC32AED8-6587-4CA7-8786-CDF2C4968DB1" title="You can configure a capture process to run locally on a source database or remotely on a downstream database.">Local Capture and Downstream Capture</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ARPLS73643" target="_blank" href="../ARPLS/d_xstrm_adm.htm#ARPLS73643"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM72992"></a>
<div class="props_rev_3"><a id="GUID-8B64C3F0-2EB0-495B-BB29-A08F1A1CD7C9"></a>
<h5 id="XSTRM-GUID-8B64C3F0-2EB0-495B-BB29-A08F1A1CD7C9" class="sect5"><span class="enumeration_section">2.2.3.6.2</span> System-Created Rules in a CDB and XStream In</h5>
<div>
<p>You can configure XStream In in the root or in any PDB in a CDB.</p>
<p>Typically, an inbound server does not use rule sets or rules. Instead, it usually processes all of the LCRs that it receives from its client application. An inbound server can apply changes to the current container only. Therefore, if an inbound server is configured in the root, then it can apply changes only to the root. If an inbound server is configured in a PDB, then it can apply changes only to that PDB.</p>
<div class="infoboxnotealso" id="GUID-8B64C3F0-2EB0-495B-BB29-A08F1A1CD7C9__GUID-3AE057CC-1D54-4F87-BF4A-E9392128440D">
<p class="notep1">See Also:</p>
<p><a class="olink ADMIN13506" target="_blank" href="../ADMIN/part_cdb.htm#ADMIN13506"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a></p>
</div>
</div>
</div>
</div>
</div>
</div>
<a id="XSTRM72751"></a>
<div class="props_rev_3"><a id="GUID-DBE2C046-8206-4AB0-B4D6-2AE0829F9D2F"></a>
<h2 id="XSTRM-GUID-DBE2C046-8206-4AB0-B4D6-2AE0829F9D2F" class="sect2"><span class="enumeration_section">2.3</span> Rule-Based Transformations</h2>
<div>
<p>In XStream, a rule-based transformation is any modification to a logical change record (LCR) when a rule in a positive rule set evaluates to <code class="codeph">TRUE</code>.</p>
<p>In general, it is best for the client application to perform transformations of the data. If this is not possible, then the database can perform some simple transformations on DML LCRs.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-A23C93EA-65A2-42F7-913C-712959E9C41C">Declarative Rule-Based Transformations</a></strong><br/>
Declarative rule-based transformations cover a set of common transformation scenarios for row LCRs.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-BC0BAD8B-B091-4666-ACDD-A1312F833F19">Declarative Rule-Based Transformation Ordering</a></strong><br/>
The order in which different types of rule-based transformations is evaluated is important as results will vary.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-1D00F5BF-6BC9-46F4-9AE8-71C3FF67D323">Evaluating Transformation Ordering</a></strong><br/>
You can evaluate transformation ordering.</li>
</ul>
</div>
<a id="XSTRM72752"></a>
<div class="props_rev_3"><a id="GUID-A23C93EA-65A2-42F7-913C-712959E9C41C"></a>
<h3 id="XSTRM-GUID-A23C93EA-65A2-42F7-913C-712959E9C41C" class="sect3"><span class="enumeration_section">2.3.1</span> Declarative Rule-Based Transformations</h3>
<div>
<p>Declarative rule-based transformations cover a set of common transformation scenarios for row LCRs.</p>
<p>You specify (or declare) such a transformation using one of the following procedures in the <code class="codeph">DBMS_XSTREAM_ADM</code> package:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ADD_COLUMN</code> either adds or removes a declarative transformation that adds a column to a row LCR.</p>
</li>
<li>
<p><code class="codeph">DELETE_COLUMN</code> either adds or removes a declarative transformation that deletes a column from a row LCR.</p>
</li>
<li>
<p><code class="codeph">KEEP_COLUMNS</code> either adds or removes a declarative transformation that keeps a list of columns in a row LCR. The transformation removes columns that are not in the list from the row LCR.</p>
</li>
<li>
<p><code class="codeph">RENAME_COLUMN</code> either adds or removes a declarative transformation that renames a column in a row LCR.</p>
</li>
<li>
<p><code class="codeph">RENAME_SCHEMA</code> either adds or removes a declarative transformation that renames the schema in a row LCR.</p>
</li>
<li>
<p><code class="codeph">RENAME_TABLE</code> either adds or removes a declarative transformation that renames the table in a row LCR.</p>
</li>
</ul>
<p>When you specify a declarative rule-based transformation, you specify the rule that is associated with it. When the specified rule evaluates to <code class="codeph">TRUE</code> for a row LCR, XStream performs the declarative transformation internally on the row LCR, without invoking PL/SQL.</p>
<p>Declarative rule-based transformations provide the following advantages:</p>
<ul style="list-style-type: disc;">
<li>
<p>Performance is improved because the transformations are run internally without using PL/SQL.</p>
</li>
<li>
<p>Complexity is reduced because custom PL/SQL functions are not required.</p>
</li>
</ul>
<p>Declarative rule-based transformations can transform row LCRs only. Therefore, a DML rule must be specified when you run one of the procedures to add a declarative transformation. If a DDL rule is specified, then an error is raised.</p>
</div>
</div>
<a id="XSTRM72754"></a>
<div class="props_rev_3"><a id="GUID-BC0BAD8B-B091-4666-ACDD-A1312F833F19"></a>
<h3 id="XSTRM-GUID-BC0BAD8B-B091-4666-ACDD-A1312F833F19" class="sect3"><span class="enumeration_section">2.3.2</span> Declarative Rule-Based Transformation Ordering</h3>
<div>
<p>The order in which different types of rule-based transformations is evaluated is important as results will vary.</p>
<p>By default, Oracle Database performs declarative transformations in the following order when the rule evaluates to <code class="codeph">TRUE</code>:</p>
<ol>
<li>
<p>Keep columns</p>
</li>
<li>
<p>Delete column</p>
</li>
<li>
<p>Rename column</p>
</li>
<li>
<p>Add column</p>
</li>
<li>
<p>Rename table</p>
</li>
<li>
<p>Rename schema</p>
</li>
</ol>
<p>The results of a declarative transformation are used in each subsequent declarative transformation. For example, suppose the following declarative transformations are specified for a single rule:</p>
<ul style="list-style-type: disc;">
<li>
<p>Delete column address</p>
</li>
<li>
<p>Add column address</p>
</li>
</ul>
<p>Assuming column address exists in a row LCR, both declarative transformations should be performed in this case because the column address is deleted from the row LCR before column address is added back to the row LCR. The following table shows the transformation ordering for this example.</p>
<div class="tblformal" id="GUID-BC0BAD8B-B091-4666-ACDD-A1312F833F19__GUID-75FDF6F1-2B9B-4652-A678-FD7B5046D9E9">
<table class="cellalignment5158" summary="Transformation ordering for delete column transformation and add column transformation">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5182" id="d4802e3869">Step Number</th>
<th class="cellalignment5165" id="d4802e3872">Transformation Type</th>
<th class="cellalignment5183" id="d4802e3875">Transformation Details</th>
<th class="cellalignment5184" id="d4802e3878">Transformation Performed?</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e3883" headers="d4802e3869">
<p>1</p>
</td>
<td class="cellalignment5167" headers="d4802e3883 d4802e3872">
<p>Keep columns</p>
</td>
<td class="cellalignment5186" headers="d4802e3883 d4802e3875">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e3883 d4802e3878">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e3896" headers="d4802e3869">
<p>2</p>
</td>
<td class="cellalignment5167" headers="d4802e3896 d4802e3872">
<p>Delete column</p>
</td>
<td class="cellalignment5186" headers="d4802e3896 d4802e3875">
<p>Delete column <code class="codeph">address</code> from row LCR</p>
</td>
<td class="cellalignment5187" headers="d4802e3896 d4802e3878">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e3912" headers="d4802e3869">
<p>3</p>
</td>
<td class="cellalignment5167" headers="d4802e3912 d4802e3872">
<p>Rename column</p>
</td>
<td class="cellalignment5186" headers="d4802e3912 d4802e3875">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e3912 d4802e3878">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e3925" headers="d4802e3869">
<p>4</p>
</td>
<td class="cellalignment5167" headers="d4802e3925 d4802e3872">
<p>Add column</p>
</td>
<td class="cellalignment5186" headers="d4802e3925 d4802e3875">
<p>Add column <code class="codeph">address</code> to row LCR</p>
</td>
<td class="cellalignment5187" headers="d4802e3925 d4802e3878">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e3941" headers="d4802e3869">
<p>5</p>
</td>
<td class="cellalignment5167" headers="d4802e3941 d4802e3872">
<p>Rename table</p>
</td>
<td class="cellalignment5186" headers="d4802e3941 d4802e3875">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e3941 d4802e3878">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e3954" headers="d4802e3869">
<p>6</p>
</td>
<td class="cellalignment5167" headers="d4802e3954 d4802e3872">
<p>Rename schema</p>
</td>
<td class="cellalignment5186" headers="d4802e3954 d4802e3875">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e3954 d4802e3878">
<p>-</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Another scenario might rename a table and then rename a schema. For example, suppose the following declarative transformations are specified for a single rule:</p>
<ul style="list-style-type: disc;">
<li>
<p>Rename table <code class="codeph">john.customers</code> to <code class="codeph">sue.clients</code></p>
</li>
<li>
<p>Rename schema <code class="codeph">sue</code> to <code class="codeph">mary</code></p>
</li>
</ul>
<p>Notice that the rename table transformation also renames the schema for the table. In this case, both transformations should be performed and, after both transformations, the table name becomes <code class="codeph">mary.clients</code>. The following table shows the transformation ordering for this example.</p>
<div class="tblformal" id="GUID-BC0BAD8B-B091-4666-ACDD-A1312F833F19__GUID-0925D093-69E6-4F16-8565-1FB3238A542B">
<table class="cellalignment5158" summary="Transformation ordering for rename table transformation and rename schema transformation where both transformations are performed">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5182" id="d4802e4000">Step Number</th>
<th class="cellalignment5165" id="d4802e4003">Transformation Type</th>
<th class="cellalignment5183" id="d4802e4006">Transformation Details</th>
<th class="cellalignment5184" id="d4802e4009">Transformation Performed?</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4014" headers="d4802e4000">
<p>1</p>
</td>
<td class="cellalignment5167" headers="d4802e4014 d4802e4003">
<p>Keep columns</p>
</td>
<td class="cellalignment5186" headers="d4802e4014 d4802e4006">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e4014 d4802e4009">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4027" headers="d4802e4000">
<p>2</p>
</td>
<td class="cellalignment5167" headers="d4802e4027 d4802e4003">
<p>Delete column</p>
</td>
<td class="cellalignment5186" headers="d4802e4027 d4802e4006">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e4027 d4802e4009">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4040" headers="d4802e4000">
<p>3</p>
</td>
<td class="cellalignment5167" headers="d4802e4040 d4802e4003">
<p>Rename column</p>
</td>
<td class="cellalignment5186" headers="d4802e4040 d4802e4006">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e4040 d4802e4009">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4053" headers="d4802e4000">
<p>4</p>
</td>
<td class="cellalignment5167" headers="d4802e4053 d4802e4003">
<p>Add column</p>
</td>
<td class="cellalignment5186" headers="d4802e4053 d4802e4006">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e4053 d4802e4009">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4066" headers="d4802e4000">
<p>5</p>
</td>
<td class="cellalignment5167" headers="d4802e4066 d4802e4003">
<p>Rename table</p>
</td>
<td class="cellalignment5186" headers="d4802e4066 d4802e4006">
<p>Rename table <code class="codeph">john.customers</code> to <code class="codeph">sue.clients</code></p>
</td>
<td class="cellalignment5187" headers="d4802e4066 d4802e4009">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4084" headers="d4802e4000">
<p>6</p>
</td>
<td class="cellalignment5167" headers="d4802e4084 d4802e4003">
<p>Rename schema</p>
</td>
<td class="cellalignment5186" headers="d4802e4084 d4802e4006">
<p>Rename schema <code class="codeph">sue</code> to <code class="codeph">mary</code></p>
</td>
<td class="cellalignment5187" headers="d4802e4084 d4802e4009">
<p>Yes</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Consider a similar scenario in which the following declarative transformations are specified for a single rule:</p>
<ul style="list-style-type: disc;">
<li>
<p>Rename table <code class="codeph">john.customers</code> to <code class="codeph">sue.clients</code></p>
</li>
<li>
<p>Rename schema <code class="codeph">john</code> to <code class="codeph">mary</code></p>
</li>
</ul>
<p>In this case, the first transformation is performed, but the second one is not. After the first transformation, the table name is <code class="codeph">sue.clients</code>. The second transformation is not performed because the schema of the table is now <code class="codeph">sue</code>, not <code class="codeph">john</code>. The following table shows the transformation ordering for this example.</p>
<div class="tblformal" id="GUID-BC0BAD8B-B091-4666-ACDD-A1312F833F19__GUID-A95A6D8E-46FD-4E59-8F8E-DD0DCDEC24EB">
<table class="cellalignment5158" summary="Transformation ordering for rename table transformation and rename schema transformation where only the rename table transformation is performed">
<thead>
<tr class="cellalignment5144">
<th class="cellalignment5182" id="d4802e4142">Step Number</th>
<th class="cellalignment5165" id="d4802e4145">Transformation Type</th>
<th class="cellalignment5183" id="d4802e4148">Transformation Details</th>
<th class="cellalignment5184" id="d4802e4151">Transformation Performed?</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4156" headers="d4802e4142">
<p>1</p>
</td>
<td class="cellalignment5167" headers="d4802e4156 d4802e4145">
<p>Keep columns</p>
</td>
<td class="cellalignment5186" headers="d4802e4156 d4802e4148">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e4156 d4802e4151">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4169" headers="d4802e4142">
<p>2</p>
</td>
<td class="cellalignment5167" headers="d4802e4169 d4802e4145">
<p>Delete column</p>
</td>
<td class="cellalignment5186" headers="d4802e4169 d4802e4148">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e4169 d4802e4151">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4182" headers="d4802e4142">
<p>3</p>
</td>
<td class="cellalignment5167" headers="d4802e4182 d4802e4145">
<p>Rename column</p>
</td>
<td class="cellalignment5186" headers="d4802e4182 d4802e4148">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e4182 d4802e4151">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4195" headers="d4802e4142">
<p>4</p>
</td>
<td class="cellalignment5167" headers="d4802e4195 d4802e4145">
<p>Add column</p>
</td>
<td class="cellalignment5186" headers="d4802e4195 d4802e4148">
<p>-</p>
</td>
<td class="cellalignment5187" headers="d4802e4195 d4802e4151">
<p>-</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4208" headers="d4802e4142">
<p>5</p>
</td>
<td class="cellalignment5167" headers="d4802e4208 d4802e4145">
<p>Rename table</p>
</td>
<td class="cellalignment5186" headers="d4802e4208 d4802e4148">
<p>Rename table <code class="codeph">john.customers</code> to <code class="codeph">sue.clients</code></p>
</td>
<td class="cellalignment5187" headers="d4802e4208 d4802e4151">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5144">
<td class="cellalignment5185" id="d4802e4226" headers="d4802e4142">
<p>6</p>
</td>
<td class="cellalignment5167" headers="d4802e4226 d4802e4145">
<p>Rename schema</p>
</td>
<td class="cellalignment5186" headers="d4802e4226 d4802e4148">
<p>Rename schema <code class="codeph">john</code> to <code class="codeph">mary</code></p>
</td>
<td class="cellalignment5187" headers="d4802e4226 d4802e4151">
<p>No</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>The rename schema transformation is not performed, but it does not result in an error. In this case, the row LCR is transformed by the rename table transformation, and a row LCR with the table name <code class="codeph">sue.clients</code> is returned.</p>
</div>
</div>
<a id="XSTRM72946"></a>
<div class="props_rev_3"><a id="GUID-1D00F5BF-6BC9-46F4-9AE8-71C3FF67D323"></a>
<h3 id="XSTRM-GUID-1D00F5BF-6BC9-46F4-9AE8-71C3FF67D323" class="sect3"><span class="enumeration_section">2.3.3</span> Evaluating Transformation Ordering</h3>
<p>You can evaluate transformation ordering.</p>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-40043958-0B64-43DD-9D2A-6A09824B5FC7">Row Migration Transformation Ordering</a></strong><br/>
In addition to declarative rule-based transformations, a row migration is an internal transformation that takes place when a subset rule evaluates to <code class="codeph">TRUE</code>.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-D28D112F-4C39-40F1-BB11-FD2F935DED42">User-Specified Declarative Transformation Ordering</a></strong><br/>
If you do not want to use the default declarative rule-based transformation ordering for a particular rule, then you can specify step numbers for each declarative transformation specified for the rule.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-7FE08419-56D7-408E-8F23-EE14C171371D">Considerations for Rule-Based Transformations</a></strong><br/>
Several considerations apply to declarative rule-based transformations.</li>
</ul>
</div>
<a id="XSTRM72910"></a>
<div class="props_rev_3"><a id="GUID-40043958-0B64-43DD-9D2A-6A09824B5FC7"></a>
<h4 id="XSTRM-GUID-40043958-0B64-43DD-9D2A-6A09824B5FC7" class="sect4"><span class="enumeration_section">2.3.3.1</span> Row Migration Transformation Ordering</h4>
<div>
<p>In addition to declarative rule-based transformations, a row migration is an internal transformation that takes place when a subset rule evaluates to <code class="codeph">TRUE</code>.</p>
<p>You can use the <code class="codeph">DBMS_XSTREAM_ADM.ADD_SUBSET_RULES</code> procedure to add subset rules. If both types of transformations are specified for a single rule, then Oracle Database performs the transformations in the following order when the rule evaluates to <code class="codeph">TRUE</code>:</p>
<ol>
<li>
<p>Row migration</p>
</li>
<li>
<p>Declarative rule-based transformation</p>
</li>
</ol>
</div>
</div>
<a id="XSTRM72756"></a>
<div class="props_rev_3"><a id="GUID-D28D112F-4C39-40F1-BB11-FD2F935DED42"></a>
<h4 id="XSTRM-GUID-D28D112F-4C39-40F1-BB11-FD2F935DED42" class="sect4"><span class="enumeration_section">2.3.3.2</span> User-Specified Declarative Transformation Ordering</h4>
<div>
<p>If you do not want to use the default declarative rule-based transformation ordering for a particular rule, then you can specify step numbers for each declarative transformation specified for the rule.</p>
<p>If you specify a step number for one or more declarative transformations for a particular rule, then the declarative transformations for the rule behave in the following way:</p>
<ul style="list-style-type: disc;">
<li>
<p>Declarative transformations are performed in order of increasing step number.</p>
</li>
<li>
<p>The default step number for a declarative transformation is 0 (zero). A declarative transformation uses this default if no step number is explicitly specified for it.</p>
</li>
<li>
<p>If two or more declarative transformations have the same step number, then these declarative transformations follow the default ordering described in <span class="q">&#34;<a href="xstrm_gen_cncpt.htm#GUID-BC0BAD8B-B091-4666-ACDD-A1312F833F19" title="The order in which different types of rule-based transformations is evaluated is important as results will vary.">Declarative Rule-Based Transformation Ordering</a>&#34;</span>.</p>
</li>
</ul>
<p>For example, you can reverse the default ordering for declarative transformations by specifying the following step numbers for transformations associated with a particular rule:</p>
<ul style="list-style-type: disc;">
<li>
<p>Keep columns with step number 6</p>
</li>
<li>
<p>Delete column with step number 5</p>
</li>
<li>
<p>Rename column with step number 4</p>
</li>
<li>
<p>Add column with step number 3</p>
</li>
<li>
<p>Rename table with step number 2</p>
</li>
<li>
<p>Rename schema with step number 1</p>
</li>
</ul>
<p>With this ordering specified, rename schema transformations are performed first, and delete column transformations are performed last.</p>
</div>
</div>
<a id="XSTRM72757"></a>
<div class="props_rev_3"><a id="GUID-7FE08419-56D7-408E-8F23-EE14C171371D"></a>
<h4 id="XSTRM-GUID-7FE08419-56D7-408E-8F23-EE14C171371D" class="sect4"><span class="enumeration_section">2.3.3.3</span> Considerations for Rule-Based Transformations</h4>
<div>
<p>Several considerations apply to declarative rule-based transformations.</p>
<p>These considerations include the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>For a rule-based transformation to be performed by an XStream component, the rule must be in the positive rule set for the XStream component. If the rule is in the negative rule set for the XStream component, then the XStream component ignores the rule-based transformation.</p>
</li>
<li>
<p>Rule-based transformations are different from transformations performed using the <code class="codeph">DBMS_TRANSFORM</code> package. This document does not discuss transformations performed with the <code class="codeph">DBMS_TRANSFORM</code> package.</p>
</li>
<li>
<p>If a large percentage of row LCRs will be transformed in an XStream In configuration, you can use DML handlers with XStream In. Be aware that this method may not perform as well as making the changes in the XStream In client application. If you are performing multiple or complex transformations on row LCRs in an XStream In configuration, then consider reducing the XStream In processing time by making these modifications in the client application prior to sending the changes to XStream In.</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="XSTRM72463"></a>
<div class="props_rev_3"><a id="GUID-1AFF2DEF-E53A-428F-A75B-110CACBC5088"></a>
<h2 id="XSTRM-GUID-1AFF2DEF-E53A-428F-A75B-110CACBC5088" class="sect2"><span class="enumeration_section">2.4</span> XStream and the Oracle Streams Performance Advisor</h2>
<div>
<p>The Oracle Streams Performance Advisor consists of the <code class="codeph">DBMS_STREAMS_ADVISOR_ADM</code> PL/SQL package and a collection of data dictionary views.</p>
<p>The Performance Advisor enables you to monitor the topology and performance of an XStream environment. The XStream topology includes information about the components in an XStream environment, the links between the components, and the way information flows from capture to consumption. The Performance Advisor also provides information about how Oracle Streams components are performing.</p>
<p>Apply processes function as XStream outbound servers and inbound servers. In general, the Performance Advisor works the same way for an Oracle Streams environment with apply processes and an XStream environment with outbound servers or inbound servers. This section describes important considerations about using the Performance Advisor in an XStream environment.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-FA60ADA7-7968-4F59-92EB-F13ECB7F26A9">XStream Components</a></strong><br/>
The Performance Advisor tracks several XStream components.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-D8598DCF-0877-4EB6-9163-A7AF4B75A97B">Topology and Stream Paths</a></strong><br/>
In the Oracle Streams topology, a stream path is a flow of LCRs from a source to a destination.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-36687F1D-2EEC-438F-8C3F-B1B1270A2C67">XStream and Component-Level Statistics</a></strong><br/>
The Performance Advisor tracks component-level statistics.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-EB6B3592-6653-4CF0-BF20-145071AF6EAA">The UTL_SPADV Package</a></strong><br/>
The <code class="codeph">UTL_SPADV</code> package automates the collection of statistics associated with XStream performance.</li>
</ul>
<div class="infoboxnotealso" id="GUID-1AFF2DEF-E53A-428F-A75B-110CACBC5088__GUID-6A3C897D-26F6-406F-A2A2-3FBC650DE2C5">
<p class="notep1">See Also:</p>
<p><a class="olink STRMS170" target="_blank" href="../STRMS/strms_topology.htm#STRMS170"><span><cite>Oracle Streams Concepts and Administration</cite></span></a> for detailed information about using the Oracle Streams Performance Advisor</p>
</div>
</div>
<a id="XSTRM72464"></a>
<div class="props_rev_3"><a id="GUID-FA60ADA7-7968-4F59-92EB-F13ECB7F26A9"></a>
<h3 id="XSTRM-GUID-FA60ADA7-7968-4F59-92EB-F13ECB7F26A9" class="sect3"><span class="enumeration_section">2.4.1</span> XStream Components</h3>
<div>
<p>The Performance Advisor tracks several XStream components.</p>
<p>The Performance Advisor tracks the following types of components in an XStream environment:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">QUEUE</code></p>
</li>
<li>
<p><code class="codeph">CAPTURE</code></p>
</li>
<li>
<p><code class="codeph">PROPAGATION</code> <code class="codeph">SENDER</code></p>
</li>
<li>
<p><code class="codeph">PROPAGATION</code> <code class="codeph">RECEIVER</code></p>
</li>
<li>
<p><code class="codeph">APPLY</code></p>
</li>
</ul>
<p>The preceding types are the same in an Oracle Streams environment and an XStream environment, except for <code class="codeph">APPLY</code>. The <code class="codeph">APPLY</code> component type can be an XStream outbound server or inbound server.</p>
<p>In addition, the Performance Advisor identifies a bottleneck component as the busiest component or the component with the least amount of idle time. In an XStream configuration, the XStream client application might be the bottleneck when <code class="codeph">EXTERNAL</code> appears in the <code class="codeph">ACTION_NAME</code> column of the <code class="codeph">DBA_STREAMS_TP_PATH_BOTTLENECK</code> view.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-EFD21636-65B9-4BD1-8F74-C99ABC44B9D6">XStream Out Apply Subcomponents</a></strong><br/>
There are several XStream Out apply subcomponents types.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-82AAB582-69FB-4844-8A52-78D95567F479">XStream In Apply Subcomponents</a></strong><br/>
There are several XStream In apply subcomponents types.</li>
</ul>
</div>
<a id="XSTRM72947"></a>
<div class="props_rev_3"><a id="GUID-EFD21636-65B9-4BD1-8F74-C99ABC44B9D6"></a>
<h4 id="XSTRM-GUID-EFD21636-65B9-4BD1-8F74-C99ABC44B9D6" class="sect4"><span class="enumeration_section">2.4.1.1</span> XStream Out Apply Subcomponents</h4>
<div>
<p>There are several XStream Out apply subcomponents types.</p>
<p>The following subcomponent types are possible:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">PROPAGATION</code> <code class="codeph">SENDER+RECEIVER</code> for sending LCRs from a capture process to an outbound server where the capture process and outbound server are in different databases.</p>
</li>
<li>
<p><code class="codeph">APPLY</code> <code class="codeph">READER</code> for a reader server. <code class="codeph">APPLY READER</code> receives LCRs from the capture process, organizes them into transactions, does dependency calculations, and passes the LCRs to the apply coordinator.</p>
</li>
<li>
<p><code class="codeph">APPLY</code> <code class="codeph">COORDINATOR</code> for a coordinator process. It takes the transactions from the capture process, uses the dependency information to determine how to schedule the transactions and sends the LCRs to the apply server.</p>
</li>
<li>
<p><code class="codeph">APPLY</code> <code class="codeph">SERVER</code> for an apply server. It delivers the LCRs to the client application.</p>
</li>
</ul>
</div>
</div>
<a id="XSTRM72948"></a>
<div class="props_rev_3"><a id="GUID-82AAB582-69FB-4844-8A52-78D95567F479"></a>
<h4 id="XSTRM-GUID-82AAB582-69FB-4844-8A52-78D95567F479" class="sect4"><span class="enumeration_section">2.4.1.2</span> XStream In Apply Subcomponents</h4>
<div>
<p>There are several XStream In apply subcomponents types.</p>
<p>The following subcomponent types are possible:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">APPLY</code> <code class="codeph">READER</code> for a reader server. It takes the LCRs from client application converts them into transactions, checks the transactional order and does dependency calculations.</p>
</li>
<li>
<p><code class="codeph">APPLY</code> <code class="codeph">COORDINATOR</code> for a coordinator process. It takes the transactions from the reader server, uses the dependency information to determine how to schedule the transactions and sends the LCRs to the apply server.</p>
</li>
<li>
<p><code class="codeph">APPLY</code> <code class="codeph">SERVER</code> for an apply server. It applies the LCRs to an apply handler. If the LCR cannot be applied, it is placed into an error queue.</p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM72465"></a>
<div class="props_rev_3"><a id="GUID-D8598DCF-0877-4EB6-9163-A7AF4B75A97B"></a>
<h3 id="XSTRM-GUID-D8598DCF-0877-4EB6-9163-A7AF4B75A97B" class="sect3"><span class="enumeration_section">2.4.2</span> Topology and Stream Paths</h3>
<div>
<p>In the Oracle Streams topology, a stream path is a flow of LCRs from a source to a destination.</p>
<p>A stream path begins with a capture process or XStream In client application. A stream path ends where an apply process, outbound server, or inbound server receives the LCRs. The stream path might flow through multiple source and destination components before it reaches an apply process, outbound server, or inbound server. Therefore, a single stream path can consist of multiple source/destination component pairs before it reaches last component.</p>
<p>The Oracle Streams topology only gathers information about a stream path if the stream path ends with an apply process, an outbound server, or an inbound server.</p>
</div>
</div>
<a id="XSTRM72466"></a>
<div class="props_rev_3"><a id="GUID-36687F1D-2EEC-438F-8C3F-B1B1270A2C67"></a>
<h3 id="XSTRM-GUID-36687F1D-2EEC-438F-8C3F-B1B1270A2C67" class="sect3"><span class="enumeration_section">2.4.3</span> XStream and Component-Level Statistics</h3>
<div>
<p>The Performance Advisor tracks component-level statistics.</p>
<p>The Performance Advisor tracks the following component-level statistics:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">MESSAGE</code> <code class="codeph">APPLY</code> <code class="codeph">RATE</code> is the average number of LCRs applied each second by the apply process, outbound server, or inbound server.</p>
</li>
<li>
<p>The <code class="codeph">TRANSACTION</code> <code class="codeph">APPLY</code> <code class="codeph">RATE</code> is the average number of transactions applied by the apply process, outbound server, or inbound server each second. Transactions typically include multiple LCRs.</p>
</li>
</ul>
<p>An LCR can be applied in one of the following ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>An apply process or inbound server makes the change encapsulated in the LCR to a database object.</p>
</li>
<li>
<p>An apply process or inbound server passes the LCR to an apply handler.</p>
</li>
<li>
<p>If the LCR raises an error, then an apply process or inbound server sends the LCR to the error queue.</p>
</li>
<li>
<p>An outbound server passes the LCR to an XStream client application. If the LCR raises an error, then the outbound server also reports the error to the client application.</p>
</li>
</ul>
<p>Also, the Performance Advisor tracks the <code class="codeph">LATENCY</code> component-level statistics. <code class="codeph">LATENCY</code> is defined in the following ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>For apply processes, the <code class="codeph">LATENCY</code> is the amount of time between when the LCR was created at a source database and when the LCR was applied by the apply process at the destination database.</p>
</li>
<li>
<p>For outbound servers, the apply <code class="codeph">LATENCY</code> is amount of time between when the LCR was created at a source database and when the LCR was sent to the XStream client application.</p>
</li>
<li>
<p>For inbound servers, the apply <code class="codeph">LATENCY</code> is amount of time between when the LCR was created by the XStream client application and when the LCR was applied by the apply process.</p>
</li>
</ul>
<p>When a capture process creates an LCR, the message creation time is the time when the redo entry for the database change was recorded. When an XStream client application creates an LCR, the message creation time is the time when the LCR was constructed.</p>
<div class="infoboxnotealso" id="GUID-36687F1D-2EEC-438F-8C3F-B1B1270A2C67__GUID-66ABAFFF-4D07-4D30-81BE-323C66D06695">
<p class="notep1">See Also:</p>
<p><a class="olink STRMS871" target="_blank" href="../STRMS/strms_topology.htm#STRMS871"><span><cite>Oracle Streams Concepts and Administration</cite></span></a> for more information about component-level statistics</p>
</div>
</div>
</div>
<a id="XSTRM72467"></a>
<div class="props_rev_3"><a id="GUID-EB6B3592-6653-4CF0-BF20-145071AF6EAA"></a>
<h3 id="XSTRM-GUID-EB6B3592-6653-4CF0-BF20-145071AF6EAA" class="sect3"><span class="enumeration_section">2.4.4</span> The UTL_SPADV Package</h3>
<div>
<p>The <code class="codeph">UTL_SPADV</code> package automates the collection of statistics associated with XStream performance.</p>
<p><code class="codeph">UTL_SPADV</code> provides a series of subprograms that collect and analyze statistics for the XStream components in a distributed database environment. The package uses the Performance Advisor and the <code class="codeph">COLLECT_STATS</code> procedure to automate the collection of statistics.</p>
<p>The output is formatted so that it can be imported into a spreadsheet easily and analyzed. You can examine XStream performance statistics output with the <code class="codeph">UTL_SPADV.SHOW_STATS</code> procedure or view the same information in an HTML-formatted report with the <code class="codeph">UTL_SPADV.SHOW_STATS_HTML</code> procedure.</p>
<p>The <code class="codeph">UTL_SPADV</code> package works essentially the same way for an Oracle Streams environment with apply processes as it does for an XStream environment with outbound servers or inbound servers. Since XStream is concerned with data changes to or from a client application, the output of the <code class="codeph">SHOW_STATS</code> procedure is different for XStream than for Oracle Streams.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-C37AFF47-1541-4E67-97C6-AD4B0F7BF8EA">Collecting XStream Statistics Using the UTL_SPADV Package</a></strong><br/>
You can collect XStream statistics with the <code class="codeph">UTL_SPADV</code> package.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-17C7AA75-E14B-42E8-9465-8D61B8CB296D">Showing XStream Statistics on the Command Line</a></strong><br/>
The <code class="codeph">SHOW_STATS</code> procedure in the <code class="codeph">UTL_SPADV</code> package displays the statistics that the Performance Advisor gathered and stored.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-064F0CDB-5047-435A-A031-B158C992B59B">Interpreting SHOW_STATS Output</a></strong><br/>
There are differences between the output for apply processes and the output for XStream outbound servers and inbound servers.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-7AA4B077-7867-4C8D-9349-D7C7FB79B21A">Showing XStream Statistics in an HTML Report</a></strong><br/>
The <code class="codeph">SHOW_STATS_HTML</code> procedure in the <code class="codeph">UTL_SPADV</code> package creates an HTML report that contains the statistics that the Performance Advisor gathered and stored.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-CE7F022F-5BA0-41A1-AB71-C57F9C1DEFE9">Interpreting the HTML Report From SHOW_STATS_HTML</a></strong><br/>
The <code class="codeph">SHOW_STATS_HTML</code> procedure in the <code class="codeph">UTL_SPADV</code> package can generate the same output as the <code class="codeph">SHOW_STATS</code> procedure, but it formats the output as HTML in HTML files.</li>
</ul>
</div>
<a id="XSTRM73016"></a>
<div class="props_rev_3"><a id="GUID-C37AFF47-1541-4E67-97C6-AD4B0F7BF8EA"></a>
<h4 id="XSTRM-GUID-C37AFF47-1541-4E67-97C6-AD4B0F7BF8EA" class="sect4"><span class="enumeration_section">2.4.4.1</span> Collecting XStream Statistics Using the UTL_SPADV Package</h4>
<div>
<p>You can collect XStream statistics with the <code class="codeph">UTL_SPADV</code> package.</p>
<div class="section">
<p>To collect XStream statistics using the <code class="codeph">UTL_SPADV</code> package, complete the following steps:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand" id="GUID-C37AFF47-1541-4E67-97C6-AD4B0F7BF8EA__BABCJBFG"><span>Identify the database that you will use to gather the information. An administrative user at this database must meet the following requirements:</span>
<div>
<ul style="list-style-type: disc;">
<li>
<p>If you want to gather XStream statistics for more than one database, the user must have access to a database link to each database that contains XStream components to monitor.</p>
</li>
<li>
<p>The user must have been granted privileges using the <code class="codeph">DBMS_XSTREAM_AUTH.GRANT_ADMIN_PRIVILEGE</code> procedure. If you want to gather XStream statistics for more than one database, each database link must connect to a user at the remote database that has been granted privileges using the <code class="codeph">DBMS_XSTREAM_AUTH.GRANT_ADMIN_PRIVILEGE</code> procedure.</p>
<p>If you configure an XStream administrator at each database with XStream components, then the XStream administrator has the necessary privileges.</p>
</li>
<li>
<p>The user must have the necessary privileges to create tables and procedures. If you want to gather XStream statistics for more than one database, each database link must connect to a user at the remote database that has the necessary privileges to create tables and procedures.</p>
</li>
</ul>
<p>If no database in your environment meets these requirements, then choose a database, configure the necessary database links, and grant the necessary privileges to the users before proceeding.</p>
</div>
</li>
<li class="stepexpand"><span>In SQL*Plus, connect to the database you identified in Step <a href="xstrm_gen_cncpt.htm#GUID-C37AFF47-1541-4E67-97C6-AD4B0F7BF8EA__BABCJBFG">1</a> as a user that meets the requirements listed in Step <a href="xstrm_gen_cncpt.htm#GUID-C37AFF47-1541-4E67-97C6-AD4B0F7BF8EA__BABCJBFG">1</a>.</span>
<div>
<p>See <a class="olink ADMIN00102" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> for information about connecting to a database in SQL*Plus.</p>
</div>
</li>
<li class="stepexpand"><span>Run the <code class="codeph">utlspadv.sql</code> script in the rdbms/admin directory in <code class="codeph">ORACLE_HOME</code> to load the <code class="codeph">UTL_SPADV</code> package. For example:</span>
<div>
<pre dir="ltr">@utlspadv.sql
</pre></div>
</li>
<li class="stepexpand"><span>Either collect the current XStream performance statistics once, or create a job that continually monitors XStream performance:</span>
<div>
<ul style="list-style-type: disc;">
<li>
<p>To collect the current XStream performance statistics once, run the <code class="codeph">COLLECT_STATS</code> procedure:</p>
<pre dir="ltr">exec UTL_SPADV.COLLECT_STATS
</pre>
<p>This example uses the default values for the parameters in the <code class="codeph">COLLECT_STATS</code> procedure. Therefore, this example runs the Performance Advisor 10 times with 60 seconds between each run. These values correspond with the default values for the <code class="codeph">num_runs</code> and <code class="codeph">interval</code> parameters, respectively, in the <code class="codeph">COLLECT_STATS</code> procedure.</p>
</li>
<li>
<p>To create a job that continually monitors XStream performance:</p>
<pre dir="ltr">exec UTL_SPADV.START_MONITORING
</pre>
<p>This example creates a monitoring job, and the monitoring job gathers performance statistics continually at set intervals. This example uses the default values for the parameters in the <code class="codeph">START_MONITORING</code> procedure. Therefore, this example runs the Performance Advisor every 60 seconds. This value corresponds with the default value for the <code class="codeph">interval</code> parameter in the <code class="codeph">START_MONITORING</code> procedure. If an interval is specified in the <code class="codeph">START_MONITORING</code> procedure, then the specified interval is used for the <code class="codeph">interval</code> parameter in the <code class="codeph">COLLECT_STATS</code> procedure.</p>
</li>
</ul>
<p>These procedures include several parameters that you can use to adjust the way performance statistics are gathered. See <a class="olink ARPLS883" target="_blank" href="../ARPLS/u_spadv.htm#ARPLS883"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> for more information.</p>
</div>
</li>
</ol>
<div class="section">
<p>You can show the statistics by running the <code class="codeph">SHOW_STATS</code> procedure. See <span class="q">&#34;<a href="xstrm_gen_cncpt.htm#GUID-17C7AA75-E14B-42E8-9465-8D61B8CB296D" title="The SHOW_STATS procedure in the UTL_SPADV package displays the statistics that the Performance Advisor gathered and stored.">Showing XStream Statistics on the Command Line</a>&#34;</span>.</p>
<div class="infoboxnotealso" id="GUID-C37AFF47-1541-4E67-97C6-AD4B0F7BF8EA__GUID-3CDF004B-3BC8-40FA-BDBA-E4213A9A3F40">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS883" target="_blank" href="../ARPLS/u_spadv.htm#ARPLS883"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> for more information about the <code class="codeph">UTL_SPADV</code> package</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="XSTRM73017"></a>
<div class="props_rev_3"><a id="GUID-17C7AA75-E14B-42E8-9465-8D61B8CB296D"></a>
<h4 id="XSTRM-GUID-17C7AA75-E14B-42E8-9465-8D61B8CB296D" class="sect4"><span class="enumeration_section">2.4.4.2</span> Showing XStream Statistics on the Command Line</h4>
<div>
<p>The <code class="codeph">SHOW_STATS</code> procedure in the <code class="codeph">UTL_SPADV</code> package displays the statistics that the Performance Advisor gathered and stored.</p>
<div class="section">
<p>Use the <code class="codeph">path_stat_table</code> parameter to specify the table that contains the statistics.</p>
<p>When you gather statistics using the <code class="codeph">COLLECT_STATS</code> procedure, this table is specified in the <code class="codeph">path_stat_table</code> parameter in the <code class="codeph">COLLECT_STATS</code> procedure. By default, the table name is <code class="codeph">STREAMS$_ADVISOR_PATH_STAT</code>.</p>
<p>When you gather statistics using the <code class="codeph">START_MONITORING</code> procedure, you can determine the name for this table by querying the <code class="codeph">SHOW_STATS_TABLE</code> column in the <code class="codeph">STREAMS$_PA_MONITORING</code> view. The default table for a monitoring job is <code class="codeph">STREAMS$_PA_SHOW_PATH_STAT</code>.</p>
<p>To show statistics collected using the <code class="codeph">UTL_SPADV</code> package and stored in the <code class="codeph">STREAMS$_ADVISOR_PATH_STAT</code> table, complete the following steps:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Collect statistics by completing the steps described in <span class="q">&#34;<a href="xstrm_gen_cncpt.htm#GUID-C37AFF47-1541-4E67-97C6-AD4B0F7BF8EA" title="You can collect XStream statistics with the UTL_SPADV package.">Collecting XStream Statistics Using the UTL_SPADV Package</a>&#34;</span>.</span></li>
<li class="stepexpand"><span>Connect to the database as the user who collected the statistics.</span></li>
<li class="stepexpand"><span>If you are using a monitoring job, then query the <code class="codeph">SHOW_STATS_TABLE</code> column in the <code class="codeph">STREAMS$_PA_MONITORING</code> view to determine the name of this table that stores the statistics:</span>
<div>
<pre dir="ltr">SELECT SHOW_STATS_TABLE FROM STREAMS$_PA_MONITORING;
</pre></div>
</li>
<li class="stepexpand"><span>Run the <code class="codeph">SHOW_STATS</code> procedure.</span>
<div>
<p>For example, if you are using a monitoring job and the default storage table, then run the following procedure:</p>
<pre dir="ltr">SET SERVEROUTPUT ON SIZE 50000
BEGIN
  UTL_SPADV.SHOW_STATS(
    path_stat_table =&gt; &#39;STREAMS$_PA_SHOW_PATH_STAT&#39;);
END;
/
</pre></div>
</li>
</ol>
</div>
</div>
<a id="XSTRM72911"></a>
<div class="props_rev_3"><a id="GUID-064F0CDB-5047-435A-A031-B158C992B59B"></a>
<h4 id="XSTRM-GUID-064F0CDB-5047-435A-A031-B158C992B59B" class="sect4"><span class="enumeration_section">2.4.4.3</span> Interpreting SHOW_STATS Output</h4>
<div>
<p>There are differences between the output for apply processes and the output for XStream outbound servers and inbound servers.</p>
<div class="infobox-note" id="GUID-064F0CDB-5047-435A-A031-B158C992B59B__GUID-D046688D-B031-44A6-B558-7D88A7D977C3">
<p class="notep1">Note:</p>
<p>The rest of this section assumes that you are familiar with the <code class="codeph">UTL_SPADV</code> package and the <code class="codeph">SHOW_STATS</code> output for apply processes. See <a class="olink STRMS876" target="_blank" href="../STRMS/strms_topology.htm#STRMS876"><span><cite>Oracle Streams Concepts and Administration</cite></span></a> and <a class="olink ARPLS883" target="_blank" href="../ARPLS/u_spadv.htm#ARPLS883"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> for detailed information about using the <code class="codeph">UTL_SPADV</code> package.</p>
</div>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-DD24937B-1E8D-41B8-9E83-D081C73588BC">Sample Output When an Outbound Server Is the Last Component in a Path</a></strong><br/>
Here is sample output for when an outbound server is the last component in a path.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-8FBD7D2B-7395-4F17-9851-848A9E9201B8">Sample Output When an Inbound Server Is the Last Component in a Path</a></strong><br/>
Here is sample output for when an inbound server is the last component in a path.</li>
</ul>
</div>
<a id="XSTRM72468"></a>
<div class="props_rev_3"><a id="GUID-DD24937B-1E8D-41B8-9E83-D081C73588BC"></a>
<h5 id="XSTRM-GUID-DD24937B-1E8D-41B8-9E83-D081C73588BC" class="sect5"><span class="enumeration_section">2.4.4.3.1</span> Sample Output When an Outbound Server Is the Last Component in a Path</h5>
<div>
<p>Here is sample output for when an outbound server is the last component in a path.</p>
<pre dir="ltr">LEGEND
&lt;statistics&gt;=&lt;capture&gt;  [&lt;queue&gt;  &lt;psender&gt;  &lt;preceiver&gt;  &lt;queue&gt;  ]&lt;apply&gt;
&lt;bottleneck&gt;
&lt;capture&gt;    = &#39;|&lt;C&gt;&#39;&lt;name&gt;  &lt;msgs captured/sec&gt;  &lt;msgs enqueued/sec&gt;  &lt;latency&gt;
    &#39;LMR&#39;&lt;idl%&gt;  &lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
    &#39;LMP&#39; (&lt;parallelism&gt;)&lt;idl%&gt;  &lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
    &#39;LMB&#39;&lt;idl%&gt;  &lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
    &#39;CAP&#39;&lt;idl%&gt;  &lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
    &#39;CAP+PS&#39;&lt;msgs sent/sec&gt;  &lt;bytes sent/sec&gt;  &lt;latency&gt;  &lt;idl%&gt;
&lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
&lt;apply&gt;      = &#39;|&lt;A&gt;&#39;&lt;name&gt;  &lt;msgs applied/sec&gt;  &lt;txns applied/sec&gt;  &lt;latency&gt;
    &#39;PS+PR&#39;&lt;idl%&gt;  &lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
    &#39;APR&#39;&lt;idl%&gt;  &lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
    &#39;APC&#39;&lt;idl%&gt;  &lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
    &#39;APS&#39; (&lt;parallelism&gt;)&lt;idl%&gt;  &lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
&lt;queue&gt;      = &#39;|&lt;Q&gt;&#39;&lt;name&gt;  &lt;msgs enqueued/sec&gt;  &lt;msgs spilled/sec&gt;  &lt;msgs in
queue&gt;
&lt;psender&gt;    = &#39;|&lt;PS&gt;&#39;&lt;name&gt;  &lt;msgs sent/sec&gt;  &lt;bytes sent/sec&gt;  &lt;latency&gt;  &lt;idl%&gt;
&lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
&lt;preceiver&gt;  = &#39;|&lt;PR&gt;&#39;&lt;name&gt;  &lt;idl%&gt;  &lt;flwctrl%&gt;  &lt;topevt%&gt;  &lt;topevt&gt;
&lt;bottleneck&gt;= &#39;|&lt;B&gt;&#39;&lt;name&gt;  &lt;sub_name&gt;  &lt;sessionid&gt;  &lt;serial#&gt;  &lt;topevt%&gt;  &lt;topevt&gt; 


OUTPUT
</pre>
<pre dir="ltr">PATH 1 RUN_ID 2 RUN_TIME 2009-MAY-15 12:20:55 CCA Y
|&lt;C&gt; CAP$_XOUT_1 2733 2730 3392 LMR 8.3% 91.7% 0% &#34;&#34; LMP (1) 8.3% 91.7% 0% &#34;&#34;
LMB 8.3% 91.7% 0% &#34;&#34; CAP 8.3% 91.7% 0% &#34;&#34; |&lt;Q&gt; &#34;XSTRMADMIN&#34;.&#34;Q$_XOUT_2&#34; 2730 0.01
4109 |&lt;A&gt; XOUT 2329 2.73 0 -1 PS+PR 8.3% 91.7% 0% &#34;&#34; APR 8.3% 91.7% 0% &#34;&#34; APC
100% 0% 0% &#34;&#34; APS (1) 8.3% 83.3% 8.3% &#34;&#34; |&lt;B&gt; &#34;EXTERNAL&#34;
.
.
.
</pre>
<div class="infobox-note" id="GUID-DD24937B-1E8D-41B8-9E83-D081C73588BC__GUID-2EC0C602-3BCF-4167-B61B-ECF339AB7BE4">
<p class="notep1">Note:</p>
<p>This output is for illustrative purposes only. Actual performance characteristics vary depending on individual configurations and conditions.</p>
</div>
<p>In this output, the <code class="codeph">A</code> component is the outbound server <code class="codeph">XOUT</code>. The output for when an outbound server is the last component in a path is similar to the output for when an apply process is the last component in a path. However, the apply server (APS) is not the last component because the outbound server connects to a client application. Statistics are not collected for the client application.</p>
<p>In an XStream Out configuration, the output can indicate flow control for the network because the &#34;SQL*Net more data to client&#34; performance metric for an apply server is measured like a flow control event. If the output indicates flow control for an apply server, then either the network or the client application is considered the bottleneck component. In the previous output, <code class="codeph">EXTERNAL</code> indicates that either the network or the client application is the bottleneck.</p>
<p>Other than these differences, you can interpret the statistics in the same way that you would for a path that ends with an apply process. Use the legend and the abbreviations to determine the statistics in the output.</p>
</div>
</div>
<a id="XSTRM72469"></a>
<div class="props_rev_3"><a id="GUID-8FBD7D2B-7395-4F17-9851-848A9E9201B8"></a>
<h5 id="XSTRM-GUID-8FBD7D2B-7395-4F17-9851-848A9E9201B8" class="sect5"><span class="enumeration_section">2.4.4.3.2</span> Sample Output When an Inbound Server Is the Last Component in a Path</h5>
<div>
<p>Here is sample output for when an inbound server is the last component in a path.</p>
<pre dir="ltr">OUTPUT     
</pre>
<pre dir="ltr">PATH 1 RUN_ID 2 RUN_TIME 2009-MAY-16 10:11:38 CCA N
|&lt;PR&gt; &#34;clientcap&#34;=&gt; 75% 0% 8.3% &#34;CPU + Wait for CPU&#34; |&lt;Q&gt; &#34;XSTRMADMIN&#34;.&#34;QUEUE2&#34;  467 0.01 1 
|&lt;A&gt; XIN 476 4.71 0 APR 100% 0% 0% &#34;&#34; APC 100% 0% 0% &#34;&#34; APS (4) 366.7% 0% 33.3% &#34;CPU + Wait for CPU&#34; 
|&lt;B&gt; &#34;EXTERNAL&#34;
.
.
.
</pre>
<div class="infobox-note" id="GUID-8FBD7D2B-7395-4F17-9851-848A9E9201B8__GUID-90E74CD1-0D49-4067-A373-F73C0CB233B4">
<p class="notep1">Note:</p>
<p>This output is for illustrative purposes only. Actual performance characteristics vary depending on individual configurations and conditions.</p>
</div>
<p>In this output, the <code class="codeph">A</code> component is the inbound server <code class="codeph">XIN</code>. When an inbound server is the last component in a path, the XStream client application connects to the inbound server, and the inbound server applies the changes in the LCRs. The client application is not shown in the output.</p>
<p>The propagation receiver receives the LCRs from the client application. So, the propagation receiver is the first component shown in the output. In the previous sample output, the propagation receiver is named <code class="codeph">clientcap</code>. In this case, <code class="codeph">clientcap</code> is the source name given by the client application when it attaches to the inbound server.</p>
<p>If the propagation receiver is idle for a significant percentage of time, then either the network or the client application is considered a bottleneck component. In the previous output, <code class="codeph">EXTERNAL</code> indicates that either the network or the client application is the bottleneck.</p>
<p>Other than these differences, you can interpret the statistics in the same way that you would for a path that ends with an apply process. If you and the abbreviations to determine the statistics in the output.</p>
</div>
</div>
</div>
<a id="XSTRM73018"></a>
<div class="props_rev_3"><a id="GUID-7AA4B077-7867-4C8D-9349-D7C7FB79B21A"></a>
<h4 id="XSTRM-GUID-7AA4B077-7867-4C8D-9349-D7C7FB79B21A" class="sect4"><span class="enumeration_section">2.4.4.4</span> Showing XStream Statistics in an HTML Report</h4>
<div>
<p>The <code class="codeph">SHOW_STATS_HTML</code> procedure in the <code class="codeph">UTL_SPADV</code> package creates an HTML report that contains the statistics that the Performance Advisor gathered and stored.</p>
<div class="section">
<p>Use the <code class="codeph">comp_stat_table</code> parameter to specify the table that contains the statistics.</p>
<p>When you gather statistics using the <code class="codeph">COLLECT_STATS</code> procedure, this table is specified in the <code class="codeph">comp_stat_table</code> parameter in the <code class="codeph">COLLECT_STATS</code> procedure. By default, the table name is <code class="codeph">STREAMS$_ADVISOR_COMP_STAT</code>.</p>
<p>When you gather statistics using the <code class="codeph">START_MONITORING</code> procedure, you can determine the name for this table by querying the <code class="codeph">SHOW_STATS_TABLE</code> column in the <code class="codeph">STREAMS$_PA_MONITORING</code> view. The default table for a monitoring job is <code class="codeph">STREAMS$_ADVISOR_COMP_STAT</code>.</p>
<p>The default for the <code class="codeph">comp_stat_table</code> parameter is <code class="codeph">STREAMS$_ADVISOR_COMP_STAT</code>. Ensure that you specify the correct table when you run the <code class="codeph">SHOW_STATS_HTML</code> procedure.</p>
<p>The <code class="codeph">SHOW_STATS_HTML</code> procedure must store the HTML report in a directory. Use the <code class="codeph">directory</code> parameter to specify a directory object.</p>
<p>To show statistics collected using the <code class="codeph">UTL_SPADV</code> package and stored in the <code class="codeph">STREAMS$_ADVISOR_COMP_STAT</code> table, complete the following steps:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Collect statistics by completing the steps described in <span class="q">&#34;<a href="xstrm_gen_cncpt.htm#GUID-C37AFF47-1541-4E67-97C6-AD4B0F7BF8EA" title="You can collect XStream statistics with the UTL_SPADV package.">Collecting XStream Statistics Using the UTL_SPADV Package</a>&#34;</span>.</span></li>
<li class="stepexpand"><span>Connect to the database as the user who collected the statistics.</span></li>
<li class="stepexpand"><span>If you are using a monitoring job, then query the <code class="codeph">SHOW_STATS_TABLE</code> column in the <code class="codeph">STREAMS$_PA_MONITORING</code> view to determine the name of this table that stores the statistics:</span>
<div>
<pre dir="ltr">SELECT SHOW_STATS_TABLE FROM STREAMS$_PA_MONITORING;
</pre></div>
</li>
<li class="stepexpand"><span>Create a directory object for the directory that will contain the files in the HTML report.</span>
<div>
<p>For example, to create a directory object named <code class="codeph">XSTREAM_STATS_HTML</code> for the /usr/xstream/reports directory, run the following SQL statement:</p>
<pre dir="ltr">CREATE DIRECTORY XSTREAM_STATS_HTML AS &#39;/usr/xstream/reports&#39;;
</pre></div>
</li>
<li class="stepexpand"><span>Run the <code class="codeph">SHOW_STATS_HTML</code> procedure.</span>
<div>
<p>For example, if you are using a monitoring job and the default storage table, then run the following procedure:</p>
<pre dir="ltr">BEGIN
  UTL_SPADV.SHOW_STATS_HTML(
    directory       =&gt; &#39;XSTREAM_STATS_HTML&#39;,
    reportname      =&gt; &#39;xstream_stats.html&#39;,
    comp_stat_table =&gt; &#39;STREAMS$_ADVISOR_COMP_STAT&#39;);
END;
/
</pre></div>
</li>
</ol>
</div>
</div>
<a id="XSTRM73019"></a><a id="XSTRM72912"></a>
<div class="props_rev_3"><a id="GUID-CE7F022F-5BA0-41A1-AB71-C57F9C1DEFE9"></a>
<h4 id="XSTRM-GUID-CE7F022F-5BA0-41A1-AB71-C57F9C1DEFE9" class="sect4"><span class="enumeration_section">2.4.4.5</span> Interpreting the HTML Report From SHOW_STATS_HTML</h4>
<div>
<p>The <code class="codeph">SHOW_STATS_HTML</code> procedure in the <code class="codeph">UTL_SPADV</code> package can generate the same output as the <code class="codeph">SHOW_STATS</code> procedure, but it formats the output as HTML in HTML files.</p>
<p>The <code class="codeph">SHOW_STATS_HTML</code> output is easier to read than the <code class="codeph">SHOW_STATS</code> output. For example, the procedure generates multiple files, and each file begins with the report name. The report includes tables with the performance statistics. Statistics for different paths are in different rows in these tables, and you can click on a path for more detailed statistics about the path. The <code class="codeph">report_name</code> parameter indicates the master HTML file with links to the other HTML files.</p>
<p>The following are considerations for using the <code class="codeph">SHOW_STATS_HTML</code> procedure:</p>
<ul style="list-style-type: disc;">
<li>
<p>The default table that stores the statistics is <code class="codeph">STREAMS$_ADVISOR_COMP_STAT</code>. The <code class="codeph">SHOW_STATS</code> procedure uses a different default table (<code class="codeph">STREAMS$_ADVISOR_PATH_STAT</code>).</p>
</li>
<li>
<p>You must specify a directory object in the <code class="codeph">directory</code> parameter of the procedure. This directory stores the HTML files generated by the procedure.</p>
<p>The specified directory object must be created using the SQL statement <code class="codeph">CREATE</code> <code class="codeph">DIRECTORY</code>, and the user who invokes the procedure must have <code class="codeph">READ</code> and <code class="codeph">WRITE</code> privilege on the directory.</p>
</li>
</ul>
<p><a href="xstrm_gen_cncpt.htm#GUID-CE7F022F-5BA0-41A1-AB71-C57F9C1DEFE9__BABFFCCA">Figure 2-1</a> shows a portion of an HTML report generated by the <code class="codeph">SHOW_STATS_HTML</code> procedure.</p>
<div class="figure" id="GUID-CE7F022F-5BA0-41A1-AB71-C57F9C1DEFE9__BABFFCCA">
<p class="titleinfigure">Figure 2-1 HTML Report Generated by the SHOW_STATS_HTML Procedure</p>
<img width="756" height="768" src="img/GUID-75C7EA98-6B97-4C26-8635-A68D115A86D1-default.gif" alt="Description of Figure 2-1 follows" title="Description of Figure 2-1 follows"/><br/>
<a href="img_text/GUID-75C7EA98-6B97-4C26-8635-A68D115A86D1-default.htm">Description of &#34;Figure 2-1 HTML Report Generated by the SHOW_STATS_HTML Procedure&#34;</a></div>
<!-- class="figure" -->
<div class="infoboxnotealso" id="GUID-CE7F022F-5BA0-41A1-AB71-C57F9C1DEFE9__GUID-3360BFF4-9708-46EA-9644-646F9EB85184">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="xstrm_gen_cncpt.htm#GUID-064F0CDB-5047-435A-A031-B158C992B59B" title="There are differences between the output for apply processes and the output for XStream outbound servers and inbound servers.">Interpreting SHOW_STATS Output</a>&#34;</span></p>
</div>
</div>
</div>
</div>
</div>
<a id="XSTRM72457"></a>
<div class="props_rev_3"><a id="GUID-676A6CE2-F40C-4F9F-849B-3FD904B701F3"></a>
<h2 id="XSTRM-GUID-676A6CE2-F40C-4F9F-849B-3FD904B701F3" class="sect2"><span class="enumeration_section">2.5</span> XStream and SQL Generation</h2>
<div>
<p>SQL generation is the ability to generate the SQL statement required to perform the change encapsulated in a row LCR.</p>
<p>XStream outbound servers and XStream inbound servers can use SQL generation to generate the SQL statement necessary to perform the insert, update, or delete operation in a row LCR.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-C485CED2-90BF-4339-AD31-6BC68D86045C">Interfaces for Performing SQL Generation</a></strong><br/>
You can use different interfaces for SQL generation.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-5E201707-4015-49AE-B0E7-F3E0EFFC0FEB">SQL Generation Formats</a></strong><br/>
SQL statements can be generated in one of two formats: inline values or bind variables.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-F4D7BC0F-9546-4818-921D-C7EEFD8883C6">SQL Generation and Data Types</a></strong><br/>
SQL generation supports most data types.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-3C5A7609-12D4-4A5E-9BC1-0A61AC074ADC">SQL Generation and Character Sets</a></strong><br/>
When you use the LCR methods, the generated SQL is in the database character set.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-04410A41-4173-4091-AFF9-8FC95FC4AB9C">Sample Generated SQL Statements</a></strong><br/>
Examples illustrate generated SQL statements.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-1460240A-4AB8-47E9-BE40-83B0519A0365">SQL Generation Demo</a></strong><br/>
A demo that performs SQL generation is available.</li>
</ul>
</div>
<a id="XSTRM72458"></a>
<div class="props_rev_3"><a id="GUID-C485CED2-90BF-4339-AD31-6BC68D86045C"></a>
<h3 id="XSTRM-GUID-C485CED2-90BF-4339-AD31-6BC68D86045C" class="sect3"><span class="enumeration_section">2.5.1</span> Interfaces for Performing SQL Generation</h3>
<div>
<p>You can use different interfaces for SQL generation.</p>
<p>You can use the following interfaces to perform SQL generation:</p>
<ul style="list-style-type: disc;">
<li>
<p>The PL/SQL interface, which uses the <code class="codeph">GET_ROW_TEXT</code> and <code class="codeph">GET_WHERE_CLAUSE</code> member procedures for row LCRs</p>
</li>
<li>
<p>The OCI for XStream</p>
</li>
<li>
<p>The Java interface for XStream</p>
</li>
</ul>
<p>The PL/SQL interface generates SQL in a <code class="codeph">CLOB</code> data type, while the OCI and Java interfaces generate SQL in plain text. In the Java interface, the size of the text is limited by the size of <code class="codeph">String</code> data type.</p>
<div class="infoboxnotealso" id="GUID-C485CED2-90BF-4339-AD31-6BC68D86045C__GUID-A0131945-040E-443C-8D56-4BD3B06D214B">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ARPLS368" target="_blank" href="../ARPLS/t_lcr.htm#ARPLS368"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> for information about the <code class="codeph">GET_ROW_TEXT</code> and <code class="codeph">GET_WHERE_CLAUSE</code> row LCR member procedures</p>
</li>
<li>
<p><a class="olink LNOCI72903" target="_blank" href="../LNOCI/oci25xstrmint.htm#LNOCI72903"><span><cite>Oracle Call Interface Programmer&#39;s Guide</cite></span></a></p>
</li>
<li>
<p><a class="olink STXJV" target="_blank" href="../STXJV/toc.htm"><span><cite>Oracle Database XStream Java API Reference</cite></span></a> for information about the Java interface for XStream</p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM72459"></a>
<div class="props_rev_3"><a id="GUID-5E201707-4015-49AE-B0E7-F3E0EFFC0FEB"></a>
<h3 id="XSTRM-GUID-5E201707-4015-49AE-B0E7-F3E0EFFC0FEB" class="sect3"><span class="enumeration_section">2.5.2</span> SQL Generation Formats</h3>
<div>
<p>SQL statements can be generated in one of two formats: inline values or bind variables.</p>
<p>Use inline values when the returned SQL statement is relatively small. For larger SQL statements, use bind variables. In this case, the bind variables are passed to the client application in a separate list that includes pointers to both old and new column values.</p>
<p>For information about using bind variables with each interface, refer to the following documentation:</p>
<ul style="list-style-type: disc;">
<li>
<p>The documentation for the <code class="codeph">GET_ROW_TEXT</code> and <code class="codeph">GET_WHERE_CLAUSE</code> row LCR member procedures in <a class="olink ARPLS368" target="_blank" href="../ARPLS/t_lcr.htm#ARPLS368"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a></p>
</li>
<li>
<p><a class="olink LNOCI72931" target="_blank" href="../LNOCI/oci26xstrm001.htm#LNOCI72931"><span><cite>Oracle Call Interface Programmer&#39;s Guide</cite></span></a></p>
</li>
<li>
<p>The documentation for <code class="codeph">DefaultRowLCR.getBinds()</code> in <a class="olink STXJV" target="_blank" href="../STXJV/toc.htm"><span><cite>Oracle Database XStream Java API Reference</cite></span></a></p>
</li>
</ul>
<div class="infobox-note" id="GUID-5E201707-4015-49AE-B0E7-F3E0EFFC0FEB__GUID-E0D72207-D910-4D12-B4B6-EFEE4D0AAAB4">
<p class="notep1">Note:</p>
<p>For generated SQL statements with the values inline, SQL injection is possible. SQL injection is a technique for maliciously exploiting applications that use client-supplied data in SQL statements, thereby gaining unauthorized access to a database to view or manipulate restricted data. Oracle strongly recommends using bind variables if you plan to execute the generated SQL statement. See <a class="olink LNPLS01109" target="_blank" href="../LNPLS/dynamic.htm#LNPLS01109"><span><cite>Oracle Database PL/SQL Language Reference</cite></span></a> for more information about SQL injection.</p>
</div>
<div class="infoboxnotealso" id="GUID-5E201707-4015-49AE-B0E7-F3E0EFFC0FEB__GUID-6120AFB0-19A2-4C87-98DC-A4CF7FDFEC00">
<p class="notep1">See Also:</p>
<p><a class="olink STRMS748" target="_blank" href="../STRMS/strms_mapply.htm#STRMS748"><span><cite>Oracle Streams Concepts and Administration</cite></span></a> for an example that uses the <code class="codeph">GET_ROW_TEXT</code> procedure for SQL generation</p>
</div>
</div>
</div>
<a id="XSTRM72460"></a>
<div class="props_rev_3"><a id="GUID-F4D7BC0F-9546-4818-921D-C7EEFD8883C6"></a>
<h3 id="XSTRM-GUID-F4D7BC0F-9546-4818-921D-C7EEFD8883C6" class="sect3"><span class="enumeration_section">2.5.3</span> SQL Generation and Data Types</h3>
<div>
<p>SQL generation supports most data types.</p>
<p>SQL generation supports the following data types:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">VARCHAR2</code></p>
</li>
<li>
<p><code class="codeph">NVARCHAR2</code></p>
</li>
<li>
<p><code class="codeph">NUMBER</code></p>
</li>
<li>
<p><code class="codeph">FLOAT</code></p>
</li>
<li>
<p><code class="codeph">DATE</code></p>
</li>
<li>
<p><code class="codeph">BINARY_FLOAT</code></p>
</li>
<li>
<p><code class="codeph">BINARY_DOUBLE</code></p>
</li>
<li>
<p><code class="codeph">LONG</code></p>
</li>
<li>
<p><code class="codeph">TIMESTAMP</code></p>
</li>
<li>
<p><code class="codeph">TIMESTAMP</code> <code class="codeph">WITH</code> <code class="codeph">TIME</code> <code class="codeph">ZONE</code></p>
</li>
<li>
<p><code class="codeph">TIMESTAMP</code> <code class="codeph">WITH</code> <code class="codeph">LOCAL</code> <code class="codeph">TIME</code> <code class="codeph">ZONE</code></p>
</li>
<li>
<p><code class="codeph">INTERVAL</code> <code class="codeph">YEAR</code> <code class="codeph">TO</code> <code class="codeph">MONTH</code></p>
</li>
<li>
<p><code class="codeph">INTERVAL</code> <code class="codeph">DAY</code> <code class="codeph">TO</code> <code class="codeph">SECOND</code></p>
</li>
<li>
<p><code class="codeph">RAW</code></p>
</li>
<li>
<p><code class="codeph">LONG</code> <code class="codeph">RAW</code></p>
</li>
<li>
<p><code class="codeph">CHAR</code></p>
</li>
<li>
<p><code class="codeph">NCHAR</code></p>
</li>
<li>
<p><code class="codeph">CLOB</code> with <code class="codeph">BASICFILE</code> storage</p>
</li>
<li>
<p><code class="codeph">NCLOB</code> with <code class="codeph">BASICFILE</code> storage</p>
</li>
<li>
<p><code class="codeph">BLOB</code> with <code class="codeph">BASICFILE</code> storage</p>
</li>
<li>
<p><code class="codeph">XMLType</code> stored as <code class="codeph">CLOB</code>, object relational, or as binary XML</p>
</li>
</ul>
<div class="infobox-note" id="GUID-F4D7BC0F-9546-4818-921D-C7EEFD8883C6__GUID-CBD7E70A-A3E9-488C-BD67-AF8B3AE961DF">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>The maximum size of the <code class="codeph">VARCHAR2</code>, <code class="codeph">NVARCHAR2</code>, and <code class="codeph">RAW</code> data types has been increased in Oracle Database 12<span class="italic">c</span> when the <code class="codeph">COMPATIBLE</code> initialization parameter is set to <code class="codeph">12.0.0</code> and the <code class="codeph">MAX_STRING_SIZE</code> initialization parameter is set to <code class="codeph">EXTENDED</code>.</p>
</li>
<li>
<p><code class="codeph">XMLType</code> stored as a <code class="codeph">CLOB</code> is deprecated in this release.</p>
</li>
</ul>
</div>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-135AF3F4-B00A-4F1E-B168-9806096796C3">SQL Generation and Automatic Data Type Conversion</a></strong><br/>
An XStream outbound server or inbound server performs implicit data type conversion where it is possible, and the generated SQL follows ANSI standards where it is possible.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-D55FBBEA-3FB7-4B2B-B4FF-B3EA31481588">SQL Generation and LOB, LONG, LONG RAW, and XMLType Data Types</a></strong><br/>
For <code class="codeph">INSERT</code> and <code class="codeph">UPDATE</code> operations on LOB columns, an outbound server automatically assembles the LOB chunks using LOB assembly.</li>
</ul>
<div class="infoboxnotealso" id="GUID-F4D7BC0F-9546-4818-921D-C7EEFD8883C6__GUID-164EA7AE-1F2B-4C39-B465-5744DF5B37FF">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF0021" target="_blank" href="../SQLRF/sql_elements001.htm#SQLRF0021"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for information about data types</p>
</div>
</div>
<a id="XSTRM72758"></a>
<div class="props_rev_3"><a id="GUID-135AF3F4-B00A-4F1E-B168-9806096796C3"></a>
<h4 id="XSTRM-GUID-135AF3F4-B00A-4F1E-B168-9806096796C3" class="sect4"><span class="enumeration_section">2.5.3.1</span> SQL Generation and Automatic Data Type Conversion</h4>
<div>
<p>An XStream outbound server or inbound server performs implicit data type conversion where it is possible, and the generated SQL follows ANSI standards where it is possible.</p>
<p>The following are considerations for automatic data type conversions:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">NULL</code> is specified as <code class="codeph">&#34;NULL&#34;</code>.</p>
</li>
<li>
<p>Single quotation marks are converted into double quotation marks for the following data types when they are inline values: <code class="codeph">CHAR</code>, <code class="codeph">VARCHAR2</code>, <code class="codeph">NVARCHAR2</code>, <code class="codeph">NCHAR</code>, <code class="codeph">CLOB</code>, and <code class="codeph">NCLOB</code>.</p>
</li>
<li>
<p><code class="codeph">LONG</code> data is converted into <code class="codeph">CLOB</code> data.</p>
</li>
<li>
<p><code class="codeph">LONG</code> <code class="codeph">RAW</code> data is converted into <code class="codeph">BLOB</code> data.</p>
</li>
</ul>
</div>
</div>
<a id="XSTRM72759"></a>
<div class="props_rev_3"><a id="GUID-D55FBBEA-3FB7-4B2B-B4FF-B3EA31481588"></a>
<h4 id="XSTRM-GUID-D55FBBEA-3FB7-4B2B-B4FF-B3EA31481588" class="sect4"><span class="enumeration_section">2.5.3.2</span> SQL Generation and LOB, LONG, LONG RAW, and XMLType Data Types</h4>
<div>
<p>For <code class="codeph">INSERT</code> and <code class="codeph">UPDATE</code> operations on LOB columns, an outbound server automatically assembles the LOB chunks using LOB assembly.</p>
<p>For these operations, the generated SQL includes a non-<code class="codeph">NULL</code> empty value. The actual values of the chunked columns arrive in subsequent LCRs. For each chunk, you must perform the correct SQL operation on the correct column.</p>
<p>Similarly, for <code class="codeph">LONG</code>, <code class="codeph">LONG</code> <code class="codeph">RAW</code>, and <code class="codeph">XMLType</code> data types, an outbound server generates a non-<code class="codeph">NULL</code> empty value, and the actual values of the column arrive in chunks in subsequent LCRs. For each chunk, you must perform the correct SQL operation on the correct column.</p>
<p>In the inline version of the generated SQL, for LOB, <code class="codeph">LONG</code>, <code class="codeph">LONG</code> <code class="codeph">RAW</code>, and <code class="codeph">XMLType</code> data type columns, the following SQL is generated for inserts and updates:</p>
<ul style="list-style-type: disc;">
<li>
<p>For <code class="codeph">CLOB</code>, <code class="codeph">NCLOB</code>, and <code class="codeph">LONG</code> data type columns:</p>
<pre dir="ltr">EMPTY_CLOB()
</pre></li>
<li>
<p>For <code class="codeph">BLOB</code> and <code class="codeph">LONG</code> <code class="codeph">RAW</code> data type columns:</p>
<pre dir="ltr">EMPTY_BLOB()
</pre></li>
<li>
<p>For <code class="codeph">XMLType</code> columns:</p>
<pre dir="ltr">XMLTYPE.CREATEXML(&#39;<span class="italic">xml /</span>&#39;)
</pre>
<p>where <span class="italic"><code class="codeph">xml</code></span> <span class="italic"><code class="codeph">/</code></span> is the XML chunk.</p>
</li>
</ul>
<p>After the LCR that contains the DML statement arrives, the data for these changes arrive in separate chunks. You can generate the <code class="codeph">WHERE</code> clause for such a change and use the generated <code class="codeph">WHERE</code> clause to identify the row for the modifications contained in the chunks. For example, in PL/SQL you can use the <code class="codeph">GET_WHERE_CLAUSE</code> row LCR member procedure to generate the <code class="codeph">WHERE</code> clause for a row change.</p>
<p>For <code class="codeph">INSERT</code> and <code class="codeph">UPDATE</code> operations, the generated <code class="codeph">WHERE</code> clause identifies the row after the insert or update. For example, consider the following update to the <code class="codeph">hr.departments</code> table:</p>
<pre dir="ltr">UPDATE hr.departments SET department_name=&#39;Management&#39; 
  WHERE department_name=&#39;Administration&#39;;
</pre>
<p>The generated <code class="codeph">WHERE</code> clause for this change is the following:</p>
<pre dir="ltr">WHERE &#34;DEPARTMENT_NAME&#34;=&#39;Management&#39;
</pre>
<p>For piecewise LOB operation performed by subprograms in the <code class="codeph">DBMS_LOB</code> package (including the <code class="codeph">WRITE</code>, <code class="codeph">TRIM</code>, and <code class="codeph">ERASE</code> procedures), the generated SQL includes a <code class="codeph">SELECT</code> <code class="codeph">FOR</code> <code class="codeph">UPDATE</code> statement.</p>
<p>For example, a <code class="codeph">LOB_WRITE</code> operation on a <code class="codeph">clob_col</code> results in generated SQL similar to the following:</p>
<pre dir="ltr">SELECT &#34;CLOB_COL&#34; FROM &#34;HR&#34;.&#34;LOB_TAB&#34; WHERE &#34;N1&#34;=2 FOR UPDATE
</pre>
<p>The selected <code class="codeph">clob_col</code> must be defined. You can use the LOB locator to perform piecewise LOB operations with the LOB chunks that follow the row LCR.</p>
<div class="infoboxnotealso" id="GUID-D55FBBEA-3FB7-4B2B-B4FF-B3EA31481588__GUID-645B10ED-2C24-4B8B-B026-B91D99232326">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="xstrm_gen_cncpt.htm#GUID-04410A41-4173-4091-AFF9-8FC95FC4AB9C" title="Examples illustrate generated SQL statements.">Sample Generated SQL Statements</a>&#34;</span></p>
</li>
<li>
<p><a class="olink STREP490" target="_blank" href="../STREP/man_lcrs.htm#STREP490"><span><cite>Oracle Streams Replication Administrator&#39;s Guide</cite></span></a> for information about LOB assembly</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="XSTRM72760"></a>
<div class="props_rev_3"><a id="GUID-3C5A7609-12D4-4A5E-9BC1-0A61AC074ADC"></a>
<h3 id="XSTRM-GUID-3C5A7609-12D4-4A5E-9BC1-0A61AC074ADC" class="sect3"><span class="enumeration_section">2.5.4</span> SQL Generation and Character Sets</h3>
<div>
<p>When you use the LCR methods, the generated SQL is in the database character set.</p>
<p>SQL keywords, such as <code class="codeph">INSERT</code>, <code class="codeph">UPDATE</code>, and <code class="codeph">INTO</code>, do not change with the character set.</p>
<div class="infoboxnotealso" id="GUID-3C5A7609-12D4-4A5E-9BC1-0A61AC074ADC__GUID-1E04F3C9-D983-4782-834D-C28692AB5612">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink NLSPG364" target="_blank" href="../NLSPG/ch7progrunicode.htm#NLSPG364"><span><cite>Oracle Database Globalization Support Guide</cite></span></a> for information about data conversion in JDBC</p>
</li>
<li>
<p><a class="olink SQLRF51129" target="_blank" href="../SQLRF/sql_elements008.htm#SQLRF51129"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for information about SQL keywords</p>
</li>
</ul>
</div>
</div>
</div>
<a id="XSTRM72761"></a>
<div class="props_rev_3"><a id="GUID-04410A41-4173-4091-AFF9-8FC95FC4AB9C"></a>
<h3 id="XSTRM-GUID-04410A41-4173-4091-AFF9-8FC95FC4AB9C" class="sect3"><span class="enumeration_section">2.5.5</span> Sample Generated SQL Statements</h3>
<p>Examples illustrate generated SQL statements.</p>
<div>
<ul class="ullinks">
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-0AA668E1-0CFA-42E1-92B9-382983B3F91A">Sample Generated SQL Statements for the hr.employees Table</a></strong><br/>
Examples illustrate SQL statements generated by an outbound server for changes made to the <code class="codeph">hr.employees</code> table.</li>
<li class="ulchildlink"><strong><a href="xstrm_gen_cncpt.htm#GUID-E8C7A6B0-C02B-4FE5-9B11-B8379D6EF7A0">Sample Generated SQL Statements for a Table With LOB Columns</a></strong><br/>
Examples illustrate SQL statements generated by an outbound server for changes made ti a table with LOB columns.</li>
</ul>
</div>
<a id="XSTRM72763"></a><a id="XSTRM72764"></a><a id="XSTRM72765"></a><a id="XSTRM72762"></a>
<div class="props_rev_3"><a id="GUID-0AA668E1-0CFA-42E1-92B9-382983B3F91A"></a>
<h4 id="XSTRM-GUID-0AA668E1-0CFA-42E1-92B9-382983B3F91A" class="sect4"><span class="enumeration_section">2.5.5.1</span> Sample Generated SQL Statements for the hr.employees Table</h4>
<div>
<p>Examples illustrate SQL statements generated by an outbound server for changes made to the <code class="codeph">hr.employees</code> table.</p>
<div class="infobox-note" id="GUID-0AA668E1-0CFA-42E1-92B9-382983B3F91A__GUID-AC3AFDFF-B8D3-4731-B235-C4DCFA575660">
<p class="notep1">Note:</p>
<p>Generated SQL is in a single line and is not formatted.</p>
</div>
<div class="example" id="GUID-0AA668E1-0CFA-42E1-92B9-382983B3F91A__BABEHGEI">
<p class="titleinexample">Example 2-1 Generated Insert</p>
<p>Assume the following insert is executed:</p>
<pre dir="ltr">INSERT INTO hr.employees (employee_id, 
                           last_name, 
                           email, 
                           hire_date, 
                           job_id, 
                           salary, 
                           commission_pct) 
                   VALUES (207, 
                           &#39;Gregory&#39;, 
                           &#39;pgregory@example.com&#39;, 
                           SYSDATE, 
                           &#39;PU_CLERK&#39;, 
                           9000, 
                           NULL);
</pre>
<p>The following is the generated SQL with inline values:</p>
<pre dir="ltr">INSERT INTO &#34;HR&#34;.&#34;EMPLOYEES&#34;(&#34;EMPLOYEE_ID&#34;,&#34;FIRST_NAME&#34;,&#34;LAST_NAME&#34;,
&#34;EMAIL&#34;,&#34;PHONE_NUMBER&#34;,&#34;HIRE_DATE&#34;,&#34;JOB_ID&#34;,&#34;SALARY&#34;,&#34;COMMISSION_PCT&#34;,
&#34;MANAGER_ID&#34;,&#34;DEPARTMENT_ID&#34; ) VALUES ( 207, NULL,&#39;Gregory&#39;,
&#39;pgregory@example.com&#39;, NULL , TO_DATE(&#39; 2009-04-15&#39;,&#39;syyyy-mm-dd&#39;),
&#39;PU_CLERK&#39;,9000, NULL , NULL , NULL )
</pre>
<p>The following is the generated SQL with bind variables:</p>
<pre dir="ltr">INSERT INTO &#34;HR&#34;.&#34;EMPLOYEES&#34;(&#34;EMPLOYEE_ID&#34;,&#34;FIRST_NAME&#34;,&#34;LAST_NAME&#34;,
&#34;EMAIL&#34;,&#34;PHONE_NUMBER&#34;,&#34;HIRE_DATE&#34;,&#34;JOB_ID&#34;,&#34;SALARY&#34;,
&#34;COMMISSION_PCT&#34;,&#34;MANAGER_ID&#34;,&#34;DEPARTMENT_ID&#34; ) VALUES ( :1   ,:2   ,:3   
,:4   ,:5   ,:6   ,:7   ,:8   ,:9   ,:10  ,:11  )
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-0AA668E1-0CFA-42E1-92B9-382983B3F91A__BABFBDAG">
<p class="titleinexample">Example 2-2 Generated Update</p>
<p>Assume the following update is executed:</p>
<pre dir="ltr">UPDATE hr.employees SET salary=10000 WHERE employee_id=207;
</pre>
<p>The following is the generated SQL with inline values:</p>
<pre dir="ltr">UPDATE &#34;HR&#34;.&#34;EMPLOYEES&#34; SET &#34;SALARY&#34;=10000 WHERE &#34;EMPLOYEE_ID&#34;=207 
AND &#34;SALARY&#34;=9000
</pre>
<p>The following is the generated SQL with bind variables:</p>
<pre dir="ltr">UPDATE &#34;HR&#34;.&#34;EMPLOYEES&#34; SET &#34;SALARY&#34;=:1    WHERE &#34;EMPLOYEE_ID&#34;=:2    
AND &#34;SALARY&#34;=:3
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-0AA668E1-0CFA-42E1-92B9-382983B3F91A__BABEABCG">
<p class="titleinexample">Example 2-3 Generated Delete</p>
<p>Assume the following delete is executed:</p>
<pre dir="ltr">DELETE FROM hr.employees WHERE employee_id=207;
</pre>
<p>The following is the generated SQL with inline values:</p>
<pre dir="ltr">DELETE  FROM &#34;HR&#34;.&#34;EMPLOYEES&#34; WHERE &#34;EMPLOYEE_ID&#34;=207 AND &#34;FIRST_NAME&#34; IS NULL 
AND &#34;LAST_NAME&#34;=&#39;Gregory&#39; AND &#34;EMAIL&#34;=&#39;pgregory@example.com&#39; AND 
&#34;PHONE_NUMBER&#34; IS NULL  AND &#34;HIRE_DATE&#34;= TO_DATE(&#39; 2009-04-15&#39;,&#39;syyyy-mm-dd&#39;) 
AND &#34;JOB_ID&#34;=&#39;PU_CLERK&#39; AND &#34;SALARY&#34;=10000 AND &#34;COMMISSION_PCT&#34; IS NULL  
AND &#34;MANAGER_ID&#34; IS NULL  AND &#34;DEPARTMENT_ID&#34; IS NULL 
</pre>
<p>The following is the generated SQL with bind variables:</p>
<pre dir="ltr">DELETE  FROM &#34;HR&#34;.&#34;EMPLOYEES&#34; WHERE &#34;EMPLOYEE_ID&#34;=:1    AND &#34;FIRST_NAME&#34;=:2    
AND &#34;LAST_NAME&#34;=:3    AND &#34;EMAIL&#34;=:4    AND &#34;PHONE_NUMBER&#34;=:5    AND 
&#34;HIRE_DATE&#34;=:6    AND &#34;JOB_ID&#34;=:7    AND &#34;SALARY&#34;=:8    AND 
&#34;COMMISSION_PCT&#34;=:9   AND &#34;MANAGER_ID&#34;=:10   AND &#34;DEPARTMENT_ID&#34;=:11 
</pre></div>
<!-- class="example" --></div>
</div>
<a id="XSTRM72767"></a><a id="XSTRM72768"></a><a id="XSTRM72769"></a><a id="XSTRM72766"></a>
<div class="props_rev_3"><a id="GUID-E8C7A6B0-C02B-4FE5-9B11-B8379D6EF7A0"></a>
<h4 id="XSTRM-GUID-E8C7A6B0-C02B-4FE5-9B11-B8379D6EF7A0" class="sect4"><span class="enumeration_section">2.5.5.2</span> Sample Generated SQL Statements for a Table With LOB Columns</h4>
<div>
<p>Examples illustrate SQL statements generated by an outbound server for changes made ti a table with LOB columns.</p>
<p>Examples illustrate SQL statements generated by an outbound server for changes made to the following table:</p>
<pre dir="ltr">CREATE TABLE hr.lob_tab(
   n1        number primary key,
   clob_col  CLOB,
   nclob_col NCLOB,
   blob_col  BLOB);
</pre>
<div class="infobox-note" id="GUID-E8C7A6B0-C02B-4FE5-9B11-B8379D6EF7A0__GUID-1BD3D0EB-D9E9-4CC5-88D9-D67AAE5FBBDF">
<p class="notep1">Note:</p>
<p>Generated SQL is in a single line and is not formatted.</p>
</div>
<p>The <code class="codeph">GET_WHERE_CLAUSE</code> member procedure generates the following <code class="codeph">WHERE</code> clause for this insert:</p>
<ul style="list-style-type: disc;">
<li>
<p>Inline:</p>
<pre dir="ltr">WHERE &#34;N1&#34;=2
</pre></li>
<li>
<p>Bind variables:</p>
<pre dir="ltr">WHERE &#34;N1&#34;=:1
</pre></li>
</ul>
<p>You can use the <code class="codeph">WHERE</code> clause to identify the row that was inserted when the subsequent chunks arrive for the LOB column change.</p>
<div class="example" id="GUID-E8C7A6B0-C02B-4FE5-9B11-B8379D6EF7A0__BABDIAAH">
<p class="titleinexample">Example 2-4 Generated Insert for a Table with LOB Columns</p>
<p>Assume the following insert is executed:</p>
<pre dir="ltr">INSERT INTO hr.lob_tab VALUES (2, &#39;test insert&#39;, NULL, NULL);
</pre>
<p>The following is the generated SQL with inline values:</p>
<pre dir="ltr">INSERT INTO &#34;HR&#34;.&#34;LOB_TAB&#34;(&#34;N1&#34;,&#34;BLOB_COL&#34;,&#34;CLOB_COL&#34;,&#34;NCLOB_COL&#34; ) 
VALUES ( 2,, EMPTY_CLOB() ,)
</pre>
<p>The following is the generated SQL with bind variables:</p>
<pre dir="ltr">INSERT INTO &#34;HR&#34;.&#34;LOB_TAB&#34;(&#34;N1&#34;,&#34;BLOB_COL&#34;,&#34;CLOB_COL&#34;,&#34;NCLOB_COL&#34; ) 
VALUES ( :1   ,:2   ,:3   ,:4   )
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-E8C7A6B0-C02B-4FE5-9B11-B8379D6EF7A0__BABGCDJH">
<p class="titleinexample">Example 2-5 Generated Update for a Table with LOB Columns</p>
<p>Assume the following update is executed:</p>
<pre dir="ltr">UPDATE hr.lob_tab SET clob_col=&#39;test update&#39; WHERE n1=2;
</pre>
<p>The following is the generated SQL with inline values:</p>
<pre dir="ltr">UPDATE &#34;HR&#34;.&#34;LOB_TAB&#34; SET &#34;CLOB_COL&#34;= EMPTY_CLOB()  WHERE &#34;N1&#34;=2
</pre>
<p>The following is the generated SQL with bind variables:</p>
<pre dir="ltr">UPDATE &#34;HR&#34;.&#34;LOB_TAB&#34; SET &#34;CLOB_COL&#34;=:1    WHERE &#34;N1&#34;=:2
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-E8C7A6B0-C02B-4FE5-9B11-B8379D6EF7A0__BABDIJDD">
<p class="titleinexample">Example 2-6 Generated Delete for a Table with LOB Columns</p>
<p>Assume the following delete is executed:</p>
<pre dir="ltr">DELETE FROM hr.lob_tab WHERE n1=2;
</pre>
<p>The following is the generated SQL with inline values:</p>
<pre dir="ltr">DELETE  FROM &#34;HR&#34;.&#34;LOB_TAB&#34; WHERE &#34;N1&#34;=2
</pre>
<p>The following is the generated SQL with bind variables:</p>
<pre dir="ltr">DELETE  FROM &#34;HR&#34;.&#34;LOB_TAB&#34; WHERE &#34;N1&#34;=:1
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="XSTRM72461"></a>
<div class="props_rev_3"><a id="GUID-1460240A-4AB8-47E9-BE40-83B0519A0365"></a>
<h3 id="XSTRM-GUID-1460240A-4AB8-47E9-BE40-83B0519A0365" class="sect3"><span class="enumeration_section">2.5.6</span> SQL Generation Demo</h3>
<div>
<p>A demo that performs SQL generation is available.</p>
<p>The demo uses the <code class="codeph">DBMS_XSTREAM_ADM</code> PL/SQL package to configure an XStream Out environment, and it uses an OCI client application to perform SQL generation.</p>
<p>The demo uses SQL generation to replicate DML changes from a source database to a destination database. Specifically, the demo creates the <code class="codeph">xsdemosg</code> schema in both the source database and the destination database. It creates various types of tables in the <code class="codeph">xsdemosg</code> schema at each database, including tables with LOB columns. It executes a set of DML statements on the tables in <code class="codeph">xsdemosg</code> schema in the source database. Oracle Streams components, such as a capture process and a queue, send the changes in the form of LCRs to an XStream outbound server that is also running on the source database. The outbound server makes the LCRs available to the demo client application.</p>
<p>The demo client application, when run, uses the OCI API to connect to the outbound server and receive the LCRs. The demo client application uses SQL generation to execute the changes that are encapsulated in the LCRs. Therefore, the client application replicates the changes made to <code class="codeph">xsdemosg</code> schema in the source database to the <code class="codeph">xsdemosg</code> in the destination database.</p>
<p>You can modify the demo to replicate changes to any schema. Both the schema and the replicated tables must exist on both the source database and the destination database. SQL generation is only possible for DML changes. Therefore, this demo cannot be used to replicate DDL changes.</p>
<p>This demo is available in the following location:</p>
<pre dir="ltr">$ORACLE_HOME/rdbms/demo/xstream/sqlgen
</pre>
<div class="infobox-note" id="GUID-1460240A-4AB8-47E9-BE40-83B0519A0365__GUID-506DA9D0-F1D5-4153-8CE6-5306A51C8B32">
<p class="notep1">Note:</p>
<p>The SQL generation demo is not available for the XStream Java API.</p>
</div>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5143">
<tr>
<td class="cellalignment5150">
<table class="cellalignment5148">
<tr>
<td class="cellalignment5147"><a href="xstrm_intro.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5147"><a href="xstrm_pt_xout.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2009, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5152">
<table class="cellalignment5146">
<tr>
<td class="cellalignment5147"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5147"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5147"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5147"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5147"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5147"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>