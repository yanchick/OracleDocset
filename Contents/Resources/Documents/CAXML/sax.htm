<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2700"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Package%20SAX%20APIs%20for%20C"></a><title>Package SAX APIs for C</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 726"/>
<meta name="dcterms.created" content="2013-04-05T15:50:7Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database XML C API Reference"/>
<meta name="dcterms.identifier" content="E15885-04"/>
<meta name="dcterms.isVersionOf" content="CAXML"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="range.htm" title="Previous" type="text/html"/>
<link rel="Next" href="schema.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E15885-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">11/22</span> <!-- End Header -->
<div id="CAXML5908" class="chapter"><a id="Saxpackage"></a>
<h1 class="chapter"><span class="secnum">7</span> <a id="sthref796"></a> <a id="sthref797"></a> <a id="sthref798"></a> Package SAX APIs for C</h1>
<p>SAX is a standard interface for event-based XML parsing, developed collaboratively by the members of the XML-DEV mailing list. To use SAX, an <code>xmlsaxcb</code> structure is initialized with function pointers and passed to one of the <code>XmlLoadSax</code> calls. A pointer to a user-defined context structure is also provided, and will be passed to each SAX function.</p>
<p>For event-based schemava validation APIs, refer to <a href="event.htm#Eventpackage">Chapter 4, &#34;Package Event APIs for C&#34;</a>.</p>
<p>This chapter contains the following section:</p>
<ul>
<li>
<p><a href="#Saxinterfaces">SAX Interface</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADXDK" href="../ADXDK/toc.htm"><span class="italic">Oracle XML Developer&#39;s Kit Programmer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink ADXDB" href="../ADXDB/toc.htm"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a></p>
</li>
</ul>
</div>
<div class="refentry"><a id="Saxinterfaces"></a>
<hr/>
<div id="CAXML5909" class="refsect1">
<h2 class="refsect1">SAX Interface</h2>
<p><a href="#Summarysax">Table 7-1</a> summarizes the methods available through the <code>SAX</code> interface.</p>
<div id="CAXML5910" class="tblformal">
<p class="titleintable"><a id="sthref799"></a><a id="Summarysax"></a>Table 7-1 Summary of SAX Methods</p>
<table class="cellalignment2920" title="Summary of SAX Methods" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t3">Function</th>
<th class="cellalignment2921" id="r1c2-t3">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxattributedecl">XmlSaxAttributeDecl()</a></p>
</td>
<td class="cellalignment2922" headers="r2c1-t3 r1c2-t3">
<p>Receives SAX notification of an attribute&#39;s declaration.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxcdata">XmlSaxCDATA()</a></p>
</td>
<td class="cellalignment2922" headers="r3c1-t3 r1c2-t3">
<p>Receives SAX notification of <code>CDATA</code>. Oracle extension.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxcharacters">XmlSaxCharacters()</a></p>
</td>
<td class="cellalignment2922" headers="r4c1-t3 r1c2-t3">
<p>Receives SAX notification of character data</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxcomment">XmlSaxComment()</a></p>
</td>
<td class="cellalignment2922" headers="r5c1-t3 r1c2-t3">
<p>Receives SAX notification of a comment.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxelementdecl">XmlSaxElementDecl()</a></p>
</td>
<td class="cellalignment2922" headers="r6c1-t3 r1c2-t3">
<p>Receives SAX notification of an element&#39;s declaration. Oracle extension.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxenddocument">XmlSaxEndDocument()</a></p>
</td>
<td class="cellalignment2922" headers="r7c1-t3 r1c2-t3">
<p>Receives SAX end-of-document notification.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxendelement">XmlSaxEndElement()</a></p>
</td>
<td class="cellalignment2922" headers="r8c1-t3 r1c2-t3">
<p>Receives SAX end-of-element notification.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxnotationdecl">XmlSaxNotationDecl()</a></p>
</td>
<td class="cellalignment2922" headers="r9c1-t3 r1c2-t3">
<p>Receives SAX notification of a notation declaration.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxpi">XmlSaxPI()</a></p>
</td>
<td class="cellalignment2922" headers="r10c1-t3 r1c2-t3">
<p>Receives SAX notification of a processing instruction.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxparsedentitydecl">XmlSaxParsedEntityDecl()</a></p>
</td>
<td class="cellalignment2922" headers="r11c1-t3 r1c2-t3">
<p>Receives SAX notification of a parsed entity declaration. Oracle extension.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r12c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxstartdocument">XmlSaxStartDocument()</a></p>
</td>
<td class="cellalignment2922" headers="r12c1-t3 r1c2-t3">
<p>Receives SAX start-of-document notification.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r13c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxstartelement">XmlSaxStartElement()</a></p>
</td>
<td class="cellalignment2922" headers="r13c1-t3 r1c2-t3">
<p>Receives SAX start-of-element notification.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r14c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxstartelementns">XmlSaxStartElementNS()</a></p>
</td>
<td class="cellalignment2922" headers="r14c1-t3 r1c2-t3">
<p>Receives SAX namespace-aware start-of-element notification.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r15c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxunparsedentitydecl">XmlSaxUnparsedEntityDecl()</a></p>
</td>
<td class="cellalignment2922" headers="r15c1-t3 r1c2-t3">
<p>Receives SAX notification of an unparsed entity declaration.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r16c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxwhitespace">XmlSaxWhitespace()</a></p>
</td>
<td class="cellalignment2922" headers="r16c1-t3 r1c2-t3">
<p>Receives SAX notification of ignorable (whitespace) data.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r17c1-t3" headers="r1c1-t3">
<p><a href="#Xmlsaxxmldecl">XmlSaxXmlDecl()</a></p>
</td>
<td class="cellalignment2922" headers="r17c1-t3 r1c2-t3">
<p>Receives SAX notification of an XML declaration. Oracle extension.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CAXML5911" class="refsect2"><a id="Xmlsaxattributedecl"></a>
<hr/>
<h3 class="refsect2"><a id="sthref800"></a><a id="sthref801"></a><a id="sthref802"></a>XmlSaxAttributeDecl()</h3>
<p>This event marks an element declaration in the DTD. The element&#39;s name and content will be in the data encoding. Note that an attribute may be declared before the element it belongs to!</p>
<p class="subhead1"><a id="CAXML5912"></a>Syntax</p>
<pre>xmlerr XmlSaxAttributeDecl(
   void *ctx, 
   oratext *elem, 
   oratext *attr, 
   oratext *body);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t4">Parameter</th>
<th class="cellalignment2921" id="r1c2-t4">In/Out</th>
<th class="cellalignment2921" id="r1c3-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t4" headers="r1c1-t4">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t4 r1c2-t4">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t4 r1c3-t4">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t4" headers="r1c1-t4">
<pre>elem
</pre></td>
<td class="cellalignment2922" headers="r3c1-t4 r1c2-t4">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t4 r1c3-t4">element for which the attribute is declared; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t4" headers="r1c1-t4">
<pre>attr
</pre></td>
<td class="cellalignment2922" headers="r4c1-t4 r1c2-t4">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t4 r1c3-t4">attribute&#39;s name; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t4" headers="r1c1-t4">
<pre>body
</pre></td>
<td class="cellalignment2922" headers="r5c1-t4 r1c2-t4">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r5c1-t4 r1c3-t4">body of an attribute declaration</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5913"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxattributedecl">XmlSaxAttributeDecl()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5916" class="refsect2"><a id="Xmlsaxcdata"></a>
<hr/>
<h3 class="refsect2"><a id="sthref803"></a><a id="sthref804"></a><a id="sthref805"></a>XmlSaxCDATA()</h3>
<p>This event handles <code>CDATA</code>, as distinct from <code>Text</code>. If no <code>XmlSaxCDATA</code> callback is provided, the Text callback will be invoked. The data will be in the data encoding, and the returned length is in characters, not bytes. See also <code>XmlSaxWhitespace</code>, which receiving notification about ignorable (whitespace formatting) character data.</p>
<p class="subhead1"><a id="CAXML5917"></a>Syntax</p>
<pre>xmlerr XmlSaxCDATA(
   void *ctx, 
   oratext *ch, 
   size_t len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t6">Parameter</th>
<th class="cellalignment2921" id="r1c2-t6">In/Out</th>
<th class="cellalignment2921" id="r1c3-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t6" headers="r1c1-t6">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t6 r1c3-t6">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t6" headers="r1c1-t6">
<pre>ch
</pre></td>
<td class="cellalignment2922" headers="r3c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t6 r1c3-t6">pointer to <code>CDATA</code>; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t6" headers="r1c1-t6">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t6 r1c3-t6">length of <code>CDATA</code>, in characters</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5918"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxwhitespace">XmlSaxWhitespace()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5919" class="refsect2"><a id="Xmlsaxcharacters"></a>
<hr/>
<h3 class="refsect2"><a id="sthref806"></a><a id="sthref807"></a><a id="sthref808"></a>XmlSaxCharacters()</h3>
<p>This event marks character data, either <code>Text</code> or <code>CDATA</code>. If an <code>XmlSaxCDATA</code> callback is provided, then <code>CDATA</code> will be send to that instead; with no <code>XmlSaxCDATA</code> callback, both <code>Text</code> and <code>CDATA</code> go to the <code>XmlSaxCharacters</code> callback. The data will be in the data encoding, and the returned length is in characters, not bytes. See also <code>XmlSaxWhitespace</code>, which receiving notification about ignorable (whitespace formatting) character data.</p>
<p class="subhead1"><a id="CAXML5920"></a>Syntax</p>
<pre>xmlerr XmlSaxCharacters(
   void *ctx, 
   oratext *ch, 
   size_t len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t8">Parameter</th>
<th class="cellalignment2921" id="r1c2-t8">In/Out</th>
<th class="cellalignment2921" id="r1c3-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t8" headers="r1c1-t8">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t8 r1c2-t8">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t8 r1c3-t8">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t8" headers="r1c1-t8">
<pre>ch
</pre></td>
<td class="cellalignment2922" headers="r3c1-t8 r1c2-t8">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t8 r1c3-t8">pointer to data; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t8" headers="r1c1-t8">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t8 r1c2-t8">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t8 r1c3-t8">length of data, in characters</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5921"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxwhitespace">XmlSaxWhitespace()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5922" class="refsect2"><a id="Xmlsaxcomment"></a>
<hr/>
<h3 class="refsect2"><a id="sthref809"></a><a id="sthref810"></a><a id="sthref811"></a>XmlSaxComment()</h3>
<p>This event marks a comment in the XML document. The comment&#39;s data will be in the data encoding. Oracle extension, not in SAX standard.</p>
<p class="subhead1"><a id="CAXML5923"></a>Syntax</p>
<pre>xmlerr XmlSaxComment(
   void *ctx, 
   oratext *data);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t10">Parameter</th>
<th class="cellalignment2921" id="r1c2-t10">In/Out</th>
<th class="cellalignment2921" id="r1c3-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t10" headers="r1c1-t10">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t10 r1c2-t10">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t10 r1c3-t10">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t10" headers="r1c1-t10">
<pre>data
</pre></td>
<td class="cellalignment2922" headers="r3c1-t10 r1c2-t10">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t10 r1c3-t10">comment&#39;s data; data encoding</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5924"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5925" class="refsect2"><a id="Xmlsaxelementdecl"></a>
<hr/>
<h3 class="refsect2"><a id="sthref812"></a><a id="sthref813"></a><a id="sthref814"></a>XmlSaxElementDecl()</h3>
<p>This event marks an element declaration in the DTD. The element&#39;s name and content will be in the data encoding.</p>
<p class="subhead1"><a id="CAXML5926"></a>Syntax</p>
<pre>xmlerr XmlSaxElementDecl(
   void *ctx, 
   oratext *name, 
   oratext *content);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t11">Parameter</th>
<th class="cellalignment2921" id="r1c2-t11">In/Out</th>
<th class="cellalignment2921" id="r1c3-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t11" headers="r1c1-t11">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t11 r1c2-t11">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t11 r1c3-t11">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t11" headers="r1c1-t11">
<pre>name
</pre></td>
<td class="cellalignment2922" headers="r3c1-t11 r1c2-t11">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t11 r1c3-t11">element&#39;s name</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t11" headers="r1c1-t11">
<pre>content
</pre></td>
<td class="cellalignment2922" headers="r4c1-t11 r1c2-t11">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t11 r1c3-t11">element&#39;s context model</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5927"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxattributedecl">XmlSaxAttributeDecl()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5928" class="refsect2"><a id="Xmlsaxenddocument"></a>
<hr/>
<h3 class="refsect2"><a id="sthref815"></a><a id="sthref816"></a><a id="sthref817"></a>XmlSaxEndDocument()</h3>
<p>The last SAX event, called once for each document, indicating the end of the document. Matching event is <code>XmlSaxStartDocument</code>.</p>
<p class="subhead1"><a id="CAXML5929"></a>Syntax</p>
<pre>xmlerr XmlSaxEndDocument(
   void *ctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t13">Parameter</th>
<th class="cellalignment2921" id="r1c2-t13">In/Out</th>
<th class="cellalignment2921" id="r1c3-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t13" headers="r1c1-t13">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t13 r1c2-t13">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t13 r1c3-t13">user&#39;s SAX context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5930"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxstartdocument">XmlSaxStartDocument()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5931" class="refsect2"><a id="Xmlsaxendelement"></a>
<hr/>
<h3 class="refsect2"><a id="sthref818"></a><a id="sthref819"></a><a id="sthref820"></a>XmlSaxEndElement()</h3>
<p>This event marks the close of an element; it matches the <code>XmlSaxStartElement</code> or <code>XmlSaxStartElementNS</code> events. The name is the <code>tagName</code> of the element (which may be a qualified name for namespace-aware elements) and is in the data encoding.</p>
<p class="subhead1"><a id="CAXML5932"></a>Syntax</p>
<pre>xmlerr XmlSaxEndElement(
   void *ctx, 
   oratext *name);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t15">Parameter</th>
<th class="cellalignment2921" id="r1c2-t15">In/Out</th>
<th class="cellalignment2921" id="r1c3-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t15" headers="r1c1-t15">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t15 r1c2-t15">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t15 r1c3-t15">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t15" headers="r1c1-t15">
<pre>name
</pre></td>
<td class="cellalignment2922" headers="r3c1-t15 r1c2-t15">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t15 r1c3-t15">name of ending element; data encoding</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5933"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxendelement">XmlSaxEndElement()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5937" class="refsect2"><a id="Xmlsaxnotationdecl"></a>
<hr/>
<h3 class="refsect2"><a id="sthref821"></a><a id="sthref822"></a><a id="sthref823"></a>XmlSaxNotationDecl()</h3>
<p>The even marks the declaration of a notation in the DTD. The notation&#39;s name, public ID, and system ID will all be in the data encoding. Both IDs are optional and may be <code>NULL</code>.</p>
<p class="subhead1"><a id="CAXML5938"></a>Syntax</p>
<pre>xmlerr XmlSaxNotationDecl(
   void *ctx, 
   oratext *name, 
   oratext *pubId, 
   oratext *sysId);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t17">Parameter</th>
<th class="cellalignment2921" id="r1c2-t17">In/Out</th>
<th class="cellalignment2921" id="r1c3-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t17" headers="r1c1-t17">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t17 r1c3-t17">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t17" headers="r1c1-t17">
<pre>name
</pre></td>
<td class="cellalignment2922" headers="r3c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t17 r1c3-t17">notation&#39;s name; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t17" headers="r1c1-t17">
<pre>pubId
</pre></td>
<td class="cellalignment2922" headers="r4c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t17 r1c3-t17">notation&#39;s public ID as data encoding, or <code>NULL</code></td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t17" headers="r1c1-t17">
<pre>sysId
</pre></td>
<td class="cellalignment2922" headers="r5c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r5c1-t17 r1c3-t17">notation&#39;s system ID as data encoding, or <code>NULL</code></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5939"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5940" class="refsect2"><a id="Xmlsaxpi"></a>
<hr/>
<h3 class="refsect2"><a id="sthref824"></a><a id="sthref825"></a><a id="sthref826"></a>XmlSaxPI()</h3>
<p>This event marks a <code>ProcessingInstruction</code>. The <code>ProcessingInstruction</code>s target and data will be in the data encoding. There is always a target, but the data may be <code>NULL</code>.</p>
<p class="subhead1"><a id="CAXML5941"></a>Syntax</p>
<pre>xmlerr XmlSaxPI(
   void *ctx, 
   oratext *target, 
   oratext *data);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t18">Parameter</th>
<th class="cellalignment2921" id="r1c2-t18">In/Out</th>
<th class="cellalignment2921" id="r1c3-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t18" headers="r1c1-t18">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t18 r1c2-t18">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t18 r1c3-t18">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t18" headers="r1c1-t18">
<pre>target
</pre></td>
<td class="cellalignment2922" headers="r3c1-t18 r1c2-t18">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t18 r1c3-t18">PI&#39;s target; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t18" headers="r1c1-t18">
<pre>data
</pre></td>
<td class="cellalignment2922" headers="r4c1-t18 r1c2-t18">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t18 r1c3-t18">PI&#39;s data as data encoding, or <code>NULL</code></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5942"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5943" class="refsect2"><a id="Xmlsaxparsedentitydecl"></a>
<hr/>
<h3 class="refsect2"><a id="sthref827"></a><a id="sthref828"></a><a id="sthref829"></a>XmlSaxParsedEntityDecl()</h3>
<p>Marks an parsed entity declaration in the DTD. The parsed entity&#39;s name, public ID, system ID, and notation name will all be in the data encoding.</p>
<p class="subhead1"><a id="CAXML5944"></a>Syntax</p>
<pre>xmlerr XmlSaxParsedEntityDecl(
   void *ctx, 
   oratext *name, 
   oratext *value, 
   oratext *pubId, 
   oratext *sysId, 
   boolean general);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t19">Parameter</th>
<th class="cellalignment2921" id="r1c2-t19">In/Out</th>
<th class="cellalignment2921" id="r1c3-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t19" headers="r1c1-t19">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t19 r1c3-t19">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t19" headers="r1c1-t19">
<pre>name
</pre></td>
<td class="cellalignment2922" headers="r3c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t19 r1c3-t19">entity&#39;s name; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t19" headers="r1c1-t19">
<pre>value
</pre></td>
<td class="cellalignment2922" headers="r4c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t19 r1c3-t19">entity&#39;s value; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t19" headers="r1c1-t19">
<pre>pubId
</pre></td>
<td class="cellalignment2922" headers="r5c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r5c1-t19 r1c3-t19">entity&#39;s public ID as data encoding, or <code>NULL</code></td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t19" headers="r1c1-t19">
<pre>sysId
</pre></td>
<td class="cellalignment2922" headers="r6c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r6c1-t19 r1c3-t19">entity&#39;s system ID; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r7c1-t19" headers="r1c1-t19">
<pre>general
</pre></td>
<td class="cellalignment2922" headers="r7c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r7c1-t19 r1c3-t19"><code>TRUE</code> if general entity, <code>FALSE</code> if parameter entity</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5945"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxunparsedentitydecl">XmlSaxUnparsedEntityDecl()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5946" class="refsect2"><a id="Xmlsaxstartdocument"></a>
<hr/>
<h3 class="refsect2"><a id="sthref830"></a><a id="sthref831"></a><a id="sthref832"></a>XmlSaxStartDocument()</h3>
<p>The first SAX event, called once for each document, indicating the start of the document. Matching event is <code>XmlSaxEndDocument</code>.</p>
<p class="subhead1"><a id="CAXML5947"></a>Syntax</p>
<pre>xmlerr XmlSaxStartDocument(
   void *ctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t21">Parameter</th>
<th class="cellalignment2921" id="r1c2-t21">In/Out</th>
<th class="cellalignment2921" id="r1c3-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t21" headers="r1c1-t21">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t21 r1c2-t21">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t21 r1c3-t21">user&#39;s SAX context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5948"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxenddocument">XmlSaxEndDocument()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5949" class="refsect2"><a id="Xmlsaxstartelement"></a>
<hr/>
<h3 class="refsect2"><a id="sthref833"></a><a id="sthref834"></a><a id="sthref835"></a>XmlSaxStartElement()</h3>
<p>This event marks the start of an element. Note this is the original SAX 1 non-namespace-aware version; <code>XmlSaxStartElementNS</code> is the SAX 2 namespace-aware version. If both are registered, only the NS version will be called. The element&#39;s name will be in the data encoding, as are all the attribute parts. See the functions in the <code>NamedNodeMap</code> interface for operating on the attributes map. The matching function is <code>XmlSaxEndElement</code> (there is no namespace aware version of this function).</p>
<p class="subhead1"><a id="CAXML5950"></a>Syntax</p>
<pre>xmlerr XmlSaxStartElement(
   void *ctx, 
   oratext *name, 
   xmlnodelist *attrs);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t23">Parameter</th>
<th class="cellalignment2921" id="r1c2-t23">In/Out</th>
<th class="cellalignment2921" id="r1c3-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t23" headers="r1c1-t23">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t23 r1c2-t23">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t23 r1c3-t23">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t23" headers="r1c1-t23">
<pre>name
</pre></td>
<td class="cellalignment2922" headers="r3c1-t23 r1c2-t23">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t23 r1c3-t23">element&#39;s name; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t23" headers="r1c1-t23">
<pre>attrs
</pre></td>
<td class="cellalignment2922" headers="r4c1-t23 r1c2-t23">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t23 r1c3-t23"><code>NamedNodeMap</code> of element&#39;s attributes</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5951"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxendelement">XmlSaxEndElement()</a>, <a href="dom.htm#Xmldomgetnodemaplength">XmlDomGetNodeMapLength()</a> and <a href="dom.htm#Xmldomremovenameditem">XmlDomRemoveNamedItem()</a> in <a href="dom.htm#Dompackage">Chapter 3, &#34;Package DOM APIs for C&#34;</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5952" class="refsect2"><a id="Xmlsaxstartelementns"></a>
<hr/>
<h3 class="refsect2"><a id="sthref836"></a><a id="sthref837"></a><a id="sthref838"></a>XmlSaxStartElementNS()</h3>
<p>This event marks the start of an element. Note this is the new SAX 2 namespace-aware version; XmlSaxStartElement is the SAX 1 non-namespace-aware version. If both are registered, only the NS version will be called. The element&#39;s qualified name, local name, and namespace URI will be in the data encoding, as are all the attribute parts. See the functions in the <code>NamedNodeMap</code> interface for operating on the attributes map. The matching function is <code>XmlSaxEndElement</code> (there is no namespace aware version of this function).</p>
<p class="subhead1"><a id="CAXML5953"></a>Syntax</p>
<pre>xmlerr XmlSaxStartElementNS(
   void *ctx, 
   oratext *qname, 
   oratext *local, 
   oratext *nsp, 
   xmlnodelist *attrs);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t25">Parameter</th>
<th class="cellalignment2921" id="r1c2-t25">In/Out</th>
<th class="cellalignment2921" id="r1c3-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t25" headers="r1c1-t25">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t25 r1c2-t25">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t25 r1c3-t25">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t25" headers="r1c1-t25">
<pre>qname
</pre></td>
<td class="cellalignment2922" headers="r3c1-t25 r1c2-t25">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t25 r1c3-t25">element&#39;s qualified name; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t25" headers="r1c1-t25">
<pre>local
</pre></td>
<td class="cellalignment2922" headers="r4c1-t25 r1c2-t25">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t25 r1c3-t25">element&#39;s namespace local name; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t25" headers="r1c1-t25">
<pre>nsp
</pre></td>
<td class="cellalignment2922" headers="r5c1-t25 r1c2-t25">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r5c1-t25 r1c3-t25">element&#39;s namespace URI; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t25" headers="r1c1-t25">
<pre>attrs
</pre></td>
<td class="cellalignment2922" headers="r6c1-t25 r1c2-t25">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r6c1-t25 r1c3-t25"><code>NodeList</code> of element&#39;s attributes, or <code>NULL</code></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5954"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxstartelement">XmlSaxStartElement()</a>, <a href="#Xmlsaxendelement">XmlSaxEndElement()</a>, <a href="dom.htm#Xmldomgetnodemaplength">XmlDomGetNodeMapLength()</a> and <a href="dom.htm#Xmldomremovenameditem">XmlDomRemoveNamedItem()</a> in <a href="dom.htm#Dompackage">Package DOM APIs for C</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5955" class="refsect2"><a id="Xmlsaxunparsedentitydecl"></a>
<hr/>
<h3 class="refsect2"><a id="sthref839"></a><a id="sthref840"></a><a id="sthref841"></a>XmlSaxUnparsedEntityDecl()</h3>
<p>Marks an unparsed entity declaration in the DTD, see <code>XmlSaxParsedEntityDecl</code> for the parsed entity version. The unparsed entity&#39;s name, public ID, system ID, and notation name will all be in the data encoding.</p>
<p class="subhead1"><a id="CAXML5956"></a>Syntax</p>
<pre>xmlerr XmlSaxUnparsedEntityDecl(
   void *ctx, 
   oratext *name, 
   oratext *pubId, 
   oratext *sysId, 
   oratext *note);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t27">Parameter</th>
<th class="cellalignment2921" id="r1c2-t27">In/Out</th>
<th class="cellalignment2921" id="r1c3-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t27" headers="r1c1-t27">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t27 r1c2-t27">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t27 r1c3-t27">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t27" headers="r1c1-t27">
<pre>name
</pre></td>
<td class="cellalignment2922" headers="r3c1-t27 r1c2-t27">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t27 r1c3-t27">entity&#39;s name; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t27" headers="r1c1-t27">
<pre>pubId
</pre></td>
<td class="cellalignment2922" headers="r4c1-t27 r1c2-t27">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t27 r1c3-t27">entity&#39;s public ID as data encoding, or <code>NULL</code></td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t27" headers="r1c1-t27">
<pre>sysId
</pre></td>
<td class="cellalignment2922" headers="r5c1-t27 r1c2-t27">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r5c1-t27 r1c3-t27">entity&#39;s system ID; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t27" headers="r1c1-t27">
<pre>note
</pre></td>
<td class="cellalignment2922" headers="r6c1-t27 r1c2-t27">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r6c1-t27 r1c3-t27">entity&#39;s notation name; data encoding</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5957"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxparsedentitydecl">XmlSaxParsedEntityDecl()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5958" class="refsect2"><a id="Xmlsaxwhitespace"></a>
<hr/>
<h3 class="refsect2"><a id="sthref842"></a><a id="sthref843"></a><a id="sthref844"></a>XmlSaxWhitespace()</h3>
<p>This event marks ignorable whitespace data such as newlines, and indentation between lines. The matching function is <code>XmlSaxCharacters</code>, which receives notification of normal character data. The data is in the data encoding, and the returned length is in characters, not bytes.</p>
<p class="subhead1"><a id="CAXML5959"></a>Syntax</p>
<pre>xmlerr XmlSaxWhitespace(
   void *ctx, 
   oratext *ch, 
   size_t len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t29">Parameter</th>
<th class="cellalignment2921" id="r1c2-t29">In/Out</th>
<th class="cellalignment2921" id="r1c3-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t29" headers="r1c1-t29">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t29 r1c2-t29">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t29 r1c3-t29">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t29" headers="r1c1-t29">
<pre>ch
</pre></td>
<td class="cellalignment2922" headers="r3c1-t29 r1c2-t29">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t29 r1c3-t29">pointer to data; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t29" headers="r1c1-t29">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t29 r1c2-t29">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t29 r1c3-t29">length of data, in characters</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5960"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlsaxcharacters">XmlSaxCharacters()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5961" class="refsect2"><a id="Xmlsaxxmldecl"></a>
<hr/>
<h3 class="refsect2"><a id="sthref845"></a><a id="sthref846"></a><a id="sthref847"></a>XmlSaxXmlDecl()</h3>
<p>This event marks an XML declaration. The <code>XmlSaxStartDocument</code> event is always first; if this callback is registered and an <code>XMLDecl</code> exists, it will be the second event. The encoding flag says whether an encoding was specified. Since the document&#39;s own encoding specification may be overridden (or wrong), and the input will be converted to the data encoding anyway, the actual encoding specified in the document is not provided. For the standalone flag, <code>-1</code> will be returned if it was not specified, otherwise <code>0</code> for <code>FALSE</code>, 1 for <code>TRUE</code>.</p>
<p class="subhead1"><a id="CAXML5962"></a>Syntax</p>
<pre>xmlerr XmlSaxXmlDecl(
   void *ctx, 
   oratext *version, 
   boolean encoding, 
   sword standalone);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t31">Parameter</th>
<th class="cellalignment2921" id="r1c2-t31">In/Out</th>
<th class="cellalignment2921" id="r1c3-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t31" headers="r1c1-t31">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t31 r1c2-t31">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t31 r1c3-t31">user&#39;s SAX context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t31" headers="r1c1-t31">
<pre>version
</pre></td>
<td class="cellalignment2922" headers="r3c1-t31 r1c2-t31">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t31 r1c3-t31">version string from XMLDecl; data encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t31" headers="r1c1-t31">
<pre>encoding
</pre></td>
<td class="cellalignment2922" headers="r4c1-t31 r1c2-t31">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t31 r1c3-t31">whether encoding was specified</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t31" headers="r1c1-t31">
<pre>standalone
</pre></td>
<td class="cellalignment2922" headers="r5c1-t31 r1c2-t31">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r5c1-t31 r1c3-t31">value of the standalone document; <code>&lt; 0</code> if not specified</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5963"></a>Returns</p>
<p><code>(xmlerr)</code> error code, <code>XMLERR_OK [0]</code> for success</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2913">
<tr>
<td class="cellalignment2922">
<table class="cellalignment2918">
<tr>
<td class="cellalignment2917"><a href="range.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2917"><a href="schema.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2925">
<table class="cellalignment2916">
<tr>
<td class="cellalignment2917"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2917"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2917"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2917"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2917"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2917"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>