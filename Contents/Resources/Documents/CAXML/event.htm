<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2693"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Package%20Event%20APIs%20for%20C"></a><title>Package Event APIs for C</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 726"/>
<meta name="dcterms.created" content="2013-04-05T15:50:6Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database XML C API Reference"/>
<meta name="dcterms.identifier" content="E15885-04"/>
<meta name="dcterms.isVersionOf" content="CAXML"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="dom.htm" title="Previous" type="text/html"/>
<link rel="Next" href="orastream.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E15885-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">8/22</span> <!-- End Header -->
<div id="CAXML02000" class="chapter"><a id="Eventpackage"></a>
<h1 class="chapter"><span class="secnum">4</span> <a id="sthref514"></a> <a id="sthref515"></a> <a id="sthref516"></a> Package Event APIs for C</h1>
<p>This chapter contains the following sections:</p>
<ul>
<li>
<p><a href="#Eventinterfaces">Event Interface</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADXDK" href="../ADXDK/toc.htm"><span class="italic">Oracle XML Developer&#39;s Kit Programmer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink ADXDB" href="../ADXDB/toc.htm"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a></p>
</li>
</ul>
</div>
<div class="refentry"><a id="Eventinterfaces"></a>
<hr/>
<div id="CAXML5575" class="refsect1">
<h2 class="refsect1">Event Interface</h2>
<p><a href="#Summaryrange">Table 4-1</a> summarizes the methods available through the <code>Event</code> interface.</p>
<div id="CAXML5576" class="tblformal">
<p class="titleintable"><a id="sthref517"></a><a id="Summaryrange"></a>Table 4-1 Summary of Event Methods</p>
<table class="cellalignment2920" title="Summary of Event Methods" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t3">Function</th>
<th class="cellalignment2921" id="r1c2-t3">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#BABFFFFD">XmlEvCleanPPCtx()</a></p>
</td>
<td class="cellalignment2922" headers="r2c1-t3 r1c2-t3">
<p>Cleans up intenal structures related to a parse operation. This will not destroy the event context. The event context can be reused after this call.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#BABICDAI">XmlEvCreatePPCtx()</a></p>
</td>
<td class="cellalignment2922" headers="r3c1-t3 r1c2-t3">
<p>Creates an Event context in pull-parse mode.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#BEIIICFA">XmlEvCreateSVCtx()</a></p>
</td>
<td class="cellalignment2922" headers="r4c1-t3 r1c2-t3">
<p>Creates an event context for the streaming validadtor.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#BABBJJAH">XmlEvDestroyPPCtx()</a></p>
</td>
<td class="cellalignment2922" headers="r5c1-t3 r1c2-t3">
<p>Destroys the event context. Terminates parsing. May be called at any time during a parsing operation.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#BEIJEJBJ">XmlEvDestroySVCtx()</a></p>
</td>
<td class="cellalignment2922" headers="r6c1-t3 r1c2-t3">
<p>Terminates an event context created by a streaming validator.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#BABHJGHA">XmlEvGetAttrCount()</a></p>
</td>
<td class="cellalignment2922" headers="r7c1-t3 r1c2-t3">
<p>Retrieves the number of attributes for the <code>XML_EVENT_START_ELEMENT</code> event.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#BABIDCGI">XmlEvGetAttrDeclBody()</a></p>
</td>
<td class="cellalignment2922" headers="r8c1-t3 r1c2-t3">
<p>Retrieves the attribute body in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#BABFEBJA">XmlEvGetAttrDeclBody0()</a></p>
</td>
<td class="cellalignment2922" headers="r9c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated attribute body in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#BABCIECH">XmlEvGetAttrDeclCount()</a></p>
</td>
<td class="cellalignment2922" headers="r10c1-t3 r1c2-t3">
<p>Retreives the number of attributes in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#BABCEAIB">XmlEvGetAttrDeclElName()</a></p>
</td>
<td class="cellalignment2922" headers="r11c1-t3 r1c2-t3">
<p>Retrieves the element name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r12c1-t3" headers="r1c1-t3">
<p><a href="#BABJECGJ">XmlEvGetAttrDeclElName0()</a></p>
</td>
<td class="cellalignment2922" headers="r12c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated element name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r13c1-t3" headers="r1c1-t3">
<p><a href="#BABDDIJB">XmlEvGetAttrDeclLocalName()</a></p>
</td>
<td class="cellalignment2922" headers="r13c1-t3 r1c2-t3">
<p>Retrieves the local name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r14c1-t3" headers="r1c1-t3">
<p><a href="#BABGGFJD">XmlEvGetAttrDeclLocalName0()</a></p>
</td>
<td class="cellalignment2922" headers="r14c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated local name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r15c1-t3" headers="r1c1-t3">
<p><a href="#BABIGBEC">XmlEvGetAttrDeclName()</a></p>
</td>
<td class="cellalignment2922" headers="r15c1-t3 r1c2-t3">
<p>Retrieves the attribute name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r16c1-t3" headers="r1c1-t3">
<p><a href="#BABGIHJF">XmlEvGetAttrDeclName0()</a></p>
</td>
<td class="cellalignment2922" headers="r16c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated attribute name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r17c1-t3" headers="r1c1-t3">
<p><a href="#BABGAIBE">XmlEvGetAttrDeclPrefix()</a></p>
</td>
<td class="cellalignment2922" headers="r17c1-t3 r1c2-t3">
<p>Retrieves the attribute prefix in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r18c1-t3" headers="r1c1-t3">
<p><a href="#BABDECBJ">XmlEvGetAttrDeclPrefix0()</a></p>
</td>
<td class="cellalignment2922" headers="r18c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated attribute prefix in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r19c1-t3" headers="r1c1-t3">
<p><a href="#BABDDJHH">XmlEvGetAttrID()</a></p>
</td>
<td class="cellalignment2922" headers="r19c1-t3 r1c2-t3">
<p>Retrieves the ID for the attribute&#39;s <code>QNAME</code>, for <code>XML_EVENT_START_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r20c1-t3" headers="r1c1-t3">
<p><a href="#BABGJABI">XmlEvGetAttrLocalName()</a></p>
</td>
<td class="cellalignment2922" headers="r20c1-t3 r1c2-t3">
<p>Retrieves the attribute local name for the <code>XML_EVENT_START_ELEMENT</code> events. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r21c1-t3" headers="r1c1-t3">
<p><a href="#BABCDCBF">XmlEvGetAttrLocalName0()</a></p>
</td>
<td class="cellalignment2922" headers="r21c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated attribute name for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r22c1-t3" headers="r1c1-t3">
<p><a href="#BABBHICC">XmlEvGetAttrName()</a></p>
</td>
<td class="cellalignment2922" headers="r22c1-t3 r1c2-t3">
<p>Retrieves the attribute name for the <code>XML_EVENT_START_ELEMENT</code> events. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r23c1-t3" headers="r1c1-t3">
<p><a href="#BABHGEDB">XmlEvGetAttrName0()</a></p>
</td>
<td class="cellalignment2922" headers="r23c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated attribute name for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r24c1-t3" headers="r1c1-t3">
<p><a href="#BABBADHJ">XmlEvGetAttrPrefix()</a></p>
</td>
<td class="cellalignment2922" headers="r24c1-t3 r1c2-t3">
<p>Retrieves the prefix tag for <code>XML_EVENT_START_ELEMENT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r25c1-t3" headers="r1c1-t3">
<p><a href="#BABBJAFD">XmlEvGetAttrPrefix0()</a></p>
</td>
<td class="cellalignment2922" headers="r25c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated attribute prefix for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r26c1-t3" headers="r1c1-t3">
<p><a href="#BABGDDID">XmlEvGetAttrURI()</a></p>
</td>
<td class="cellalignment2922" headers="r26c1-t3 r1c2-t3">
<p>Retrieves the attribute URI for the <code>XML_EVENT_START_ELEMENT</code> events. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r27c1-t3" headers="r1c1-t3">
<p><a href="#BABCJJGJ">XmlEvGetAttrURI0()</a></p>
</td>
<td class="cellalignment2922" headers="r27c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated attribute URI for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r28c1-t3" headers="r1c1-t3">
<p><a href="#BABCBGCA">XmlEvGetAttrUriID()</a></p>
</td>
<td class="cellalignment2922" headers="r28c1-t3 r1c2-t3">
<p>Retrieves the ID for the attribute&#39;s URI, for <code>XML_EVENT_START_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r29c1-t3" headers="r1c1-t3">
<p><a href="#BABJICGA">XmlEvGetAttrValue()</a></p>
</td>
<td class="cellalignment2922" headers="r29c1-t3 r1c2-t3">
<p>Retrieves the attribute value for one of the <code>XML_EVENT_START_ELEMENT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r30c1-t3" headers="r1c1-t3">
<p><a href="#BABHBFFB">XmlEvGetAttrValue0()</a></p>
</td>
<td class="cellalignment2922" headers="r30c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated attribute value for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r31c1-t3" headers="r1c1-t3">
<p><a href="#BABGHBCJ">XmlEvGetElDeclContent()</a></p>
</td>
<td class="cellalignment2922" headers="r31c1-t3 r1c2-t3">
<p>Retrieves the element declaration content for <code>XML_EVENT_ELEMENT_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r32c1-t3" headers="r1c1-t3">
<p><a href="#BABCAABJ">XmlEvGetElDeclContent0()</a></p>
</td>
<td class="cellalignment2922" headers="r32c1-t3 r1c2-t3">
<p>Retrieves the element declaration content for <code>XML_EVENT_ELEMENT_DECLARATION</code>.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r33c1-t3" headers="r1c1-t3">
<p><a href="#BABHFIEF">XmlEvGetEncoding()</a></p>
</td>
<td class="cellalignment2922" headers="r33c1-t3 r1c2-t3">
<p>Returns the value of the encoding specified.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r34c1-t3" headers="r1c1-t3">
<p><a href="#BABBDHCJ">XmlEvGetError()</a></p>
</td>
<td class="cellalignment2922" headers="r34c1-t3 r1c2-t3">
<p>Retrieves the error number when the <code>XML_EVENT_FATAL_ERROR</code> or <code>XML_EVENT_ERROR</code> event is returned by an <a href="#BABIFHCA">XmlEvNext()</a></p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r35c1-t3" headers="r1c1-t3">
<p><a href="#BABBFIDA">XmlEvGetName()</a></p>
</td>
<td class="cellalignment2922" headers="r35c1-t3 r1c2-t3">
<p>Retrurns the name of for either <code>XML_EVENT_START_ELEMENT</code> or <code>XML_EVENT_END_ELEMENT</code> events, and the length of the event in the <code>OUT</code> <code>len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r36c1-t3" headers="r1c1-t3">
<p><a href="#BABGFBBH">XmlEvGetName0()</a></p>
</td>
<td class="cellalignment2922" headers="r36c1-t3 r1c2-t3">
<p>Retrieves a <code>NULL</code>-terminated name for either <code>XML_EVENT_START_ELEMENT</code> or <code>XML_EVENT_END_ELEMENT</code> events</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r37c1-t3" headers="r1c1-t3">
<p><a href="#BABJBHCD">XmlEvGetLocalName()</a></p>
</td>
<td class="cellalignment2922" headers="r37c1-t3 r1c2-t3">
<p>Retrieves the local name tag for either <code>XML_EVENT_START_ELEMENT</code> or <code>XML_EVENT_END_ELEMENT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter:</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r38c1-t3" headers="r1c1-t3">
<p><a href="#BABGEAGA">XmlEvGetLocalName0()</a></p>
</td>
<td class="cellalignment2922" headers="r38c1-t3 r1c2-t3">
<p>Retrieves a <code>NULL</code>-terminated local name tag for either <code>XML_EVENT_START_ELEMENT</code> or <code>XML_EVENT_END_ELEMENT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter:</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r39c1-t3" headers="r1c1-t3">
<p><a href="#BABBJHBB">XmlEvGetLocation()</a></p>
</td>
<td class="cellalignment2922" headers="r39c1-t3 r1c2-t3">
<p>Retrieves the location during parsing, as <code>OUT</code> parameters for the line number of the input stream and its path.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r40c1-t3" headers="r1c1-t3">
<p><a href="#BABCIJDA">XmlEvGetPIData()</a></p>
</td>
<td class="cellalignment2922" headers="r40c1-t3 r1c2-t3">
<p>Retrieves the text for <code>XML_EVENT_PI</code> or <code>XML_EVENT_PI_CONT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r41c1-t3" headers="r1c1-t3">
<p><a href="#BABBCJIB">XmlEvGetPIData0()</a></p>
</td>
<td class="cellalignment2922" headers="r41c1-t3 r1c2-t3">
<p>Retrieves <code>NULL</code>-terminated text for <code>XML_EVENT_PI</code> or <code>XML_EVENT_PI_CONT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r42c1-t3" headers="r1c1-t3">
<p><a href="#BABIAEGB">XmlEvGetPITarget()</a></p>
</td>
<td class="cellalignment2922" headers="r42c1-t3 r1c2-t3">
<p>Retrieves the target for <code>XML_EVENT_PI</code> and <code>XML_EVENT_PI_CONT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r43c1-t3" headers="r1c1-t3">
<p><a href="#BABDIBBJ">XmlEvGetPITarget0()</a></p>
</td>
<td class="cellalignment2922" headers="r43c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated target for <code>XML_EVENT_PI</code> and <code>XML_EVENT_PI_CONT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r44c1-t3" headers="r1c1-t3">
<p><a href="#BABIDHAH">XmlEvGetPEIsGen()</a></p>
</td>
<td class="cellalignment2922" headers="r44c1-t3 r1c2-t3">
<p>Determines if the general entity was declared, <code>XML_EVENT_PE_DECLARATION</code>.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r45c1-t3" headers="r1c1-t3">
<p><a href="#BABHCIFB">XmlEvGetPERepl()</a></p>
</td>
<td class="cellalignment2922" headers="r45c1-t3 r1c2-t3">
<p>Retrieves the replacement text of PE declaration, <code>XML_EVENT_PE_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r46c1-t3" headers="r1c1-t3">
<p><a href="#BABDFFHJ">XmlEvGetPERepl0()</a></p>
</td>
<td class="cellalignment2922" headers="r46c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated replacement text of PE declaration, <code>XML_EVENT_PE_DECLARATION</code>.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r47c1-t3" headers="r1c1-t3">
<p><a href="#BABICHFH">XmlEvGetPrefix()</a></p>
</td>
<td class="cellalignment2922" headers="r47c1-t3 r1c2-t3">
<p>Retrieves the prefix tag for one of either <code>XML_EVENT_START_ELEMENT</code> or <code>XML_EVENT_END_ELEMENT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r48c1-t3" headers="r1c1-t3">
<p><a href="#BABDHAJE">XmlEvGetPrefix0()</a></p>
</td>
<td class="cellalignment2922" headers="r48c1-t3 r1c2-t3">
<p>Retrieves the prefix tag for one of either <code>XML_EVENT_START_ELEMENT</code> or <code>XML_EVENT_END_ELEMENT</code> events..</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r49c1-t3" headers="r1c1-t3">
<p><a href="#BABFCHIC">XmlEvGetPubId()</a></p>
</td>
<td class="cellalignment2922" headers="r49c1-t3 r1c2-t3">
<p>Retrieves the public id for <code>XML_EVENT_PE_DECLARATION</code>, <code>XML_EVENT_UE_DECLARATION</code>, or <code>XML_EVENT_NOTATION_DECLARATION</code> events; also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r50c1-t3" headers="r1c1-t3">
<p><a href="#BABCEFIJ">XmlEvGetPubId0()</a></p>
</td>
<td class="cellalignment2922" headers="r50c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated public id for <code>XML_EVENT_PE_DECLARATION</code>, <code>XML_EVENT_UE_DECLARATION</code>, or <code>XML_EVENT_NOTATION_DECLARATION</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r51c1-t3" headers="r1c1-t3">
<p><a href="#BABBIHFH">XmlEvGetSysId()</a></p>
</td>
<td class="cellalignment2922" headers="r51c1-t3 r1c2-t3">
<p>Retrieves the system id for <code>XML_EVENT_PE_DECLARATION</code>, <code>XML_EVENT_UE_DECLARATION</code>, or <code>XML_EVENT_NOTATION_DECLARATION</code> events; also, provides the length as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r52c1-t3" headers="r1c1-t3">
<p><a href="#BABJCBJC">XmlEvGetSysId0()</a></p>
</td>
<td class="cellalignment2922" headers="r52c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated system id for <code>XML_EVENT_PE_DECLARATION</code>, <code>XML_EVENT_UE_DECLARATION</code>, or <code>XML_EVENT_NOTATION_DECLARATION</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r53c1-t3" headers="r1c1-t3">
<p><a href="#BABDFABA">XmlEvGetTagID()</a></p>
</td>
<td class="cellalignment2922" headers="r53c1-t3 r1c2-t3">
<p>Retrieves the ID for the tag&#39;s <code>QNAME</code>, for <code>XML_EVENT_START_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r54c1-t3" headers="r1c1-t3">
<p><a href="#BABDACCI">XmlEvGetTagUriID()</a></p>
</td>
<td class="cellalignment2922" headers="r54c1-t3 r1c2-t3">
<p>Retrieves the ID for the tag&#39;s URI, for <code>XML_EVENT_START_ELEMENT</code> and <code>XML_EVENT_END_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r55c1-t3" headers="r1c1-t3">
<p><a href="#BABCAHGC">XmlEvGetText()</a></p>
</td>
<td class="cellalignment2922" headers="r55c1-t3 r1c2-t3">
<p>Retrieves the text for <code>XML_EVENT_CHARACTERS</code>, <code>XML_EVENT_CHARACTERS_CONT</code>, <code>XML_EVENT_SPACE,</code> <code>XML_EVENT_SPACE_CONT</code>, <code>XML_EVENT_COMMENT</code>, <code>XML_EVENT_COMMENT_CONT</code>, <code>XML_EVENT_CDATA</code>, and <code>XML_EVENT_CDATA_CONT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r56c1-t3" headers="r1c1-t3">
<p><a href="#BABEDABI">XmlEvGetText0()</a></p>
</td>
<td class="cellalignment2922" headers="r56c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated text for <code>XML_EVENT_CHARACTERS</code>, <code>XML_EVENT_CHARACTERS_CONT</code>, <code>XML_EVENT_SPACE,</code> <code>XML_EVENT_SPACE_CONT</code>, <code>XML_EVENT_COMMENT</code>, <code>XML_EVENT_COMMENT_CONT</code>, <code>XML_EVENT_CDATA</code>, and <code>XML_EVENT_CDATA_CONT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r57c1-t3" headers="r1c1-t3">
<p><a href="#BABCIIFD">XmlEvGetUENdata()</a></p>
</td>
<td class="cellalignment2922" headers="r57c1-t3 r1c2-t3">
<p>Retrieves the ndata for <code>XML_EVENT_UE_DECLARATION</code> event, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r58c1-t3" headers="r1c1-t3">
<p><a href="#BABDBECA">XmlEvGetUENdata0()</a></p>
</td>
<td class="cellalignment2922" headers="r58c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated ndata for <code>XML_EVENT_UE_DECLARATION</code> event.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r59c1-t3" headers="r1c1-t3">
<p><a href="#BABDGIJG">XmlEvGetURI()</a></p>
</td>
<td class="cellalignment2922" headers="r59c1-t3 r1c2-t3">
<p>Retrieves the URI tag for <code>XML_EVENT_START_ELEMENT</code> or <code>XML_EVENT_END_ELEMENT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter:</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r60c1-t3" headers="r1c1-t3">
<p><a href="#BABCCEGF">XmlEvGetURI0()</a></p>
</td>
<td class="cellalignment2922" headers="r60c1-t3 r1c2-t3">
<p>Retrieves the <code>NULL</code>-terminated URI tag for <code>XML_EVENT_START_ELEMENT</code> or <code>XML_EVENT_END_ELEMENT</code> events.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r61c1-t3" headers="r1c1-t3">
<p><a href="#BABJCJCB">XmlEvGetVersion()</a></p>
</td>
<td class="cellalignment2922" headers="r61c1-t3 r1c2-t3">
<p>Provides information about version specification in XML declaration for the <code>XML_EVENT_START_DOCUMENT</code> event.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r62c1-t3" headers="r1c1-t3">
<p><a href="#BABHGGHE">XmlEvIsEncodingSpecified()</a></p>
</td>
<td class="cellalignment2922" headers="r62c1-t3 r1c2-t3">
<p>Provides information about encoding specification in XML declaration for the <code>XML_EVENT_START_DOCUMENT</code> event.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r63c1-t3" headers="r1c1-t3">
<p><a href="#BABBJHAF">XmlEvIsNamespaceAttr()</a></p>
</td>
<td class="cellalignment2922" headers="r63c1-t3 r1c2-t3">
<p>Determines if an attribute is a namespace atrribute for <code>XML_EVENT_START_ELEMENT</code> event.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r64c1-t3" headers="r1c1-t3">
<p><a href="#BABBBCCF">XmlEvIsStandalone()</a></p>
</td>
<td class="cellalignment2922" headers="r64c1-t3 r1c2-t3">
<p>Provides information about standalone specification in XML declaration for the <code>XML_EVENT_START_DOCUMENT</code> event</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r65c1-t3" headers="r1c1-t3">
<p><a href="#BABIFHCA">XmlEvNext()</a></p>
</td>
<td class="cellalignment2922" headers="r65c1-t3 r1c2-t3">
<p>Gets the next event and advances the parser.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r66c1-t3" headers="r1c1-t3">
<p><a href="#BABBEAFE">XmlEvNextTag()</a></p>
</td>
<td class="cellalignment2922" headers="r66c1-t3 r1c2-t3">
<p>Advances the parser to the next tag event.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r67c1-t3" headers="r1c1-t3">
<p><a href="#BABGDFJJ">XmlEvLoadPPDoc()</a></p>
</td>
<td class="cellalignment2922" headers="r67c1-t3 r1c2-t3">
<p>Loads a new document and configures it for pull parsing.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r68c1-t3" headers="r1c1-t3">
<p><a href="#BEIJAEJF">XmlEvSchemaValidate()</a></p>
</td>
<td class="cellalignment2922" headers="r68c1-t3 r1c2-t3">
<p>Validates XML documents represented by events.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CAXML5577" class="refsect2"><a id="BABFFFFD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref518"></a><a id="sthref519"></a><a id="sthref520"></a>XmlEvCleanPPCtx()</h3>
<p>Cleans up intenal structures related to a parse operation. This will not destroy the event context. The event context can be reused after this call.</p>
<p class="subhead1"><a id="CAXML5578"></a>Syntax</p>
<pre>xmlerr XmlEvCleanPPCtx(
   xmlctx *xctx,
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t4">Parameter</th>
<th class="cellalignment2921" id="r1c2-t4">In/Out</th>
<th class="cellalignment2921" id="r1c3-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t4" headers="r1c1-t4">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t4 r1c2-t4">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t4 r1c3-t4">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t4" headers="r1c1-t4">
<pre>evtx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t4 r1c2-t4">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t4 r1c3-t4">XmlEvents context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5579"></a>Returns</p>
<p><code>(xmlerr)</code> the error number</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5580" class="refsect2"><a id="BABICDAI"></a>
<hr/>
<h3 class="refsect2"><a id="sthref521"></a><a id="sthref522"></a><a id="sthref523"></a>XmlEvCreatePPCtx()</h3>
<p>Creates an Event context in pull-parse mode.</p>
<p>The document is loaded using XmlEvLoadPPDoc. The actual parsing is driven by multiple calls to <a href="#BABIFHCA">XmlEvNext()</a>. After each call, relevant information may be retrieved by calls to the various <code>XmlEvGet</code><code><span class="codeinlineitalic">XXX</span></code><span class="bold">()</span> functions. Basic set of properties are the same as for <code>XmlLoadDom</code>. Input source should be specified with <a href="#BABGDFJJ">XmlEvLoadPPDoc()</a> call.</p>
<p class="subhead1"><a id="CAXML5581"></a>Syntax</p>
<pre>xmlevctx *XmlEvCreatePPCtx(
   xmlctx *xctx, 
   xmlerr  *xerr,
   <span class="italic">list</span>);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t5">Parameter</th>
<th class="cellalignment2921" id="r1c2-t5">In/Out</th>
<th class="cellalignment2921" id="r1c3-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t5" headers="r1c1-t5">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t5 r1c2-t5">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t5 r1c3-t5">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t5" headers="r1c1-t5">
<pre>xerr
</pre></td>
<td class="cellalignment2922" headers="r3c1-t5 r1c2-t5">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t5 r1c3-t5">numeric error code, <code>XMLERR_OK[0]</code> on success</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t5" headers="r1c1-t5">
<pre><span class="italic">list</span>
</pre></td>
<td class="cellalignment2922" headers="r4c1-t5 r1c2-t5">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t5 r1c3-t5">These additional properties should be supplied with a terminal <code>NULL</code>:
<ul>
<li>
<p><code>(&#34;expand_entities&#34;, boolean)</code> that, when <code>FALSE</code>, causes parsed non-parameter entity references not be expanded. By default such references are expanded.</p>
</li>
<li>
<p><code>(&#34;use_buffer&#34;, buffer)</code> is the address of a buffer that when specified, will use the buffer to collect data that should be returned back to the user. The <code>get</code><code><span class="codeinlineitalic">XXX</span></code><code>()</code> functions will return this buffer as a data pointer.</p>
</li>
<li>
<p><code>(&#34;use_buffer_len&#34;, lengthOfBuffer)</code> is the number of bytes in a buffer, the actual lenght of the buffer, and no more than the specified length is collected. In the case, only part of the data is collected, generating the <code>CONT</code> flavor of the event is generated. Subsequent calls to <code>XmlEventsNext</code> provide additional data. Sequence of <code>CONT</code>-flavored events is always terminated by a non -<code>CONT</code> event. The buffer may be only partially filled.</p>
</li>
<li>
<p><code>(&#34;get_id_callback&#34;, function)</code> is the addres for the callback function, to convert text base names to 8-byte IDs. Once such function is supplied, the user is allowed to use <code>XmlEvGetTagID</code>, <code>XmlEvGetAttrID</code>, <code>XmlEvGetTagUriID</code>, and <code>XmlEvGetAttrUriID</code>.</p>
</li>
<li>
<p><code>(&#34;raw_buffer_len&#34;, length)</code> is the number of bytes in a buffer. By default, this parameter is 256K. Raw buffer is used to read the input data and perform character conversion, and also to convert CRLFs and CRs to LFs.</p>
</li>
<li>
<p><code>(&#34;error_callback&#34;, callback)</code> provides the address of a callback function tha is invoked to signal illegal use of an API for that event.</p>
</li>
</ul>
<p>These optional parameters should be used in the following manner:</p>
<pre>xmlevctx *XmlEvCreatePPCtx(
   xmlctx *xctx, 
   xmlerr  *xerr,
   (&#34;expand_entities&#34;, <span class="italic">mode</span>),
   (&#34;use_buffer&#34;, <span class="italic">buffer)</span>,
   (&#34;use_buffer_len&#34;, <span class="italic">length</span>),
   (&#34;get_id_callback&#34;, <span class="italic">function</span>),
   (&#34;raw_buffer_len&#34;,  <span class="italic">length</span>),
   (&#34;error_callback&#34;, <span class="italic">callback</span>) );
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5582"></a>Returns</p>
<p><code>(xmlevctx)</code> Event contex to be passed on subsequent calls to <a href="#BABIFHCA">XmlEvNext()</a></p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5583" class="refsect2"><a id="BEIIICFA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref524"></a><a id="sthref525"></a><a id="sthref526"></a>XmlEvCreateSVCtx()</h3>
<p>Creates an event context for the streaming validadtor. Initializes the streaming validator and returns an event context that can be used in subsequent calls.</p>
<p>Use in conjunction with <a href="#BEIJEJBJ">XmlEvDestroySVCtx()</a>. This is a transparent method. An alternate approach would be to use the opague <a href="#BEIJAEJF">XmlEvSchemaValidate()</a>.</p>
<p class="subhead1"><a id="CAXML5584"></a>Syntax</p>
<pre>xmlevctx *XmlEvCreateSVCtx(
   xmlctx *xctx, 
   xsdctx *sctx,
   xmlevctx *docEvCtx,
   xmlerr *err);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t6">Parameter</th>
<th class="cellalignment2921" id="r1c2-t6">In/Out</th>
<th class="cellalignment2921" id="r1c3-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t6" headers="r1c1-t6">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t6 r1c3-t6">XML context; must be valid</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t6" headers="r1c1-t6">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t6 r1c3-t6">Schema context; must be valid</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t6" headers="r1c1-t6">
<pre>docEvCtx
</pre></td>
<td class="cellalignment2922" headers="r4c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t6 r1c3-t6">Event context for the document that is validated</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t6" headers="r1c1-t6">
<pre>err
</pre></td>
<td class="cellalignment2922" headers="r5c1-t6 r1c2-t6">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r5c1-t6 r1c3-t6">numeric error code, <code>XMLERR_OK[0]</code> on success</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5585"></a>Returns</p>
<p><code>(xmlevctx)</code> Event contex to be passed on subsequent calls to <a href="#BABIFHCA">XmlEvNext()</a></p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5586" class="refsect2"><a id="BABBJJAH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref527"></a><a id="sthref528"></a><a id="sthref529"></a>XmlEvDestroyPPCtx()</h3>
<p>Destroys the event context. Terminates parsing. May be called at any time during a parsing operation.</p>
<p class="subhead1"><a id="CAXML5587"></a>Syntax</p>
<pre>void XmlEvDestroyPPCtx(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t7">Parameter</th>
<th class="cellalignment2921" id="r1c2-t7">In/Out</th>
<th class="cellalignment2921" id="r1c3-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t7" headers="r1c1-t7">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t7 r1c2-t7">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t7 r1c3-t7">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CAXML5588" class="refsect2"><a id="BEIJEJBJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref530"></a><a id="sthref531"></a><a id="sthref532"></a>XmlEvDestroySVCtx()</h3>
<p>Terminates an event context created by a streaming validator. Returns <code>XMLERR_OK[0]</code> on success, or a numeric error code on failure.</p>
<p>Use in conjunction with <a href="#BEIIICFA">XmlEvCreateSVCtx()</a>. This is a transparent method. An alternate approach would be to use the opague <a href="#BEIJAEJF">XmlEvSchemaValidate()</a>.</p>
<p class="subhead1"><a id="CAXML5589"></a>Syntax</p>
<pre>xmlerr XmlEvDestroySVCtx(
   xmlctx *xctx, 
   xmlevctx *evCtx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t8">Parameter</th>
<th class="cellalignment2921" id="r1c2-t8">In/Out</th>
<th class="cellalignment2921" id="r1c3-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t8" headers="r1c1-t8">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t8 r1c2-t8">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t8 r1c3-t8">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t8" headers="r1c1-t8">
<pre>evCtx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t8 r1c2-t8">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t8 r1c3-t8">Event context that should be terminatedt</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5590"></a>Returns</p>
<p><code>(xmlerr)</code> the error number</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5591" class="refsect2"><a id="BABHJGHA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref533"></a><a id="sthref534"></a><a id="sthref535"></a>XmlEvGetAttrCount()</h3>
<p>Retrieves the number of attributes for the <code>XML_EVENT_START_ELEMENT</code> event.</p>
<p class="subhead1"><a id="CAXML5592"></a>Syntax</p>
<pre>ub4  XmlEvGetAttrCount(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t9">Parameter</th>
<th class="cellalignment2921" id="r1c2-t9">In/Out</th>
<th class="cellalignment2921" id="r1c3-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t9" headers="r1c1-t9">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t9 r1c2-t9">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t9 r1c3-t9">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5593"></a>Returns</p>
<p><code>(ub4)</code> the number of attributes</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5594" class="refsect2"><a id="BABIDCGI"></a>
<hr/>
<h3 class="refsect2"><a id="sthref536"></a><a id="sthref537"></a><a id="sthref538"></a>XmlEvGetAttrDeclBody()</h3>
<p>Retrieves the attribute body in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5595"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclBody(
   xmlevctx *evctx,
   ub4 index,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t10">Parameter</th>
<th class="cellalignment2921" id="r1c2-t10">In/Out</th>
<th class="cellalignment2921" id="r1c3-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t10" headers="r1c1-t10">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t10 r1c2-t10">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t10 r1c3-t10">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t10" headers="r1c1-t10">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t10 r1c2-t10">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t10 r1c3-t10">index of the attribute</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t10" headers="r1c1-t10">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t10 r1c2-t10">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t10 r1c3-t10">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5596"></a>Returns</p>
<p><code>(oratext*)</code> the declaration body</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5597" class="refsect2"><a id="BABFEBJA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref539"></a><a id="sthref540"></a><a id="sthref541"></a>XmlEvGetAttrDeclBody0()</h3>
<p>Retrieves the <code>NULL</code>-terminated attribute body in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
<p class="subhead1"><a id="CAXML5598"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclBody0(
   xmlevctx *evctx,
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t11">Parameter</th>
<th class="cellalignment2921" id="r1c2-t11">In/Out</th>
<th class="cellalignment2921" id="r1c3-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t11" headers="r1c1-t11">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t11 r1c2-t11">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t11 r1c3-t11">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t11" headers="r1c1-t11">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t11 r1c2-t11">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t11 r1c3-t11">index of the attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5599"></a>Returns</p>
<p><code>(oratext*)</code> the declaration body</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5600" class="refsect2"><a id="BABCIECH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref542"></a><a id="sthref543"></a><a id="sthref544"></a>XmlEvGetAttrDeclCount()</h3>
<p>Retreives the number of attributes in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
<p class="subhead1"><a id="CAXML5601"></a>Syntax</p>
<pre>ub4 XmlEvGetAttrDeclCount(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t12">Parameter</th>
<th class="cellalignment2921" id="r1c2-t12">In/Out</th>
<th class="cellalignment2921" id="r1c3-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t12" headers="r1c1-t12">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t12 r1c2-t12">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t12 r1c3-t12">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5602"></a>Returns</p>
<p><code>(ub4)</code> number of attributes</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5603" class="refsect2"><a id="BABCEAIB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref545"></a><a id="sthref546"></a><a id="sthref547"></a>XmlEvGetAttrDeclElName()</h3>
<p>Retrieves the element name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5604"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclElName(
   xmlevctx *evctx,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t13">Parameter</th>
<th class="cellalignment2921" id="r1c2-t13">In/Out</th>
<th class="cellalignment2921" id="r1c3-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t13" headers="r1c1-t13">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t13 r1c2-t13">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t13 r1c3-t13">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t13" headers="r1c1-t13">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t13 r1c2-t13">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t13 r1c3-t13">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5605"></a>Returns</p>
<p><code>(oratext*)</code> the element name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5606" class="refsect2"><a id="BABJECGJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref548"></a><a id="sthref549"></a><a id="sthref550"></a>XmlEvGetAttrDeclElName0()</h3>
<p>Retrieves the <code>NULL</code>-terminated element name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
<p class="subhead1"><a id="CAXML5607"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclElName0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t14">Parameter</th>
<th class="cellalignment2921" id="r1c2-t14">In/Out</th>
<th class="cellalignment2921" id="r1c3-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t14" headers="r1c1-t14">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t14 r1c2-t14">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t14 r1c3-t14">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5608"></a>Returns</p>
<p><code>(oratext*)</code> the element name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5609" class="refsect2"><a id="BABDDIJB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref551"></a><a id="sthref552"></a><a id="sthref553"></a>XmlEvGetAttrDeclLocalName()</h3>
<p>Retrieves the local name of the attribute declaration event, <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5610"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclLocalName(
   xmlevctx *evctx,
   ub4 index
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t15">Parameter</th>
<th class="cellalignment2921" id="r1c2-t15">In/Out</th>
<th class="cellalignment2921" id="r1c3-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t15" headers="r1c1-t15">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t15 r1c2-t15">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t15 r1c3-t15">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t15" headers="r1c1-t15">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t15 r1c2-t15">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t15 r1c3-t15">index of the attribute</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t15" headers="r1c1-t15">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t15 r1c2-t15">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t15 r1c3-t15">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5611"></a>Returns</p>
<p><code>(oratext*)</code> the local name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5612" class="refsect2"><a id="BABGGFJD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref554"></a><a id="sthref555"></a><a id="sthref556"></a>XmlEvGetAttrDeclLocalName0()</h3>
<p>Retrieves the <code>NULL</code>-terminated local name in attribute declaration event, <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
<p class="subhead1"><a id="CAXML5613"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclLocalName0(
   xmlevctx *evctx,
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t16">Parameter</th>
<th class="cellalignment2921" id="r1c2-t16">In/Out</th>
<th class="cellalignment2921" id="r1c3-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t16" headers="r1c1-t16">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t16 r1c2-t16">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t16 r1c3-t16">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t16" headers="r1c1-t16">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t16 r1c2-t16">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t16 r1c3-t16">index of the attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5614"></a>Returns</p>
<p><code>(oratext*)</code> the local name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5615" class="refsect2"><a id="BABIGBEC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref557"></a><a id="sthref558"></a><a id="sthref559"></a>XmlEvGetAttrDeclName()</h3>
<p>Retrieves the attribute name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5616"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclName(
   xmlevctx *evctx,
   ub4 index
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t17">Parameter</th>
<th class="cellalignment2921" id="r1c2-t17">In/Out</th>
<th class="cellalignment2921" id="r1c3-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t17" headers="r1c1-t17">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t17 r1c3-t17">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t17" headers="r1c1-t17">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t17 r1c3-t17">index of the attribute</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t17" headers="r1c1-t17">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t17 r1c2-t17">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t17 r1c3-t17">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5617"></a>Returns</p>
<p><code>(oratext*)</code> the attribute name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5618" class="refsect2"><a id="BABGIHJF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref560"></a><a id="sthref561"></a><a id="sthref562"></a>XmlEvGetAttrDeclName0()</h3>
<p>Retrieves the <code>NULL</code>-terminated attribute name in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
<p class="subhead1"><a id="CAXML5619"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclName0(
   xmlevctx *evctx,
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t18">Parameter</th>
<th class="cellalignment2921" id="r1c2-t18">In/Out</th>
<th class="cellalignment2921" id="r1c3-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t18" headers="r1c1-t18">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t18 r1c2-t18">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t18 r1c3-t18">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t18" headers="r1c1-t18">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t18 r1c2-t18">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t18 r1c3-t18">index of the attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5620"></a>Returns</p>
<p><code>(oratext*)</code> the attribute name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5621" class="refsect2"><a id="BABGAIBE"></a>
<hr/>
<h3 class="refsect2"><a id="sthref563"></a><a id="sthref564"></a><a id="sthref565"></a>XmlEvGetAttrDeclPrefix()</h3>
<p>Retrieves the attribute prefix in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5622"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclPrefix(
   xmlevctx *evctx,
   ub4 index
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t19">Parameter</th>
<th class="cellalignment2921" id="r1c2-t19">In/Out</th>
<th class="cellalignment2921" id="r1c3-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t19" headers="r1c1-t19">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t19 r1c3-t19">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t19" headers="r1c1-t19">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t19 r1c3-t19">index of the attribute</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t19" headers="r1c1-t19">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t19 r1c2-t19">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t19 r1c3-t19">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5623"></a>Returns</p>
<p><code>(oratext*)</code> the attribute prefix</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5624" class="refsect2"><a id="BABDECBJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref566"></a><a id="sthref567"></a><a id="sthref568"></a>XmlEvGetAttrDeclPrefix0()</h3>
<p>Retrieves the <code>NULL</code>-terminated attribute prefix in attribute declaration <code>XML_EVENT_ATTLIST_DECLARATION</code>.</p>
<p class="subhead1"><a id="CAXML5625"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrDeclPrefix0(
   xmlevctx *evctx,
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t20">Parameter</th>
<th class="cellalignment2921" id="r1c2-t20">In/Out</th>
<th class="cellalignment2921" id="r1c3-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t20" headers="r1c1-t20">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t20 r1c2-t20">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t20 r1c3-t20">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t20" headers="r1c1-t20">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t20 r1c2-t20">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t20 r1c3-t20">index of the attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5626"></a>Returns</p>
<p><code>(oratext*)</code> the attribute prefix</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5627" class="refsect2"><a id="BABDDJHH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref569"></a><a id="sthref570"></a><a id="sthref571"></a>XmlEvGetAttrID()</h3>
<p>Retrieves the ID for the attribute&#39;s <code>QNAME</code>, for <code>XML_EVENT_START_ELEMENT</code> events. Invokes the user-supplied ID callback specified in <a href="#BABICDAI">XmlEvCreatePPCtx()</a>; if the callback is not specified, returns <code>0</code>.</p>
<p class="subhead1"><a id="CAXML5628"></a>Syntax</p>
<pre>sb8 XmlEvGetAttrID(
   xmlevctx *evctx
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t21">Parameter</th>
<th class="cellalignment2921" id="r1c2-t21">In/Out</th>
<th class="cellalignment2921" id="r1c3-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t21" headers="r1c1-t21">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t21 r1c2-t21">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t21 r1c3-t21">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t21" headers="r1c1-t21">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t21 r1c2-t21">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t21 r1c3-t21">index of attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5629"></a>Returns</p>
<p><code>(sb8)</code> the ID</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5630" class="refsect2"><a id="BABGJABI"></a>
<hr/>
<h3 class="refsect2"><a id="sthref572"></a><a id="sthref573"></a><a id="sthref574"></a>XmlEvGetAttrLocalName()</h3>
<p>Retrieves the attribute local name for the <code>XML_EVENT_START_ELEMENT</code> events. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5631"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrLocalName(
   xmlevctx *evctx,
   ub4 index
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t22">Parameter</th>
<th class="cellalignment2921" id="r1c2-t22">In/Out</th>
<th class="cellalignment2921" id="r1c3-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t22" headers="r1c1-t22">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t22 r1c2-t22">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t22 r1c3-t22">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t22" headers="r1c1-t22">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t22 r1c2-t22">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t22 r1c3-t22">index of the attribute; ignored for <code>XML_EVENT_START_ATTR</code></td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t22" headers="r1c1-t22">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t22 r1c2-t22">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t22 r1c3-t22">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5632"></a>Returns</p>
<p><code>(oratext*)</code> the attribute name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5633" class="refsect2"><a id="BABCDCBF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref575"></a><a id="sthref576"></a><a id="sthref577"></a>XmlEvGetAttrLocalName0()</h3>
<p>Retrieves the <code>NULL</code>-terminated attribute local name for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
<p class="subhead1"><a id="CAXML5634"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrLocalName0(
   xmlevctx *evctx,
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t23">Parameter</th>
<th class="cellalignment2921" id="r1c2-t23">In/Out</th>
<th class="cellalignment2921" id="r1c3-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t23" headers="r1c1-t23">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t23 r1c2-t23">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t23 r1c3-t23">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t23" headers="r1c1-t23">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t23 r1c2-t23">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t23 r1c3-t23">index of the attribute; ignored for <code>XML_EVENT_START_ATTR</code></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5635"></a>Returns</p>
<p><code>(oratext*)</code> the attribute name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5636" class="refsect2"><a id="BABBHICC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref578"></a><a id="sthref579"></a><a id="sthref580"></a>XmlEvGetAttrName()</h3>
<p>Retrieves the attribute name for the <code>XML_EVENT_START_ELEMENT</code> events. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5637"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrName(
   xmlevctx *evctx,
   ub4 index
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t24">Parameter</th>
<th class="cellalignment2921" id="r1c2-t24">In/Out</th>
<th class="cellalignment2921" id="r1c3-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t24" headers="r1c1-t24">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t24 r1c2-t24">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t24 r1c3-t24">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t24" headers="r1c1-t24">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t24 r1c2-t24">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t24 r1c3-t24">index of the attribute; ignored for <code>XML_EVENT_START_ATTR</code></td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t24" headers="r1c1-t24">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t24 r1c2-t24">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t24 r1c3-t24">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5638"></a>Returns</p>
<p><code>(oratext*)</code> the attribute name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5639" class="refsect2"><a id="BABHGEDB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref581"></a><a id="sthref582"></a><a id="sthref583"></a>XmlEvGetAttrName0()</h3>
<p>Retrieves the <code>NULL</code>-terminated attribute name for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
<p class="subhead1"><a id="CAXML5640"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrName0(
   xmlevctx *evctx,
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t25">Parameter</th>
<th class="cellalignment2921" id="r1c2-t25">In/Out</th>
<th class="cellalignment2921" id="r1c3-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t25" headers="r1c1-t25">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t25 r1c2-t25">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t25 r1c3-t25">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t25" headers="r1c1-t25">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t25 r1c2-t25">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t25 r1c3-t25">index of the attribute; ignored for <code>XML_EVENT_START_ATTR</code></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5641"></a>Returns</p>
<p><code>(oratext*)</code> the attribute name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5642" class="refsect2"><a id="BABBADHJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref584"></a><a id="sthref585"></a><a id="sthref586"></a>XmlEvGetAttrPrefix()</h3>
<p>Retrieves the prefix tag for <code>XML_EVENT_START_ELEMENT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5643"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrPrefix(
   xmlevctx *evctx,
   ub4 index,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t26">Parameter</th>
<th class="cellalignment2921" id="r1c2-t26">In/Out</th>
<th class="cellalignment2921" id="r1c3-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t26" headers="r1c1-t26">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t26 r1c2-t26">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t26 r1c3-t26">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t26" headers="r1c1-t26">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t26 r1c2-t26">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t26 r1c3-t26">index of the attribute</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t26" headers="r1c1-t26">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t26 r1c2-t26">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t26 r1c3-t26">length of the event name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5644"></a>Returns</p>
<p><code>(oratext*)</code> the attribute prefix</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5645" class="refsect2"><a id="BABBJAFD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref587"></a><a id="sthref588"></a><a id="sthref589"></a>XmlEvGetAttrPrefix0()</h3>
<p>Retrieves the <code>NULL</code>-terminated attribute prefix for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
<p class="subhead1"><a id="CAXML5646"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrPrefix0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t27">Parameter</th>
<th class="cellalignment2921" id="r1c2-t27">In/Out</th>
<th class="cellalignment2921" id="r1c3-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t27" headers="r1c1-t27">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t27 r1c2-t27">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t27 r1c3-t27">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t27" headers="r1c1-t27">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t27 r1c2-t27">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t27 r1c3-t27">index of the attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5647"></a>Returns</p>
<p><code>(oratext*)</code> the attribute prefix</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5648" class="refsect2"><a id="BABGDDID"></a>
<hr/>
<h3 class="refsect2"><a id="sthref590"></a><a id="sthref591"></a><a id="sthref592"></a>XmlEvGetAttrURI()</h3>
<p>Retrieves the attribute URI for the <code>XML_EVENT_START_ELEMENT</code> events. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5649"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrURI(
   xmlevctx *evctx,
   ub4 index
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t28">Parameter</th>
<th class="cellalignment2921" id="r1c2-t28">In/Out</th>
<th class="cellalignment2921" id="r1c3-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t28" headers="r1c1-t28">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t28 r1c2-t28">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t28 r1c3-t28">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t28" headers="r1c1-t28">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t28 r1c2-t28">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t28 r1c3-t28">index of the attribute</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t28" headers="r1c1-t28">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t28 r1c2-t28">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t28 r1c3-t28">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5650"></a>Returns</p>
<p><code>(oratext*)</code> the attribute URI</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5651" class="refsect2"><a id="BABCJJGJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref593"></a><a id="sthref594"></a><a id="sthref595"></a>XmlEvGetAttrURI0()</h3>
<p>Retrieves the <code>NULL</code>-terminated attribute URI for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
<p class="subhead1"><a id="CAXML5652"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrURI0(
   xmlevctx *evctx,
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t29">Parameter</th>
<th class="cellalignment2921" id="r1c2-t29">In/Out</th>
<th class="cellalignment2921" id="r1c3-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t29" headers="r1c1-t29">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t29 r1c2-t29">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t29 r1c3-t29">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t29" headers="r1c1-t29">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t29 r1c2-t29">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t29 r1c3-t29">index of the attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5653"></a>Returns</p>
<p><code>(oratext*)</code> the attribute URI</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5654" class="refsect2"><a id="BABCBGCA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref596"></a><a id="sthref597"></a><a id="sthref598"></a>XmlEvGetAttrUriID()</h3>
<p>Retrieves the ID for the attribute&#39;s URI, for <code>XML_EVENT_START_ELEMENT</code> events. Invokes the user-supplied ID callback specified in <a href="#BABICDAI">XmlEvCreatePPCtx()</a>; if the callback is not specified, returns <code>0</code>.</p>
<p class="subhead1"><a id="CAXML5655"></a>Syntax</p>
<pre>sb8 XmlEvGetAttrUriID(
   xmlevctx *evctx,
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t30">Parameter</th>
<th class="cellalignment2921" id="r1c2-t30">In/Out</th>
<th class="cellalignment2921" id="r1c3-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t30" headers="r1c1-t30">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t30 r1c2-t30">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t30 r1c3-t30">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t30" headers="r1c1-t30">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t30 r1c2-t30">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t30 r1c3-t30">index of attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5656"></a>Returns</p>
<p><code>(sb8)</code> the ID</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5657" class="refsect2"><a id="BABJICGA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref599"></a><a id="sthref600"></a><a id="sthref601"></a>XmlEvGetAttrValue()</h3>
<p>Retrieves the attribute value for one of the <code>XML_EVENT_START_ELEMENT</code> events, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5658"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrValue(
   xmlevctx *evctx, 
   ub4 index,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t31">Parameter</th>
<th class="cellalignment2921" id="r1c2-t31">In/Out</th>
<th class="cellalignment2921" id="r1c3-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t31" headers="r1c1-t31">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t31 r1c2-t31">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t31 r1c3-t31">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t31" headers="r1c1-t31">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t31 r1c2-t31">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t31 r1c3-t31">index of the attribute</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t31" headers="r1c1-t31">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r4c1-t31 r1c2-t31">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t31 r1c3-t31">length of the event name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5659"></a>Returns</p>
<p><code>(oratext*)</code> the attribute value</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5660" class="refsect2"><a id="BABHBFFB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref602"></a><a id="sthref603"></a><a id="sthref604"></a>XmlEvGetAttrValue0()</h3>
<p>Retrieves the <code>NULL</code>-terminated attribute value for the <code>XML_EVENT_START_ELEMENT</code> events.</p>
<p class="subhead1"><a id="CAXML5661"></a>Syntax</p>
<pre>oratext *XmlEvGetAttrValue0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t32">Parameter</th>
<th class="cellalignment2921" id="r1c2-t32">In/Out</th>
<th class="cellalignment2921" id="r1c3-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t32" headers="r1c1-t32">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t32 r1c2-t32">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t32 r1c3-t32">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t32" headers="r1c1-t32">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t32 r1c2-t32">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t32 r1c3-t32">index of the attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5662"></a>Returns</p>
<p><code>(oratext*)</code> the attribute value</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5663" class="refsect2"><a id="BABGHBCJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref605"></a><a id="sthref606"></a><a id="sthref607"></a>XmlEvGetElDeclContent()</h3>
<p>Retrieves the element declaration content for <code>XML_EVENT_ELEMENT_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5664"></a>Syntax</p>
<pre>oratext *XmlEvGetElDeclContent(
   xmlevctx *evctx,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t33">Parameter</th>
<th class="cellalignment2921" id="r1c2-t33">In/Out</th>
<th class="cellalignment2921" id="r1c3-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t33" headers="r1c1-t33">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t33 r1c2-t33">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t33 r1c3-t33">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t33" headers="r1c1-t33">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t33 r1c2-t33">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t33 r1c3-t33">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5665"></a>Returns</p>
<p><code>(oratext*)</code> the declaration content</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5666" class="refsect2"><a id="BABCAABJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref608"></a><a id="sthref609"></a><a id="sthref610"></a>XmlEvGetElDeclContent0()</h3>
<p>Retrieves the element declaration content for <code>XML_EVENT_ELEMENT_DECLARATION</code>.</p>
<p class="subhead1"><a id="CAXML5667"></a>Syntax</p>
<pre>oratext *XmlEvGetElDeclContent0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t34">Parameter</th>
<th class="cellalignment2921" id="r1c2-t34">In/Out</th>
<th class="cellalignment2921" id="r1c3-t34">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t34" headers="r1c1-t34">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t34 r1c2-t34">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t34 r1c3-t34">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5668"></a>Returns</p>
<p><code>(oratext*)</code> the declaration content</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5669" class="refsect2"><a id="BABHFIEF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref611"></a><a id="sthref612"></a><a id="sthref613"></a>XmlEvGetEncoding()</h3>
<p>Returns the value of the encoding specified in either <a href="#BABICDAI">XmlEvCreatePPCtx()</a> call or <a href="#BEIIICFA">XmlEvCreateSVCtx()</a> call.</p>
<p class="subhead1"><a id="CAXML5670"></a>Syntax</p>
<pre>oratext *XmlEvGetEncoding(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t35">Parameter</th>
<th class="cellalignment2921" id="r1c2-t35">In/Out</th>
<th class="cellalignment2921" id="r1c3-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t35" headers="r1c1-t35">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t35 r1c2-t35">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t35 r1c3-t35">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5671"></a>Returns</p>
<p><code>(oratext*)</code> the encoding value in out-encoding; <code>NULL</code> if no encoding is specified</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5672" class="refsect2"><a id="BABBDHCJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref614"></a><a id="sthref615"></a><a id="sthref616"></a>XmlEvGetError()</h3>
<p>Retrieves the error number when the <code>XML_EVENT_FATAL_ERROR</code> or <code>XML_EVENT_ERROR</code> event is returned by a <a href="#BABIFHCA">XmlEvNext()</a> call.</p>
<p class="subhead1"><a id="CAXML5673"></a>Syntax</p>
<pre>xmlerr XmlEvGetError(
   xmlevctx *evctx
   oratext **message);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t36">Parameter</th>
<th class="cellalignment2921" id="r1c2-t36">In/Out</th>
<th class="cellalignment2921" id="r1c3-t36">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t36" headers="r1c1-t36">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t36 r1c2-t36">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t36 r1c3-t36">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t36" headers="r1c1-t36">
<pre>message
</pre></td>
<td class="cellalignment2922" headers="r3c1-t36 r1c2-t36">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t36 r1c3-t36">the error message</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5674"></a>Returns</p>
<p><code>(xmlerr)</code> the error number</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5675" class="refsect2"><a id="BABBFIDA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref617"></a><a id="sthref618"></a><a id="sthref619"></a>XmlEvGetName()</h3>
<p>Retrurns the name of the events, and the length of the event in the <code>OUT</code> <code>len</code> parameter. The event name could be on of the following:</p>
<ul>
<li>
<p><code>XML_EVENT_START_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_END_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_START_ENTITY</code></p>
</li>
<li>
<p><code>XML_EVENT_ENTITY_REFERENCE</code></p>
</li>
<li>
<p><code>XML_EVENT_ELEMENT_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_PE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_UE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_NOTATTION_DECLARATION</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5676"></a>Syntax</p>
<pre>oratext *XmlEvGetName(
   xmlevctx *evctx, 
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t37">Parameter</th>
<th class="cellalignment2921" id="r1c2-t37">In/Out</th>
<th class="cellalignment2921" id="r1c3-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t37" headers="r1c1-t37">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t37 r1c2-t37">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t37 r1c3-t37">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t37" headers="r1c1-t37">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t37 r1c2-t37">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t37 r1c3-t37">length of the name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5677"></a>Returns</p>
<p><code>(oratext*)</code> The name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5678" class="refsect2"><a id="BABGFBBH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref620"></a><a id="sthref621"></a><a id="sthref622"></a>XmlEvGetName0()</h3>
<p>Retrieves a <code>NULL</code>-terminated name for one of the following events:</p>
<ul>
<li>
<p><code>XML_EVENT_START_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_END_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_START_ENTITY</code></p>
</li>
<li>
<p><code>XML_EVENT_ENTITY_REFERENCE</code></p>
</li>
<li>
<p><code>XML_EVENT_ELEMENT_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_PE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_UE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_NOTATTION_DECLARATION</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5679"></a>Syntax</p>
<pre>oratext *XmlEventGetName0(
   xmleventctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t38">Parameter</th>
<th class="cellalignment2921" id="r1c2-t38">In/Out</th>
<th class="cellalignment2921" id="r1c3-t38">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t38" headers="r1c1-t38">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t38 r1c2-t38">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t38 r1c3-t38">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5680"></a>Returns</p>
<p><code>(oratext*)</code> The name</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5681" class="refsect2"><a id="BABJBHCD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref623"></a><a id="sthref624"></a><a id="sthref625"></a>XmlEvGetLocalName()</h3>
<p>Retrieves the local name tag for one of the following events, and also returns the length of the event as an <code>OUT len</code> parameter:</p>
<ul>
<li>
<p><code>XML_EVENT_START_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_END_ELEMENT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5682"></a>Syntax</p>
<pre>oratext *XmlEvGetLocalName(
   xmlevctx *evctx,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t39">Parameter</th>
<th class="cellalignment2921" id="r1c2-t39">In/Out</th>
<th class="cellalignment2921" id="r1c3-t39">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t39" headers="r1c1-t39">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t39 r1c2-t39">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t39 r1c3-t39">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t39" headers="r1c1-t39">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t39 r1c2-t39">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t39 r1c3-t39">length of the event name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5683"></a>Returns</p>
<p><code>(oratext*)</code> local name tag</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5684" class="refsect2"><a id="BABGEAGA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref626"></a><a id="sthref627"></a><a id="sthref628"></a>XmlEvGetLocalName0()</h3>
<p>Retrieves the <code>NULL</code>-terminated local name tag for one of the following events:</p>
<ul>
<li>
<p><code>XML_EVENT_START_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_END_ELEMENT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5685"></a>Syntax</p>
<pre>oratext *XmlEvGetLocalName0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t40">Parameter</th>
<th class="cellalignment2921" id="r1c2-t40">In/Out</th>
<th class="cellalignment2921" id="r1c3-t40">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t40" headers="r1c1-t40">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t40 r1c2-t40">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t40 r1c3-t40">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5686"></a>Returns</p>
<p><code>(oratext*)</code> local name tag</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5687" class="refsect2"><a id="BABBJHBB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref629"></a><a id="sthref630"></a><a id="sthref631"></a>XmlEvGetLocation()</h3>
<p>Retrieves the location during parsing, as <code>OUT</code> parameters for the line number of the input stream and its path. Can be used at any time during the parsing processes.</p>
<p class="subhead1"><a id="CAXML5688"></a>Syntax</p>
<pre>void *XmlEvGetLocation(
   xmlevctx *evctx,
   ub4 *line,
   oratext **path);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t41">Parameter</th>
<th class="cellalignment2921" id="r1c2-t41">In/Out</th>
<th class="cellalignment2921" id="r1c3-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t41" headers="r1c1-t41">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t41 r1c2-t41">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t41 r1c3-t41">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t41" headers="r1c1-t41">
<pre>line
</pre></td>
<td class="cellalignment2922" headers="r3c1-t41 r1c2-t41">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t41 r1c3-t41">line number</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t41" headers="r1c1-t41">
<pre>path
</pre></td>
<td class="cellalignment2922" headers="r4c1-t41 r1c2-t41">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t41 r1c3-t41">URL or file name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CAXML5689" class="refsect2"><a id="BABCIJDA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref632"></a><a id="sthref633"></a><a id="sthref634"></a>XmlEvGetPIData()</h3>
<p>Retrieves the text for one of the following events, and also returns the length of the event as an <code>OUT len</code> parameter:</p>
<ul>
<li>
<p><code>XML_EVENT_PI</code></p>
</li>
<li>
<p><code>XML_EVENT_PI_CONT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5690"></a>Syntax</p>
<pre>oratext *XmlEvGetPIData(
   xmlevctx *evctx
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t42">Parameter</th>
<th class="cellalignment2921" id="r1c2-t42">In/Out</th>
<th class="cellalignment2921" id="r1c3-t42">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t42" headers="r1c1-t42">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t42 r1c2-t42">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t42 r1c3-t42">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t42" headers="r1c1-t42">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t42 r1c2-t42">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t42 r1c3-t42">length of the event name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5691"></a>Returns</p>
<p><code>(oratext*)</code> data</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5692" class="refsect2"><a id="BABBCJIB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref635"></a><a id="sthref636"></a><a id="sthref637"></a>XmlEvGetPIData0()</h3>
<p>Retrieves the <code>NULL</code>-terminated data for one of the following events:</p>
<ul>
<li>
<p><code>XML_EVENT_PI</code></p>
</li>
<li>
<p><code>XML_EVENT_PI_CONT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5693"></a>Syntax</p>
<pre>oratext *XmlEvGetPIData0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t43">Parameter</th>
<th class="cellalignment2921" id="r1c2-t43">In/Out</th>
<th class="cellalignment2921" id="r1c3-t43">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t43" headers="r1c1-t43">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t43 r1c2-t43">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t43 r1c3-t43">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5694"></a>Returns</p>
<p><code>(oratext*)</code> data</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5695" class="refsect2"><a id="BABIAEGB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref638"></a><a id="sthref639"></a><a id="sthref640"></a>XmlEvGetPITarget()</h3>
<p>Retrieves the target for one of the following events, and also returns the length of the event as an <code>OUT len</code> parameter:</p>
<ul>
<li>
<p><code>XML_EVENT_PI</code></p>
</li>
<li>
<p><code>XML_EVENT_PI_CONT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5696"></a>Syntax</p>
<pre>oratext *XmlEvGetPITarget(
   xmlevctx *evctx
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t44">Parameter</th>
<th class="cellalignment2921" id="r1c2-t44">In/Out</th>
<th class="cellalignment2921" id="r1c3-t44">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t44" headers="r1c1-t44">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t44 r1c2-t44">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t44 r1c3-t44">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t44" headers="r1c1-t44">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t44 r1c2-t44">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t44 r1c3-t44">length of the event name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5697"></a>Returns</p>
<p><code>(oratext*)</code> target</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5698" class="refsect2"><a id="BABDIBBJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref641"></a><a id="sthref642"></a><a id="sthref643"></a>XmlEvGetPITarget0()</h3>
<p>Retrieves the <code>NULL</code>-terminated target for one of the following events:</p>
<ul>
<li>
<p><code>XML_EVENT_PI</code></p>
</li>
<li>
<p><code>XML_EVENT_PI_CONT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5699"></a>Syntax</p>
<pre>oratext *XmlEvGetPITarget0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t45">Parameter</th>
<th class="cellalignment2921" id="r1c2-t45">In/Out</th>
<th class="cellalignment2921" id="r1c3-t45">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t45" headers="r1c1-t45">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t45 r1c2-t45">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t45 r1c3-t45">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5700"></a>Returns</p>
<p><code>(oratext*)</code> target</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5701" class="refsect2"><a id="BABIDHAH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref644"></a><a id="sthref645"></a><a id="sthref646"></a>XmlEvGetPEIsGen()</h3>
<p>Determines if the general entity was declared, <code>XML_EVENT_PE_DECLARATION</code>.</p>
<p class="subhead1"><a id="CAXML5702"></a>Syntax</p>
<pre>boolean XmlEvGetPEIsGen(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t46">Parameter</th>
<th class="cellalignment2921" id="r1c2-t46">In/Out</th>
<th class="cellalignment2921" id="r1c3-t46">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t46" headers="r1c1-t46">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t46 r1c2-t46">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t46 r1c3-t46">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5703"></a>Returns</p>
<p><code>TRUE</code> for a general entity, <code>FALSE</code> if a parameter</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5704" class="refsect2"><a id="BABHCIFB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref647"></a><a id="sthref648"></a><a id="sthref649"></a>XmlEvGetPERepl()</h3>
<p>Retrieves the replacement text of PE declaration, <code>XML_EVENT_PE_DECLARATION</code>. Also, provides the length as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5705"></a>Syntax</p>
<pre>oratext *XmlEvGetPERepl(
   xmlevctx *evctx,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t47">Parameter</th>
<th class="cellalignment2921" id="r1c2-t47">In/Out</th>
<th class="cellalignment2921" id="r1c3-t47">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t47" headers="r1c1-t47">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t47 r1c2-t47">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t47 r1c3-t47">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t47" headers="r1c1-t47">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t47 r1c2-t47">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t47 r1c3-t47">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5706"></a>Returns</p>
<p><code>(oratext*)</code> PE replacement text</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5707" class="refsect2"><a id="BABDFFHJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref650"></a><a id="sthref651"></a><a id="sthref652"></a>XmlEvGetPERepl0()</h3>
<p>Retrieves the <code>NULL</code>-terminated replacement text of PE declaration, <code>XML_EVENT_PE_DECLARATION</code>.</p>
<p class="subhead1"><a id="CAXML5708"></a>Syntax</p>
<pre>oratext *XmlEvGetPERepl0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t48">Parameter</th>
<th class="cellalignment2921" id="r1c2-t48">In/Out</th>
<th class="cellalignment2921" id="r1c3-t48">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t48" headers="r1c1-t48">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t48 r1c2-t48">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t48 r1c3-t48">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5709"></a>Returns</p>
<p><code>(oratext*)</code> PE replacement text</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5710" class="refsect2"><a id="BABICHFH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref653"></a><a id="sthref654"></a><a id="sthref655"></a>XmlEvGetPrefix()</h3>
<p>Retrieves the prefix tag for one of the following events, and also returns the length of the event as an <code>OUT len</code> parameter:</p>
<ul>
<li>
<p><code>XML_EVENT_START_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_END_ELEMENT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5711"></a>Syntax</p>
<pre>oratext *XmlEvGetPrefix(
   xmlevctx *evctx,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t49">Parameter</th>
<th class="cellalignment2921" id="r1c2-t49">In/Out</th>
<th class="cellalignment2921" id="r1c3-t49">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t49" headers="r1c1-t49">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t49 r1c2-t49">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t49 r1c3-t49">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t49" headers="r1c1-t49">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t49 r1c2-t49">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t49 r1c3-t49">length of the prefix</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5712"></a>Returns</p>
<p><code>(oratext*)</code> the prefix tag</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5713" class="refsect2"><a id="BABDHAJE"></a>
<hr/>
<h3 class="refsect2"><a id="sthref656"></a><a id="sthref657"></a><a id="sthref658"></a>XmlEvGetPrefix0()</h3>
<p>Retrieves the <code>NULL</code>-terminated prefix tag for one of the following events:</p>
<ul>
<li>
<p><code>XML_EVENT_START_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_END_ELEMENT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5714"></a>Syntax</p>
<pre>oratext *XmlEvGetPrefix0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t50">Parameter</th>
<th class="cellalignment2921" id="r1c2-t50">In/Out</th>
<th class="cellalignment2921" id="r1c3-t50">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t50" headers="r1c1-t50">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t50 r1c2-t50">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t50 r1c3-t50">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5715"></a>Returns</p>
<p><code>(oratext*)</code> the prefix tag</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5716" class="refsect2"><a id="BABFCHIC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref659"></a><a id="sthref660"></a><a id="sthref661"></a>XmlEvGetPubId()</h3>
<p>Retrieves the public id for one of the following events; also, provides the length as an <code>OUT len</code> parameter:</p>
<ul>
<li>
<p><code>XML_EVENT_PE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_UE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_NOTATION_DECLARATION</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5717"></a>Syntax</p>
<pre>oratext *XmlEvGetPubId(
   xmlevctx *evctx,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t51">Parameter</th>
<th class="cellalignment2921" id="r1c2-t51">In/Out</th>
<th class="cellalignment2921" id="r1c3-t51">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t51" headers="r1c1-t51">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t51 r1c2-t51">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t51 r1c3-t51">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t51" headers="r1c1-t51">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t51 r1c2-t51">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t51 r1c3-t51">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5718"></a>Returns</p>
<p><code>(oratext*)</code> public id</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5719" class="refsect2"><a id="BABCEFIJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref662"></a><a id="sthref663"></a><a id="sthref664"></a>XmlEvGetPubId0()</h3>
<p>Retrieves the <code>NULL</code>-terminated public id for one of the following events:</p>
<ul>
<li>
<p><code>XML_EVENT_PE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_UE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_NOTATION_DECLARATION</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5720"></a>Syntax</p>
<pre>oratext *XmlEvGetPubId0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t52">Parameter</th>
<th class="cellalignment2921" id="r1c2-t52">In/Out</th>
<th class="cellalignment2921" id="r1c3-t52">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t52" headers="r1c1-t52">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t52 r1c2-t52">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t52 r1c3-t52">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5721"></a>Returnsb</p>
<p><code>(oratext*)</code> public id</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5722" class="refsect2"><a id="BABBIHFH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref665"></a><a id="sthref666"></a><a id="sthref667"></a>XmlEvGetSysId()</h3>
<p>Retrieves the system id for one of the following events; also, provides the length as an <code>OUT len</code> parameter:</p>
<ul>
<li>
<p><code>XML_EVENT_PE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_UE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_NOTATION_DECLARATION</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5723"></a>Syntax</p>
<pre>oratext *XmlEvGetSysId(
   xmlevctx *evctx,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t53">Parameter</th>
<th class="cellalignment2921" id="r1c2-t53">In/Out</th>
<th class="cellalignment2921" id="r1c3-t53">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t53" headers="r1c1-t53">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t53 r1c2-t53">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t53 r1c3-t53">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t53" headers="r1c1-t53">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t53 r1c2-t53">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t53 r1c3-t53">the length</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5724"></a>Returns</p>
<p><code>(oratext*)</code> system id</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5725" class="refsect2"><a id="BABJCBJC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref668"></a><a id="sthref669"></a><a id="sthref670"></a>XmlEvGetSysId0()</h3>
<p>Retrieves the <code>NULL</code>-terminated system id for one of the following events:</p>
<ul>
<li>
<p><code>XML_EVENT_PE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_UE_DECLARATION</code></p>
</li>
<li>
<p><code>XML_EVENT_NOTATION_DECLARATION</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5726"></a>Syntax</p>
<pre>oratext *XmlEvGetSysId0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t54">Parameter</th>
<th class="cellalignment2921" id="r1c2-t54">In/Out</th>
<th class="cellalignment2921" id="r1c3-t54">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t54" headers="r1c1-t54">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t54 r1c2-t54">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t54 r1c3-t54">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5727"></a>Returns</p>
<p><code>(oratext*)</code> system id</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5728" class="refsect2"><a id="BABDFABA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref671"></a><a id="sthref672"></a><a id="sthref673"></a>XmlEvGetTagID()</h3>
<p>Retrieves the ID for the tag&#39;s <code>QNAME</code>, for <code>XML_EVENT_START_ELEMENT</code> events. Invokes the user-supplied ID callback specified in <a href="#BABICDAI">XmlEvCreatePPCtx()</a>; if the callback is not specified, returns <code>0</code>.</p>
<p class="subhead1"><a id="CAXML5729"></a>Syntax</p>
<pre>sb8 XmlEvGetTagID(
   xmlevctx *evctx)
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t55">Parameter</th>
<th class="cellalignment2921" id="r1c2-t55">In/Out</th>
<th class="cellalignment2921" id="r1c3-t55">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t55" headers="r1c1-t55">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t55 r1c2-t55">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t55 r1c3-t55">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5730"></a>Returns</p>
<p><code>(sb8)</code> the ID</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5731" class="refsect2"><a id="BABDACCI"></a>
<hr/>
<h3 class="refsect2"><a id="sthref674"></a><a id="sthref675"></a><a id="sthref676"></a>XmlEvGetTagUriID()</h3>
<p>Retrieves the ID for the tag&#39;s URI, for <code>XML_EVENT_START_ELEMENT</code> and <code>XML_EVENT_END_ELEMENT</code> events. Invokes the user-supplied ID callback specified in <a href="#BABICDAI">XmlEvCreatePPCtx()</a>; if the callback is not specified, returns <code>0</code>.</p>
<p class="subhead1"><a id="CAXML5732"></a>Syntax</p>
<pre>sb8 XmlEvGetTagUriID(
   xmlevctx *evctx)
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t56">Parameter</th>
<th class="cellalignment2921" id="r1c2-t56">In/Out</th>
<th class="cellalignment2921" id="r1c3-t56">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t56" headers="r1c1-t56">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t56 r1c2-t56">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t56 r1c3-t56">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5733"></a>Returns</p>
<p><code>(sb8)</code> the ID</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5734" class="refsect2"><a id="BABCAHGC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref677"></a><a id="sthref678"></a><a id="sthref679"></a>XmlEvGetText()</h3>
<p>Retrieves the text for one of the following events, and also returns the length of the event as an <code>OUT len</code> parameter:</p>
<ul>
<li>
<p><code>XML_EVENT_CHARACTERS</code></p>
</li>
<li>
<p><code>XML_EVENT_CHARACTERS_CONT</code></p>
</li>
<li>
<p><code>XML_EVENT_SPACE</code></p>
</li>
<li>
<p><code>XML_EVENT_SPACE_CONT</code></p>
</li>
<li>
<p><code>XML_EVENT_COMMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_COMMENT_CONT</code></p>
</li>
<li>
<p><code>XML_EVENT_CDATA</code></p>
</li>
<li>
<p><code>XML_EVENT_CDATA_CONT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5735"></a>Syntax</p>
<pre>oratext *XmlEvGetText(
   xmlevctx *evctx
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t57">Parameter</th>
<th class="cellalignment2921" id="r1c2-t57">In/Out</th>
<th class="cellalignment2921" id="r1c3-t57">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t57" headers="r1c1-t57">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t57 r1c2-t57">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t57 r1c3-t57">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t57" headers="r1c1-t57">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t57 r1c2-t57">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t57 r1c3-t57">length of the event name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5736"></a>Returns</p>
<p><code>(oratext*)</code> event text</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5737" class="refsect2"><a id="BABEDABI"></a>
<hr/>
<h3 class="refsect2"><a id="sthref680"></a><a id="sthref681"></a><a id="sthref682"></a>XmlEvGetText0()</h3>
<p>Retrieves the <code>NULL</code>-terminated text for one of the following events:</p>
<ul>
<li>
<p><code>XML_EVENT_CHARACTERS</code></p>
</li>
<li>
<p><code>XML_EVENT_CHARACTERS_CONT</code></p>
</li>
<li>
<p><code>XML_EVENT_SPACE</code></p>
</li>
<li>
<p><code>XML_EVENT_SPACE_CONT</code></p>
</li>
<li>
<p><code>XML_EVENT_COMMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_COMMENT_CONT</code></p>
</li>
<li>
<p><code>XML_EVENT_CDATA</code></p>
</li>
<li>
<p><code>XML_EVENT_CDATA_CONT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5738"></a>Syntax</p>
<pre>oratext *XmlEvGetText0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t58">Parameter</th>
<th class="cellalignment2921" id="r1c2-t58">In/Out</th>
<th class="cellalignment2921" id="r1c3-t58">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t58" headers="r1c1-t58">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t58 r1c2-t58">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t58 r1c3-t58">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5739"></a>Returns</p>
<p><code>(oratext*)</code> event text</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5740" class="refsect2"><a id="BABCIIFD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref683"></a><a id="sthref684"></a><a id="sthref685"></a>XmlEvGetUENdata()</h3>
<p>Retrieves the ndata for <code>XML_EVENT_UE_DECLARATION</code> event, and also returns the length of the event as an <code>OUT len</code> parameter.</p>
<p class="subhead1"><a id="CAXML5741"></a>Syntax</p>
<pre>oratext *XmlEvGetUENdata(
   xmlevctx *evctx,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t59">Parameter</th>
<th class="cellalignment2921" id="r1c2-t59">In/Out</th>
<th class="cellalignment2921" id="r1c3-t59">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t59" headers="r1c1-t59">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t59 r1c2-t59">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t59 r1c3-t59">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t59" headers="r1c1-t59">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t59 r1c2-t59">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t59 r1c3-t59">length of the event name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5742"></a>Returns</p>
<p><code>(oratext*)</code> ndata</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5743" class="refsect2"><a id="BABDBECA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref686"></a><a id="sthref687"></a><a id="sthref688"></a>XmlEvGetUENdata0()</h3>
<p>Retrieves the <code>NULL</code>-terminated ndata for <code>XML_EVENT_UE_DECLARATION</code> event.</p>
<p class="subhead1"><a id="CAXML5744"></a>Syntax</p>
<pre>oratext *XmlEvGetUENdata0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t60">Parameter</th>
<th class="cellalignment2921" id="r1c2-t60">In/Out</th>
<th class="cellalignment2921" id="r1c3-t60">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t60" headers="r1c1-t60">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t60 r1c2-t60">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t60 r1c3-t60">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5745"></a>Returns</p>
<p><code>(oratext*)</code> ndata</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5746" class="refsect2"><a id="BABDGIJG"></a>
<hr/>
<h3 class="refsect2"><a id="sthref689"></a><a id="sthref690"></a><a id="sthref691"></a>XmlEvGetURI()</h3>
<p>Retrieves the URI tag for one of the following events, and also returns the length of the event as an <code>OUT len</code> parameter:</p>
<ul>
<li>
<p><code>XML_EVENT_START_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_END_ELEMENT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5747"></a>Syntax</p>
<pre>oratext *XmlEvGetURI(
   xmlevctx *evctx,
   ub4 *len);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t61">Parameter</th>
<th class="cellalignment2921" id="r1c2-t61">In/Out</th>
<th class="cellalignment2921" id="r1c3-t61">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t61" headers="r1c1-t61">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t61 r1c2-t61">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t61 r1c3-t61">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t61" headers="r1c1-t61">
<pre>len
</pre></td>
<td class="cellalignment2922" headers="r3c1-t61 r1c2-t61">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t61 r1c3-t61">length of the event name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5748"></a>Returns</p>
<p><code>(oratext*)</code> URI tag</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5749" class="refsect2"><a id="BABCCEGF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref692"></a><a id="sthref693"></a><a id="sthref694"></a>XmlEvGetURI0()</h3>
<p>Retrieves the <code>NULL</code>-terminated URI tag for one of the following events:</p>
<ul>
<li>
<p><code>XML_EVENT_START_ELEMENT</code></p>
</li>
<li>
<p><code>XML_EVENT_END_ELEMENT</code></p>
</li>
</ul>
<p class="subhead1"><a id="CAXML5750"></a>Syntax</p>
<pre>oratext *XmlEvGetURI0(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t62">Parameter</th>
<th class="cellalignment2921" id="r1c2-t62">In/Out</th>
<th class="cellalignment2921" id="r1c3-t62">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t62" headers="r1c1-t62">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t62 r1c2-t62">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t62 r1c3-t62">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5751"></a>Returns</p>
<p><code>(oratext*)</code> URI tag</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5752" class="refsect2"><a id="BABJCJCB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref695"></a><a id="sthref696"></a><a id="sthref697"></a>XmlEvGetVersion()</h3>
<p>Provides information about version specification in XML declaration for the <code>XML_EVENT_START_DOCUMENT</code> event.</p>
<p class="subhead1"><a id="CAXML5753"></a>Syntax</p>
<pre>oratext *XmlEvGetVersion(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t63">Parameter</th>
<th class="cellalignment2921" id="r1c2-t63">In/Out</th>
<th class="cellalignment2921" id="r1c3-t63">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t63" headers="r1c1-t63">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t63 r1c2-t63">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t63 r1c3-t63">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5754"></a>Returns</p>
<p><code>(oratext*)</code> version string from the XML declaration.</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5755" class="refsect2"><a id="BABHGGHE"></a>
<hr/>
<h3 class="refsect2"><a id="sthref698"></a><a id="sthref699"></a><a id="sthref700"></a>XmlEvIsEncodingSpecified()</h3>
<p>Provides information about encoding specification in XML declaration for the <code>XML_EVENT_START_DOCUMENT</code> event.</p>
<p class="subhead1"><a id="CAXML5756"></a>Syntax</p>
<pre>boolean XmlEvIsEncodingSpecified(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t64">Parameter</th>
<th class="cellalignment2921" id="r1c2-t64">In/Out</th>
<th class="cellalignment2921" id="r1c3-t64">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t64" headers="r1c1-t64">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t64 r1c2-t64">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t64 r1c3-t64">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5757"></a>Returns</p>
<p><code>TRUE</code> if encoding was specified in XML declaration, <code>FALSE</code> otherwise</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5758" class="refsect2"><a id="BABBJHAF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref701"></a><a id="sthref702"></a><a id="sthref703"></a>XmlEvIsNamespaceAttr()</h3>
<p>Determines if an attribute is a namespace atrribute for <code>XML_EVENT_START_ELEMENT</code> event.</p>
<p class="subhead1"><a id="CAXML5759"></a>Syntax</p>
<pre>boolean XmlEvIsNamespaceAttr(
   xmlevctx *evctx,
   ub4 index);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t65">Parameter</th>
<th class="cellalignment2921" id="r1c2-t65">In/Out</th>
<th class="cellalignment2921" id="r1c3-t65">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t65" headers="r1c1-t65">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t65 r1c2-t65">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t65 r1c3-t65">XML Event context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t65" headers="r1c1-t65">
<pre>index
</pre></td>
<td class="cellalignment2922" headers="r3c1-t65 r1c2-t65">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t65 r1c3-t65">index of the attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5760"></a>Returns</p>
<p><code>TRUE</code> if an attribute is a namespace attribute, <code>FALSE</code> otherwise</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5761" class="refsect2"><a id="BABBBCCF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref704"></a><a id="sthref705"></a><a id="sthref706"></a>XmlEvIsStandalone()</h3>
<p>Provides information about standalone specification in XML declaration for the <code>XML_EVENT_START_DOCUMENT</code> event.</p>
<p class="subhead1"><a id="CAXML5762"></a>Syntax</p>
<pre>sword  XmlEvIsStandalone(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t66">Parameter</th>
<th class="cellalignment2921" id="r1c2-t66">In/Out</th>
<th class="cellalignment2921" id="r1c3-t66">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t66" headers="r1c1-t66">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t66 r1c2-t66">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t66 r1c3-t66">XML Events contextt</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="CAXML5763"></a>Returns</p>
<p><code>(sword)</code> <code>-1</code> if standalone was not specified in the XML declaration, <code>0</code> if <code>FALSE</code> was specified for standalone, and <code>1</code> if <code>TRUE</code> was specified for standalone</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5764" class="refsect2"><a id="BABIFHCA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref707"></a><a id="sthref708"></a><a id="sthref709"></a>XmlEvNext()</h3>
<p>Gets the next event; advances the parser.</p>
<p class="subhead1"><a id="CAXML5765"></a>Syntax</p>
<pre>xmlevtype XmlEvNext(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t67">Parameter</th>
<th class="cellalignment2921" id="r1c2-t67">In/Out</th>
<th class="cellalignment2921" id="r1c3-t67">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t67" headers="r1c1-t67">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t67 r1c2-t67">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t67 r1c3-t67">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="CAXML5766"></a>Returns</p>
<p><code>(xmlevtype)</code> the event</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5767" class="refsect2"><a id="BABBEAFE"></a>
<hr/>
<h3 class="refsect2"><a id="sthref710"></a><a id="sthref711"></a><a id="sthref712"></a>XmlEvNextTag()</h3>
<p>Advances the parser to the next tag event, such as <code>XML_EVENT_START_ELEMENT</code>, <code>XML_EVENT_END_ELEMENT</code>, and <code>XML_EVENT_END_DOCUMENT</code>.</p>
<p class="subhead1"><a id="CAXML5768"></a>Syntax</p>
<pre>xmlevtype XmlEvNextTag(
   xmlevctx *evctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t68">Parameter</th>
<th class="cellalignment2921" id="r1c2-t68">In/Out</th>
<th class="cellalignment2921" id="r1c3-t68">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t68" headers="r1c1-t68">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t68 r1c2-t68">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t68 r1c3-t68">XML Event context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5769"></a>Returns</p>
<p><code>(xmlevtype)</code> the event</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5770" class="refsect2"><a id="BABGDFJJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref713"></a><a id="sthref714"></a><a id="sthref715"></a>XmlEvLoadPPDoc()</h3>
<p>Loads a new document and sets it up for pull parsing. Prepares to start parsing the XML document from an input source in pull-parse mode. Input sources are the same as for <a href="xml.htm#Xmlloaddom">XmlLoadDom()</a> and <a href="xml.htm#Xmlloadsax">XmlLoadSax()</a> of <a href="xml.htm#Xmlpackage">Chapter 11, &#34;Package XML APIs for C&#34;</a>. The actual parsing is driven by multiple calls to <a href="#BABIFHCA">XmlEvNext()</a>.</p>
<p class="subhead1"><a id="CAXML5771"></a>Syntax</p>
<pre>xmlerr XmlEvLoadPPDoc(
   xmlctx *xctx,
   xmlevctx *evctx,
   oratext *inputType,
   void *input,
   ub4 inputLen,
   oratext *inputEncoding);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t69">Parameter</th>
<th class="cellalignment2921" id="r1c2-t69">In/Out</th>
<th class="cellalignment2921" id="r1c3-t69">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t69" headers="r1c1-t69">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t69 r1c2-t69">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t69 r1c3-t69">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t69" headers="r1c1-t69">
<pre>evctx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t69 r1c2-t69">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t69 r1c3-t69">XML Events contextt</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t69" headers="r1c1-t69">
<pre>inputType
</pre></td>
<td class="cellalignment2922" headers="r4c1-t69 r1c2-t69">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t69 r1c3-t69">type of input, such as file, buffer, uri, stream, or stdio</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t69" headers="r1c1-t69">
<pre>input
</pre></td>
<td class="cellalignment2922" headers="r5c1-t69 r1c2-t69">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r5c1-t69 r1c3-t69">the input</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t69" headers="r1c1-t69">
<pre>inputLen
</pre></td>
<td class="cellalignment2922" headers="r6c1-t69 r1c2-t69">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r6c1-t69 r1c3-t69">input length for buffer input type</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r7c1-t69" headers="r1c1-t69">
<pre>inputEncoding
</pre></td>
<td class="cellalignment2922" headers="r7c1-t69 r1c2-t69">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r7c1-t69 r1c3-t69">input encoding</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5772"></a>Returns</p>
<p><code>(xmlerr)</code> the error code</p>
</div>
<!-- class="refsect2" -->
<div id="CAXML5773" class="refsect2"><a id="BEIJAEJF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref716"></a><a id="sthref717"></a><a id="sthref718"></a>XmlEvSchemaValidate()</h3>
<p>Validates XML documents represented by events. Initializes the stream validator.</p>
<p>This is an opaque method. An alternate approach would be to use the transparent <a href="#BEIIICFA">XmlEvCreateSVCtx()</a> and <a href="#BEIJEJBJ">XmlEvDestroySVCtx()</a>.</p>
<p class="subhead1"><a id="CAXML5774"></a>Syntax</p>
<pre>xmlerr XmlEvSchemaValidate(
   xmlctx *xctx,
   xsdctx *sctx,
   xmlevctx *docEvCtx,
   oratext **errmsg);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t70">Parameter</th>
<th class="cellalignment2921" id="r1c2-t70">In/Out</th>
<th class="cellalignment2921" id="r1c3-t70">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t70" headers="r1c1-t70">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t70 r1c2-t70">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t70 r1c3-t70">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t70" headers="r1c1-t70">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t70 r1c2-t70">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t70 r1c3-t70">Schema context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t70" headers="r1c1-t70">
<pre>docEvCtx
</pre></td>
<td class="cellalignment2922" headers="r4c1-t70 r1c2-t70">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t70 r1c3-t70">Event context for the document that is validated</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t70" headers="r1c1-t70">
<pre>errmsg
</pre></td>
<td class="cellalignment2922" headers="r5c1-t70 r1c2-t70">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r5c1-t70 r1c3-t70">The error message that corresponds to the error code</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5775"></a>Returns</p>
<p><code>(xmlerr)</code> the error code</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2913">
<tr>
<td class="cellalignment2922">
<table class="cellalignment2918">
<tr>
<td class="cellalignment2917"><a href="dom.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2917"><a href="orastream.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2925">
<table class="cellalignment2916">
<tr>
<td class="cellalignment2917"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2917"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2917"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2917"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2917"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2917"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>