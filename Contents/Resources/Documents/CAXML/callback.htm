<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2690"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Package%20Callback%20APIs%20for%20C"></a><title>Package Callback APIs for C</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 726"/>
<meta name="dcterms.created" content="2013-04-05T15:50:5Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database XML C API Reference"/>
<meta name="dcterms.identifier" content="E15885-04"/>
<meta name="dcterms.isVersionOf" content="CAXML"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="datatypes.htm" title="Previous" type="text/html"/>
<link rel="Next" href="dom.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E15885-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">6/22</span> <!-- End Header -->
<div id="CAXML00200" class="chapter"><a id="Callbackpackage"></a>
<h1 class="chapter"><span class="secnum">2</span> <a id="sthref11"></a> <a id="sthref12"></a> <a id="sthref13"></a> Package Callback APIs for C</h1>
<p>This package defines macros which declare functions (or function pointers) for XML callbacks. Callbacks are used for error-message handling, memory allocation and freeing, and stream operations.</p>
<p>This chapter contains the following section:</p>
<ul>
<li>
<p><a href="#Callbackinterfaces">Callback Methods</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADXDK" href="../ADXDK/toc.htm"><span class="italic">Oracle XML Developer&#39;s Kit Programmer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink ADXDB" href="../ADXDB/toc.htm"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a></p>
</li>
</ul>
</div>
<div class="refentry"><a id="Callbackinterfaces"></a>
<hr/>
<div id="CAXML5108" class="refsect1">
<h2 class="refsect1">Callback Methods</h2>
<p><a href="#Summarycallback">Table 2-1</a> summarizes the methods available through the Callback interface.</p>
<div id="CAXML5109" class="tblformal">
<p class="titleintable"><a id="sthref14"></a><a id="Summarycallback"></a>Table 2-1 Summary of Callback Methods</p>
<table class="cellalignment2920" title="Summary of Callback Methods" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t3">Function</th>
<th class="cellalignment2921" id="r1c2-t3">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#CHDEAICD">XML_ACCESS_CLOSE_F()</a></p>
</td>
<td class="cellalignment2922" headers="r2c1-t3 r1c2-t3">
<p>User-defined access method close callback.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#CHDJFIHF">XML_ACCESS_OPEN_F()</a></p>
</td>
<td class="cellalignment2922" headers="r3c1-t3 r1c2-t3">
<p>User-defined access method open callback.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#CHDDEDGH">XML_ACCESS_READ_F()</a></p>
</td>
<td class="cellalignment2922" headers="r4c1-t3 r1c2-t3">
<p>User-defined access method read callback.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#CHDDAEHH">XML_ALLOC_F()</a></p>
</td>
<td class="cellalignment2922" headers="r5c1-t3 r1c2-t3">
<p>Low-level memory allocation.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#CHDHFDDJ">XML_ERRMSG_F()</a></p>
</td>
<td class="cellalignment2922" headers="r6c1-t3 r1c2-t3">
<p>Handles error message.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#CHDJCGCH">XML_FREE_F()</a></p>
</td>
<td class="cellalignment2922" headers="r7c1-t3 r1c2-t3">
<p>Low-level memory freeing.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#CHDFBIIG">XML_STREAM_CLOSE_F()</a></p>
</td>
<td class="cellalignment2922" headers="r8c1-t3 r1c2-t3">
<p>User-defined stream close callback.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#CHDJIABG">XML_STREAM_OPEN_F()</a></p>
</td>
<td class="cellalignment2922" headers="r9c1-t3 r1c2-t3">
<p>User-defined stream open callback.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#CHDJGHFG">XML_STREAM_READ_F()</a></p>
</td>
<td class="cellalignment2922" headers="r10c1-t3 r1c2-t3">
<p>User-defined stream read callback.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#CHDCEHEI">XML_STREAM_WRITE_F()</a></p>
</td>
<td class="cellalignment2922" headers="r11c1-t3 r1c2-t3">
<p>User-defined stream write callback.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CAXML5110" class="refsect2"><a id="CHDEAICD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref15"></a><a id="sthref16"></a><a id="sthref17"></a>XML_ACCESS_CLOSE_F()</h3>
<p>This macro defines a prototype for the close function callback used to access a URL.</p>
<p class="subhead1"><a id="CAXML5111"></a>Syntax</p>
<pre>#define XML_ACCESS_CLOSE_F(func, ctx, uh)
xmlerr func(
   void *ctx,
    xmlurlhdl *uh);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t4">Parameter</th>
<th class="cellalignment2921" id="r1c2-t4">In/Out</th>
<th class="cellalignment2921" id="r1c3-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t4" headers="r1c1-t4">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t4 r1c2-t4">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t4 r1c3-t4">user-defined context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t4" headers="r1c1-t4">
<pre>uh
</pre></td>
<td class="cellalignment2922" headers="r3c1-t4 r1c2-t4">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t4 r1c3-t4">URL handle(s)</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5112"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, <code>0</code> on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJFIHF">XML_ACCESS_OPEN_F()</a>, <a href="#CHDDEDGH">XML_ACCESS_READ_F()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5113" class="refsect2"><a id="CHDJFIHF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref18"></a><a id="sthref19"></a><a id="sthref20"></a>XML_ACCESS_OPEN_F()</h3>
<p>This macro defines a prototype for the open function callback used to access a URL.</p>
<p class="subhead1"><a id="CAXML5114"></a>Syntax</p>
<pre>#define XML_ACCESS_OPEN_F(func, ctx, uri, parts, length, uh)
xmlerr func(
   void *ctx,
   oratext *uri, 
   xmlurlpart *parts,
   ubig_ora *length, 
   xmlurlhdl *uh);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t6">Parameter</th>
<th class="cellalignment2921" id="r1c2-t6">In/Out</th>
<th class="cellalignment2921" id="r1c3-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t6" headers="r1c1-t6">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t6 r1c3-t6">user-defined context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t6" headers="r1c1-t6">
<pre>uri
</pre></td>
<td class="cellalignment2922" headers="r3c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t6 r1c3-t6">URI to be opened</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t6" headers="r1c1-t6">
<pre>parts
</pre></td>
<td class="cellalignment2922" headers="r4c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t6 r1c3-t6">URI broken into components</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t6" headers="r1c1-t6">
<pre>length
</pre></td>
<td class="cellalignment2922" headers="r5c1-t6 r1c2-t6">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r5c1-t6 r1c3-t6">total length of input data if known, <code>0</code> otherwise</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t6" headers="r1c1-t6">
<pre>uh
</pre></td>
<td class="cellalignment2922" headers="r6c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r6c1-t6 r1c3-t6">URL handle(s)</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5115"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, <code>0</code> on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDEAICD">XML_ACCESS_CLOSE_F()</a>, <a href="#CHDDEDGH">XML_ACCESS_READ_F()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5116" class="refsect2"><a id="CHDDEDGH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref21"></a><a id="sthref22"></a><a id="sthref23"></a>XML_ACCESS_READ_F()</h3>
<p>This macro defines a prototype for the read function callback used to access a URL.</p>
<p class="subhead1"><a id="CAXML5117"></a>Syntax</p>
<pre>#define XML_ACCESS_READ_F(func, ctx, uh, data, nraw, eoi)
xmlerr func(
   void *ctx, 
   xmlurlhdl *uh, 
   oratext **data, 
   ubig_ora *nraw,
   ub1 *eoi);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t8">Parameter</th>
<th class="cellalignment2921" id="r1c2-t8">In/Out</th>
<th class="cellalignment2921" id="r1c3-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t8" headers="r1c1-t8">
<pre>ctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t8 r1c2-t8">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t8 r1c3-t8">user-defined context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t8" headers="r1c1-t8">
<pre>uh
</pre></td>
<td class="cellalignment2922" headers="r3c1-t8 r1c2-t8">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t8 r1c3-t8">URL handle(s)</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t8" headers="r1c1-t8">
<pre>data
</pre></td>
<td class="cellalignment2922" headers="r4c1-t8 r1c2-t8">
<pre>IN/OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t8 r1c3-t8">recipient data buffer; reset to start of data</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t8" headers="r1c1-t8">
<pre>nraw
</pre></td>
<td class="cellalignment2922" headers="r5c1-t8 r1c2-t8">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r5c1-t8 r1c3-t8">number of real data bytes read</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t8" headers="r1c1-t8">
<pre>eoi
</pre></td>
<td class="cellalignment2922" headers="r6c1-t8 r1c2-t8">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r6c1-t8 r1c3-t8">signal to end of information; last chunk</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5118"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, <code>0</code> on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJFIHF">XML_ACCESS_OPEN_F()</a>, <a href="#CHDEAICD">XML_ACCESS_CLOSE_F()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5119" class="refsect2"><a id="CHDDAEHH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref24"></a><a id="sthref25"></a><a id="sthref26"></a>XML_ALLOC_F()</h3>
<p>This macro defines a prototype for the low-level memory <code>alloc</code> function provided by the user. If no allocator is provided, <code>malloc</code> is used. Memory should not be zeroed by this function. Matches <a href="#CHDJCGCH">XML_FREE_F()</a>.</p>
<p class="subhead1"><a id="CAXML5120"></a>Syntax</p>
<pre>#define XML_ALLOC_F(func, mctx, size)
void *func(
   void *mctx,
   size_t size);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t10">Parameter</th>
<th class="cellalignment2921" id="r1c2-t10">In/Out</th>
<th class="cellalignment2921" id="r1c3-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t10" headers="r1c1-t10">
<pre>mctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t10 r1c2-t10">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t10 r1c3-t10">low-level memory context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t10" headers="r1c1-t10">
<pre>size
</pre></td>
<td class="cellalignment2922" headers="r3c1-t10 r1c2-t10">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t10 r1c3-t10">number of bytes to allocated</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5121"></a>Returns</p>
<p><code>(void *)</code> allocated memory</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJCGCH">XML_FREE_F()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5122" class="refsect2"><a id="CHDHFDDJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref27"></a><a id="sthref28"></a><a id="sthref29"></a>XML_ERRMSG_F()</h3>
<p>This macro defines a prototype for the error message handling function. If no error message callback is provided at XML initialization time, errors will be printed to <code>stderr</code>. If a handler is provided, it will be invoked instead of printing to stderr.</p>
<p class="subhead1"><a id="CAXML5123"></a>Syntax</p>
<pre>#define XML_ERRMSG_F(func, ectx, msg, err)
void func(
   void *ectx,
   oratext *msg,
   xmlerr err);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t12">Parameter</th>
<th class="cellalignment2921" id="r1c2-t12">In/Out</th>
<th class="cellalignment2921" id="r1c3-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t12" headers="r1c1-t12">
<pre>ectx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t12 r1c2-t12">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t12 r1c3-t12">error message context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t12" headers="r1c1-t12">
<pre>msg
</pre></td>
<td class="cellalignment2922" headers="r3c1-t12 r1c2-t12">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t12 r1c3-t12">text of error message</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t12" headers="r1c1-t12">
<pre>err
</pre></td>
<td class="cellalignment2922" headers="r4c1-t12 r1c2-t12">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t12 r1c3-t12">numeric error code</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xml.htm#Xmlcreate">XmlCreate()</a> in <a href="xml.htm#Xmlpackage">Chapter 11, &#34;Package XML APIs for C&#34;</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5124" class="refsect2"><a id="CHDJCGCH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref30"></a><a id="sthref31"></a><a id="sthref32"></a>XML_FREE_F()</h3>
<p>This macro defines a prototype for the low-level memory free function provided by the user. If no allocator is provided, free() is used. Matches <a href="#CHDDAEHH">XML_ALLOC_F()</a>.</p>
<p class="subhead1"><a id="CAXML5125"></a>Syntax</p>
<pre>#define XML_FREE_F(func, mctx, ptr)
void func(
   void *mctx,
   void *ptr);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t14">Parameter</th>
<th class="cellalignment2921" id="r1c2-t14">In/Out</th>
<th class="cellalignment2921" id="r1c3-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t14" headers="r1c1-t14">
<pre>mctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t14 r1c2-t14">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t14 r1c3-t14">low-level memory context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t14" headers="r1c1-t14">
<pre>ptr
</pre></td>
<td class="cellalignment2922" headers="r3c1-t14 r1c2-t14">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t14 r1c3-t14">memory to be freed</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CAXML5126" class="refsect2"><a id="CHDFBIIG"></a>
<hr/>
<h3 class="refsect2"><a id="sthref33"></a><a id="sthref34"></a><a id="sthref35"></a>XML_STREAM_CLOSE_F()</h3>
<p>This macro defines a prototype for the close function callback, called to close an open source and free its resources.</p>
<p class="subhead1"><a id="CAXML5127"></a>Syntax</p>
<pre>#define XML_STREAM_CLOSE_F(func, xctx, sctx)
void func(
   xmlctx *xctx,
   void *sctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t15">Parameter</th>
<th class="cellalignment2921" id="r1c2-t15">In/Out</th>
<th class="cellalignment2921" id="r1c3-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t15" headers="r1c1-t15">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t15 r1c2-t15">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t15 r1c3-t15">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t15" headers="r1c1-t15">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t15 r1c2-t15">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t15 r1c3-t15">user-defined stream context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJIABG">XML_STREAM_OPEN_F()</a>, <a href="#CHDJGHFG">XML_STREAM_READ_F()</a>, <a href="#CHDCEHEI">XML_STREAM_WRITE_F()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5128" class="refsect2"><a id="CHDJIABG"></a>
<hr/>
<h3 class="refsect2"><a id="sthref36"></a><a id="sthref37"></a><a id="sthref38"></a>XML_STREAM_OPEN_F()</h3>
<p>This macro defines a prototype for the open function callback, which is called once to open the input source. This function should return <code>XMLERR_OK</code> on success.</p>
<p class="subhead1"><a id="CAXML5129"></a>Syntax</p>
<pre>#define XML_STREAM_OPEN_F(func, xctx, sctx, path, parts, length)
xmlerr func(
   xmlctx *xctx,
   void *sctx,
   oratext *path,
   void *parts,
   ubig_ora *length);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t17">Parameter</th>
<th class="cellalignment2921" id="r1c2-t17">In/Out</th>
<th class="cellalignment2921" id="r1c3-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t17" headers="r1c1-t17">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t17 r1c3-t17">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t17" headers="r1c1-t17">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t17 r1c3-t17">user-defined stream context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t17" headers="r1c1-t17">
<pre>path
</pre></td>
<td class="cellalignment2922" headers="r4c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t17 r1c3-t17">full path of the URI to be opened</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t17" headers="r1c1-t17">
<pre>parts
</pre></td>
<td class="cellalignment2922" headers="r5c1-t17 r1c2-t17">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r5c1-t17 r1c3-t17">URI broken down into components (opaque pointer)</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t17" headers="r1c1-t17">
<pre>length
</pre></td>
<td class="cellalignment2922" headers="r6c1-t17 r1c2-t17">
<pre>(OUT)
</pre></td>
<td class="cellalignment2922" headers="r6c1-t17 r1c3-t17">total length of input data if known, <code>0</code> if not known</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5130"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, <code>0</code> on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDFBIIG">XML_STREAM_CLOSE_F()</a>, <a href="#CHDJGHFG">XML_STREAM_READ_F()</a>, <a href="#CHDCEHEI">XML_STREAM_WRITE_F()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5131" class="refsect2"><a id="CHDJGHFG"></a>
<hr/>
<h3 class="refsect2"><a id="sthref39"></a><a id="sthref40"></a><a id="sthref41"></a>XML_STREAM_READ_F()</h3>
<p>This macro defines a prototype for the read function callback, called to read data from an open source into a buffer, returning the number of bytes read (&lt; <code>0</code> on error). The <code>eoi</code> flag determines if this is the final block of data.</p>
<p>On EOI, the close function will be called automatically.</p>
<p class="subhead1"><a id="CAXML5132"></a>Syntax</p>
<pre>#define XML_STREAM_READ_F(func, xctx, sctx, path, dest, size, nraw, eoi)
xmlerr func(
   xmlctx *xctx,
   void *sctx,
   oratext *path,
   oratext *dest,
   size_t size,
   sbig_ora *nraw,
   boolean *eoi);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t19">Parameter</th>
<th class="cellalignment2921" id="r1c2-t19">In/Out</th>
<th class="cellalignment2921" id="r1c3-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t19" headers="r1c1-t19">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t19 r1c3-t19">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t19" headers="r1c1-t19">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t19 r1c3-t19">user-defined stream context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t19" headers="r1c1-t19">
<pre>path
</pre></td>
<td class="cellalignment2922" headers="r4c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t19 r1c3-t19">full URI of the open source (for error messages)</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t19" headers="r1c1-t19">
<pre>dest
</pre></td>
<td class="cellalignment2922" headers="r5c1-t19 r1c2-t19">
<pre>(OUT)
</pre></td>
<td class="cellalignment2922" headers="r5c1-t19 r1c3-t19">destination buffer to read data into</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t19" headers="r1c1-t19">
<pre>size
</pre></td>
<td class="cellalignment2922" headers="r6c1-t19 r1c2-t19">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r6c1-t19 r1c3-t19">size of destination buffer</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r7c1-t19" headers="r1c1-t19">
<pre>nraw
</pre></td>
<td class="cellalignment2922" headers="r7c1-t19 r1c2-t19">
<pre>(OUT)
</pre></td>
<td class="cellalignment2922" headers="r7c1-t19 r1c3-t19">number of bytes read</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r8c1-t19" headers="r1c1-t19">
<pre>eoi
</pre></td>
<td class="cellalignment2922" headers="r8c1-t19 r1c2-t19">
<pre>(OUT)
</pre></td>
<td class="cellalignment2922" headers="r8c1-t19 r1c3-t19">signal to end of information; last chunk</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5133"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, <code>0</code> on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJIABG">XML_STREAM_OPEN_F()</a>, <a href="#CHDFBIIG">XML_STREAM_CLOSE_F()</a>, <a href="#CHDCEHEI">XML_STREAM_WRITE_F()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5134" class="refsect2"><a id="CHDCEHEI"></a>
<hr/>
<h3 class="refsect2"><a id="sthref42"></a><a id="sthref43"></a><a id="sthref44"></a>XML_STREAM_WRITE_F()</h3>
<p>This macro defines a prototype for the write function callback, called to write data to a user-defined stream.</p>
<p class="subhead1"><a id="CAXML5135"></a>Syntax</p>
<pre>#define XML_STREAM_WRITE_F(func, xctx, sctx, path, src, size)
xmlerr func(
   xmlctx *xctx,
   void *sctx,
   oratext *path,
   oratext *src,
   size_t size);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t21">Parameter</th>
<th class="cellalignment2921" id="r1c2-t21">In/Out</th>
<th class="cellalignment2921" id="r1c3-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t21" headers="r1c1-t21">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t21 r1c2-t21">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t21 r1c3-t21">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t21" headers="r1c1-t21">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t21 r1c2-t21">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t21 r1c3-t21">user-defined stream context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t21" headers="r1c1-t21">
<pre>path
</pre></td>
<td class="cellalignment2922" headers="r4c1-t21 r1c2-t21">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t21 r1c3-t21">full URI of the open source (for error messages)</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t21" headers="r1c1-t21">
<pre>src
</pre></td>
<td class="cellalignment2922" headers="r5c1-t21 r1c2-t21">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r5c1-t21 r1c3-t21">source buffer to read data from</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t21" headers="r1c1-t21">
<pre>size
</pre></td>
<td class="cellalignment2922" headers="r6c1-t21 r1c2-t21">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r6c1-t21 r1c3-t21">size of source in bytes</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5136"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, <code>0</code> on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJIABG">XML_STREAM_OPEN_F()</a>, <a href="#CHDFBIIG">XML_STREAM_CLOSE_F()</a>, <a href="#CHDJGHFG">XML_STREAM_READ_F()</a></div>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2913">
<tr>
<td class="cellalignment2922">
<table class="cellalignment2918">
<tr>
<td class="cellalignment2917"><a href="datatypes.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2917"><a href="dom.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2925">
<table class="cellalignment2916">
<tr>
<td class="cellalignment2917"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2917"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2917"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2917"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2917"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2917"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>