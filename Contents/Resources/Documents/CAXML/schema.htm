<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2701"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Package%20Schema%20APIs%20for%20C"></a><title>Package Schema APIs for C</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 726"/>
<meta name="dcterms.created" content="2013-04-05T15:50:7Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database XML C API Reference"/>
<meta name="dcterms.identifier" content="E15885-04"/>
<meta name="dcterms.isVersionOf" content="CAXML"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="sax.htm" title="Previous" type="text/html"/>
<link rel="Next" href="soap.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E15885-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/22</span> <!-- End Header -->
<div id="CAXML05000" class="chapter"><a id="Schemapackage"></a>
<h1 class="chapter"><span class="secnum">8</span> <a id="sthref848"></a> <a id="sthref849"></a> <a id="sthref850"></a> Package Schema APIs for C</h1>
<p>This C implementation of the XML schema validator follows the W3C XML Schema specification, rev REC-xmlschema-1-20010502. It implements the required behavior of a schema validator for multiple schema documents to be assembled into a schema. This resulting schema can be used to validate a specific instance document.</p>
<p>For event-based schema validation, see the methods documented in <a href="event.htm#Eventpackage">Chapter 4, &#34;Package Event APIs for C&#34;</a>.</p>
<p>This chapter contains the following section:</p>
<ul>
<li>
<p><a href="#Schemainterfaces">Schema Interface</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADXDK" href="../ADXDK/toc.htm"><span class="italic">Oracle XML Developer&#39;s Kit Programmer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink ADXDB" href="../ADXDB/toc.htm"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a></p>
</li>
</ul>
</div>
<div class="refentry"><a id="Schemainterfaces"></a>
<hr/>
<div id="CAXML5964" class="refsect1">
<h2 class="refsect1">Schema Interface</h2>
<p><a href="#Summaryschema">Table 8-1</a> summarizes the methods available through the <code>Schema</code> interface.</p>
<div id="CAXML5965" class="tblformal">
<p class="titleintable"><a id="sthref851"></a><a id="Summaryschema"></a>Table 8-1 Summary of Schema Methods</p>
<table class="cellalignment2920" title="Summary of Schema Methods" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t3">Function</th>
<th class="cellalignment2921" id="r1c2-t3">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemaclean">XmlSchemaClean()</a></p>
</td>
<td class="cellalignment2922" headers="r2c1-t3 r1c2-t3">
<p>Cleans up loaded schemas in a schema context and recycle the schema context.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemacreate">XmlSchemaCreate()</a></p>
</td>
<td class="cellalignment2922" headers="r3c1-t3 r1c2-t3">
<p>Creates and returns a schema context.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemadestroy">XmlSchemaDestroy()</a></p>
</td>
<td class="cellalignment2922" headers="r4c1-t3 r1c2-t3">
<p>Destroys a schema context.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemaerrorwhere">XmlSchemaErrorWhere()</a></p>
</td>
<td class="cellalignment2922" headers="r5c1-t3 r1c2-t3">
<p>Returns the location where an error occurred.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemaload">XmlSchemaLoad()</a></p>
</td>
<td class="cellalignment2922" headers="r6c1-t3 r1c2-t3">
<p>Loads a schema document.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemaloadedlist">XmlSchemaLoadedList()</a></p>
</td>
<td class="cellalignment2922" headers="r7c1-t3 r1c2-t3">
<p>Returns the size and/or list of loaded schema documents.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemaseterrorhandler">XmlSchemaSetErrorHandler()</a></p>
</td>
<td class="cellalignment2922" headers="r8c1-t3 r1c2-t3">
<p>Sets an error message handler and its associated context in a schema context</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemasetvalidateoptions">XmlSchemaSetValidateOptions()</a></p>
</td>
<td class="cellalignment2922" headers="r9c1-t3 r1c2-t3">
<p>Sets option(s) to be used in the next validation session.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschematargetnamespace">XmlSchemaTargetNamespace()</a></p>
</td>
<td class="cellalignment2922" headers="r10c1-t3 r1c2-t3">
<p>Returns target namespace of a given schema document.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemaunload">XmlSchemaUnload()</a></p>
</td>
<td class="cellalignment2922" headers="r11c1-t3 r1c2-t3">
<p>Unloads a schema document.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r12c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemavalidate">XmlSchemaValidate()</a></p>
</td>
<td class="cellalignment2922" headers="r12c1-t3 r1c2-t3">
<p>Validates an element node against a schema.</p>
</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r13c1-t3" headers="r1c1-t3">
<p><a href="#Xmlschemaversion">XmlSchemaVersion()</a></p>
</td>
<td class="cellalignment2922" headers="r13c1-t3 r1c2-t3">
<p>Returns the version of this schema implementation.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CAXML5966" class="refsect2"><a id="Xmlschemaclean"></a>
<hr/>
<h3 class="refsect2"><a id="sthref852"></a><a id="sthref853"></a><a id="sthref854"></a>XmlSchemaClean()</h3>
<p>Clean up loaded schemas in a schema context and recycle the schema context.</p>
<p class="subhead1"><a id="CAXML5967"></a>Syntax</p>
<pre>void XmlSchemaClean(
   xsdctx *sctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t4">Parameter</th>
<th class="cellalignment2921" id="r1c2-t4">In/Out</th>
<th class="cellalignment2921" id="r1c3-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t4" headers="r1c1-t4">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t4 r1c2-t4">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t4 r1c3-t4">schema context to be cleaned</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemacreate">XmlSchemaCreate()</a>, <a href="#Xmlschemadestroy">XmlSchemaDestroy()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5968" class="refsect2"><a id="Xmlschemacreate"></a>
<hr/>
<h3 class="refsect2"><a id="sthref855"></a><a id="sthref856"></a><a id="sthref857"></a>XmlSchemaCreate()</h3>
<p>Return a schema context to be used in other validator APIs. This needs to be paired with an <code>XmlSchemaDestroy</code>.</p>
<p class="subhead1"><a id="CAXML5969"></a>Syntax</p>
<pre>xsdctx *XmlSchemaCreate(
   xmlctx *xctx, 
   xmlerr *err, 
   <span class="italic">list</span>);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t6">Parameter</th>
<th class="cellalignment2921" id="r1c2-t6">In/Out</th>
<th class="cellalignment2921" id="r1c3-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t6" headers="r1c1-t6">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t6 r1c3-t6">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t6" headers="r1c1-t6">
<pre>err
</pre></td>
<td class="cellalignment2922" headers="r3c1-t6 r1c2-t6">
<pre>OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t6 r1c3-t6">returned error code</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t6" headers="r1c1-t6">
<pre><span class="italic">list</span>
</pre></td>
<td class="cellalignment2922" headers="r4c1-t6 r1c2-t6">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t6 r1c3-t6"><code>NULL</code>-terminated list of variable arguments</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5970"></a>Returns</p>
<p><code>(xsdctx *)</code> schema context</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemadestroy">XmlSchemaDestroy()</a>, <a href="xml.htm#Xmlcreate">XmlCreate()</a> in <a href="xml.htm#Xmlpackage">Chapter 11, &#34;Package XML APIs for C&#34;</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5971" class="refsect2"><a id="Xmlschemadestroy"></a>
<hr/>
<h3 class="refsect2"><a id="sthref858"></a><a id="sthref859"></a><a id="sthref860"></a>XmlSchemaDestroy()</h3>
<p>Destroy a schema context and free up all its resources.</p>
<p class="subhead1"><a id="CAXML5972"></a>Syntax</p>
<pre>void XmlSchemaDestroy(
   xsdctx *sctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t8">Parameter</th>
<th class="cellalignment2921" id="r1c2-t8">In/Out</th>
<th class="cellalignment2921" id="r1c3-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t8" headers="r1c1-t8">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t8 r1c2-t8">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t8 r1c3-t8">schema context to be freed</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemacreate">XmlSchemaCreate()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5973" class="refsect2"><a id="Xmlschemaerrorwhere"></a>
<hr/>
<h3 class="refsect2"><a id="sthref861"></a><a id="sthref862"></a><a id="sthref863"></a>XmlSchemaErrorWhere()</h3>
<p>Returns the location (line#, path) where an error occurred.</p>
<p class="subhead1"><a id="CAXML5974"></a>Syntax</p>
<pre>xmlerr XmlSchemaErrorWhere(
   xsdctx *sctx, 
   ub4 *line, 
   oratext **path);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t10">Parameter</th>
<th class="cellalignment2921" id="r1c2-t10">In/Out</th>
<th class="cellalignment2921" id="r1c3-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t10" headers="r1c1-t10">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t10 r1c2-t10">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t10 r1c3-t10">schema context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t10" headers="r1c1-t10">
<pre>line
</pre></td>
<td class="cellalignment2922" headers="r3c1-t10 r1c2-t10">
<pre>IN/OUT
</pre></td>
<td class="cellalignment2922" headers="r3c1-t10 r1c3-t10">line number where error occurred</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t10" headers="r1c1-t10">
<pre>path
</pre></td>
<td class="cellalignment2922" headers="r4c1-t10 r1c2-t10">
<pre>IN/OUT
</pre></td>
<td class="cellalignment2922" headers="r4c1-t10 r1c3-t10">URL or filespace where error occurred</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5975"></a>Returns</p>
<p><code>(xmlerr)</code> error code</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemaseterrorhandler">XmlSchemaSetErrorHandler()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5976" class="refsect2"><a id="Xmlschemaload"></a>
<hr/>
<h3 class="refsect2"><a id="sthref864"></a><a id="sthref865"></a><a id="sthref866"></a>XmlSchemaLoad()</h3>
<p>Load up a schema document to be used in the next validation session. Schema documents can be incrementally loaded into a schema context as long as every loaded schema document is valid. When the last loaded schema turns out to be invalid, you need to clean up the schema context by calling <a href="#Xmlschemaclean">XmlSchemaClean()</a> and reload everything all over again including the last schema with appropriate correction.</p>
<p>Given a schema document, this function converts the DOM representation into an internal schema representation. The schema document can be provided as a URI or directly a DOM representation. In the URI case, this function reads the input stream and builds a DOM representation of the schema before converting it into internal representation. In the DOM case, the application can provide a DOM representation of the schema, which will be used to create the internal schema representation.</p>
<p class="subhead1"><a id="CAXML5977"></a>Syntax</p>
<pre>xmlerr XmlSchemaLoad(
   xsdctx *sctx, 
   oratext *uri, 
   <span class="italic">list</span>);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t12">Parameter</th>
<th class="cellalignment2921" id="r1c2-t12">In/Out</th>
<th class="cellalignment2921" id="r1c3-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t12" headers="r1c1-t12">
<pre>sxctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t12 r1c2-t12">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t12 r1c3-t12">schema context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t12" headers="r1c1-t12">
<pre>uri
</pre></td>
<td class="cellalignment2922" headers="r3c1-t12 r1c2-t12">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t12 r1c3-t12">URL of schema document; compiler encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t12" headers="r1c1-t12">
<pre><span class="italic">list</span>
</pre></td>
<td class="cellalignment2922" headers="r4c1-t12 r1c2-t12">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t12 r1c3-t12"><code>NULL</code>-terminated list of variable arguments</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5978"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, XMLERR_OK [0] on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemaunload">XmlSchemaUnload()</a>, <a href="#Xmlschemaloadedlist">XmlSchemaLoadedList()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5979" class="refsect2"><a id="Xmlschemaloadedlist"></a>
<hr/>
<h3 class="refsect2"><a id="sthref867"></a><a id="sthref868"></a><a id="sthref869"></a>XmlSchemaLoadedList()</h3>
<p>Return only the size of loaded schema documents if <code>list</code> is <code>NULL</code>. If <code>list</code> is not <code>NULL</code>, a list of URL pointers are returned in the user-provided pointer buffer. Note that its user&#39;s responsibility to provide a buffer with big enough size.</p>
<p class="subhead1"><a id="CAXML5980"></a>Syntax</p>
<pre>ub4 XmlSchemaLoadedList(
   xsdctx *sctx, 
   oratext **list);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t14">Parameter</th>
<th class="cellalignment2921" id="r1c2-t14">In/Out</th>
<th class="cellalignment2921" id="r1c3-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t14" headers="r1c1-t14">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t14 r1c2-t14">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t14 r1c3-t14">schema context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t14" headers="r1c1-t14">
<pre>list
</pre></td>
<td class="cellalignment2922" headers="r3c1-t14 r1c2-t14">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t14 r1c3-t14">address of pointer buffer</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5981"></a>Returns</p>
<p><code>(ub4)</code> list size</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemaload">XmlSchemaLoad()</a>, <a href="#Xmlschemaunload">XmlSchemaUnload()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5982" class="refsect2"><a id="Xmlschemaseterrorhandler"></a>
<hr/>
<h3 class="refsect2"><a id="sthref870"></a><a id="sthref871"></a><a id="sthref872"></a>XmlSchemaSetErrorHandler()</h3>
<p>Sets an error message handler and its associated context in a schema context. To retrieve useful location information on errors, the address of the schema context must be provided in the error handler context.</p>
<p class="subhead1"><a id="CAXML5983"></a>Syntax</p>
<pre>xmlerr XmlSchemaSetErrorHandler(
   xsdctx *sctx, 
   XML_ERRMSG_F(
      (*errhdl), 
      ectx, 
      msg, 
      err), 
   void *errctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t16">Parameter</th>
<th class="cellalignment2921" id="r1c2-t16">In/Out</th>
<th class="cellalignment2921" id="r1c3-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t16" headers="r1c1-t16">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t16 r1c2-t16">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t16 r1c3-t16">schema context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t16" headers="r1c1-t16">
<pre>errhdl
</pre></td>
<td class="cellalignment2922" headers="r3c1-t16 r1c2-t16">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t16 r1c3-t16">error message handler</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t16" headers="r1c1-t16">
<pre>errctx
</pre></td>
<td class="cellalignment2922" headers="r4c1-t16 r1c2-t16">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t16 r1c3-t16">error handler context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5984"></a>Returns</p>
<p><code>(xmlerr)</code> error code</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemacreate">XmlSchemaCreate()</a>, <a href="#Xmlschemaerrorwhere">XmlSchemaErrorWhere()</a>, and <a href="callback.htm#CHDHFDDJ">XML_ERRMSG_F()</a> in <a href="callback.htm#Callbackpackage">Chapter 2, &#34;Package Callback APIs for C&#34;</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5985" class="refsect2"><a id="Xmlschemasetvalidateoptions"></a>
<hr/>
<h3 class="refsect2"><a id="sthref873"></a><a id="sthref874"></a><a id="sthref875"></a>XmlSchemaSetValidateOptions()</h3>
<p>Set options to be used in the next validation session. Previously set options will remain effective until they are overwritten or reset.</p>
<p class="subhead1"><a id="CAXML5986"></a>Syntax</p>
<pre>xmlerr XmlSchemaSetValidateOptions(
   xsdctx *sctx, 
   <span class="italic">list</span>);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t18">Parameter</th>
<th class="cellalignment2921" id="r1c2-t18">In/Out</th>
<th class="cellalignment2921" id="r1c3-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t18" headers="r1c1-t18">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t18 r1c2-t18">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t18 r1c3-t18">schema context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t18" headers="r1c1-t18">
<pre><span class="italic">list</span>
</pre></td>
<td class="cellalignment2922" headers="r3c1-t18 r1c2-t18">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t18 r1c3-t18"><code>NULL</code>-terminated list of variable argument</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5987"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, XMLERR_OK [0] on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemavalidate">XmlSchemaValidate()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5988" class="refsect2"><a id="Xmlschematargetnamespace"></a>
<hr/>
<h3 class="refsect2"><a id="sthref876"></a><a id="sthref877"></a><a id="sthref878"></a>XmlSchemaTargetNamespace()</h3>
<p>Return target namespace of a given schema document identified by its URI. All currently loaded schema documents can be queried. Currently loaded schema documents include the ones loaded through <code>XmlSchemaLoad</code>s and the ones loaded through <code>schemaLocation</code> or <code>noNamespaceSchemaLocation</code> hints.</p>
<p class="subhead1"><a id="CAXML5989"></a>Syntax</p>
<pre>oratext *XmlSchemaTargetNamespace(
   xsdctx *sctx, 
   oratext *uri);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t20">Parameter</th>
<th class="cellalignment2921" id="r1c2-t20">In/Out</th>
<th class="cellalignment2921" id="r1c3-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t20" headers="r1c1-t20">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t20 r1c2-t20">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t20 r1c3-t20">XML context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t20" headers="r1c1-t20">
<pre>uri
</pre></td>
<td class="cellalignment2922" headers="r3c1-t20 r1c2-t20">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t20 r1c3-t20">URL of the schema document to be queried</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5990"></a>Returns</p>
<p><code>(oratext *)</code> target namespace string; <code>NULL</code> if given document not</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemaloadedlist">XmlSchemaLoadedList()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5991" class="refsect2"><a id="Xmlschemaunload"></a>
<hr/>
<h3 class="refsect2"><a id="sthref879"></a><a id="sthref880"></a><a id="sthref881"></a>XmlSchemaUnload()</h3>
<p>Unload a schema document from the validator. All previously loaded schema documents will remain loaded until they are unloaded. To unload all loaded schema documents, set URI to be <code>NULL</code> (this is equivalent to <code>XmlSchemaClean</code>). Note that all children schemas associated with the given schema are also unloaded. In this implementation, it only support the following scenarios:</p>
<ul>
<li>
<p>load, load, ...</p>
</li>
<li>
<p>load, load, load, unload, unload, unload, clean, and then repeat.</p>
</li>
</ul>
<p>It doesn&#39;t not support: load, load, unload, load, ....</p>
<p class="subhead1"><a id="CAXML5992"></a>Syntax</p>
<pre>xmlerr XmlSchemaUnload(
   xsdctx *sctx, 
   oratext *uri, 
   <span class="italic">list</span>);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t22">Parameter</th>
<th class="cellalignment2921" id="r1c2-t22">In/Out</th>
<th class="cellalignment2921" id="r1c3-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t22" headers="r1c1-t22">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t22 r1c2-t22">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t22 r1c3-t22">schema context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t22" headers="r1c1-t22">
<pre>uri
</pre></td>
<td class="cellalignment2922" headers="r3c1-t22 r1c2-t22">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t22 r1c3-t22">URL of the schema document; compiler encoding</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t22" headers="r1c1-t22">
<pre><span class="italic">list</span>
</pre></td>
<td class="cellalignment2922" headers="r4c1-t22 r1c2-t22">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t22 r1c3-t22"><code>NULL</code>-terminated list of variable argument</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5993"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, <code>XMLERR_OK [0]</code> on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemaload">XmlSchemaLoad()</a>, <a href="#Xmlschemaloadedlist">XmlSchemaLoadedList()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5994" class="refsect2"><a id="Xmlschemavalidate"></a>
<hr/>
<h3 class="refsect2"><a id="sthref882"></a><a id="sthref883"></a><a id="sthref884"></a>XmlSchemaValidate()</h3>
<p>Validates an element node against a schema. Schemas used in current session consists of all schema documents specified through <code>XmlSchemaLoad</code> and provided as hint(s) through schemaLocation or <code>noNamespaceSchemaLocation</code> in the instance document. After the invocation of this routine, all loaded schema documents remain loaded and can be queried by <code>XmlSchemaLoadedList</code>. However, they will remain inactive. In the next validation session, inactive schema documents can be activated by specifying them through <code>XmlSchemaLoad</code> or providing them as hint(s) through schemaLocation or <code>noNamespaceSchemaLocation</code> in the new instance document. To unload a schema document and all its descendants (documents included or imported in a nested manner), use <code>XmlSchemaUnload</code>.</p>
<p class="subhead1"><a id="CAXML5995"></a>Syntax</p>
<pre>xmlerr XmlSchemaValidate(
   xsdctx *sctx,
   xmlctx *xctx, 
   xmlelemnode *elem);
</pre>
<div class="inftblinformal">
<table class="cellalignment2923" title="Paramter(s)" summary="Parameter Table; column 1 has parameters, column 2 has the binding (IN, OUT, or IN/OUT), and column 2 has the descriptions." dir="ltr">
<thead>
<tr class="cellalignment2914">
<th class="cellalignment2921" id="r1c1-t24">Parameter</th>
<th class="cellalignment2921" id="r1c2-t24">In/Out</th>
<th class="cellalignment2921" id="r1c3-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r2c1-t24" headers="r1c1-t24">
<pre>sctx
</pre></td>
<td class="cellalignment2922" headers="r2c1-t24 r1c2-t24">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r2c1-t24 r1c3-t24">schema context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r3c1-t24" headers="r1c1-t24">
<pre>xctx
</pre></td>
<td class="cellalignment2922" headers="r3c1-t24 r1c2-t24">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r3c1-t24 r1c3-t24">XML top-level context</td>
</tr>
<tr class="cellalignment2914">
<td class="cellalignment2922" id="r4c1-t24" headers="r1c1-t24">
<pre>elem
</pre></td>
<td class="cellalignment2922" headers="r4c1-t24 r1c2-t24">
<pre>IN
</pre></td>
<td class="cellalignment2922" headers="r4c1-t24 r1c3-t24">element node in the doc, to be validated</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CAXML5996"></a>Returns</p>
<p><code>(xmlerr)</code> numeric error code, <code>XMLERR_OK [0]</code> on success</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#Xmlschemasetvalidateoptions">XmlSchemaSetValidateOptions()</a></div>
</div>
<!-- class="refsect2" -->
<div id="CAXML5997" class="refsect2"><a id="Xmlschemaversion"></a>
<hr/>
<h3 class="refsect2"><a id="sthref885"></a><a id="sthref886"></a><a id="sthref887"></a>XmlSchemaVersion()</h3>
<p>Return the version of this schema implementation.</p>
<p class="subhead1"><a id="CAXML5998"></a>Syntax</p>
<pre>oratext *XmlSchemaVersion();
</pre>
<p class="subhead1"><a id="CAXML5999"></a>Returns</p>
<p><code>(oratext *)</code> version string [compiler encoding]</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2913">
<tr>
<td class="cellalignment2922">
<table class="cellalignment2918">
<tr>
<td class="cellalignment2917"><a href="sax.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2917"><a href="soap.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2925">
<table class="cellalignment2916">
<tr>
<td class="cellalignment2917"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2917"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2917"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2917"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2917"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2917"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>