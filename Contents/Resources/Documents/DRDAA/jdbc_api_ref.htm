<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-5796"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/API%20Reference%20for%20SQL%20Translation%20of%20JDBC%20Applications"></a><title>API Reference for SQL Translation of JDBC Applications</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748"/>
<meta name="description" content="Describes the installation, configuration, and administration tasks for all activities related to migrating applications to Oracle Database from other databases, including DB2, MySQL, and Sybase."/>
<meta name="dcterms.created" content="2014-03-14T22:35:10Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Migration Guide"/>
<meta name="dcterms.identifier" content="E22508-11"/>
<meta name="dcterms.isVersionOf" content="DRDAA"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2011, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="mysql_api_ref.htm" title="Previous" type="text/html"/>
<link rel="Next" href="glossary.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E22508-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">14/16</span> <!-- End Header -->
<div id="DRDAA195" class="chapter"><a id="CHDJBIAH"></a>
<h1 class="chapter"><span class="secnum">8</span> <a id="sthref363"></a>API Reference for SQL Translation of JDBC Applications</h1>
<p>These APIs are part of the <code>oracle.jdbc</code> package. This chapter describes only the elements of <code>oracle.jdbc</code> that are specific to SQL translation.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CACBDFEA">Translation Properties</a></p>
</li>
<li>
<p><a href="#CACJGFJB">OracleTranslatingConnection Interface</a></p>
</li>
<li>
<p><a href="#CACFEHDB">Error Translation Configuration File</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>Complete documentation of the <code>oracle.jdbc</code> package in <a class="olink JAJDB" href="../JAJDB/toc.htm"><span class="italic">Oracle Database JDBC Java API Reference</span></a></p>
</li>
</ul>
</div>
<div class="refentry"><a id="CACBDFEA"></a>
<div id="DRDAA231" class="refsect1">
<h2 class="refsect1">Translation Properties</h2>
<p>The <a id="sthref364"></a>translation properties are listed in <a href="#CACIFBAG">Table 8-1</a></p>
<div id="DRDAA232" class="tblformal">
<p class="titleintable"><a id="sthref365"></a><a id="CACIFBAG"></a>Table 8-1 Translation Properties</p>
<table class="cellalignment497" title="Translation Properties" summary="the rows are properties. colums 1 is name and column2 is description" dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t3">Property</th>
<th class="cellalignment496" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#CACFDFFE">sqlTranslationProfile</a></p>
</td>
<td class="cellalignment492" headers="r2c1-t3 r1c2-t3">
<p>Specifies the name of the transaction profile</p>
</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#CACFBJJA">sqlErrorTranslationFile</a></p>
</td>
<td class="cellalignment492" headers="r3c1-t3 r1c2-t3">
<p>Specifies the path of the SQL error translation file</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="DRDAA233" class="refsect2"><a id="CACFDFFE"></a>
<h3 class="refsect2">sql<a id="sthref366"></a><a id="sthref367"></a><a id="sthref368"></a>TranslationProfile</h3>
<p>The property <code>oracle.jdbc.sqlTranslationProfile</code> specifies the name of the transaction profile.</p>
<p class="subhead2"><a id="DRDAA234"></a>Declaration</p>
<pre>oracle.jdbc.sqlTranslationProfile
</pre>
<p class="subhead2"><a id="DRDAA29641"></a>Constant</p>
<pre>OracleConnection.CONNECTION_PROPERTY_SQL_TRANSLATON_PROFILE
</pre>
<p>The value of the constant is <code>oracle.jdbc.sqlTranslationProfile</code>. This is also the property name.</p>
<p class="subhead2"><a id="DRDAA235"></a>Property Value</p>
<p>The value is a string. There is no default value.</p>
<p class="subhead2"><a id="DRDAA237"></a>Remarks</p>
<p>The property <code>sqlTranslationProfile</code> can be set as either a system property or a connection property. The property is required to use SQL translation. If this property is set then all statements created by the connection have SQL translation enabled unless otherwise specified.</p>
</div>
<!-- class="refsect2" -->
<div id="DRDAA238" class="refsect2"><a id="CACFBJJA"></a>
<h3 class="refsect2">sqlErr<a id="sthref369"></a><a id="sthref370"></a><a id="sthref371"></a>orTranslationFile</h3>
<p>The property <code>oracle.jdbc.sqlErrorTranslationFile</code> specifies the path of the SQL error translation file.</p>
<p class="subhead2"><a id="DRDAA239"></a>Declaration</p>
<pre>oracle.jdbc.sqlErrorTranslationFile
</pre>
<p class="subhead2"><a id="DRDAA29642"></a>Constant</p>
<pre>Oracle.connection.CONNECTION_PROPERTY_SQL_ERROR_TRANSLATION_FILE.
</pre>
<p class="subhead2"><a id="DRDAA240"></a>Property Value</p>
<p>The value is a path name. It has no default value.</p>
<p class="subhead2"><a id="DRDAA241"></a>Exceptions</p>
<p>An error in establishing a connection results in a SQLException but without a valid connection. However the SQL error translation file path is available either as a system property or connection property and will be used to translate the error.</p>
<p class="subhead2"><a id="DRDAA242"></a>Remarks</p>
<p>This file is used only for translating errors which occur when connection establishment fails. Once the connection is established this file is bypassed and is not considered even if it contains the translation details for any error which occurs after the connection is established. The property <code>sqlErrorTranslationFile</code> can be either a system property or a connection property. The content of this file is used to translate Oracle SQLExceptions into foreign SQLExceptions when there is no valid connection.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CACJGFJB"></a>
<div id="DRDAA243" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">OracleTranslatingC<a id="sthref372"></a><a id="sthref373"></a><a id="sthref374"></a>onnection Interface</h2>
<p>This interface is only implemented by a Connection object that supports SQL Translation. The main purpose of this interface is to get non-translating statements (including <code>preparedStatement</code> and <code>CallableStatement</code>) from a translating connection.</p>
<p>The public interface <code>oracle.jdbc.OracleTranslatingConnection</code> defines the factory methods for creating translating and non-translating <code>Statement</code> objects.</p>
<p>The <code>OracleTranslatingConnection</code> enumerations are listed in <a href="#CHDFBJID">Table 8-2</a>:</p>
<div id="DRDAA29431" class="tblruleformal">
<p class="titleintable"><a id="sthref375"></a><a id="CHDFBJID"></a>Table 8-2 OracleTranslatingConnection Enumeration</p>
<table class="cellalignment495" title="OracleTranslatingConnection Enumeration" summary="the rows are methods. column1 is name and column 2 is description" dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t4">Name</th>
<th class="cellalignment496" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#CHDDIFEE">SqlTranslationVersion</a></p>
</td>
<td class="cellalignment492" headers="r2c1-t4 r1c2-t4">
<p>Provides the Keys to the map</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<p>The <code>OracleTranslatingConnection</code> methods are listed in <a href="#CACBHFGA">Table 8-3</a>:</p>
<div id="DRDAA244" class="tblruleformal">
<p class="titleintable"><a id="sthref376"></a><a id="CACBHFGA"></a>Table 8-3 OracleTranslatingConnection Methods</p>
<table class="cellalignment495" title="OracleTranslatingConnection Methods" summary="the rows are methods. column1 is name and column 2 is description" dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t5">Name</th>
<th class="cellalignment496" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t5" headers="r1c1-t5">
<p><a href="#CACGIFID">createStatement()</a></p>
</td>
<td class="cellalignment492" headers="r2c1-t5 r1c2-t5">
<p>Creates a <code>Statement</code> object with option to translate or not translate SQL.</p>
</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r3c1-t5" headers="r1c1-t5">
<p><a href="#CACDADIG">prepareCall()</a></p>
</td>
<td class="cellalignment492" headers="r3c1-t5 r1c2-t5">
<p>Creates a <code>CallableStatement</code> object with option to translate or not translate SQL.</p>
</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r4c1-t5" headers="r1c1-t5">
<p><a href="#CACDHGHB">prepareStatement()</a></p>
</td>
<td class="cellalignment492" headers="r4c1-t5 r1c2-t5">
<p>Creates a <code>PreparedStatement</code> object with option to translate or not translate SQL.</p>
</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r5c1-t5" headers="r1c1-t5">
<p><a href="#CACFFJDE">getSQLTranslationVersions()</a></p>
</td>
<td class="cellalignment492" headers="r5c1-t5 r1c2-t5">
<p>Returns a map of all the translation versions of the query during SQL Translation.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<div id="DRDAA29446" class="refsect2"><a id="CHDDIFEE"></a>
<h3 class="refsect2"><a id="sthref377"></a>SqlTranslationVersion</h3>
<p>The <code>SqlTranslationVersion</code> enumerated values specify the keys to the <a href="#CACFFJDE">getSQLTranslationVersions()</a> method.</p>
<p class="subhead2"><a id="DRDAA29447"></a>Syntax</p>
<pre>  public enum SqlTranslationVersion {
    ORIGINAL_SQL,
    JDBC_MARKER_CONVERTED,
    TRANSLATED
  }
</pre>
<p>The following table lists all the <code>SqlTranslationVersion</code> enumeration values with a description of each enumerated value.</p>
<div class="inftblinformal">
<table class="cellalignment495" title="parameters of getVector() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t6">Member Name</th>
<th class="cellalignment496" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t6" headers="r1c1-t6"><code>ORIGINAL_SQL</code></td>
<td class="cellalignment492" headers="r2c1-t6 r1c2-t6">Specifies the original vendor specific sql</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r3c1-t6" headers="r1c1-t6">
<pre>JDBC_MARKER_CONVERTED
</pre></td>
<td class="cellalignment492" headers="r3c1-t6 r1c2-t6">Specifies that JDBC parameter markers (&#39;?&#39;) is replaced with Oracle style parameter markers (&#39;:b&lt;<span class="italic">n</span>&gt;&#39;). Hence consecutive &#39;?&#39;s will be converted to <code>:b1</code>, <code>:b2</code>, <code>:b3</code> and so on. This change is required to take care of any changes in the order of parameters during translation. This version is sent to the server for translation. Hence any custom translations on the server must be registered from this version and not the <code>ORIGINAL_SQL</code> version.</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r4c1-t6" headers="r1c1-t6">
<pre>TRANSLATED
</pre></td>
<td class="cellalignment492" headers="r4c1-t6 r1c2-t6">Specifies the translated query returned from the server</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="DRDAA245" class="refsect2"><a id="CACGIFID"></a>
<h3 class="refsect2">createS<a id="sthref378"></a><a id="sthref379"></a><a id="sthref380"></a><a id="sthref381"></a>tatement()</h3>
<p>This group of methods create a <code>Statement</code> object, and specify whether the statement supports SQL translation. If the value of parameter <code>translating</code> is <code>TRUE</code>, then the returning statement supports translation and is identical to the corresponding version in the java.sql.Connection interface without the translating argument. If the value is <code>FALSE</code>, then the returning statement does not support translation.</p>
<div class="inftblinformal">
<table class="cellalignment495" title="versions of createStatement() method." summary="First column lists versions of the constructor; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t7">Syntax</th>
<th class="cellalignment496" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t7" headers="r1c1-t7">
<pre>public Statement createStatement(
  boolean translating)
throws SQLException;
</pre></td>
<td class="cellalignment492" headers="r2c1-t7 r1c2-t7">Creates a <code>Statement</code> object with option to translate or not translate SQL.</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r3c1-t7" headers="r1c1-t7">
<pre>public Statement createStatement(
  int resultSetType,  int resultSetConcurrency,  boolean translating)
throws SQLException;
</pre></td>
<td class="cellalignment492" headers="r3c1-t7 r1c2-t7">Creates a <code>Statement</code> object with the given type and concurrency with option to translate or not translate SQL.</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r4c1-t7" headers="r1c1-t7">
<pre>public Statement createStatement(
  int resultSetType,
  int resultSetConcurrency,
  int resultSetHoldability,
  boolean translating)
throws SQLException;
</pre></td>
<td class="cellalignment492" headers="r4c1-t7 r1c2-t7">Creates a <code>Statement</code> object with the given type, concurrency, and holdability with option to translate or not translate SQL.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="DRDAA246"></a>Parameters</p>
<div class="inftblinformal">
<table class="cellalignment495" title="parameters of getVector() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t8">Parameter</th>
<th class="cellalignment496" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t8" headers="r1c1-t8">
<pre>resultSetType
</pre></td>
<td class="cellalignment492" headers="r2c1-t8 r1c2-t8">Specifies the <code>int</code> value representing the result set type.</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r3c1-t8" headers="r1c1-t8">
<pre>resultSetConcurrency
</pre></td>
<td class="cellalignment492" headers="r3c1-t8 r1c2-t8">Specifies the <code>int</code> value representing the result set concurrency type.</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r4c1-t8" headers="r1c1-t8"><code>resultSetHoldability</code></td>
<td class="cellalignment492" headers="r4c1-t8 r1c2-t8">Specifies the <code>int</code> value representing the result set holdability type.</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r5c1-t8" headers="r1c1-t8">
<pre>translating
</pre></td>
<td class="cellalignment492" headers="r5c1-t8 r1c2-t8">Specifies whether or not the statement supports translation.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="DRDAA247"></a>Return Value</p>
<p>The <code>createStatement()</code> method returns a <code>Statement</code> object.</p>
<p class="subhead2"><a id="DRDAA248"></a>Exceptions</p>
<p>The <code>createStatement()</code> method throws <code>SQLException</code>.</p>
<p class="subhead2"><a id="DRDAA29432"></a>Example</p>
<p>Import the following packages before running the example:</p>
<pre>import java.sql.*;
import java.util.Properties;
 
import oracle.jdbc.OracleConnection;
import oracle.jdbc.OracleTranslatingConnection;
import oracle.jdbc.pool.OracleDataSource;
</pre>
<p>Run the following SQL statements:</p>
<pre>conn system/manager;
grant create sql translation profile to HR;
 
conn HR/hr;
drop table sample_tab;
create table sample_tab (c1 number, c2 varchar2(100));
insert into sample_tab values (1, &#39;A&#39;);
insert into sample_tab values (2, &#39;B&#39;);
commit;
exec dbms_sql_translator.drop_profile(&#39;FOO&#39;);
exec  dbms_sql_translator.create_profile(&#39;FOO&#39;);
exec  dbms_sql_translator.register_sql_translation(&#39;FOO&#39;,&#39;select row of (c1, c2) from sample_tab&#39;,&#39;select c1, c2 from sample_tab&#39;);
</pre>
<div id="DRDAA29433" class="example">
<p class="titleinexample"><a id="CHDCBIEF"></a>Example 8-1 Using the createStatement() method</p>
<pre>public class SQLTransStmt 
{
  static String url=&#34;jdbc:oracle:thin:@localhost:5521:orcl&#34;;
  static String user=&#34;HR&#34;, pwd=&#34;hr&#34;;  
  static String PROFILE = &#34;FOO&#34;;
  static String primitiveSql = &#34;select row of (c1, c2) from sample_tab&#34;;
  
  public static void main(String[] args) throws Exception
  {       
    OracleDataSource ods = new OracleDataSource();
    ods.setURL(url);
        
    Properties props = new Properties();
    props.put(&#34;user&#34;, user);
    props.put(&#34;password&#34;, pwd);
    props.put(OracleConnection.CONNECTION_PROPERTY_SQL_TRANSLATION_PROFILE, PROFILE);
    ods.setConnectionProperties(props);
    Connection conn = ods.getConnection();
    System.out.println(&#34;connection for SQL translation: &#34;+conn);
    
    try{
      OracleTranslatingConnection trConn = (OracleTranslatingConnection) conn;
      System.out.println(&#34;Call: oracle.jdbc.OracleTranslatingConnection.createStatement(true)&#34;);
      Statement trStmt = trConn.createStatement(true);
      System.out.println(&#34;executeQuery for: &#34;+primitiveSql);
      ResultSet trRs = trStmt.executeQuery(primitiveSql);
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
      trRs.close();
      trStmt.close();
    }catch (Exception e) {
      e.printStackTrace();
    }
    
    try{
      OracleTranslatingConnection trConn = (OracleTranslatingConnection) conn;
      System.out.println(&#34;Call: oracle.jdbc.OracleTranslatingConnection.createStatement(false)&#34;);
      Statement trStmt = trConn.createStatement(false);
      System.out.println(&#34;executeQuery for: &#34;+primitiveSql);
      ResultSet trRs = trStmt.executeQuery(primitiveSql);
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
      trRs.close();
      trStmt.close();
    }catch (Exception e) {
      System.out.println(&#34;expected Exception: &#34;+e.getMessage());
    }
    
    try{
      OracleTranslatingConnection trConn = (OracleTranslatingConnection) conn;
      System.out.println(&#34;Call: oracle.jdbc.OracleTranslatingConnection.
createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE, true)&#34;);
      Statement trStmt = trConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE, true);
      System.out.println(&#34;executeQuery for: &#34;+primitiveSql);
      ResultSet trRs = trStmt.executeQuery(primitiveSql);
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
      System.out.println(&#34;move resultset back to 2nd row...&#34;);
      trRs.absolute(2);
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
      trRs.close();
      trStmt.close();
    }catch (Exception e) {
      e.printStackTrace();
    }
    
    try{
      conn.setAutoCommit(false);
      OracleTranslatingConnection trConn = (OracleTranslatingConnection) conn;
      System.out.println(&#34;Call: oracle.jdbc.OracleTranslatingConnection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE,
 ResultSet.HOLD_CURSORS_OVER_COMMIT, true)&#34;);
      Statement trStmt = trConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE, ResultSet.HOLD_CURSORS_OVER_COMMIT, true);
      System.out.println(&#34;executeQuery for: &#34;+primitiveSql);
      ResultSet trRs = trStmt.executeQuery(primitiveSql);
      trRs.last();
      System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
      trRs.updateString(2, &#34;Hello&#34;);
      trRs.updateRow();
      conn.commit();
      System.out.println(&#34;accept the update and list all of the rows again...&#34;);
      trRs.beforeFirst();
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
      trRs.close();
      trStmt.close();
    }catch (Exception e) {
      e.printStackTrace();
    }
    
    conn.close();
  }
}
</pre></div>
<!-- class="example" --></div>
<!-- class="refsect2" -->
<div id="DRDAA250" class="refsect2"><a id="CACDADIG"></a>
<h3 class="refsect2">prepareCall<a id="sthref382"></a><a id="sthref383"></a><a id="sthref384"></a><a id="sthref385"></a>()</h3>
<p>This group of methods create a <code>CallableStatement</code> object, and specify whether the statement supports SQL translation. If the value of parameter <code>translating</code> is <code>TRUE</code>, then the returning statement supports translation. If the value is <code>FALSE</code>, then the returning statement does not support translation.</p>
<div class="inftblinformal">
<table class="cellalignment495" title="versions of createStatement() method." summary="First column lists versions of the constructor; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t9">Syntax</th>
<th class="cellalignment496" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t9" headers="r1c1-t9">
<pre>public CallableStatement prepareCall(
  String sql,
  boolean translating)
throws SQLException;
</pre></td>
<td class="cellalignment492" headers="r2c1-t9 r1c2-t9">Creates a <code>CallableStatement</code> object with option to translate or not translate SQL</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r3c1-t9" headers="r1c1-t9">
<pre>public CallableStatement prepareCall(
  String sql,
  int resultSetType,
  int resultSetConcurrency,
  boolean translating)
throws SQLException;
</pre></td>
<td class="cellalignment492" headers="r3c1-t9 r1c2-t9">Creates a <code>CallableStatement</code> object with the given type and concurrency with option to translate or not translate SQL</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r4c1-t9" headers="r1c1-t9">
<pre>public CallableStatement prepareCall(
  String sql,
  int resultSetType,
  int resultSetConcurrency,
  int resultSetHoldability,
  boolean translating)
throws SQLException;
</pre></td>
<td class="cellalignment492" headers="r4c1-t9 r1c2-t9">Creates a <code>CallableStatement</code> object with the given type, concurrency, and holdability with option to translate or not translate SQL</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="DRDAA251"></a>Parameters</p>
<div class="inftblinformal">
<table class="cellalignment495" title="parameters of getVector() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t10">Parameter</th>
<th class="cellalignment496" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t10" headers="r1c1-t10"><code>sql</code></td>
<td class="cellalignment492" headers="r2c1-t10 r1c2-t10">Specifies the <code>String</code> SQL statement value to be sent to the database; may contain one or more parameters</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r3c1-t10" headers="r1c1-t10">
<pre>resultSetType
</pre></td>
<td class="cellalignment492" headers="r3c1-t10 r1c2-t10">Specifies the <code>int</code> value representing the result set type</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r4c1-t10" headers="r1c1-t10">
<pre>resultSetConcurrency
</pre></td>
<td class="cellalignment492" headers="r4c1-t10 r1c2-t10">Specifies the <code>int</code> value representing the result set concurrency type</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r5c1-t10" headers="r1c1-t10"><code>resultSetHoldability</code></td>
<td class="cellalignment492" headers="r5c1-t10 r1c2-t10">Specifies the <code>int</code> value representing the result set holdability type</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r6c1-t10" headers="r1c1-t10">
<pre>translating
</pre></td>
<td class="cellalignment492" headers="r6c1-t10 r1c2-t10">Specifies whether or not the statement supports translation</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="DRDAA252"></a>Return Value</p>
<p>The <code>prepareCall()</code> method returns a <code>CallableStatement</code> object.</p>
<p class="subhead2"><a id="DRDAA253"></a>Exceptions</p>
<p>The <code>prepareCall()</code> method throws <code>SQLException</code>.</p>
<p class="subhead2"><a id="DRDAA29434"></a>Example</p>
<p>Import the following packages before running the example:</p>
<pre>import java.sql.*;
import java.util.Properties;
 
import oracle.jdbc.OracleConnection;
import oracle.jdbc.OracleTranslatingConnection;
import oracle.jdbc.pool.OracleDataSource;
</pre>
<p>Run the following SQL statements:</p>
<pre>conn system/manager;
grant create sql translation profile to HR;
 
conn HR/hr;
 
create or replace procedure sample_proc (p_num number, p_vchar in out varchar2) AS 
begin 
    p_vchar := &#39;p_num&#39;||p_num||&#39;,  p_vchar&#39;||p_vchar;
end;
/
 
exec dbms_sql_translator.drop_profile(&#39;FOO&#39;);
exec  dbms_sql_translator.create_profile(&#39;FOO&#39;);
exec  dbms_sql_translator.register_sql_translation(&#39;FOO&#39;, &#39;exec sample_proc(:b1, :b2)&#39;, &#39;{call sample_proc(:b1, :b2)}&#39;);
</pre>
<div id="DRDAA29435" class="example">
<p class="titleinexample"><a id="sthref386"></a>Example 8-2 Using the prepareCall() method</p>
<pre>public class SQLTransCstmt 
{
  static String url=&#34;jdbc:oracle:thin:@localhost:5521:orcl&#34;;
  static String user=&#34;HR&#34;, pwd=&#34;hr&#34;;  
  static String PROFILE = &#34;FOO&#34;;
  static String primitiveSql = &#34;exec sample_proc(:b1, :b2)&#34;;
  
  public static void main(String[] args) throws Exception
  {       
    OracleDataSource ods = new OracleDataSource();
    ods.setURL(url);
        
    Properties props = new Properties();
    props.put(&#34;user&#34;, user);
    props.put(&#34;password&#34;, pwd);
    props.put(OracleConnection.CONNECTION_PROPERTY_SQL_TRANSLATION_PROFILE,
      PROFILE);
    ods.setConnectionProperties(props);
    Connection conn = ods.getConnection();
    System.out.println(&#34;connection for SQL translation: &#34;+conn);
    
    try{
      OracleTranslatingConnection trConn = (OracleTranslatingConnection) conn;
      System.out.println(
        &#34;Call: oracle.jdbc.OracleTranslatingConnection.prepareCall(sql, true)&#34;);
      CallableStatement trStmt = trConn.prepareCall(primitiveSql, true);
      trStmt.setInt(&#34;b1&#34;, 1);
      trStmt.setString(&#34;b2&#34;, &#34;A&#34;);      
      trStmt.registerOutParameter(&#34;b2&#34;, Types.VARCHAR);
      System.out.println(&#34;execute for: &#34;+primitiveSql);
      trStmt.execute();
      System.out.println(&#34;out param: &#34;+trStmt.getString(&#34;b2&#34;));
      
      trStmt.close();
    }catch (Exception e) {
      e.printStackTrace();
    }
    
    try{
      OracleTranslatingConnection trConn = (OracleTranslatingConnection) conn;
      System.out.println(
        &#34;Call: oracle.jdbc.OracleTranslatingConnection.prepareCall(sql, false)&#34;);
      CallableStatement trStmt = trConn.prepareCall(primitiveSql, false);
      trStmt.setInt(1, 1);
      trStmt.setString(2, &#34;A&#34;);     
      System.out.println(&#34;execute for: &#34;+primitiveSql); 
      ResultSet trRs = trStmt.executeQuery();
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
      trRs.close();
      
      trStmt.close();
    }catch (Exception e) {
      System.out.println(&#34;expected Exception: &#34;+e.getMessage());
    }
    
    conn.close();
  }
}
</pre></div>
<!-- class="example" --></div>
<!-- class="refsect2" -->
<div id="DRDAA255" class="refsect2"><a id="CACDHGHB"></a>
<h3 class="refsect2">prepareStatem<a id="sthref387"></a><a id="sthref388"></a><a id="sthref389"></a><a id="sthref390"></a>ent()</h3>
<p>This group of methods create a <code>PreparedStatement</code> object, and specify whether the statement supports SQL translation. If the value of parameter <code>translating</code> is <code>TRUE</code>, then the returning statement supports translation. If the value is <code>FALSE</code>, then the returning statement does not support translation.</p>
<div class="inftblinformal">
<table class="cellalignment495" title="versions of createStatement() method." summary="First column lists versions of the constructor; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t11">Syntax</th>
<th class="cellalignment496" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t11" headers="r1c1-t11">
<pre>public PreparedStatement prepareStatement(
  String sql,
  boolean translating)
throws SQLException;
</pre></td>
<td class="cellalignment492" headers="r2c1-t11 r1c2-t11">Creates a <code>PreparedStatement</code> object with option to translate or not translate SQL</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r3c1-t11" headers="r1c1-t11">
<pre>public PreparedStatement prepareStatement(
  String sql,
  int resultSetType,
  int resultSetConcur,
  boolean translating)
throws SQLException;
</pre></td>
<td class="cellalignment492" headers="r3c1-t11 r1c2-t11">Creates a <code>PreparedStatement</code> object with the given type and concurrency with option to translate or not translate SQL</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r4c1-t11" headers="r1c1-t11">
<pre>public PreparedStatement prepareStatement(
        String sql,
        int resultSetType,
        int resultSetConcur,
        int resultSetHold,
        boolean translating)
throws SQLException;
</pre></td>
<td class="cellalignment492" headers="r4c1-t11 r1c2-t11">Creates a <code>PreparedStatement</code> object with the given type, concurrency, and holdability with option to translate or not translate SQL</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment495" title="parameters of getVector() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment486">
<th class="cellalignment496" id="r1c1-t12">Parameter</th>
<th class="cellalignment496" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment486">
<td class="cellalignment492" id="r2c1-t12" headers="r1c1-t12"><code>sql</code></td>
<td class="cellalignment492" headers="r2c1-t12 r1c2-t12">Specifies the <code>String</code> SQL statement value to be sent to the database; may contain one or more parameters</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r3c1-t12" headers="r1c1-t12">
<pre>resultSetType
</pre></td>
<td class="cellalignment492" headers="r3c1-t12 r1c2-t12">Specifies the <code>int</code> value representing the result set type</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r4c1-t12" headers="r1c1-t12">
<pre>resultSetConcur
</pre></td>
<td class="cellalignment492" headers="r4c1-t12 r1c2-t12">Specifies the <code>int</code> value representing the result set concurrency type</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r5c1-t12" headers="r1c1-t12"><code>resultSetHold</code></td>
<td class="cellalignment492" headers="r5c1-t12 r1c2-t12">Specifies the <code>int</code> value representing the result set holdability type</td>
</tr>
<tr class="cellalignment486">
<td class="cellalignment492" id="r6c1-t12" headers="r1c1-t12">
<pre>translating
</pre></td>
<td class="cellalignment492" headers="r6c1-t12 r1c2-t12">Specifies whether or not the statement supports translation</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="DRDAA257"></a>Return Value</p>
<p>The <code>prepareStatement()</code> method returns a <code>PreparedStatement</code> object.</p>
<p class="subhead2"><a id="DRDAA29436"></a>Usage Notes</p>
<p>When the &#34;<code>?</code>&#34; placeholder is used with the <code>prepareStatement()</code> method, the driver internally changes the &#34;<code>?</code>&#34; to Oracle-style parameters because the server side translator can only work with Oracle-style markers. This is necessary to distinguish the bind variables. If not, any change in the order of the bind variables will be indistinguishable. The replaced oracle style markers follow the format <code>:b&lt;</code><code><span class="codeinlineitalic">n</span></code><code>&gt;</code> where <code>&lt;</code><code><span class="codeinlineitalic">n</span></code><code>&gt;</code> is an incremental number. For example, <code>exec sample_proc(?,?)</code> becomes <code>exec sample_proc(:b1,:b2)</code>.</p>
<p>To further exemplify, consider a scenario of a vendor format where the vendor query selecting top three rows is <code>SELECT * FROM employees WHERE first_name=? AND employee_id=? TOP 3</code>. The query has to be converted to oracle dialect. In this case the following translation is to be registered on the server:</p>
<p><span class="italic">From:</span></p>
<pre>SELECT * FROM employees WHERE first_name=:b1 AND employee_id=:b2 TOP 3
</pre>
<p><span class="italic">To:</span></p>
<pre>SELECT * FROM employees WHERE first_name=:b1 AND employee_id=:b2 AND ROWNUM &lt;= 3
</pre>
<p>See <a href="#CHDDIFEE">SqlTranslationVersion</a> and <a href="sqltran.htm#BABIGFFC">&#34;SQL Translation of JDBC Applications&#34;</a> for more information.</p>
<p class="subhead2"><a id="DRDAA258"></a>Exceptions</p>
<p>The <code>prepareStatement()</code> method throws <code>SQLException</code>.</p>
<p class="subhead2"><a id="DRDAA29437"></a>Example</p>
<p>Import the following packages before running the example:</p>
<pre>import java.sql.*;
import java.util.Properties;
 
import oracle.jdbc.OracleConnection;
import oracle.jdbc.OracleTranslatingConnection;
import oracle.jdbc.pool.OracleDataSource;
</pre>
<p>Run the following SQL statements:</p>
<pre>conn system/manager;
grant create sql translation profile to HR;
 
conn HR/hr;
drop table sample_tab;
create table sample_tab (c1 number, c2 varchar2(100));
insert into sample_tab values (1, &#39;A&#39;);
insert into sample_tab values (1, &#39;A&#39;);
insert into sample_tab values (1, &#39;A&#39;);
commit;
exec dbms_sql_translator.drop_profile(&#39;FOO&#39;);
exec  dbms_sql_translator.create_profile(&#39;FOO&#39;);
exec  dbms_sql_translator.register_sql_translation(&#39;FOO&#39;,&#39;select row of select c1, c2 from sample_tab
 where c1=:b1 and c2=:b2&#39;,&#39;select c1, c2 from sample_tab where c1=:b1 and c2=:b2&#39;);
</pre>
<div id="DRDAA29438" class="example">
<p class="titleinexample"><a id="sthref391"></a>Example 8-3 Using the prepareStatement() method</p>
<pre>public class SQLTransPstmt 
{
  static String url=&#34;jdbc:oracle:thin:@localhost:5521:orcl&#34;;
  static String user=&#34;HR&#34;, pwd=&#34;hr&#34;;  
  static String PROFILE = &#34;FOO&#34;;
  static String primitiveSql = &#34;select row of select c1, c2 from sample_tab 
    where c1=:b1 and c2=:b2&#34;;
  
  public static void main(String[] args) throws Exception
  {       
    OracleDataSource ods = new OracleDataSource();
    ods.setURL(url);
        
    Properties props = new Properties();
    props.put(&#34;user&#34;, user);
    props.put(&#34;password&#34;, pwd);
    props.put(OracleConnection.CONNECTION_PROPERTY_SQL_TRANSLATION_PROFILE,
      PROFILE);
    ods.setConnectionProperties(props);
    Connection conn = ods.getConnection();
    System.out.println(&#34;connection for SQL translation: &#34;+conn);
    
    try{
      OracleTranslatingConnection trConn = (OracleTranslatingConnection) conn;
      System.out.println(&#34;Call:
        oracle.jdbc.OracleTranslatingConnection.prepareStatement(sql, true)&#34;);
      PreparedStatement trStmt = trConn.prepareStatement(primitiveSql, true);
      trStmt.setInt(1, 1);
      trStmt.setString(2, &#34;A&#34;);      
      System.out.println(&#34;executeQuery for: &#34;+primitiveSql);
      ResultSet trRs = trStmt.executeQuery();
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
        trRs.close();    
        trStmt.close();
      }catch (Exception e) {
      e.printStackTrace();
    }
    
    try{
      OracleTranslatingConnection trConn = (OracleTranslatingConnection) conn;
      System.out.println(&#34;Call:
        oracle.jdbc.OracleTranslatingConnection.prepareStatement(sql, false)&#34;);
      PreparedStatement trStmt = trConn.prepareStatement(primitiveSql, false);
      trStmt.setInt(1, 1);
      trStmt.setString(2, &#34;A&#34;);    
      System.out.println(&#34;executeQuery for: &#34;+primitiveSql);  
      ResultSet trRs = trStmt.executeQuery();
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
      trRs.close();
      
      trStmt.close();
    }catch (Exception e) {
    System.out.println(&#34;expected Exception: &#34;+e.getMessage());
    }
    
    try{
      OracleTranslatingConnection trConn = (OracleTranslatingConnection) conn;
      System.out.println(&#34;Call:
        oracle.jdbc.OracleTranslatingConnection.prepareStatement(
        sql, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE, true)&#34;);
      PreparedStatement trStmt = trConn.prepareStatement(
        primitiveSql, ResultSet.TYPE_SCROLL_SENSITIVE, 
        ResultSet.CONCUR_READ_ONLY, true);
      trStmt.setInt(1, 1);
      trStmt.setString(2, &#34;A&#34;);
      System.out.println(&#34;executeQuery for: &#34;+primitiveSql);
      ResultSet trRs = trStmt.executeQuery();
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
            
      System.out.println(&#34;trRs.beforeFirst and show resultSet again...&#34;);
      trRs.beforeFirst();
      while (trRs.next())
        System.out.println(&#34;C1:&#34;+trRs.getInt(1)+&#34;, C2:&#34;+trRs.getString(2));
      trRs.close();
      trStmt.close();
    }catch (Exception e) {
    e.printStackTrace();
    }
    
  conn.close();
  }
}
</pre></div>
<!-- class="example" --></div>
<!-- class="refsect2" -->
<div id="DRDAA29497" class="refsect2"><a id="CACFFJDE"></a>
<h3 class="refsect2">getSQLTranslationVersions()<a id="sthref392"></a><a id="sthref393"></a><a id="sthref394"></a><a id="sthref395"></a></h3>
<p>Returns a map of all the translation versions of the query during SQL Translation. In case of an exception, and if <code>suppressExceptions</code> is true, then the translated version in the map is <code>NULL</code>.</p>
<p class="subhead2"><a id="DRDAA29643"></a>Syntax</p>
<pre>public Map&lt;SqlTranslationVersion, String&gt; getSqlTranslationVersions(
  String sql, 
  boolean suppressExceptions) 
throws SQL Exception;
</pre>
<p class="subhead2"><a id="DRDAA29498"></a>Return Value</p>
<p>Map with all translation versions of a query. See <a href="#CHDDIFEE">SqlTranslationVersion</a> <code>enum</code> for more details about returning versions.</p>
<p class="subhead2"><a id="DRDAA29499"></a>Exception</p>
<p>This method throws <code>SQLException</code> if there is a problem in query translation, provided <code>suppressExceptions</code> is false.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CACFEHDB"></a>
<div id="DRDAA260" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Error Translation Configuration File</h2>
<p>An XML configuration file (path) is provided as a value of the <a id="sthref396"></a><a id="sthref397"></a><a id="sthref398"></a><code>oracle.jdbc.sqlErrorTranslationFile</code> property. This file contains the translations information for errors. These errors occur when a connection to the server cannot be established and thus translation cannot happen on the server. Error messages are of the type that define the state of the database that prevents the connection from being established.</p>
<p>The structure of the configuration XML file is defined in the DTD as follows:</p>
<pre>&lt;!DOCTYPE LocalTranslationProfile[
 
&lt;!ELEMENT LocalTranslationProfile (Exception+)&gt;
&lt;!ELEMENT Exception (ORAError, ErrorCode, SQLState )&gt;
&lt;!ELEMENT ORAError (#PCDATA)&gt;
&lt;!ELEMENT ErrorCode (#PCDATA)&gt;
&lt;!ELEMENT SQLState (#PCDATA)&gt;
]&gt;
</pre>
<p>where,</p>
<ul>
<li>
<p><code>ORAError</code> is an <code>int</code> value and specifies the error code for the oracle error.</p>
</li>
<li>
<p><code>ErrorCode</code> is an <code>int</code> value and specifies the vendor error code, that is, the translated code.</p>
</li>
<li>
<p><code>SQLState</code> is a <code>String</code> value and specifies the vendor SQL state.</p>
</li>
</ul>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment485">
<tr>
<td class="cellalignment492">
<table class="cellalignment490">
<tr>
<td class="cellalignment489"><a href="mysql_api_ref.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment489"><a href="glossary.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2011, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment494">
<table class="cellalignment488">
<tr>
<td class="cellalignment489"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment489"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment489"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment489"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment489"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment489"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>