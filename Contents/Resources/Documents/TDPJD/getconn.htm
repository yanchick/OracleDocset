<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-106281"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Connecting%20to%20Oracle%20Database%2012c%20Release%201%20%2812.1%29"></a><title>Connecting to Oracle Database 12c Release 1 (12.1)</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748"/>
<meta name="dcterms.created" content="2014-02-21T3:12:38Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database 2 Day + Java Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17944-10"/>
<meta name="dcterms.isVersionOf" content="TDPJD"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2007, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="getstart.htm" title="Previous" type="text/html"/>
<link rel="Next" href="querdata.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17944-10.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/16</span> <!-- End Header -->
<div id="TDPJD127" class="chapter"><a id="CACIADFI"></a>
<h1 class="chapter"><span class="secnum">3</span> Connecting to Oracle Database 12<span class="italic">c</span> Release 1 (12.1)</h1>
<p>This chapter is the first in a series of five chapters, each of which describes how to create parts of a Java application that accesses Oracle Database 12<span class="italic">c</span> Release 1 (12.1) and displays, modifies, deletes, and updates data on it. To be able to access the database from a Java application, you must connect to the database using a <code>java.sql.Connection</code> object.</p>
<p>This chapter includes the following sections:</p>
<ul>
<li>
<p><a href="#CACBBDGB">Connecting to Oracle Database from JDeveloper</a></p>
</li>
<li>
<p><a href="#CACCIGDB">Setting Up Applications and Projects in JDeveloper</a></p>
</li>
<li>
<p><a href="#CACGJJFE">Connecting to Oracle Database from a Java Application</a></p>
</li>
</ul>
<a id="CACBBDGB"></a>
<div id="TDPJD128" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.1</span> <a id="sthref142"></a>Connecting to Oracle Database from JDeveloper</h2>
<p>You can set up and manage database connections in JDeveloper to enable your application to communicate with external data sources, including Oracle Database 12<span class="italic">c</span> Release 1 (12.1) and offline database objects. This is done using the Database Navigator. The same navigator is also used to manage other connections your application needs, such as connections to application servers. The following subsections describe how you can use the Database Navigator to view the database and its objects and to create a connection to the database:</p>
<ul>
<li>
<p><a href="#CACGCEBD">JDeveloper Database Navigator</a></p>
</li>
<li>
<p><a href="#CACFEJFB">Creating a Database Connection</a></p>
</li>
<li>
<p><a href="#CACFFCBJ">Browsing the Data Using the Database Navigator</a></p>
</li>
</ul>
<a id="CACGCEBD"></a>
<div id="TDPJD129" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.1.1</span> <a id="sthref143"></a><a id="sthref144"></a>JDeveloper Database Navigator</h3>
<p>The Database Navigator displays all currently defined connections. To view the Database Navigator, select the <span class="bold">Database Navigator</span> tab in the navigator panel on the top left-hand side of the JDeveloper display, if it is displayed, or use the View menu. For an illustration of the default layout of the JDeveloper IDE, see <a href="introduction.htm#CACDJCEI">Figure 1-1</a>.</p>
<p>You can use the Database Navigator to <a id="sthref145"></a>browse through the connections it displays. In particular, for a database schema, you can also <a id="sthref146"></a>view database objects, tables, views, and their contents.</p>
<p>Database connections are shown under the IDE Connections node. To view the objects in the database, expand the connection. Expanding a schema displays nodes for the object types in that schema. Expanding the node for an object type displays its individual objects. When you expand a table node, you can view the structure of the table and the data within the table.</p>
</div>
<!-- class="sect2" -->
<a id="CACFEJFB"></a>
<div id="TDPJD130" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.1.2</span> <a id="sthref147"></a>Creating a Database Connection</h3>
<p>You can connect to any database for which you have connection details. When you create a database connection, you must specify a user name and a password. By default, the connection enables you to browse only the schema of the user that you specify in the connection.</p>
<p>To create a connection, follow these steps:</p>
<ol>
<li>
<p>Start JDeveloper.</p>
</li>
<li>
<p>From the <span class="bold">View</span> menu, go to <span class="bold">Database</span> and select <a id="sthref148"></a><span class="bold">Database Navigator</span>. The Database Navigator is displayed, showing you a list of available connections.</p>
</li>
<li>
<p>Right-click <span class="bold">IDE Connection</span>, and from the shortcut menu, select <span class="bold">New Connection</span>. The Create Database Connection screen is displayed.</p>
</li>
<li>
<p>On the Create Database Connection screen, do not change the default values for the connection name and type, <code>Connection1</code> and <code>Oracle (JDBC)</code>. Enter <code>HR</code> in both the <span class="bold">Username</span> and <span class="bold">Password</span> fields. Do not enter a value for <span class="bold">Role</span>, and select <span class="bold">Deploy Password</span>. You must provide information about the computer where your database is located. Your database administrator should provide you with this information.</p>
<p>Enter the following information:</p>
<ul>
<li>
<p><span class="bold"><a id="sthref149"></a>Driver</span>: <code>thin</code></p>
</li>
<li>
<p><a id="sthref150"></a><span class="bold">Host Name</span>: <code><span class="codeinlineitalic">Host name of the computer where Oracle Database 12<span class="italic">c</span> Release 1 (12.1) is installed</span></code></p>
<p>If the database is on the same computer, then for the <span class="bold">Host Name</span> parameter, enter <code>localhost</code>.</p>
</li>
<li>
<p><span class="bold"><a id="sthref151"></a>JDBC Port</span>: <code>1521</code></p>
</li>
<li>
<p><a id="sthref152"></a><span class="bold">SID</span>: <code>oracle</code></p>
</li>
</ul>
<p>Click <span class="bold">Test Connection</span>. If the connection is successful, the word Success! is displayed in the Status field.</p>
<p>Figure 3&ndash;1 shows the Connection screen where you enter these details.</p>
<div id="TDPJD288" class="figure">
<p class="titleinfigure"><a id="sthref153"></a>Figure 3-1 Specifying Connection Details</p>
<img width="560" height="560" src="img/tdpjd1.gif" alt="Description of Figure 3-1 follows"/><br/>
<a id="sthref154" href="img_text/tdpjd1.htm">Description of &#34;Figure 3-1 Specifying Connection Details&#34;</a><br/>
<br/></div>
<!-- class="figure" --></li>
<li>
<p>Click <span class="bold">Finish</span> to create the connection and close the screen.</p>
</li>
</ol>
<p class="subhead2"><a id="TDPJD289"></a><a id="sthref155"></a><a id="sthref156"></a>Disconnecting and Reconnecting from Oracle Database in JDeveloper</p>
<p>To disconnect from the database in JDeveloper, in the Database Navigator, right-click the connection name and select <span class="bold">Disconnect</span>. The display in the Database Navigator now shows only the name of the connection, without the plus (+) symbol for expanding the node. To reconnect to the database, right-click the connection name and select <span class="bold">Connect</span>.</p>
</div>
<!-- class="sect2" -->
<a id="CACFFCBJ"></a>
<div id="TDPJD131" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.1.3</span> <a id="sthref157"></a>Browsing the Data Using the <a id="sthref158"></a>Database Navigator</h3>
<p>After you have successfully established a connection to the database, you can browse its contents through the Database Navigator. The Database Navigator displays a navigable, hierarchical tree structure for the database, its objects, their instances, and the contents of each. To view the contents at each level of the hierarchy of the database connection that you created, do the following:</p>
<ol>
<li>
<p>The IDE Connections node in the Database Navigator now shows a node with the name of your connection. Click the plus symbol (+) to the left of the connection name to expand the navigation tree. To display a list of the instances of an object type, for example Tables, expand the Table navigation tree.</p>
</li>
<li>
<p>The Structure window below the navigator shows the detailed structure of any object selected in the navigator. Select a table in the navigator (for example <span class="bold">Employees</span>) to see the columns of that table in the Structure window.</p>
</li>
<li>
<div id="TDPJD291" class="figure">
<p class="titleinfigure"><a id="sthref159"></a>Figure 3-2 Viewing the Table Structure and Data</p>
<img width="867" height="840" src="img/tdpjd3.gif" alt="Description of Figure 3-2 follows"/><br/>
<a id="sthref160" href="img_text/tdpjd3.htm">Description of &#34;Figure 3-2 Viewing the Table Structure and Data&#34;</a><br/>
<br/></div>
<!-- class="figure" --></li>
<li>
<p>If you double-click a table in the navigator, the structure of that table is displayed in the main editing area of the window. It includes details about all the columns, such as Name, Type, and Size, so you can browse the <a id="sthref161"></a>table definition.</p>
<p>To view the data from a table, select the <span class="bold">Data</span> tab below the table structure. You can now view and <a id="sthref162"></a>browse through the table data.</p>
</li>
<li>
<p>You can also edit the objects in the Database Navigator. To <a id="sthref163"></a>edit a table, right-click the table and select <span class="bold">Edit</span> from the shortcut menu. A dialog box enables you to make changes to the selected table.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACCIGDB"></a>
<div id="TDPJD132" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.2</span> Setting Up <a id="sthref164"></a><a id="sthref165"></a>Applications and Projects in JDeveloper</h2>
<p>In JDeveloper, you create your work in an application, within which you can organize your work into a number of projects. JDeveloper provides a number of application templates, to help you to create the project structure for standard types of application relatively quickly and easily. At the time you create your application in JDeveloper, you can choose the application template that matches the type of application you will be building.</p>
<p>The <a id="sthref166"></a>application template you select determines the initial project structure (the named project folders within the application) and the application technologies that will be included. You can then add any extra libraries or technologies you need for your particular application, and create additional projects if you need them.</p>
<div id="TDPJD133" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref167"></a>
<h3 class="sect2"><span class="secnum">3.2.1</span> <a id="sthref168"></a>Using the JDeveloper Application Navigator</h3>
<p>The <a id="sthref169"></a>Application Navigator displays all your applications and projects. When you first start JDeveloper, the Application Navigator is displayed by default on the left side of the JDeveloper IDE.</p>
<p>To view the Application Navigator when it is not displayed, you can click the <span class="bold">Applications</span> tab in the navigator panel on the top left-hand side of the JDeveloper display, or select <span class="bold">Application Navigator</span> from the View menu.</p>
<p>The Application Navigator shows a logical grouping of the items in your projects. To see the structure of an individual item, you can select it and the structure is displayed in the Structure window.</p>
<p>From the Application Navigator, you can display items in an appropriate default editor. For example, if you double-click a Java file, the file opens in the Java Source Editor, and if you double-click a JavaServer Pages (JSP) file, it opens in the JSP/HTML Visual Editor.</p>
</div>
<!-- class="sect2" -->
<div id="TDPJD134" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref170"></a>
<h3 class="sect2"><span class="secnum">3.2.2</span> Creating an <a id="sthref171"></a><a id="sthref172"></a>Application and a Project</h3>
<p>To get started with JDeveloper, you must create an application and at least one project in which to store your work, as follows:</p>
<ol>
<li>
<p>In the Application Navigator, click <span class="bold">New Application</span>.</p>
</li>
<li>
<p>The Create Generic Application wizard is displayed. In the Name your application screen, enter <code>HRApp</code> in the Application Name field, and from the Application Template list, select <span class="bold">Generic Application</span>. Click <span class="bold">Next</span>.</p>
</li>
<li>
<p>On the Name your project screen, enter <code>View</code> as the name of the project. Click <span class="bold">Finish</span>.</p>
</li>
<li>
<p>The new <code>HRApp</code> application is displayed in the Application Navigator.</p>
</li>
<li>
<p>Save your application. To do this, from the <span class="bold">File</span> menu, select <span class="bold">Save All</span>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<div id="TDPJD135" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref173"></a>
<h3 class="sect2"><span class="secnum">3.2.3</span> Viewing the Javadoc and Source Code Available in the Project Scope</h3>
<p>You can view the Javadoc or the code for any of the classes available in the project technology scope within JDeveloper. In addition, you can view the details of all the methods available for those classes.</p>
<p>For example, to see the code or Javadoc for the <code>Connection</code> class, do the following:</p>
<ol>
<li>
<p>With your project selected in the Application Navigator, from the <span class="bold">Navigate</span> menu select <span class="bold">Go to Java Type</span>. You can also do this for a specific file in your project.</p>
</li>
<li>
<p>In the Go to Java Type dialog box, type the name of the Java class.</p>
</li>
<li>
<p>Enter the name of the class you want to view in the <span class="bold">Name</span> field, or click <span class="bold">Browse</span> to find the class. For the <code>Connection</code> class, start to enter <code>Connection</code>, and from the displayed list select <span class="bold">Connection (java.sql)</span>.</p>
<div id="TDPJD292" class="figure">
<p class="titleinfigure"><a id="sthref174"></a>Figure 3-3 Selecting the Class to View the Javadoc in JDeveloper</p>
<img width="392" height="295" src="img/tdpjd4.gif" alt="Description of Figure 3-3 follows"/><br/>
<a id="sthref175" href="img_text/tdpjd4.htm">Description of &#34;Figure 3-3 Selecting the Class to View the Javadoc in JDeveloper&#34;</a><br/>
<br/></div>
<!-- class="figure" --></li>
<li>
<p>Click <span class="bold">OK</span>.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACGJJFE"></a>
<div id="TDPJD136" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.3</span> <a id="sthref176"></a>Connecting to Oracle Database from a Java Application</h2>
<p>So far, you have seen how to connect to the database from JDeveloper. To initiate a connection from the Java application, you use the <code>Connection</code> object from the JDBC application programming interface (API).</p>
<p>This section describes connecting to the database from the Java application in the following subsections:</p>
<ul>
<li>
<p><a href="#CACCCIIC">Overview of Connecting to Oracle Database</a></p>
</li>
<li>
<p><a href="#CACGDCFF">Specifying Database URLs</a></p>
</li>
<li>
<p><a href="#CACHDGCH">Creating a Java Class in JDeveloper</a></p>
</li>
<li>
<p><a href="#CACHIGCG">Java Libraries</a></p>
</li>
<li>
<p><a href="#CACJDCJC">Adding JDBC and JSP Libraries</a></p>
</li>
<li>
<p><a href="#CACEFBDC">Importing JDBC Packages</a></p>
</li>
<li>
<p><a href="#CACGGGJA">Declaring Connection-Related Variables</a></p>
</li>
<li>
<p><a href="#CACGDFCJ">Creating the Connection Method</a></p>
</li>
</ul>
<a id="CACCCIIC"></a>
<div id="TDPJD137" class="sect2">
<h3 class="sect2"><span class="secnum">3.3.1</span> <a id="sthref177"></a>Overview of <a id="sthref178"></a><a id="sthref179"></a>Connecting to Oracle Database</h3>
<p>In Java, you use an instance of the <code>DataSource</code> object to get a connection to the database. The <code>DataSource</code> interface provides a complete replacement for the previous JDBC <code>DriverManager</code> class. Oracle implements the <code>javax.sql.DataSource</code> interface with the <code>OracleDataSource</code> class in the <code>oracle.jdbc.pool</code> package. The overloaded <code>getConnection</code> method returns a physical connection to the database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The use of the <code><a id="sthref180"></a>DriverManager</code> class to establish a connection to a database is deprecated.</div>
<p>You can either set properties using appropriate <code>set</code><code><span class="codeinlineitalic">xxx</span></code> methods for the <code><a id="sthref181"></a><a id="sthref182"></a>DataSource</code> object or use the <code>getConnection</code> method that accepts these properties as input parameters.</p>
<p>Important <code><a id="sthref183"></a>DataSource</code> Properties are listed in <a href="#g1073223">Table 3-1</a>.</p>
<div id="TDPJD294" class="tblformalwide">
<p class="titleintable"><a id="sthref184"></a><a id="g1073223"></a>Table 3-1 St<a id="sthref185"></a>andard Data Source Properties</p>
<table class="cellalignment5888" title="Standard Data Source Properties" summary="table" dir="ltr">
<thead>
<tr class="cellalignment5879">
<th class="cellalignment5889" id="r1c1-t3">Name</th>
<th class="cellalignment5889" id="r1c2-t3">Type</th>
<th class="cellalignment5889" id="r1c3-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r2c1-t3" headers="r1c1-t3">
<p><code><a id="sthref186"></a>databaseName</code></p>
</td>
<td class="cellalignment5885" headers="r2c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td class="cellalignment5885" headers="r2c1-t3 r1c3-t3">
<p>Name of the particular database on the server. Also known as the service name (or SID) in Oracle terminology.</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r3c1-t3" headers="r1c1-t3">
<p><code><a id="sthref187"></a>dataSourceName</code></p>
</td>
<td class="cellalignment5885" headers="r3c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td class="cellalignment5885" headers="r3c1-t3 r1c3-t3">
<p>Name of the underlying data source class.</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r4c1-t3" headers="r1c1-t3">
<p><code><a id="sthref188"></a>description</code></p>
</td>
<td class="cellalignment5885" headers="r4c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td class="cellalignment5885" headers="r4c1-t3 r1c3-t3">
<p>Description of the data source.</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r5c1-t3" headers="r1c1-t3">
<p><code><a id="sthref189"></a>networkProtocol</code></p>
</td>
<td class="cellalignment5885" headers="r5c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td class="cellalignment5885" headers="r5c1-t3 r1c3-t3">
<p>Network protocol for communicating with the server. For Oracle, this applies only to the JDBC Oracle Call Interface (OCI) drivers and defaults to <code>tcp</code>.</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r6c1-t3" headers="r1c1-t3">
<p><code><a id="sthref190"></a>password</code></p>
</td>
<td class="cellalignment5885" headers="r6c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td class="cellalignment5885" headers="r6c1-t3 r1c3-t3">
<p>Password for the connecting user.</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r7c1-t3" headers="r1c1-t3">
<p><code><a id="sthref191"></a>portNumber</code></p>
</td>
<td class="cellalignment5885" headers="r7c1-t3 r1c2-t3">
<p><code>int</code></p>
</td>
<td class="cellalignment5885" headers="r7c1-t3 r1c3-t3">
<p>Number of the port where the server listens for requests</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r8c1-t3" headers="r1c1-t3">
<p><code><a id="sthref192"></a>serverName</code></p>
</td>
<td class="cellalignment5885" headers="r8c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td class="cellalignment5885" headers="r8c1-t3 r1c3-t3">
<p>Name of the database server</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r9c1-t3" headers="r1c1-t3">
<p><code><a id="sthref193"></a>user</code></p>
</td>
<td class="cellalignment5885" headers="r9c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td class="cellalignment5885" headers="r9c1-t3 r1c3-t3">
<p>User name to be used for login</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r10c1-t3" headers="r1c1-t3">
<p><code><a id="sthref194"></a>driverType</code></p>
</td>
<td class="cellalignment5885" headers="r10c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td class="cellalignment5885" headers="r10c1-t3 r1c3-t3">
<p>Specifies the Oracle JDBC driver type. It can be either <code>oci</code> or <code>thin</code>.</p>
<p>This is an Oracle-specific property.</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r11c1-t3" headers="r1c1-t3">
<p><code><a id="sthref195"></a>url</code></p>
</td>
<td class="cellalignment5885" headers="r11c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td class="cellalignment5885" headers="r11c1-t3 r1c3-t3">
<p>Specifies the URL of the database connect string.You can use this property in place of the standard <code>portNumber</code>, <code>networkProtocol</code>, <code>serverName</code>, and <code>databaseName</code> properties.</p>
<p>This is an Oracle-specific property.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<p>If you choose to set the <a id="sthref196"></a><code>url</code> property of the <a id="sthref197"></a><code>DataSource</code> object with all necessary parameters, then you can connect to the database without setting any other properties or specifying any additional parameters with the <code><a id="sthref198"></a>getDBConnection</code> method. For more information about setting the database URL, refer to the <a href="#CACGDCFF">Specifying Database URLs</a> section.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The parameters specified through the <code>getConnection</code> method override all property and <code>url</code> parameter settings previously specified in the application.</div>
</div>
<!-- class="sect2" -->
<a id="CACGDCFF"></a>
<div id="TDPJD138" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.3.2</span> Specifying <a id="sthref199"></a>Database URLs</h3>
<p>This release of Oracle JVM supports Internet Protocol Version 6 (IPv6) addresses in the URL and system names of the Java code in the database, which resolve to IPv6 addresses.</p>
<p>Database URLs are strings that you specify for the value of the <code>url</code> property of the <code>DataSource</code> object. The complete <a id="sthref200"></a>URL syntax is the following:</p>
<pre>jdbc:oracle:<span class="italic">driver_type</span>:[<span class="italic">username</span>/<span class="italic">password</span>]@<span class="italic">database_specifier</span>
</pre>
<p>The first part of the URL specifies which JDBC driver is to be used. The supported <a id="sthref201"></a><code><span class="codeinlineitalic">driver_type</span></code> values for client-side applications are <code>thin</code> and <code>oci</code>. The brackets indicate that the user name and password pair is optional. The <code><span class="codeinlineitalic"><a id="sthref202"></a>database_specifier</span></code> value identifies the database to which the application is connected.</p>
<p>The following is the syntax for <a id="sthref203"></a>thin-style service names that are supported by the Thin driver:</p>
<p><code>jdbc:oracle:</code><code><span class="codeinlineitalic">driver_type</span></code><code>:[</code><code><span class="codeinlineitalic">username</span></code><code>/</code><code><span class="codeinlineitalic">password</span></code><code>]@//</code><code><span class="codeinlineitalic">host_name</span></code><code>:</code><code><span class="codeinlineitalic">port_number</span></code><code>:</code><code><span class="codeinlineitalic">SID</span></code></p>
<p>For the sample application created in this guide, if you include the user name and password, and if the database is hosted locally, then the database connection URL is as shown in <a href="#CACFEEAI">Example 3-1</a>.</p>
<div id="TDPJD295" class="example">
<p class="titleinexample"><a id="CACFEEAI"></a>Example 3-1 Specifying the url Property for the DataSource Object</p>
<pre>jdbc:oracle:thin:hr/hr@localhost:1521:oracle
</pre></div>
<!-- class="example" -->
<div id="TDPJD296" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref204"></a>
<h4 class="sect3"><span class="secnum">3.3.2.1</span> Using the <a id="sthref205"></a><a id="sthref206"></a>Default Service Feature of the <a id="sthref207"></a>Oracle Database</h4>
<p>If you have performed Oracle Database server installation in Typical mode, then the default service name used by the Oracle instance is <code>ORCL</code>, and the following Easy Connect syntax can be used to connect to that instance:</p>
<pre>sqlplus /nolog
SQL&gt; CONNECT username@&#34;host/ORCL&#34;
SQL&gt; Enter password: password
</pre>
<p>The Easy Connect feature, which was introduced in Oracle Database 11<span class="italic">g</span> Release 1 (11.1), makes the following parts of the conventional JDBC connection URL <a id="sthref208"></a>syntax optional:</p>
<p><code>jdbc:oracle:</code><code><span class="codeinlineitalic">driver_type</span></code><code>:[</code><code><span class="codeinlineitalic">username/password</span></code><code>]@[//]</code><code><span class="codeinlineitalic">host_name</span></code><code>[:</code><code><span class="codeinlineitalic">port</span></code><code>][:oracle]</code></p>
<p>In this URL:</p>
<ul>
<li>
<p>// is optional.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">:port</span></code> is optional.</p>
<p>Specify a port only if the default Oracle Net listener port (1521) is not used.</p>
</li>
<li>
<p><code>:oracle</code> (or the service name) is optional.</p>
<p>The connection adapter for the Oracle Database connects to the default service on the host. On the host, this is set to <code>ORACLE</code> in the <code>listener.ora</code> file.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG172" href="../NETAG/gettingstart.htm#NETAG172"><span class="italic">Oracle Database Net Services Administrator&#39;s Guide</span></a> for more information about the Easy Connect feature</div>
<p><a href="#CACECECA">Example 3-2</a> shows a basic configuration of the <code>listener.ora</code> file, where the default service is defined.</p>
<div id="TDPJD297" class="example">
<p class="titleinexample"><a id="CACECECA"></a>Example 3-2 Default Service Configuration in listener.ora</p>
<pre>MYLISTENER = (ADDRESS_LIST= 
 (ADDRESS=(PROTOCOL=tcp)(HOST=test555)(PORT=1521)) 
) 
DEFAULT_SERVICE_MYLISTENER=dbjf.regress.rdbms.dev.testserver.com
 
SID_LIST_MYLISTENER = (SID_LIST=
(SID_DESC=(SID_NAME=dbjf)(GLOBAL_DBNAME=dbjf.regress.rdbms.dev.testserver.com)(ORACLE_HOME=/test/oracle)) 
)
</pre></div>
<!-- class="example" -->
<p>After making changes to the <code>listener.ora</code> file, you must restart the listener with the following command:</p>
<pre>&gt; lsnrctl start mylistener
</pre>
<p>The following <a id="sthref209"></a>URLs should work with this configuration:</p>
<pre>jdbc:oracle:thin:@//test555.testserver.com
jdbc:oracle:thin:@//test555.testserver.com:1521
jdbc:oracle:thin:@test555.testserver.com
jdbc:oracle:thin:@test555.testserver.com:1521
jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=test555.testserver.com)(PORT=1521)))
jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=test555.testserver.com)))
jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=test555.testserver.com)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=)))
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Default service is a new feature in Oracle Database 12<span class="italic">c</span> Release 1 (12.1). If you use any other version of the Oracle Database to connect to the database, then you must specify the SID and port number.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACHDGCH"></a>
<div id="TDPJD139" class="sect2">
<h3 class="sect2"><span class="secnum">3.3.3</span> <a id="sthref210"></a>Creating a <a id="sthref211"></a>Java Class in JDeveloper</h3>
<p>The first step in building a Java application is to create a Java class. The following instructions describe how you create a class called <code>DataHandler</code>, which will contain the methods for querying the database and modifying the data in it.</p>
<ol>
<li>
<p>In the Application Navigator, right-click the <span class="bold">View</span> project, and from the shortcut menu, select <span class="bold">New</span>.</p>
</li>
<li>
<p>In the New Gallery dialog box, select <span class="bold">General</span> in the Categories list. In the Items list, select <span class="bold"><a id="sthref212"></a>Java Class</span>, and click <span class="bold">OK</span>. The Create Java Class dialog box is displayed.</p>
</li>
<li>
<p>In the Create Java Class dialog box, enter <code>DataHandler</code> in the Name text box, and <code>hr</code> in the Package text box. Do not change the default values of the Optional Attributes, and click <span class="bold">OK</span>. The Create Java Class dialog box with the appropriate values specified is shown in <a href="#CHEIECGG">Figure 3-4</a>.</p>
<div id="TDPJD298" class="figure">
<p class="titleinfigure"><a id="CHEIECGG"></a>Figure 3-4 Creating a Java Class</p>
<img width="427" height="524" src="img/tdpjd5.gif" alt="Description of Figure 3-4 follows"/><br/>
<a id="sthref213" href="img_text/tdpjd5.htm">Description of &#34;Figure 3-4 Creating a Java Class&#34;</a><br/>
<br/></div>
<!-- class="figure" --></li>
<li>
<p>The s<a id="sthref214"></a>keleton <code>DataHandler</code> class is created and is displayed in the Java Source Editor. The package declaration, the class declaration, and the default constructor are created by default. <a href="#CACFCFCA">Figure 3-5</a> shows the class displayed in the Java Source Editor, ready for you to add your Java code:</p>
<div id="TDPJD299" class="figure">
<p class="titleinfigure"><a id="CACFCFCA"></a>Figure 3-5 Java Source Editor</p>
<img width="621" height="276" src="img/tdpjd6.gif" alt="Description of Figure 3-5 follows"/><br/>
<a id="sthref215" href="img_text/tdpjd6.htm">Description of &#34;Figure 3-5 Java Source Editor&#34;</a><br/>
<br/></div>
<!-- class="figure" --></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CACHIGCG"></a>
<div id="TDPJD140" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.3.4</span> <a id="sthref216"></a>Java Libraries</h3>
<p>Oracle JDeveloper comes with standard libraries to help Java application programming. These libraries include <a id="sthref217"></a>API support for Application Development Framework (ADF), Oracle libraries for JDBC, JSP, and so on.</p>
<p>To use JDBC in your project, you import the Oracle JDBC library into the project. Similarly, to use JSP technology, you import the JSP Runtime library.</p>
<div id="TDPJD141" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref218"></a>
<h4 class="sect3"><span class="secnum">3.3.4.1</span> Overview of the <a id="sthref219"></a>Oracle JDBC Library</h4>
<p>Important packages of the Oracle JDBC library include the following:</p>
<ul>
<li>
<p><a id="sthref220"></a><code><a id="sthref221"></a><a id="sthref222"></a><a id="sthref223"></a>oracle.jdbc</code>: The interfaces of the <code>oracle.jdbc</code> package define the Oracle extensions to the interfaces in the <code>java.sql</code> package. These extensions provide access to Oracle SQL-format data and other Oracle-specific features, including Oracle performance enhancements.</p>
</li>
<li>
<p><a id="sthref224"></a><code><a id="sthref225"></a>oracle.sql</code>: The <code>oracle.sql</code> package supports direct access to data in SQL format. This package consists primarily of classes that provide Java mappings to SQL data types and their support classes.</p>
</li>
<li>
<p><a id="sthref226"></a><code><a id="sthref227"></a>oracle.jdbc.pool</code>: This package includes the <code>OracleDataSource</code> class that is used to get a connection to the database. The overloaded <code>getConnection</code> method returns a physical connection to the database.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="TDPJD142" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref228"></a>
<h4 class="sect3"><span class="secnum">3.3.4.2</span> Overview of the <a id="sthref229"></a>JSP Runtime Library</h4>
<p>This library includes the classes and tag libraries required to interpret and run JSP files on the <a id="sthref230"></a>Oracle WebLogic Server that comes with JDeveloper.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACJDCJC"></a>
<div id="TDPJD143" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.3.5</span> Adding <a id="sthref231"></a>JDBC and JSP Libraries</h3>
<p>To include libraries in your project, perform the following steps:</p>
<ol>
<li>
<p>Double-click the <span class="bold">View</span> project in the Application Navigator to display the <a id="sthref232"></a><a id="sthref233"></a>Project Properties dialog box.</p>
</li>
<li>
<p>Click <span class="bold">Libraries and Classpath</span>, and then click <span class="bold">Add Library...</span>. The <span class="bold">Add Library</span> dialog box is displayed with a list of the available libraries for the Java2 Platform, Standard Edition (J2SE) version is displayed.</p>
</li>
<li>
<p>In the Add Library dialog box, scroll through the list of libraries in the Extension folder. Select JSP Runtime library and click <span class="bold">OK</span> to add it to the list of selected libraries for your project. Similarly, add the Oracle JDBC library. <a href="#CHEJJJCG">Figure 3-6</a> shows the <span class="bold">Oracle JDBC</span> library added to the <code>View</code> project.</p>
<div id="TDPJD300" class="figure">
<p class="titleinfigure"><a id="CHEJJJCG"></a>Figure 3-6 Importing Libraries</p>
<img width="320" height="500" src="img/importlibs_new.gif" alt="Description of Figure 3-6 follows"/><br/>
<a id="sthref234" href="img_text/importlibs_new.htm">Description of &#34;Figure 3-6 Importing Libraries&#34;</a><br/>
<br/></div>
<!-- class="figure" --></li>
<li>
<p>Click <span class="bold">OK</span>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CACEFBDC"></a>
<div id="TDPJD144" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.3.6</span> Importing JDBC Packages</h3>
<p>To use JDBC in the Java application, import the following JDBC packages:</p>
<ol>
<li>
<p>If the <code>DataHandler.java</code> class is not already open in the Java Source Editor, in the Application Navigator, expand the <span class="bold">View</span> project, <span class="bold">Application Sources</span>, and your package (<span class="bold">hr</span>) and double-click <span class="bold">DataHandler.java</span>.</p>
</li>
<li>
<p>At the end of the generated package declaration, on a new line, enter the <code>import</code> statements shown in <a href="#CACDGBHI">Example 3-3</a>.</p>
</li>
</ol>
<div id="TDPJD301" class="example">
<p class="titleinexample"><a id="CACDGBHI"></a>Example 3-3 Importing Packages in a Java Application</p>
<pre>package hr;
import java.sql.Connection;
import oracle.jdbc.pool.OracleDataSource;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CACGGGJA"></a>
<div id="TDPJD145" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.3.7</span> Declaring Connection-Related Variables</h3>
<p>Connection information is passed to the connection method by using the following connection variables: the connection URL, a user name, and the corresponding password.</p>
<p>Use the Java Source Editor of JDeveloper to edit the <code>DataHandler.java</code> class as follows:</p>
<ol>
<li>
<p>After the <code>DataHandler</code> constructor, on a new line, declare the three connection variables as follows:</p>
<pre>String jdbcUrl = null;
String userid = null;
String password = null; 
</pre>
<p>These variables will be used in the application to contain values supplied by the user at login to authenticate the user and to create a connection to the database. The <code>jdbcUrl</code> variable is used to hold the URL of the database that you will connect to. The <code>userid</code> and <code>password</code> variables are used to authenticate the user and identify the schema to be used for the session.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The login variables have been set to null to secure the application. At this point in the guide, application login functionality is yet to be built into the application. Therefore, to test the application until login functionality is built in, you can set values in the login variables as follows:
<p>Set the <code>jdbcUrl</code> variable to the connect string for your database.</p>
<pre>String jdbcUrl = &#34;jdbc:oracle:thin:@localhost:1521:ORACLE&#34;;
</pre>
<p>Set the variables <code>userid</code> and <code>password</code> to <code>hr</code> as follows:</p>
<pre>String userid = &#34;hr&#34;;
String password = &#34;hr&#34;;
</pre>
<p>Make sure you reset these to <code>null</code> as soon as you finish testing.</p>
<p>For more information about security features and practices, refer to <a class="olink DBSEG" href="../DBSEG/toc.htm"><span class="italic">Oracle Database Security Guide</span></a> and the vendor-specific documentation for your development environment.</p>
</div>
</li>
<li>
<p>On a new line, declare a connection instance as follows:</p>
<pre>Connection conn;
</pre>
<p>Your Java class should now contain the code in <a href="#CACGEIDC">Example 3-4</a>.</p>
<div id="TDPJD302" class="example">
<p class="titleinexample"><a id="CACGEIDC"></a>Example 3-4 Declaring Connection Variables and the Connection Object</p>
<pre>package hr;
import java.sql.Connection;
import oracle.jdbc.pool.OracleDataSource;
 
public class DataHandler {
    public DataHandler() {
    }
    String jdbcUrl = null;
    String userid = null;
    String password = null; 
    Connection conn;
}
</pre></div>
<!-- class="example" --></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CACGDFCJ"></a>
<div id="TDPJD146" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.3.8</span> Creating the Connection Method</h3>
<p>To connect to the database, you must create a method as follows:</p>
<ol>
<li>
<p>Add the following method declaration after the connection declaration:</p>
<pre>public void getDBConnection() throws SQLException
</pre>
<p>The Java Code Insight feature displays a message reminding you to import the <code>SQLException</code> error handling package. Press the Alt+Enter keys to import it. The <code>import java.sql.SQLException</code> statement is added to the list of import packages.</p>
</li>
<li>
<p>At the end of the same line, add an open brace (<code>{</code>) and then press the Enter key. JDeveloper automatically creates the closing brace, and positions the cursor in a new empty line between the braces.</p>
</li>
<li>
<p>On a new line, declare an <code>OracleDataSource</code> instance as follows:</p>
<pre>OracleDataSource ds;
</pre></li>
<li>
<p>Enter the following to create a new <code>OracleDataSource</code> object:</p>
<pre>ds = new OracleDataSource();
</pre></li>
<li>
<p>Start to enter the following to set the URL for the <code>DataSource</code> object:</p>
<pre>ds.setURL(jdbcUrl);
</pre>
<p>Java Code Insight prompts you by providing you with a list of available <code>OracleDataSource</code> methods. Scroll through the list to select the <code>setURL(String)</code> method, and press the Enter key to select it into your code. In the parentheses for this function, enter <code>jdbcUrl</code> in place of <code>arg0</code>.</p>
<p><a href="#CACFBEEI">Figure 3-7</a> shows how the Java Code Insight feature in JDeveloper helps you with inserting code.</p>
<div id="TDPJD303" class="figure">
<p class="titleinfigure"><a id="CACFBEEI"></a>Figure 3-7 Java Code Insight</p>
<img width="400" height="252" src="img/jcodeinsight.gif" alt="Description of Figure 3-7 follows"/><br/>
<a id="sthref235" href="img_text/jcodeinsight.htm">Description of &#34;Figure 3-7 Java Code Insight&#34;</a><br/>
<br/></div>
<!-- class="figure" --></li>
<li>
<p>On the next line, enter the following:</p>
<pre>conn = ds.getConnection(userid,password);
</pre>
<p>As usual, Java Code Insight will prompt you with a list of methods for <code>ds</code>. This time, select <code>getConnection(String,String)</code>. In the parentheses, enter <code>userid</code>,<code>password</code>. End the line with a semicolon (<code>;</code>).</p>
<p>Your code should look similar to the code in <a href="#CACBBFHB">Example 3-5</a>.</p>
<div id="TDPJD304" class="example">
<p class="titleinexample"><a id="CACBBFHB"></a>Example 3-5 Adding a Method to Connect to the Database</p>
<pre>package hr;
import java.sql.Connection;
import java.sql.SQLException;
 
import oracle.jdbc.pool.OracleDataSource;
 
public class DataHandler {
    public DataHandler() {
    }
    String jdbcUrl = null;
    String userid = null;
    String password = null; 
    Connection conn;
    public void getDBConnection() throws SQLException{
        OracleDataSource ds;
        ds = new OracleDataSource();
        ds.setURL(jdbcUrl);
        conn=ds.getConnection(userid,password);
        
    }
}
</pre></div>
<!-- class="example" --></li>
<li>
<p>Compile your class to ensure that there are no syntax errors. To do this, right-click in the Java Source Editor, and select <span class="bold">Make</span> from the shortcut menu. A <code>Successful compilation</code> message is displayed in the Log window below the Java Source Editor window.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5878">
<tr>
<td class="cellalignment5885">
<table class="cellalignment5883">
<tr>
<td class="cellalignment5882"><a href="getstart.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5882"><a href="querdata.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2007, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5887">
<table class="cellalignment5881">
<tr>
<td class="cellalignment5882"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5882"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5882"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5882"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5882"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5882"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>