<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-106284"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Building%20Global%20Applications"></a><title>Building Global Applications</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748"/>
<meta name="dcterms.created" content="2014-02-21T3:12:40Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database 2 Day + Java Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17944-10"/>
<meta name="dcterms.isVersionOf" content="TDPJD"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2007, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ucpex.htm" title="Previous" type="text/html"/>
<link rel="Next" href="index.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17944-10.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">15/16</span> <!-- End Header -->
<div id="TDPJD252" class="chapter"><a id="sthref509"></a>
<h1 class="chapter"><span class="secnum">9</span> Building Global Applications</h1>
<p>Building a global Internet application that supports different locales requires good development practices. A locale refers to a national language and the region in which the language is spoken. The application itself must be aware of user locale preferences and present content following the cultural convention expected by the user. It is important to present data with appropriate locale characteristics, such as using the correct date and number formats. Oracle Database 12<span class="italic">c</span> Release 1 (12.1) is fully internationalized to provide a global platform for developing and deploying global applications.</p>
<p>This chapter discusses global application development in a Java and Oracle Database 12<span class="italic">c</span> Release 1 (12.1) environment. It addresses the basic tasks associated with developing and deploying global Internet applications, including developing locale awareness, constructing HTML content in the user-preferred language, and presenting data following the cultural conventions of the user locale.</p>
<p>This chapter has the following topics:</p>
<ul>
<li>
<p><a href="#BACHAIDB">Developing Locale Awareness</a></p>
</li>
<li>
<p><a href="#BACHFHID">Determining User Locales</a></p>
</li>
<li>
<p><a href="#BACCGBDF">Encoding HTML Pages</a></p>
</li>
<li>
<p><a href="#BACIIBCD">Organizing the Content of HTML Pages for Translation</a></p>
</li>
<li>
<p><a href="#BACDJIGA">Presenting Data by User Locale Convention</a></p>
</li>
<li>
<p><a href="#BACCGBAB">Localizing Text on JSP Pages in JDeveloper</a></p>
</li>
</ul>
<a id="BACHAIDB"></a>
<div id="TDPJD253" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">9.1</span> Developing Locale Awareness</h2>
<p>Global Internet applications must be aware of the user locale. Locale-sensitive functions, such as date, time, and monetary formatting, are built into programming environments such as Java and SQL. Applications can use locale-sensitive functions to format the HTML pages according to the cultural conventions of the user locale.</p>
<p>Different programming environments represent locales in different ways. For example, the French (Canadian) locale is represented as follows:</p>
<div class="inftblinformalmax">
<table class="cellalignment5888" title="Global Example" summary="Globalization locale by environment example." dir="ltr">
<thead>
<tr class="cellalignment5879">
<th class="cellalignment5889" id="r1c1-t2">Environment</th>
<th class="cellalignment5889" id="r1c2-t2">Representation</th>
<th class="cellalignment5889" id="r1c3-t2">Locale</th>
<th class="cellalignment5889" id="r1c4-t2">Explanation</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r2c1-t2" headers="r1c1-t2">Java</td>
<td class="cellalignment5885" headers="r2c1-t2 r1c2-t2">Java locale object</td>
<td class="cellalignment5885" headers="r2c1-t2 r1c3-t2"><code>fr_CA</code></td>
<td class="cellalignment5885" headers="r2c1-t2 r1c4-t2">Java uses the ISO language and country code.
<p><code>fr</code> is the language code defined in the ISO 639 standard. <code>CA</code> is the country code defined in the ISO 3166 standard.</p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r3c1-t2" headers="r1c1-t2">SQL and PL/SQL</td>
<td class="cellalignment5885" headers="r3c1-t2 r1c2-t2"><code>NLS_LANGUAGE</code> and <code>NLS_TERRITORY</code> parameters</td>
<td class="cellalignment5885" headers="r3c1-t2 r1c3-t2"><code>NLS_LANGUAGE =&#34;CANADIAN FRENCH&#34;</code>
<p><code>NLS_TERRITORY =&#34;CANADA&#34;</code></p>
</td>
<td class="cellalignment5885" headers="r3c1-t2 r1c4-t2">Refer to the &#34;Working in a Global Environment&#34; chapter in the <a class="olink TDDDG" href="../TDDDG/toc.htm"><span class="italic">Oracle Database 2 Day Developer&#39;s Guide</span></a>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformalmax" -->
<p><a href="#BACBGDCF">Table 9-1</a> shows how some of the commonly used locales are defined in Java and Oracle environments.</p>
<div id="TDPJD365" class="tblformalmax">
<p class="titleintable"><a id="sthref510"></a><a id="BACBGDCF"></a>Table 9-1 Locale Representation in Java, SQL, and PL/SQL Programming Environments</p>
<table class="cellalignment5888" title="Locale Representation in Java, SQL, and PL/SQL Programming Environments" summary="Locale Representation in Different Programming Environments" dir="ltr">
<thead>
<tr class="cellalignment5879">
<th class="cellalignment5889" id="r1c1-t3">Locale</th>
<th class="cellalignment5889" id="r1c2-t3">Java</th>
<th class="cellalignment5889" id="r1c3-t3">NLS_LANGUAGE, NLS_TERRITORY</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r2c1-t3" headers="r1c1-t3">
<p>Chinese (P.R.C)</p>
</td>
<td class="cellalignment5885" headers="r2c1-t3 r1c2-t3">
<p><code>zh_CN</code></p>
</td>
<td class="cellalignment5885" headers="r2c1-t3 r1c3-t3">
<p><code>SIMPLIFIED</code> <code>CHINESE</code>, <code>CHINA</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r3c1-t3" headers="r1c1-t3">
<p>Chinese (Taiwan)</p>
</td>
<td class="cellalignment5885" headers="r3c1-t3 r1c2-t3">
<p><code>zh_TW</code></p>
</td>
<td class="cellalignment5885" headers="r3c1-t3 r1c3-t3">
<p><code>TRADITIONAL CHINESE</code>, <code>TAIWAN</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r4c1-t3" headers="r1c1-t3">
<p>English (U.S.A)</p>
</td>
<td class="cellalignment5885" headers="r4c1-t3 r1c2-t3">
<p><code>en_US</code></p>
</td>
<td class="cellalignment5885" headers="r4c1-t3 r1c3-t3">
<p><code>AMERICAN</code>, <code>AMERICA</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r5c1-t3" headers="r1c1-t3">
<p>English (United Kingdom)</p>
</td>
<td class="cellalignment5885" headers="r5c1-t3 r1c2-t3">
<p><code>en_GB</code></p>
</td>
<td class="cellalignment5885" headers="r5c1-t3 r1c3-t3">
<p><code>ENGLISH</code>, <code>UNITED KINGDOM</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r6c1-t3" headers="r1c1-t3">
<p>French (Canada)</p>
</td>
<td class="cellalignment5885" headers="r6c1-t3 r1c2-t3">
<p><code>fr_CA</code></p>
</td>
<td class="cellalignment5885" headers="r6c1-t3 r1c3-t3">
<p><code>CANADIAN FRENCH</code>, <code>CANADA</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r7c1-t3" headers="r1c1-t3">
<p>French (France)</p>
</td>
<td class="cellalignment5885" headers="r7c1-t3 r1c2-t3">
<p><code>fr_FR</code></p>
</td>
<td class="cellalignment5885" headers="r7c1-t3 r1c3-t3">
<p><code>FRENCH</code>, <code>FRANCE</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r8c1-t3" headers="r1c1-t3">
<p>German (Germany)</p>
</td>
<td class="cellalignment5885" headers="r8c1-t3 r1c2-t3">
<p><code>de_DE</code></p>
</td>
<td class="cellalignment5885" headers="r8c1-t3 r1c3-t3">
<p><code>GERMAN</code>, <code>GERMANY</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r9c1-t3" headers="r1c1-t3">
<p>Italian (Italy)</p>
</td>
<td class="cellalignment5885" headers="r9c1-t3 r1c2-t3">
<p><code>it</code>_IT</p>
</td>
<td class="cellalignment5885" headers="r9c1-t3 r1c3-t3">
<p><code>ITALIAN</code>, <code>ITALY</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r10c1-t3" headers="r1c1-t3">
<p>Japanese (Japan)</p>
</td>
<td class="cellalignment5885" headers="r10c1-t3 r1c2-t3">
<p><code>ja_JP</code></p>
</td>
<td class="cellalignment5885" headers="r10c1-t3 r1c3-t3">
<p><code>JAPANESE</code>, <code>JAPAN</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r11c1-t3" headers="r1c1-t3">
<p>Korean (Korea)</p>
</td>
<td class="cellalignment5885" headers="r11c1-t3 r1c2-t3">
<p><code>ko_KR</code></p>
</td>
<td class="cellalignment5885" headers="r11c1-t3 r1c3-t3">
<p><code>KOREAN</code>, <code>KOREA</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r12c1-t3" headers="r1c1-t3">
<p>Portuguese (Brazil)</p>
</td>
<td class="cellalignment5885" headers="r12c1-t3 r1c2-t3">
<p><code>pt_BR</code></p>
</td>
<td class="cellalignment5885" headers="r12c1-t3 r1c3-t3">
<p><code>BRAZILIAN PORTUGUESE</code>, <code>BRAZIL</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r13c1-t3" headers="r1c1-t3">
<p>Portuguese (Portugal)</p>
</td>
<td class="cellalignment5885" headers="r13c1-t3 r1c2-t3">
<p><code>pt_PT</code></p>
</td>
<td class="cellalignment5885" headers="r13c1-t3 r1c3-t3">
<p><code>PORTUGUESE</code>, <code>PORTUGAL</code></p>
</td>
</tr>
<tr class="cellalignment5879">
<td class="cellalignment5885" id="r14c1-t3" headers="r1c1-t3">
<p>Spanish (Spain)</p>
</td>
<td class="cellalignment5885" headers="r14c1-t3 r1c2-t3">
<p><code>es_ES</code></p>
</td>
<td class="cellalignment5885" headers="r14c1-t3 r1c3-t3">
<p><code>SPANISH</code>, <code>SPAIN</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" -->
<p>When writing global applications across different programming environments, the user locale settings must be synchronized between environments. For example, Java applications that call PL/SQL procedures should map the Java locales to the corresponding <code>NLS_LANGUAGE</code> and <code>NLS_TERRITORY</code> values and change the parameter values to match the user locale before calling the PL/SQL procedures.</p>
<div id="TDPJD254" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref511"></a>
<h3 class="sect2"><span class="secnum">9.1.1</span> Mapping Between Oracle and Java Locales</h3>
<p>The Oracle Globalization Development Kit (GDK) provides the <code>LocaleMapper</code> class. It maps equivalent locales and character sets between Java, IANA, ISO, and Oracle. A Java application may receive locale information from the client that is specified in the Oracle locale name. The Java application must be able to map to an equivalent Java locale before it can process the information correctly.</p>
<p><a href="#BACDHJBC">Example 9-1</a> shows how to use the <code>LocaleMapper</code> class.</p>
<div id="TDPJD366" class="example">
<p class="titleinexample"><a id="BACDHJBC"></a>Example 9-1 Mapping from a Java Locale to an Oracle Language and Territory</p>
<pre>Locale locale = new Locale(&#34;fr&#34;, &#34;CA&#34;);
String oraLang = LocaleMapper.getOraLanguage(locale);
String oraTerr = LocaleMapper.getOraTerritory(locale);
</pre></div>
<!-- class="example" -->
<p>The GDK is a set of Java application programming interfaces (APIs) that provide Oracle application developers with the framework to develop globalized Internet applications. The GDK complements the existing globalization features in Java. It provides the synchronization of locale behaviors between a middle-tier Java application and the Oracle database.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BACHFHID"></a>
<div id="TDPJD255" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">9.2</span> Determining User Locales</h2>
<p>In a global environment, your application may have to accept users with different locale preferences. Determine the preferred locale of the user. Once that is known, the application should construct HTML content in the language of the locale, and follow the cultural conventions implied by the locale.</p>
<p>One of the most common methods in determining the user locale, is based on the default ISO locale setting of the browser of the user. Usually a browser sends locale preference settings to the HTTP server with the <code>Accept-Language</code> HTTP header. If this header is set to <code>NULL</code>, then there is no locale preference information available and the application should ideally fall back to a predefined application default locale.</p>
<p>Both JSP pages and Java Servlets can use calls to the Servlet API to retrieve the <code>Accept-Language</code> HTTP header as shown in <a href="#BACIHCJI">Example 9-2</a>.</p>
<div id="TDPJD367" class="example">
<p class="titleinexample"><a id="BACIHCJI"></a>Example 9-2 Determining User Locale in Java Using the Accept-Language Header</p>
<pre>String lang = request.getHeader(&#34;Accept-Language&#34;)
StringTokenizer st = new StringTokenizer(lang, &#34;,&#34;)
if (st.hasMoreTokens()) userLocale = st.nextToken();
</pre></div>
<!-- class="example" -->
<p>This code gets the <code>Accept-Language</code> header from the HTTP request, extracts the first ISO locale, and uses it as the user-desired locale.</p>
<div id="TDPJD256" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref512"></a>
<h3 class="sect2"><span class="secnum">9.2.1</span> Locale Awareness in Java Applications</h3>
<p>A Java locale object represents the locale of the corresponding user in Java. The Java encoding used for the locale is required to properly convert Java strings to and from byte data. You must consider the Java encoding for the locale if you make the Java code aware of a user locale. There are two ways to make a Java method sensitive to the Java locale and encoding:</p>
<ul>
<li>
<p>Using the default Java locale and default Java encoding for the method</p>
</li>
<li>
<p>Explicitly specifying the Java locale and Java encoding for the method</p>
</li>
</ul>
<p>When developing a global application, it is recommended to take the second approach and explicitly specify the Java locale and Java encoding that correspond to the current user locale. You can specify the Java locale object that corresponds to the user locale, identified by <code>user_locale</code>, in the <code>getDateTimeInstance</code> method as in <a href="#BACCGBHD">Example 9-3</a>.</p>
<div id="TDPJD368" class="example">
<p class="titleinexample"><a id="BACCGBHD"></a>Example 9-3 Explicitly Specifying User Locale in Java</p>
<pre>DateFormat df = DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, user_locale);
dateString = df.format(date); /* Format a date */
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BACCGBDF"></a>
<div id="TDPJD257" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">9.3</span> Encoding HTML Pages</h2>
<p>The encoding of an HTML page is important information for a browser and an Internet application. You can think of the page encoding as the character set used for the locale that an Internet application is serving. The browser needs to know about the page encoding so that it can use the correct fonts and character set mapping tables to display the HTML pages. Internet applications need to know about the HTML page encoding so they can process input data from an HTML form.</p>
<p>Instead of using different native encodings for the different locales, it is recommended that UTF-8 (Unicode encoding) is used for all page encodings. Using the UTF-8 encoding not only simplifies the coding for global applications, but it allows for multilingual content on a single page.</p>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BACDIBGD">Specifying the Page Encoding for HTML Pages</a></p>
</li>
<li>
<p><a href="#BACFCEJH">Specifying the Page Encoding in Java Servlets and JSP Pages</a></p>
</li>
</ul>
<a id="BACDIBGD"></a>
<div id="TDPJD258" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.3.1</span> Specifying the Page Encoding for HTML Pages</h3>
<p>There are two ways to specify the encoding of an HTML page, one is in the HTTP header, and the other is in the HTML page header.</p>
<p class="subhead2"><a id="TDPJD369"></a>Specifying the Encoding in the HTTP Header</p>
<p>Include the <code>Content-Type</code> HTTP header in the HTTP specification. It specifies the content type and character set as shown in <a href="#BACFIAHD">Example 9-4</a>.</p>
<div id="TDPJD370" class="example">
<p class="titleinexample"><a id="BACFIAHD"></a>Example 9-4 Specifying Page Encoding in the HTTP Specification</p>
<pre>Content-Type: text/html; charset=utf-8
</pre></div>
<!-- class="example" -->
<p>The <code>charset</code> parameter specifies the encoding for the HTML page. The possible values for the <code>charset</code> parameter are the IANA names for the character encodings that the browser supports.</p>
<p class="subhead2"><a id="TDPJD371"></a>Specifying the Encoding in the HTML Page Header</p>
<p>Use this method primarily for static HTML pages. Specify the character encoding in the HTML header as shown in <a href="#BACHGGBH">Example 9-5</a>.</p>
<div id="TDPJD372" class="example">
<p class="titleinexample"><a id="BACHGGBH"></a>Example 9-5 Specifying Page Encoding on an HTML Page</p>
<pre>&lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html;charset=utf-8&#34;&gt;
</pre></div>
<!-- class="example" -->
<p>The <code>charset</code> parameter specifies the encoding for the HTML page. As with the <code>Content-Type</code> HTTP Header, the possible values for the charset parameter are the IANA names for the character encodings that the browser supports.</p>
</div>
<!-- class="sect2" -->
<a id="BACFCEJH"></a>
<div id="TDPJD259" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.3.2</span> Specifying the Page Encoding in Java Servlets and JSP Pages</h3>
<p>You can specify the encoding of an HTML page in the <code>Content-Type</code> HTTP header in a JavaServer Pages (JSP) file using the <code>contentType</code> page directive. For example:</p>
<pre>&lt;%@ page contentType=&#34;text/html; charset=utf-8&#34; %&gt;
</pre>
<p>This is the <code>MIME</code> type and character encoding that the JSP file uses for the response it sends to the client. You can use any <code>MIME</code> type or IANA character set name that is valid for the JSP container. The default <code>MIME</code> type is <code>text/html</code>, and the default character set is ISO-8859-1. In the above example, the character set is set to UTF-8. The character set of the <code>contentType</code> page directive directs the JSP engine to encode the dynamic HTML page and set the HTTP <code>Content-Type</code> header with the specified character set.</p>
<p>For Java Servlets, you can call the <code>setContentType</code> method of the Servlet API to specify a page encoding in the HTTP header. The <code>doGet</code> function in <a href="#BACJEADC">Example 9-6</a> shows how you can call this method.</p>
<div id="TDPJD373" class="example">
<p class="titleinexample"><a id="BACJEADC"></a>Example 9-6 Specifying Page Encoding in Servlets Using setContentType</p>
<pre>public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException
{
 
// generate the MIME type and character set header
response.setContentType(&#34;text/html; charset=utf-8&#34;);

...

// generate the HTML page
Printwriter out = response.getWriter();
out.println(&#34;&lt;HTML&gt;&#34;);

...

out.println(&#34;&lt;/HTML&gt;&#34;);
}
</pre></div>
<!-- class="example" -->
<p>You should call the <code>setContentType</code> method before the <code>getWriter</code> method because the <code>getWriter</code> method initializes an output stream writer that uses the character set specified by the <code>setContentType</code> method call. Any HTML content written to the writer and eventually to a browser is encoded in the encoding specified by the <code>setContentType</code> call.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BACIIBCD"></a>
<div id="TDPJD260" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">9.4</span> Organizing the Content of HTML Pages for Translation</h2>
<p>Making the user interface available in the local language of the user is one of the fundamental tasks related to globalizing an application. Translatable sources for the content of an HTML page belong to the following categories:</p>
<ul>
<li>
<p>Text strings hard-coded in the application code</p>
</li>
<li>
<p>Static HTML files, images files, and template files such as CSS</p>
</li>
<li>
<p>Dynamic data stored in the database</p>
</li>
</ul>
<p>This section discusses externalizing translatable content in the following:</p>
<ul>
<li>
<p><a href="#BACEHFFC">Strings in Java Servlets and JSP Pages</a></p>
</li>
<li>
<p><a href="#BACGCJJE">Static Files</a></p>
</li>
<li>
<p><a href="#BACJIDFI">Data from the Database</a></p>
</li>
</ul>
<a id="BACEHFFC"></a>
<div id="TDPJD261" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.4.1</span> Strings in Java Servlets and JSP Pages</h3>
<p>You should externalize translatable strings within Java Servlets and JSP pages into Java resource bundles so that these resource bundles can be translated independent of the Java code. After translation, the resource bundles carry the same base class names as the English bundles, but with the Java locale name as the suffix. You should place the bundles in the same directory as the English resource bundles for the Java resource bundle look-up mechanism to function properly.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/ResourceBundle.html">http://docs.oracle.com/javase/7/docs/api/java/util/ResourceBundle.html</a></code></p>
</div>
<p>Because the user locale is not fixed in multilingual applications, they should call the <code>getBundle</code> method by explicitly specifying a Java locale object that corresponds to the user locale. The Java locale object is called <code>user_locale</code> in the following example:</p>
<pre>ResourceBundle rb = ResourceBundle.getBundle(&#34;resource&#34;, user_locale);
String helloStr = rb.getString(&#34;hello&#34;);
</pre>
<p>The above code will retrieve the localized version of the text string, <code>hello</code>, from the resource bundle corresponding to the desired locale of the user.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about creating resource bundles in Java, refer to <a href="#BACCGBAB">Localizing Text on JSP Pages in JDeveloper</a>.</div>
</div>
<!-- class="sect2" -->
<a id="BACGCJJE"></a>
<div id="TDPJD262" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.4.2</span> Static Files</h3>
<p>Static files such as HTMLs and GIFs are readily translatable. When these files are translated, they should be translated into the corresponding language with UTF-8 as the file encoding. To differentiate between the languages of the translated files, the static files of different languages can be staged in different directories or with different file names.</p>
</div>
<!-- class="sect2" -->
<a id="BACJIDFI"></a>
<div id="TDPJD263" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.4.3</span> Data from the Database</h3>
<p>Dynamic information such as product names and product descriptions are most likely stored in the database regardless of whether you use JSP pages or Java Servlets. In order to differentiate between various translations, the database schema holding this information should include a column to indicate the language of the information. To select the translated information, you must include the <code>WHERE</code> clause in your query to select the information in the desired language of the query.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BACDJIGA"></a>
<div id="TDPJD264" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">9.5</span> Presenting Data by User Locale Convention</h2>
<p>Data in the application needs to be presented in a way that conforms to user expectation, if not, the meaning of the data can sometimes be misinterpreted. For example, &#39;12/11/05&#39; implies &#39;11th December 2005&#39; in the United States, whereas in the United Kingdom it means &#39;12th November 2005&#39;. Similar confusion exists for number and monetary formats, for example, the period (.) is a decimal separator in the United States, whereas in Germany, it is used as a thousand separator.</p>
<p>Different languages have their own sorting rules, some languages are collated according to the letter sequence in the alphabet, some according to stroke count in the letter, and there are some languages which are ordered by the pronunciation of the words. Presenting data that is not sorted according to the linguistic sequence that your users are accustomed to can make searching for information difficult and time-consuming.</p>
<p>Depending on the application logic and the volume of data retrieved from the database, it may be more appropriate to format the data at the database level rather than at the application level. Oracle Database 12<span class="italic">c</span> Release 1 (12.1) offers many features that help you to refine the presentation of data when the user locale preference is known. The following sections include examples of locale-sensitive operations in SQL:</p>
<ul>
<li>
<p><a href="#BACHCCJD">Oracle Date Formats</a></p>
</li>
<li>
<p><a href="#BACJBCBB">Oracle Number Formats</a></p>
</li>
<li>
<p><a href="#BACBGGDE">Oracle Linguistic Sorts</a></p>
</li>
<li>
<p><a href="#BACFEBGD">Oracle Error Messages</a></p>
</li>
</ul>
<a id="BACHCCJD"></a>
<div id="TDPJD265" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.5.1</span> Oracle Date Formats</h3>
<p>There are three different date presentation formats in Oracle Database 12<span class="italic">c</span> Release 1 (12.1). These are standard, short, and long dates. <a href="#BACIGGEA">Example 9-7</a> illustrates the difference between the short data and long date formats for both United States and Germany.</p>
<div id="TDPJD374" class="example">
<p class="titleinexample"><a id="BACIGGEA"></a>Example 9-7 Difference Between Date Formats by Locale (United States and Germany)</p>
<pre>SQL&gt; ALTER SESSION SET NLS_TERRITORY=america NLS_LANGUAGE=american;
 
Session altered.
 
SQL&gt; SELECT employee_id EmpID,
  2  SUBSTR(first_name,1,1)||&#39;.&#39;||last_name &#34;EmpName&#34;,
  3  TO_CHAR(hire_date,&#39;DS&#39;) &#34;Hiredate&#34;,
  4  TO_CHAR(hire_date,&#39;DL&#39;) &#34;Long HireDate&#34;
  5  FROM employees
  6* WHERE employee_id &lt;105;
 
     EMPID EmpName                     Hiredate   Long HireDate
---------- --------------------------- ---------- -----------------------------
       100 S.King                      06/17/1987 Wednesday, June 17, 1987
       101 N.Kochhar                   09/21/1989 Thursday, September 21, 1989
       102 L.De Haan                   01/13/1993 Wednesday, January 13, 1993
       103 A.Hunold                    01/03/1990 Wednesday, January 3, 1990
       104 B.Ernst                     05/21/1991 Tuesday, May 21, 1991
 
 
SQL&gt; ALTER SESSION SET SET NLS_TERRITORY=germany NLS_LANGUAGE=german;
 
Session altered.
 
SQL&gt; SELECT employee_id EmpID,
  2  SUBSTR(first_name,1,1)||&#39;.&#39;||last_name &#34;EmpName&#34;,
  3  TO_CHAR(hire_date,&#39;DS&#39;) &#34;Hiredate&#34;,
  4  TO_CHAR(hire_date,&#39;DL&#39;) &#34;Long HireDate&#34;
  5  FROM employees
  6* WHERE employee_id &lt;105;
 
 
     EMPID EmpName                     Hiredate Long HireDate
---------- --------------------------- -------- ------------------------------
       100 S.King                      17.06.87 Mittwoch, 17. Juni 1987
       101 N.Kochhar                   21.09.89 Donnerstag, 21. September 1989
       102 L.De Haan                   13.01.93 Mittwoch, 13. Januar 1993
       103 A.Hunold                    03.01.90 Mittwoch, 3. Januar 1990
       104 B.Ernst                     21.05.91 Dienstag, 21. Mai 1991
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="BACJBCBB"></a>
<div id="TDPJD266" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.5.2</span> Oracle Number Formats</h3>
<p><a href="#BACJAHJH">Example 9-8</a> illustrates the differences in the decimal character and group separator between the United States and Germany.</p>
<div id="TDPJD375" class="example">
<p class="titleinexample"><a id="BACJAHJH"></a>Example 9-8 Difference Between Number Formats by Locale (United States and Germany)</p>
<pre>SQL&gt; ALTER SESSION SET SET NLS_TERRITORY=america;
 
Session altered.
 
SQL&gt; SELECT employee_id EmpID,
  2  SUBSTR(first_name,1,1)||&#39;.&#39;||last_name &#34;EmpName&#34;,
  3  TO_CHAR(salary, &#39;99G999D99&#39;) &#34;Salary&#34;
  4  FROM employees
  5* WHERE employee_id &lt;105
 
     EMPID EmpName                     Salary
---------- --------------------------- ----------
       100 S.King                       24,000.00
       101 N.Kochhar                    17,000.00
       102 L.De Haan                    17,000.00
       103 A.Hunold                      9,000.00
       104 B.Ernst                       6,000.00
 
SQL&gt; ALTER SESSION SET SET NLS_TERRITORY=germany;
 
Session altered.
 
SQL&gt; SELECT employee_id EmpID,
  2  SUBSTR(first_name,1,1)||&#39;.&#39;||last_name &#34;EmpName&#34;,
  3  TO_CHAR(salary, &#39;99G999D99&#39;) &#34;Salary&#34;
  4  FROM employees
  5* WHERE employee_id &lt;105
 
     EMPID EmpName                     Salary
---------- --------------------------- ----------
       100 S.King                       24.000,00
       101 N.Kochhar                    17.000,00
       102 L.De Haan                    17.000,00
       103 A.Hunold                      9.000,00
       104 B.Ernst                       6.000,00
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="BACBGGDE"></a>
<div id="TDPJD267" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.5.3</span> Oracle Linguistic Sorts</h3>
<p>Spain traditionally treats &#39;ch&#39;, &#39;ll&#39; as well as &#39;&ntilde;&#39; as letters of their own, ordered after c, l and n respectively. <a href="#BACCFGGJ">Example 9-9</a> illustrates the effect of using a Spanish sort against the employee names Chen and Chung.</p>
<div id="TDPJD376" class="example">
<p class="titleinexample"><a id="BACCFGGJ"></a>Example 9-9 Variations in Linguistic Sorting (Binary and Spanish)</p>
<pre>SQL&gt; ALTER SESSION SET NLS_SORT=binary;
 
Session altered.
 
SQL&gt; SELECT employee_id EmpID,
  2         last_name &#34;Last Name&#34;
  3  FROM employees
  4  WHERE last_name LIKE &#39;C%&#39;
  5* ORDER BY last_name
 
     EMPID Last Name
---------- -------------------------
       187 Cabrio
       148 Cambrault
       154 Cambrault
       110 Chen
       188 Chung
       119 Colmenares
 
6 rows selected.
 
SQL&gt; ALTER SESSION SET NLS_SORT=spanish_m;
 
Session altered.
 
SQL&gt; SELECT employee_id EmpID,
  2         last_name &#34;Last Name&#34;
  3  FROM employees
  4  WHERE last_name LIKE &#39;C%&#39;
  5* ORDER BY last_name
 
     EMPID Last Name
---------- -------------------------
       187 Cabrio
       148 Cambrault
       154 Cambrault
       119 Colmenares
       110 Chen
       188 Chung
 
6 rows selected.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="BACFEBGD"></a>
<div id="TDPJD268" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.5.4</span> Oracle Error Messages</h3>
<p>The <code>NLS_LANGUAGE</code> parameter also controls the language of the database error messages that are returned from the database. Setting this parameter prior to submitting your SQL statement will ensure that local language-specific database error messages will be returned to the application.</p>
<p>Consider the following server message:</p>
<pre>ORA-00942: table or view does not exist
</pre>
<p>When the <code>NLS_LANGUAGE</code> parameter is set to French, the server message appears as follows:</p>
<pre>ORA-00942: table ou vue inexistante
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;Working in a Global Environment&#34; chapter in the <a class="olink ADMQS" href="../ADMQS/toc.htm"><span class="italic">Oracle Database 2 Day DBA</span></a> for more information about globalization support features within Oracle Database 12<span class="italic">c</span> Release 1 (12.1).</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BACCGBAB"></a>
<div id="TDPJD269" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">9.6</span> Localizing Text on JSP Pages in JDeveloper</h2>
<p>Your Java application can make use of resource bundles, to provide different localized versions of the text used on your JSP pages.</p>
<p>Resource bundles contain locale-specific objects. When your program needs a locale-specific resource, such as some text to display on a page, your program can load it from the resource bundle that is appropriate for the current user locale. In this way, you can write program code that is largely independent of the user locale isolating the actual text in resource bundles.</p>
<p>In outline, the resource bundle technology has the following features:</p>
<ul>
<li>
<p>Resource bundles belong to families whose members share a common base name, but whose names also have additional components that identify their locales. For example, the base name of a family of resource bundles might be <code>MyResources</code>. A locale-specific version for German, for example, would be called <code>MyResources_de</code>.</p>
</li>
<li>
<p>Each resource bundle in a family contains the same items, but the items have been translated for the locale represented by that resource bundle. For example, a <code>String</code> used on a button might in <code>MyResources</code> be defined as <code>Cancel</code>, but in <code>MyResources_de</code> as <code>Abbrechen</code>.</p>
</li>
<li>
<p>You can make specializations for different resources for different countries, for example, for the German language (<code>de</code>) in Switzerland (<code>CH</code>).</p>
</li>
</ul>
<p>To use resource bundles in your application, you must do the following:</p>
<ol>
<li>
<p>Create the resource bundles.</p>
</li>
<li>
<p>In pages that have visual components, identify the resource bundles you will be using on the page.</p>
</li>
<li>
<p>For each item of text you want to display on your pages, retrieve the text from the resource bundle instead of using hard-coded text.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/ResourceBundle.html">http://docs.oracle.com/javase/7/docs/api/java/util/ResourceBundle.html</a></code></p>
</div>
<p>In the sample application, resource bundles can be used in the following places:</p>
<ul>
<li>
<p>Headings and labels on JSP pages. In this case, rather than entering text directly on the pages, you can use a scriptlet to find the text.</p>
</li>
<li>
<p>Values for buttons and other controls. In this case, set the <code>value</code> property of the button to an expression that retrieves the text from the resource bundle</p>
</li>
</ul>
<p>This section covers the following tasks:</p>
<ul>
<li>
<p><a href="#BACFJFEH">Creating a Resource Bundle</a></p>
</li>
<li>
<p><a href="#BACFBIGA">Using Resource Bundle Text on JSP Pages</a></p>
</li>
</ul>
<a id="BACFJFEH"></a>
<div id="TDPJD270" class="sect2">
<h3 class="sect2"><span class="secnum">9.6.1</span> Creating a Resource Bundle</h3>
<p>To create a default resource bundle:</p>
<ol>
<li>
<p>Create a new Java class called <code>MyResources</code>, that extends class <code>java.util.ListResourceBundle</code>.</p>
</li>
<li>
<p>Modify the <code>getContents</code> method in the following way:</p>
<pre>  public Object[][] getContents() {
    return contents;
  }
</pre></li>
<li>
<p>Declare an object array like the following:</p>
<pre>  static final Object[][] contents = {
  };
}
</pre></li>
<li>
<p>Add an entry for each item of text you need on your pages, giving a key and the text for that key. For example, in the following example, the comments indicate the strings that must be translated into other languages:</p>
<pre>  static final Object[][] contents = {
    // LOCALIZE THIS
    {&#34;CompanyName&#34;, &#34;AnyCo Corporation&#34;},
    {&#34;SiteName&#34;, &#34;HR Application&#34;},
    {&#34;FilterButton&#34;, &#34;Filter&#34;},
    {&#34;UpdateButton&#34;, &#34;Update&#34;},
    // END OF MATERIAL TO LOCALIZE
  };
</pre>
<p>The complete resource bundle class should look similar to that shown in <a href="#BACEIDFF">Example 9-10</a>.</p>
<div id="TDPJD377" class="example">
<p class="titleinexample"><a id="BACEIDFF"></a>Example 9-10 Creating a Resource Bundle Class</p>
<pre>public class MyResources extends ListResourceBundle {
    public MyResources() {
        super();
    }
 
  protected Object[][] getContents() {
     return contents;
   }
   static final Object[][] contents = {
     // LOCALIZE THIS
     {&#34;CompanyName&#34;, &#34;AnyCo Corporation&#34;},
     {&#34;SiteName&#34;, &#34;HR Application&#34;},
     {&#34;FilterButton&#34;, &#34;Filter&#34;},
     {&#34;UpdateButton&#34;, &#34;Update this Record&#34;},
     // END OF MATERIAL TO LOCALIZE
   };
}
</pre></div>
<!-- class="example" -->
<p>To globalize your application, you must create the locale-specific versions of the resource bundle for the different locales you are supporting, containing text for the items in each language.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BACFBIGA"></a>
<div id="TDPJD271" class="sect2">
<h3 class="sect2"><span class="secnum">9.6.2</span> Using Resource Bundle Text on JSP Pages</h3>
<p>To use the text defined in a resource bundle on your JSP pages:</p>
<ol>
<li>
<p>Open the JSP page you want to work on in the Visual Editor, such as <code>edit.jsp</code>.</p>
</li>
<li>
<p>Add a <span class="bold">jsp:usebean</span> tag before the first heading. Enter <code>myResources</code> as the <span class="bold">ID</span>, and <code>hr.MyResources</code> as the <span class="bold">Class</span>. Set the <span class="bold">Scope</span> to <code>session</code>, and click <span class="bold">OK</span>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you do not compile the <code>MyResources.java</code> file till this point, then you will get an error symbol on the bean because the <code>MyResources.class</code> is not created till now. Open the <code>MyResources.java</code> file and compile it.</div>
</li>
<li>
<p>Drag a <span class="bold">jsp:scriptlet</span> to the page, where you want the resource bundle text to be displayed, for example immediately next to the first heading.</p>
<p>In the Insert Scriptlet dialog, enter the script for retrieving text from the resource bundle:</p>
<pre>  out.println(myResources.getString(&#34;CompanyName&#34;) + &#34;: &#34; + 
  myResources.getString(&#34;SiteName&#34;));
</pre></li>
<li>
<p>Remove the original heading of the page, that is, <code>AnyCo Corporation: HR Application</code>.</p>
</li>
<li>
<p>If you select the <span class="bold">Source</span> tab below the Visual Editor, you should see code for the page similar to the following:</p>
<pre> &lt;jsp:useBean id=&#34;myResources&#34; class=&#34;hr.MyResources&#34; scope=&#34;session&#34;/&gt;    
     &lt;h2 align=&#34;center&#34;&gt;
     &lt;%  out.println(myResources.getString(&#34;CompanyName&#34;) + &#34;: &#34; + 
         myResources.getString(&#34;SiteName&#34;));%&gt;
     &lt;/h2&gt;
</pre></li>
<li>
<p>To use resource bundle text as the label for a button, double-click the button in the Visual Editor. In the button properties dialog, for the <span class="bold">Value</span> parameter of the button, enter the following script:</p>
<pre>&lt;% out.println(myResources.getString(&#34;UpdateButton&#34;));%&gt;
</pre></li>
<li>
<p>If you view the Source code for the page, you will see code similar to the following:</p>
<pre>&lt;input type=&#34;submit&#34; 
  value=&lt;% out.println(myResources.getString(&#34;UpdateButton&#34;));%&gt; /&gt;
</pre></li>
</ol>
<p>If you now run your application, you will see the text you defined in your resource bundle displayed on the page.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5878">
<tr>
<td class="cellalignment5885">
<table class="cellalignment5883">
<tr>
<td class="cellalignment5882"><a href="ucpex.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5882"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2007, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5887">
<table class="cellalignment5881">
<tr>
<td class="cellalignment5882"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5882"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5882"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5882"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5882"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5882"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>