<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-70973"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Application%20Continuity%20for%20Java"></a><title>Application Continuity for Java</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="This book describes how to use Oracle JDBC drivers to develop powerful Java database applications."/>
<meta name="dcterms.created" content="2014-06-30T1:22:37Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database JDBC Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49300-05"/>
<meta name="dcterms.isVersionOf" content="JJDBC"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="transactionguard.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ocitaf.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49300-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">40/55</span> <!-- End Header -->
<script>
<!-- // <![CDATA[
window.name='appcontnew'
// ]]> -->
</script> <script>
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><h1>Footnote ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="JJDBC29059" class="chapter"><a id="CJADIIJJ"></a>
<h1 class="chapter"><span class="secnum">27</span> <a id="sthref868"></a><a id="sthref869"></a>Application Continuity for Java</h1>
<p>The outages of the underlying software, hardware, communications, and storage layers can cause application execution to fail. In the worst cases, the middle-tier servers may need to be restarted to deal with the logon storms<a id="sthref870" href="#sthref870" onclick="footdisplay(1,&#34;\&#34;A Logon storm is a sudden increase in the number of client connection requests.\&#34;&#34;)"><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a>. To overcome such problems, Oracle Database 12<span class="italic">c</span> Release 1 (12.1) introduces the Application Continuity feature that masks database outages to the application and end users are not exposed to such outages.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Application Continuity is a feature of the Oracle JDBC Thin driver and is not supported by JDBC OCI driver.</div>
<p><a id="sthref871"></a><a id="sthref872"></a>Application Continuity provides a general purpose, application-independent solution that enables recovery of work from an application perspective, after the occurrence of a planned or unplanned outage. The outage can be related to system, communication, or hardware following a repair, a configuration change, or a patch application.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADFNS1058" href="../ADFNS/adfns_app_continuity.htm#ADFNS1058"><span class="italic">Oracle Database Development Guide</span></a> for more information about Application Continuity</p>
</li>
<li>
<p><a class="olink ADFNS8000" href="../ADFNS/adfns_trans_idemp_guard.htm#ADFNS8000"><span class="italic">Oracle Database Development Guide</span></a> for more information about Transaction Guard</p>
</li>
<li>
<p><a href="transactionguard.htm#CIHCDEHC">&#34;Transaction Guard for Java&#34;</a></p>
</li>
</ul>
</div>
<p>This chapter discusses the JDBC aspect of Application Continuity in the following sections:</p>
<ul>
<li>
<p><a href="#CJAJDJEH">Configuring Oracle JDBC for Application Continuity for Java</a></p>
</li>
<li>
<p><a href="#CJAGEGCE">Configuring Oracle Database for Application Continuity for Java</a></p>
</li>
<li>
<p><a href="#CJAIBHEB">Identifying Request Boundaries in Application Continuity for Java</a></p>
</li>
<li>
<p><a href="#CJAHJDAF">Registering a Connection Initialization Callback in Application Continuity for Java (optional)</a></p>
</li>
<li>
<p><a href="#CJAEEHEG">Delaying the Reconnection in Application Continuity for Java</a></p>
</li>
<li>
<p><a href="#CJADDHAA">Retaining Mutable Values in Application Continuity for Java</a></p>
</li>
<li>
<p><a href="#CJAJBGCA">Disabling Replay in Application Continuity for Java</a></p>
</li>
</ul>
<a id="CJAJDJEH"></a>
<div id="JJDBC29073" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref873"></a>Configuring Oracle JDBC for Application Continuity for Java</h2>
<p>You must use either the <code><a id="sthref874"></a>oracle.jdbc.replay.OracleDataSourceImpl</code> or <code>oracle.jdbc.replay.<a id="sthref875"></a>OracleConnectionPoolDataSourceImpl</code> data source to obtain JDBC connections. They are new Oracle JDBC data sources, and work similarly to the existing non-XA data sources, such as <code>oracle.jdbc.pool.OracleDataSource</code>. You can use both in a standalone manner, or configure them as connection factories for a connection pool, such as Universal Connection Pool (UCP), or Oracle WebLogic Server connection pool.</p>
<p>The following code snippet illustrates their usage in a standalone JDBC application:</p>
<pre>import java.sql.Connection;
import javax.sql.PooledConnection;
import oracle.jdbc.OracleConnection;
import oracle.jdbc.replay.OracleDataSourceFactory;
import oracle.jdbc.replay.OracleDataSource;
import oracle.jdbc.replay.OracleConnectionPoolDataSource;
 
...
{
......
OracleDataSource rds = OracleDataSourceFactory.getOracleDataSource();
rds.setUser(user);
rds.setPassword(passwd);
rds.setURL(url);
......  // Other data source configuration like callback, timeouts, etc.
 
Connection conn = rds.getConnection();
((OracleConnection) conn).beginRequest();  // Explicit request begin
......  // JDBC calls protected by Application Continuity
((OracleConnection) conn).endRequest();  // Explicit request end
conn.close();
 
OracleConnectionPoolDataSource rcpds = OracleDataSourceFactory.getOracleConnectionPoolDataSource();
rcpds.setUser(user);
rcpds.setPassword(passwd);
rcpds.setURL(url);
......  // other data source configuration like callback, timeouts, and so on
 
PooledConnection pc = rcpds.getPooledConnection();
Connection conn2 = pc.getConnection();  // Implicit request begin
......  // JDBC calls protected by Application Continuity
conn2.close();  // Implicit request end
......
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="urls.htm#BEIDBFDF">&#34;Data Sources and URLs&#34;</a> for more information about Oracle JDBC data sources</div>
<p>You must remember the following points while using the connection URL:</p>
<ul>
<li>
<p>Always use the thin driver in the connection URL.</p>
</li>
<li>
<p>Always connect to a service. Never use <code>instance_name</code> or SID because these do not direct to known good instances and SID is deprecated.</p>
</li>
<li>
<p>If the addresses in the <code>ADDRESS_LIST</code> at the client does not match the <code>REMOTE_LISTENER</code> setting for the database, then it does not connect showing <code>services cannot be found</code>. So, the addresses in the <code>ADDRESS_LIST</code> at the client <span class="italic">must</span> match the <code>REMOTE_LISTENER</code> setting for the database:</p>
<ul>
<li>
<p>If <code>REMOTE_LISTENER</code> is set to the <code>SCAN_VIP</code>, then the <code>ADDRESS_LIST</code> uses <code>SCAN_VIP</code></p>
</li>
<li>
<p>If <code>REMOTE_LISTENER</code> is set to the host VIPs, then the <code>ADDRESS_LIST</code> uses the same host VIPs</p>
</li>
<li>
<p>If <code>REMOTE_LISTENER</code> is set to both <code>SCAN_VIP</code> and host VIPs, then the <code>ADDRESS_LIST</code> uses <code>SCAN_VIP</code> and the same host VIPs</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For Oracle clients prior to release 11.2, the <code>ADDRESS_LIST</code> must be upgraded to use SCAN, which means expanding the <code>ADDRESS_LIST</code> to three <code>ADDRESS</code> entries corresponding to the three SCAN IP addresses.
<p>If such clients connect to a database that is upgraded from an earlier release through Database Upgrade Assistant, then you must retain the <code>ADDRESS_LIST</code> of these clients set to the HOST VIPs. However, if <code>REMOTE_LISTENER</code> is changed to <code>ONLY SCAN</code>, or the clients are moved to a newly installed Oracle Database 12<span class="italic">c</span> Release 1, where <code>REMOTE_LISTENER</code> is <code>ONLY SCAN</code>, then they do not get a complete service map, and may not always be able to connect.</p>
</div>
</li>
</ul>
</li>
<li>
<p>Set <code>RETRY_COUNT</code>, <code>CONNECT_TIMEOUT</code>, and <code>TRANSPORT_CONNECT_TIMEOUT</code> parameters in the connection string. This is a general recommendation for configuring the JDBC thin driver connections, starting from Oracle Database Release 11.2.0.2. These settings improve acquiring new connections at runtime, at replay, and during work drains for planned outages.</p>
<p>The <code>CONNECT_TIMEOUT</code> parameter is equivalent to the <code>SQLNET.OUTBOUND_CONNECT_TIMEOUT</code> parameter in the <code>sqlnet.ora</code> file and applies to the full connection. The <code>TRANSPORT_CONNECT_TIMEOUT</code> parameter applies as per the <code>ADDRESS</code> parameter. If the service is not registered for a failover or restart, then retrying is important when you use SCAN. For example, for using remote listeners pointing to SCAN addresses, you should use the following settings:</p>
<pre>jdbc:oracle:thin:@(DESCRIPTION = 
 (TRANSPORT_CONNECT_TIMEOUT=3)
 (RETRY_COUNT=20)(FAILOVER=ON)
 (ADDRESS_LIST =(ADDRESS=(PROTOCOL=tcp)
  (HOST=CLOUD-SCANVIP.example.com)(PORT=5221)) 
 (CONNECT_DATA=(SERVICE_NAME=orcl))) 
 
REMOTE_LISTENERS=CLOUD-SCANVIP.example.com:5221 
</pre>
<p>Similarly, for using remote listeners pointing to VIPs at the database, you should use the following settings:</p>
<pre>jdbc:oracle:thin:@(DESCRIPTION = 
(TRANSPORT_CONNECT_TIMEOUT=3)
(CONNECT_TIMEOUT=60)(RETRY_COUNT=20)(FAILOVER=ON)
 (ADDRESS_LIST=
 (ADDRESS=(PROTOCOL=tcp)(HOST=CLOUD-VIP1.example.com)(PORT=5221) )
(ADDRESS=(PROTOCOL=tcp)(HOST=CLOUD-VIP2.example.com)(PORT=5221) )
 (ADDRESS=(PROTOCOL=tcp)(HOST=CLOUD-VIP3.example.com)(PORT=5221) )) 
(CONNECT_DATA=(SERVICE_NAME=orcl)))

REMOTE_LISTENERS=CLOUD-VIP1.example.com:5221 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink NETRF007" href="../NETRF/tnsnames.htm#NETRF007"><span class="italic">Oracle Database Net Services Reference</span></a> for more information about local naming parameters</p>
</li>
<li>
<p><a class="olink RACAD7273" href="../RACAD/GUID-504A615B-C63C-43C4-A481-520DEC015EF1.htm#RACAD7273"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CJAGEGCE"></a>
<div id="JJDBC29074" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref876"></a>Configuring Oracle Database for Application Continuity for Java</h2>
<p>You must have the following configuration for Oracle Database to use Application Continuity for Java:</p>
<ul>
<li>
<p>Use Oracle Database 12<span class="italic">c</span> Release 1 (12.1)</p>
</li>
<li>
<p>If you are using Oracle Real Application Clusters (Oracle RAC) or Oracle Data Guard, then ensure that FAN is configured with Oracle Notification System (ONS) to communicate with Oracle WebLogic Server or the Universal Connection Pool (UCP)</p>
</li>
<li>
<p>Use an application service for all database work. To create the service you must:</p>
<ul>
<li>
<p>Run the <code>SRVCTL</code> command if you are using Oracle RAC</p>
</li>
<li>
<p>Use the <code>DBMS_SERVICE</code> package if you are not using Oracle RAC</p>
</li>
</ul>
</li>
<li>
<p>Set the required properties on the service for replay and load balancing. For example, set:</p>
<ul>
<li>
<p><code>FAILOVER_TYPE = TRANSACTION</code> for using Application Continuity</p>
</li>
<li>
<p><code>COMMIT_OUTCOME</code> = <code>TRUE</code> for enabling Transaction Guard</p>
</li>
<li>
<p><code>REPLAY_INITIATION_TIMEOUT = 900</code> for setting the duration in seconds for which replay will occur</p>
</li>
<li>
<p><code>FAILOVER_RETRIES = 30</code> for specifying the number of connection retries for each replay</p>
</li>
<li>
<p><code>FAILOVER_DELAY = 10</code> for specifying the delay in seconds between connection retries</p>
</li>
<li>
<p><code>GOAL = SERVICE_TIME</code>, if you are using Oracle RAC, then this is a recommended setting</p>
</li>
<li>
<p><code>CLB_GOAL = LONG</code>, if you are using Oracle RAC, then this is a recommended setting</p>
</li>
</ul>
</li>
<li>
<p>Do not use the database service, that is, the default service corresponding to the <code>DB_NAME</code> or <code>DB_UNIQUE_NAME</code>. This service is reserved for Oracle Enterprise Manager and for DBAs. Oracle does not recommend the use of the database service for high availability because this service cannot be:</p>
<ul>
<li>
<p>Enabled and disabled</p>
</li>
<li>
<p>Relocated on Oracle RAC</p>
</li>
<li>
<p>Switched over to Oracle Data Guard</p>
</li>
</ul>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS314" href="../ADFNS/adfns_app_continuity.htm#ADFNS314"><span class="italic">Oracle Database Development Guide</span></a> for more information on the operation and usage of Application Continuity.</div>
</div>
<!-- class="sect1" -->
<a id="CJAIBHEB"></a>
<div id="JJDBC29062" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref877"></a>Identifying Request Boundaries in Application Continuity for Java</h2>
<p>A Request is a unit of work on a physical connection to Oracle Database that is protected by Application Continuity. Request demarcation varies with specific use-case scenarios. A request begins when a connection is borrowed from the Universal Connection Pool (UCP) or WebLogic Server connection pool, and ends when this connection is returned to the connection pool.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot borrow a connection from the Database Resident Connection Pool (DRCP) because DRCP does not work with Application Continuity. Refer to <a href="drcp.htm#CHDBGDAF">Chapter 23, &#34;Database Resident Connection Pooling&#34;</a> for more information about DRCP.</div>
<p>The JDBC driver provides explicit request boundary declaration APIs <code><a id="sthref878"></a>beginRequest</code> and <code><a id="sthref879"></a>endRequest</code> in the <code>oracle.jdbc.OracleConnection</code> interface. These APIs enable applications, frameworks, and connection pools to indicate to the JDBC Replay Driver about demarcation points, where it is safe to release the call history, and to enable replay if it had been disabled by a prior request. At the end of the request, the JDBC Replay Driver purges the recorded history on the connection, where the API is called. This helps to further conserve memory consumption for applications that use the same connections for an extended period of time without returning them to the pool.</p>
<p>You do not need to make any changes to your application for identifying request boundaries, if the application uses connections from these Oracle connection pools, or from the <code>oracle.jdbc.replay.OracleConnectionPoolDataSourceImpl</code> data source. However, for the connection pool to work, the application must get connections when needed, and release connections when not in use. This scales better and provides request boundaries transparently.</p>
<p>Applications that do not borrow and return connections from the Oracle connection pools should explicitly mark request boundaries. For example, if your application is using custom JDBC pools, then the <code>beginRequest</code> method should be called at check-out and the <code>endRequest</code> method should be called at check-in. These methods can also be used for standalone JDBC applications without a connection pool.</p>
<p>The APIs have no impact on the applications other than improving resource consumption, recovery, and load balancing performance. These APIs do not involve altering a connection state by calling any JDBC method, SQL, or PL/SQL. An error is returned if an attempt is made to begin or end a request while a local transaction is open.</p>
</div>
<!-- class="sect1" -->
<a id="CJAHJDAF"></a>
<div id="JJDBC29063" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref880"></a>Registering a Connection Initialization Callback in Application Continuity for Java (optional)</h2>
<p>Non-transactional session state (NTSS) is state of a database session that exists outside database transactions and is not protected by recovery. For applications that use stateful requests, the non-transactional state is re-established as the rebuilt session.</p>
<p>For applications that set state only at the beginning of a request, or for stateful applications that gain performance benefits from using connections with a preset state, one among the following callback options are provided:</p>
<ul>
<li>
<p><a href="#CJAGHFCB">No Callback</a></p>
</li>
<li>
<p><a href="#CJADAGIB">Connection Labeling</a></p>
</li>
<li>
<p><a href="#CJAGDEEA">Connection Initialization Callback</a></p>
</li>
</ul>
<a id="CJAGHFCB"></a>
<div id="JJDBC29064" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">No Callback</h3>
<p>In this scenario, the application builds up its own state during each request.</p>
</div>
<!-- class="sect2" -->
<a id="CJADAGIB"></a>
<div id="JJDBC29065" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Connection Labeling</h3>
<p>This scenario is applicable only to Universal Connection Pool (UCP) and Oracle WebLogic server. The application can be modified to take advantage of the preset state on connections. Connection Labeling APIs determine how well a connection matches, and use a callback to populate the gap when a connection is borrowed. All applications cannot use Connection Labeling because it requires re-coding to some extent.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JJUCP" href="../JJUCP/toc.htm"><span class="italic">Oracle Universal Connection Pool for JDBC Developer&#39;s Guide</span></a></div>
</div>
<!-- class="sect2" -->
<a id="CJAGDEEA"></a>
<div id="JJDBC29066" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Connection Initialization Callback</h3>
<p>In this scenario, the replay driver uses an application callback to set the initial state of the session during runtime and replay. The JDBC replay driver provides an optional connection initialization callback interface as well as methods for registering and unregistering such callbacks.</p>
<p>When registered, the initialization callback is executed at each successful reconnection following a recoverable error. An application is responsible for ensuring that the initialization actions are the same as that on the original connection before failover. If the callback invocation fails, then replay is disabled on that connection.</p>
<p>This section discusses initialization callbacks in the following sections:</p>
<ul>
<li>
<p><a href="#CJAHEBBH">Creating an Initialization Callback</a></p>
</li>
<li>
<p><a href="#CJADGEAA">Registering an Initialization Callback</a></p>
</li>
<li>
<p><a href="#CJAJHHJF">Removing or Unregistering an Initialization Callback</a></p>
</li>
</ul>
<a id="CJAHEBBH"></a>
<div id="JJDBC29119" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Creating an Initialization Callback</h4>
<p>To create a JDBC connection initialization callback, an application implements the <code>oracle.jdbc.replay.ConnectionInitializationCallback</code> interface. One callback is allowed for every instance of the <code>oracle.jdbc.replay.OracleDataSource</code> interface.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This callback is only invoked during failover, after a successful reconnection.</div>
<p class="subhead2"><a id="JJDBC29067"></a>Example</p>
<p>The following example demonstrates a simple initialization callback implementation:</p>
<pre>import oracle.jdbc.replay.ConnectionInitializationCallback;
class MyConnectionInitializationCallback implements ConnectionInitializationCallback
{
    public MyConnectionInitializationCallback()  
    {
        ...
    }
    public void initialize(java.sql.Connection connection) throws SQLException
    {
        // Reset the state for the connection, if necessary (like ALTER SESSION)
        ...
    }
 }
</pre></div>
<!-- class="sect3" -->
<a id="CJADGEAA"></a>
<div id="JJDBC29068" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Registering an Initialization Callback</h4>
<p>The JDBC Replay Driver provides the <code><a id="sthref881"></a>registerConnectionInitializationCallback(ConnectionInitializationCallback cbk)</code> method in the <code>oracle.jdbc.replay.OracleDataSource</code> interface for registering a connection initialization callback. One callback is allowed for every instance of the <code>OracleDataSource</code> interface.</p>
</div>
<!-- class="sect3" -->
<a id="CJAJHHJF"></a>
<div id="JJDBC29069" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Removing or Unregistering an Initialization Callback</h4>
<p>The JDBC Replay Driver provides the <a id="sthref882"></a><code>unregisterConnectionInitializationCallback(ConnectionInitializationCallback cbk)</code> method in the <code>oracle.jdbc.replay.OracleDataSource</code> interface for unregistering a connection initialization callback.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CJAEEHEG"></a>
<div id="JJDBC29075" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref883"></a>Delaying the Reconnection in Application Continuity for Java</h2>
<p>By default, when JDBC Replay Driver initiates a failover, the driver attempts to recover the in-flight work at an instance where the service is available. For doing this, the driver must first reestablish a good connection to a working instance. This reconnection can take some time if the database or the instance needs to be restarted before the service is relocated and published. So, the failover should be delayed until the service is available from another instance or database.</p>
<p>You need to use the <code><a id="sthref884"></a>FAILOVER_RETRIES</code> and <code><a id="sthref885"></a>FAILOVER_DELAY</code> parameters to manage reconnecting. These parameters can work well in conjunction with a planned outage, for example, an outage that may make a service unavailable for several minutes. While setting the <code>FAILOVER_DELAY</code> and <code>FAILOVER_RETRIES</code> parameters, check the value of the <code><a id="sthref886"></a>REPLAY_INITIAITION_TIMEOUT</code> parameter first. The default value for this parameter is 900 seconds. A high value for the <code>FAILOVER_DELAY</code> parameter can cause replay to be canceled.</p>
<div class="inftblhruleinformal">
<table class="cellalignment2247" summary="Parameters for delaying failover">
<thead>
<tr class="cellalignment2238">
<th class="cellalignment2245" id="r1c1-t11">Parameter Name</th>
<th class="cellalignment2245" id="r1c2-t11">Possible Value</th>
<th class="cellalignment2245" id="r1c3-t11">Default Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r2c1-t11" headers="r1c1-t11"><code>FAILOVER_RETRIES</code></td>
<td class="cellalignment2246" headers="r2c1-t11 r1c2-t11">Positive integer zero or above</td>
<td class="cellalignment2246" headers="r2c1-t11 r1c3-t11">30</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r3c1-t11" headers="r1c1-t11"><code>FAILOVER_DELAY</code></td>
<td class="cellalignment2246" headers="r3c1-t11 r1c2-t11">Time in seconds</td>
<td class="cellalignment2246" headers="r3c1-t11 r1c3-t11">10</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<div id="JJDBC29076" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref887"></a>
<h3 class="sect2">Examples</h3>
<p>This section provides configuration examples for service creation and modification in the following subsections:</p>
<ul>
<li>
<p><a href="#CJAJGEJJ">Creating Services on Oracle RAC</a></p>
</li>
<li>
<p><a href="#CJADADFA">Modifying Services on Single-Instance Databases</a></p>
</li>
</ul>
<a id="CJAJGEJJ"></a>
<div id="JJDBC29077" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Creating Services on Oracle RAC</h4>
<p>If you are using Oracle RAC or Oracle RAC One, then use the <code>SRVCTL</code> command to create and modify services in the following way:</p>
<ul>
<li>
<p><a href="#CJAHBFAD">For Policy-Managed Environments</a></p>
</li>
<li>
<p><a href="#CJAGAIEC">For Administrator-Managed Environments</a></p>
</li>
</ul>
<p class="subhead2"><a id="CJAHBFAD"></a><a id="JJDBC29078"></a>For Policy-Managed Environments</p>
<pre>srvctl add service -d codedb -s GOLD -g Srvpool -j SHORT -B SERVICE_TIME &ndash;z 30 &ndash;w 10 -commit_outcome
 TRUE -e TRANSACTION -replay_init_time 1800 -retention 86400 -notification TRUE
</pre>
<p class="subhead2"><a id="CJAGAIEC"></a><a id="JJDBC29079"></a>For Administrator-Managed Environments</p>
<pre>srvctl add service -d codedb -s GOLD -r serv1 -a serv2  -j SHORT -B SERVICE_TIME &ndash;z 30 &ndash;w 10 -commit_outcome
 TRUE -e TRANSACTION -replay_init_time 1800 -retention 86400 -notification TRUE
</pre></div>
<!-- class="sect3" -->
<a id="CJADADFA"></a>
<div id="JJDBC29080" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Modifying Services on Single-Instance Databases</h4>
<p>If you are using a single-instance database, then use the <code>DBMS_SERVICE</code> package to modify services in the following way:</p>
<pre>declare
params dbms_service.svc_parameter_array;
begin
params(&#39;FAILOVER_TYPE&#39;):=&#39;TRANSACTION&#39;;
params(&#39;REPLAY_INITIATION_TIMEOUT&#39;):=1800;
params(&#39;RETENTION_TIMEOUT&#39;):=604800;
params(&#39;FAILOVER_DELAY&#39;):=10;
params(&#39;FAILOVER_RETRIES&#39;):=30;
params(&#39;commit_outcome&#39;):=&#39;true&#39;;
params(&#39;aq_ha_notifications&#39;):=&#39;true&#39;;
dbms_service.modify_service(&#39;[your service]&#39;,params);
end;
/
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CJADDHAA"></a>
<div id="JJDBC29081" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref888"></a>Retaining Mutable Values in Application Continuity for Java</h2>
<p>A mutable object is a variable, function return value, or other structure that returns a different value each time that it is called. For example, <code>Sequence.NextVal</code>, <code>SYSDATE</code>, <code>SYSTIMESTAMP</code>, and <code>SYS_GUID</code>. To retain the function results for named functions at replay, the DBA must grant <code>KEEP</code> privileges to the user who invokes the function. This security restriction is imposed to ensure that it is valid for replay to save and restore function results for code that is not owned by that user.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS1203" href="../ADFNS/adfns_app_continuity.htm#ADFNS1203"><span class="italic">Oracle Database Development Guide</span></a></div>
<div id="JJDBC29082" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref889"></a>
<h3 class="sect2">Grant and Revoke Interface</h3>
<p>You can work with mutables values by using the standard <code>GRANT</code> and <code>REVOKE</code> interfaces in the following way:</p>
<ul>
<li>
<p><a href="#CJAFJIBB">Dates and SYS_GUID Syntax</a></p>
</li>
<li>
<p><a href="#CJAFEIFE">Sequence Syntax</a></p>
</li>
<li>
<p><a href="#CJAFDEAD">GRANT ALL Statement</a></p>
</li>
<li>
<p><a href="#CJAHFADJ">Rules for Grants on Mutable Values</a></p>
</li>
</ul>
<a id="CJAFJIBB"></a>
<div id="JJDBC29083" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Dates and SYS_GUID Syntax</h4>
<p>The <code>DATE_TIME</code> and <code>SYS_GUID</code> syntax is as follows:</p>
<pre>GRANT [KEEP DATE_TIME | KEEP SYS_GUID].. [to  USER]
REVOKE [KEEP DATE_TIME | KEEP SYS_GUID] &hellip; [from USER]
</pre>
<p>For example, for EBS standard usage with original dates</p>
<pre>Grant KEEP DATE_TIME,  KEEP SYS_GUID  to [custom user];
Grant KEEP DATE_TIME,  KEEP SYS_GUID  to [apps user];
</pre></div>
<!-- class="sect3" -->
<a id="CJAFEIFE"></a>
<div id="JJDBC29084" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Sequence Syntax</h4>
<p>The Sequence syntax can be of the following types:</p>
<ul>
<li>
<p><a href="#CJAIACDH">Owned Sequence Syntax</a></p>
</li>
<li>
<p><a href="#CJAFAGFC">Others Sequence Syntax</a></p>
</li>
</ul>
<p class="subhead2"><a id="CJAIACDH"></a><a id="JJDBC29085"></a>Owned Sequence Syntax</p>
<pre>ALTER SEQUENCE [sequence object] [KEEP|NOKEEP];
</pre>
<p>This command retains the original values of <code>sequence.nextval</code> for replaying, so that the keys match after replay. Most applications need to retain the sequence values at replay. The <code>ALTER SYNTAX</code> is only for owned sequences.</p>
<p class="subhead2"><a id="CJAFAGFC"></a><a id="JJDBC29086"></a>Others Sequence Syntax</p>
<pre>GRANT KEEP SEQUENCES.. [to  USER]  on [sequence object];
REVOKE  KEEP SEQUENCES &hellip; [from USER]  on [sequence object];
</pre>
<p>For example, use the following command for EBS standard usage with original sequence values:</p>
<pre>Grant KEEP SEQUENCES  to [apps user] on [sequence object]; 
Grant KEEP SEQUENCES  to [custom user] on [sequence object];
</pre></div>
<!-- class="sect3" -->
<a id="CJAFDEAD"></a>
<div id="JJDBC29087" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">GRANT ALL Statement</h4>
<p>The <code>GRANT ALL</code> statement grants <code>KEEP</code> privilege on all the objects of a user. However, it excludes mutable values, that is, mutable values require explicit grants.</p>
</div>
<!-- class="sect3" -->
<a id="CJAHFADJ"></a>
<div id="JJDBC29088" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Rules for Grants on Mutable Values</h4>
<p>Follow these rules while granting privileges on mutable objects:</p>
<ul>
<li>
<p>If a user has <code>KEEP</code> privilege granted on mutables values, then the objects inherit mutable access when the <code>SYS_GUID</code>, <code>SYSDATE</code>, and <code>SYSTIMESTAMP</code> functions are called.</p>
</li>
<li>
<p>If the <code>KEEP</code> privilege on mutable values on a sequence object is revoked, then SQL or PL/SQL blocks using that object will not allow mutable collection or application for that sequence.</p>
</li>
<li>
<p>If granted privileges are revoked between runtime and failover, then the mutable values that are collected are not applied for replay.</p>
</li>
<li>
<p>If new privileges are granted between runtime and failover, mutable values are not collected and these values are not applied for replay.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CJAJBGCA"></a>
<div id="JJDBC29089" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref890"></a>Disabling Replay in Application Continuity for Java</h2>
<p>This section describes the following concepts:</p>
<ul>
<li>
<p><a href="#CJABBCBC">How to Disable Replay</a></p>
</li>
<li>
<p><a href="#CJACAACC">When to Disable Replay</a></p>
</li>
<li>
<p><a href="#CJAFDBGG">Diagnostics and Tracing</a></p>
</li>
</ul>
<a id="CJABBCBC"></a>
<div id="JJDBC29090" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">How to Disable Replay</h3>
<p>If any application module uses a design that is unsuitable for replay, then the disable replay API disables replay on a per request basis. Disabling replay can be added to the callback or to the main code by using the <code><a id="sthref891"></a>disableReplay</code> method of the <code>oracle.jdbc.replay.ReplayableConnection</code> interface. For example:</p>
<pre>if (connection instanceof oracle.jdbc.replay.ReplayableConnection)
{ 
    (( oracle.jdbc.replay.ReplayableConnection)connection).disableReplay(); 
    
}
</pre>
<p>Disabling replay does not alter the connection state by reexecuting any JDBC method, SQL or PL/SQL. When replay is disabled using the disable replay API, both recording and replay are disabled until that request ends. There is no API to reenable replay because it is invalid to reestablish the database session with time gaps in a replayed request. This ensures that replay runs <span class="italic">only</span> if a complete history of needed calls has been recorded.</p>
</div>
<!-- class="sect2" -->
<a id="CJACAACC"></a>
<div id="JJDBC29091" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">When to Disable Replay</h3>
<p>By default, the JDBC replay driver replays following a recoverable error. The disable replay API can be used in the entry point of application modules that are unable to lose the database sessions and recover. For example, if the application uses the <code>UTL_SMTP</code> package and does not want messages to be repeated, then the <code>disableReplay</code> API affects only the request that needs to be disabled. All other requests continue to be replayed.</p>
<p>The following are scenarios to consider before configuring an application for replay:</p>
<ul>
<li>
<p><a href="#CJADFFAD">Application Calls External PL/SQL Actions that Should not Be Repeated</a></p>
</li>
<li>
<p><a href="#CJADJJEH">Application Synchronizes Independent Sessions</a></p>
</li>
<li>
<p><a href="#CJAJIDDG">Application Uses Time at the Middle-tier in the Execution Logic</a></p>
</li>
<li>
<p><a href="#CJAFABAB">Application assumes that ROWIds do not change</a></p>
</li>
<li>
<p><a href="#CJAHJEGG">Application Assumes that Side Effects Execute Once</a></p>
</li>
<li>
<p><a href="#CJAHDBHC">Application Assumes that Location Values Do not Change</a></p>
</li>
</ul>
<a id="CJADFFAD"></a>
<div id="JJDBC29137" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Application Calls External PL/SQL Actions that Should not Be Repeated</h4>
<p>During replay, autonomous transactions and external PL/SQL calls can have side effects that are separate from the main transaction. These side effects are replayed unless you specify otherwise and leave persistent results behind. These side effects include writing to an external table, sending email, forking sessions out of PL/SQL or Java, transferring files, accessing external URLs, and so on. For example, in case of PL/SQL messaging, suppose, you walk away in-between some work without committing and the session times out. Now, if you issue a <code>Ctrl+C</code> command, then the foreground of a component fails. When you resubmit the work, then this side effect can also be repeated.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS" href="../ADFNS/toc.htm"><span class="italic">Oracle Database Development Guide</span></a> for more information about potential side effects of Application Continuity</div>
<p>You must make a conscious decision about whether to enable replay for external actions or not. For example, you can consider the following situations where this decision is important:</p>
<ul>
<li>
<p>Using the <code>UTL_HTTP</code> package to issue a SOA call</p>
</li>
<li>
<p>Using the <code>UTL_SMTP</code> package to send a message</p>
</li>
<li>
<p>Using the <code>UTL_URL</code> package to access a web site</p>
</li>
</ul>
<p>Use the <code>disableReplay</code> API if you do not want such external actions to be replayed.</p>
</div>
<!-- class="sect3" -->
<a id="CJADJJEH"></a>
<div id="JJDBC29092" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Application Synchronizes Independent Sessions</h4>
<p>You can configure an application for replay if the application synchronizes independent sessions using volatile entities that are held until commit, rollback, or session loss. In this case, the application synchronizes multiple sessions connected to several data sources that are otherwise inter-dependent using resources such as a database lock. This synchronization may be fine if the application is only serializing these sessions and understands that any session may fail. However, if the application assumes that a lock or any other volatile resource held by one data source implies exclusive access to data on the same or a separate data source from other connections, then this assumption may be invalidated when replaying.</p>
<p>During replay, the driver is not aware that the sessions are dependent on one session holding a lock or other volatile resource. You can also use pipes, buffered queues, stored procedures taking a resource (such as a semaphore, device, or socket) to implement the synchronization that are lost by failures.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>DBMS_LOCK</code> does not replay in the restricted version.</div>
</div>
<!-- class="sect3" -->
<a id="CJAJIDDG"></a>
<div id="JJDBC29093" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Application Uses Time at the Middle-tier in the Execution Logic</h4>
<p>In this case, the application uses the wall clock at the middle-tier as part of the execution logic. The JDBC replay driver does not repeat the middle-tier time logic, but uses the database calls that execute as part of this logic. For example, an application using middle-tier time may assume that a statement executed at Time T1 is not reexecuted at Time T2, unless the application explicitly does so.</p>
</div>
<!-- class="sect3" -->
<a id="CJAFABAB"></a>
<div id="JJDBC29094" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Application assumes that ROWIds do not change</h4>
<p>If an application caches ROWIDs, then access to these ROWIDs may be invalidated due to database changes. Although a ROWID uniquely identifies a row in a table, a ROWID may change its value in the following situations:</p>
<ul>
<li>
<p>The underlying table is reorganized</p>
</li>
<li>
<p>An index is created on the table</p>
</li>
<li>
<p>The underlying table is partitioned</p>
</li>
<li>
<p>The underlying table is migrated</p>
</li>
<li>
<p>The underlying table is exported and imported using EXP/IMP/DUL</p>
</li>
<li>
<p>The underlying table is rebuilt using Golden Gate or Logical Standby or other replication technology</p>
</li>
<li>
<p>The database of the underlying table is flashed back or restored</p>
</li>
</ul>
<p>It is bad practice for an application to store ROWIDs for later use as the corresponding row may either not exist or contain completely different data.</p>
</div>
<!-- class="sect3" -->
<a id="CJAHJEGG"></a>
<div id="JJDBC29095" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Application Assumes that Side Effects Execute Once</h4>
<p>In this case, the following are replayed during a replay:</p>
<ul>
<li>
<p>Autonomous transactions</p>
</li>
<li>
<p>Opening of back channels separate to the main transaction side effects</p>
</li>
</ul>
<p>Examples of back channels separate to the main transaction include writing to an external table, sending email, forking sessions out of PL/SQL or Java, writing to output files, transferring files, and writing exception files. Any of these actions leave persistent side effects in the absence of replay. Back channels can leave persistent results behind. For example, if a user leaves a transaction midway without committing and the session times out, then the user presses Ctrl+C, the foreground or any component fails. If the user resubmits work, then the side effects can be repeated.</p>
</div>
<!-- class="sect3" -->
<a id="CJAHDBHC"></a>
<div id="JJDBC29096" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Application Assumes that Location Values Do not Change</h4>
<p><code>SYSCONTEXT</code> options comprise a location-independent set such as National Language Support (NLS) settings, <code>ISDBA</code>, <code>CLIENT_IDENTIFIER</code>, <code>MODULE</code>, and <code>ACTION</code>, and a location-dependent set that uses physical locators. Typically, an application does not use the physical identifier, except in testing environments. If physical locators are used in mainline code, then the replay finds the mismatch and rejects it. However, it is fine to use physical locators in callbacks.</p>
<p class="subhead2"><a id="JJDBC29120"></a>Example</p>
<pre>select 
    sys_context(&#39;USERENV&#39;,&#39;DB_NAME&#39;) 
    ,sys_context(&#39;USERENV&#39;,&#39;HOST&#39;) 
    ,sys_context(&#39;USERENV&#39;,&#39;INSTANCE&#39;) 
    ,sys_context(&#39;USERENV&#39;,&#39;IP_ADDRESS&#39;) 
    ,sys_context(&#39;USERENV&#39;,&#39;ISDBA&#39;)  
    ,sys_context(&#39;USERENV&#39;,&#39;SESSIONID&#39;) 
    ,sys_context(&#39;USERENV&#39;,&#39;TERMINAL&#39;) 
    ,sys_context(&#39;USERENV&#39;,ID&#39;) 
from dual
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CJAFDBGG"></a>
<div id="JJDBC29098" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Diagnostics and Tracing</h3>
<p>The JDBC Replay driver supports standard JDK logging. Logging is enabled using the Java command-line <code>-Djava.util.logging.config.file=&lt;file&gt;</code> option. Log level is controlled with the <code>oracle.jdbc.internal.replay.level</code> attribute in the log configuration file. For example:</p>
<pre>oracle.jdbc.internal.replay.level = FINER|FINEST
</pre>
<p>where, <code>FINER</code> produces external APIs and <code>FINEST</code> produces large volumes of trace. You must use <code>FINEST</code> only under supervision.</p>
<p>If you use the <code>java.util.logging.XMLFormatter</code> class to format a log record, then the logs are more readable but larger. If you are using replay with FAN enabled on UCP or WebLogic Server, then you should also enable FAN-processing logging.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JJUCP8233" href="../JJUCP/dgn_conpool.htm#JJUCP8233"><span class="italic">Oracle Universal Connection Pool for JDBC Developer&#39;s Guide</span></a></div>
<div id="JJDBC29099" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref892"></a>
<h4 class="sect3">Writing Replay Trace to Console</h4>
<p>Following is the example of a configuration file for logging configuration.</p>
<pre>oracle.jdbc.internal.replay.level = FINER
handlers = java.util.logging.ConsoleHandler
java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.formatter = java.util.logging.XMLFormatter
</pre></div>
<!-- class="sect3" -->
<div id="JJDBC29100" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref893"></a>
<h4 class="sect3">Example: Writing Replay Trace to a File</h4>
<p>Following is the example of a <code>properties</code> file for logging configuration.</p>
<pre>oracle.jdbc.internal.replay.level = FINEST
</pre>
<pre># Output File Format (size, number and style)
# count: Number of output files to cycle through, by appending an integer to the base file name:
# limit: Limiting size of output file in bytes
handlers = java.util.logging.FileHandler
java.util.logging.FileHandler.pattern = [file location]/replay_%U.trc
java.util.logging.FileHandler.limit = 500000000
java.util.logging.FileHandler.count = 1000
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" -->
<hr/>
<br/>
<p style="text-decoration:underline">Footnote Legend</p>
Footnote&nbsp;1:&nbsp;&#34;A Logon storm is a sudden increase in the number of client connection requests.&#34;<br/></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2237">
<tr>
<td class="cellalignment2246">
<table class="cellalignment2242">
<tr>
<td class="cellalignment2241"><a href="transactionguard.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2241"><a href="ocitaf.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2249">
<table class="cellalignment2240">
<tr>
<td class="cellalignment2241"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2241"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2241"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2241"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2241"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2241"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>


</body></html>