<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-71006"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Using%20Oracle%20Object%20References"></a><title>Using Oracle Object References</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="This book describes how to use Oracle JDBC drivers to develop powerful Java database applications."/>
<meta name="dcterms.created" content="2014-06-30T1:22:37Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database JDBC Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49300-05"/>
<meta name="dcterms.isVersionOf" content="JJDBC"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="oralob.htm" title="Previous" type="text/html"/>
<link rel="Next" href="oraarr.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49300-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">26/55</span> <!-- End Header -->
<div id="JJDBC28566" class="chapter"><a id="g1060489"></a>
<h1 class="chapter"><span class="secnum">15</span> Using Oracle Object References</h1>
<p><a id="sthref573"></a><a id="sthref574"></a>This chapter describes the standard Java Database Connectivity (JDBC) that let you access and manipulate object references.</p>
<p>This section discusses the following topics:</p>
<ul>
<li>
<p><a href="#i1055963">Oracle Extensions for Object References</a></p>
</li>
<li>
<p><a href="#i1054936">Retrieving and Passing an Object Reference</a></p>
</li>
<li>
<p><a href="#i1054946">Accessing and Updating Object Values Through an Object Reference</a></p>
</li>
<li>
<p><a href="#i1056592">Custom Reference Classes with JPublisher</a></p>
</li>
</ul>
<a id="i1055963"></a>
<div id="JJDBC28567" class="sect1">
<h2 class="sect1">Oracle Extensions for Object References</h2>
<p>Oracle supports the use of refer<a id="sthref575"></a>ences to database objects. Oracle JDBC provides support for object references as:</p>
<ul>
<li>
<p>Columns in a <code>SELECT</code> clause</p>
</li>
<li>
<p>IN or OUT bind variables</p>
</li>
<li>
<p>Attributes in an Oracle object</p>
</li>
<li>
<p>Elements in a collection type object</p>
</li>
</ul>
<p>In SQL, an object reference (<code>REF</code>) is strongly typed. For example, a reference to an <code>EMPLOYEE</code> object would be defined as an <code>EMPLOYEE REF</code>, not just a <code>REF</code>.</p>
<p>When you select an object reference, be aware that you are retrieving only a pointer to an object, not the object itself. You have the choice of materializing the reference as a <code>java.sql.Ref</code> instance for portability, or materializing it as an instance of a custom Java class that you have created in advance, which is strongly typed. Custom Java classes used for object references are referred to as <span class="bold">custo<a id="sthref576"></a>m reference classes</span> and must implement the <code>oracle.jdbc.OracleData</code> interface.</p>
<p>You can retrieve a <code>REF</code> instance through a result set or callable statement object, and pass an updated <code>REF</code> instance back to the database through a prepared statement or callable statement object. The <code>REF</code> class includes functionality to get and set underlying object attribute values, and get the SQL base type name of the underlying object.</p>
<p>Custom reference classes include this same functionality, as well as having the advantage of being strongly typed. This can help you find coding errors during compilation that might not otherwise be discovered until run time.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
<ul>
<li>
<p>If you are using the <code>oracle.jdbc.OracleData</code> interface for custom object classes, then you will presumably use <code>OracleData</code> for corresponding custom reference classes as well. However, if you are using the standard <code>java.sql.SQLData</code> interface for custom object classes, then you can only use weak Java types for references. The <code>SQLData</code> interface is for mapping SQL object types only.</p>
</li>
<li>
<p>You can create and retrieve <code>REF</code> objects in your JDBC application only by running SQL statements. There is no JDBC-specific functionality for creating and retrieving <code>REF</code> objects.</p>
</li>
<li>
<p>You cannot have a reference to an array, even though arrays, like objects, are structured types.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1054936"></a>
<div id="JJDBC28568" class="sect1">
<h2 class="sect1">Retrieving and Passing an Object Reference</h2>
<p>This section discusses JDBC functionality for retrieving and passing object references. It covers the following topics:</p>
<ul>
<li>
<p><a href="#BABGCHDD">Retrieving an Object Reference from a Result Set</a></p>
</li>
<li>
<p><a href="#i1054941">Retrieving an Object Reference from a Callable Statement</a></p>
</li>
<li>
<p><a href="#BABICJIA">Passing an Object Reference to a Prepared Statement</a></p>
</li>
</ul>
<a id="BABGCHDD"></a>
<div id="JJDBC28569" class="sect2">
<h3 class="sect2">Retrieving an Object Reference from a Result Set</h3>
<p>To demon<a id="sthref577"></a>strate how to retrieve object references, the following example first defines an Oracle object type <code>ADDRESS</code>, which is then referenced in the <code>PEOPLE</code> table:</p>
<pre>create type ADDRESS as object
   (street_name     VARCHAR2(30),
    house_no        NUMBER);

create table PEOPLE 
    (col1 VARCHAR2(30),
     col2 NUMBER,
     col3 REF ADDRESS);
</pre>
<p>The <code>ADDRESS</code> object type has two attributes: a street name and a house number. The <code>PEOPLE</code> table has three columns: a column for character data, a column for numeric data, and a column containing a reference to an <code>ADDRESS</code> object.</p>
<p>To retrieve an object reference, follow these general steps:</p>
<ol>
<li>
<p>Use a standard SQL <code><a id="sthref578"></a>SELECT</code> statement to retrieve the reference from a database table <code>REF</code> column.</p>
</li>
<li>
<p>Use <code><a id="sthref579"></a>getRef</code> to get the address reference from the result set into an <code>OracleRef</code> instance.</p>
</li>
<li>
<p>Let <code>Address</code> be the Java custom class corresponding to the SQL object type <code>ADDRESS</code>.</p>
</li>
<li>
<p>Add the correspondence between the Java class <code>Address</code> and the SQL type <code>ADDRESS</code> to your type map.</p>
</li>
<li>
<p>Use the <code><a id="sthref580"></a>getObject</code> method to retrieve the contents of the <code>Address</code> reference. Cast the output to <code>Address</code>.</p>
</li>
</ol>
<p>The <code>PEOPLE</code> database table is defined earlier in this section<a id="sthref581"></a><a id="sthref582"></a>. The code for the preceding steps, except the step of adding <code>Address</code> to the type map, is as follows:</p>
<pre>ResultSet rs = stmt.executeQuery(&#34;SELECT col3 FROM PEOPLE&#34;); 
while (rs.next())
{
   OracleRef ref = rs.getRef(1);
   Address a = (Address)ref.getObject();
}
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
In the preceding code, <code>stmt</code> is a previously defined statement object.</div>
</div>
<!-- class="sect2" -->
<a id="i1054941"></a>
<div id="JJDBC28570" class="sect2">
<h3 class="sect2">Retrieving an Object Reference from a Callable Statement</h3>
<p>To retrieve an <a id="sthref583"></a>object reference as an <code>OUT</code> parameter in PL/SQL blocks, you must register the bind type for your <code>OUT</code> parameter.</p>
<ol>
<li>
<p>Cast your callable statement to <code>OracleCallableStatement</code>, as follows:</p>
<pre>OracleCallableStatement ocs = 
   (OracleCallableStatement)conn.prepareCall(&#34;{? = call func()}&#34;);
</pre></li>
<li>
<p>Register the <code>OUT</code> parameter with the following form of the <code>registerOutParameter</code> method:</p>
<pre>ocs.registerOutParameter (int <span class="italic">param_index</span>, int <span class="italic">sql_type</span>, String <span class="italic">sql_type_name</span>);
</pre>
<p><code><span class="codeinlineitalic">param_index</span></code> is the parameter index and <code><span class="codeinlineitalic">sql_type</span></code> is the SQL type code. The <code><span class="codeinlineitalic">sql_type_name</span></code> is the name of the structured object type that this reference is used for. For example, if the <code>OUT</code> parameter is a reference to an <code>ADDRESS</code> object, then <code>ADDRESS</code> is the <code><span class="codeinlineitalic">sql_type_name</span></code> that should be passed in.</p>
</li>
<li>
<p>Run the call, as follows:</p>
<pre>ocs.execute();
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABICJIA"></a>
<div id="JJDBC28571" class="sect2">
<h3 class="sect2">Passing an Object Reference to a Prepared Statement</h3>
<p>Pass an <a id="sthref584"></a>object reference to a prepared statement in the same way as you would pass any other SQL type. Use either the <code><a id="sthref585"></a>setObject</code> method or the <code><a id="sthref586"></a>setREF</code> method of a prepared statement object.</p>
<p>Use a prepared statement to update an address reference based on <code>ROWID</code>, as follows:</p>
<pre>PreparedStatement pstmt = 
   conn.prepareStatement (&#34;update PEOPLE set ADDR_REF = ? where ROWID = ?&#34;);
pstmt.setRef (1, addr_ref);
    pstmt.setRowId (2, rowid);
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1054946"></a>
<div id="JJDBC28572" class="sect1">
<h2 class="sect1">Accessing and Updating Object Values Through an Object Reference</h2>
<p>You can use the <code>Ref</code> object <code>setObject</code> method to update the value of an object in the database through an object reference. To do this, you must first retrieve the reference to the database object and create a Java object that corresponds to the database object.</p>
<p>For example, you can use the code in <a href="#i1054936">&#34;Retrieving and Passing an Object Reference&#34;</a>, to retrieve the reference to a database <code>ADDRESS</code> object, as follows:</p>
<pre>ResultSet rs = stmt.executeQuery(&#34;SELECT col3 FROM PEOPLE&#34;); 
if (rs.next())
{
   Ref ref = rs.getRef(1);
<a id="sthref587"></a><a id="sthref588"></a>   Address a = (Address)ref.getObject();
}
</pre>
<p>Then, <a id="sthref589"></a><a id="sthref590"></a>you can create a Java <code>Address</code> object that corresponds to the database <code>ADDRESS</code> object. Use the <code>setObject</code> method of the <code>Ref</code> interface to set the value of the database object, as follows:</p>
<pre>Address addr = new Address(...);
ref.setObject(addr);
</pre>
<p>Here, the <code>setValue</code> method updates the database <code>ADDRESS</code> object immediately.</p>
</div>
<!-- class="sect1" -->
<a id="i1056592"></a>
<div id="JJDBC28573" class="sect1">
<h2 class="sect1">Custom Reference Classes with JPublisher</h2>
<p>This chapter primarily describes the functionality of the <code>java.sql.Ref</code> class, but it is also possible to access Oracle object references through custom Java classes or, more specifically, custo<a id="sthref591"></a>m reference classes.</p>
<p>Custom reference classes offer all the functionality described earlier in this chapter, as well as the advantage of being strongly typed. A custom reference class must satisfy three requirements:</p>
<ul>
<li>
<p>It must implement the <code>oracle.jdbc.OracleData</code> interface. Note that the standard JDBC <code>SQLData</code> interface, which is an alternative for custom object classes, is not intended for custom reference classes.</p>
</li>
<li>
<p>It, or a companion class, must implement the <code>oracle.jdbc.OracleDataFactory</code> interface, for creating instances of the custom reference class.</p>
</li>
<li>
<p>It must provide a way to refer to the object data. JPublisher accomplishes this by using an <code>oracle.sql.REF</code> attribute.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Starting from Oracle Database 12<span class="italic">c</span> Release 1 (12.1), the <code>oracle.sql.REF</code> class is deprecated and replaced with the <code>oracle.jdbc.OracleRef</code> interface, which is a part of the <code>oracle.jdbc</code> package. Oracle strongly recommends you to use the methods available in the <code>java.sql</code> package, where possible, for standard compatibility and methods available in the <code>oracle.jdbc</code> package for Oracle specific extensions. Refer to MoS Note 1364193.1 for more information about the <code>oracle.jdbc.OracleRef</code> interface.</div>
<p>You can create custom reference classes yourself, but the most convenient way to produce them is through the Oracle JPu<a id="sthref592"></a>blisher utility. If you use JPublisher to generate a custom object class to map to an Oracle object and you specify that JPublisher use an <code>OracleData</code> implementation, then JPublisher will also generate a custom <a id="sthref593"></a>reference class that implements <code>OracleData</code> and <code>OracleDataFactory</code> and includes an <code>oracle.sql.REF</code> attribute. The <code>OracleData</code> implementation will be used if the JPublisher <code>-usertypes</code> mapping option is set to <code>oracle</code>, which is the default.</p>
<p>Custom reference classes are strongly typed. For example, if you define an Oracle object <code>EMPLOYEE</code>, then JPublisher can generate an <code>Employee</code> custom object class and an <code>EmployeeRef</code> custom reference class. Using <code>EmployeeRef</code> instances instead of generic <code>oracle.sql.REF</code> instances makes it easier to catch errors during compilation instead of at run time. For example, if you accidentally assign some other kind of object reference into an <code>EmployeeRef</code> variable.</p>
<p>Be aware that the standard <code>SQLData</code> interface supports only SQL object mappings. For this reason, if you instruct JPublisher to implement the standard <code>SQLData</code> interface in creating a custom object class, then JPublisher will <span class="italic">not</span> generate a custom reference class. In this case, your only option is to use standard <code>java.sql.Ref</code> instances or <code>oracle.sql.REF</code> instances to map to your object references.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="oraoot.htm#i1078761">&#34;Using JPublisher to Create Custom Object Classes&#34;</a></p>
</li>
<li>
<p><a class="olink JJPUB" href="../JJPUB/toc.htm"><span class="italic">Oracle Database JPublisher User&#39;s Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2237">
<tr>
<td class="cellalignment2246">
<table class="cellalignment2242">
<tr>
<td class="cellalignment2241"><a href="oralob.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2241"><a href="oraarr.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2249">
<table class="cellalignment2240">
<tr>
<td class="cellalignment2241"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2241"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2241"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2241"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2241"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2241"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>