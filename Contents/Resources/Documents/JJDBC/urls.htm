<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-71030"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Data%20Sources%20and%20URLs"></a><title>Data Sources and URLs</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="This book describes how to use Oracle JDBC drivers to develop powerful Java database applications."/>
<meta name="dcterms.created" content="2014-06-30T1:22:36Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database JDBC Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49300-05"/>
<meta name="dcterms.isVersionOf" content="JJDBC"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="part3.htm" title="Previous" type="text/html"/>
<link rel="Next" href="clntsec.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49300-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">18/55</span> <!-- End Header -->
<div id="JJDBC28267" class="chapter"><a id="BEIDBFDF"></a>
<h1 class="chapter"><span class="secnum">8</span> Data Sources and URLs</h1>
<p>This chapter discusses connecting applications to databases using Java Database Connectivity (JDBC) data sources, as well as the URLs that describe databases. This chapter contains the following sections:</p>
<ul>
<li>
<p><a href="#i1070726">Data Sources</a></p>
</li>
<li>
<p><a href="#BEIJFHHB">Database URLs and Database Specifiers</a></p>
</li>
</ul>
<a id="i1070726"></a>
<div id="JJDBC28268" class="sect1">
<h2 class="sect1">Data Sources</h2>
<p><a id="sthref327"></a>Data sources are standard, general-use objects for specifying databases or other resources to use. The JDBC 2.0 extension application programming interface (API) introduced the concept of data sources. For convenience and portability, data sources can be bound to Java Naming and Directory Interface (JNDI) entities, so that you can access databases by logical names.</p>
<p>The data source facility provides a complete replacement for the previous JDBC <code>DriverManager</code> facility. You can use both facilities in the same application, but it is recommended that you transition your application to data sources.</p>
<p>This section covers the following topics:</p>
<ul>
<li>
<p><a href="#i1066337">Overview of Oracle Data Source Support for JNDI</a></p>
</li>
<li>
<p><a href="#i1058725">Features and Properties of Data Sources</a></p>
</li>
<li>
<p><a href="#CIHBIAEB">Creating a Data Source Instance and Connecting</a></p>
</li>
<li>
<p><a href="#i1063832">Creating a Data Source Instance, Registering with JNDI, and Connecting</a></p>
</li>
<li>
<p><a href="#i1006362">Supported Connection Properties</a></p>
</li>
<li>
<p><a href="#CHDDFIJJ">Using Roles for SYS Login</a></p>
</li>
<li>
<p><a href="#CHDBJIIF">Configuring Database Remote Login</a></p>
</li>
<li>
<p><a href="#CHDJICFH">Bequeath Connection and SYS Logon</a></p>
</li>
<li>
<p><a href="#CHDJHCFE">Properties for Oracle Performance Extensions</a></p>
</li>
</ul>
<a id="i1066337"></a>
<div id="JJDBC28269" class="sect2">
<h3 class="sect2">Overview of Oracle Data Source Su<a id="sthref328"></a><a id="sthref329"></a>pport for JNDI</h3>
<p>The JNDI standard provides a way for applications to find and access remote services and resources. These services can be any enterprise services. However, for a JDBC application, these services would include database connections and services.</p>
<p>JNDI enables an application to use logical names in accessing these services, removing vendor-specific syntax from application code. JNDI has the functionality to associate a logical name with a particular source for a desired service.</p>
<p>All Oracle JDBC data sources are JNDI-referenceable. The developer is not required to use this functionality, but accessing databases through JNDI logical names makes the code more portable.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Using JNDI functionality requires the <code>jndi.jar</code> file to be in the <code>CLASSPATH</code> environment variable. This file is included with the Java products on the installation CD. You must add it to the <code>CLASSPATH</code> environment variable separately.</div>
</div>
<!-- class="sect2" -->
<a id="i1058725"></a>
<div id="JJDBC28270" class="sect2">
<h3 class="sect2">Features and Properties of Data Sources</h3>
<p>By using the data source functionality with JNDI, you do not need to register the vendor-specific JDBC driver class name and you can use logical names for URLs and other properties. This ensures that the code for opening database connections is portable to other environments.</p>
<p class="subhead2"><a id="JJDBC28271"></a>The DataSource Interf<a id="sthref330"></a><a id="sthref331"></a><a id="sthref332"></a>ace and Oracle Implementation</p>
<p>A JDBC data source is an instance of a class that implements the standard <code>javax.sql.DataSource</code> interface:</p>
<pre>public interface DataSource
{
   Connection getConnection() throws SQLException;
   Connection getConnection(String username, String password)
      throws SQLException;
   ...
}
</pre>
<p>Oracle implements this interface with the <code>OracleDataSource</code> class in the <code>oracle.jdbc.pool</code> package. The overloaded <code>getConnection</code> method returns a connection to the database.</p>
<p>To use other values, you can set properties using appropriate setter methods. For alternative user names and passwords, you can also use the <code>getConnection</code> method that takes these parameters as input. This would take priority over the property settings.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>OracleDataSource</code> class and all subclasses implement the <code>java.io.Serializable</code> and <code>javax.naming.Referenceable</code> interfaces.</div>
<p class="subhead2"><a id="i1058156"></a><a id="JJDBC28272"></a>Properties of DataSou<a id="sthref333"></a>rce</p>
<p><code>The</code> <code>OracleDataSource</code> class, as with any class that implements the <code>DataSource</code> interface, provides a set of properties that can be used to specify a database to connect to. These properties follow the JavaBeans design pattern.</p>
<p><a href="#g1073223">Table 8-1</a> and <a href="#g1073263">Table 8-2</a> list <code>OracleDataSource</code> properties. The properties in <a href="#g1073223">Table 8-1</a> are standard properties. The properties in <a href="#g1073263">Table 8-2</a> are Oracle extensions.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle does not implement the standard <code>roleName</code> property.</div>
<div id="JJDBC28273" class="tblformal">
<p class="titleintable"><a id="sthref334"></a><a id="g1073223"></a>Table 8-1 Standard Data Source Properties</p>
<table class="cellalignment2244" title="Standard Data Source Properties" summary="table" dir="ltr">
<thead>
<tr class="cellalignment2238">
<th class="cellalignment2245" id="r1c1-t5">Name</th>
<th class="cellalignment2245" id="r1c2-t5">Type</th>
<th class="cellalignment2245" id="r1c3-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r2c1-t5" headers="r1c1-t5">
<p><code>databaseName</code></p>
</td>
<td class="cellalignment2246" headers="r2c1-t5 r1c2-t5">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r2c1-t5 r1c3-t5">
<p>Name of the particular database on the server.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r3c1-t5" headers="r1c1-t5">
<p><code>dataSourceName</code></p>
</td>
<td class="cellalignment2246" headers="r3c1-t5 r1c2-t5">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r3c1-t5 r1c3-t5">
<p>Name of the underlying data source class. For connection pooling, this is an underlying pooled connection data source class. For distributed transactions, this is an underlying XA data source class.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r4c1-t5" headers="r1c1-t5">
<p><code>description</code></p>
</td>
<td class="cellalignment2246" headers="r4c1-t5 r1c2-t5">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r4c1-t5 r1c3-t5">
<p>Description of the data source.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r5c1-t5" headers="r1c1-t5">
<p><code>networkProtocol</code></p>
</td>
<td class="cellalignment2246" headers="r5c1-t5 r1c2-t5">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r5c1-t5 r1c3-t5">
<p>Network protocol for communicating with the server. For Oracle, this applies only to the JDBC Oracle Call Interface (OCI) drivers and defaults to <code>tcp</code>.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r6c1-t5" headers="r1c1-t5">
<p><code>password</code></p>
</td>
<td class="cellalignment2246" headers="r6c1-t5 r1c2-t5">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r6c1-t5 r1c3-t5">
<p>Password for the connecting user.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r7c1-t5" headers="r1c1-t5">
<p><code>portNumber</code></p>
</td>
<td class="cellalignment2246" headers="r7c1-t5 r1c2-t5">
<p><code>int</code></p>
</td>
<td class="cellalignment2246" headers="r7c1-t5 r1c3-t5">
<p>Number of the port where the server listens for requests</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r8c1-t5" headers="r1c1-t5">
<p><code>serverName</code></p>
</td>
<td class="cellalignment2246" headers="r8c1-t5 r1c2-t5">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r8c1-t5 r1c3-t5">
<p>Name of the database server</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r9c1-t5" headers="r1c1-t5">
<p><code>user</code></p>
</td>
<td class="cellalignment2246" headers="r9c1-t5 r1c2-t5">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r9c1-t5 r1c3-t5">
<p>Name for the login</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
For security reasons, there is no <code><a id="sthref335"></a>getPassword()</code> method.</div>
<div id="JJDBC28274" class="tblformal">
<p class="titleintable"><a id="sthref336"></a><a id="g1073263"></a>Table 8-2 Oracle Extended Data Source Properties</p>
<table class="cellalignment2244" title="Oracle Extended Data Source Properties " summary="table" dir="ltr">
<thead>
<tr class="cellalignment2238">
<th class="cellalignment2245" id="r1c1-t7">Name</th>
<th class="cellalignment2245" id="r1c2-t7">Type</th>
<th class="cellalignment2245" id="r1c3-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r2c1-t7" headers="r1c1-t7">
<p><code>connectionCacheName</code></p>
</td>
<td class="cellalignment2246" headers="r2c1-t7 r1c2-t7">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r2c1-t7 r1c3-t7">
<p>Specifies the name of the cache. This cannot be changed after the cache has been created.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r3c1-t7" headers="r1c1-t7">
<p><code>connection&shy;Cache&shy;Properties</code></p>
</td>
<td class="cellalignment2246" headers="r3c1-t7 r1c2-t7">
<p><code>java.util.Properties</code></p>
</td>
<td class="cellalignment2246" headers="r3c1-t7 r1c3-t7">
<p>Specifies properties for implicit connection cache.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r4c1-t7" headers="r1c1-t7">
<p><code>connectionCachingEnabled</code></p>
</td>
<td class="cellalignment2246" headers="r4c1-t7 r1c2-t7">
<p><code>Boolean</code></p>
</td>
<td class="cellalignment2246" headers="r4c1-t7 r1c3-t7">
<p>Specifies whether implicit connection cache is in use.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r5c1-t7" headers="r1c1-t7">
<p><code>connectionProperties</code></p>
</td>
<td class="cellalignment2246" headers="r5c1-t7 r1c2-t7">
<p><code>java.util.Properties</code></p>
</td>
<td class="cellalignment2246" headers="r5c1-t7 r1c3-t7">
<p>Specifies the connection properties.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r6c1-t7" headers="r1c1-t7">
<p><code><a id="sthref337"></a>driverType</code></p>
</td>
<td class="cellalignment2246" headers="r6c1-t7 r1c2-t7">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r6c1-t7 r1c3-t7">
<p>Specifies Oracle JDBC driver type. It can be one of <code>oci</code>, <code>thin</code>, or <code>kprb</code>.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r7c1-t7" headers="r1c1-t7">
<p><code>fastConnectionFailoverEnabled</code></p>
</td>
<td class="cellalignment2246" headers="r7c1-t7 r1c2-t7">
<p><code>Boolean</code></p>
</td>
<td class="cellalignment2246" headers="r7c1-t7 r1c3-t7">
<p>Specifies whether Fast Connection Failover is in use.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r8c1-t7" headers="r1c1-t7">
<p><code>implicitCachingEnabled</code></p>
</td>
<td class="cellalignment2246" headers="r8c1-t7 r1c2-t7">
<p><code>Boolean</code></p>
</td>
<td class="cellalignment2246" headers="r8c1-t7 r1c3-t7">
<p>Specifies whether the implicit statement connection cache is enabled.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r9c1-t7" headers="r1c1-t7">
<p><code>loginTimeout</code></p>
</td>
<td class="cellalignment2246" headers="r9c1-t7 r1c2-t7">
<p><code>int</code></p>
</td>
<td class="cellalignment2246" headers="r9c1-t7 r1c3-t7">
<p>Specifies the maximum time in seconds that this data source will wait while attempting to connect to a database.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r10c1-t7" headers="r1c1-t7">
<p><code>logWriter</code></p>
</td>
<td class="cellalignment2246" headers="r10c1-t7 r1c2-t7">
<p><code>java.io.PrintWriter</code></p>
</td>
<td class="cellalignment2246" headers="r10c1-t7 r1c3-t7">
<p>Specifies the log writer for this data source.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r11c1-t7" headers="r1c1-t7">
<p><code>maxStatements</code></p>
</td>
<td class="cellalignment2246" headers="r11c1-t7 r1c2-t7">
<p><code>int</code></p>
</td>
<td class="cellalignment2246" headers="r11c1-t7 r1c3-t7">
<p>Specifies the maximum number of statements in the application cache.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r12c1-t7" headers="r1c1-t7">
<p><code>serviceName</code></p>
</td>
<td class="cellalignment2246" headers="r12c1-t7 r1c2-t7">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r12c1-t7 r1c3-t7">
<p>Specifies the database service name for this data source.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r13c1-t7" headers="r1c1-t7">
<p><code><a id="sthref338"></a>tnsEntry</code></p>
</td>
<td class="cellalignment2246" headers="r13c1-t7 r1c2-t7">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r13c1-t7 r1c3-t7">
<p>Specifies the TNS entry name. The TNS entry name corresponds to the TNS entry specified in the <code>tnsnames.ora</code> configuration file.</p>
<p>Enable this <code>OracleXADataSource</code> property when using the Native XA feature with the OCI driver, to access Oracle pre-8.1.6 databases and later. If the <code>tnsEntry</code> property is not set when using the Native XA feature, then a <code>SQLException</code> with error code ORA-17207 is thrown</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r14c1-t7" headers="r1c1-t7">
<p><code><a id="sthref339"></a>url</code></p>
</td>
<td class="cellalignment2246" headers="r14c1-t7 r1c2-t7">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r14c1-t7 r1c3-t7">
<p>Specifies the URL of the database connection string. Provided as a convenience, it can help you migrate from an older Oracle Database. You can use this property in place of the Oracle <code>tnsEntry</code> and <code>driverType</code> properties and the standard <code>portNumber</code>, <code>networkProtocol</code>, <code>serverName</code>, and <code>databaseName</code> properties.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r15c1-t7" headers="r1c1-t7">
<p><a id="sthref340"></a><code>nativeXA</code></p>
</td>
<td class="cellalignment2246" headers="r15c1-t7 r1c2-t7">
<p><code>Boolean</code></p>
</td>
<td class="cellalignment2246" headers="r15c1-t7 r1c3-t7">
<p>Allows an <code>OracleXADataSource</code> using the Native XA feature with the OCI driver, to access Oracle pre-8.1.6 databases and later. If the <code>nativeXA</code> property is enabled, be sure to set the <code>tnsEntry</code> property as well. This property is only for <code>OracleXADatasource</code>.</p>
<p>This <code>DataSource</code> property defaults to <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r16c1-t7" headers="r1c1-t7">
<p><code>ONSConfiguration</code></p>
</td>
<td class="cellalignment2246" headers="r16c1-t7 r1c2-t7">
<p><code>String</code></p>
</td>
<td class="cellalignment2246" headers="r16c1-t7 r1c3-t7">
<p>Specifies the ONS configuration string that is used to remotely subscribe to FAN/ONS events.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>This table omits properties that supported the deprecated connection cache based on <code>OracleConnectionCache</code>.</p>
</li>
<li>
<p>Because Native XA performs better than Java XA, use Native XA whenever possible.</p>
</li>
</ul>
</div>
<p>Use the <code>setConnectionProperties</code> method to set the properties of the connection and the <code>setConnectionCacheProperties</code> method to set the properties of the connection cache.</p>
<p>For more information about the properties of the connection refer to <a href="#i1006362">&#34;Supported Connection Properties&#34;</a>.</p>
<p>If you are using the server-side internal driver, that is, the <code>driverType</code> property is set to <code>kprb</code>, then any other property settings are ignored.</p>
<p>If you are using the JDBC Thin or OCI driver, then note the following:</p>
<ul>
<li>
<p>A URL setting can include settings for <code>user</code> and <code>password</code>, as in the following example, in which case this takes precedence over individual <code>user</code> and <code>password</code> property settings:</p>
<pre>jdbc:oracle:thin:HR/hr@localhost:5221:orcl
</pre></li>
<li>
<p>Settings for <code>user</code> and <code>password</code> are required, either directly through the URL setting or through the <code>getConnection</code> call. The <code>user</code> and <code>password</code> settings in a <code>getConnection</code> call take precedence over any property settings.</p>
</li>
<li>
<p>If the <code>url</code> property is set, then any <code>tnsEntry</code>, <code>driverType</code>, <code>portNumber</code>, <code>networkProtocol</code>, <code>serverName</code>, and <code>databaseName</code> property settings are ignored.</p>
</li>
<li>
<p>If the <code>tnsEntry</code> property is set, which presumes the <code>url</code> property is not set, then any <code>databaseName</code>, <code>serverName</code>, <code>portNumber</code>, and <code>networkProtocol</code> settings are ignored.</p>
</li>
<li>
<p>If you are using an OCI driver, which presumes the <code>driverType</code> property is set to <code>oci</code>, and the <code>networkProtocol</code> is set to <code>ipc</code>, then any other property settings are ignored.</p>
</li>
</ul>
<p>Also, note that <code>getConnectionCacheName()</code> will return the name of the cache only if the <code>ConnectionCacheName</code> property of the data source is set after caching is enabled on the data source.</p>
</div>
<!-- class="sect2" -->
<a id="CIHBIAEB"></a>
<div id="JJDBC28275" class="sect2">
<h3 class="sect2">Creating a <a id="sthref341"></a>Data Source Instance and Connecting</h3>
<p>This section shows an example of the most basic use of a data source to connect to a database, without using JNDI functionality. Note that this requires vendor-specific, hard-coded property settings.</p>
<p>Create an <code>OracleDataSource</code> instance, initialize its connection properties as appropriate, and get a connection instance, as in the following example:</p>
<pre>OracleDataSource ods = new OracleDataSource();
ods.setDriverType(&#34;oci&#34;);
ods.setServerName(&#34;localhost&#34;);
ods.setNetworkProtocol(&#34;tcp&#34;);
ods.setDatabaseName(&#34;816&#34;);
ods.setPortNumber(5221);
ods.setUser(&#34;HR&#34;);
ods.setPassword(&#34;hr&#34;);
Connection conn = ods.getConnection();
</pre>
<p>Or, optionally, override the user name and password, as follows:</p>
<pre>Connection conn = ods.getConnection(&#34;OE&#34;, &#34;oe&#34;);
</pre></div>
<!-- class="sect2" -->
<a id="i1063832"></a>
<div id="JJDBC28276" class="sect2">
<h3 class="sect2">Creating a <a id="sthref342"></a>Data Source Instance, Registering with JNDI, and Connecting</h3>
<p><a id="ABC1099934"></a><a id="ABC1099934SRI1"></a>This section exhibits JNDI functionality in using data sources to connect to a database. Vendor-specific, hard-coded property settings are required only in the portion of code that binds a data source instance to a JNDI logical name. From that point onward, you can create portable code by using the logical name in creating data sources from which you will get your connection instances.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
Creating and registering data sources is typically handled by a JNDI administrator, not in a JDBC application.</div>
<p class="subhead2"><a id="i1064193"></a><a id="JJDBC28277"></a>Initialize Data Source Properties</p>
<p>Create an <code>OracleDataSource</code> instance, and then initialize its properties as appropriate, as in the following example:</p>
<pre>OracleDataSource ods = new OracleDataSource();
ods.setDriverType(&#34;oci&#34;);
ods.setServerName(&#34;localhost&#34;);
ods.setNetworkProtocol(&#34;tcp&#34;);
ods.setDatabaseName(&#34;816&#34;);
ods.setPortNumber(5221);
ods.setUser(&#34;HR&#34;);
ods.setPassword(&#34;hr&#34;);
</pre>
<p class="subhead2"><a id="i1058045"></a><a id="JJDBC28278"></a>Regi<a id="sthref343"></a>ster the Data Source</p>
<p>Once you have initialized the connection properties of the <code>OracleDataSource</code> instance <code>ods</code>, as shown in the preceding example, you can register this data source instance with JNDI, as in the following example:</p>
<pre>Context ctx = new InitialContext();
ctx.bind(&#34;jdbc/sampledb&#34;, ods);
</pre>
<p>Calling the JNDI <code>InitialContext()</code> constructor creates a Java object that references the initial JNDI naming context. System properties, which are not shown, instruct JNDI which service provider to use.</p>
<p>The <code>ctx.bind</code> call binds the <code>OracleDataSource</code> instance to a logical JNDI name. This means that anytime after the <code>ctx.bind</code> call, you can use the logical name <code>jdbc/sampledb</code> in opening a connection to the database described by the properties of the <code>OracleDataSource</code> instance <code>ods</code>. The logical name <code>jdbc/sampledb</code> is logically bound to this database.</p>
<p>The JNDI namespace has a hierarchy similar to that of a file system. In this example, the JNDI name specifies the subcontext <code>jdbc</code> under the root naming context and specifies the logical name <code>sampledb</code> within the <code>jdbc</code> subcontext.</p>
<p>The <code>Context</code> interface and <code>InitialContext</code> class are in the standard <code>javax.naming</code> package.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The JDBC 2.0 Specification requires that all JDBC data sources be registered in the <code>jdbc</code> naming subcontext of a JNDI namespace or in a child subcontext of the <code>jdbc</code> subcontext.</div>
<p class="subhead2"><a id="i1064382"></a><a id="JJDBC28279"></a>Open a C<a id="sthref344"></a>onnection</p>
<p>To perform a lookup and open a connection to the database logically bound to the JNDI name, use the logical JNDI name. Doing this requires casting the lookup result, which is otherwise a Java <code>Object</code>, to <code>OracleDataSource</code> and then using its <code>getConnection</code> method to open the connection.</p>
<p>Here is an example:<a id="sthref345"></a><a id="sthref346"></a></p>
<pre>OracleDataSource odsconn = (OracleDataSource)ctx.lookup(&#34;jdbc/sampledb&#34;);
Connection conn = odsconn.getConnection();
</pre></div>
<!-- class="sect2" -->
<a id="i1006362"></a>
<div id="JJDBC28280" class="sect2">
<h3 class="sect2">Supported <a id="sthref347"></a>Connection Properties</h3>
<p>For a detailed list of connection properties that Oracle JDBC drivers support, see the <a class="olink JAJDB" href="../JAJDB/toc.htm"><span class="italic">Oracle Database JDBC Java API Reference</span></a>.</p>
</div>
<!-- class="sect2" -->
<a id="CHDDFIJJ"></a>
<div id="JJDBC28282" class="sect2">
<h3 class="sect2">Using Roles for SYS Login</h3>
<p>To specify the role for the <code>SYS</code> login, use the <code>internal_logon</code> connection property. To log on as <code>SYS</code>, set the <code>internal_logon</code> connection property to <code>SYSDBA</code> or <code>SYSOPER</code>.</p>
<p>For a bequeath connection, we can get a connection as <code>SYS</code> by setting the <code>internal_logon</code> property. For a remote connection, we need additional password file setting procedures.</p>
</div>
<!-- class="sect2" -->
<a id="CHDBJIIF"></a>
<div id="JJDBC28283" class="sect2">
<h3 class="sect2">Configuring Database Remote Login</h3>
<p>Before the JDBC Thin driver can connect to the database as <code>SYSDBA</code>, you must configure the user, because Oracle Database security system requires a password file for remote connections as an administrator. Perform the following:</p>
<ol>
<li>
<p>Set a password file on the server-side or on the remote database, using the <code>orapwd</code> password utility. You can add a password file for user <code>SYS</code> as follows:</p>
<ul>
<li>
<p>In UNIX</p>
<pre>orapwd file=$ORACLE_HOME/dbs/orapwORACLE_SID entries=200
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>In Microsoft Windows</p>
<pre>orapwd file=%ORACLE_HOME%\database\PWDORACLE_SID.ora entries=200
Enter password: <span class="italic">password</span>
</pre></li>
</ul>
<p>In this case, <code>file</code> is the name of the password file, <code><span class="codeinlineitalic">password</span></code> is the password for user <code>SYS</code>. It can be altered using the <code>ALTER USER</code> statement in SQL Plus. You should set <code>entries</code> to a value higher than the number of entries you expect.</p>
<p>The syntax for the password file name is different on Microsoft Windows and UNIX.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN" href="../ADMIN/toc.htm"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a></div>
</li>
<li>
<p>Enable remote login as <code>SYSDBA</code>. This step grants <code>SYSDBA</code> and <code>SYSOPER</code> system privileges to individual users and lets them connect as themselves.</p>
<p>Stop the database, and add the following line to <code>init</code><code><span class="codeinlineitalic">service_name</span></code><code>.ora</code>, in UNIX, or <code>init.ora</code>, in Microsoft Windows:</p>
<pre>remote_login_passwordfile=exclusive
</pre>
<p>The <code>init</code><code><span class="codeinlineitalic">service_name</span></code><code>.ora</code> file is located at <code><span class="codeinlineitalic">ORACLE_HOME</span></code><code>/dbs/</code> and also at <code><span class="codeinlineitalic">ORACLE_HOME</span></code><code>/admin/db_name/pfile/</code>. Ensure that you keep the two files synchronized.</p>
<p>The <code>init.ora</code> file is located at <code>%ORACLE_BASE%\ADMIN\db_name\pfile\</code>.</p>
</li>
<li>
<p>Change the password for the <code>SYS</code> user. This is an optional step.</p>
<pre><span class="bold">PASSWORD sys</span>
       Changing password for sys
New password: <span class="italic">password</span>
Retype new password: <span class="italic">password</span>
</pre></li>
<li>
<p>Verify whether <code>SYS</code> has the <code>SYSDBA</code> privilege.</p>
<pre>SQL&gt; select * from v$pwfile_users;
USERNAME                         SYSDB        SYSOP
----------------------           ---------    ---------
SYS                              TRUE         TRUE
</pre></li>
<li>
<p>Restart the remote database.</p>
</li>
</ol>
<div id="JJDBC28284" class="example">
<p class="titleinexample"><a id="sthref348"></a>Example 8-1 Using SYS Login To Make a Remote Connection</p>
<pre>//This example works regardless of language settings of the database.
 /** case of remote connection using sys **/
import java.sql.*;
import oracle.jdbc.*;
import oracle.jdbc.pool.*;
// create an OracleDataSource
OracleDataSource ods = new OracleDataSource();
// set connection properties
java.util.Properties prop = new java.util.Properties();
prop.put(&#34;user&#34;, &#34;sys&#34;);
prop.put(&#34;password&#34;, &#34;sys&#34;);
prop.put(&#34;internal_logon&#34;, &#34;sysoper&#34;);
ods.setConnectionProperties(prop);
// set the url
// the url can use oci driver as well as:
// url = &#34;jdbc:oracle:oci8:@remotehost&#34;; the remotehost is a remote database
String url = &#34;jdbc:oracle:thin:@//localhost:5221/orcl&#34;;
ods.setURL(url);
// get the connection
Connection conn = ods.getConnection();
...
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CHDJICFH"></a>
<div id="JJDBC28285" class="sect2">
<h3 class="sect2">Bequeath Connection and SYS Logon</h3>
<p>The following example illustrates how to use the <code>internal_logon</code> and <code>SYSDBA</code> arguments to specify the <code>SYS</code> login. This example works regardless of the database&#39;s national-language settings of the database.</p>
<pre>/** Example of bequeath connection **/
import java.sql.*;
import oracle.jdbc.*;
import oracle.jdbc.pool.*;
 
// create an OracleDataSource instance
OracleDataSource ods = new OracleDataSource();
 
// set neccessary properties
java.util.Properties prop = new java.util.Properties();
prop.put(&#34;user&#34;, &#34;sys&#34;);
prop.put(&#34;password&#34;, &#34;sys&#34;);
prop.put(&#34;internal_logon&#34;, &#34;sysdba&#34;);
ods.setConnectionProperties(prop);
 
// the url for bequeath connection
String url = &#34;jdbc:oracle:oci8:@&#34;;
ods.setURL(url);
 
// retrieve the connection
Connection conn = ods.getConnection();
... 
</pre></div>
<!-- class="sect2" -->
<a id="CHDJHCFE"></a>
<div id="JJDBC28286" class="sect2">
<h3 class="sect2">Properties for Oracle Performance Extensions</h3>
<p>Some of the connection properties are for use with Oracle performance extensions. Setting these properties is equivalent to using corresponding methods on the <code>OracleConnection</code> object, as follows:</p>
<ul>
<li>
<p>Setting the <code>defaultRowPrefetch</code> property is equivalent to calling <code>setDefaultRowPrefetch</code>.</p>
</li>
<li>
<p>Setting the <code>remarksReporting</code> property is equivalent to calling <code>setRemarksReporting</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oraperf.htm#i1023518">&#34;Reporting DatabaseMetaData TABLE_REMARKS&#34;</a></div>
</li>
<li>
<p>Setting the <code>defaultBatchValue</code> property is equivalent to calling <code>setDefaultExecuteBatch</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oraperf.htm#i1058859">&#34;Oracle Update Batching&#34;</a></div>
</li>
</ul>
<p class="subhead2"><a id="JJDBC28287"></a>Example</p>
<p>The following example shows how to use the <code>put</code> method of the <a id="sthref349"></a><a id="sthref350"></a><code>java.util.Properties</code> class, in this case, to set Oracle performance extension parameters.</p>
<pre>//import packages and register the driver
import java.sql.*;
import java.math.*;
import oracle.jdbc.*;
import oracle.jdbc.pool.OracleDataSource;

//specify the properties object
java.util.Properties info = new java.util.Properties();
info.put (&#34;user&#34;, &#34;HR&#34;);
info.put (&#34;password&#34;, &#34;hr&#34;);
info.put (&#34;defaultRowPrefetch&#34;,&#34;20&#34;);
info.put (&#34;defaultBatchValue&#34;, &#34;5&#34;);

//specify the datasource object 
OracleDataSource ods = new OracleDataSource();
ods.setURL(&#34;jdbc:oracle:thin:@//localhost:5221/orcl&#34;);
ods.setUser(&#34;HR&#34;);
ods.setPassword(&#34;hr&#34;);
ods.setConnectionProperties(info);
...
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEIJFHHB"></a>
<div id="JJDBC08200" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Database URLs and Database Specifiers</h2>
<p>Database URLs are strings. The complete URL syntax is:</p>
<pre>jdbc:oracle:<span class="italic">driver_type</span>:[<span class="italic">username</span>/<span class="italic">password</span>]@<span class="italic">database_specifier</span>
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The brackets indicate that the <code><span class="codeinlineitalic">username</span></code><code>/</code><code><span class="codeinlineitalic">password</span></code> pair is optional.</p>
</li>
<li>
<p><code>kprb</code>, the internal server-side driver, uses an implicit connection. Database URLs for the server-side driver end after the <code><span class="codeinlineitalic">driver_type</span></code>.</p>
</li>
</ul>
</div>
<p>The first part of the URL specifies which JDBC driver is to be used. The supported <code><span class="codeinlineitalic">driver_type</span></code> values are <code>thin</code>, <code>oci</code>, and <code>kprb</code>.</p>
<p>The remainder of the URL contains an optional user name and password separated by a slash, an @, and the <a id="sthref351"></a><a id="sthref352"></a><a id="sthref353"></a>database specifier, which uniquely identifies the database to which the application is connected. Some database specifiers are valid only for the JDBC Thin driver, some only for the JDBC OCI driver, and some for both.</p>
<p class="subhead2"><a id="BEIBIECF"></a><a id="JJDBC28289"></a>Support for Internet Protocol Version 6</p>
<p>This release of Oracle JDBC drivers supports Internet Protocol Version 6 (IPv6) addresses in the JDBC URL and machine names that resolve to IPv6 addresses. IPv6 is a new Network layer protocol designed by the Internet Engineering Task Force (IETF) to replace the current version of Internet Protocol, Internet Protocol Version 4 (IPv4). The primary benefit of IPv6 is a large address space, derived from the use of 128-bit addresses. IPv6 also improves upon IPv4 in areas such as routing, network autoconfiguration, security, quality of service, and so on.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>An IPv6 Client can support only IPv6 Servers or servers with dual protocol support, that is, support for both IPv6 and IPv4 protocols. Conversely, an IPv6 Server can support only IPv6 clients or dual protocol clients.</p>
</li>
<li>
<p>IPv6 is supported only with single instance Database servers and not with Oracle RAC.</p>
</li>
</ul>
</div>
<p>If you want to use a literal IPv6 address in a URL, then you should enclose the literal address enclosed in a left bracket (<code>[</code>) and a right bracket (<code>]</code>). For example: <code>[2001:0db8:7654:3210:FEDC:BA98:7654:3210]</code>. So, a JDBC URL, using an IPv6 address will look like the following:</p>
<pre>  jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)
    (HOST=[2001:0db8:7654:3210:FEDC:BA98:7654:3210])(PORT=5521))
    (CONNECT_DATA=(SERVICE_NAME=sales.example.com))
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
All the new System classes that are required for IPv6 support are loaded when Java is enabled during database initialization. So, if your application does not have any IPv6 addressing, then you do not need to change your code to use IPv6 functionality. However, if your application has either IPv6 only or both IPv6 and IPv4 addressing, then you should set the java.net.preferIPv6Addresses system property in the command line. This enables the Oracle JVM to load appropriate libraries. These libraries are loaded once and cannot be reloaded without restarting the Java process. For more information about this system property, refer to <a class="olink JJDEV01410" href="../JJDEV/chone.htm#JJDEV01410"><span class="italic">Oracle Database Java Developer&#39;s Guide</span></a>.</div>
<p class="subhead2"><a id="JJDBC28290"></a>Database Specifiers</p>
<p><a href="#BEICDECB">Table 8-3</a>, shows the possible database specifiers, listing which JDBC drivers support each specifier.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Starting Oracle Database 10<span class="italic">g</span>, Oracle Service IDs are not supported.</p>
</li>
<li>
<p>Starting Oracle Database 10<span class="italic">g</span>, Oracle no longer supports Oracle Names as a naming method.</p>
</li>
</ul>
</div>
<div id="JJDBC28291" class="tblformal">
<p class="titleintable"><a id="sthref354"></a><a id="BEICDECB"></a>Table 8-3 Supported Database Specifiers</p>
<table class="cellalignment2244" title="Supported Database Specifiers" summary="table" dir="ltr">
<thead>
<tr class="cellalignment2238">
<th class="cellalignment2245" id="r1c1-t18">Specifier</th>
<th class="cellalignment2245" id="r1c2-t18">Supported Drivers</th>
<th class="cellalignment2245" id="r1c3-t18">Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r2c1-t18" headers="r1c1-t18">
<p>Oracle Net connection descriptor</p>
</td>
<td class="cellalignment2246" headers="r2c1-t18 r1c2-t18">
<p>Thin, OCI</p>
</td>
<td class="cellalignment2246" headers="r2c1-t18 r1c3-t18">
<p>Thin, using an address list:</p>
<pre>url=&#34;jdbc:oracle:thin:@(DESCRIPTION=
  (LOAD_BALANCE=on)
(ADDRESS_LIST=
  (ADDRESS=(PROTOCOL=TCP)(HOST=host1) (PORT=5221))
 (ADDRESS=(PROTOCOL=TCP)(HOST=host2)(PORT=5221)))
 (CONNECT_DATA=(SERVICE_NAME=orcl)))&#34;
</pre>
<p>OCI, using a cluster:</p>
<pre>&#34;jdbc:oracle:oci:@(DESCRIPTION=
  (ADDRESS=(PROTOCOL=TCP)(HOST=cluster_alias)
    (PORT=5221))
    (CONNECT_DATA=(SERVICE_NAME=orcl)))&#34; 
</pre></td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r3c1-t18" headers="r1c1-t18">
<p>Thin-style service name</p>
</td>
<td class="cellalignment2246" headers="r3c1-t18 r1c2-t18">
<p>Thin</p>
</td>
<td class="cellalignment2246" headers="r3c1-t18 r1c3-t18">
<p>Refer to <a href="#BEIDHCBA">&#34;Thin-style Service Name Syntax&#34;</a> for details.</p>
<pre>&#34;jdbc:oracle:thin:HR/hr@//localhost:5221/orcl&#34;
</pre></td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r4c1-t18" headers="r1c1-t18">
<p>LDAP syntax</p>
</td>
<td class="cellalignment2246" headers="r4c1-t18 r1c2-t18">
<p>Thin</p>
</td>
<td class="cellalignment2246" headers="r4c1-t18 r1c3-t18">
<p>Refer to <a href="#CHDBICFA">LDAP Syntax</a> for details.</p>
<pre>&#34;jdbc:oracle:thin:@ldap://ldap.example.com:7777/sales,cn=OracleContext,dc=com&#34;
</pre></td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r5c1-t18" headers="r1c1-t18">
<p>Bequeath connection</p>
</td>
<td class="cellalignment2246" headers="r5c1-t18 r1c2-t18">
<p>OCI</p>
</td>
<td class="cellalignment2246" headers="r5c1-t18 r1c3-t18">
<p>Empty. That is, nothing after @</p>
<pre>&#34;jdbc:oracle:oci:HR/hr/@&#34;
</pre></td>
</tr>
<tr class="cellalignment2238">
<td class="cellalignment2246" id="r6c1-t18" headers="r1c1-t18">
<p>TNSNames alias</p>
</td>
<td class="cellalignment2246" headers="r6c1-t18 r1c2-t18">
<p>Thin, OCI</p>
</td>
<td class="cellalignment2246" headers="r6c1-t18 r1c3-t18">
<p>Refer to <a href="#BEIDIJCE">&#34;TNSNames Alias Syntax&#34;</a> for details.</p>
<pre>OracleDataSource ods = new OracleDataSource();
ods.setTNSEntryName(&#34;MyTNSAlias&#34;);
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="BEIDHCBA"></a><a id="JJDBC28292"></a>Thin-style Service Name Syntax</p>
<p>Thin-style service names are supported only by the JDBC Thin driver. The syntax is:</p>
<pre>@//host_name:port_number/service_name
</pre>
<p>For example:</p>
<pre>jdbc:oracle:thin:HR/hr@//localhost:5221/orcl
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The JDBC Thin driver supports only the <a id="sthref355"></a>TCP/IP protocol.</div>
<p class="subhead2"><a id="CHDCDGJD"></a>Support for Delay in Connection Retries</p>
<p>Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2) introduces a new connection attribute <code>RETRY_DELAY</code>. The <code><a id="sthref356"></a>RETRY_DELAY</code> attribute specifies the delay between connection retries in seconds. The following code snippet shows how to use this attribute:</p>
<pre>(DESCRIPTION_LIST=
  (DESCRIPTION=
   (CONNECT_TIMEOUT=10)(RETRY_COUNT=3)(RETRY_DELAY=3)
   (ADDRESS_LIST=
    (ADDRESS=(PROTOCOL=tcp)(HOST=myhost1)(PORT=1521))
    (ADDRESS=(PROTOCOL=tcp)(HOST=myhost2)(PORT=1521)))
   (CONNECT_DATA=(SERVICE_NAME=example1.com)))
  (DESCRIPTION=
   (CONNECT_TIMEOUT=60)(RETRY_COUNT=1)(RETRY_DELAY=5)
   (ADDRESS_LIST=
    (ADDRESS=(PROTOCOL=tcp)(HOST=myhost3)(PORT=1521))
    (ADDRESS=(PROTOCOL=tcp)(HOST=myhost4)(PORT=1521)))
   (CONNECT_DATA=(SERVICE_NAME=example2.com))))
</pre>
<p class="subhead2"><a id="BEIDIJCE"></a><a id="JJDBC28293"></a>TNSNames Alias Syntax</p>
<p>You can find the available <code>TNSNAMES</code> entries listed in the <code>tnsnames.ora</code> file on the client computer from which you are connecting. On Windows, this file is located in the <code><span class="codeinlineitalic">ORACLE_HOME</span></code><code>\NETWORK\ADMIN</code> directory. On UNIX systems, you can find it in the <code><span class="codeinlineitalic">ORACLE_HOME</span></code> directory or the directory indicated in your <code>TNS_ADMIN</code> environment variable.</p>
<p>For example, if you want to connect to the database on host <code>myhost</code> as user <code>HR</code> with password <code>hr</code> that has a <code>TNSNAMES</code> entry of <code>MyHostString</code>, then write the following:</p>
<pre>OracleDataSource ods = new OracleDataSource();
ods.setTNSEntryName(&#34;MyTNSAlias&#34;);
ods.setUser(&#34;HR&#34;);
ods.setPassword(&#34;hr&#34;);
ods.setDriverType(&#34;oci&#34;);
Connection conn = ods.getConnection();
</pre>
<p>The <code>oracle.net.tns_admin</code> system property must be set to the location of the <code>tnsnames.ora</code> file so that the JDBC Thin driver can locate the <code>tnsnames.ora</code> file. For example:</p>
<pre>System.setProperty(&#34;oracle.net.tns_admin&#34;, &#34;c:\\Temp&#34;);
String url = &#34;jdbc:oracle:thin:@tns_entry&#34;;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
When using <code>TNSNames</code> with the JDBC Thin driver, you must set the <code>oracle.net.tns_admin</code> property to the directory that contains your <code>tnsnames.ora</code> file.
<pre>java -Doracle.net.tns_admin=$ORACLE_HOME/network/admin
</pre></div>
<p class="subhead2"><a id="CHDBICFA"></a><a id="JJDBC28294"></a><a id="sthref357"></a><a id="sthref358"></a><a id="sthref359"></a>LDAP Syntax</p>
<p>An example of database specifier using the Lightweight Directory Access Protocol (LDAP) syntax is as follows:</p>
<pre>&#34;jdbc:oracle:thin:@ldap://ldap.example.com:7777/sales,cn=OracleContext,dc=com&#34;
</pre>
<p>When using SSL, change this to:</p>
<pre>&#34;jdbc:oracle:thin:@ldaps://ldap.example.com:7777/sales,cn=OracleContext,dc=com&#34;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The JDBC Thin driver can use LDAP over SSL to communicate with Oracle Internet Directory if you substitute <code>ldaps:</code> for <code>ldap:</code> in the database specifier. The LDAP server must be configured to use SSL. If it is not, then the connection attempt will hang.</div>
<p>The JDBC Thin driver supports failover of a list of LDAP servers during the service name resolution process, without the need for a hardware load balancer. Also, client-side load balancing is supported for connecting to LDAP servers. A list of space separated LDAP URLs syntax is used to support failover and load balancing.</p>
<p>When a list of LDAP URLs is specified, both failover and load balancing are enabled by default. The <code>oracle.net.ldap_loadbalance</code> connection property can be used to disable load balancing, and the <code>oracle.net.ldap_failover</code> connection property can be used to disable failover.</p>
<p>An example, which uses failover, but with client-side load balancing disabled, is as follows:</p>
<pre>Properties prop = new Properties();
String url = &#34;jdbc:oracle:thin:@ldap://ldap1.example.com:3500/cn=salesdept,cn=OracleContext,dc=com/salesdb &#34; +
&#34;ldap://ldap2.example.com:3500/cn=salesdept,cn=OracleContext,dc=com/salesdb &#34; +
&#34;ldap://ldap3.example.com:3500/cn=salesdept,cn=OracleContext,dc=com/salesdb&#34;;

prop.put(&#34;oracle.net.ldap_loadbalance&#34;, &#34;OFF&#34; );
OracleDataSource ods = new OracleDataSource();
ods.setURL(url);
ods.setConnectionProperties(prop);
</pre>
<p>The JDBC Thin driver supports LDAP nonanonymous bind. A set of JNDI environment properties, which contains authentication information, can be specified for a data source. If an LDAP server is configured as not to allow anonymous bind, then authentication information must be provided to connect to the LDAP server. The following example shows a simple clear-text password authentication:</p>
<pre>String url = &#34;jdbc:oracle:thin:@ldap://ldap.example.com:7777/sales,cn=salesdept,cn=OracleContext,dc=com&#34;;

Properties prop = new Properties();
prop.put(&#34;java.naming.security.authentication&#34;, &#34;simple&#34;);
prop.put(&#34;java.naming.security.principal&#34;,&#34;cn=salesdept,cn=OracleContext,dc=com&#34;);
prop.put(&#34;java.naming.security.credentials&#34;, &#34;mysecret&#34;);

OracleDataSource ods = new OracleDataSource();
ods.setURL(url);
ods.setConnectionProperties(prop);
</pre>
<p>Since JDBC passes down the three properties to JNDI, the authentication mechanism chosen by client is consistent with how these properties are interpreted by JNDI. For example, if the client specifies authentication information without explicitly specifying the <code>java.naming.security.authentication</code> property, then the default authentication mechanism is &#34;simple&#34;. Please refer to relevant JDNI documentation for details.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2237">
<tr>
<td class="cellalignment2246">
<table class="cellalignment2242">
<tr>
<td class="cellalignment2241"><a href="part3.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2241"><a href="clntsec.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2249">
<table class="cellalignment2240">
<tr>
<td class="cellalignment2241"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2241"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2241"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2241"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2241"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2241"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>