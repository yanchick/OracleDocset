<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-70983"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Diagnosability%20in%20JDBC"></a><title>Diagnosability in JDBC</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="This book describes how to use Oracle JDBC drivers to develop powerful Java database applications."/>
<meta name="dcterms.created" content="2014-06-30T1:22:37Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database JDBC Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49300-05"/>
<meta name="dcterms.isVersionOf" content="JJDBC"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="dbmgmnt.htm" title="Previous" type="text/html"/>
<link rel="Next" href="dmsmtrc.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49300-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">47/55</span> <!-- End Header -->
<div id="JJDBC28885" class="chapter"><a id="CIABGGBD"></a>
<h1 class="chapter"><span class="secnum">32</span> Diagnosability in JDBC</h1>
<p>The diagnosabilty features of Oracle Database 12<span class="italic">c</span> Release 1 (12.1) enable you to diagnose problems in the applications that use Oracle JDBC drivers and the problems in the drivers themselves. They also reduce the effort required to develop and maintain Java applications that access an Oracle Database instance using Oracle JDBC drivers.</p>
<p>Oracle JDBC drivers provide the following diagnosabilty features that enable users to identify and fix problems in their JDBC applications:</p>
<ul>
<li>
<p><a href="#CIAGBGFI">Logging</a></p>
</li>
<li>
<p><a href="#CIAIEEFF">Diagnosability Management</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The diagnosability features of the JDBC drivers are based on the standard <code>java.util.logging</code> framework and the <code>javax.management</code> MBean framework. Information about these standard frameworks is not covered in this document. For more information about these standard frameworks refer to
<pre><a href="http://www.oracle.com/technetwork/java/index.html">http://www.oracle.com/technetwork/java/index.html</a>
</pre></div>
<a id="CIAGBGFI"></a>
<div id="JJDBC28886" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Logging</h2>
<p>This feature logs information about events that occur when JDBC driver code runs. Events can include user-visible events, such as SQL exceptions, running of SQL statements, and detailed JDBC internal events, such as entry to and exit from internal JDBC methods. Users can enable this feature to log specific events or all the events.</p>
<p>Prior to Oracle Database 11<span class="italic">g</span>, JDBC drivers supported J2SE 2.0 and 3.0. These versions of J2SE did not include <code>java.util.logging</code>. Therefore, the logging feature provided by JDBC driver releases prior to Oracle Database 11<span class="italic">g</span>, differs from the <code>java.util.logging</code> framework.</p>
<p>Starting from Oracle Database 11<span class="italic">g</span>, the JDBC drivers no longer support J2SE 2.0 and 3.0. Therefore, the logging feature of JDBC drivers makes full use of the standard <code>java.util.logging</code> package. The enhanced logging system makes effective use of log levels to enable users to restrict log output to things of interest. It logs specific classes of information more consistently, making it easier for the user to understand the log file.</p>
<p>This feature does not introduce new APIs or configuration files. Only new parameters are added to the existing standard <code>java.util.logging</code> configuration file. These parameters are identical in use to the existing parameters and are intrinsic to using <code>java.util.logging</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle does not guarantee the exact content of the generated logs. To a large extent the log content is dependent on the details of the implementation. The details of the implementation change with every release, and therefore, the exact content of the logs are likely to change from release to release.</div>
<div id="JJDBC28887" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref982"></a>
<h3 class="sect2">Enabling and Using JDBC Logging</h3>
<p>Before you can start debugging your Java application, you must enable and configure JDBC logging. This section covers the steps you must perform to enable and use JDBC logging. It describes the following:</p>
<ul>
<li>
<p><a href="#CIAIDJJG">Configuring the CLASSPATH</a></p>
</li>
<li>
<p><a href="#CIAIGACD">Enabling Logging</a></p>
</li>
<li>
<p><a href="#CIAIDFIC">Configuring Logging</a></p>
</li>
<li>
<p><a href="#CIAIDFEI">Using Loggers</a></p>
</li>
<li>
<p><a href="#CIADHBFG">Example</a></p>
</li>
</ul>
<a id="CIAIDJJG"></a>
<div id="JJDBC28888" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring the CLASSPATH</h4>
<p>Oracle ships several JAR files for each version of the JDBC drivers. The optimized JAR files do not contain any logging code and, therefore, do not generate any log output when used. To get log output, you must use the debug JAR files, which are indicated with a &#34;_g&#34; in the file name, like <code>ojdbc6_g.jar</code> or <code>ojdbc7_g.jar</code>. The debug JAR file must be included in the <code>CLASSPATH</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Ensure that the debug JAR file, say <code>ojdbc6_g.jar</code> or <code>ojdbc7_g.jar</code>, is the only Oracle JDBC JAR file in the <code>CLASSPATH</code>.</div>
</div>
<!-- class="sect3" -->
<a id="CIAIGACD"></a>
<div id="JJDBC28889" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Enabling Logging</h4>
<p>You can enable logging in the following ways:</p>
<ul>
<li>
<p>Setting a Java system property</p>
<p>You can enable logging by setting the <code>oracle.jdbc.Trace</code> system property.</p>
<pre>java -Doracle.jdbc.Trace=true ...
</pre>
<p>Setting the system property enables global logging, which means that logging is enabled for the entire application. You can use global logging if you want to debug the entire application, or if you cannot or do not want to change the source code of the application.</p>
</li>
<li>
<p>Programmatically</p>
<p>You can programmatically enable or disable logging in the following way:</p>
<p>First, get the <code>ObjectName</code> of the Diagnosability MBean. The <code>ObjectName</code> is</p>
<pre>com.oracle.jdbc:type=diagnosability,name=&lt;loader&gt;
</pre>
<p>Here, <code>loader</code> is a unique name based on the class loader instance that loaded the Oracle JDBC drivers.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The drivers can be loaded multiple times in a single VM. So, there can be multiple MBeans, each with a unique name.</div>
<p>Now, write the following lines of code:</p>
<pre>ClassLoader l = oracle.jdbc.OracleDriver.getClassLoader();
String loader = l.getName() + &#34;@&#34; + l.hashCode();
// compute the ObjectName
javax.management.ObjectName name = new javax.management.ObjectName(&#34;com.oracle.jdbc:type=diagnosability,
name=&#34;+loader);

// get the MBean server
javax.management.MBeanServer mbs = java.lang.management.ManagementFactory.getPlatformMBeanServer();

// find out if logging is enabled or not
System.out.println(&#34;LoggingEnabled = &#34; + mbs.getAttribute(name, &#34;LoggingEnabled&#34;));

// enable logging
mbs.setAttribute(name, new javax.management.Attribute(&#34;LoggingEnabled&#34;, true));

// disable logging
mbs.setAttribute(name, new javax.management.Attribute(&#34;LoggingEnabled&#34;, false));
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>If the same class loader loads the JDBC drivers multiple times, then each subsequent MBean increments the value of the <code>l.hashCode()</code> method, so as to create a unique name. It may be problematic to identify which MBean is associated with which JDBC driver instance.</p>
</li>
<li>
<p>If there is only one instance of the JDBC drivers loaded, then set the name to &#34;*&#34;.</p>
</li>
</ul>
</div>
</li>
</ul>
<p>Programmatic enabling and disabling of logging helps you to control what parts of your application need to generate log output.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Enabling logging using either of the methods would only generate a minimal log of serious errors. Usually this is not of much use. To generate a more useful and detailed log, you must configure <code>java.util.logging</code>.</div>
</div>
<!-- class="sect3" -->
<a id="CIAIDFIC"></a>
<div id="JJDBC28890" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring Logging</h4>
<p>To generate a useful and detailed log, you must configure <code>java.util.logging</code>. This can be done either through a configuration file or programmatically.</p>
<p>A sample configuration file, <code>OracleLog.properties</code>, is provided as part of the JDBC installation in the <code>demo</code> directory. It contains basic information about how to configure <code>java.util.logging</code> and provides some initial settings that you can start with. You may use this sample file as is, edit the file and use it, rename the file and edit it, or create an entirely new file of any name.</p>
<p>To use a configuration file, you must identify it to the Java run-time. This can be done by setting a system property. For example:</p>
<pre>java -Djava.util.logging.config.file=/jdbc/demo/OracleLog.properties.
</pre>
<p>It is read by the <code>java.util.logging</code> system. This file can reside anywhere.</p>
<p>You can use both <code>java.util.logging.config.file</code> and <code>oracle.jdbc.Trace</code> at the same time.</p>
<pre>java -Djava.util.logging.config.file=/jdbc/demo/OracleLog.properties -Doracle.jdbc.Trace=true
</pre>
<p>You can use the default <code>OracleLog.properties</code> file. It may or may not get you the desired output. You can also create and use your own configuration file by following these steps:</p>
<ol>
<li>
<p>Create a file named <code>myConfig.properties</code>. You can use any name you choose.</p>
</li>
<li>
<p>Insert the following lines of text in the file:</p>
<pre>.level=SEVERE
oracle.jdbc.level=INFO
oracle.jdbc.handlers=java.util.logging.ConsoleHandler
java.util.logging.ConsoleHandler.level=INFO
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
</pre></li>
<li>
<p>Save the file.</p>
</li>
<li>
<p>Set the system property to use this configuration file.</p>
<pre>java -Djava.util.logging.config.file=&lt;<span class="italic">filepath</span>&gt;/myConfig.properties ...
</pre>
<p><code><span class="codeinlineitalic">filepath</span></code> is the path of the folder where you have saved the <code>myConfig.properties</code> file.</p>
</li>
</ol>
<p>You can also configure <code>java.util.logging</code> to dump the log output into a file. To do so, modify the configuration file as follows:</p>
<pre>.level=SEVERE
oracle.jdbc.level=INFO
oracle.jdbc.handlers=java.util.logging.FileHandler
java.util.logging.FileHandler.level=INFO
java.util.logging.FileHandler.pattern=jdbc.log
java.util.logging.FileHandler.count=1
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
</pre>
<p>This will generate exactly the same log output and save it in a file named <code>jdbc.log</code> in the current directory.</p>
<p>You can control the amount of detail by changing the level settings. The defined levels from the least detailed to the most detailed are the following:</p>
<ul>
<li>
<p><code>OFF</code></p>
<p>Turns off logging.</p>
</li>
<li>
<p><code>SEVERE</code></p>
<p>Logs SQLExceptions and internal errors.</p>
</li>
<li>
<p><code>WARNING</code></p>
<p>Logs SQLWarnings and bad but not fatal internal conditions.</p>
</li>
<li>
<p><code>INFO</code></p>
<p>Logs infrequent but significant events and errors. It produces a relatively low volume of log messages.</p>
</li>
<li>
<p><code>CONFIG</code></p>
<p>Logs SQL strings that are executed.</p>
</li>
<li>
<p><code>FINE</code></p>
<p>Logs the entry and exit to every public method providing a detailed trace of JDBC operations. It produces a fairly high volume of log messages.</p>
</li>
<li>
<p><code>FINER</code></p>
<p>Logs calls to internal methods.</p>
</li>
<li>
<p><code>FINEST</code></p>
<p>Logs calls to high volume internal methods.</p>
</li>
<li>
<p><code>ALL</code></p>
<p>Logs all the details. This is the most detailed level of logging.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Levels more detailed than <code>FINE</code> generate huge log volumes.</div>
<p>In the example provided earlier, to reduce the amount of detail, change the <code>java.util.logging.FileHandler.level</code> setting from <code>ALL</code> to <code>INFO</code>:</p>
<pre>java.util.logging.FileHandler.level=INFO
</pre>
<p>Although you can, it is not necessary to change the level of the <code>oracle.jdbc</code> logger. Setting the <code>FileHandler</code> level will control what log messages are dumped into the log file.</p>
</div>
<!-- class="sect3" -->
<a id="CIAIDFEI"></a>
<div id="JJDBC28891" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Using Loggers</h4>
<p>Setting the level reduces all the logging output from JDBC. However, sometimes you need a lot of output from one part of the code and very little from other parts. To do that you must understand more about loggers.</p>
<p>Loggers exist in a tree structure defined by their names. The root logger is named &#34;&#34;, the empty string. If you look at the first line of the configuration file you see <code>.level=SEVERE</code>. This is setting the level of the root logger. The next line is <code>oracle.jdbc.level=INFO</code>. This sets the level of the logger named <code>oracle.jdbc</code>. The <code>oracle.jdbc</code> logger is a member of the logger tree. Its parent is named <code>oracle</code>. The parent of the <code>oracle</code> logger is the root logger (the empty string).</p>
<p>Logging messages are sent to a particular logger, for example, <code>oracle.jdbc</code>. If the message passes the level check at that level, then the message is passed to the handler at that level, if any, and to the parent logger. So a log message sent to <code>oracle.log</code> is compared against that logger&#39;s level, <code>INFO</code> if you are following along. If the level is the same or less (less detailed) then it is sent to the FileHandler and to the parent logger, &#39;oracle&#39;. Again it is checked against the level. If as in this case, the level is not set then it uses the parent level, <code>SEVERE</code>. If the message level is the same or less it is passed to the handler, which there is not one, and sent to the parent. In this case the parent in the root logger.All this tree structure did not help you reduce the amount of output. What will help is that the JDBC drivers use several subloggers. If you restrict the log messages to one of the subloggers you will get substantially less output. The loggers used by Oracle JDBC drivers include the following:</p>
<ul>
<li>
<p><code>oracle.jdbc</code></p>
</li>
<li>
<p><code>oracle.jdbc.pool</code></p>
</li>
<li>
<p><code>oracle.jdbc.rowset</code></p>
</li>
<li>
<p><code>oracle.jdbc.xa</code></p>
</li>
<li>
<p><code>oracle.sql</code></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The loggers used by the drivers may vary from release to release.</div>
</div>
<!-- class="sect3" -->
<a id="CIADHBFG"></a>
<div id="JJDBC28892" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Example</h4>
<p>Suppose you want to trace what is happening in the <code>oracle.sql</code> component and also want to capture some basic information about the rest of the driver. This is a more complex use of logging. The following are the entries in the <code>config</code> file:</p>
<pre>     # 
     # set levels 
     # 
.level=SEVERE
oracle.level=INFO
oracle.jdbc.driver.level=INFO
oracle.jdbc.pool.level=OFF
oracle.jdbc.util.level=OFF
oracle.sql.level=INFO
     # 
     # configure handlers
     # 
oracle.handlers=java.util.logging.ConsoleHandler
java.util.logging.ConsoleHandler.level=INFO
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
</pre>
<p>Let us consider what each line in the configuration file is doing.</p>
<pre>.level=SEVERE
</pre>
<p>Sets the logging level of the root logger to <code>SEVERE</code>. We do not want to see any logging from other, non-Oracle components unless something fails badly. Therefore, we set the default level for all loggers to <code>SEVERE</code>. Each logger inherits its level from its parent unless set explicitly. By setting the level of the root logger to <code>SEVERE</code> we ensure that all other loggers inherit that level except for the ones we set otherwise.</p>
<pre>oracle.level=INFO
</pre>
<p>We want log output from both the <code>oracle.sql</code> and <code>oracle.jdbc.driver</code> loggers. Their common ancestor is <code>oracle</code>. Therefore, we set the level of the <code>oracle</code> logger to <code>INFO</code>. We will control the detail more explicitly at lower levels.</p>
<pre>oracle.jdbc.driver.level=INFO
</pre>
<p>We only want to see the SQL execution from <code>oracle.jdbc.driver</code>. Therefore, we set the level to <code>INFO</code>. This is a fairly low volume level, but will help us to keep track of what our test is doing.</p>
<pre>oracle.jdbc.pool.level=OFF
</pre>
<p>We are using a <code>DataSource</code> in our test and do not want to see all of that logging. Therefore, we turn it <code>OFF</code>.</p>
<pre>oracle.jdbc.util.level=OFF
</pre>
<p>We do not want to see the logging from the <code>oracle.jdbc.util</code> package. If we were using XA or row sets we would turn them off as well.</p>
<pre>oracle.sql.level=INFO
</pre>
<p>We want to see what is happening in <code>oracle.sql</code>. Therefore, we set the level to <code>INFO</code>. This provides a lot of information about the public method calls without overwhelming detail.</p>
<pre>oracle.handlers=java.util.logging.ConsoleHandler
</pre>
<p>We are going to dump everything to <code>stderr</code>. When we run the test we will redirect <code>stderr</code> to a file.</p>
<pre>java.util.logging.ConsoleHandler.level=INFO
</pre>
<p>We want to dump everything to the console which is <code>System.err</code>. In this case, we are doing the filtering with the loggers rather than the handler.</p>
<pre>java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
</pre>
<p>We will use a simple, more or less human readable format.</p>
<p>When you run your test with this configuration file, you will get moderately detailed information from the <code>oracle.sql</code> package, a little bit of information from the core driver code, and nothing from any other code.</p>
<p>You can also use <code>XMLFormatter</code> for sending logs to Oracle Support.</p>
<p>You can implement and use a custom <code>java.util.logging.Filter</code> to obtain finer control of the data captured in the logs. This is a standard <code>java.util.logging</code> feature and is documented in the JSE JavaDoc. A custom Filter enables you to:</p>
<ul>
<li>
<p>Capture only one thread in multithreaded applications</p>
</li>
<li>
<p>Capture intermittent errors in long running applications</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="JJDBC28893" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref983"></a>
<h3 class="sect2">Performance, Scalability, and Security Issues</h3>
<p>Although the logging feature enables you to trace or debug your application and generate detail log output, it has certain performance, scalability, and security issues.</p>
<p class="subhead2"><a id="JJDBC28894"></a>Performance and Scalability Issues</p>
<p>Logging has substantial impact on performance. However, JDBC logging is generally not enabled in production systems. When logging is disabled, it will have no impact on performance.</p>
<p>It also has a negative impact on scalability. Logging involves protected access to a number of shared resources resulting in severely reduced scalability. This is intrinsic to the <code>java.util.logging</code> framework. However, in a typical production system, JDBC logging is not enabled and, therefore, will not have an impact on scalability.</p>
<p class="subhead2"><a id="JJDBC28895"></a>Security Concerns</p>
<p>When full logging is enabled, it is almost guaranteed that all sensitive information will be exposed in the log files. This is intrinsic to the logging feature. However, only certain JDBC JAR files include the JDBC logging feature. The following JAR files include full logging and should not be used in a sensitive environment:</p>
<ul>
<li>
<p><code>ojdbc6_g.jar</code></p>
</li>
<li>
<p><code>ojdbc6dms_g.jar</code></p>
</li>
<li>
<p><code>ojdbc7_g.jar</code></p>
</li>
<li>
<p><code>ojdbc7dms_g.jar</code></p>
</li>
</ul>
<p>The following JAR files include a limited logging capability:</p>
<ul>
<li>
<p><code>ojdbc6dms.jar</code></p>
</li>
<li>
<p><code>ojdbc7dms.jar</code></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Database user names and passwords do not appear in log files created by these JAR files. However, sensitive user data that is part of a SQL statement, a defined value, or a bind value can appear in a log created using one of these JAR files.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIAIEEFF"></a>
<div id="JJDBC28897" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Diagnosability Management</h2>
<p>The JDBC diagnosability management feature introduces an MBean, <code>oracle.jdbc.driver.OracleDiagnosabilityMBean</code>. This MBean provides means to enable and disable JDBC logging.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For information about the <code>OracleDiagnosabilityMBean</code> API, refer to the JDBC Javadoc.</div>
<p>In future releases, the MBean will be enhanced to provide additional statistics about JDBC internals.</p>
<p class="subhead2"><a id="JJDBC28898"></a>Security Concerns</p>
<p>This feature can enable JDBC logging. Enabling JDBC logging does not require any special permission. However, once logging is enabled, generating any log output requires the standard Java permission <code>LoggingPermission</code>. Without this permission, any JDBC operation that would generate log output will throw a security exception. This is a standard Java mechanism.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2237">
<tr>
<td class="cellalignment2246">
<table class="cellalignment2242">
<tr>
<td class="cellalignment2241"><a href="dbmgmnt.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2241"><a href="dmsmtrc.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2249">
<table class="cellalignment2240">
<tr>
<td class="cellalignment2241"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2241"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2241"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2241"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2241"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2241"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>