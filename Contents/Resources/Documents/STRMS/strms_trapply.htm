<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-104480"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Troubleshooting%20Apply"></a><title>Troubleshooting Apply</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1032"/>
<meta name="dcterms.created" content="2014-12-23T13:28:8Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Streams Concepts and Administration"/>
<meta name="dcterms.identifier" content="E53116-02"/>
<meta name="dcterms.isVersionOf" content="STRMS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="strms_glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="strms_trprop.htm" title="Previous" type="text/html"/>
<link rel="Next" href="strms_trrules.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53116-02.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">44/57</span> <!-- End Header -->
<div id="STRMS1048" class="chapter"><a id="BABHBJHA"></a>
<h1 class="chapter"><span class="secnum">33</span> Troubleshooting Apply</h1>
<p><a id="sthref1380"></a><a id="sthref1381"></a><a id="sthref1382"></a><a id="sthref1383"></a>The following topics describe identifying and resolving common <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> problems in an Oracle Streams environment:</p>
<ul>
<li>
<p><a href="#i1006551">Is the Apply Process Enabled?</a></p>
</li>
<li>
<p><a href="#i1006590">Is the Apply Process Current?</a></p>
</li>
<li>
<p><a href="#i1006619">Does the Apply Process Apply Captured LCRs?</a></p>
</li>
<li>
<p><a href="#i1008878">Is the Apply Process&#39;s Queue Receiving the Messages to be Applied?</a></p>
</li>
<li>
<p><a href="#i1006657">Is a Custom Apply Handler Specified?</a></p>
</li>
<li>
<p><a href="#i1010645">Is the AQ_TM_PROCESSES Initialization Parameter Set to Zero?</a></p>
</li>
<li>
<p><a href="#CACGIBBI">Does the Apply User Have the Required Privileges?</a></p>
</li>
<li>
<p><a href="#i1016334">Is the Apply Process Encountering Contention?</a></p>
</li>
<li>
<p><a href="#CEGCEIBE">Is the Apply Process Waiting for a Dependent Transaction?</a></p>
</li>
<li>
<p><a href="#i1013712">Is an Apply Server Performing Poorly for Certain Transactions?</a></p>
</li>
<li>
<p><a href="#i1013873">Are There Any Apply Errors in the Error Queue?</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#BABFBJDG">&#34;Implicit Consumption with an Apply Process&#34;</a></p>
</li>
<li>
<p><a class="olink STREP206" href="../STREP/capply.htm#STREP206"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about configuring apply</p>
</li>
<li>
<p><a href="strms_mapply.htm#g1026098">Chapter 17, &#34;Managing Oracle Streams Information Consumption&#34;</a></p>
</li>
<li>
<p><a href="strms_apmon.htm#CFFGFJBB">Chapter 26, &#34;Monitoring Oracle Streams Apply Processes&#34;</a></p>
</li>
</ul>
</div>
<a id="i1006551"></a>
<div id="STRMS1049" class="sect1">
<h2 class="sect1">Is the Apply Process Enabled?<a id="sthref1384"></a><a id="sthref1385"></a><a id="sthref1386"></a><a id="sthref1387"></a></h2>
<p>An <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> applies changes only when it is enabled.</p>
<p>You can check whether an apply process is enabled, disabled, or aborted by querying the <code dir="ltr">DBA_APPLY</code> data dictionary view. For example, to check whether an apply process named <code dir="ltr">apply</code> is enabled, run the following query:</p>
<pre dir="ltr">SELECT STATUS FROM DBA_APPLY WHERE APPLY_NAME = &#39;APPLY&#39;;
</pre>
<p>If the apply process is disabled, then your output looks similar to the following:</p>
<pre dir="ltr">STATUS
--------
DISABLED
</pre>
<p>If the apply process is disabled, then try restarting it. If the apply process is aborted, then you might need to correct an error before you can restart it successfully. If the apply process did not shut down cleanly, then it might not restart. In this case, it returns the following error:</p>
<pre dir="ltr">ORA-26666 cannot alter STREAMS process
</pre>
<p>If this happens then, then run the <code dir="ltr">STOP_APPLY</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package with the <code dir="ltr">force</code> parameter set to <code dir="ltr">TRUE</code>. Next, restart the apply process.</p>
<p>To determine why an apply process aborted, query the <code dir="ltr">DBA_APPLY</code> data dictionary view or check the trace files for the apply process. The following query shows when the apply process aborted and the error that caused it to abort:</p>
<pre dir="ltr">COLUMN APPLY_NAME HEADING &#39;APPLY|Process|Name&#39; FORMAT A10
COLUMN STATUS_CHANGE_TIME HEADING &#39;Abort Time&#39;
COLUMN ERROR_NUMBER HEADING &#39;Error Number&#39; FORMAT 99999999
COLUMN ERROR_MESSAGE HEADING &#39;Error Message&#39; FORMAT A40

SELECT APPLY_NAME, STATUS_CHANGE_TIME, ERROR_NUMBER, ERROR_MESSAGE
  FROM DBA_APPLY WHERE STATUS=&#39;ABORTED&#39;;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_mapply.htm#i1006365">&#34;Starting an Apply Process&#34;</a></p>
</li>
<li>
<p><a href="strms_apmon.htm#i1007852">&#34;Displaying Detailed Information About Apply Errors&#34;</a></p>
</li>
<li>
<p><a href="strms_trouble.htm#i1007184">&#34;Checking the Trace Files and Alert Log for Problems&#34;</a></p>
</li>
<li>
<p><a href="ap_other.htm#i1006991">&#34;Apply Processes and Oracle Real Application Clusters&#34;</a> for information about restarting an apply process in an Oracle Real Application Clusters (Oracle RAC) environment</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1006590"></a>
<div id="STRMS1053" class="sect1">
<h2 class="sect1">Is the Apply Process Current?</h2>
<p>If an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> has not applied recent changes, then the problem might be that the apply process has fallen behind. If apply process latency is high, then you might be able to improve performance by adjusting the setting of the <code dir="ltr">parallelism</code> apply process parameter.</p>
<p>You can check apply process latency by querying the <code dir="ltr">V$STREAMS_APPLY_COORDINATOR</code> dynamic performance view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apmon.htm#i1007662">&#34;Determining the Capture to Apply Latency for a Message for Each Apply Process&#34;</a></p>
</li>
<li>
<p><a href="strms_apply.htm#i1007170">&#34;Apply Process Parameters&#34;</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#i1006527">&#34;Setting an Apply Process Parameter&#34;</a></p>
</li>
<li>
<p>The <code dir="ltr">DBMS_APPLY_ADM.SET_PARAMETER</code> procedure in the <a class="olink ARPLS314" href="../ARPLS/d_apply.htm#ARPLS314"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for detailed information about the apply process parameters</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1006619"></a>
<div id="STRMS1054" class="sect1">
<h2 class="sect1">Does the Apply Process Apply Captured LCRs?<a id="sthref1388"></a><a id="sthref1389"></a><a id="sthref1390"></a></h2>
<p>An <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> can apply either <a href="strms_glossary.htm#CHDCHEJI"><span class="xrefglossterm">captured LCR</span></a>s from its <a href="strms_glossary.htm#CHDFJFED"><span class="xrefglossterm">buffered queue</span></a>, or it can apply messages from its <a href="strms_glossary.htm#CBAEIBGJ"><span class="xrefglossterm">persistent queue</span></a>, but not both types of messages. Messages in a persistent queue can be <a href="strms_glossary.htm#CBAGDEIH"><span class="xrefglossterm">persistent LCR</span></a>s and <a href="strms_glossary.htm#CBAGGIDA"><span class="xrefglossterm">persistent user message</span></a>s. An apply process might not be applying messages of a one type because it was configured to apply the other type of messages.</p>
<p>You can check the type of messages applied by an apply process by querying the <code dir="ltr">DBA_APPLY</code> data dictionary view. For example, to check whether an apply process named <code dir="ltr">apply</code> applies <a href="strms_glossary.htm#CHDCHEJI"><span class="xrefglossterm">captured LCR</span></a>s or not, run the following query:</p>
<pre dir="ltr">COLUMN APPLY_CAPTURED HEADING &#39;Type of Messages Applied&#39; FORMAT A25

SELECT DECODE(APPLY_CAPTURED,
                &#39;YES&#39;, &#39;Captured&#39;,
                &#39;NO&#39;,  &#39;Messages from Persistent Queue&#39;) APPLY_CAPTURED
  FROM DBA_APPLY
  WHERE APPLY_NAME = &#39;APPLY&#39;;
</pre>
<p>If the apply process applies captured LCRs, then your output looks similar to the following:</p>
<pre dir="ltr">Type of Messages Applied
-------------------------
Captured
</pre>
<p>If an apply process is not applying the expected type of messages, then you might need to create an apply process to apply these messages.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#i1006172">&#34;Ways to Consume Information with Oracle Streams&#34;</a></p>
</li>
<li>
<p><a class="olink STREP" href="../STREP/toc.htm"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about configuring Oracle Streams replication</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1008878"></a>
<div id="STRMS1056" class="sect1">
<h2 class="sect1">Is the Apply Process&#39;s Queue Receiving the Messages to be Applied?</h2>
<p>An <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> must receive messages in its <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a> before it can apply these messages. Therefore, if an apply process is applying messages captured by a <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> or a <a href="strms_glossary.htm#CBACHEDJ"><span class="xrefglossterm">synchronous capture</span></a>, then the capture process or synchronous capture that captures these messages must be configured properly. If it is a capture process, then it must also be enabled. Similarly, if messages are propagated from one or more databases before reaching the apply process, then each <a href="strms_glossary.htm#CHDEICIC"><span class="xrefglossterm">propagation</span></a> must be enabled and must be configured properly. If a capture process, a synchronous capture, or a propagation on which the apply process depends is not enabled or is not configured properly, then the messages might never reach the apply process&#39;s queue.</p>
<p>The <a href="strms_glossary.htm#CHDCHGGB"><span class="xrefglossterm">rule set</span></a>s used by all <a href="strms_glossary.htm#CHDDDJGJ"><span class="xrefglossterm">Oracle Streams client</span></a>s, including capture processes, synchronous captures, and propagations, determine the behavior of these Oracle Streams clients. Therefore, ensure that the rule sets for any capture processes, synchronous capture, or propagations on which an apply process depends contain the correct <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a>s. If the <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a>s for these Oracle Streams clients are not configured properly, then the apply process&#39;s queue might never receive the appropriate messages. Also, a message traveling through a stream is the composition of all of the transformations done along the path. For example, if a capture process uses <a href="strms_glossary.htm#CHDBCGAG"><span class="xrefglossterm">subset rule</span></a>s and performs <a href="strms_glossary.htm#CHDJICJC"><span class="xrefglossterm">row migration</span></a> during capture of a message, and a propagation uses a <a href="strms_glossary.htm#CHDGHJDE"><span class="xrefglossterm">rule-based transformation</span></a> on the message to change the table name, then, when the message reaches an apply process, the apply process rules must account for these transformations.</p>
<p>In an environment where a capture process or synchronous capture captures changes that are propagated and applied at multiple databases, you can use the following guidelines to determine whether a problem is caused by a capture process, a synchronous capture, or a propagation on which an apply process depends or by the apply process itself:</p>
<ul>
<li>
<p>If no other <a href="strms_glossary.htm#CHDGCAJA"><span class="xrefglossterm">destination database</span></a>s of a capture process or synchronous capture are applying the changes, then the problem is most likely caused by the capture process or synchronous capture, or by a propagation near the capture process. In this case, first ensure that the capture process or synchronous capture is configured properly, and then ensure that the propagations nearest the capture process or synchronous capture are enabled and configured properly. For a capture process, also ensure that the capture process is enabled.</p>
</li>
<li>
<p>If other destination databases of a capture process or synchronous capture are applying the changes, then the problem is most likely caused by the apply process itself or a propagation near the apply process. In this case, first ensure that the apply process is enabled and configured properly, and then ensure that the propagations nearest the apply process are enabled and configured properly.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_trcapture.htm#i1006114">&#34;Troubleshooting Capture Process Problems&#34;</a></p>
</li>
<li>
<p><a href="strms_trprop.htm#BCEJCHJJ">Chapter 32, &#34;Troubleshooting Propagation&#34;</a></p>
</li>
<li>
<p><a href="strms_trrules.htm#BABEHCCE">Chapter 34, &#34;Troubleshooting Rules and Rule-Based Transformations&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1006657"></a>
<div id="STRMS1057" class="sect1">
<h2 class="sect1">Is a Custom Apply Handler Specified?<a id="sthref1391"></a><a id="sthref1392"></a></h2>
<p>You can use <a href="strms_glossary.htm#CHDCJAED"><span class="xrefglossterm">apply handler</span></a>s to handle messages dequeued by an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> in a customized way. These handlers include <a href="strms_glossary.htm#CHDJIDCH"><span class="xrefglossterm">statement DML handler</span></a>s, <a href="strms_glossary.htm#CHDEAFJH"><span class="xrefglossterm">procedure DML handler</span></a>s, <a href="strms_glossary.htm#CHDJFJIF"><span class="xrefglossterm">DDL handler</span></a>s, <a href="strms_glossary.htm#CHDGJIFI"><span class="xrefglossterm">precommit handler</span></a>s, and <a href="strms_glossary.htm#CHDDHDEH"><span class="xrefglossterm">message handler</span></a>s. If an apply process is not behaving as expected, then check the handlers used by the apply process, and correct any flaws. You might need to modify a SQL statement in a statement DML handler to correct an apply problem. You also might need to modify a PL/SQL procedure or remove it to correct an apply problem.</p>
<p>You can find the names of these procedures by querying the <code dir="ltr">DBA_APPLY_DML_HANDLERS</code> and <code dir="ltr">DBA_APPLY</code> data dictionary views.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#i1006214">&#34;Message Processing Options for an Apply Process&#34;</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#g1026098">Chapter 17, &#34;Managing Oracle Streams Information Consumption&#34;</a></p>
</li>
<li>
<p><a href="strms_apmon.htm#i1007328">&#34;Displaying Information About Apply Handlers&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1010645"></a>
<div id="STRMS1058" class="sect1">
<h2 class="sect1">Is the AQ_TM_PROCESSES Initialization Parameter Set to Zero?<a id="sthref1393"></a><a id="sthref1394"></a></h2>
<p>The <code dir="ltr">AQ_TM_PROCESSES</code> initialization parameter controls time monitoring on <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a> messages and controls processing of messages with delay and expiration properties specified. In Oracle Database 10<span class="italic">g</span> or later, the database automatically controls these activities when the <code dir="ltr">AQ_TM_PROCESSES</code> initialization parameter is not set.</p>
<p>If an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> is not applying messages, but there are messages that satisfy the apply process <a href="strms_glossary.htm#CHDCHGGB"><span class="xrefglossterm">rule set</span></a>s in the apply process&#39;s queue, then ensure that the <code dir="ltr">AQ_TM_PROCESSES</code> initialization parameter is not set to zero at the <a href="strms_glossary.htm#CHDGCAJA"><span class="xrefglossterm">destination database</span></a>. If this parameter is set to zero, then unset this parameter or set it to a nonzero value and monitor the apply process to see if it begins to apply messages.</p>
<p>To determine whether there are messages in a <a href="strms_glossary.htm#CHDFJFED"><span class="xrefglossterm">buffered queue</span></a>, you can query the <code dir="ltr">V$BUFFERED_QUEUES</code> and <code dir="ltr">V$BUFFERED_SUBSCRIBERS</code> dynamic performance views. To determine whether there are messages in a <a href="strms_glossary.htm#CBAEIBGJ"><span class="xrefglossterm">persistent queue</span></a>, you can query the <a href="strms_glossary.htm#CHDFFJJB"><span class="xrefglossterm">queue table</span></a> for the queue.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_qpmon.htm#i1006894">&#34;Viewing the Contents of Messages in a Persistent Queue&#34;</a></p>
</li>
<li>
<p><a href="strms_qpmon.htm#i1013925">&#34;Monitoring Buffered Queues&#34;</a></p>
</li>
<li>
<p><a class="olink ADQUE0200" href="../ADQUE/componet.htm#ADQUE0200"><span class="italic">Oracle Database Advanced Queuing User&#39;s Guide</span></a> for information about the <code dir="ltr">AQ_TM_PROCESSES</code> initialization parameter</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CACGIBBI"></a>
<div id="STRMS1059" class="sect1">
<h2 class="sect1">Does the Apply User Have the Required Privileges?<a id="sthref1395"></a><a id="sthref1396"></a></h2>
<p>If the apply user does not have explicit <code dir="ltr">EXECUTE</code> privilege on an apply handler procedure or custom rule-based transformation function, then an <code dir="ltr">ORA-26808</code> error might result when the apply user tries to run the procedure or function. Typically, this error is causes the apply process to abort without adding errors to the <code dir="ltr">DBA_APPLY_ERROR</code> view. However, the trace file for the apply coordinator reports the error. Specifically, an error similar to the following appears in the trace file:</p>
<pre dir="ltr">ORA-26808: Apply process AP01 died unexpectedly
</pre>
<p>Typically, error messages surround this message, and one or more of these messages contain the name of the procedure or function. To correct the problem, grant the required <code dir="ltr">EXECUTE</code> privilege to the apply user.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#BABEAJFC">&#34;Apply User&#34;</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#g1026098">Chapter 17, &#34;Managing Oracle Streams Information Consumption&#34;</a></p>
</li>
<li>
<p><a href="strms_trouble.htm#i1007268">&#34;Does an Apply Process Trace File Contain Messages About Apply Problems?&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1016334"></a>
<div id="STRMS1060" class="sect1">
<h2 class="sect1">Is the Apply Process Encountering Contention?<a id="sthref1397"></a></h2>
<p>An apply server is a component of an apply process. Apply servers apply DML and DDL changes to database objects at a destination database. An apply process can use one or more apply servers, and the <code dir="ltr">parallelism</code> apply process parameter specifies the number of apply servers that can concurrently apply transactions. For example, if <code dir="ltr">parallelism</code> is set to <code dir="ltr">5</code>, then an apply process uses a total of five apply servers.</p>
<p>An apply server encounters contention when the apply server must wait for a resource that is being used by another session. Contention can result from logical dependencies. For example, when an apply server tries to apply a change to a row that a user has locked, then the apply server must wait for the user. Contention can also result from physical dependencies. For example, interested transaction list (ITL) contention results when two transactions that are being applied, which might not be logically dependent, are trying to lock the same block on disk. In this case, one apply server locks rows in the block, and the other apply server must wait for access to the block, even though the second apply server is trying to lock different rows. See <a href="#CEGCEIBE">&#34;Is the Apply Process Waiting for a Dependent Transaction?&#34;</a> for detailed information about ITL contention.</p>
<p>When an apply server encounters contention that does not involve another apply server in the same apply process, it waits until the contention clears. When an apply server encounters contention that involves another apply server in the same apply process, one of the two apply servers is rolled back. An apply process that is using multiple apply servers might be applying multiple transactions at the same time. The apply process tracks the state of the apply server that is applying the transaction with the lowest commit SCN. If there is a dependency between two transactions, then an apply process always applies the transaction with the lowest commit SCN first. The transaction with the higher commit SCN waits for the other transaction to commit. Therefore, if the apply server with the lowest commit SCN transaction is encountering contention, then the contention results from something other than a dependent transaction. In this case, you can monitor the apply server with the lowest commit SCN transaction to determine the cause of the contention.</p>
<p>The following four wait states are possible for an apply server:</p>
<ul>
<li>
<p><span class="bold">Not waiting:</span> The apply server is not encountering contention and is not waiting. No action is necessary in this case.</p>
</li>
<li>
<p><span class="bold">Waiting for an event that is not related to another session:</span> An example of an event that is not related to another session is a <code dir="ltr">log</code> <code dir="ltr">file</code> <code dir="ltr">sync</code> event, where redo data must be flushed because of a commit or rollback. In these cases, Oracle Database writes nothing to the log initially because such waits are common and are usually transient. If the apply server is waiting for the same event after a certain interval of time, then the apply server writes a message to the alert log and apply process trace file. For example, an apply server <code dir="ltr">AS01</code> might write a message similar to the following:</p>
<pre dir="ltr">AS01: warning -- apply server 1, sid 26 waiting for event:
AS01: [log file sync] ...
</pre>
<p>Oracle Database writes this output to the alert log at intervals until the problem is rectified.</p>
</li>
<li>
<p><span class="bold">Waiting for an event that is related to a non apply server session:</span> The apply server writes a message to the alert log and apply process trace file immediately. For example, an apply server <code dir="ltr">AS01</code> might write a message similar to the following:</p>
<pre dir="ltr">AS01: warning -- apply server 1, sid 10 waiting on user sid 36 for event:
AS01: [enq: TM - contention] name|mode=544d0003, object #=a078, 
      table/partition=0
</pre>
<p>Oracle Database writes this output to the alert log at intervals until the problem is rectified.</p>
</li>
<li>
<p><span class="bold">Waiting for another apply server session:</span> This state can be caused by interested transaction list (ITL) contention, but it can also be caused by more serious issues, such as an apply handler that obtains conflicting locks. In this case, the apply server that is blocked by another apply server prints only once to the alert log and the trace file for the apply process, and the blocked apply server issues a rollback to the blocking apply server. When the blocking apply server rolls back, another message indicating that the apply server has been rolled back is printed to the log files, and the rolled back transaction is reassigned by the coordinator process for the apply process.</p>
<p>For example, if apply server 1 of apply process <code dir="ltr">AP01</code> is blocked by apply server&nbsp;2 of the same apply process (<code dir="ltr">AP01</code>), then the apply process writes the following messages to the log files:</p>
<pre dir="ltr">AP01: apply server 1 blocked on server 2
AP01: [enq: TX - row lock contention] name|mode=54580006, usn&lt;&lt;16 | 
      slot=1000e, sequence=1853
AP01: apply server 2 rolled back
</pre>
<p>You can determine the total number of times an apply server was rolled back since the apply process last started by querying the <code dir="ltr">TOTAL_ROLLBACKS</code> column in the <code dir="ltr">V$STREAMS_APPLY_COORDINATOR</code> dynamic performance view.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink TGDBA" href="../TGDBA/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about contention and about resolving different types of&nbsp;contention</p>
</li>
<li>
<p><a href="strms_trouble.htm#i1007184">&#34;Checking the Trace Files and Alert Log for Problems&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CEGCEIBE"></a>
<div id="STRMS1061" class="sect1">
<h2 class="sect1">Is the Apply Process Waiting for a Dependent Transaction?<a id="sthref1398"></a><a id="sthref1399"></a><a id="sthref1400"></a><a id="sthref1401"></a><a id="sthref1402"></a></h2>
<p>If you set the <code dir="ltr">parallelism</code> parameter for an apply process to a value greater than&nbsp;<code dir="ltr">1</code>, and you set the <code dir="ltr">commit_serialization</code> parameter of the apply process to <code dir="ltr">FULL</code>, then the apply process can detect interested transaction list (ITL) contention if there is a transaction that is dependent on another transaction with a higher SCN. ITL contention occurs if the session that created the transaction waited for an ITL slot in a block. This happens when the session wants to lock a row in the block, but one or more other sessions have rows locked in the same block, and there is no free ITL slot in the block.</p>
<p>ITL contention also is possible if the session is waiting due to a shared bitmap index fragment. Bitmap indexes index key values and a range of rowids. Each entry in a bitmap index can cover many rows in the actual table. If two sessions want to update rows covered by the same bitmap index fragment, then the second session waits for the first transaction to either <code dir="ltr">COMMIT</code> or <code dir="ltr">ROLLBACK</code>.</p>
<p>When an apply process detects such a dependency, it resolves the ITL contention automatically and records information about it in the alert log and apply process trace file for the database. ITL contention can negatively affect the performance of an apply process because there might not be any progress while it is detecting the deadlock.</p>
<p>To avoid the problem in the future, perform one of the following actions:</p>
<ul>
<li>
<p>Increase the number of ITLs available. You can do so by changing the <code dir="ltr">INITRANS</code> setting for the table using the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement.</p>
</li>
<li>
<p>Set the <code dir="ltr">commit_serialization</code> parameter to <code dir="ltr">DEPENDENT_TRANSACTIONS</code> for the apply process.</p>
</li>
<li>
<p>Set the <code dir="ltr">parallelism</code> apply process parameter to <code dir="ltr">1</code> for the apply process.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<ul>
<li>
<p><a href="strms_trouble.htm#i1007184">&#34;Checking the Trace Files and Alert Log for Problems&#34;</a></p>
</li>
<li>
<p><a class="olink ARPLS314" href="../ARPLS/d_apply.htm#ARPLS314"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about apply process parameters</p>
</li>
<li>
<p><a class="olink ADMIN" href="../ADMIN/toc.htm"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> and <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about <code dir="ltr">INITRANS</code></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1013712"></a>
<div id="STRMS1062" class="sect1">
<h2 class="sect1">Is an Apply Server Performing Poorly for Certain Transactions?<a id="sthref1403"></a><a id="sthref1404"></a><a id="sthref1405"></a><a id="sthref1406"></a></h2>
<p>If an apply process is not performing well, then the reason might be that one or more apply servers used by the apply process are taking an inordinate amount of time to apply certain transactions. The following query displays information about the transactions being applied by each apply server used by an apply process named <code dir="ltr">strm01_apply</code>:</p>
<pre dir="ltr">COLUMN SERVER_ID HEADING &#39;Apply Server ID&#39; FORMAT 99999999
COLUMN STATE HEADING &#39;Apply Server State&#39; FORMAT A20
COLUMN APPLIED_MESSAGE_NUMBER HEADING &#39;Applied Message|Number&#39; FORMAT 99999999
COLUMN MESSAGE_SEQUENCE HEADING &#39;Message Sequence|Number&#39; FORMAT 99999999

SELECT SERVER_ID, STATE, APPLIED_MESSAGE_NUMBER, MESSAGE_SEQUENCE 
  FROM V$STREAMS_APPLY_SERVER
  WHERE APPLY_NAME = &#39;STRM01_APPLY&#39;
  ORDER BY SERVER_ID;
</pre>
<p>If you run this query repeatedly, then over time the apply server state, applied message number, and message sequence number should continue to change for each apply server as it applies transactions. If these values do not change for one or more apply servers, then the apply server might not be performing well. In this case, you should ensure that, for each table to which the apply process applies changes, every key column has an index.</p>
<p>If you have many such tables, then you might need to determine the specific table and DML or DDL operation that is causing an apply server to perform poorly. To do so, run the following query when an apply server is taking an inordinately long time to apply a transaction. In this example, assume that the name of the apply process is <code dir="ltr">strm01_apply</code> and that apply server number two is performing poorly:</p>
<pre dir="ltr">COLUMN OPERATION HEADING &#39;Operation&#39; FORMAT A20
COLUMN OPTIONS HEADING &#39;Options&#39; FORMAT A20
COLUMN OBJECT_OWNER HEADING &#39;Object|Owner&#39; FORMAT A10
COLUMN OBJECT_NAME HEADING &#39;Object|Name&#39; FORMAT A10
COLUMN COST HEADING &#39;Cost&#39; FORMAT 99999999

SELECT p.OPERATION, p.OPTIONS, p.OBJECT_OWNER, p.OBJECT_NAME, p.COST
  FROM V$SQL_PLAN p, V$SESSION s, V$STREAMS_APPLY_SERVER a
  WHERE a.APPLY_NAME = &#39;STRM01_APPLY&#39; AND a.SERVER_ID = 2
    AND s.SID = a.SID
    AND p.HASH_VALUE = s.SQL_HASH_VALUE;
</pre>
<p>This query returns the operation being performed currently by the specified apply server. The query also returns the owner and name of the table on which the operation is being performed and the cost of the operation. Ensure that each key column in this table has an index. If the results show <code dir="ltr">FULL</code> for the <code dir="ltr">COST</code> column, then the operation is causing full table scans, and indexing the table&#39;s key columns might solve the problem.</p>
<p>In addition, you can run the following query to determine the specific DML or DDL SQL statement that is causing an apply server to perform poorly, assuming that the name of the apply process is <code dir="ltr">strm01_apply</code> and that apply server number two is performing poorly:</p>
<pre dir="ltr"><a id="i1014235"></a>
SELECT t.SQL_TEXT
  FROM V$SESSION s, V$SQLTEXT t, V$STREAMS_APPLY_SERVER a
<a id="i1014239"></a>  WHERE a.APPLY_NAME = &#39;STRM01_APPLY&#39; AND a.SERVER_ID = 2
<a id="i1014241"></a>    AND s.SID = a.SID
<a id="i1014243"></a>    AND s.SQL_ADDRESS = t.ADDRESS
<a id="i1014245"></a>    AND s.SQL_HASH_VALUE = t.HASH_VALUE
<a id="i1014247"></a>    ORDER BY PIECE;
<a id="i1014251"></a>
</pre>
<p>This query returns the SQL statement being run currently by the specified apply server. The statement includes the name of the table to which the transaction is being applied. Ensure that each key column in this table has an index.</p>
<p>If the SQL statement returned by the previous query is less than one thousand characters long, then you can run the following simplified query instead:</p>
<pre dir="ltr"><a id="i1014257"></a>
SELECT t.SQL_TEXT
<a id="i1014259"></a>  FROM V$SESSION s, V$SQLAREA t, V$STREAMS_APPLY_SERVER a
<a id="i1014261"></a>  WHERE a.APPLY_NAME = &#39;STRM01_APPLY&#39; AND a.SERVER_ID = 2
<a id="i1014263"></a>    AND s.SID = a.SID
<a id="i1014265"></a>    AND s.SQL_ADDRESS = t.ADDRESS
<a id="i1014267"></a>    AND s.SQL_HASH_VALUE = t.HASH_VALUE;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL112" href="../TGSQL/tgsql_intro.htm#TGSQL112"><span class="italic">Oracle Database Performance Tuning Guide</span></a> and <a class="olink REFRN30250" href="../REFRN/GUID-87561B21-721C-42EB-8E3D-28251C9BC50C.htm#REFRN30250"><span class="italic">Oracle Database Reference</span></a> for more information about the <code dir="ltr">V$SQL_PLAN</code> dynamic performance view</div>
</div>
<!-- class="sect1" -->
<a id="i1013873"></a>
<div id="STRMS209" class="sect1">
<h2 class="sect1">Are There Any Apply Errors in the Error Queue<a id="sthref1407"></a><a id="sthref1408"></a><a id="sthref1409"></a>?</h2>
<p>When an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> cannot apply a message, it moves the message and all of the other messages in the same transaction into the error queue. You should check for apply errors periodically to see if there are any transactions that could not be applied.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apmon.htm#i1007797">&#34;Checking for Apply Errors&#34;</a></p>
</li>
<li>
<p><a href="strms_apmon.htm#i1007852">&#34;Displaying Detailed Information About Apply Errors&#34;</a></p>
</li>
</ul>
</div>
<a id="CEGJJEAH"></a>
<div id="STRMS1063" class="sect2">
<h3 class="sect2">Using a DML Handler to Correct Error Transactions</h3>
<p>When an apply process moves a transaction to the error queue, you can examine the transaction to analyze the feasibility reexecuting the transaction successfully. If an abnormality is found in the transaction, then you might be able to configure a statement DML handler or a procedure DML handler to correct the problem. In this case, configure the DML handler to run when you reexecute the error transaction.</p>
<p>When a DML handler is used to correct a problem in an error transaction, the apply process that uses the DML handler should be stopped to prevent the DML handler from acting on LCRs that are not involved with the error transaction. After successful reexecution, if the DML handler is no longer needed, then remove it. Also, correct the problem that caused the transaction to moved to the error queue to prevent future error transactions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_mapply.htm#BGBJHGHG">&#34;Managing a DML Handler&#34;</a></div>
</div>
<!-- class="sect2" -->
<div id="STRMS1064" class="sect2"><a id="sthref1410"></a>
<h3 class="sect2">Troubleshooting Specific Apply Errors</h3>
<p>You might encounter the following types of apply process errors for LCRs:</p>
<ul>
<li>
<p><a href="#i1014714">ORA-01031 Insufficient Privileges</a></p>
</li>
<li>
<p><a href="#i1015040">ORA-01403 No Data Found</a></p>
</li>
<li>
<p><a href="#i1015758">ORA-23605 Invalid Value for Oracle Streams Parameter</a>*</p>
</li>
<li>
<p><a href="#i1015761">ORA-23607 Invalid Column</a>*</p>
</li>
<li>
<p><a href="#i1015766">ORA-24031 Invalid Value, <span class="italic">parameter_name</span> Should Be Non-NULL</a>*</p>
</li>
<li>
<p><a href="#i1015128">ORA-26687 Instantiation SCN Not Set</a></p>
</li>
<li>
<p><a href="#i1015470">ORA-26688 Missing Key in LCR</a></p>
</li>
<li>
<p><a href="#i1013397">ORA-26689 Column Type Mismatch</a>*</p>
</li>
<li>
<p><a href="#CEGICDJB">ORA-26786 A row with key exists but has conflicting column(s) in table</a></p>
</li>
<li>
<p><a href="#CEGDGDHB">ORA-26787 The row with key <span class="italic">column_value</span> does not exist in table <span class="italic">table_name</span></a></p>
</li>
</ul>
<p>The errors marked with an asterisk (*) in the previous list often result from a problem with an apply handler or a rule-based transformation.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apmon.htm#i1007797">&#34;Checking for Apply Errors&#34;</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#i1010782">&#34;Managing Apply Errors&#34;</a></p>
</li>
<li>
<p><a href="strms_apply.htm#i1008918">&#34;The Error Queue&#34;</a></p>
</li>
</ul>
</div>
<a id="i1014714"></a>
<div id="STRMS1065" class="sect3">
<h4 class="sect3">ORA-01031 Insufficient Privileges</h4>
<p>An <code dir="ltr">ORA-01031</code> error occurs when the user designated as the apply user does not have the necessary privileges to perform SQL operations on the replicated objects. The apply user privileges can be granted directly or through a role.</p>
<p>Specifically, the following privileges are required:</p>
<ul>
<li>
<p>For table level DML changes, the <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">DELETE</code>, and <code dir="ltr">SELECT</code> privileges must be granted.</p>
</li>
<li>
<p>For table level DDL changes, the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> privilege must be granted.</p>
</li>
<li>
<p>For schema level changes, the <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code>, <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">INDEX</code>, <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">PROCEDURE</code>, <code dir="ltr">ALTER</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code>, and <code dir="ltr">ALTER</code> <code dir="ltr">ANY</code> <code dir="ltr">PROCEDURE</code> privileges must be granted.</p>
</li>
<li>
<p>For global level changes, <code dir="ltr">ALL</code> <code dir="ltr">PRIVILEGES</code> must be granted to the apply user.</p>
</li>
</ul>
<p>To correct this error, complete the following steps:</p>
<ol>
<li>
<p>Connect as the apply user on the destination database.</p>
</li>
<li>
<p>Query the <code dir="ltr">SESSION_PRIVS</code> data dictionary view to determine which required privileges are not granted to the apply user.</p>
</li>
<li>
<p>Connect as an administrative user who can grant privileges.</p>
</li>
<li>
<p>Grant the necessary privileges to the apply user.</p>
</li>
<li>
<p>Reexecute the error transactions in the error queue for the apply process.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#BABEAJFC">&#34;Apply User&#34;</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#CHDCGGBC">&#34;Retrying Apply Error Transactions&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1015040"></a>
<div id="STRMS1066" class="sect3">
<h4 class="sect3">ORA-01403 No Data Found<a id="sthref1411"></a></h4>
<p>Typically, an <code dir="ltr">ORA-01403</code> error occurs when an apply process tries to update an existing row and the <code dir="ltr">OLD_VALUES</code> in the row LCR do not match the current values at the destination database.</p>
<p>Typically, one of the following conditions causes this error:</p>
<ul>
<li>
<p>Supplemental logging is not specified for columns that require supplemental logging at the source database. In this case, LCRs from the source database might not contain values for key columns. You can use a procedure DML handler to modify the LCR so that it contains the necessary supplemental data. See <a href="#CEGJJEAH">&#34;Using a DML Handler to Correct Error Transactions&#34;</a>. Also, specify the necessary supplemental logging at the source database to prevent future errors.</p>
</li>
<li>
<p>There is a problem with the primary key in the table for which an LCR is applying a change. In this case, ensure that the primary key is enabled by querying the <code dir="ltr">DBA_CONSTRAINTS</code> data dictionary view. If no primary key exists for the table, or if the target table has a different primary key than the source table, then specify substitute key columns using the <code dir="ltr">SET_KEY_COLUMNS</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package. You also might encounter error <code dir="ltr">ORA-23416</code> if a table being applied does not have a primary key. After you make these changes, you can reexecute the error transaction.</p>
</li>
<li>
<p>The transaction being applied depends on another transaction which has not yet executed. For example, if a transaction tries to update an employee with an <code dir="ltr">employee_id</code> of <code dir="ltr">300</code>, but the row for this employee has not yet been inserted into the <code dir="ltr">employees</code> table, then the update fails. In this case, execute the transaction on which the error transaction depends. Then, reexecute the error transaction.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_capture.htm#i1007293">&#34;Supplemental Logging in an Oracle Streams Environment&#34;</a></p>
</li>
<li>
<p><a href="strms_adapply.htm#i1006927">&#34;Considerations for Applying DML Changes to Tables&#34;</a> for information about possible causes of apply errors</p>
</li>
<li>
<p><a href="strms_apmon.htm#i1007852">&#34;Displaying Detailed Information About Apply Errors&#34;</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#i1010782">&#34;Managing Apply Errors&#34;</a></p>
</li>
<li>
<p><a class="olink STREP008" href="../STREP/rep_tags.htm#STREP008"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about Oracle Streams tags</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1015758"></a>
<div id="STRMS1067" class="sect3">
<h4 class="sect3">ORA-23605 Invalid Value for Oracle Streams Parameter<a id="sthref1412"></a></h4>
<p>When calling row LCR (<code dir="ltr">SYS.LCR$_ROW_RECORD</code> type) member subprograms, an <code dir="ltr">ORA-23605</code> error might be raised if the values of the parameters passed by the member subprogram do not match the row LCR. For example, an error results if a member subprogram tries to add an old column value to an insert row LCR, or if a member subprogram tries to set the value of a LOB column to a number.</p>
<p>Row LCRs should contain the following old and new values, depending on the operation:</p>
<ul>
<li>
<p>A row LCR for an <code dir="ltr">INSERT</code> operation should contain new values but no old values.</p>
</li>
<li>
<p>A row LCR for an <code dir="ltr">UPDATE</code> operation can contain both new values and old values.</p>
</li>
<li>
<p>A row LCR for a <code dir="ltr">DELETE</code> operation should contain old values but no new values.</p>
</li>
</ul>
<p>Verify that the correct parameter type (<code dir="ltr">OLD</code>, or <code dir="ltr">NEW</code>, or both) is specified for the row LCR operation (<code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, or <code dir="ltr">DELETE</code>). For example, if a procedure DML handler or custom rule-based transformation changes an <code dir="ltr">UPDATE</code> row LCR into an <code dir="ltr">INSERT</code> row LCR, then the handler or transformation should remove the old values in the row&nbsp;LCR.</p>
<p>If an apply handler caused the error, then correct the apply handler and reexecute the error transaction. If a custom rule-based transformation caused the error, then you might be able to create a DML handler to correct the problem. See <a href="#CEGJJEAH">&#34;Using a DML Handler to Correct Error Transactions&#34;</a>. Also, correct the rule-based transformation to avoid future errors.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_transform.htm#CACIIJHJ">Chapter 6, &#34;Rule-Based Transformations&#34;</a></div>
</div>
<!-- class="sect3" -->
<a id="i1015761"></a>
<div id="STRMS1068" class="sect3">
<h4 class="sect3">ORA-23607 Invalid Column<a id="sthref1413"></a></h4>
<p>An <code dir="ltr">ORA-23607</code> error is raised by a row LCR (<code dir="ltr">SYS.LCR$_ROW_RECORD</code> type) member subprogram, when the value of the <code dir="ltr">column_name</code> parameter in the member subprogram does not match the name of any of the columns in the row LCR. Check the column names in the row LCR.</p>
<p>If an apply handler caused the error, then correct the apply handler and reexecute the error transaction. If a custom rule-based transformation caused the error, then you might be able to create a DML handler to correct the problem. See <a href="#CEGJJEAH">&#34;Using a DML Handler to Correct Error Transactions&#34;</a>. Also, correct the rule-based transformation to avoid future errors.</p>
<p>An apply handler or custom rule-based transformation can cause this error by using one of the following row LCR member procedures:</p>
<ul>
<li>
<p><code dir="ltr">DELETE_COLUMN</code>, if this procedure tries to delete a column from a row LCR that does not exist in the row LCR</p>
</li>
<li>
<p><code dir="ltr">RENAME_COLUMN</code>, if this procedure tries to rename a column that does not exist in the row LCR</p>
</li>
</ul>
<p>In this case, to avoid similar errors in the future, perform one of the following actions:</p>
<ul>
<li>
<p>Instead of using an apply handler or custom rule-based transformation to delete or rename a column in row LCRs, use a declarative rule-based transformation. If a declarative rule-based transformation tries to delete or rename a column that does not exist, then the declarative rule-based transformation does not raise an error. You can specify a declarative rule-based transformation that deletes a column using the <code dir="ltr">DBMS_STREAMS_ADM.DELETE_COLUMN</code> procedure and a declarative rule-based transformation that renames a column using the <code dir="ltr">DBMS_STREAMS_ADM.RENAME_COLUMN</code> procedure. You can use a declarative rule-based transformation in combination with apply handlers and custom rule-based transformations.</p>
</li>
<li>
<p>If you want to continue to use an apply handler or custom rule-based transformation to delete or rename a column in row LCRs, then modify the handler or transformation to prevent future errors. For example, modify the handler or transformation to verify that a column exists before trying to rename or delete the column.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_transform.htm#CACIIJHJ">Chapter 6, &#34;Rule-Based Transformations&#34;</a></p>
</li>
<li>
<p><a class="olink ARPLS368" href="../ARPLS/t_lcr.htm#ARPLS368"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code dir="ltr">DELETE_COLUMN</code> and <code dir="ltr">RENAME_COLUMN</code> member procedures for row LCRs</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1015766"></a>
<div id="STRMS1069" class="sect3">
<h4 class="sect3">ORA-24031 Invalid Value, <span class="italic">parameter_name</span> Should Be Non-NULL<a id="sthref1414"></a></h4>
<p>An <code dir="ltr">ORA-24031</code> error can occur when an apply handler or a custom rule-based transformation passes a <code dir="ltr">NULL</code> value to an LCR member subprogram instead of an <code dir="ltr">ANYDATA</code> value that contains a <code dir="ltr">NULL</code>.</p>
<p>For example, the following call to the <code dir="ltr">ADD_COLUMN</code> member procedure for row LCRs can result in this error:</p>
<pre dir="ltr">new_lcr.ADD_COLUMN(&#39;OLD&#39;,&#39;LANGUAGE&#39;,NULL);
</pre>
<p>The following example shows the correct way to call the <code dir="ltr">ADD_COLUMN</code> member procedure for row LCRs:</p>
<pre dir="ltr">new_lcr.ADD_COLUMN(&#39;OLD&#39;,&#39;LANGUAGE&#39;,ANYDATA.ConvertVarchar2(NULL));
</pre>
<p>If an apply handler caused the error, then correct the apply handler and reexecute the error transaction. If a custom rule-based transformation caused the error, then you might be able to create a DML handler to correct the problem. See <a href="#CEGJJEAH">&#34;Using a DML Handler to Correct Error Transactions&#34;</a>. Also, correct the rule-based transformation to avoid future errors.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_transform.htm#CACIIJHJ">Chapter 6, &#34;Rule-Based Transformations&#34;</a></div>
</div>
<!-- class="sect3" -->
<a id="i1015128"></a>
<div id="STRMS1070" class="sect3">
<h4 class="sect3">ORA-26687 Instantiation SCN Not Set<a id="sthref1415"></a></h4>
<p>Typically, an <code dir="ltr">ORA-26687</code> error occurs because the instantiation SCN is not set on an object for which an apply process is attempting to apply changes. You can query the <code dir="ltr">DBA_APPLY_INSTANTIATED_OBJECTS</code> data dictionary view to list the objects that have an instantiation&nbsp;SCN.</p>
<p>You can set an instantiation SCN for one or more objects by exporting the objects at the source database, and then importing them at the destination database. You can use Data Pump export/import. If you do not want to use export/import, then you can run one or more of the following procedures in the <code dir="ltr">DBMS_APPLY_ADM</code> package:</p>
<ul>
<li>
<p><code dir="ltr">SET_TABLE_INSTANTIATION_SCN</code></p>
</li>
<li>
<p><code dir="ltr">SET_SCHEMA_INSTANTIATION_SCN</code></p>
</li>
<li>
<p><code dir="ltr">SET_GLOBAL_INSTANTIATION_SCN</code></p>
</li>
</ul>
<p>Some of the common reasons why an instantiation SCN is not set for an object at a destination database include the following:</p>
<ul>
<li>
<p>You used export/import for instantiation, and you exported the objects from the source database before preparing the objects for instantiation. You can prepare objects for instantiation either by creating Oracle Streams rules for the objects with the <code dir="ltr">DBMS_STREAMS_ADM</code> package or by running a procedure or function in the <code dir="ltr">DBMS_CAPTURE_ADM</code> package. If the objects were not prepared for instantiation before the export, then the instantiation SCN information will not be available in the export file, and the instantiation SCNs will not be set.</p>
<p>In this case, prepare the database objects for instantiation at the source database. Next, set the instantiation SCN for the database objects at the destination database.</p>
</li>
<li>
<p>Instead of using export/import for instantiation, you set the instantiation SCN explicitly with the appropriate procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package. When the instantiation SCN is set explicitly by the database administrator, responsibility for the correctness of the data is assumed by the administrator.</p>
<p>In this case, set the instantiation SCN for the database objects explicitly. Alternatively, you can choose to perform a metadata-only export/import to set the instantiation SCNs.</p>
</li>
<li>
<p>You want to apply DDL changes, but you did not set the instantiation SCN at the schema or global level.</p>
<p>In this case, set the instantiation SCN for the appropriate schemas by running the <code dir="ltr">SET_SCHEMA_INSTANTIATION_SCN</code> procedure, or set the instantiation SCN for the source database by running the <code dir="ltr">SET_GLOBAL_INSTANTIATION_SCN</code> procedure. Both of these procedures are in the <code dir="ltr">DBMS_APPLY_ADM</code> package.</p>
</li>
</ul>
<p>After you correct the condition that caused the error, whether you should reexecute the error transaction or delete it depends on whether the changes included in the transaction were executed at the destination database when you corrected the error condition. Follow these guidelines when you decide whether you should reexecute the transaction in the error queue or delete it:</p>
<ul>
<li>
<p>If you performed a new export/import, and the new export includes the transaction in the error queue, then delete the transaction in the error queue.</p>
</li>
<li>
<p>If you set instantiation SCNs explicitly or reimported an existing export dump file, then reexecute the transaction in the error queue.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STREP012" href="../STREP/instant.htm#STREP012"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for more information about instantiation</p>
</li>
<li>
<p><a href="strms_mapply.htm#CHDCGGBC">&#34;Retrying Apply Error Transactions&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1015470"></a>
<div id="STRMS1071" class="sect3">
<h4 class="sect3">ORA-26688 Missing Key in LCR<a id="sthref1416"></a></h4>
<p>Typically, an <code dir="ltr">ORA-26688</code> error occurs because of one of the following conditions:</p>
<ul>
<li>
<p>At least one LCR in a transaction does not contain enough information for the apply process to apply it. For dependency computation, an apply process always needs values for the defined primary key column(s) at the destination database. Also, if the parallelism of any apply process that will apply the changes is greater than 1, then the apply process needs values for any indexed column at a destination database, which includes unique or non unique index columns, foreign key columns, and bitmap index columns.</p>
<p>If an apply process needs values for a column, and the column exists at the source database, then this error results when supplemental logging is not specified for one or more of these columns at the source database. In this case, specify the necessary supplemental logging at the source database to prevent apply errors.</p>
<p>However, the definition of the source database table might be different than the definition of the corresponding destination database table. If an apply process needs values for a column, and the column exists at the destination database but <span class="italic">does not exist</span> at the source database, then you can configure a rule-based transformation to add the required values to the LCRs from the source database to prevent apply errors.</p>
<p>To correct a transaction placed in the error queue because of this error, you can use a procedure DML handler to modify the LCRs so that they contain the necessary supplemental data. See <a href="#CEGJJEAH">&#34;Using a DML Handler to Correct Error Transactions&#34;</a>.</p>
</li>
<li>
<p>There is a problem with the primary key in the table for which an LCR is applying a change. In this case, ensure that the primary key is enabled by querying the <code dir="ltr">DBA_CONSTRAINTS</code> data dictionary view. If no primary key exists for the table, or if the destination table has a different primary key than the source table, then specify substitute key columns using the <code dir="ltr">SET_KEY_COLUMNS</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package. You can also encounter error <code dir="ltr">ORA-23416</code> if a table does not have a primary key. After you make these changes, you can reexecute the error transaction.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_capture.htm#i1007293">&#34;Supplemental Logging in an Oracle Streams Environment&#34;</a></p>
</li>
<li>
<p><a href="strms_adapply.htm#i1006973">&#34;Substitute Key Columns&#34;</a></p>
</li>
<li>
<p><a href="strms_transform.htm#CACIIJHJ">Chapter 6, &#34;Rule-Based Transformations&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1013397"></a>
<div id="STRMS1072" class="sect3">
<h4 class="sect3">ORA-26689 Column Type Mismatch<a id="sthref1417"></a></h4>
<p>Typically, an <code dir="ltr">ORA-26689</code> error occurs because one or more columns at a table in the source database do not match the corresponding columns at the destination database. The LCRs from the source database might contain more columns than the table at the destination database, or there might be a column name or column type mismatch for one or more columns. If the columns differ at the databases, then you can use rule-based transformations to avoid future errors.</p>
<p>If you use an apply handler or a custom rule-based transformation, then ensure that any <code dir="ltr">ANYDATA</code> conversion functions match the data type in the LCR that is being converted. For example, if the column is specified as <code dir="ltr">VARCHAR2</code>, then use <code dir="ltr">ANYDATA.CONVERTVARCHAR2</code> function to convert the data from type <code dir="ltr">ANY</code> to <code dir="ltr">VARCHAR2</code>.</p>
<p>Also, ensure that you use the correct character case in rule conditions, apply handlers, and rule-based transformations. For example, if a column name has all uppercase characters in the data dictionary, then you should specify the column name with all uppercase characters in rule conditions, apply handlers, and rule-based transformations</p>
<p>This error can also occur because supplemental logging is not specified where it is required for nonkey columns at the source database. In this case, LCRs from the source database might not contain needed values for these nonkey columns.</p>
<p>You might be able to configure a DML handler to apply the error transaction. See <a href="#CEGJJEAH">&#34;Using a DML Handler to Correct Error Transactions&#34;</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_adapply.htm#i1006927">&#34;Considerations for Applying DML Changes to Tables&#34;</a> for information about possible causes of apply errors</p>
</li>
<li>
<p><a href="strms_capture.htm#i1007293">&#34;Supplemental Logging in an Oracle Streams Environment&#34;</a></p>
</li>
<li>
<p><a href="strms_transform.htm#CACIIJHJ">Chapter 6, &#34;Rule-Based Transformations&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CEGICDJB"></a>
<div id="STRMS1073" class="sect3">
<h4 class="sect3">ORA-26786 A row with key exists but has conflicting column(s) in table</h4>
<p>An <code dir="ltr">ORA-26786</code> error occurs when the values of some columns in the destination table row do not match the old values of the corresponding columns in the row LCR.</p>
<p>To avoid future apply errors, you can either configure a conflict handler, a DML handler, or an error handler. The handler should resolve the mismatched column in a way that is appropriate for your replication environment.</p>
<p>In addition, you might be able to configure a DML handler to apply existing error transactions that resulted from this error. See <a href="#CEGJJEAH">&#34;Using a DML Handler to Correct Error Transactions&#34;</a>.</p>
<p>Alternatively, you can update the current values in the row so that the row LCR can be applied successfully. If changes to the row are captured by a capture process or synchronous capture at the destination database, then you probably do not want to replicate this manual change to other destination databases. In this case, complete the following steps:</p>
<ol>
<li>
<p>Set a tag in the session that corrects the row. Ensure that you set the tag to a value that prevents the manual change from being replicated. For example, the tag can prevent the change from being captured by a capture process or synchronous capture.</p>
<pre dir="ltr">EXEC DBMS_STREAMS.SET_TAG(tag =&gt; HEXTORAW(&#39;17&#39;));
</pre>
<p>In some environments, you might need to set the tag to a different value.</p>
</li>
<li>
<p>Update the row in the table so that the data matches the old values in the&nbsp;LCR.</p>
</li>
<li>
<p>Reexecute the error or reexecute all errors. To reexecute an error, run the <code dir="ltr">EXECUTE_ERROR</code> procedure in the <code dir="ltr">DBMS_APPLY_ADM</code> package, and specify the transaction identifier for the transaction that caused the error. For example:</p>
<pre dir="ltr">EXEC DBMS_APPLY_ADM.EXECUTE_ERROR(local_transaction_id =&gt; &#39;5.4.312&#39;);
</pre>
<p>Or, execute all errors for the apply process by running the <code dir="ltr">EXECUTE_ALL_ERRORS</code> procedure:</p>
<pre dir="ltr">EXEC DBMS_APPLY_ADM.EXECUTE_ALL_ERRORS(apply_name =&gt; &#39;APPLY&#39;);
</pre></li>
<li>
<p>If you are going to make other changes in the current session that you want to replicate destination databases, then reset the tag for the session to an appropriate value, as in the following example:</p>
<pre dir="ltr">EXEC DBMS_STREAMS.SET_TAG(tag =&gt; NULL);
</pre>
<p>In some environments, you might need to set the tag to a value other than&nbsp;<code dir="ltr">NULL</code>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STREP001" href="../STREP/conflict.htm#STREP001"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about conflict resolution</p>
</li>
<li>
<p><a href="strms_mapply.htm#BGBJHGHG">&#34;Managing a DML Handler&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CEGDGDHB"></a>
<div id="STRMS1074" class="sect3">
<h4 class="sect3">ORA-26787 The row with key <span class="italic">column_value</span> does not exist in table <span class="italic">table_name</span></h4>
<p>An <code dir="ltr">ORA-26787</code> error occurs when the row that a row LCR is trying to update or delete does not exist in the destination table.</p>
<p>To avoid future apply errors, you can either configure a conflict handler, a DML handler, or an error handler. The handler should resolve row LCRs that do not have corresponding table rows in a way that is appropriate for your replication environment.</p>
<p>In addition, you might be able to configure a DML handler to apply existing error transactions that resulted from this error. See <a href="#CEGJJEAH">&#34;Using a DML Handler to Correct Error Transactions&#34;</a>.</p>
<p>Alternatively, you can update the current values in the row so that the row LCR can be applied successfully. See <a href="#CEGICDJB">&#34;ORA-26786 A row with key exists but has conflicting column(s) in table&#34;</a> for more information.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STREP001" href="../STREP/conflict.htm#STREP001"><span class="italic">Oracle Streams Replication Administrator&#39;s Guide</span></a> for information about conflict resolution</p>
</li>
<li>
<p><a href="strms_mapply.htm#BGBJHGHG">&#34;Managing a DML Handler&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5963">
<tr>
<td class="cellalignment5970">
<table class="cellalignment5968">
<tr>
<td class="cellalignment5967"><a href="strms_trprop.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5967"><a href="strms_trrules.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5972">
<table class="cellalignment5966">
<tr>
<td class="cellalignment5967"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5967"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5967"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5967"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5967"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5967"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>