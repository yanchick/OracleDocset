<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-104471"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Managing%20Rule-Based%20Transformations"></a><title>Managing Rule-Based Transformations</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1032"/>
<meta name="dcterms.created" content="2014-12-23T13:28:7Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Streams Concepts and Administration"/>
<meta name="dcterms.identifier" content="E53116-02"/>
<meta name="dcterms.isVersionOf" content="STRMS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="strms_glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="strms_mrules.htm" title="Previous" type="text/html"/>
<link rel="Next" href="strms_change_table.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53116-02.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">28/57</span> <!-- End Header -->
<div id="STRMS154" class="chapter"><a id="CHDGDHDE"></a> <a id="CHDBCDFH"></a>
<h1 class="chapter"><span class="secnum">19</span> Managing Rule-Based Transformations</h1>
<p><a id="sthref911"></a><a id="sthref912"></a>In Oracle Streams, a rule-based transformation is any modification to a <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a> that results when a <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a> in a <a href="strms_glossary.htm#CHDEEDIJ"><span class="xrefglossterm">positive rule set</span></a> evaluates to <code dir="ltr">TRUE</code>. There are two types of rule-based transformations: declarative and custom.</p>
<p>The following sections describe managing rule-based transformations:</p>
<ul>
<li>
<p><a href="#BABDFDEA">Managing Declarative Rule-Based Transformations</a></p>
</li>
<li>
<p><a href="#BABDDFEC">Managing Custom Rule-Based Transformations</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
A transformation specified for a rule is performed only if the rule is in a positive rule set. If the rule is in the <a href="strms_glossary.htm#CHDBHJHI"><span class="xrefglossterm">negative rule set</span></a> for a <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a>, <a href="strms_glossary.htm#CHDEICIC"><span class="xrefglossterm">propagation</span></a>, <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a>, or <a href="strms_glossary.htm#CHDDGHHB"><span class="xrefglossterm">messaging client</span></a>, then these <a href="strms_glossary.htm#CHDDDJGJ"><span class="xrefglossterm">Oracle Streams client</span></a>s ignore the rule-based transformation.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_transform.htm#CACIIJHJ">Chapter 6, &#34;Rule-Based Transformations&#34;</a></p>
</li>
</ul>
</div>
<a id="BABDFDEA"></a>
<div id="STRMS828" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing Declarative Rule-Based Transformations<a id="sthref913"></a></h2>
<p>You can use the following procedures in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to manage <a href="strms_glossary.htm#CHDBDEJG"><span class="xrefglossterm">declarative rule-based transformation</span></a>s: <code dir="ltr">ADD_COLUMN</code>, <code dir="ltr">DELETE_COLUMN</code>, <code dir="ltr">KEEP_COLUMNS</code>, <code dir="ltr">RENAME_COLUMN</code>, <code dir="ltr">RENAME_SCHEMA</code>, and <code dir="ltr">RENAME_TABLE</code>.</p>
<p>This section provides instructions for completing the following tasks:</p>
<ul>
<li>
<p><a href="#BABHBHAI">Adding Declarative Rule-Based Transformations</a></p>
</li>
<li>
<p><a href="#BABDBCDB">Overwriting an Existing Declarative Rule-Based Transformation</a></p>
</li>
<li>
<p><a href="#BABHHFBD">Removing Declarative Rule-Based Transformations</a></p>
</li>
</ul>
<a id="BABHBHAI"></a>
<div id="STRMS829" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Adding Declarative Rule-Based Transformations<a id="sthref914"></a></h3>
<p>The following sections contain examples that add <a href="strms_glossary.htm#CHDBDEJG"><span class="xrefglossterm">declarative rule-based transformation</span></a>s to DML <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a>s.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Declarative rule-based transformations can be specified for DML rules only. They cannot be specified for DDL rules.</div>
<a id="CHDGJBJA"></a>
<div id="STRMS831" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Adding a Declarative Rule-Based Transformation that Renames a Table<a id="sthref915"></a></h4>
<p>Use the <code dir="ltr">RENAME_TABLE</code> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to add a declarative rule-based transformation that renames a table in a row LCR. For example, the following procedure adds a declarative rule-based transformation to the <code dir="ltr">jobs12</code> rule in the <code dir="ltr">strmadmin</code> schema:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.RENAME_TABLE(
    rule_name       =&gt; &#39;strmadmin.jobs12&#39;,
    from_table_name =&gt; &#39;hr.jobs&#39;,
    to_table_name   =&gt; &#39;hr.assignments&#39;, 
    step_number     =&gt; 0,
    operation       =&gt; &#39;ADD&#39;);
END;
/
</pre>
<p>The declarative rule-based transformation added by this procedure renames the table <code dir="ltr">hr.jobs</code> to <code dir="ltr">hr.assignments</code> in a row LCR when the rule <code dir="ltr">jobs12</code> evaluates to <code dir="ltr">TRUE</code> for the row&nbsp;LCR. If more than one declarative rule-based transformation is specified for the <code dir="ltr">jobs12</code> rule, then this transformation follows default transformation ordering because the <code dir="ltr">step_number</code> parameter is set to <code dir="ltr">0</code> (zero). In addition, the <code dir="ltr">operation</code> parameter is set to <code dir="ltr">ADD</code> to indicate that the transformation is being added to the rule, not removed from it.</p>
<p>The <code dir="ltr">RENAME_TABLE</code> procedure can also add a transformation that renames the schema in addition to the table. For example, in the previous example, to specify that the schema should be renamed to <code dir="ltr">oe</code>, specify <code dir="ltr">oe.assignments</code> for the <code dir="ltr">to_table_name</code> parameter.</p>
</div>
<!-- class="sect3" -->
<div id="STRMS832" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref916"></a>
<h4 class="sect3">Adding a Declarative Rule-Based Transformation that Adds a Column<a id="sthref917"></a></h4>
<p>Use the <code dir="ltr">ADD_COLUMN</code> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to add a declarative rule-based transformation that adds a column to a row in a row LCR. For example, the following procedure adds a declarative rule-based transformation to the <code dir="ltr">employees35</code> rule in the <code dir="ltr">strmadmin</code> schema:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_COLUMN(
    rule_name    =&gt; &#39;employees35&#39;,
    table_name   =&gt; &#39;hr.employees&#39;,
    column_name  =&gt; &#39;birth_date&#39;, 
    column_value =&gt; ANYDATA.ConvertDate(NULL),
    value_type   =&gt; &#39;NEW&#39;,
    step_number  =&gt; 0,
    operation    =&gt; &#39;ADD&#39;);
END;
/
</pre>
<p>The declarative rule-based transformation added by this procedure adds a <code dir="ltr">birth_date</code> column of data type <code dir="ltr">DATE</code> to an <code dir="ltr">hr.employees</code> table row in a row LCR when the rule <code dir="ltr">employees35</code> evaluates to <code dir="ltr">TRUE</code> for the row&nbsp;LCR.</p>
<p>Notice that the <code dir="ltr">ANYDATA.ConvertDate</code> function specifies the column type and the column value. In this example, the added column value is <code dir="ltr">NULL</code>, but a valid date can also be specified. Use the appropriate <code dir="ltr">ANYDATA</code> function for the column being added. For example, if the data type of the column being added is <code dir="ltr">NUMBER</code>, then use the <code dir="ltr">ANYDATA.ConvertNumber</code> function.</p>
<p>The <code dir="ltr">value_type</code> parameter is set to <code dir="ltr">NEW</code> to indicate that the column is added to the new values in a row LCR. You can also specify <code dir="ltr">OLD</code> to add the column to the old values.</p>
<p>If more than one declarative rule-based transformation is specified for the <code dir="ltr">employees35</code> rule, then the transformation follows default transformation ordering because the <code dir="ltr">step_number</code> parameter is set to <code dir="ltr">0</code> (zero). In addition, the <code dir="ltr">operation</code> parameter is set to <code dir="ltr">ADD</code> to indicate that the transformation is being added, not removed.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">ADD_COLUMN</code> procedure is overloaded. A <code dir="ltr">column_function</code> parameter can specify that the current system date or time stamp is the value for the added column. The <code dir="ltr">column_value</code> and <code dir="ltr">column_function</code> parameters are mutually exclusive.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS077" href="../ARPLS/t_anydat.htm#ARPLS077"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about <code dir="ltr">AnyData</code> type functions</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABDBCDB"></a>
<div id="STRMS833" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Overwriting an Existing Declarative Rule-Based Transformation<a id="sthref918"></a></h3>
<p>When the <code dir="ltr">operation</code> parameter is set to <code dir="ltr">ADD</code> in a procedure that adds a <a href="strms_glossary.htm#CHDBDEJG"><span class="xrefglossterm">declarative rule-based transformation</span></a>, an existing declarative rule-based transformation is overwritten if the parameters in the following list match the existing transformation parameters:</p>
<ul>
<li>
<p><code dir="ltr">ADD_COLUMN</code> procedure: <code dir="ltr">rule_name</code>, <code dir="ltr">table_name</code>, <code dir="ltr">column_name</code>, and <code dir="ltr">step_number</code> parameters</p>
</li>
<li>
<p><code dir="ltr">DELETE_COLUMN</code> procedure: <code dir="ltr">rule_name</code>, <code dir="ltr">table_name</code>, <code dir="ltr">column_name</code>, and <code dir="ltr">step_number</code> parameters</p>
</li>
<li>
<p><code dir="ltr">KEEP_COLUMNS</code> procedure: <code dir="ltr">rule_name</code>, <code dir="ltr">table_name</code>, <code dir="ltr">column_list</code>, and <code dir="ltr">step_number</code> parameters, or <code dir="ltr">rule_name</code>, <code dir="ltr">table_name</code>, <code dir="ltr">column_table</code>, and <code dir="ltr">step_number</code> parameters (The <code dir="ltr">column_list</code> and <code dir="ltr">column_table</code> parameters are mutually exclusive.)</p>
</li>
<li>
<p><code dir="ltr">RENAME_COLUMN</code> procedure: <code dir="ltr">rule_name</code>, <code dir="ltr">table_name</code>, <code dir="ltr">from_column_name</code>, and <code dir="ltr">step_number</code> parameters</p>
</li>
<li>
<p><code dir="ltr">RENAME_SCHEMA</code> procedure: <code dir="ltr">rule_name</code>, <code dir="ltr">from_schema_name</code>, and <code dir="ltr">step_number</code> parameters</p>
</li>
<li>
<p><code dir="ltr">RENAME_TABLE</code> procedure: <code dir="ltr">rule_name</code>, <code dir="ltr">from_table_name</code>, and <code dir="ltr">step_number</code> parameters</p>
</li>
</ul>
<p>For example, suppose an existing declarative rule-based transformation was creating by running the following procedure:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.RENAME_COLUMN(
    rule_name         =&gt; &#39;departments33&#39;,
    table_name        =&gt; &#39;hr.departments&#39;,
    from_column_name  =&gt; &#39;manager_id&#39;, 
    to_column_name    =&gt; &#39;lead_id&#39;,
    value_type        =&gt; &#39;NEW&#39;,
    step_number       =&gt; 0,
    operation         =&gt; &#39;ADD&#39;);
END;
/
</pre>
<p>Running the following procedure overwrites this existing declarative rule-based transformation:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.RENAME_COLUMN(
    rule_name         =&gt; &#39;departments33&#39;,
    table_name        =&gt; &#39;hr.departments&#39;,
    from_column_name  =&gt; &#39;manager_id&#39;, 
    to_column_name    =&gt; &#39;lead_id&#39;,
    value_type        =&gt; &#39;*&#39;,
    step_number       =&gt; 0,
    operation         =&gt; &#39;ADD&#39;);
END;
/
</pre>
<p>In this case, the <code dir="ltr">value_type</code> parameter in the declarative rule-based transformation was changed from <code dir="ltr">NEW</code> to <code dir="ltr">*</code>. That is, in the original transformation, only new values were renamed in row LCRs, but, in the new transformation, both old and new values are renamed in row LCRs.</p>
</div>
<!-- class="sect2" -->
<a id="BABHHFBD"></a>
<div id="STRMS836" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Removing Declarative Rule-Based Transformations<a id="sthref919"></a><a id="sthref920"></a></h3>
<p>To remove a <a href="strms_glossary.htm#CHDBDEJG"><span class="xrefglossterm">declarative rule-based transformation</span></a> from a <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a>, use the same procedure used to add the transformation, but specify <code dir="ltr">REMOVE</code> for the <code dir="ltr">operation</code> parameter. For example, to remove the transformation added in <a href="#CHDGJBJA">&#34;Adding a Declarative Rule-Based Transformation that Renames a Table&#34;</a>, run the following procedure:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.RENAME_TABLE(
    rule_name       =&gt; &#39;strmadmin.jobs12&#39;,
    from_table_name =&gt; &#39;hr.jobs&#39;,
    to_table_name   =&gt; &#39;hr.assignments&#39;, 
    step_number     =&gt; 0,
    operation       =&gt; &#39;REMOVE&#39;);
END;
/
</pre>
<p>When the <code dir="ltr">operation</code> parameter is set to <code dir="ltr">REMOVE</code> in any of the declarative transformation procedures listed in <a href="#BABDFDEA">&#34;Managing Declarative Rule-Based Transformations&#34;</a>, the other parameters in the procedure are optional, excluding the <code dir="ltr">rule_name</code> parameter. If these optional parameters are set to <code dir="ltr">NULL</code>, then they become wildcards.</p>
<p>The <code dir="ltr">RENAME_TABLE</code> procedure in the previous example behaves in the following way when one or more of the optional parameters are set to <code dir="ltr">NULL</code>:</p>
<div class="inftblruleinformal">
<table class="cellalignment5973" title="Wildcard behavior for the RENAME_TABLE procedure" summary="Displays the behavior of the RENAME_TABLE procedure when various optional parameters are set to NULL" dir="ltr">
<thead>
<tr class="cellalignment5964">
<th class="cellalignment5974" id="r1c1-t7">from_table_name Parameter</th>
<th class="cellalignment5974" id="r1c2-t7">to_table_name Parameter</th>
<th class="cellalignment5974" id="r1c3-t7">step_number Parameter</th>
<th class="cellalignment5974" id="r1c4-t7">Result</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5964">
<td class="cellalignment5970" id="r2c1-t7" headers="r1c1-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r2c1-t7 r1c2-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r2c1-t7 r1c3-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r2c1-t7 r1c4-t7">Remove all rename table transformations for the specified rule</td>
</tr>
<tr class="cellalignment5964">
<td class="cellalignment5970" id="r3c1-t7" headers="r1c1-t7">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r3c1-t7 r1c2-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r3c1-t7 r1c3-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r3c1-t7 r1c4-t7">Remove all rename table transformations with the specified <code dir="ltr">from_table_name</code> for the specified rule</td>
</tr>
<tr class="cellalignment5964">
<td class="cellalignment5970" id="r4c1-t7" headers="r1c1-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r4c1-t7 r1c2-t7">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r4c1-t7 r1c3-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r4c1-t7 r1c4-t7">Remove all rename table transformations with the specified <code dir="ltr">to_table_name</code> for the specified rule</td>
</tr>
<tr class="cellalignment5964">
<td class="cellalignment5970" id="r5c1-t7" headers="r1c1-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r5c1-t7 r1c2-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r5c1-t7 r1c3-t7">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r5c1-t7 r1c4-t7">Remove all rename table transformations with the specified <code dir="ltr">step_number</code> for the specified rule</td>
</tr>
<tr class="cellalignment5964">
<td class="cellalignment5970" id="r6c1-t7" headers="r1c1-t7">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r6c1-t7 r1c2-t7">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r6c1-t7 r1c3-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r6c1-t7 r1c4-t7">Remove all rename table transformations with the specified <code dir="ltr">from_table_name</code> and <code dir="ltr">to_table_name</code> for the specified rule</td>
</tr>
<tr class="cellalignment5964">
<td class="cellalignment5970" id="r7c1-t7" headers="r1c1-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r7c1-t7 r1c2-t7">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r7c1-t7 r1c3-t7">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r7c1-t7 r1c4-t7">Remove all rename table transformations with the specified <code dir="ltr">to_table_name</code> and <code dir="ltr">step_number</code> for the specified rule</td>
</tr>
<tr class="cellalignment5964">
<td class="cellalignment5970" id="r8c1-t7" headers="r1c1-t7">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r8c1-t7 r1c2-t7"><code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r8c1-t7 r1c3-t7">non-<code dir="ltr">NULL</code></td>
<td class="cellalignment5970" headers="r8c1-t7 r1c4-t7">Remove all rename table transformations with the specified <code dir="ltr">from_table_name</code> and <code dir="ltr">step_number</code> for the specified rule</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>The other declarative transformation procedures work in a similar way when optional parameters are set to <code dir="ltr">NULL</code> and the operation parameter is set to <code dir="ltr">REMOVE</code>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABDDFEC"></a>
<div id="STRMS838" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing Custom Rule-Based Transformations<a id="sthref921"></a><a id="sthref922"></a></h2>
<p>Use the <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure in the <code dir="ltr">DBMS_STREAMS_ADM</code> package to set or unset a <a href="strms_glossary.htm#CHDDGIFE"><span class="xrefglossterm">custom rule-based transformation</span></a> for a <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a>. This procedure modifies the rule <a href="strms_glossary.htm#CBACHAJI"><span class="xrefglossterm">action context</span></a> to specify the custom rule-based transformation.</p>
<p>This section provides instructions for completing the following tasks:</p>
<ul>
<li>
<p><a href="#i1006552">Creating a Custom Rule-Based Transformation</a></p>
</li>
<li>
<p><a href="#BABCCAGI">Altering a Custom Rule-Based Transformation</a></p>
</li>
<li>
<p><a href="#i1006866">Unsetting a Custom Rule-Based Transformation</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Do not modify <code dir="ltr">LONG</code>, <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>, LOB, or <code dir="ltr">XMLType</code> column data in an LCR with a custom rule-based transformation.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>There is no automatic locking mechanism for a rule action context. Therefore, ensure that an action context is not updated by two or more sessions at the same time.</p>
</li>
<li>
<p>When you perform custom rule-based transformations on DDL LCRs, you probably need to modify the DDL text in the DDL LCR to match any other modification. For example, if the transformation changes the name of a table in the DDL LCR, then the transformation should change the table name in the DDL text in the same way.</p>
</li>
</ul>
</div>
<a id="i1006552"></a>
<div id="STRMS839" class="sect2">
<h3 class="sect2">Creating a Custom Rule-Based Transformation<a id="sthref923"></a><a id="sthref924"></a></h3>
<p>A <a href="strms_glossary.htm#CHDDGIFE"><span class="xrefglossterm">custom rule-based transformation</span></a> function always operates on one <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>, but it can return one message or many messages. A custom rule-based transformation function that returns one message is a one-to-one transformation function. A one-to-one transformation function must have the following signature:</p>
<pre dir="ltr">FUNCTION <span class="italic">user_function</span> (
   <span class="italic">parameter_name</span>   IN  ANYDATA)
RETURN ANYDATA;
</pre>
<p>Here, <code dir="ltr"><span class="codeinlineitalic">user_function</span></code> stands for the name of the function and <code dir="ltr"><span class="codeinlineitalic">parameter_name</span></code> stands for the name of the parameter passed to the function. The parameter passed to the function is an <code dir="ltr">ANYDATA</code> encapsulation of a message, and the function must return an <code dir="ltr">ANYDATA</code> encapsulation of a message.</p>
<p>A custom rule-based transformation function that can return more than one message is a one-to-many transformation function. A one-to-many transformation function must have the following signature:</p>
<pre dir="ltr">FUNCTION <span class="italic">user_function</span> (
   <span class="italic">parameter_name</span>   IN  ANYDATA)
RETURN STREAMS$_ANYDATA_ARRAY;
</pre>
<p>Here, <code dir="ltr"><span class="codeinlineitalic">user_function</span></code> stands for the name of the function and <code dir="ltr"><span class="codeinlineitalic">parameter_name</span></code> stands for the name of the parameter passed to the function. The parameter passed to the function is an <code dir="ltr">ANYDATA</code> encapsulation of a message, and the function must return an array that contains zero or more <code dir="ltr">ANYDATA</code> encapsulations of a message. If the array contains zero <code dir="ltr">ANYDATA</code> encapsulations of a message, then the original message is discarded. One-to-many transformation functions are supported only for Oracle Streams <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a>es and <a href="strms_glossary.htm#CBACHEDJ"><span class="xrefglossterm">synchronous capture</span></a>s.</p>
<p>The <code dir="ltr">STREAMS$_ANYDATA_ARRAY</code> type is an Oracle-supplied type that has the following definition:</p>
<pre dir="ltr">CREATE OR REPLACE TYPE SYS.STREAMS$_ANYDATA_ARRAY
   AS VARRAY(2147483647) of SYS.ANYDATA
/
</pre>
<p>The following steps outline the general procedure for creating a custom rule-based transformation that uses a one-to-one function:</p>
<ol>
<li>
<p>In SQL*Plus, connect to the database as an administrative user or as the user who will own the PL/SQL function. For this example, connect as <code dir="ltr">hr</code> user.</p>
<p>See <a class="olink ADMIN00102" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=ADMIN00102"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li id="BABJDFJA">
<p>Create a PL/SQL function that performs the transformation.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Ensure that the transformation function is deterministic. A deterministic function always returns the same value for any given set of input argument values, now and in the future. Also, ensure that the transformation function does not raise any exceptions. Exceptions can cause a capture process, <a href="strms_glossary.htm#CHDEICIC"><span class="xrefglossterm">propagation</span></a>, or <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> to become disabled, and you will need to correct the transformation function before the capture process, propagation, or apply process can proceed. Exceptions raised by a custom rule-based transformation for a <a href="strms_glossary.htm#CBACHEDJ"><span class="xrefglossterm">synchronous capture</span></a> aborts the DML statement that caused the exception. Exceptions raised by a custom rule-based transformation for a <a href="strms_glossary.htm#CHDDGHHB"><span class="xrefglossterm">messaging client</span></a> can prevent the messaging client from dequeuing messages.</div>
<p><a id="sthref925"></a><a id="sthref926"></a><a id="sthref927"></a><a id="sthref928"></a><a id="sthref929"></a>The following example creates a function called <code dir="ltr">executive_to_management</code> in the <code dir="ltr">hr</code> schema that changes the value in the <code dir="ltr">department_name</code> column of the <code dir="ltr">departments</code> table from <code dir="ltr">Executive</code> to <code dir="ltr">Management</code>. Such a transformation might be necessary if one branch in a company uses a different name for this department.</p>
<pre dir="ltr">CREATE OR REPLACE FUNCTION hr.executive_to_management(in_any IN ANYDATA) 
RETURN ANYDATA
IS
  lcr SYS.LCR$_ROW_RECORD;
  rc  NUMBER;
  ob_owner VARCHAR2(30);
  ob_name VARCHAR2(30);
  dep_value_anydata ANYDATA;
  dep_value_varchar2 VARCHAR2(30);
BEGIN
  -- Get the type of object
  -- Check if the object type is SYS.LCR$_ROW_RECORD
  IF in_any.GETTYPENAME=&#39;SYS.LCR$_ROW_RECORD&#39; THEN
    -- Put the row LCR into lcr
    rc := in_any.GETOBJECT(lcr);
    -- Get the object owner and name
    ob_owner := lcr.GET_OBJECT_OWNER();
    ob_name := lcr.GET_OBJECT_NAME();
    -- Check for the hr.departments table
    IF ob_owner = &#39;HR&#39; AND ob_name = &#39;DEPARTMENTS&#39; THEN
      -- Get the old value of the department_name column in the LCR
      dep_value_anydata := lcr.GET_VALUE(&#39;old&#39;,&#39;DEPARTMENT_NAME&#39;);
      IF dep_value_anydata IS NOT NULL THEN
        -- Put the column value into dep_value_varchar2
        rc := dep_value_anydata.GETVARCHAR2(dep_value_varchar2);
        -- Change a value of Executive in the column to Management
        IF (dep_value_varchar2 = &#39;Executive&#39;) THEN
          lcr.SET_VALUE(&#39;OLD&#39;,&#39;DEPARTMENT_NAME&#39;,
            ANYDATA.CONVERTVARCHAR2(&#39;Management&#39;));
        END IF;
      END IF;
      -- Get the new value of the department_name column in the LCR
      dep_value_anydata := lcr.GET_VALUE(&#39;new&#39;, &#39;DEPARTMENT_NAME&#39;, &#39;n&#39;);
      IF dep_value_anydata IS NOT NULL THEN
        -- Put the column value into dep_value_varchar2
        rc := dep_value_anydata.GETVARCHAR2(dep_value_varchar2);
        -- Change a value of Executive in the column to Management
        IF (dep_value_varchar2 = &#39;Executive&#39;) THEN
          lcr.SET_VALUE(&#39;new&#39;,&#39;DEPARTMENT_NAME&#39;,
            ANYDATA.CONVERTVARCHAR2(&#39;Management&#39;));
        END IF;
      END IF;
    END IF;
    RETURN ANYDATA.CONVERTOBJECT(lcr);
  END IF;
RETURN in_any;
END;
/
</pre></li>
<li>
<p>Grant the Oracle Streams administrator <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">hr.executive_to_management</code> function.</p>
<pre dir="ltr">GRANT EXECUTE ON hr.executive_to_management TO strmadmin;
</pre></li>
<li>
<p>Connect to the database as the Oracle Streams administrator.</p>
</li>
<li>
<p>Create <a href="strms_glossary.htm#CHDBCGAG"><span class="xrefglossterm">subset rule</span></a>s for DML operations on the <code dir="ltr">hr.departments</code> table. The subset rules will use the transformation created in Step <a href="#BABJDFJA">2</a>.</p>
<p>Subset rules are not required to use custom rule-based transformations. This example uses subset rules to illustrate an <a href="strms_glossary.htm#CBACHAJI"><span class="xrefglossterm">action context</span></a> with more than one name-value pair. This example creates subset rules for an apply process on a database named <code dir="ltr">dbs1.example.com</code>. These rules evaluate to <code dir="ltr">TRUE</code> when an LCR contains a DML change to a row with a <code dir="ltr">location_id</code> of <code dir="ltr">1700</code> in the <code dir="ltr">hr.departments</code> table. This example assumes that an <code dir="ltr">ANYDATA</code> queue named <code dir="ltr">streams_queue</code> already exists in the database.</p>
<p>To create these rules, run the following <code dir="ltr">ADD_SUBSET_RULES</code> procedure:</p>
<pre dir="ltr">BEGIN 
  DBMS_STREAMS_ADM.ADD_SUBSET_RULES(
    table_name               =&gt;  &#39;hr.departments&#39;,
    dml_condition            =&gt;  &#39;location_id=1700&#39;,
    streams_type             =&gt;  &#39;apply&#39;,
    streams_name             =&gt;  &#39;strm01_apply&#39;,
    queue_name               =&gt;  &#39;streams_queue&#39;,
    include_tagged_lcr       =&gt;  FALSE,
    source_database          =&gt;  &#39;dbs1.example.com&#39;);
END;
/
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>To create the rule and the <a href="strms_glossary.htm#CHDCHGGB"><span class="xrefglossterm">rule set</span></a>, the Oracle Streams administrator must have <code dir="ltr">CREATE_RULE_SET_OBJ</code> (or&nbsp;<code dir="ltr">CREATE_ANYRULE_SET_OBJ</code>) and <code dir="ltr">CREATE_RULE_OBJ</code> (or&nbsp;<code dir="ltr">CREATE_ANY_RULE_OBJ</code>) system privileges. You grant these privileges using the <code dir="ltr">GRANT_SYSTEM_PRIVILEGE</code> procedure in the <code dir="ltr">DBMS_RULE_ADM</code> package.</p>
</li>
<li>
<p>This example creates the rule using the <code dir="ltr">DBMS_STREAMS_ADM</code> package. Alternatively, you can create a rule, add it to a rule set, and specify a custom rule-based transformation using the <code dir="ltr">DBMS_RULE_ADM</code> package. <a class="olink STREX102" href="../STREX/repsingdemo.htm#STREX102"><span class="italic">Oracle Streams Extended Examples</span></a> contains an example of this procedure.</p>
</li>
<li>
<p>The <code dir="ltr">ADD_SUBSET_RULES</code> procedure adds the subset rules to the <a href="strms_glossary.htm#CHDEEDIJ"><span class="xrefglossterm">positive rule set</span></a> for the apply process.</p>
</li>
</ul>
</div>
</li>
<li>
<p><a id="sthref930"></a><a id="sthref931"></a><a id="sthref932"></a>Determine the names of the system-created <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a>s by running the following query:</p>
<pre dir="ltr">SELECT RULE_NAME, SUBSETTING_OPERATION FROM DBA_STREAMS_RULES 
  WHERE OBJECT_NAME=&#39;DEPARTMENTS&#39; AND DML_CONDITION=&#39;location_id=1700&#39;;
</pre>
<p>This query displays output similar to the following:</p>
<pre dir="ltr">RULE_NAME                      SUBSET
------------------------------ ------
DEPARTMENTS5                   INSERT
DEPARTMENTS6                   UPDATE
DEPARTMENTS7                   DELETE
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also obtain this information using the <code dir="ltr">OUT</code> parameters when you run <code dir="ltr">ADD_SUBSET_RULES</code>.</div>
<p>Because these are subset rules, two of them contain a non-<code dir="ltr">NULL</code> action context that performs an internal transformation:</p>
<ul>
<li>
<p>The rule with a subsetting condition of <code dir="ltr">INSERT</code> contains an internal transformation that converts updates into inserts if the update changes the value of the <code dir="ltr">location_id</code> column to <code dir="ltr">1700</code> from some other value. The internal transformation does not affect inserts.</p>
</li>
<li>
<p>The rule with a subsetting condition of <code dir="ltr">DELETE</code> contains an internal transformation that converts updates into deletes if the update changes the value of the <code dir="ltr">location_id</code> column from <code dir="ltr">1700</code> to a different value. The internal transformation does not affect deletes.</p>
</li>
</ul>
<p>In this example, you can confirm that the rules <code dir="ltr">DEPARTMENTS5</code> and <code dir="ltr">DEPARTMENTS7</code> have a non-<code dir="ltr">NULL</code> action context, and that the rule <code dir="ltr">DEPARTMENTS6</code> has a <code dir="ltr">NULL</code> action context, by running the following query:</p>
<pre dir="ltr">COLUMN RULE_NAME HEADING &#39;Rule Name&#39; FORMAT A13
COLUMN ACTION_CONTEXT_NAME HEADING &#39;Action Context Name&#39; FORMAT A27
COLUMN ACTION_CONTEXT_VALUE HEADING &#39;Action Context Value&#39; FORMAT A30

SELECT 
    RULE_NAME,
    AC.NVN_NAME ACTION_CONTEXT_NAME, 
    AC.NVN_VALUE.ACCESSVARCHAR2() ACTION_CONTEXT_VALUE
  FROM DBA_RULES R, TABLE(R.RULE_ACTION_CONTEXT.ACTX_LIST) AC
  WHERE RULE_NAME IN (&#39;DEPARTMENTS5&#39;,&#39;DEPARTMENTS6&#39;,&#39;DEPARTMENTS7&#39;);
</pre>
<p>This query displays output similar to the following:</p>
<pre dir="ltr">Rule Name     Action Context Name         Action Context Value
------------- --------------------------- ------------------------------
DEPARTMENTS5  STREAMS$_ROW_SUBSET         INSERT
DEPARTMENTS7  STREAMS$_ROW_SUBSET         DELETE
</pre>
<p>The <code dir="ltr">DEPARTMENTS6</code> rule does not appear in the output because its action context is <code dir="ltr">NULL</code>.</p>
</li>
<li id="i1006712">
<p><a id="sthref933"></a><a id="sthref934"></a><a id="sthref935"></a><a id="sthref936"></a>Set the custom rule-based transformation for each subset rule by running the <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure. This step runs this procedure for each rule and specifies <code dir="ltr">hr.executive_to_management</code> as the transformation function. Ensure that no other users are modifying the action context at the same time.</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.SET_RULE_TRANSFORM_FUNCTION(
    rule_name           =&gt; &#39;departments5&#39;,
    transform_function  =&gt; &#39;hr.executive_to_management&#39;);
  DBMS_STREAMS_ADM.SET_RULE_TRANSFORM_FUNCTION(
    rule_name           =&gt; &#39;departments6&#39;,
    transform_function  =&gt; &#39;hr.executive_to_management&#39;);
  DBMS_STREAMS_ADM.SET_RULE_TRANSFORM_FUNCTION(
    rule_name           =&gt; &#39;departments7&#39;,
    transform_function  =&gt; &#39;hr.executive_to_management&#39;);    
END;
/
</pre>
<p>Specifically, this procedure adds a name-value pair to each rule action context that specifies the name <code dir="ltr">STREAMS$_TRANSFORM_FUNCTION</code> and a value that is an <code dir="ltr">ANYDATA</code> instance containing the name of the PL/SQL function that performs the transformation. In this case, the transformation function is <code dir="ltr">hr.executive_to_management</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> does not verify that the specified transformation function exists. If the function does not exist, then an error is raised when an Oracle Streams process or job tries to invoke the transformation function.</div>
</li>
</ol>
<p>Now, if you run the query that displays the name-value pairs in the action context for these rules, each rule, including the <code dir="ltr">DEPARTMENTS6</code> rule, shows the name-value pair for the custom rule-based transformation:</p>
<pre dir="ltr">SELECT 
    RULE_NAME,
    AC.NVN_NAME ACTION_CONTEXT_NAME, 
    AC.NVN_VALUE.ACCESSVARCHAR2() ACTION_CONTEXT_VALUE
  FROM DBA_RULES R, TABLE(R.RULE_ACTION_CONTEXT.ACTX_LIST) AC
  WHERE RULE_NAME IN (&#39;DEPARTMENTS5&#39;,&#39;DEPARTMENTS6&#39;,&#39;DEPARTMENTS7&#39;);
</pre>
<p>This query displays output similar to the following:</p>
<pre dir="ltr">Rule Name     Action Context Name         Action Context Value
------------- --------------------------- ------------------------------
DEPARTMENTS5  STREAMS$_ROW_SUBSET         INSERT
DEPARTMENTS5  STREAMS$_TRANSFORM_FUNCTION &#34;HR&#34;.&#34;EXECUTIVE_TO_MANAGEMENT&#34;
DEPARTMENTS6  STREAMS$_TRANSFORM_FUNCTION &#34;HR&#34;.&#34;EXECUTIVE_TO_MANAGEMENT&#34;
DEPARTMENTS7  STREAMS$_ROW_SUBSET         DELETE
DEPARTMENTS7  STREAMS$_TRANSFORM_FUNCTION &#34;HR&#34;.&#34;EXECUTIVE_TO_MANAGEMENT&#34;
</pre>
<p>You can also view transformation functions using the <code dir="ltr">DBA_STREAMS_TRANSFORM_FUNCTION</code> data dictionary view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about <a class="olink ARPLS591" href="../ARPLS/d_streams_adm.htm#ARPLS591">the <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code></a> and <a class="olink ARPLS319" href="../ARPLS/t_rule.htm#ARPLS319">the rule types</a> used in this example</div>
</div>
<!-- class="sect2" -->
<a id="BABCCAGI"></a>
<div id="STRMS840" class="sect2">
<h3 class="sect2">Altering a Custom Rule-Based Transformation<a id="sthref937"></a><a id="sthref938"></a></h3>
<p>To alter a <a href="strms_glossary.htm#CHDDGIFE"><span class="xrefglossterm">custom rule-based transformation</span></a>, you can either edit the transformation function or run the <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure to specify a different transformation function. This example runs the <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure to specify a different transformation function. The <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure modifies the <a href="strms_glossary.htm#CBACHAJI"><span class="xrefglossterm">action context</span></a> of a specified <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a> to run a different transformation function. If you edit the transformation function itself, then you do not need to run this procedure.</p>
<p>This example alters a custom rule-based transformation for rule <code dir="ltr">DEPARTMENTS5</code> by changing the transformation function from <code dir="ltr">hr.execute_to_management</code> to <code dir="ltr">hr.executive_to_lead</code>. The <code dir="ltr">hr.execute_to_management</code> rule-based transformation was added to the <code dir="ltr">DEPARTMENTS5</code> rule in the example in <a href="#i1006552">&#34;Creating a Custom Rule-Based Transformation&#34;</a>.</p>
<p>In Oracle Streams, <a href="strms_glossary.htm#CHDBCGAG"><span class="xrefglossterm">subset rule</span></a>s use name-value pairs in an action context to perform internal transformations that convert <code dir="ltr">UPDATE</code> operations into <code dir="ltr">INSERT</code> and <code dir="ltr">DELETE</code> operations in some situations. Such a conversion is called a <a href="strms_glossary.htm#CHDJICJC"><span class="xrefglossterm">row migration</span></a>. The <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure preserves the name-value pairs that perform row migrations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_rules.htm#i1007704">&#34;Row Migration and Subset Rules&#34;</a> for more information about row migration</div>
<p>Complete the following steps to alter a custom rule-based transformation:</p>
<a id="i1006823"></a>
<ol>
<li id="BABHIBDI">
<p>You can view all of the name-value pairs in the action context of a rule by performing the following query:</p>
<pre dir="ltr">COLUMN ACTION_CONTEXT_NAME HEADING &#39;Action Context Name&#39; FORMAT A30
COLUMN ACTION_CONTEXT_VALUE HEADING &#39;Action Context Value&#39; FORMAT A30

SELECT 
    AC.NVN_NAME ACTION_CONTEXT_NAME, 
    AC.NVN_VALUE.ACCESSVARCHAR2() ACTION_CONTEXT_VALUE
  FROM DBA_RULES R, TABLE(R.RULE_ACTION_CONTEXT.ACTX_LIST) AC
  WHERE RULE_NAME = &#39;DEPARTMENTS5&#39;;
</pre>
<p>This query displays output similar to the following:</p>
<pre dir="ltr">Action Context Name            Action Context Value
------------------------------ ------------------------------
STREAMS$_ROW_SUBSET            INSERT
STREAMS$_TRANSFORM_FUNCTION    &#34;HR&#34;.&#34;EXECUTIVE_TO_MANAGEMENT&#34;
</pre></li>
<li id="i1007174">
<p><a id="sthref939"></a><a id="sthref940"></a><a id="sthref941"></a><a id="sthref942"></a><a id="sthref943"></a><a id="sthref944"></a><a id="sthref945"></a><a id="sthref946"></a><a id="sthref947"></a>Run the <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure to set the transformation function to <code dir="ltr">executive_to_lead</code> for the <code dir="ltr">DEPARTMENTS5</code> rule. In this example, it is assumed that the new transformation function is <code dir="ltr">hr.executive_to_lead</code> and that the <code dir="ltr">strmadmin</code> user has <code dir="ltr">EXECUTE</code> privilege&nbsp;on it.</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.SET_RULE_TRANSFORM_FUNCTION(
    rule_name           =&gt; &#39;departments5&#39;,
    transform_function  =&gt; &#39;hr.executive_to_lead&#39;);
END;
/  
</pre>
<p>To ensure that the transformation function was altered properly, you can rerun the query in Step <a href="#BABHIBDI">1</a>. You should alter the action context for the <code dir="ltr">DEPARTMENTS6</code> and <code dir="ltr">DEPARTMENTS7</code> rules in a similar way to keep the three subset rules consistent.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> does not verify that the specified transformation function exists. If the function does not exist, then an error is raised when an Oracle Streams process or job tries to invoke the transformation function.</p>
</li>
<li>
<p>If a custom rule-based transformation function is modified at the same time that an <a href="strms_glossary.htm#CHDDDJGJ"><span class="xrefglossterm">Oracle Streams client</span></a> tries to access it, then an error might be raised.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1006866"></a>
<div id="STRMS843" class="sect2">
<h3 class="sect2">Unsetting a Custom Rule-Based Transformation<a id="sthref948"></a><a id="sthref949"></a><a id="sthref950"></a><a id="sthref951"></a><a id="sthref952"></a></h3>
<p>To unset a <a href="strms_glossary.htm#CHDDGIFE"><span class="xrefglossterm">custom rule-based transformation</span></a> from a <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a>, run the <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure and specify <code dir="ltr">NULL</code> for the transformation function. Specifying <code dir="ltr">NULL</code> unsets the name-value pair that specifies the custom rule-based transformation in the rule <a href="strms_glossary.htm#CBACHAJI"><span class="xrefglossterm">action context</span></a>. This example unsets a custom rule-based transformation for rule <code dir="ltr">DEPARTMENTS5</code>. This transformation was added to the <code dir="ltr">DEPARTMENTS5</code> rule in the example in <a href="#i1006552">&#34;Creating a Custom Rule-Based Transformation&#34;</a>.</p>
<p>In Oracle Streams, <a href="strms_glossary.htm#CHDBCGAG"><span class="xrefglossterm">subset rule</span></a>s use name-value pairs in an action context to perform internal transformations that convert <code dir="ltr">UPDATE</code> operations into <code dir="ltr">INSERT</code> and <code dir="ltr">DELETE</code> operations in some situations. Such a conversion is called a <a href="strms_glossary.htm#CHDJICJC"><span class="xrefglossterm">row migration</span></a>. The <code dir="ltr">SET_RULE_TRANSFORM_FUNCTION</code> procedure preserves the name-value pairs that perform row migrations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_rules.htm#i1007704">&#34;Row Migration and Subset Rules&#34;</a> for more information about row migration</div>
<p>Run the following procedure to unset the custom rule-based transformation for rule <code dir="ltr">DEPARTMENTS5</code>:</p>
<pre dir="ltr">BEGIN
  DBMS_STREAMS_ADM.SET_RULE_TRANSFORM_FUNCTION(
    rule_name           =&gt; &#39;departments5&#39;,
    transform_function  =&gt; NULL);
END;
/
</pre>
<p>To ensure that the transformation function was unset, you can run the query in Step <a href="#BABHIBDI">1</a>. You should alter the action context for the <code dir="ltr">DEPARTMENTS6</code> and <code dir="ltr">DEPARTMENTS7</code> rules in a similar way to keep the three subset rules consistent.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_rules.htm#i1007704">&#34;Row Migration and Subset Rules&#34;</a> for more information about row migration</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5963">
<tr>
<td class="cellalignment5970">
<table class="cellalignment5968">
<tr>
<td class="cellalignment5967"><a href="strms_mrules.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5967"><a href="strms_change_table.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5972">
<table class="cellalignment5966">
<tr>
<td class="cellalignment5967"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5967"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5967"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5967"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5967"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5967"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>